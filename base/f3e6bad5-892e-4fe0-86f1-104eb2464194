{
    "title": "Third Time Getting Lucky",
    "pages": [
        "This is a girl/boy first-time love story, despite initial appearances. It alludes to previous non-consensual sex having happened, but does not go into any detail. The story is complete.\n\n*\n\nMost first-time stories go like this: boy meets girl, starting from innocence of anything beyond a kiss, and eventually that same girl likes the boy, the boy and girl get it together, enjoy various sexual acts, and eventually have sex when they have an opportunity. \n\nReal life? It's often more complicated than that. \n\n___________________________________\n\nPart 1 of 3\n\nSeptember, 1993. \n\nA world before mobile phones, satnavs, or social media. Only the earliest glimmerings of the Internet existed. \n\nI'd recently done my A-levels, turned eighteen, and left school. My plans to work abroad for a gap year before university had fallen through, followed by my back-up plan and the back-up back-up plan also collapsing into recession. Eventually, I'd been accepted for a scheme with a multinational engineering firm. \n\nSpending a year before university doing computer programming for electronic engineers in a suburban office didn't sound very exciting, but it would pay well and look good on the CV. For two further reasons, it turned out to be the best decision I ever made.\n\nFirstly, there were 80 students around the country, based in two small cities a few hours apart. Starting with an intense training month, we all got to know each other incredibly well, both in person in our own towns, and on weekends, the guys in the other locations. It was a great change, suddenly going from an all-girls school and my rural dependence on my parents to drive me anywhere, to both having a social life and being able to organise it myself.\n\nI was never cool in school. I had my group of friends, and the cool kids didn't dislike me, but I was definitely considered a nerd. Geek, I'd say; geeks are nerds who wash! I couldn't really dispute being a geek; ending up coding and planning to read Engineering at college was proof of that, even before anyone found out about my loves for science fiction, that defunct TV series Doctor Who, and this new author called Terry Pratchett who was so more than the mere fantasy writer critics dismissed him as. But it was worse thanks to me being severely deaf.\n\nOne-to-one, I can understand people pretty well, lip-reading them with support from my hearing aids, though if they don't have English as their first language, or if there's background noise, my comprehension can plummet to zero. So in a group, I'd be unable to follow jokey conversations, especially at the cool noisy parties, or anywhere with music playing, and this meant I came across as even more of a geek than I was. Am. \n\nWhen I said guys on the gap year, I meant guys. Men. Eighty students; only eight of us women. That's Engineering for you. As my fabulous school Physics teacher had said, when she was at Imperial College in the Sixties, she might have been the only woman among four hundred lads, but she'd never had to buy her own lunch. Her prediction for the mid-Nineties was that I'd have maybe three other girls in my lectures, but I'd always have to buy my own lunch!\n\nThis sudden move to a mainly-male environment, a year earlier than expected, was quite a shock. I'd been shy at school, and I was terrified of boys even without my inexperience of dealing with them. \n\nBut that didn't really matter, because I was convinced I was gay. \n\nI'd repressed that as much as I could -- Section 28 and the general local feeling made it imperative -- and I got much better exam results than I might otherwise have done, but in all my life it had only been women who turned me on at all. So I was pretty sure men wouldn't do it for me. \n\nAnd suddenly at least 50 lads were trying their hardest to persuade me otherwise, interested in talking to me, all very politely, friendly, but hoping for more. Despite Mrs Mottisham's predictions, they were all very generous at buying us girls drinks! \n\nI was a perfectly pleasant-looking 18-year-old, but nothing out of the ordinary -- dark blonde hair, long and slightly frizzy, average figure, average breasts, often mistaken for other women. The attention did wonders for the ego and my confidence, I have to admit, especially as, for all their bluster, they were a nice bunch of rather awkward guys. That's geeks for you. So given that, I slowly started to consider whether I could be at all interested in any of them.\n\nThe second reason why this programme was such a great choice for me was that, thanks to an early version of instant messaging, we could chat during work to the guys in the other locations, or even just across the office. The attention was intoxicating, but the messages were even better. It got rid of the isolation from me being deaf. \n\nI was in a mainstream school and aced it academically, but whilst I was OK socialising with a couple friends at a time, any time meeting new people at parties or anywhere else loud, I couldn't handle it. I'd come across as an idiot and never catch anyone's name. I love conferences, where people have name badges! But suddenly, for the first time, I could chat just as easily as anyone else, dazzling them with my wit rather than repeatedly pleading for people to repeat things and being told 'never mind'. \n\nI loved it.\n\nThe messaging program was called Say. So we could type SAY and someone's staff number (and soon, a nickname instead), and a message. Or SAY ALL, to chat to all the students. \n\nSuddenly I could join conversations on an equal footing. Better than equal, as I could type quickly and accurately in a way most of the lads couldn't. That program on the BBC Micro Welcome Disk, KEYBRD, had got me touch-typing from an early age! \n\nI revelled in being able to make quick interjections and well-timed sarcastic comments. I could even be the centre of a conversation and conduct multiple private conversations at once without getting mixed up. \n\nLike an air traffic controller, I could juggle all my chats and never accidentally crash a comment into the wrong dialogue.\n\nKAREN: SAY ALL Takes one to know one!\n\nKAREN: SAY ALL that's what she said...\n\nKAREN: SAY ALEC so what did she say to that?\n\nBEN: SAY ALL Karen ha bloody ha\n\nALEC: SAY KAREN nothing. Pretty sure she's not interested.\n\nTOM: SAY ALL Can't fool Karen that easily Ben!\n\nOf course, when discussing our online conversations, it was obligatory to put on the hokiest cowboy accent one could muster. \"Say, Karen, that was one mighty fine put-down you shot that dude Ben with! You go, pardner!\" \n\nIt was interesting who else loved the message system. Some of the coolest guys in my office didn't use it much -- their typing was slow or they just didn't see the point. They claimed to be too busy, of course. Some tried creating very different online personas, but found they couldn't keep them up. Soon I could identify anyone by their writing style alone. \n\nSome people had embarrassing moments when they sent to 'all' rather than just who they'd meant; I never did, even when I was carrying on six private conversations as well as the general mass chat filling up my screen. No scrolling nor colour-coding in those days; once the screen was full you hit Enter and it would clear to be filled again.\n\nObviously, being a bunch of eighteen-year-olds, people flirted. By the time initial training was over, two of the other three girls in my Southern centre were paired off. Two girls from our Northern base, south of Manchester, had boyfriends from home already. Of the other two women there, one was a very loud lesbian of the stereotypical PE teacher type, so repulsed me completely. \n\nI've never been into sport. School PE usually involved me skiving off, hiding; mainly to do something useful like homework, but also so as to avoid teachers shouting abuse. They said I was a useless fucking spazz, back when that was acceptable language to use at kids. I do have what we now call mild physical disabilities, only really noticeable when forced to do sport.\n\nSometimes I wobble when walking, and sometimes my arms and legs jerk a bit and won't do quite what I ask. I'm safe to cross a road, though it won't always be elegant, but I'm clumsy. People would accuse me of being drunk when I wasn't, or, back then, simply call me lazy (my mum, various teachers) and crap (PE teachers and other girls at school who resented me being assigned to their PE team, ruining their totally meaningless scores for half an hour). \n\nThe last girl on our programme, Annie, was pretty quiet. Self-contained, I thought. She had made it clear she wasn't going to go out with any of her colleagues, much to the boys' disappointment. \n\nShe was petite, with dark chestnut-brown hair and loads of it, and she hit my boxes completely. I really, really wanted to touch any part of her pale skin. I hadn't really got much beyond that as a plan. I'd snogged a few boys over the last couple years because it was socially expected, but I was sure there would be 'transferable skills' there, as all our tutors emphasised the importance of.\n\nNot that I had any more hope of chatting her up than the lads did. I didn't really have any experience in the matter. While I might enjoy looking at certain of my schoolmates and teachers, I'd never dared do anything about it. In any case, I'd known my mates since we were eleven or younger -- thinking about doing anything with them would be like doing it with my sister! No way! \n\nIn the couple months since leaving school, I'd managed a few daring smiles at cute women in Camden. Once, I'd got one back, with a \"Sorry, I'm taken, gorgeous!\" \n\nThat really was about it. \n\nI'd tried to get Annie to come down to us -- just beyond Reading, really, not that far -- for a party before and failed, but I felt I owed it to both of us to try again. Maybe she was just shy.\n\nKAREN: SAY ANNIE Come to our house party this weekend! You can get a lift from Steve or Davy?\n\nANNIE: SAY KAREN I could. I'd drive by myself though.\n\nKAREN: SAY ANNIE How come? Why not save the petrol?\n\nANNIE: SAY KAREN Three hours in traffic of them trying to seduce me? I think not. \n\nANNIE: SAY KAREN I keep turning them down. And they keep wanting to know if I'm gay. It gets wearing.\n\nKAREN: SAY ANNIE Are you?\n\nI kept typing.\n\nKAREN: SAY ANNIE Cos if so do you want a date?\n\nDon't know what came over me, but for once my fingers had moved faster than my brain, and had hit Enter. \n\nThere was no taking it back. \n\nI refreshed the screen to clear away my rash words, before anyone could look over my shoulder and see the evil green messages.\n\nThe seconds before the reply were some of the scariest in my life. \n\nI spent that evening hoping she really had installed the update to negate the previous 'update', which had copied all private messages to my housemate Charlie, so we could all have a laugh each night. Data Protection law hadn't been written yet!\n\nWe'd stopped bothering after a couple months and then 'fessed up, but I wouldn't have been surprised if someone on the programme -- my housemates Alec or Charlie, most likely -- was still somehow listening in occasionally.\n\nThe screen refreshed itself with only one line of lurid lime text at the top.\n\nANNIE: SAY KAREN OK. What's on at the cinema near you on Friday night?\n\nIt took some arguing with said housemates that I wasn't going to be around for much of the Friday night party, as Annie and I were going to see a movie. \n\nIt might have been the fact that we were going to watch a Merchant-Ivory film that they found hard to believe. Apparently I didn't look like the costume-drama sort. 'Not middle-aged,' Charlie said.\n\nCertainly, no-one even considered it might be a date. Such things just weren't on people's radar back then.\n\nAnnie arrived shortly after I'd got home from work, declined a cup of tea, and we set off to walk across town to the cinema. It wasn't that we were really historical drama fans; nothing else was on and it looked like we might both have a fondness for Helena Bonham Carter. \n\nHer finger traced my hand as we tramped through autumn leaves. In the park, no-one around, I got to hold her hand. This was the early Nineties -- a much scarier time for anyone queer. She smiled at me and we got chatting in person, properly, for the first time.\n\nI decided I definitely liked her. We got tickets and ice-creams and sat in the deep plush velour seats. She offered me a bite of her ice-cream and I took her spoon into my mouth, sucking it. She laughed and let me do the same with her finger as the lights went down. The film captivated us for a while as we held hands, stroking skin nervously in the dark. \n\nAfter an hour or so, the plot got slower. I wanted to kiss her and leant over as far as I could, hoping she might reciprocate.\n\nShe sort of responded, but I could feel her holding back. Possibly her heart wasn't in it, more likely her head let 'I dare not' wait upon 'I would' and she was too scared, especially in a new-town suburb where fights outside pubs were typical Friday night entertainment and beating up dykes would be an exciting extra. Though as the film dragged on, she got more into the kiss. \n\nBy two hours in, she was certainly enjoying herself as much as I was. She even put her hand into my hair and pulled my head towards her, to deepen the kiss into a powerful snog, to which I was very happy to acquiesce. Once the film ended, we left hand-in-hand until we noticed crowds on the street, triggering us to reluctantly but urgently separate our palms. She gave me a big hug as we got back to mine, and a peck on the cheek which she then changed into a brief snog, but claimed she had to get home.\n\nStill, a successful first date, I thought.\n\nExcept that she never came to any more parties and didn't really socialise with the lads on her scheme. Her messages to me were first apologetic, but over the next month simply dwindled away to nothing, occasionally citing an increased workload. She had friends near where she lived, so I suspected she was too scared to go out with a woman, certainly one who was a colleague. \n\nI never saw her again.\n\nPart 2 of 3\n\nBy this point, late October, I was about the only single woman left on the gap year programme. I had to admit, I hugely enjoyed the attention -- most of the lads were decent guys, too shy to be too obnoxious, too geeky to have an ego problem -- and generally very happy to have me as a friend, though several made it clear they'd love more if I happened to be interested. I didn't think I was. \n\nThere had been ones that had piqued my interest; the one with the seductive Scottish accent who had rapidly proved boring and had rubbery lips; the one with an Irish accent even more seductive, but too much of an alcohol problem even by UK student standards. \n\nBut, given that women were going to be a wash-out for the next year -- practically all the staff of the company were male, with the exception of a few grandmotherly secretaries -- I started to consider in earnest whether I could be interested in men. \n\nMight it be possible?\n\nIn particular, there had been the very good-looking and lovely one -- Ben -- who had clearly been dithering between asking out me or my friend Delia, which had caused both of us much amusement when pointed out by everyone else. \n\nEventually Ben had made a move on me. I'd turned him down, solely because he was stupidly drunk at the time. Possibly, also, a bit because I knew about his swithering between me and Delia for weeks, and that half the guys had bets on the outcome. \n\nI'd then nudged Ben towards Delia despite the fact we were all about to move in together -- they're still happily married, twenty years later! When Ben had shrugged off my disinterest and did immediately end up in a relationship with Delia (Charlie and Finn split their winnings with me, gained from my insider information!), I realised I wasn't upset at all, and decided very rapidly that his style of intense romance would have annoyed me intensely. We got on well though. The three of us had found a cheap but solid house to rent, and two other guys to share it with us. \n\nBen wasn't a stupid boy, much as he pretended to be a daft type from the Welsh Valleys. He had rapidly clocked that I rather fancied Delia, as well as himself to some degree, so had even tried to persuade Delia to try kissing me or more, despite my insistent protests that she wouldn't be interested. Luckily, she found all this hilarious, so she and I had much fun over the next few years flirting outrageously with each other, mainly to wind the other guys up. \n\nA lot of students thought it would be appropriate if I got together with Charlie, who shared a room with Ben in the house we rented. The online chat buzzed with their excitement. Delia and I each had our own rooms; Delia's condition of moving in as part of a 'house couple' who had only been together for three weeks. A remarkably sensible woman, Delia.\n\nCharlie was a pleasant chap, and very good-looking, all tall, slender and elegantly dark, but just didn't do it for me. \n\nI soon twigged that one reason for that was that Charlie was homophobic -- in the sense of absolutely bloody terrified, rather than disgust, not that that made me feel much better. \n\nHe'd only found out about the suggestion we get together long after I'd made it clear to all and sundry that said plan was never going to go anywhere. He'd been amusingly horrified. I've never been quite sure whether that was because he thought I might have been interested, or because I wasn't and he would have been!\n\nOver time, I got chatting a lot with certain lads, some during our coffee and lunch breaks, others online. My efforts straining to hear people meant that I ended up in lots of one-to-one conversations, often out in corridors or kitchens or other secluded spaces. Which added grist to the rumour mill, where I was linked with almost every chap going. But it also meant I found out who was secretly gay, whose gran was dying, who was being treated badly by their manager, who was struggling with their workload.\n\nWe spent much of our working hours using Say to organise our social lives. As one of the top users of Say, I put in much of the effort into ensuring there was a party every weekend, in one city or the other, usually in a shared rented house; occasionally at the homes of the few lads who had particularly obliging parents. And large houses.\n\nI'd never thought of myself before as a party person, but I now revelled in these nights where I never lacked for male attention. The lads were clearly competing with each other to be as charming to me as possible. I got the impression my housemates -- Ben, Delia and Charlie, anyway, though possibly not the fourth -- were looking out for me, to ensure no-one took advantage as I accepted all the glasses of wine, the cocktails, the liqueurs... Mrs Mottisham really was totally wrong about men not buying for women!\n\nThe other housemate, Alec, had repulsed me when I first met him, but then persuaded me and the others that he was merely a gregarious larger-than-life personality who would be fun to live with. He was, generally, but somehow we sensed actually our first impressions had been correct. We concluded his 'life and soul of the party' was all an act, especially when he went quiet, claiming to be taking 'a holiday from his personality'; what anyone else would call sulking. \n\nThe four of us became wary around him, sensing that his japes like picking girls up over his shoulder and running off with them weren't actually funny, his jokes suggested he didn't care about a woman's consent, and he generally had an entitlement complex -- resulting in a huge strop when none of us felt the need to contribute to his car's repairs. After that, we left him alone in his room at the far end of the upstairs corridor. ",
        "Over time, it came out that Alec thought it unfair I wouldn't sleep with him, which obviously made me distrust him even more.\n\nAlec did, however, have some old school mates who came over for a few parties. \n\nBy the start of December, I was still single, though had got as far as a promised second date with one of our tutors -- they were all working with us as part of their sandwich year between years two and three, so only two years older than us -- but then he'd been assigned abroad. Shame; he was Italian, and fit in a cool blond mountaineer way, and he had a pilot's licence...\n\nI was a still a bit miffed by this loss, during the next Friday night party at ours which included a couple of Alec's 'friends'. It turned out they didn't like him that much either. \n\nAnd one of these friends looked very similar to our departed pilot, above-average height, blond and stocky, though more of a rugby-player physique. This lad caught my eye, fetched me a drink, and we got chatting. \n\nAnd increasingly drunk. \n\nHe lured me to a sofa, where I might have leant on him somewhat. I wasn't able to concentrate on remaining upright, given my permanently-impaired balance. Given the opportunity and a really very attractive bloke, some lush muscles and deep cheeky blue eyes, I was perfectly happy to practise snuggling with the guy. \n\nWe finally pulled ourselves apart for breath and decided to wobble to the kitchen to seek sustenance. As soon as we were back in the hallway, he grabbed me, made eye contact with me and raised an eyebrow slightly. I nodded and leant over into a really rather good snog, pressed up against his large muscular body. \n\nI'd never kissed standing, really; certainly not a man rather than a teenage boy. His solid stature was just what I needed -- if I hadn't been hanging onto him, I'd have been completely incapable of standing up. Gripping onto his pullover meant my jerky arms weren't flailing.\n\nI rapidly realised that we were blocking everyone trying to move around the house, so tugged him back towards the kitchen. This led to experimental standing up for cuddling -- his arms round me, me clinging on for dear life -- which of course began to look like filthy making out, as far as two people could go when both standing and clothed. Alec wandered in and made rude comments, including a loud, \"Oi, Eagle, you move fast!\"\n\n\"Eagle?\" I queried, having not caught the guy's name earlier but pretty sure that hadn't been it.\n\nHe rolled his eyes as he assisted me in stumbling out of the room, me pretending to trip up to explain the level of lurching. \"School joke. Ed, Eddie the Eagle...get it? Could be worse, could have been Edd the Duck... let's stick to Ed if you don't mind?\"\n\nI didn't bother replying that I'd coped fine up to that point with no name at all. We went back to getting all over each other, until multiple people suggested we get a room. Pleaded, even.\n\nSeeing as we were in my own house, there was an obvious solution both to the noise of the party preventing conversation, and to us not having anywhere comfortable to sit.\n\n\"Let's go to my bedroom,\" I suggested. \n\nI was used to socialising in my bedroom at home - 'keep your noisy friends out of my living room', my mother had always said. \n\nIt hadn't occurred to me how it might be interpreted by a bloke, not expecting to go to a private spot with me. Also, I had another reason to want to go there -- my room was the first on the upstairs landing, above the extension housing the downstairs bathroom and half the kitchen. I didn't want to find any couple had retreated to my bed. \n\nOr worse. Both Tom Brondesbury and Charlie were becoming infamous for their puking episodes...\n\nWhen we got upstairs, Ed was startled. \n\nMy bedroom took its description very literally: it happened to have only around 18 inches of space all around a very high double bed. \n\nA dark oak chest of drawers and wardrobe were fitted into alcoves on the far wall. The radiator under the sash window reduced the floor space further, though I'd acquired a couple thin CD towers to use as bedside tables.\n\nI clambered up onto the bed. The chap -- Ed, I remembered -- hesitated. \"Are you sure you want to take me to bed already?\"\n\nI laughed, not just because I was really quite tipsy. \n\n\"Well, I wouldn't, normally! I was just planning to hang out somewhere where we could sit down and be a little more private than the lounge, and it's freezing outside, so this is my hospitality, I'm afraid. If you could just pretend this is a sofa, that would be good? Stay here a mo and I'll be a good hostess and get you a drink. What would you like?\"\n\nEd raised an eyebrow, shrugged, hauled himself onto the bed and lay back, shoes falling on the floor somewhere. Retrieving items from the limited floor space was never elegant, but we could worry about that later. \n\nIt was rather odd, I supposed, having the bed be the only thing you noticed in the room. It was well over four feet high, and a right pain to clamber over when I invariably left hearing aid batteries or anything on the far side of the bed. \n\nIt vaguely occurred to me that Ed might interpret 'what would you like' as interest in what sexual favours he hoped for, but in fact he asked, \"How the hell did this bed get in here?\"\n\nYes, he was studying Engineering too. \n\n\"Assembled in here, I guess. Drink?\"\n\n\"Whatever's left. And some water?\"\n\nI went to investigate. I was quite impressed that I managed to find half a bottle of wine and my lidded cup which I filled from the tap, and returned before anyone tried to get a share of the wine off me. Fifty-plus teenagers drink a lot. And all without falling down the stairs. \n\nAs I said, I was naive -- I was used to using a bedroom as my social space and totally didn't think how it could be misconstrued with a man! Especially given the ridiculously dominant bed. I cursed every morning when I invariably left something on my shelves in the far corner and had to fling myself up onto the pile of mattresses -- it had three -- to sprawl out to reach across, but of an evening it was incredibly comfortable. The stylish jewel-toned bedding was exactly my sort of image, too -- I didn't feel the lack of other space.\n\nWe sat up on the bed, leaning on the headboard and increasingly each other, passing the wine between us and knocking it back. Given we'd been touching tongues earlier, drinking out of the same bottle seemed fair enough. \n\nAs the bottle emptied, we slid down the bed, to reclining, then to lying. Once horizontal, we turned to each other and pressed our bodies together, and went back to the kissing. And rubbing against each other. And feeling hot. \n\nThe warm firmness of his clothed body was great, but instantly I wanted more. Pullovers and shoes and socks got discarded. I discovered I liked feeling a crisp cotton shirt, thick heavy fabric, in my hands, with body heat coming through it. His shirt became unbuttoned and I could rub my cheek up his bare chest, the soft fabric flapping over my hair, the heat of his body warming my face. \n\nMy top came off. With the tingling I could suddenly feel in my breasts, I was delighted when he immediately reached round to wrestle with my bra. It took him both hands but only a moment, before my breasts were bare and exposed.\n\nOpen to the air, on full view.\n\nI'd never been topless for a man before. Or anyone.\n\nI felt a little embarrassed, but that feeling was overridden by feeling comfortably free from the bra, and smug at the obvious effect my chest was having on him. \n\nMy breasts had celebrated my recent eighteenth by growing from rather small to a satisfactory C-cup, which was a good size for my frame. I suspected that being stared at by men all day, every day, however much most of them tried to pretend they weren't, might have had a lot to do with it!!\n\n\"Wow,\" he breathed, too drunk to be coherent but thus convincing me of his honesty, \"You've got gorgeous tits!\" \n\nHe put his face in between them, evening stubble scraping my delicate skin, and instantly I knew what I wanted. \n\nI turned sideways slightly, so my nipple was pushed into his mouth. \n\nEd slurped on it happily. I closed my eyes and smiled. This was a level of sexual pleasure I could reach myself, a pleasant floating sensation I could relax into and enjoy for ages. I supposed it might be an orgasm, though it didn't seem like the screaming stereotype I read about. \n\nThe Internet didn't yet have porn videos on it -- not that my bandwidth could find, anyway -- so while I'd seen lots of magazine pictures and ASCII images and read all sorts of filth -- work didn't yet have a policy on reading the text parts of Usenet -- I hadn't encountered much of the sounds of sex. Delia tried to be quiet... \n\nI made a purring noise, partly to encourage him.\n\nIn answer, Ed pulled me on top of him. That was fun, my weight pressing against a lump in his jeans. Firm, hard -- I knew what that was! I rolled sideways and pulled him onto me, instead, to keep me warm. It was a night in Advent, after all.\n\nOver some time, the feeling of his breath over my ear, the rest of our clothes came off, leaving just our underpants in place. Near naked, we luxuriated in each other's soft smooth young skin. \n\nEd wasn't very hairy, just more blond fuzz than you'd find on a woman, getting almost furry on a few square inches of his chest. I ran my hands up and down his back, compulsively. \n\nHe was doing the same. His first strokes up and down my entire chest, over my breasts, no straps in the way, convinced me that I was doing the right thing, pulling some bloke I'd only met an hour earlier. I wanted more. \n\nI wasn't sure what, but something more.\n\nLuckily, considering how badly getting naked in bed with a drunk guy I'd just met could have gone, he asked me what I wanted him to do. \n\nI couldn't really think -- a bottle of wine will do that -- but pushed him vaguely down the bed, closer to my feet. Kissing was grand and all, but it wasn't hitting the spot. \n\nIn fact, I finally realised I knew where the spot was and hoped he could do something about it!\n\nHe did. \n\nA wide male hand cupped my pussy firmly through my pants. The warmth made my gusset wet. He rubbed across the wet patch with his fingers, and I moaned as I pushed myself against him. \n\nIt was a great start. We must have stayed like that for a quarter hour, him lying by my side, his tented boxers pressing against the side of my thigh. The triangulation effect suggested a good-sized erect cock; I wondered what I'd like to do with it, while I happily rocked against his palm. He furtively reached down to touch himself through the stiff cotton. \n\nTo avoid a long sad story, I'd had unpleasant experiences with penises before and had always been scared of getting close to any, but right now I was enjoying myself sexually for the first time with someone else, and starting to tipsily consider what good feelings a cock might be able to give me. \n\nAlec had sneered that Ed had been around a bit, the cocky git -- years later I'd realised that was intense jealousy -- so I figured I'd take advantage and learn all I could off him.\n\n'More?' I whined. \n\nEd met my eyes and smiled, smug as a cat.\n\nShuffling a yard down the bed and into between my legs, Ed ceremoniously pulled down my black pants to expose me, as I arched my bum up to let him. \n\nPushing myself up like that, showing my cunt off for the first time, felt filthy and suddenly hugely arousing. \n\nThe effort had clearly tired him; it was late and we were both plastered, so Ed lay prone and raised his face to rest his chin on my pubic hair. \n\nI felt I should apologise for what wasn't actually wild growth, though equally I'd only seen shaved mounds in porn, so I supposed my neat trim was a good compromise. I'd got as far as \"sorry about the...\" but he rested a hand on my lips a moment, then scooted down, planted his face in the middle of my pubes, smudged it about happily, and then shuffled a couple inches further. \n\nAnd then he brought his arms down to rest his forearms on my thighs, and pushed his face downwards to suck on my clit.\n\nI yelled. \n\nMy legs tried to leap in the air, but luckily Ed was holding them in place with his body's weight on his arms. \n\nMy hands punched the mattress, drumming on it as they wanted desperately to push away the source of this overwhelming sensation, but at the same time I didn't want it ever to end. \n\nHe managed to grab one wrist, then the other, to keep himself safe from my flailing as he continued his oral showing-off, fucking me with his tongue, slurping on my labia, blowing on my most sensitive areas that I'd hardly known I had. \n\nI'm pretty sure I couldn't have prevented my moaning noises if I'd tried. In any case, the sounds helped both of us stay in the mood, him knowing how his actions were affecting me.\n\nThe experience went on. And on. Finally, my body was left totally beyond my control as it was wracked by the spasms of my first definite, overwhelming, sexual pleasure. \n\nIt was too much, but I was so glad I'd been unable to articulate any words, as it was also too, too wonderful. \n\nThe firm grip on my wrists had helped me relax and simply accept the amazing experience. Though probably that was also partly responsible for the bondage fetish I only started to appreciate a year later...\n\nEventually the movements round my pussy stopped. I collapsed, unable to hold myself up at all -- just as well I was already on my back in bed! \n\nAt this moment the door opened. None of our interior doors locked, and I'd never thought to improvise previously.\n\nBen looked round the door, winked at me and shut it again. \n\nI heard him call down the stairs, \"Yes, she's gone to bed, but she's fine. Going to sleep. Don't worry!\"\n\nEd scraped himself up drunkenly and wodged his boxers under the door before collapsing back down next to me, his cock now on full display. It was large, palest brown, all smooth up the shaft until the wrinkles round the head. It was hot, yet disturbingly like ones I'd had bad times with. \n\nI put my hand on it to remind myself I was in control now -- as much as I wanted to be -- and also so I didn't have to look at it. The heat nearly burned my hand, it seemed, and the soft tender skin over it, with a steel core within, felt fantastic. Like a wild animal that I'd tamed. Mine.\n\n\"Ohhh,\" Ed voiced, as he exhaled. Mindful of crowds outside the door, he turned into my chest to muffle his sounds, and took one of my breasts into his mouth as I moved my hand up and down.\n\nHis cock was smoother than I'd expected, warm, and fit well in my hand. It was nice, I decided. It reminded me of a gear-stick with a polished wooden knob at the end. Ha-ha, knob. Sliding up and down made it even stiffer inside. It started to tremble. \n\nEd's mouth pressed more firmly around my breast as he began to moan.\n\nI wasn't really concentrating on what I was doing, what with being most inebriated, not to mention what he was doing to me, but I could tell I was making an impression as he let my breast go and his head fell back. \n\nAnd then a fountain came from his cock. \n\nI watched it, entranced. \n\nIt went a good two feet in the air, and then fell in a beautiful parabolic curve to make a brief puddle, then just a wet patch on the duvet cover. Amazing. His cock remained upright for a moment, then softened, still somewhat upright. \n\nHe smiled, sighed with fatigue. \"Cheers, love. Karen.\"\n\nI was a bit relieved he remembered who I was. I knew we weren't going to bother staying in touch after this night, but I didn't want to be just another anonymous encounter!\n\nGetting his breath back, Ed put his hand down to my thighs, squeezing an inner thigh, soft and sensitive.\n\nIt was an instinctive reaction, opening my legs in response to the hand between them, and it was me who arched up so he could reach more easily. \n\nThat large, slightly roughened hand, warm and firm over my cunt, was something I knew I wanted more of.\n\n\"More?\" I begged.\n\nWe looked into each other's eyes. \"You sure?\"\n\n\"Yes!\"\n\nOnly then did I have a brief moment of worry that he might take that to mean his cock, but he was on the same page as me, luckily. \n\nEd wriggled his middle finger until it found my vagina, hidden behind secret folds. I winced a bit and he noticed.\n\n\"One moment. Just need a bit of lube.\"\n\n\"If it sticks and it shouldn't, WD40? No thanks!\"\n\nEd grinned as he thwapped the air near my head in admonishment.\n\n\"Not that hi-tech.\" He left his finger at my opening and bent down, to lick around the area, making all my folds moist, and soaking his finger in spit, so it could simply slide into soft wetness.\n\nIt worked.\n\nA finger inside me, knuckles pressing on the outside, was great. Amazing.\n\n\"Another?\" he asked me, this time.\n\nI nodded.\n\nAnother finger, initially a bit rough and encountering friction, then slipping in to join the other, the pair stretching my vagina slightly, pushing in and out and side to side. \n\nOh, this was so good! \n\nSo, so good. \n\nSo, so, so very good...\n\n\"Shall I get a condom out?\" \n\nThis was obviously the polite way of saying \"can I fuck you?\" And equally obviously, the expected answer was 'yes'.\n\n\"No. No, thanks.\"\n\nThis did, I admit, put a damper on things. \n\nEd left his hand in place but stopped moving.\n\n\"But why?\" He thought a moment, gathering drunken ideas together. \"You're not a virgin. Or... are you?\"\n\nA complicated question. Nowadays I simply ignore anything from before I was eighteen when asked about my sex life, but it was harder then. \n\n\"Not exactly... No.\" I had to give some sort of answer, at least. \"I just don't want sex. OK?\"\n\n\"But... I've got condoms. And I can see your pills on the side there?\" \n\nI'd been prescribed the pill for agonising periods, by a patronising GP who'd tried to tell me I'd have to pay for them if I wouldn't admit I was going to have sex. A blushing teenage pharmacy assistant had had to confirm to me that he couldn't take any money off me, because they'd act as a contraceptive whether I wanted that function or no.\n\n\"No. Now, do you want to shift round, so I can suck your cock while you keep doing that with your fingers, or not?\"\n\nI could almost see his brain making drunken connections, and lighting up when he finally understood the plan. \n\n\"Yeah. Please.\" Good manners.\n\nHe moved so we were lying antiparallel, his head just above my knees, my face in front of his groin. I had a brief moment of panic, confronted with his cock up so close, but the pleasurable sensations I was receiving distracted me just enough. I was looking down on it, which helped.\n\nI remembered how I'd rather enjoyed giving a blow job a few weeks earlier, to the fellow student who'd turned out to be a bad kisser. You don't get drool from cock...\n\nI tried to put his cock in my mouth, but it only just fit, so I resorted to slurping round the edge of the head. It all tasted of meat and soap with a slight rough texture. Not unpleasant. \n\nLicking the line of skin up the underside went down well, and nibbling at it and the velvety foreskin even better. His foreskin was fantastic fun, to pull around and to fold over his head and rub through. And the noises he made as I played with that central bit of his anatomy, him losing his control, made me feel powerful -- and, combined with his fingers in my happy cunt, sexy as all hell.\n\n\"Oh, god! Can I...? I'm gonna.. I... I...!\" \n\nI'd taken him back into my mouth briefly, just before he came, though gravity meant his come mostly went straight back down onto himself.\n\n\"Kin'ell. Fuck! Wow!\" He fell back, sated for the time being. \n\nI wasn't worried -- one thing I'd learnt about young men is yes, they came easily, but give them five minutes and they'd be raring to go again. Not that Rich had had that chance... ",
        "I tried not to giggle at the memory of that pub crawl a couple months earlier. Let's just say giving him a blow job had seemed a good idea at the time, given conversation wasn't going so well. It had pretty much passed unnoticed amongst the riot being caused by the other students, though we'd had to hastily stop and allow ourselves to be thrown out of the pub with everybody else.\n\nA few minutes later, I cockily told Ed, \"So: you've just come again. How about my pleasure, eh? Your big mouth's got to be good for it.\"\n\nRude? Yes. \n\nEffective, appealing to his ego, making him want to prove himself? \n\nHell yes.\n\nWe were both tiring, so while he was doing a great job with his fingers inside me, and it felt wonderful, I just bobbed along enjoyably on the gentle ride. I could have let him go on for ever. \n\nEventually he muttered, \"Shagging you would probably get you off easier,\" before returning to his task.\n\n\"Might. Not happening.\"\n\nIn the end, I gestured to him to give up when it was getting too much for me. \n\nHe propped himself back up on an elbow to ask, \"But why? Why not?\"\n\nI thought about telling him. \n\nBut I didn't feel comfortable opening up about shit stuff with him. I definitely didn't want his sympathy or upset becoming a damper on the night. So I decided to maintain a mystique, for better or worse. \n\n\"None of your business.\"\n\nHe accepted that, nodding. \"Fair enough. Your loss, though.\" \n\n\"Cheeky git.\" He agreed with that, too.\n\nWe finally gave in to our exhaustion and dragged ourselves under the covers. The change in environment triggered a bit of us snuggling and snogging again, just because we could.\n\nSuddenly, I tensed. Having sobered up slightly, and realising I was naked and vulnerable in bed with a stranger, I was worried about a sneaky penetration in the night.\n\nI grimaced, and sought to wrap myself up a bit in the duvet. \n\nEd looked at me, slightly sadly.\n\n\"You don't need to be afraid. Just because I want to fuck you. I won't, unless you agree. Honest. I'm a slut and a dick, yeah, but I'm not that sort of a dick. Really.\"\n\nI wanted to believe him.\n\n\"Really, Karen. I'd never, not without asking. It's OK, really. I'm really not that kind of arsehole.\"\n\nI just about believed him. \n\nWhat clinched it was his final comment before falling asleep: \"Can't blame me if I keep asking, though?\" \n\nMy muttered, \"Oh, do shut up,\" was lost on his comatose body that wouldn't be bothering anyone for hours. \n\nI turned over and slept.\n\nAround five a.m. we bumped into each other and awoke. I wasn't used to sharing a bed with anyone else, not male nor unclothed.\n\n\"Will you fuck me, then?\"\n\n\"Do fuck off,\" I retorted sleepily. \n\nI rolled to face away from him, and went back to sleep.\n\nIt must have been some hours later when I woke, lying on my back and noticing pale winter sunlight streaming around the edge of the curtain. \n\nI felt amazingly happy. Dry-mouthed, tired -- my usual after-party feeling back when I was young enough to escape hangovers -- but very relaxed and happy.\n\nIt finally occurred to me why I felt so good. \n\nEd had slid down the bed and was lying face-down between my legs, performing oral sex with gusto and a lot more tenderness and finesse than he had last night. \n\nMy first thought was 'what the fuck?' - but, dodgy boundaries aside, it wasn't anything he had promised not to, nor anything I hadn't proven enthusiasm for, and in the circs, lying back and enjoying it seemed a perfectly fine plan. \n\nSlowly my pussy responded. After some minutes, my level of arousal and awakeness reached levels where I couldn't stay silent any more, but I managed to shove enough duvet over my mouth to muffle the sound for any wakening housemates. As I knew all too well from Ben and Delia's enthusiasm for each other, the internal walls were thin.\n\nWhen my shaking and my noises abated, Ed pulled himself up from his stuffy lair under the duvet to get fresh air and lie beside me. He looked expectant, like a good dog awaiting a treat. \n\n\"Ready for a fuck?\"\n\n\"Aw, for Pete's sake!\"\n\n\"OK! Just thought you might feel differently in the morning, you not drunk, me not drunk, and all.\"\n\n\"Nice try. But no. Still no.\"\n\nThere was a short pause while he tried to look nonchalant, but it failed as he persisted, \"But why?\"\n\n\"Cos don't want. And want less every time you whinge. So, do you want some fun now, or I'm going straight downstairs and you'll never play with me again?\" \n\nNearly twenty years later, I found myself using much the same tone and logic on preschoolers.\n\nEd fought with himself. \n\nYou could see that part of him thought the manly thing to do would be to climb on top of me and fuck me into the mattress, willing or no. Every 'romantic' film he'd ever seen would have supported that. Luckily, while he might be an indiscriminate chancer, he drew the line at rape. \n\nAnd when he did stop to think about it, he was damn happy with a blow job. \n\nOr indeed, anything that was a change from his own hand. \n\nThus we spent a good couple of hours experimenting. I learned that while I enjoyed my arse-hole being played with with a finger, he didn't -- or claimed so. I suspected that when drunk he might be more open to it. I discovered his nipples were nearly as sensitive as mine, and that I liked my hair being pulled gently. \n\nWe found that a 69 can be done comfortably, heads on each other's thigh, but both have to stop before losing control at a crucial moment. And that morning-after stubble bristling across sensitive areas can be erotic as well as painful. \n\nAnd we talked a lot, too. He was a bit tired of his Jack-the-lad persona, but unsure if he could be anything else. \n\nI was sure he could. \"Just treat women like people, not prizes.\" I couldn't think of a role-model for him to copy, though.\n\nHe allowed that he could, probably, but that might well mean not hanging out with Alec. On reflection, Ed decided that didn't seem the loss it would have been when they were still at school. \n\nI agreed that's how Alec seemed to us in the house, after his initial efforts in being life and soul of the party had worn away: entitled to a woman and bitter about not having one, which was counter-productive, apart from anything else! \n\nEd wondered if the girlfriend he'd been dumped by a few weeks ago might ever reconsider her decision. \"I couldn't really blame her. She had enough of me prioritising nights out on the lash with the lads. Figured I was just coming back to her for the sex rather than caring about her. She wasn't totally wrong, neither.\" He sighed. \"I really cocked up, there. Do you think she'd believe me if I told her I regretted being a dickhead and wanted to do our relationship again, properly?\"\n\nI had no idea, but suggested that saying he wanted to change wouldn't be enough -- he'd have to demonstrate it, first. \"Saying what you are is always untrustworthy -- you have to show it.\"\n\n\"On the subject of saying...\" We were putting some clothes on, to go seek breakfast. Brunch, more like. He looked at me cheekily. \"So, last time, promise: any chance of a fuck?\"\n\nI laughed. \"No. Possibly pancakes, though. If you shut up. And coffee.\"\n\nHe nodded. \"I'll take the coffee.\"\n\n\"Good.\"\n\nTo the others, we claimed to have simply fallen asleep, though Ben would have told Delia the truth, and probably told everyone else by Monday morning. \n\nIn the early afternoon, as Ed and friends prepared to leave, Alec told Ed sourly to watch out for me. \"She's the sort of slapper who'd have anyone and everyone, though maybe you'd be OK with that...\"\n\nEd surprised everyone, me included, by his rant defending me: \"Fuck off, Alec! Karen's not a slapper! How dare you! Not that there would be anything wrong if she was, right? You, mate -- you're just jealous, aren't you? Bitter, jealous bastard! You don't want a girlfriend, you just want a cunt with a girl's face who'll obey your every word. Fuck that! I don't wanna be judged by your standards!\"\n\nUnsurprisingly, Alec objected to this view of himself. Ed stuck by it, adding that Alec was probably guilty of rape.\n\nAt the time, I thought that was rather strong. A few years later, it proved merely prescient, though luckily I'd escaped, all bar one incident of non-sexual violence.\n\nPossibly luckily, Alec lowered the fist he had raised, and stomped off. Ed decided that might be time to make a swift exit.\n\nHe gave me a hug and a kiss on the cheek, chastely, nothing to feed the rumours that would circulate the next morning. \"Thanks, Karen. For everything.\"\n\nOver the next few months and couple years, Alec appeared to mellow again, perhaps taking Ed's words on board? A good thing, we all thought. \n\nMany of us went to parties at his family home, where his parents were lovely and welcoming, with school contemporaries and local acquaintances of his turning up too. Once I was talking to some when Ed's name was mentioned, so I asked how he was.\n\n\"Just a minute -- you're Karen? The Karen? What the hell did you do to him?\"\n\nI didn't like to say.\n\nApparently, ever since that weekend, he'd calmed down. Drunk a bit less, enough to be noticed. But more noticeably, he'd stopped being a mere tart, saying or doing anything to get into a girl's pants, and 'he actually treats girls like real people, now!'\n\nThe change had been so marked that his girlfriend, who had indeed got back with him after a few months, was now about to marry him. She, along with his other friends, wanted to know what this Karen woman had done, that had kicked him up the backside into becoming a decent human being.\n\nI didn't explain that all I'd done was to refuse to fuck him. \n\nAnd that that decision hadn't really been to do with him. It was down to me finally having an appointment to see if I had HIV or not, which was a death sentence at the time -- but oral sex had been officially announced as not being a risk. \n\nIf I'd met him a fortnight later, after a few years of fear had been replaced by a clean bill of health, it might have been a better weekend at the time, but turned out worse for him in the long run. \n\nFunny how things turn out. Given how he set me up nicely for the boyfriend I was about to acquire, I'm not complaining.\n\nPart 3 of 3\n\nHaving been persuaded that a man, sexual activity and me could be a good combination, I spent Christmas considering my options. \n\nMy dad quizzed me about any potential boyfriend, and sighed. \"That's what you get for going for Engineering, love. The odds may be good, but the goods are odd...\"\n\n\"You'd know,\" I retorted.\n\n\"I'm not an engineer! I'm an applied physicist!\"\n\nA number of the remaining single lads were, I suspected, just not actually grown-up enough to consider. It didn't stop the rumours flowing -- especially given my inability to follow conversation with background noise going on, I'd often be chatting in a corridor or another room. It became a standing joke at work on Mondays: finding out who I'd allegedly slept with over the weekend. It could have become bullying, but my friends kept it firmly under control, laughing at the rumour-spreaders, rather than me. \n\nCome the New Year, I still loved the online chat, and generally had sufficient time in work to use it. \n\nSo did Tom, up in the other main student centre. Tom Andersen, I knew -- nicknames had been assigned in alphabetical order, so Tom Brondesbury had to have an initial added, indignant about becoming 'Tomb'. I vaguely remembered seeing him at one of the early gatherings -- strong and blondish? Or was that someone else? I couldn't remember. He hadn't been to any of our parties, having local friends and, I guessed, a girlfriend.\n\nTom and I ended up having lots of conversations via Say that ended up just between us, and then increasingly took them private, just because we could. \n\nTom waxed lyrical about the countryside on his last camping trip, in a way a bloke wouldn't do in front of fifty others. I mentioned I liked camping. We discussed various TV and film -- I confessed I'd never seen Rocky Horror; he said he'd have to show me. It turned out we both liked reading, including SF and some fantasy -- not all, there's a lot of bad fantasy. I introduced him to Pratchett, he introduced me to Le Guin, we argued over Heinlein and whether his characters were remotely realistic.\n\nA few weeks of this made it clear we really ought to meet up. He mentioned not being able to come to the next party as his sister and her husband Bill were having a birthday party. Other sister and boyfriend were there too, so he was expected to put in an appearance. He mentioned that it felt bit odd not having a partner at such events, but he liked Bill and the other chap.\n\nI noted this new fact of his single status.\n\nAnd wasn't too surprised when the next so-casual comment rapidly appeared on my screen, when I hit Alt-Tab to switch my terminal session to the Say program:\n\nTOM: SAY KAREN you had a boyfriend, right?\n\nRarely have I found myself typing as fast as that reply:\n\nKAREN: SAY TOM no.\n\nAnd then realised I cared that he knew, and was invested in his thoughts while he was writing his response.\n\nTOM: SAY KAREN oh, OK.\n\nHow could I be falling for words on a screen?\n\nBy coincidence, Mike, a student living near Tom, and whose extended family owned a huge shambling house in the hills, announced that day that it was high time for another programme party there, the following weekend. My household agreed to drive up and stay for the two nights, despite the weather forecast's warning of extreme cold. Put sixty teenagers in a couple rooms and it's warm enough.\n\nKAREN: SAY TOM We're coming up to the hill house party next weekend. Can you make it?\n\nTOM: SAY KAREN Definitely!\n\nThat was definitely a flirtatious conversation. It did occur to me that not having really met in person, I didn't really know much about his character. Or looks, which I supposed would matter, too. He clearly had my sort of humour, and I'd never seen him type anything nasty about anyone. The rest of the Northern gang seemed to like him.\n\nTime for some subtle research. Fluffy innocent-faced Mike, gossip-monger extraordinaire as well as host of this party, would be the place to start.\n\nKAREN: SAY MIKE who's coming to the forest house from your lot? Is Rich cooking again?\n\nMIKE: SAY KAREN Hope so, will poke him.\n\nRICH: SAY ALL if you want me to cook at the forest house, i need a fiver off everyone. Give to me or karen by wednesday so i can shop.\n\nRICH: SAY ALL you get hog roast friday night, coq au vin sat night, plus breakfast n picnic lunch. sunday leftovers or pub.\n\nRICH: SAY KAREN ta for sortin the the cash\n\nKAREN: SAY RICH ta for the cooking. Who's coming from your lot?\n\nRICH: SAY KAREN: well me of course darling, why would you care abt anyone else?\n\nKAREN: SAY RICH I only love your food. Sorry, sweetie.\n\nRICH: SAY KAREN your breakin my heart you are. Heartless.\n\nKAREN: SAY RICH I could insult your cooking if it would make you feel better?\n\nRICH: SAY KAREN and wed both know it wd be a lie. so if not me who are you interested in then?\n\nKAREN: SAY RICH I'm just trying to find out who else will be there apart from you and Mike!\n\nRICH: SAY KAREN well now mike is a fine yung gentleman of the singel persuasion...\n\nKAREN: SAY RICH ha ha. No, and what happened to him and Cassie?\n\nRICH: SAY KAREN nothings happened since with him n cassie, thats why this party. If hosting the event of the month with finest cuisine of yours truly, plus needin tae snuggle up in bed against the cold dont get them together properly, nothing will.\n\nRICH: SAY KAREN so who are you interested in then?\n\nAt that, I decided I needed to get on with my work for a while, rather than reply, so I wandered round the office building collecting contributions to Rich's feasts. He'd had summer jobs in kitchens, chefs in the family, and was actually competent with a barbecue. He loved cooking and it gave him something to talk about, because, bless him, he was pretty boring the rest of the time. \n\nHe was the one I'd once ended up snogging him out of boredom. And sucking him off. OK, we were both drunk and it had seemed like a good idea at the time, so while the wind-up merchants tried, neither of us actually wanted to repeat the performance. He was a nice and well-meaning guy though, so no regrets. \n\nKAREN: SAY RICH I've got \u00a360 from us. The Winchester trio promise to come too. Are your lot coughing up OK?\n\nRICH: SAY KAREN grand. ta. ive got nearly a hundred so ill order the roast.\n\nKAREN: SAY RICH Hundred? Nice one. Should be a good party then.\n\nRICH: SAY KAREN aye, pretty much everyones coming. Me, Mike, Cassie, Steve'n'Miranda, dave, davy, Tim, Tom, Tomb, steve e, gareth, Abs...\n\nPoor Tom B was probably going to be known as Tomb or Toom for the rest of his life. Tom was very glad that he'd got in first when usernames were assigned in alphabetical order.\n\nRICH: SAY KAREN so theres talent for ya. Who're you thinking of?\n\nKAREN: SAY RICH Me? I don't know. I'm not even sure I've met Tom, for example!\n\nRICH: SAY KAREN for real?\n\nKAREN: SAY RICH Real. Why? What's he like?\n\nRICH: SAY KAREN oh... tall, blond, broad shoulders... Likes canoeing and camping an all. why, you interested?\n\nKAREN: SAY RICH How do I know, if I've not met him? Divot.\n\nRICH: SAY KAREN no, he's not a divot. sound lad.\n\nKAREN: SAY RICH Anyone would think you were trying to get us together!\n\nIt was intentional, going on the offensive. I had to admit, this sounded promising.\n\nRICH: SAY KAREN ah, no. im no doin that.\n\nKAREN: SAY RICH How come? Should I be insulted?\n\nStirring. Always fun.\n\nRICH: SAY KAREN ah, nothin. hes a fine lad. just, dont know if youd be interested, is all.\n\nRich stopped there. \n\nMy curiosity burned.\n\nOver the week it proved most students would get up to the party. Various chatters needled others about who they might get together with, but given the sex imbalance, it was mainly oblique references to me, Cassie and Helen. Though one afternoon was livened up by Gareth's revelation:\n\nTOMB: SAY ALL so who do you have your sights on Gareth? K/C/H?\n\nGARETH: SAY ALL none of them\n\nTOMB: SAY ALL none of them? You gay or what??\n\nA short pause as nothing came up on my green-lettered screen. Then:\n\nGARETH: SAY ALL gay\n\nTOMB: SAY ALL oh ok.\n\nAnd, within seconds:\n\nMIKE: SAY ALL So who do you have your sights on then Gaz? Rich, tom, tomb, joe, finn, edwin, abs, Charlie, Stevee, steven, Alec...\n\nGARETH: SAY ALL fuck off\n\nJOE: SAY ALL fuck off\n\nABS: SAY ALL Not my type soz mate\n\nTOMB: SAY ALL: you fucking knob mike\n\nRICH: SAY ALL you gobshite Mike\n\nCASSIE: SAY ALL He's a man of taste, clearly! Gareth that is\n\nGARETH: SAY ALL ooh looks like your crashing & burning there Mike\n\nMIKE: SAY ALL?\n\nKAREN: SAY GARETH so is there anyone? Got a chap to bring as your plus one?\n\nGARETH: SAY KAREN I wish. All seem bloody straight. Roll on uni, I say.\n\nKAREN: SAY GARETH awww... Let me know if you start getting private messages!\n\nGARETH: SAY KAREN like fuck I will\n\nIt was a standing joke for the rest of the year that when Gareth wasn't chatting, he was being inundated with private messages from every man in the company, all 10,000 of them. About ten years later he admitted there had actually been one, which had led to a few hook-ups with the other lad, out of curiosity. Apparently they'd both agreed sex standing up in copses of trees near Mike's family's house was a bit crap, other sex was excellent, but neither could be bothered to travel to see the other, so it petered out.\n\nTom and I speculated a bit as to whether Gareth would have any takers. He also warned me to watch out for known lairy ladies' man Finn, who had been making enthusiastic comments about my body. But not speaking to me at all...",
        "KAREN: SAY TOM call me old-fashioned but I rather prefer conversation before being lunged at.\n\nNot that I'd done that with Ed, but I figured it would be a good rule for the future.\n\nTOM: SAY KAREN noted. Does online conversation count?\n\nKAREN: SAY TOM it's an excellent start!\n\nTOM: SAY KAREN look forward to seeing you on Friday.\n\nNow that's flirting, isn't it?\n\nAt home, Alec was being a brooding silence in the back room, seemingly still blaming me for his lack of love life. Never one for tact, Charlie suggested washing more might help, but Alec's main problem seemed to be jealousy of my having spent the night with Ed. \n\nBen and Delia kept up with their flirting with me, and I was torn whether to take them seriously or not. I had decided not to try anything -- with either of them -- until it was time to move out. Or much closer to the time, at least. \n\nAnd Charlie was fun to snuggle with on the sofa. I did wonder at the time if Charlie might be more of Gareth's persuasion. They would make a very pretty couple, at least until killing each other over musical differences. They each took their rock credentials very seriously with all the equanimity of 18-year-olds, with Gareth playing guitar and Charlie a hi-fi nerd. Obsessive, even. \n\n'Anal-retentive twat,' Ben muttered, grumpy that Charlie wouldn't let him touch the music system in their shared bedroom.\n\nIt was a pleasant thought to muse on, while hearing Delia's gasps of pleasure through the wall, and testing the basic vibrator I'd bought in King's Cross, trying to bring about for myself the same sensations that Ed had given me. I wanted to think about Tom, but didn't dare.\n\nNot knowing what Tom looked like, but knowing we seemed to fancy each other, was killing me. How could I find out? I figured I could ask Mike, as our prospective host, about 'people' I didn't know. Both Mike and Rich might be helpful in deflecting Finn or any of the lads who tended to aim for any awake female after a certain point of a night.\n\nKAREN: SAY MIKE anyone other than the usual suspects coming? Rich said Abs could make it. And Tom's coming, not met him, what's he like?\n\nNothing for Mike to suspect there, right? Apart from my deliberate use of run-on commas to suggest a quick casual message...\n\nMIKE: SAY KAREN you've not met Tom? Really?\n\nKAREN: SAY MIKE Vaguely in passing at the training course, I'm told. Never since. What does he look like?\n\nMIKE: SAY KAREN Tall, blond, well fit, like exercise, y'know.\n\nKAREN: SAY MIKE What about well fit like well fit?\n\nThe smiley hadn't been invented yet. Or not reached us, any road.\n\nMIKE: SAY KAREN How would I know! Ask Gareth.\n\nKAREN: SAY MIKE Gareth hasn't met him either, you twonk. Come on, you can make a basic assessment of fitness without compromising your virility...\n\nMIKE: SAY KAREN God you type fast. Youd make a good secretary JOKE.\n\nThe screen paused, top half full of glowing text, bottom half ominous black.\n\nMIKE: SAY KAREN My mum would say hes a fine looking strapping young man, OK? Just..\n\nKAREN: SAY MIKE?\n\nMIKE: SAY KAREN Nothing, meet him on Friday.\n\nKAREN: SAY MIKE What? Everyone keeps not saying something about him, what?\n\nAbout an hour later Mike replied.\n\nMIKE: SAY KAREN Nothing wrong with Tom. He's a good bloke. Listen to him.\n\nOdd, I thought. Especially when Ben and Charlie, who'd recently had meetings up in the Northern office and thus met the guy, started telling me Tom was 'looking forward to seeing me', with the obligatory 'nudge, nudge, wink, wink' which didn't surprise me in the least, but then they felt the need to add, 'Give him a chance. Hear him out.'\n\nI couldn't get out of any of the bastards what they were bloody hinting at. Sounded like some dark secret. I vaguely wondered if he'd grown up in a cult, and had an ex-wife or something? Only, everything he said about his family sounded incredibly normal, and surely the other lads would have mentioned it?\n\nNo matter what, I was looking forward to this party. I liked Mike and various others from the Northern centre. Rich was a nice guy and genius at cooking, while being permanently admired and wanted by a dozen horny lads at any given moment was certainly good for my ego! It certainly gave me entertaining thoughts at night. \n\nEventually Friday arrived. We all managed to sneak out around four pm.\n\nAlec's car had broken down again, which didn't make him any less moody. He'd tried to get all of us to pay for it, only the four of us firmly agreed that's what our petrol money went to. So we all had to drive to Shropshire in Ben's little Fiesta -- a two-door model, at that. Charlie, the slimmest, was squeezed between me and Delia in the back, his thighs squashed between ours, heat of his body making me flushed. If it were just about bodies, then I'd fancy him -- his lean frame and freckled face with jawbones to die for were definitely attractive. But, possible gayness notwithstanding, he was just too... Conventional, maybe? And a relationship between a music obsessive, sorry, 'audiophile', and the deaf girl was never going to work.\n\nCar journeys with the deaf girl didn't work either. People tried to have conversations, but I couldn't decode anything the front seat occupants said. Once we were on the dual carriageway, I couldn't understand Delia or Charlie, either. \n\nPutting the radio on loudly, driver's choice, was much better. And after two and a half hours -- plus a stop in an offie to acquire enough booze for the weekend -- we bumped down the unpaved last mile of road to Mike's place.\n\nVarious of Mike's extended family got to use the place in turns, with a simple rule of cleaning up when you go. The aim was for his uncles to do it up over the summers, but in practice, while it had cold water, and some electric lights powered from a generator, the Aga stove was wood-fired and there was no heat nor hot water. I'd washed my hair that morning in preparation.\n\nRich was already manning his hog roast outside, producing fresh hot bread and a variety of salads as we approached. \"Have to keep it simple, y'see,\" he said, wiping oily hands on his butcher's apron. \"The meat and jacket spuds'll be done in about an hour, then I'll put the sausages and steaks on in a bit. One steak each, mind.\"\n\n\"Simple, sure,\" I muttered. I helped myself to potato salad -- you need carbs before getting pissed; that was a lesson I'd learnt well -- and tracked down the wine.\n\nCrisis!\n\nThe crowd had come to the conclusion that there was no corkscrew -- one with a broken coil lay on the counter. Beers were being opened by tapping them on the top of the elderly fridge, but hating the flavour of hops, I really didn't want to have to drink cans of cider all night. \"Bugger. Should have brought my Swiss Army knife.\"\n\nSmall Davy overheard. \"Oi! Anyone got a Swiss Army knife with a corkscrew?\" \n\nMike wandered back from a shed, guilty-faced, feeling he was failing as a host, at least until he could drive back from a shop with a corkscrew. His eyes brightened. \"Someone's bound to. Or a Leatherman. Hey, Karen. That's Tom, there. See if he's got his.\"\n\nI looked up to see a tall, blond chap wandering in, looking a bit nervous. He was, as had been suggested, muscled from canoeing and trekking around, and certainly well fit in all senses. Definitely decorative. \n\nSo far, so good. Here goes.\n\n\" Er, hi. Have you got a corkscrew, like on a Swiss Army knife, maybe? We're in dire need. I'm Karen.\"\n\nI smiled. He beamed back at me, then looked frankly terrified for a moment.\n\n\"Huh-huh-h. Hi-I'mTuh, Tuh, uh, uh, Tom. I've, yeah, yeah, yeah, gotta, a, a. Corkscrew.\" The last word, he managed to spit out totally naturally.\n\n'Listen to him.' 'Hear him out', I recalled. Oh for fuck's sake, was that it? A stutter?\n\n\"Great to finally meet you,\" I beamed, propping myself up on a chair so I didn't wobble when reaching to shake his hand.\n\nThe terror vanished, and, I noticed, so did half the stutter.\n\n\"Andyou, K, Karen. Let'sget a, a, a, drink.\" It was an odd rhythm, but pretty understandable. \n\nActually, the effort to enunciate his consonants made him incredibly easy to lip-read.\n\nHandy, that. My hearing aids were being rubbish with all the hubbub from forty-odd students milling around us and clanking cans and bottles about.\n\nTom pushed his way to the wine, pulled out his multi-tool with a flourish, and gestured at the bottles. I tapped one; he nodded. A moment later I had a generous glass of a crisp white (less embarrassing than red, when I invariably spilt it), and we were clinking glasses. \n\nOut of the corner of my eye, I saw Mike winking at him and giving a thumbs-up. I gave Mike a vigorous V-sign; he blew me a kiss back.\n\nTom turned to me. \"I h, hope I get that knife back!\"\n\n\"I really wouldn't worry. No-one will want to lose it!\"\n\n\"Guh. Good point.\" He grinned, relaxing. \"You, you've been here before, right? Can you, you, give me the guided tour?\"\n\nI certainly could. I staggered and nearly toppled over at one point in the grounds, but without any fanfare he reached out to steady me, and we didn't let go of each other's hands until we returned to the barbecue, where a long queue was forming.\n\nRich wandered past, trying to get people out of the way. \"There's no danger of running out of food. Come back in a wee while. Mike and people are doing air-rifle shooting in the field there, if you want do that before it gets dark.\"\n\nWe looked at each other and shrugged. \"Have, have, you shot before?\"\n\n\"Once,\" I replied. Actually, it was a few sessions across various activity holidays, but a while back. \"You?\"\n\n\"A b-bit. They had C-cadets at school.\"\n\nWe wandered over, got a rifle each.\n\n\"You two against each other? OK, I'll put more cans out. Wait for me to get out of the way.\" \n\nWe both made 'aw shucks' noises in unison at Mike. Clearly, a similar sense of humour...\n\nTom got six out of ten, making joint winner with Mike. My turn. I remembered my cousins talking about actual rifle shooting in the Army, and how prone was the way to go for any accuracy. I lay down and rested the butt of the rifle in the ground. It was a large weapon for my small hands, but if all I had to worry about was the trigger, then I could work with my breaths and any muscle spasms. \n\nI aimed, checked the sights, breathed in, and pulled the trigger as I exhaled. One. I moved from left to right, waiting a moment for my hand to steady after the third, re-loading after the sixth so missed the seventh, but it was a good nine out of ten. I was enjoying myself, so figured I might as well use up the last two caps. \n\nI shot towards a bedraggled early tulip another ten yards away. When I turned and saw Mike clapping behind me, I sent the last shot just downwards, never thinking to actually hit the stalk.\n\nAs I tried to stand up without looking too much like a drunken baby giraffe, I saw the gasps behind me of \"'Kin' ell!\" The browning tulip, suddenly cut across the majority of its stalk, fell over sideways, in perfect comedy fashion.\n\n\"Played for, and got!\" I assured Mike untruthfully. \"Let's get food.\"\n\nAs soon as Tom and I were out of his sight, I started laughing and doubled over. \"Jammy, or what?\"\n\nTom chuckled too at his memory of Mike and the others' faces. \"Nice one.\"\n\nHe wasn't sulking about me beating him at a sport. Shooting was the only sport I'd ever\n\nhad half a chance at, with my coordination. I could play pool quite well for about twenty shots, until my left hand couldn't maintain the required V shape any more, but any other sport was a total disaster. Tom's recognition of my happiness meant a lot.\n\nWe collected our steaks, added side dishes, and sat around with Ben and Delia and various others in the twilight. Tom solicitously fetched a bottle of wine, which went beautifully with the steaks and their sauces. The home-made baps of hog roast, fried onions, and apple sauce were just what we needed to keep warm once it got cooler. \n\nAfter dark, we all helped Rich bring the food inside, and were warm enough for a couple hours in the house.\n\nAs night wore on, Rich's pavlova and cakes got demolished, but, anywhere outside the kitchen, it got pretty cold. Very cold. You could see people's breath as they returned from the bathroom. \n\nIncreasingly, I leant into Tom and his warm pullover as we sat on the kitchen step, chatting to each other. We were getting on really, incredibly, well. \n\nIt got to the point that we were leaning our faces closer and closer. Three times or more, we were nearly kissing, but kept being interrupted by people coming past. \n\nHe didn't want to be obvious to the rumour army any more than I did. I appreciated that.\n\nAround one a.m., we saw people starting to disappear to beds or making up bedding in the kitchen -- Charlie had bagsed the space in front of the Aga -- and figured we'd better find beds whilst there were still some available.\n\nWe went upstairs, which was freezing. Same temperature as outside, so literally freezing. I'd put on my extra fleece and scarf, but was shivering as I stood next to Tom. \n\nWe went into the room he thought he'd reserved a bed in, eager to get under some covers, not necessarily for anything other than warmth.\n\nDisaster!\n\nSomeone -- two someones? - had chucked his stuff off the bed.\n\nAnd was in it. \n\nBugger.\n\nWe poked heads round a few more doors -- there were twelve bedrooms, at least eight with beds or similar furniture, the others bare or being used as workshops. Eventually we bumped into Rich, who was both amused and sympathetic.\n\n\"That room's got two beds in.\" He gestured with his head. \"Mike went in, and I think Cassie, but I'd lay good money they aren't using both of the beds... \"\n\nNormally, we wouldn't have dreamt of invading anyone, especially not our kind host, when they'd finally pulled! But it really was that freezing cold. My arms were starting to spasm enough that I couldn't hide it. So we opened the door, and saw a made-up, empty bed before us.\n\nThe painted metal bed-frame and army-style scratchy blankets looked like heaven rather than a Fifties hospital.\n\n\"It's a, a, a, a, single,\" Tom pointed out the obvious to me, the stutter back.\n\n\"I don't care,\" I said, shivering and nearly stuttering myself.\n\n\"What the fuck?\" came Mike's sleepy voice from across the huge, bare room. \n\nA giggle betrayed that Cassie was there too. They had a double bed.\n\n\"C, cold. Bed. Sleeping! In it,\" Tom stated, summarising our intentions succinctly. Mike clearly decided to pretend we weren't there, as the easiest solution.\n\nI didn't say anything, just sat down on our bed and adjusted to the dark before I fell over. I removed my boots. I considered what else to remove, putting my scarf under the pillow, and the fleece and jumper on the floor. 'So you'll feel the benefit in the morning,' my gran would have said.\n\nI figured out the sheet and blankets, and managed to get in underneath. Half a single bed would be cramped. Neither of us were skinny. \n\nTom had escaped his shoes and soon lay gingerly next to me, threading his legs under the tucked-in sheets. We turned to face each other in the dark. The heat of each other's bodies was wonderful, and my muscles began to relax and behave themselves again. \n\nInstinctively we pressed ourselves together. I raised a leg to go round his, which made his groin push into mine. Both of us inhaled sharply at so much amazing sensation -- and warmth! We took another while to enjoy the sensations, letting ourselves relax and ease both physically and mentally. \n\nThen, who knows how much later, we put our faces together to finally kiss each other.\n\nIt was a great kiss: enthusiastic but neither careless nor slobbery. I could smell him, the subtle note of that morning's deodorant and soap under new fresh sweat. A good smell for a man. \n\nWe managed to get our arms round each other, and started to rub our bodies up and down, when there was a sudden screaming noise between us. He pulled away, shocked.\n\nIt took me a minute to tipsily deduce the problem. I crossly pulled out my offending hearing aid, which whistled like a boiling kettle if anything or anyone got too close, and tossed it onto the floor. I sent the other to join it, grumpy and embarrassed.\n\n\"Sorry.\"\n\nHe said something. I guessed he'd expressed 'Don't worry'. For a moment, he looked merely thoughtful; as far as I could tell, given that the only light was from the stars and a crescent moon through the bare window. Out in the country, there was zero light pollution. I'd loved the night sky there, on a warmer night.\n\nThen I saw on Tom's face that classic expression of the engineer who had solved a problem. He exclaimed something.\n\nI couldn't understand a word beyond the initial 'Ah!', and it wasn't because of his voice letting him down. \n\n\"The film.\" I got that, with the help of the classic charade. \"Space. Balls.\" He'd had to pull his hands out from under the covers to mime 'ball', but his clear enunciation had been enough to get the two words across. Luckily I'd at least heard of the film, so when he repeated his original comment, me concentrating carefully, I grasped the sentence -- not that it made much sense when I did.\n\n\"I said, 'Ah! It's like the virginity attack alert in Spaceballs!'\"\n\nHe probably couldn't see the raised eyebrow, but correctly deduced I hadn't seen it. I moved as much as I could to the side, to let all the moonlight illuminate his mouth, so I managed to comprehend the next few sentences, me clarifying after each that I'd understood: \"... great spoof film of Star Trek-like stuff. There's a p-princess who has a chap get too close. An alarm goes off, just like that. Actually, more 'Awooga, awooga!'...\"\n\n\"Oh no!\" I put on my best princessly whisper. \"My virginity is under attack!\" \n\nOnly clearly not, for two reasons. Darn, why do I say such silly stuff?\n\n\"N-no, it isn't,\" he reassured me. \"Quite happy where we are.\" Something like that, anyway.\n\n\"You're right. Might be a bit much for a first date.\"\n\n\"Is this a first date, then?\" he asked.\n\n\"I bloody well hope so!\"\n\nAnd that, I decided, was quite enough talking for the night. We went back to kissing and warming ourselves with each others bodies. Much better idea.\n\nI felt I finally had a hobby. Not that doing this earlier would have stopped me needing to make up answers in all those school language lessons. Mes loisirs sont... meine Hobbys sind... Though thanks to songs I probably knew some relevant words. Couchez avec moi. Se baisser. Ein Kuss geben. Willst du ficken? \n\nThat last one might be a bit much, for now. I concentrated on warming up his hands again so they were cosy around me.\n\nThe door opened. I squinted in the light, unimpressed by the interruption.\n\n\"Sorry,\" Rich sing-songed, not sorry at all, \"Is there space for anyone else to sleep in here?\"\n\nIt occurred to me that maybe more people could fit in with Mike and Cassie, though that mightn't go down well.\n\nMike spoke up from across the room. \"No, there bloody isn't! Anyone else can all squeeze in the kitchen and stick more wood in the Aga-aa!\"\n\nIt would be rude to speculate as to how Mike was being distracted. That didn't stop Rich, later.\n\nCassie piped up after a few minutes, \"If you guys are cold, you could come over here and we can all have fun together?\"\n\nIt took me a minute to realise the implications. I was, a bit, tempted. In my heart, I still felt pretty gay, and would certainly have slept with Cassie if she were up for it. Only it was so cold! \n\nThough men seemed quite a good move too nowadays, even if Mike was too much like a teddy bear for me to ever consider in a sexual light. \n\nAnd it would be bad manners to add others to my date with Tom, right? It had never been covered in Just 17 nor Cosmo, but I suspected unplanned group sex on a first date was considered poor form.",
        "Tom looked at me. \"I'm not moving!\" he said, loud and clear.\n\n\"Good answer,\" I agreed.\n\nWe tried to ignore Cassie and Mike for the rest of the night. They did the same, though I believe we were much more chaste than they were. We remained mainly clothed, even. \n\nI got Tom to unhook my bra and, slowly and giggling, we managed to wriggle me out of it without the sheets falling off. I replaced my arms in my sleeves. Before Tom could slide a hand up my top, I stopped him. \n\n\"Let's take our jeans off. Just the jeans, just to be more comfortable sleeping? I don't know what's in your pockets...\" Keys, judging by the lumpiness in my hip. At least he'd left his Leatherman downstairs.\n\nLater, the joke about \"is that a banana in your pocket or are you just pleased to see me?\" came to mind. But that side wasn't painful when it dug in, so I didn't mind.\n\nWe managed this feat of contortion, though it involved some sitting up in the freezing air. I thought I could see my breath, all silvery, in the dark. We both jumped back into the bed together and lay clutching each other, me shivering. He stroked my hair. I liked it.\n\nOur kisses got more gentle, sleepily exploring, our first desperation ebbing away. His legs, firm and slightly furry, were much warmer than mine, and I slowly relaxed into the larger warm body holding me securely. I put my scarf round my neck, to prevent an arthritic tension headache. He didn't object. We practised snuggling together, getting those knobbly bits out of the way, and soon had the hang of it, practically forced to by the shape of the ancient mattress. \n\nAll perfectly chaste, really. Even if my mother would, I'm sure, have been shocked, especially as the firm projection in his boxers was touching my own pants and making me get moist. I'd hold off for tonight, but I promised myself that the next night, I wanted to feel that cock properly! And to see if he could do anything about my wet pussy. \n\nI wondered what he'd done with women before, and what I should tell him.\n\nI slept remarkably well, though finding a toilet -- not in the nearest bathroom, it turned out -- was a most unpleasant contrast to my warm bed. We stayed dozing until the weak sun warmed the room to a more pleasant temperature, and Mike had gone downstairs. Cassie was still out like a light.\n\n\"G-good morning, Karen.\" I didn't even need to lip-read to understand that.\n\n\"Morning Tom,\" I replied groggily. \"Sleep well?\"\n\n\"Ex-ceptionally well. I had excellent company.\" He smiled, which was the important part of the message.\n\nWe could hear clanging of pans and lots of voices downstairs, but saw no reason to move. We moved back into a kiss. Tom slowly reached his hand under my top, giving me every chance to object. I didn't. On the contrary, I rolled round so my breast was conveniently underneath his hand.\n\nI'd wanted this, for much of the previous evening. I sighed in satisfaction. He pushed me round further so I was on my back, and he could straddle me and play gently with both breasts at once. \n\nIt wasn't a totally new concept, but a sober man doing it, looking like the cat who'd got the cream? Definitely a level up in pure pleasure. I was starting to moan quietly, when the door opened. I was glad Tom's back was to the door.\n\n\"D'you want any breakfast? There's pancakes if you fry them yourselves,\" Ben called in.\n\n\"Have to do everything round here,\" I muttered. \n\nWe realised we were in fact ravenous, so reluctantly we parted, and got up and dressed again. \n\n\"What are you doing next weekend?\" I asked him, once I'd put my ears back in.\n\n\"Um...driving d, down to s, s, see you?\"\n\n\"Right answer! As an extra incentive, I can offer not only a double bed in a private room, but also... wait for it... central heating!\"\n\n\"Ooh! I won't need you in the bed then!\" He mouthed something else at me I couldn't hear, which he had to repeat a few times before I realised it was 'Joke!'.\n\nMostly, I understood him very well, but finding he never once said 'never mind', when I didn't understand what he said, really made me relax with him. \n\nI wondered what people had told him about me.\n\nWe had similar ideas, it turned out, on generally hanging out together for the rest of the weekend while still socialising with the others. I fried up a couple dozen more pancakes, knocked back coffee and juice until I felt more human, and all fifty or so of us -- including Mike's female cousin and a few of her friends, who took attention away from me and the other girls -- spent the day relaxing in the grounds. We didn't know, then, that Gareth and Finn were experimenting with al fresco sex in the forest! \n\nWe had more shooting competitions -- when everyone used my tactics, I was no longer outstanding, but, having been the butt of insults from PE teachers for years, I'd take it. Lunch was mainly leftovers and food that didn't need cooking, but in the afternoon Rich acquired some assistants, and made another six loaves of bread. \n\nThat second night we were down to about thirty people. The pot on the Aga was about two feet high and nearly as big across. The smell of stew was outstanding, possibly assisted by Rich's idea of cleaning up being to find all glasses containing dregs of wine and to tip them in, along with the ends of bottles. It was even colder than the previous evening, and drizzly, so all eating and partying took place in the kitchen and lounge, where we all fit reasonably well.\n\nThe wine and beer seemed in no danger of running out. Finn passed round a bottle of Baileys, and swore when he realised Tom and I both loved the stuff. Someone started up drinking games, which seemed a bit unnecessary. Probably Alec. In the light of his recent sulking and clearly feeling entitled to a girl, his penchant for getting everyone drunk started to seem rather dodgy. I looked round for Helen and Cassie but they seemed fine -- Cassie was near Mike, and Abs and Edwin were on either side of Helen, both looking protective. Mike's sister and her two friends were chatting to Rich and Gareth, as well as Ben, Delia and Charlie, so they'd be safe enough.\n\nTom and I joined in with a round of wink murder and a couple games of Werewolf. I wasn't surprised that he suddenly decided he needed a drink or the facilities when the rounds of Fuzzy Duck and other tongue twisters came up, just as I always made an excuse when games like Chinese Whispers started. The moans of primary school classmates, that I always ruined the game, still hurt.\n\nThen it moved to poker for pennies, followed by the obligatory semi-serious demands for strip poker. I was perfectly content with this -- I'm reasonable at poker, wasn't really bothered about my body being seen, and thirty guys and girls in their late teens were pleasant eye candy. Then I noticed Tom, tugging at my sleeve where people couldn't see.\n\nI looked questioningly at him.\n\n\"I. I. something reallypreferblurble.\" Bad angle for lip-reading.\n\n\"You don't want to play poker?\"\n\nHe nodded, relieved.\n\nI shrugged. \"OK. Got a better idea?\"\n\nWe started walking back to the kitchen. He did think about saying something, but didn't. We found a bottle of Baileys being ignored, despite it being half full, and helped ourselves generously. It was a small social gathering here, but good conversation -- the best parties always end up in the kitchen, after all -- and was just about cosy round the Aga, which we kept well topped up with logs. \n\n\"Not so crowded, tonight,\" Steve observed. Someone sitting near the stove mentioned that Joe and Steven and a couple others had gone home. Suddenly, Tom's eyes lit up and he beckoned me out of the room. Once back in the passage he whispered, urgently, \"They had one of the smaller bedrooms last night...\"\n\nWe went upstairs, where the rooms definitely weren't obeying the usual rule of being warmer the higher you go but were spewing out all the heat they had, out through chimneys and cracks. But indeed, the end room was empty of anyone and anything, except for a double bed, rumpled sheet, and a pile of blankets that I wasn't going to inspect too closely. I grinned.\n\n\"You're a genius! Shall we camp out here for the night? If you're sure you don't want to join in for strip poker?\"\n\nHe laughed, blue eyes bright. \"I think, you'd be too good at poker for there to be any point for me! I'm really not interested in watching the blokes get their kit off. Quite enough of that in school changing rooms...\" He reddened. \"I was, k, k, kinda, hopingthestripping could happen anyway?\"\n\nI was trying to nod and smile and show my wholehearted agreement with this plan, only it really was fucking freezing. \"Great idea, only, not sure goose pimples are a good look. So might be better going for a more 'warm up the bed first' thing?\"\n\nHe gave a small Gallic shrug. \"Still better entertainment than seeing Alec and Rich or Finn naked, I assure you! I'm afraid I didn't bring a hot water bottle.\"\n\nIt suddenly occurred to me that the chunky metal objects being used as door stops might possibly have been the original bed irons for the house. Those late night historical documentaries on BBC2 had their uses! Certainly the mysterious old metal could be used for the purpose. I grabbed my bag from the hall and got an old towel out.\n\n\"Give me five minutes -- can you guard the room? Actually I'll set the irons in the fire and come back.\" I chose two lumps of iron which didn't look too rusty or dirty, and went down to put them inside the Aga's hot oven to get hot. As long as they didn't stay too long, it should be possible to wrap them in the towel to carry back upstairs.\n\nI picked up the Baileys bottle when no-one was looking, and returned up the stairs. My eyes adjusted to the dim light, the only illumination being from the hall window downstairs, where light shone up towards our curtain-less window. Tom was reclining back in the bed. \"Ah! I brushed my teeth already while you were gone! Oh, s-s-s...od it!\" He took a swig. I figured that if we were kissing, Baileys and clean teeth would be better than a taste of stew, so went out to brush mine, too. There was even a clean glass in the bathroom, so I stole it and offered Tom a glass of Baileys instead.\n\n\"How incredibly civilised. Th-ank you.\" I went downstairs and extracted the bed irons without burning myself, though I'd needed an extra oven glove and my towel might not recover. Back in our secret lair, dropping the things just before scorching my hand, I shoved the hot metal, still in the towel, under the blankets.\n\n\"Pure genius. Definitely a reason to go for an intelligent woman!\" Tom observed whilst warming his hands under the blanket. \n\nWhat a charmer. \n\nHe removed his trainers and tried and failed to wedge one under the door. \"Have to be my old T-shirt, then,\" as he rummaged in his bag to find the top he'd worn the day before. It filled the gap pretty well, and experimentally turning the door-handle showed that it would at least stop someone coming in by accident, unless they hurled their weight at the door.\n\nHe turned back, pleased with himself and his solution to another problem, and gave me a huge hug. We started to kiss again, though he was slightly too tall for that to be easy, standing. And kissing distracted me from focusing on where the walls were, making it impossible for me to stay parallel to them. I had to close my eyes and rely on clinging onto him. Basically, kissing is something I prefer to sit down for!\n\nHe spoke quietly, but the gesture was unmistakable: \"..something mumble clothes off, then?\"\n\nI suddenly felt embarrassed about my physical awkwardness. I'm fine being naked, but the getting naked was more of an issue. I couldn't do any moves or anything like a stripper. Luckily, he reassured me. \"Not like a strip-tease,\" - his action suggested it would be fine if that did happen - \"Just, just, I want to see what I haven't yet. Please? I'll help you, first.\"\n\nI held out my arms so he could pull off my top, my polo-neck, my vest. He ran his hands over the front and back of my bra, clearly liking my breasts in it, then round to the back where he fumbled with the hooks before finally releasing it and allowing it to fall forwards. I stepped back from him so it fell to the floor, and adopted my best posture, slightly nervous. Actually, really nervous. Unlike with Ed, this time I cared what a man thought of my body.\n\nTom stepped back too, but his expression was pure gleeful grin as he looked me up and down. \"Wow!\"\n\nAs he came forward I anticipated he would grab my breasts, but no -- he reached round me to hug me to him, warming me up and holding me close, and only then reached up to fondle them as he'd been doing first thing that morning. It made me feel appreciated as a person, not just a pair of tits, as I nuzzled them into his soft top.\n\n\"'Moment,\" he said, and raised his arms above his head. He swiftly un-layered his top half -- fleece and jumper off, then a smart polo shirt, and underneath a t-shirt that hadn't been intended to be seen, which he pulled up over his arms to show off his body. \n\nAnd a very nice chest it was too. Canoeing and swimming and indoor climbing walls had given him a six-pack gym-goers would kill for, and youth prevented a beer belly so far. Some scars from harsh spills from the canoe onto rocks. Not much hair. His chest was firm under my exploring fingers. \n\nWe stayed close, partly to keep touching, mainly for the body heat. Another long kiss, really fighting our tongues and exploring how the other reacted, battling for submission and neither of us ceding. It occurred to me that I was supposed to let him be the dominant one, but he seemed to be having fun anyway.\n\nHe might not have control of the kisses, but he had the advantage of me when it came to remaining standing, which I was only managing by hanging onto him. His longer arms reached down, caressed my arse, and then tugged my jeans down. After initial resistance, they slid down my thighs and bunched below my knees. \n\nI felt more exposed in my pants than I would have done naked. Having my legs effectively tied together doubled that feeling of embarrassment, which was somehow also horribly erotic. I could feel my pants getting damp, and as Tom knelt down in front of me, he'd be able to see that. And to smell it, as he pushed his face into the gap between my knees and ran it upwards, stopping to kiss me over my clit as his hands cupped my buttocks, firmly holding me towards his face. \n\nI moaned out loud. It was taking all my self-control not to thrust my cunt into his face, simply because I knew we'd fall over. And I'd look like a total slut, but I suspected he'd be fine with that. I guessed that he'd been with at least one woman before, probably not much more, and he'd figured out what he liked, but right now he was very effectively conveying the message that it was me he wanted to be with.\n\n\"G-gorgeous,\" he breathed, standing up. In a rare moment of machismo, he picked me up by my waist, dangled me over his shoulder almost in a fireman's lift, and carted me over to the bed where he lay back and dropped my weight astride him. He reached round to my bottom, which he curved his hands round and fondled happily through the thin cotton. Eventually I wriggled sideways to land on the bed bedside him, and the cold surface had me scurrying to get under the blankets. My preparation, with the hot irons, made this bed toasty warm inside, even without a topless man. Just as well Tom was aware enough to hold an ankle and get my boots off, followed by my jeans. He nuzzled my thighs again, but I rolled over to get warm under the covers.\n\nHe hastily sat back down on the bed, cursed the iron lump he'd sat on, shuffled over and pulled off his socks and jeans and came to join me. It was so quick I didn't have a chance to admire his legs, but different and thus clean boxers was a good sign in a man! We carefully shifted the irons to the outer edges of the bed, and rolled together -- the mattress was saggy so that happened whether we liked it or not -- and let our hands roam all over each other.\n\nTom was superficially similar to Ed with his sturdy build, similar height and colouring, but while Ed had been fairly solid overall, his back and chest were flat. Tom had defined muscles -- nothing extreme, but a distinct difference. Though the main difference was mentally -- Ed had given me the impression that I was a prize, he'd played for and won, and only during the night had he come round to realising I was an individual, not just yet another woman. \n\nTom was almost the opposite -- he'd got to know my personality first, in the total absence of even knowing what I looked like, and clearly wanted to be with me as a person. Now, thankfully, he was letting himself treat me as a woman, or rather, finally I was getting to be a sex object. \n\nIt made a huge difference. Mostly because even as I got naked with Ed I knew it was going to be a one-night stand. Now, however, I was already looking forward to seeing Tom again -- hopefully somewhere warmer!\n\nOn the plus side, here, there wasn't anyone right on the other side of a thin wall... \n\nAs Tom kneaded my breasts, he tried squeezing my nipples gently. It was like an 'on' switch for my cunt. I moaned and then cried out, 'Oh, god!' when he did it again, thrusting my groin upwards against him. And his cloth-covered cock brushed against my damp pants, a delicate pressure that sent my mind flying away with pleasure.\n\nHe looked concerned when I whimpered, but immediately realised that I was fine. Very much fine. He lowered a hand to my crotch, and I did the same to his, putting my hand cautiously round the tent in his shorts. There was clearly something going for slow gentle touches, as he gasped and made a groaning noise in the back of his throat. When it got too much for me, I pulled away and settled myself comfortably to grip his cock harder.\n\nHis cock was totally vertical now, sticking up with the end just visible above his waistband. I left his boxers in place and held him through them, rubbing my thumb across the rows of elastic onto his tip, again, and again.\n\nHe swore, and shouted. \n\nExploding a word out loudly worked to get round the stutter, but the result was pretty much the same as from any bloke who was about to come: \"Oh FUCK!... GOD! GOD! YES!\"\n\nSuddenly my hand was full of wet, sticky heat, with more running back down to soak his boxers. Instinctively I wiped my hand on a dry part of them, then apologised.\n\n\"It's OK,\" he assured me, raising his back off the mattress so he could shimmy out of them. \"B-better than a wet patch on the bed!\" A fair point. I tried to catch a look under the blankets, but only got a teasing glimpse before his groin fell into the darkness again. He lay down on his side to face me, grinning. As we snuggled up, his softened cock rubbed against me, not quite where it would have maximum effect, but strangely intimate.\n\n\"You OK?\" I didn't understand. \"Me, naked? Bed?\" He added some visual gestures.\n\nI realised I was just wearing knickers, in bed with a naked man. Whom I'd just made come. Some might jump to conclusions from all that, about what I would be up for. \n\nTom didn't. It was refreshing.\n\n\"Um, yeah. Um. I might keep my pants on tonight though.\"\n\nHe nodded. \"Yeah. Keep some surprises for the second date.\" We both knew that it was more about not enabling random penetration that a dodgy bloke might 'accidentally' try. He reached over and pulled my knickers up snugly, and stroked over the gusset. It was so amazingly sensitive I couldn't imagine what it would feel like without the protection of fabric. Sure, Ed had been there, but I'd been pretty drunk, and this connection was totally different -- so many gentle touches sensitising my skin all over, making me wanting more and more of it, the more I got...",
        "In the morning, we snuggled lazily, watching the patterns of sunlight through the trees hitting the floor. When hunger drove us to move, we dressed hurriedly, and I watched as he used a battery-powered razor to shave his face by touch. \n\n\"Have I missed...?\"\n\nI reached up to touch a remaining area of bristles, slid my hand round to another. \"Just here, and here.\" Touching someone's face, fingers running across such sensitive areas, felt more intimate than anything I'd done with anyone else so far. I was dressed already, and suggested, \"How about I go down now? If we go down separately, we might escape the Spanish Inquisition...\"\n\nTom nodded. \"Their main weapon is s-s-s-s... sur... fuck, that, and Rich and Ben and Ed...\"\n\n\"Exactly. See you in a bit. Coffee?\"\n\nHe shook his head, tried to answer, and put his forefingers together in a T shape.\n\n\"Tea. Will see what I can do.\"\n\nI slipped downstairs quietly, hoping to blend in with the crowd in the kitchen and avoid questions about what I'd been up to the night before. \n\nUnfortunately, I walked straight into Ben.\n\n\"A'right? Didn't see you after the poker got going last night?\"\n\n\"Yeah; didn't particularly care for you lot getting lairy yet again. Hung out in the kitchen and then had an early night. Well, early-ish.\"\n\n\"Oh, yeah? We know about you and early nights. Cough, Ed, cough...\"\n\n\"Ha, ha. Caught up on my sleep nicely, so I don't look like shit this morning. How did you do at the poker, anyway? Everyone admire your body?\"\n\nBen wasn't good at poker-face, nor at refraining from bluffing wildly. He blushed. \"Toom and Eddie did worse.\"\n\n\"Ah, well, looks like I didn't miss much, then.\" He thwapped me with a tea-towel. \"Where's the tea?\"\n\nBen left the kitchen and I filled the kettle so it would take a while to boil -- there would certainly be demand for lots of caffeine when it was done. Rich wandered in, clad only in jeans, quite a pleasant sight, and started work frying up bacon -- an even better sight!\n\n\"Mornin', Karen. Where did you get to last night, after nicking the Baileys?\"\n\n\"Oh, looked in at the poker for a bit, got traumatised by Eddie and Toom with most of their kit off, eventually fell asleep,\" I lied.\n\n\"Aye. I hear it was a poor show, all the girls being too good at cards. Oh, morning, Tom. You in the poker too?\"\n\n\"I didn't see you in the poker. Shame!\" I grinned, flirting so obviously that Rich might assume it was a joke. \"You missed Ben and Eddie embarrassing themselves.\"\n\nTom caught on quick. \"My heart bleeds from the missed opportunity,\" he said deadpan. \"I apolo... that you had that si, si, si...picture, inflicted upon you.\"\n\n\"I'll live. Tea?\"\n\nTom nodded, and managed to avail himself of the tea I'd made him, and a bacon sandwich. Once I'd plunged the coffee and had the first mug, and acquired myself an egg and bacon butty -- bless Rich, he did cater well -- I felt more positive towards the world than I ever had.\n\nEveryone was less hung over than the night before -- Ben, Eddie and Alec being exceptions. Delia was gleefully being very loud and cheerful round Ben, and everyone was laughing at the other two. \n\nIt was a lazy morning in the house, some card games plus leisurely repeat breakfasts, so no-one was particularly aware of who was where. Tom took advantage of this to tell me, \"I put my bag near the s, s, t, ... Landing. And left yours outside the room. I might have implied to people, I was in the s, same bed as last night, to everyone except Mike and Cassie of course...\"\n\nI laughed. \"Ben thinks I spent last night in the kitchen until I fell asleep somewhere. Everyone else thinks I was playing poker and they just didn't notice!\"\n\n\"Well, you are good at poker,\" he said with straight face.\n\n\"Evidently!\" I failed to keep my own face straight.\n\nWe had a quick hug and kiss, and then went our separate ways with various friends until it was time to pack the cars and head down to the pub for a late lunch, once it was uncrowded. Ben looked like he needed all the energy he could get before driving us home!\n\nBy an amazing non-coincidence, Tom ended up opposite me. Less obvious than being next to each other, and I could lip-read him and he could mouth words when necessary. Cunning, eh? We weren't trying especially to keep our nascent relationship secret, just to get as far as next weekend and be totally sure there was one, before the entire world started commenting loudly on it.\n\nIt was a remarkably mellow meal, to the waitress's relief -- thirty teenagers, almost all lads, would usually be more trouble, but people were tired and partied out. Delia and I plotted to host a party at ours for a couple weeks' time, and mused as to the likelihood of Mike and Cassie lasting. It was generally agreed that the strip poker had been a waste of time, though I noted Gareth stayed silent! Finally, Ben said it was time to start driving south again.\n\nTom gave me a hug, which we prolonged for quite a while, even risking a kiss when facing away from the others. It was quite fun trying to be subtle, given there wasn't anything in particular riding on it. It wasn't like the fear in Annie's eyes, walking through town with me. \n\n\"I could come up Friday, or the day after?\"\n\n\"Friday,\" I said firmly.\n\n\"Traffic will be bad. Can't promise to be there before eight, maybe even nine. You know what it's like.\"\n\n\"I know. Don't worry, I'm not planning to have an early night!\"\n\n\"Oh? I rather li, li, liked it, when you had an 'early night'!\"\n\nWe separated, laughing. Delia and Ben clearly copped on when I refused to explain what was so funny. \"First it's private jokes, then it's love,\" Delia said.\n\nI rolled my eyes. \"You'd know. Promise not to distract Ben from his driving?\"\n\nWe squeezed back into the Fiesta, Alec falling asleep almost immediately. I might have somewhat exaggerated my inability to hear Ben and Delia quizzing me on exactly what I'd been doing with Tom and my intentions towards him, and dozed off myself. Once home, it was pretty much time to do laundry and ironing and such tasks before bed -- we all needed that early night.\n\nRarely had I actually looked forward to work on a Monday. Never as much as that day. I logged on, pulled some code up on one screen, and started Say on another.\n\nTOM: SAY KAREN Morning! How are you on this delightful sunny day?\n\nKAREN: SAY TOM Well I'm at work, which on the plus side means I can chat to you.\n\nTOM: SAY KAREN :-)\n\nKAREN: SAY TOM for a bit anyhow, work's getting tough. I Don't suppose you know how 8502 assembler assigns memory? Sooner I fix this memory bug, sooner I'll have time...\n\nTOM: SAY KAREN no idea. Ask Davy, he's the assembler king.\n\nTOM: SAY KAREN sympathy, sounds tedious. Give me Fortran any day.\n\nKAREN: SAY TOM yup. I'm trying to rescue this control code...\n\nThat's geek romance for you.\n\nEventually, Friday rolled around. Ben and Delia were being kind and not teasing me too much; Alec was bring forcedly cheerful and annoying, so no change from usual. Charlie was gleefully telling me everything he'd heard from the lads up north -- Tom was 'pining' for me, Mike claimed to have been kept awake by our loud noise in bed -- the hypocrisy of that one stunned me -- and there was a book running on how many students I'd give a blow job to by the end of the year.\n\nI mentioned the existence of some of these rumours to Tom.\n\nTOM: SAY KAREN Pining? For the fjords or just resembling a coniferous tree? Either way, no. Though very much looking forward to tonight.\n\nTOM: SAY KAREN I'm not a gambling man, but it would seem churlish to lay any money on such a bet.\n\nTOM: SAY KAREN unless I had insider info of course.\n\nKAREN: SAY TOM if you split the winnings!\n\nTOM: SAY KAREN of course\n\nKAREN: SAY TOM well it's zero so far... Ah. OK, one.\n\nTOM: SAY KAREN Rich? Could have done worse, sound bloke.\n\nTOM: SAY KAREN Rumour mill's in overdrive then. Heard there was a chap at your party before Christmas? I didn't believe the rumours about Ben and Charlie...\n\nKAREN: SAY TOM!!!\n\nKAREN: SAY TOM OK, there was a chap before Christmas, one night stand, all fine but just no to anything else, but he wasn't one of us.\n\nKAREN: SAY TOM Ben and Charlie?? In their dreams!!!\n\nTOM: SAY KAREN Next you'll be saying you never shagged Steve, either!\n\nKAREN: SAY TOM What? STEVE?? Yes, cos I haven't!\n\nTOM: SAY KAREN yeah, thought that was the case cos it wasn't him saying it -- he'd had the opportunity & was denying it.\n\nKAREN: SAY TOM oh god, I know, it's from that party that ended up at his, and I was talking to him on the stairs. I'll tell you what it was -- he got upset about his dad dying so then we went in his room so \n\nKAREN: SAY TOM the guys didn't see him crying, and then we talked loads, and eventually he gave me his bed and he slept on the floor. Really nice guy. I've got a lot of time for Steve.\n\nTOM: SAY KAREN Yeah, good bloke. Like I said, it hasn't been him saying he slept with you, just all his housemates jumping to conclusions. And that Mike being a right stirring arse, as usual.\n\nAnother hurdle passed -- Tom didn't think I was a total slapper. Or didn't care. \n\nBetting aside, I wanted desperately to double the number of students I'd sucked off, to a mildly-slutty two! \n\nCassie had probably had more of the guys than me, now. I shook myself. It wasn't a contest, either to be chaste nor to score. Now, I knew what I wanted. Who. Just had to wait until that evening to get started.\n\nOnce home, I ate a snacky dinner, thinking I probably had a couple hours before Tom arrived. \n\nThen the doorbell rang. It was only six-thirty. Delia answered it.\n\n\"Sorry, no beggars or hawkers...\"\n\n\"Very fu, fu, fu, fu, funny,\" Tom groaned, partly at himself, and came in. I came into the hall and let Delia squeeze out past me. Tom and I looked at each other a bit awkwardly, and then put our arms round each other, decided we didn't care who in the house saw, and kissed deeply. It was great.\n\n\"Oh, stop putting me off my dinner,\" Alec snapped.\n\n\"Aw, they're sweet!\" Delia retorted.\n\n\"You'll cope. Tea, Tom?\" He nodded vigorously and gave a thumbs-up.\n\nI put the kettle on and gave him the tour, such as was needed -- front room, kitchen, bathroom at the back. Yard off the kitchen. Alec had put on a loud action movie and was looking unwelcoming, so I figured inviting Tom to my room would actually be quite appropriate.\n\n\"With the famous c-comedy bed? Lead on!\"\n\nWe went upstairs. I indicated the bathroom, the others' bedrooms and mine, and opened my door. Thankfully I'd tidied up already, which really just meant making the bed, as that was the only thing anyone ever noticed. I squeezed down along the wall to let him into the room.\n\n\"Wow. That's a... bed!\"\n\n\"Yup.\" I scrambled up onto it, got Tom to pass me our teas so they could go on the unit that served as a bedside table, and he sprang up to land beside me. The three mattresses wobbled under our combined weight. I giggled at his shock, and rolled over to him, obviously wobbling us about even more. We silently agreed that kissing and cuddling, while rolling about and bouncing up and down, was a good way to spend the next half hour or so, like small children on a bouncy castle, before we finally pulled ourselves up to sitting, quite out of breath, and drank our lukewarm tea.\n\nI remembered my responsibilities as a host. \"You wanted to see the new Bond film? It's on at 8:30. Or nine. D'you want to see if we can get tickets? Ah, but have you eaten?\"\n\nTom considered a minute. \"Had a s-andwich, as I left. Yeah! You? Eaten, or ready?\"\n\nI decided I was ready to go. We could have popcorn and ice-cream there, after all. We escaped the house before anyone could suggest joining us, and set to wander down across the park to the cinema. \n\nLike I had with Annie. Only, as we held hands and grinned at each other, so very very different.\n\nWe reached the cinema with twenty minutes to spare, and managed to get tickets central enough that, with luck, my neck and body shouldn't get too painfully contorted. I mentioned, as casually as I could, that my neck would hurt if it had to stay in any twisted position for more than a moment. I didn't think that would be enough to put Tom off me, but years of being told I was 'crap', 'malingering', 'a spaz', 'always whinging', not allowed in mainstream school, takes its toll.\n\n\"Oh? Will you be OK tonight? Anything help?\"\n\n\"It should be fine, thanks.\" Someone not running away to find a different girl, one without 'all my issues' as my mum charmingly put it, was a magical relaxant, it seemed.\n\nIt was still a pleasant surprise to feel his hand on the back of my neck, stroking and keeping it warm. Having scored seats, we bought ice cream tubs and, we decided decadently, popcorn too. He'd paid for the tickets, so I got the food.\n\n\" You OK getting that popcorn, too?\"\n\n\"No worries. As long as you aren't going to throw it at people?\"\n\nHe pretended to think. \"Hm. They might th-throw us out.\"\n\n\"Yes. I've been thrown out for that.\" As he laughed and pretended to admonish me, I added, \"You think that's bad? It was on a school trip, and it was the teacher telling us who to throw it at!\"\n\n\"Well. You have to obey teachers, don't you?\" He couldn't hold the laughter in any more. We sat down, ate our ices, and lay back with the popcorn between us, as the lights went down further and the curtains opened wider. \n\nWe could have kissed during the show, in traditional movie-date fashion, but the film was too good -- apart from Tom's odd sarcastic comment, \"Big Ben's gone walkies, I see,\" and my \"God, can't he keep it in his pants for once?\" - we stayed silent; the cinematography was too enthralling for us to do anything but watch, holding hands once Tom had scoffed most of the popcorn. The car chases and action scenes were, as expected, brilliant.\n\nAs the credits rolled past, we turned towards each other, nodding in approval, and might have got a kiss in if people hadn't been tutting over us, waiting to file out. Instead we got outside, into the park, found the first handy tree to lean me against, and finally managed an uninterrupted session of making out as much as we wanted to, ignoring everyone walking to and fro. \n\nApart from a slight sadness I'd never been able to do that with Annie, it was thoroughly enjoyable. I felt relief of some internal pressure. Now I just wanted more of the same, equally undisturbed, somewhere I could lie down and we could remove clothes without freezing... Yet again, I blessed Delia for insisting she and I had the single rooms!\n\nThe telly was on when we returned. I stuck my head round to confirm I was in, didn't mention Tom, and we went back upstairs. Back on the incredibly comfortable high bed, I passed an object to him. \"Picked this up when I was shopping. Might be useful.\"\n\nHe turned over the grey rubber door wedge. \"... Genius! I hope you calculated the height of the gap and the rotational force of the door, to confirm this will have enough resistance...\"\n\nI could tell, by now, he was joking. \"Nope. Life's too short! Besides, they come in one size only. And like anything could resist Ben and Charlie's curiosity if they really put their minds to it! Or to barging a door. Don't worry, I checked for bugs earlier and we're clear.\" I hadn't. Though I had triple-checked that our Say messages weren't being secretly copied to anyone else, any more.\n\nWedge safely installed before Ben could find another excuse to check I was OK, we began removing each other's clothes; again, a surprisingly intimate act, having done for me functions I'd always done for myself. I scraped my arms upwards to let my T-shirt be removed, leaned forward slightly to allow my bra to be chucked away. Now, both topless, mere hugging was a warmer, sexier experience. His solid chest pressing on my skin; I really liked that. I wanted more of it.\n\nI wanted to feel Tom's legs, too. I felt years of female conditioning weighing me down, telling me not to be too forward, don't push, let him make the first move... and determinedly pushed it aside, reminding myself that Tom clearly wanted me, not just a generic girlfriend to possess. \n\nBesides, he was quite capable of making clear what he did and didn't like.\n\nI looked into his eyes while I found his jeans button by feel. As I tried undoing the button, fumbling it, his lips parted with a deeper breath. When the zip came down, he continued gazing at me, exhaling, then cupping my denim-clad arse in both hands. I managed to pull his jeans down; he did the same for me. Equality. A quick pause for the always-undignified getting trousers over our feet and flinging them aside, but finally, there was Tom's body, long and golden-pink and beautiful across my bed, best thighs I'd ever seen, dark-green boxers hinting by their shape as to what lay beneath. For a moment all I could do was look, almost scared to touch. Well, you aren't allowed to touch the exhibits in art galleries, are you? \n\nI got over that within a minute, running my hands up his slightly-rough furry legs to those firm muscles above his knees. He was doing much the same, more gently, more slow and curious. We were in no hurry. Thus we spent a good hour on top of each other, stroking unfamiliar skin with a different texture, inhaling and nibbling a different scent, smiling at each other, enjoying being able to see each other. Definitely, a hobby.\n\nEventually, especially after some squeezing and stroking over the parts of my knickers he could see, that strange bit of my cunt began to throb and swell even more than usual. I was starting to master ways to generate that feeling, and knew I wanted more of it. Could Tom help me with that? \n\nObviously this wasn't the time to bring out my vibrator, a smooth beige plastic stick that I'd daringly acquired from a petrol station late one night. Best tenner I ever spent. \n\nDid this mean I wanted sex? I wasn't sure. \n\nTom's finger snuck down over the damp gusset of my pants. I gasped, and knew that one thing I definitely did want was to touch him under where his pants were. I started pulling them down at the back. He glanced at me, realised I was serious, and obligingly wriggled out of them.\n\nWhat a gent.\n\nWhat an amazing arse!\n\nAnd finally, I could actually see his cock properly. Not that I'd really been thinking about it. To be fair, cocks always looked a bit weird to me, but this was certainly a good example of the genre. Long, smooth, right size to get my hand around. \n\nAnd stiff. \n\nDefinitely nice to hold. \n\nI played with it, all velvet-soft on the outside, solid core. No foreskin, though given his reaction when I ran a licked finger along where it should have been, he probably wasn't missing it. Clearly still hugely sensitive! In a good way.\n\nI felt his hand slide onto my knickers to squeeze a buttock. I couldn't see his face to express to him that was more than OK, so pushed them down myself. \n\nThere was something particularly filthy about pants pulled to half-mast. Nudity had connotations of being care-free and pure; clothes pushed aside was clearly only about getting access for sexual pleasure. Dirty, slutty -- all those words I wasn't sure I could embrace, then.\n\nTom yanked off my pants and chucked them aside somewhere. He looked nervous suddenly, like he was unsure about what to do next. Or about what I'd let him do? Or maybe, about what I expected?\n\nWe needed an obvious piece of communication. I knew one thing I did want. I took his hand and placed it between my legs. His fingers, flat against my cunt, made such a good sensation I just had to push myself onto them. He got the idea, pushing and rubbing firmly back, and I gasped and squeaked.\n\n\"Should I stop?\" he whispered.\n\n\"No!\" I wailed, devastated at the mere thought.",
        "\"Good.\" \n\nI rocked happily on his solid hand. I felt I could have done that all day, but eventually my stomach muscles were too fatigued. I had to lie still.\n\n\"Tell me, how's this?\" He lifted his hand away and licked two of his fingers, clearly liking the taste of my crotch, which was the filthiest thing I'd ever seen. My pussy pulsated excitedly. He replaced his hand between my legs, wriggled it upwards, and carefully stroked my labia to figure out a path between them. I lay back and tried to tilt in a helpful direction.\n\nSlowly, agonisingly slowly, a finger approached the opening of my vagina and ran round the edge. Even more slowly, that finger came inside, where it should have been all my life. I went \"aaaah!\" in satisfaction.\n\n\"More?\" I begged. \"Please?\"\n\nA brief panic when I thought 'more' might be interpreted as his cock, but then the finger came back, and it brought a friend. The second finger had to squeeze in. It stretched me, exquisitely, and I couldn't help making noise. \n\nIt was the best thing I'd ever felt. Technically, it wasn't a new thing; Ed had done the same to me and it had been wonderful too, but being so comfortable with a man, knowing he was enjoying what we were doing as much as I was, not thinking about possible next steps yet, me looking forward to making him feel equally good just because I wanted to -- all those circumstances made it even better. And being sober.\n\nThough the best part was simply that this filling of my cunt was happening right now. Right here. Pressing on all sorts of good areas -- I dismissed the theory that the G-spot was a myth and guessed I had at least three -- knuckles hitting around my clit but not hurting it -- pure bliss. I could, I thought selfishly, have stayed put for the whole weekend.\n\nA third fingertip crept to try to join the others. It was almost fantastic, but somehow it meant discomfort. \"Uh-uh,\" I said, shaking my head. The finger went away again. I relaxed. Then there was warm air over my clit, and the thump of the duvet hitting the floor, as Tom put his face down into the palm of his hand. \n\nA touch of his tongue on my clit was too much. \"Too sensitive there!\" I squealed, and the tongue retreated slightly, obediently. Of course then my contrary body wanted more, so I tried to position myself under his tongue again.\n\n\"Wozzup?\" he mumbled, then lifted his neck so he could see my face when I answered.\n\n\"Want it... but it's too much, too,\" I complained, not very helpfully.\n\n\"Mmm,\" he hummed in the general area of my clit, making me want more again. \"Squeak if it... that won't help... 'no' for too much, 'yes' for g-good, OK?\"\n\nMy outer lip was being sucked. \n\nI'd never really imagined that. The mags one found in park bins didn't ever have pictures of such things. Nice. \n\nInner lips -- ever such gentle licking: nice, but then too much. \n\nSudden wetness over my clit: I supposed a mouthful of spit should have been off-putting, but it felt so good. \n\nA tentative move of his tongue towards my clit again, and then a definite lick. \n\nI yelled, bucked him off me, then howled in disappointment that he'd stopped.\n\nTom sat up and stared at me, 'Seriously?', all eyebrows raised.\n\nEmbarrassed, I squirmed. Didn't meet his gaze.\n\n\"Was that good or bad?\" A calm voice, like you'd use for diagnostics of anything else. Maybe my software was buggered?\n\nThere was, at least, an easy answer to his question.\n\n\"Both.\"\n\nHe rolled his eyes. \"OK, I can do something else, don't worry.\"\n\n\"But...\"\n\n\"?\"\n\nI got the words out by rushing. \"Could you please do that again but sit on my legs so they stay still so it can keep being too good, please?\"\n\nA pause. Had I shocked him? I'd certainly never felt such a dirty slut in all my life.\n\nI needn't have worried. Tom took a moment to parse the sentence, then nodded, satisfied, as if he'd found the right part of the instruction manual. \n\nHe pulled my ankles together, knees wide apart still, plonked his chest on top of my feet, and put his face down back where he'd had it earlier. And then two fingers back inside me. And then his tongue.\n\nI grabbed a pillow and clawed it to my chest with both hands, nails digging in. I clung to the pillowcase even as I held the pillow over my face, muffling my uncontrollable screams and moans. Tom gripped my thighs firmly and persisted.\n\nIt was amazing, aside from the bit where I got bashed by his nose, and I continued to bite the pillow until I had to collapse, shattered. Tom slid up to lie alongside me and removed the pillow, and we pulled each other into an enthusiastic kiss. Odd, tasting myself so strongly, a bit sweet, bit musky, slight background of urine, but I really didn't care.\n\n\"Yurra difficult woman to please,\" he commented. \"But worth it.\"\n\n__________________________\n\nIt was the second night of our weekend together. A walk across the Downs had whetted our appetites, so I'd splashed out on a pub dinner. Tom exemplified the manners his family had clearly ingrained in him by being quite forceful about paying his way -- we both knew we were on exactly the same salary after all, and his car maintenance probably cost most of what I was paying in rent -- but I told him what I'd read once: splitting the bill implies there wouldn't be another date.\n\nHe thought a moment, then put his wallet down. \"OK. Are you coming to mine next weekend, then?\"\n\n\"Won't your parents mind?\" I couldn't imagine parents who welcomed partners of their children. The horror of my mother having met young gentlemen who were only friends of mine was something I aimed never to repeat. My dad probably would be little better if he weren't off in South America. I hoped I could wangle staying in college during as much of my university vacations as possible.\n\n\"Not at all! They love people. If you mean, 'oh god, young Thomas has a girlfriend...'? Well, they've got used to both my sisters and their blokes. Brother-in-law and fianc\u00e9, now. If you're worried about anything, it'd be my s-s-s-isters! Very protective of their baby brother, they are... \" He grimaced.\n\n\"You can assure them I have only pure intentions... Oh.\"\n\n\"They'll be fine. Really. They'll like you.\"\n\n\"OK.\"\n\n\"There's only single beds in my room and the guest room, though, so it won't be quite like this weekend.\"\n\n\"OK. Sure.\"\n\nI was curious to see what he was like in his natural habitat, as it were. I squeezed his hand and we returned to his car to go home. I was getting very used to navigating, this year.\n\nWe joined in a couple of the games being played at mine, and hit upon the genius idea of having a bath together rather than sequentially, to guarantee enough hot water. It wasn't quite as much fun as we'd hoped, even once we'd folded our legs around each other and managed to avoid the taps, but certainly good to be both warm and clean! \n\nBack in my room I dried my hair, instinctively went to put on pants or pyjamas, realised it was surplus to requirements, and joined Tom in my bed. As I lay down, I felt his cock move against my leg, of its own accord. \n\nWhich reminded me about the possibilities: naked in bed with an enthusiastic naked man. \n\nDid I want to have sex? \n\nWell, anything that might feel as good as his fingers, definitely! \n\nAnd he'd probably enjoy it more, too. \n\nDecision made, but no hurry. We had all night. \n\nSo there was more cuddling and kissing and discovery of ways he liked to be touched -- that line down the underside of his penis was a very good place to run my finger down, apparently. His nipples, not connected to any nerves, so far as I could tell. Sucking his cock was fun, until my jaw got sore from holding my mouth open, but nibbling that beautiful soft skin of his shaft was just as good for both of us. Though he couldn't do much for me at the same time. \n\nThere was an obvious answer. \n\nI caught his eye, looked down at his cock, looked questioning at him. \n\nHe raised his eyebrows very slightly, 'are you sure?' \n\nI nodded my chin a little: 'yes'. \n\n\"I l-l-l-left the c-c-condoms in my bag...\"\n\nI opened my top drawer and tossed him a box of Mates. What I hadn't learnt yet was to have a new box ready-opened -- I didn't want to look like I'd used any, I suppose, too -- so Tom spent the next couple minutes cursing the cellophane and the stupidly well-sealed box, erection dwindling by the second. \n\nStill, no hurry and not like I couldn't rekindle his interest in another couple minutes, so I chalked that one up to experience. \n\n\"Hold me?\" he breathed, indicating the base of his shaft. It was ridiculously easy to stiffen him again, and the condom rolled on neatly. It didn't make the penis look any more odd than it did to start with. I suppose if you grow up with one you're used to it, but trust me, to women, their looks really aren't attractive. It's what you do with it that counts.\n\nSo: dressed and ready. \n\nTom played with me with his fingers for a moment, and then I lay back to receive him, classic missionary style. That seemed like the place to start. \n\nHe pulled himself up on top of me to the approximate position. \n\nI felt the tip of his dick on my cunt, and with that and the weight of him on me, it triggered a flashback of a much more unpleasant time in a physically-similar situation.\n\nI think I screamed, at least a little high-pitched sound, but I definitely threw him sideways off me and curled up in a protective ball, shaking in terror.\n\nI don't know how long it was, but eventually I was aware of Tom giving me a cautious hug and putting the duvet over me. He lay next to me, above the duvet, nervously stroking my hair.\n\n\"Sorry,\" I said. It seemed necessary, if inadequate.\n\n\"'S' OK,\" he said. \"Um... did I cause that?\" He looked concerned, as well as confused.\n\n\"I don't think so.\" My fear seemed unreal, already gone far away again. \"Want to try again?\"\n\nHe looked sceptical. \"Now? Really? I don't want to hurt you...\"\n\n\"You didn't. Please?\"\n\nI wanted to do this, to convince my subconscious brain that we'd moved on from that fear and from now on, my body was all about pleasure.\n\n\"Well, OK...\"\n\nA fresh condom, a longer time to get him in the mood again. Snuggling as we tried to position ourselves. All ready and so far, so good. \n\nHe tried to slide forward.\n\nI bucked in fear again, slightly controlled this time, just bringing elbows and knees to my chest, but he was half-expecting it and sprang off me. He lay down by my side. \"Not tonight, don't think, love.\"\n\n\"Love,\" that was new. And he had a point, and more importantly he wasn't running away from me and my being all fucked up. \n\nThat was probably when I fell in love. \n\n\"Yeah. Sorry.\" \n\n\"Don't be. Back in a mo.\"\n\nI curled up under the covers, trying to think about nice things. It didn't really work. Tom returning from the bathroom, clearly having had a quick hand shandy, had me feeling horribly guilty, despite how he was being so nice about it. \n\n\"O, o, only me. Nothing to be frightened of here. You catch up on your k-kip and it'll all be fine.\" \n\nThe next morning could have been really embarrassing, including being educated on how sexual pleasure and morning wood didn't go together as well as I thought, at least not until after a quick diversion, nipping down the corridor. Once he returned to my room and I went to pay attention to his awake, clean cock, no longer with a full bladder to distract from it, I was startled by Tom touching my head gently, making eye contact. \n\n\"Karen? Love? You do know, you don't have to? N,Not like, like... trade-off, doing this because you didn't...?\" \n\nI thought for a moment, indignant because of course I wasn't feeling I must, then realising that yes, in the back of my mind, I probably was vaguely keeping track of the give and take. \n\n\"Yeah, I know. But... thanks for saying it.\"\n\nHe nodded, and indicated his cock. \"Go on, then.\" His cock might not turn me on by itself, but his intense gaze into my eyes as I lowered my mouth to it certainly did.\n\nIt wasn't a guilt-offering, really, but I did try to make that blow job especially good. \n\nThe recipient was certainly satisfied. \n\nWe went down the caff for a fry-up, then back to bed for some more experimentation. We were being trained to be scientists, after all.\n\nOur results included lots of pleasure, though it turned out I had the same panic response to being leant over or straddled, if a cock came anywhere near my face. Worse, actually. That bit at least wasn't a surprise to me, so I could spare Tom from the violence of my reactions. \n\nIf his weight was the trigger, how about doggie-style? \n\nIt was a solid hypothesis, worth testing. His fingers went deep and I begged him to bury his cock, while he stroked my arse and could reach round to my tits, squeezing them until I moaned and demanded satisfaction. \n\nThis looked promising. Experimental apparatus all in working order.\n\nIt felt even better. I pleaded with him to hurry up and fill me. \n\nUntil the tip hit my vulva and the same panic came over me again. Mixed with sexual frustration, which felt horribly unfair, I grumbled. As well as being a let-down for him. \n\n\"Really, 'top worrying!\" \n\nEventually he admitted, \"I've got hands... quite used to that...\" \n\n\"Can I watch?\" I sounded over-eager. \n\nHe blushed, and I worried I'd been too forward. \n\nAs usual, I needn't have feared. He took himself in hand, applied some lubricant, and held my gaze as he stroked himself firmly up and down, slowly, then faster, then focusing on the end at the head. His eyes lost focus and he started mouthing, \"yeah, yeah, Karen, good, oh Karen...\" \n\nThe fountain of come he showered across the room was pretty impressive. But it was watching my boyfriend saying my name whilst playing with himself that was hot as hell. \n\nMy cunt was desperate for attention, and thankfully Tom was soon happy to oblige, using those strong hands again. \n\nI felt we'd achieved an amazingly intimate connection by the time he had to set off for home. \n\nMore to the point, I couldn't believe my luck in how understanding he was, and couldn't wait for the next week to pass. \n\nEventually, Friday crawled into position.\n\nTOM: SAY KAREN When will your train get here? \n\nKAREN: SAY TOM depends which one I catch, so I'll call you from Crewe. I don't know if I'll be able to hear you or whoever answers, but I'll be with you 40 minutes later, OK? \n\nTOM: SAY KAREN cool, I'll give the folks a heads-up. If they're in -- Ruth & Jude will probably be at work still, and on a lovely day like this the 'rents will be out at the allotment for hours. \n\nTOM: SAY KAREN see you soon, love you. \n\nKAREN: SAY TOM you too. xx\n\nI wished there were a way to capture and save the contents of the screen. Some teams were experimenting with these new WIMP environments -- a good one called OS/2 and an inferior software package with the ridiculous name of 'Windows' that appeared to be capturing more of the market. One of those machines might have been able to record my screen as an image. \n\nI sighed, refreshed the screen, and tried to concentrate on work. Being called upon to demonstrate some non-functioning software to some foreign investors was actually a relief. \n\nAnd then the network cut out. Being 3 p.m. on a Friday, we all accepted our bosses' views that this was a good excuse to leave early. I pleaded with the station barrier guard who agreed he'd make a 'mistake' and let me onto an early train. Which meant I was able to call Tom the minute he was likely to be home. \n\n\"He, he, he, hello?\" \n\nI couldn't really make out the word but no-one else had a rhythm like that. Unless it ran in the family? \n\n\"Hi, it's Karen. There was a power cut at work so I got an early train and I'm at Crewe now. I'll be at Piccadilly at 5.15, if that's OK?\" \n\n\"djdjd! Hwisndksnejs...\" With Inter-City trains and Sprinters both moving in the background, not to mention hundreds of people and the platform guards' whistles, I wasn't going to hear a word.\n\n\"Sorry, deafie here, don't do phones! Can you just say yes or no? Is it OK to meet me at quarter past five?\" \n\n\"'ESS!\" \n\n\"Wonderful! I'd best get the train then!\" \n\nI ran, inelegant as the Ugly Duckling, but caught my connection. As I emerged from the barrier at his end, I noticed Tom spotting me while thinking I hadn't yet seen him, and liked the small smile growing across his face. Followed by full-beam smile once he saw I'd seen him. I lurched over through the crowds. Our hug and kiss upon being reunited were worthy of any movie. \n\n\"Gissa your bag.\" He hefted it onto his shoulder easily, and held my hand which helped keep my balance as we walked about 10 minutes to reach his family home. \"No-one's in, yet. Tea, c-coffee, you said you had never seen Rocky Horror, do you want to?\" \n\nSo we sat on a cosy leather sofa in a den, I watched the film, and he watched me enjoying Susan Sarandon and Tim Curry and all. It was risqu\u00e9 rather than pornographic, but I still tensed when the front door was unlocked, just as Frank tried to seduce Brad. \n\n\"Don' worry. It'll be Ruth or Jude.\" \n\nNerve-wracking enough. It was very clear his older sisters were both protective and a force of nature. But it wasn't a sister.\n\nIt was his mother. \n\n\"And this is Reverend something. The new vicar.\" \n\nCall me a coward, but beyond squeaking \"Hello, I'm Karen, nice to meet you,\" I decided Tom could deal with this conversation. \n\nHe indicated me, shrugged to indicate I'd already said who I was, and remained silent while his mum went to the kitchen. \n\n\"More tea, Karen, Vicar? Or sherry?\" \n\nThe reverend noticed there was one spare chair, so motioned to me to budge up next to Tom, plonked himself down, and pointed at the screen where Frank, dressed to the nines in corset and stockings, was in bed with Brad, in white Y-fronts and nowt else. \n\n\"Don't mind me, you can un-pause it now. Ooh, my word! That doesn't look very consensual!\" \n\nMrs Andersen returned with tea for me and herself, a bottle of sherry, and two glasses. She and the vicar had generous amounts while Tom and I pretended to continue watching the film. My original horror abated as I slowly realised both his mum and the vicar were very familiar with the film, not shocked in the slightest, and found it very funny. \n\n\"I'm going home!\" warbled the vicar after his third glass. While I admired his Richard O'Brien impression, I was rather relieved when he did. \n\nTom's mum apologised, saying the vicar was new to the area and didn't really know anyone yet. \n\nI didn't mention the only other vicar I knew was still pulling that one after five years and many, many bottles of my best friend's parents' sherry. What is it with clergy and sherry?\n\nThen Tom's sisters showed up. \n\n\"So you're the one leading my little brother astray?\", one of them quizzed by way of introduction. \n\n\"No. I'm sure he's quite capable of doing that all by himself,\" I deadpanned. \n\n\"He'd better not be leading you astray,\" she threatened. Tom attempted to look insulted, but it more resembled a frog. \n\n\"Apparently his sisters are his role models,\" I replied. \n\n\"Ah well, you're stuffed then! Sorry!\" \n\nTom managed to get a word in, having been choking on them during the whole of this conversation. \"J-Jude's right at that. Terrible example, 'e is.\" \n\nI struggled to keep up with the conversation at dinner, but it was clear this family was good-natured and cared for each other a lot, even if they did bicker and tease each other. I was landed with a pile of books to borrow and 'return next time you're up', which seemed like a good sign, as was the plan to go off hillwalking the next day with Ruth and her bloke. \n\nTom showed me to the small guest-room, with a single bed. \"I don't think Mum actually expects you to s-leep in it, really.\" \n\n\"You'd know best, I suppose, but given she told me I was sleeping here, I'd feel a bit guilty not. Didn't you say yours was a single, too?\" ",
        "\"True. Come see, see which you'd prefer. Quite happy to be elbowed out in the night!\" \n\nIt was interesting, seeing a guy's bedroom complete with a lifetime of possessions. I never really had, before. Oddly intimate, entering and noticing all the items on the walls, the shelves, and on a large desk. \n\nNothing particularly embarrassing, but I did spot a framed photo turned face down among various others. I assumed it had fallen and stood it up. \n\n\"Do'- do' -- DON'T do that!\" \n\nI dropped it and looked curiously at him. It was the first time I'd heard him speak sharply to anyone. \n\n'S, s,s, SORRY. It's, it's it's it's the ex... Guh-uk, kuuh.\" He sounded like he was being strangled. I waited. Then the word he wanted exploded out. \"Clare. Ex. Ex. Ex. Painful.\"\n\nHe shrugged, clearly more upset than he was trying to come across as. \n\n\"The ex? Just the one, then?\" \n\nAnother shake of shoulders. \"Pretty much. Thought we were doing really well, until dumped me a couple months ago. Met a guy at college... Could have told me before I spent five hours driving down to fucking S, S, S, S... outhampton...\"\n\n\"Southampton's a hole,\" I agreed, trying to get into the spirit. \n\n\"Yeah. Should have dumped her when she first went there,\" he tried to joke. \"Anyway, it's a nice photo frame, hoped to replace the photo soon...\" He looked up at me, shyly. \n\n\"I gurn, terribly.\" \n\n\"Excellent. We'll match.\" He smiled.\n\nIn the end he came to say goodnight to me, got into the bed, and we both slept soundly as sardines until morning. I could get used to that. We did some gentle canoodling but nothing that would be too distressing to halt when interrupted. I was liking getting used to that, too.\n\nThe next day we packed picnics and squeezed into his sister's Beetle, which seemed an impractical vehicle for taking camping. The plan was to camp out in the Shropshire hills. After a bracing walk through stunning countryside, it was time to erect tents before seeking out a dinner in a pub -- always the best way to eat when living under canvas. We got Bill and Ruth's up fine, and started on the second. I couldn't figure out how the inner went on the frame. \n\nTom was dismissive of my incompetence of putting it together. \"It should be fine. I put the old tent up to check it was all there, just like they tell you, but it was mouldy, so I got the other one out -- it's definitely got all the poles, inner and outer bits!\" \n\nBill inspected it carefully. \n\n\"Young Thomas?\" he intoned. \"You have, indeed, an A-frame of poles. You have, indeed, an inner and outer canvas which match each other. However, they are for a dome tent...\" \n\nWe tried to improvise and get the canvases to attach to the A-frame, given the weather wasn't expected to be windy. \n\nIt didn't work. It was going to have to be all four of us in the one two-man tent. Ruth was already way too sloshed from Bill's hip-flask to drive home.\n\n\"Ach, it'll be fine, said Bill. Ruth and I looked less convinced. I'd slept in the open before, but it wasn't warm enough yet. \n\nWe had an excellent meal, and hiked back in the dark, carefully. With Tom supporting me on one side and Bill on the other, I didn't fall over, but it would be a relief to get to bed. \n\nIt turned out that the tent might well be generous for two, and feasible for three, but I was the smallest there, and for four, there was not an inch of remaining floor space. We lay heads to tails in our sleeping bags, opening the flap to make it less stuffy. After a lot of banter, I grabbed Tom's feet to use as a pillow, to stop the chaps from kicking my face again, and got some bursts of sleep. \n\nThe next day, Sunday, we drove back early, for a slap-up Sunday lunch. I didn't take much persuasion to have a nap after -- though it turned out that wasn't what Tom had in mind while everyone else was out. \n\nGetting me to stay awake took a more effort on his part. \n\nHe was good with his mouth, though. I don't mean speaking. Back on board with filthy fun, I offered my gratitude and rashly promised him whatever he'd like. \n\n\"You sure? You know what I'd like, but only if you could...?\" \n\n\"I would, too, if we can get my stupid subconscious on board...\" \n\n\"Only if you're sure.\"\n\n\"I'm sure I want to! I can't promise anything else.\"\n\nIt looked promising. He was hard; I was wet. \n\nHe got a tube of lubricant on the job -- applying half of that was a lot of fun from my point of view. \n\nWe put a pillow under my bum: \"they recommend it in Company and 19,\" I said. \n\nHis rubber-clad cock felt cool against me, but not unpleasant. \n\n\"Go!\" \n\nHe tried, attempting to push forward, folding my labia out of the way. Suddenly I felt that pressure. It hurt ever so slightly, but more importantly, it was reliving that nightmare yet again. \n\nI rolled sideways, pushing him off as he scrambled off me. At least we were getting better at that bit.\n\n\"Karen? It's me, Tom. It's OK. Honest. You OK? Karen?\" \n\nI squeezed his fingers, let him hug me, enjoyed the warmth. I couldn't think of anything to say. \n\nAll too soon, it was time to shower before his parents returned. \n\nI calmed down under the hot water. And managed to return the favour to him, not because I was carefully keeping score, but because I felt he really deserved a good time.\n\nAs long as I was completely in control of the positioning, I decided I quite enjoyed the odd bit of sucking cock. Watching the effect on the men they were attached to was fun. Three men, made happy, now, and all perfectly happy to lie where I wanted if it got them getting their rocks off!\n\nAt least I was successful at one bit of a sex life.\n\n\"Is it OK, come to you again next weekend?\" \n\nI was relieved he still wanted to. Though after the tent fiasco, he possibly felt the same way. \n\n\"Yes! I can even provide a bed for both nights...\"\n\n\"Luxury!\"\n\n\"Yeah. Can't promise a clean bathroom, mind you. We're trying to house-train Alec and Charlie, but not much joy so far. I swear they just pretend to be incompetent at cleaning!\" \n\nA couple months went by, with us seeing each other most weekends, and of course being able to chat via Say at work. A few evenings, I even stayed late and got the bus home so we could carry on talking, much more productively and privately than via home or phone-box, and of course it was free. Even before 6 pm! These were the days when we were still asked to make business phone calls after 1 pm, where possible. If someone called in the morning, you knew it was important!\n\nTom and I were having lots of fun in bed, but still no successful sex. \n\nThen there was a long, long fortnight, of too much work for both of us, family events preventing us seeing each other on the middle weekend. That second week really dragged.\n\nIt was Saturday, finally! \n\nTom appeared at lunch time. The others were out, so we decided we might spend time in my room now, socialise later. \n\nThe cheeky bastard teased me loads. I wanted sexual pleasure, but he was stopping just as it got good. Git. I couldn't wait for later that evening, when I would have my revenge.\n\nBen and Delia returned, so together we ordered takeaway curry. Alec was visiting family, Charlie out elsewhere. Our conversation -- Ben and Delia with me -- took its usual flirtatious turn. \n\n\"You and Delia should get together and provide 'entertainment' for me and Tom,\" Ben suggested. I reminded him that Delia wasn't interested -- she shrugged apologetically as usual. \n\nTom twigged. \"But you would be?\" \n\nA quiet question, but going to the root of my heart.\n\nMy face burned. \n\nBen had always taken my sexuality in his drunken stride, but I'd never been sure how much he'd believed it anyway. \n\n\"Yeah,\" I said, casually as I could. \n\nThere was a short pause that seemed endless to me. \n\nThen Tom observed, calmly, \"Well, who wouldn't be?\" He made it sound like a compliment to Delia. \n\nBut then there his subsequent low query, \"D'you actually like men, though?\"\n\n\"Yes!\" I was vehement.\n\n\"Oh. Just ch,ch,checking,\" Tom gestured in a frantic back-paddling motion. \n\n\"No, that's not the problem,\" I said obscurely, wanting to cry. \n\nTom put his arm round me and we felt connected again. \n\nDelia eyed me curiously when she returned to the room with Ben, but said nothing.\n\nEventually, we went upstairs to bed. I wanted so much to prove that I really did want to be with him, not any woman or anyone else, but was still terrified if I thought about it too much. \n\nThen I saw Tom lying flat on his back in the middle of the bed, arms out to his sides. Totally unclothed.\n\nBeautiful.\n\n\"What are you doing?\" \n\n\"You're in control. Do what you want.\" He shrugged, as best he could while supine.\n\nI looked down at his naked body, a cross across the bed. \n\nI liked it. \n\nNow, what to do with my own personal Jesus?\n\nI smiled. I stroked his torso up and down, and the same for his legs. I climbed up to kneel over his thighs and he eyed me lasciviously, licking his lips but remaining still. I brushed his sides, ran a finger down his neck, his chest, and enjoyed re-exploring his body from this new angle. \n\nEventually, I might pay some attention to his cock. But not yet. \n\nI teased him with running my hand round under his balls, round the base of his cock, twisting some of the wiry hair around. He was liking it all. He folded his arms behind his head and looked at me, eyes twinkling as he challenged me. \n\n\"I'm not doing anything. Just lying here. Anything that happens, it's all you.\" He looked meaningfully at the bedside table, whereupon stood condoms and lube. \n\nI thought about it. \n\nWe both knew that it was the tiniest thought of force that had me freaking me out. So this, no weight even from his side... just maybe...\n\nI used my palm to check he was at full stiffness, kissed his tip, and went to get a rubber out of its wrapper. \n\n\"I'm not helping you,\" he commented. Cheeky git. \n\n\"You'll just have to wait for me then, won't you?\" He watched my every move as I got the thing out, flipped it the right way round, slowly rolled it down him and stretched it into position, added a good squirt of lube on top, got some on his stomach making him wince at the cold gel, scraped it back on to my hand and started coating my vulva lips with it. \n\n\"Probably still won't work, you know,\" I said, to manage both his hopes and mine. \n\nBut we both thought it might. \n\nI knelt down and straddled his thighs, and stotted upwards on my knees towards his head. His cock was right below me. Tom removed his hands from behind his head -- I suppose it did look a bit 'service me, wench' - and put one under each pillow. \n\nAll as unthreatening as he could possibly be. \n\nHe was my plaything now. A boy toy. Oh, fun... \n\nConcentrating on thinking of him as a toy, a giant warm dildo, I sat down an inch, and another. \n\nThe tip of the rubber touched my cunt lips, and then I felt the substance of his cock. I pulled myself an inch more upright again, until I was above it. \n\nI reached between my legs to part my labia, and put them to either side of this upstanding post. I bent my legs again so his cock slid just a tiny bit inside, maybe half an inch. \n\nIt was spreading me open much more than my fingers or his could. Like my vibrator, I remembered. 'It's just like playing with myself with any other toy,' I reminded myself.\n\nI tentatively sank down another couple mill, and another half inch, and another. I was feeling opened, stretched all around, and it felt like it ought to hurt soon, but it wasn't yet. \n\nIt was beautifully intense, yet gentle. Tom was still transfixed, gazing at me like I was a goddess. For the moment, I felt I was. He was clearly praying that this moment would last. \n\nI decided to sink down a little further, slipped a bit and took more of him inside than I'd intended. I cried out, then realised that, while I was feeling a bit full and pressed upon inside, all around the circumference of my vagina, it didn't actually hurt. \n\nBloody weird, mind you. \n\nHalf his cock must have been inside me by then. I met his gaze and nodded, all OK!\n\nHe relaxed into enjoying himself, and I tested tentatively raising myself up and down. Oh, man!\n\nThe feeling was exquisite, delicate pressure, made all the better by watching the blissful expression on Tom's face. I was making that happen! Me! And as I relaxed, and got used to these new feelings, I wanted more. \n\nSo I let myself flop down as far as I could; suddenly fearful at the end that my cervix would get bashed in and it would hurt, but the fear was unfounded. It didn't hurt at all. \n\nI was just filled up. My cunt was full of cock. \n\nThe sensation was so good, it was life-changing.\n\nThe feeling of having his whole, sizeable cock inside me, filling and stretching me, firm and solid there, was incredible. Sitting comfortably, his groin under mine, was good, but the best bit was that every tiny movement either of us made -- and we both made lots of them -- made part of my pussy throb. It had me moaning, overcome with the intensity of the feeling and all the emotion. \n\nAh, the emotions! The relief of knowing I could have a sex life! And that I was loving it! The relief of knowing I could give a man this kind of pleasure, and the satisfaction of doing so -- I was definitely, at least somewhat, heterosexual -- those feelings were all good too, but I recall catching sight of the wall clock -- twenty past midnight, it was -- and feeling that I finally had a hobby. \n\nI wanted to do this again, lots. \n\nI leant down over his body, and contemplated stretching my legs out behind me, but dismissed it as too complicated. I couldn't quite reach his face for a kiss, but got a close-up view of his expression as he reached his peak of pleasure -- which felt very good from my end, too. \n\nYes, this was a huge breakthrough. One small thrust for a man, a giant leap for my mind.\n\nI dismounted only when my calf started getting stiff, and fell down next to him. We lay side by side, hugging each other and grinning inanely. \n\nIt took about fifteen minutes before we tried again, same technique, then a couple hours before attempting missionary position. \n\nWhich took a few goes to sort out the right angle, but now I knew how cock was supposed to feel inside, it was fun figuring it out. The fear was gone; now I knew sex could be good, I just wanted to keep practising until it was great. And this was getting pretty damn good. \n\nBy the following afternoon, the twelve-pack of condoms was almost depleted. It had been a bloody good weekend, getting out of bed only for meals. And the sex was good, even if I hadn't had one of those impressive-sounding orgasms, just general waves of happiness. \n\nWe decided on one last round before we had to part. Tom was trying his hardest to make it as good for me as he could, and it occurred to me that maybe, faking an orgasm wouldn't be such a bad idea. So I tried a bit more moaning and gasping, breathing in deeply, just playing it up a bit. \n\nClearly the acting triggered my subconscious, as suddenly, my cunt took over, writhing wildly, throbbing like a motorbike inside me, and I was groaning and crying, nearly screaming, because I completely could not stop. It was a total loss of control of my body, like I'd feared, only not, because this time it was pure raw sexual power taking me over, not violence. \n\nLetting go like that was astounding.\n\nQuite apart from the emotional breakthrough, my cunt felt rich and deeply satisfied for the rest of the day. I suspected my housemates could figure out what had happened from my complete failure to hide the huge grin on my face, especially as Tom's expression was fairly similar. Thank goodness only Ben and Delia, wearers of similar faces on many a morning, were there to see.\n\nI couldn't wait for the next weekend. \n\nNo matter what happened with Tom, he'd given me the gift of enjoying sex with men. \n\nApparently his sisters had suggested the plan to him, when they'd wheedled out of him that I seemed to be scared of sex. \n\nAs a result, he'd forgiven them for pretty much everything they'd done to annoy him when they'd been teenagers. \n\nWell, just about. Older sisters can be incredibly annoying."
    ],
    "authorname": "Kumquatqueen",
    "tags": [
        "geek pride",
        "first time",
        "oral sex",
        "college",
        "british",
        "deaf",
        "cuddling",
        "bisexual",
        "female pov",
        "survivor"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/third-time-getting-lucky"
}