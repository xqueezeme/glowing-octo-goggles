{
    "title": "There and Back Again Ch. 130",
    "pages": [
        "Chapter One Hundred Thirty: Church and State\n\nI woke early, sliding out of bed quietly so as not to disturb Alistair. For some reason I couldn't explain, talking to Dorothea seemed a million times scarier than talking to Greagoir had been, and I felt like I couldn't breathe. I curled up in the window seat, cracking the shutters open a small amount to let in some fresh air.\n\nAs I sat watching the guards patrolling the gardens below in the pre-dawn light, I tried to analyse my fears. Dorothea is a good person, at least, as far as I can tell. Leli trusts her. What do I have to be afraid of? I reflected with a snort that the fact that Anders' fate rested on me telling Greagoir who I was had to have made some impact. I would never have told the uncooperative Knight-Commander if it hadn't been for trying to get Anders out of the dungeon; no one's safety directly rested on me talking to Dorothea.\n\nPart of it, too, was not knowing Dorothea well. I'd read Asunder, and played Leliana's Song and DA2, but none of those focused on her much, and they were my only source. With Greagoir, I had played the mage origin enough times to know that while he was a templar, he wasn't Meredith, Alrik, or Lambert...he was a decent person in a bad situation. The Chantry was who had failed in Kinloch, not the Knight-Commander specifically.\n\nAnd that, of course, was the final reason -- the most important one. I didn't trust the Chantry, didn't like the religion or how it manipulated events for its own benefit, didn't respect many of those in positions of power within it. And Dorothea, like it or not, was part of that establishment -- and at the top, not a low-level order-follower like Greagoir. Elemena was evil, Elthina just stupid...I didn't have a lot of reasons to trust any Grand Cleric, really.\n\nBuy what's she really going to do to me? I'll have Aedan, Zevran, and Alistair with me, and even if I was somehow separated and captured, I'll just disappear and reappear -- or can I do that, anymore? It's been a while... But it's going to be fine either way.\n\nI watched the guards for a while longer, eyes drooping as I tried to reassure myself and stay calm. I'd probably have fallen asleep there if Alistair hadn't crept up behind me, his warm arms wrapping around my waist and his chin coming to rest on my shoulder, startling me.\n\n\"Couldn't sleep?\" he croaked, voice hoarse with sleep. I shook my head and he squeezed me tighter, his chest pressing against my back firmly. \"You should have woken me.\"\n\n\"You need your rest. No reason both of us should be tired.\" I squirmed around in his arms until I was facing him, tracing the planes of his face with my fingers. \"Duncan would have killed me for even thinking about meeting with the Grand Cleric.\"\n\nHe kissed my forehead softly. \"Is that what's kept you sleepless? Duncan wouldn't have had you tell anyone but him the truth, if he could have managed that. And there is some risk, he wasn't wrong...but there's a lot to gain if things go well, too. He would have played it cautiously, but that wouldn't necessarily have been the right thing to do. Sierra, I'd tell you if I thought this was reckless. Aedan too. But Thedas is heading into a war that might destroy all of us, and you are the one person who might be able to change things. This is the first step, and we will be right here to take it with you.\" I closed my eyes and shivered as he pressed kisses to my lips, my jaw, and my ear.\n\n\"You're freezing!\" he admonished me. \"Here, come back to bed. Let me warm you up.\"\n\nAs usual, in a heady rush of love and lust, I forgot to be anxious anymore.\n\nWe finally got up and I showered quickly, washing my hair and braiding it back to look like the noblewoman I was supposed to be. I put on a dress, clasped on a cloak, and only kept Alistair waiting for a couple of minutes by the time I was done.\n\n\"Ready?\" he asked, reaching out to take my hand, weaving our fingers together.\n\n\"As I'll ever be.\"\n\nZevran and Aedan were waiting for us, and I picked at some breakfast listlessly while the three men talked about the shipwreck and the remaining survivors to be interviewed after our meeting with Dorothea. No one had any new ideas on who was to blame, so the conversation wasn't compelling enough to keep me distracted.\n\nLeliana arrived a little while later, having decided to come and escort us back to the Chantry; without any discussion, she stayed at my side, chattering away about nothing to take my mind off where we were going. We walked to the main doors of the palace to find a carriage awaiting us; Alistair helped me up, pulling me into his lap for the ride to the Chantry. The closed carriage kept me from seeing much of the city, but Alistair made up for the lack of a view by whispering naughty things in my ear, tickling the sensitive skin of my neck and ear with his stubble. Aedan complained briefly until Leliana and Zevran shot him dirty looks and distracted him with discussion about the Wardens left behind in Amaranthine and what they might be up to.\n\nWe finally arrived at the Chantry, and Leliana immediately led us inside, bypassing the sisters who stood near the doors to direct visitors, bringing us to a narrow, steep stairway in a dark corner of the main chapel instead of the wide, sweeping staircase in the foyer. \"This allows us to keep this visit informal, yes? We must be seen praying in the chapel when we are finished, and then few will think to question the nature of our visit.\"\n\nOnce upstairs, we followed Leliana into a large open antechamber, its walls lined with chairs and a desk in the centre with a young woman sitting expectantly behind it. She pursed her lips when she saw Aedan come around the corner, clearly about to say something rude about him intruding, but then she blushed when she caught sight of Leliana.\n\n\"Sister L-Leliana!\" she stuttered, standing up and wringing her hands together. \"The Grand Cleric is waiting for you. Please, go straight in.\" She gestured to a door behind her, and with a smile Leliana led us through, knocking but not waiting for an answer before entering the room.\n\nDorothea's office was not at all what I expected. Based on the rest of the Chantry, I expected it to be lavish, gleaming with tacky gold accents and lots of expensive, ugly Andraste statues. Instead, the room was decorated sparsely, with a beautiful oil painting of a cliff overlooking a stormy ocean and another of a woman kneeling to pray as the only obviously expensive items; the furniture, consisting of a desk, several chairs, a large coffee table, and two over-stuffed sofas, was mismatched but somehow charming, and looked incredibly comfortable. There were throw pillows everywhere, a thick rug that I wanted to sink bare feet into, and a large stained-glass window leant the entire room a warm, homey feeling. I loved it immediately.\n\nDorothea herself was also a surprise; I couldn't have guessed how old she was, for starters, as her hair was pale enough I couldn't tell blond from white, and her lined face contrasted dramatically with how spry she was, leaping out of her chair and practically running over to us. Her blue eyes sparkled and she had a big smile that looked kind. Between the office and her somewhat grandmotherly appearance, I could feel some of my trepidation fade.\n\nLeliana dropped to one knee as Dorothea approached, and Alistair, Aedan, and Zevran followed suit. Having forgotten to ask about the rules of protocol for such a situation, I hesitated a moment too long, making it look like I was reluctant; I winced as I sank down, feeling like an idiot. I glanced up at Denerim's new Grand Cleric, only to see her grinning broadly, not a sign of irritation on her face.\n\nShe touched Leliana's head briefly, chuckling. \"Please, my dear, you know better. All of you, please stand.\" As we rose uncertainly, she held a hand out to me; nervous now that I was also missing some other part of the protocol, I held my own out in return, wondering if I was supposed to kiss her ring or something. She gripped my hand with surprising strength and pulled me closer, rubbing my cold fingers between her own warm ones. \"It's so good to meet you. Please, don't be nervous. I'm not a stickler for protocol. Leliana has told me you have been...apprehensive about this meeting, but I assure you I don't bite.\"\n\n\"Oh sure, make fun of those of us raised by dogs,\" Alistair quipped, to my horror, but Dorothea let out a loud, delighted guffaw. The statement served its purpose and broke the ice, and we all laughed.\n\n\"Dogs from the Anderfels, I understand,\" Dorothea winked at my husband and he flushed. \"Devout ones.\"\n\nAlistair rubbed his neck awkwardly, glaring at Leliana, and the bard giggled. \"I might have been telling a few stories of our adventures, yes?\"\n\nStill holding my hand, Dorothea ushered us over to the small sitting area, urging us to be comfortable. I settled onto a couch between Alistair and Leli; Aedan and Zevran took chairs, leaving the last couch for the Grand Cleric. I was right, this really is a comfortable couch. When Leliana saw the elder priestess reach for the tea, she slid off the couch and snatched up the pot herself, shooting a dirty look at the older woman. Dorothea rolled her eyes dramatically and sat back with a long-suffering sigh, making Leli giggle again. It was clearly an old point of contention between the two, and given the mirth in both of their expressions, it felt like the sort of inside joke one might share with family. I smiled at the redhead fondly and noted Dorothea doing the same. A little bit more of my nervousness fell away. If she so clearly cares for my best friend, she can't be that bad.\n\nWhen we had tea poured, the Grand Cleric took a long sip and then leaned back, tucking one foot underneath her conversationally, and then smiled at all of us. \"Ahh. I just don't feel quite awake until I've had my morning tea.\" We all mumbled something nonspecific and sipped from our own cups; I'd never seen any of us except Leli drink tea regularly, so it was amusing to see all of us scramble a bit.\n\nShe rescued us by continuing as though we'd responded appropriately. \"Now, I know who you are, of course. Aedan Cousland, son of the late Teyrn of Highever, and now a Grey Warden. The driving force behind the combined armies who defeated the Blight. I am so very sorry for your recent losses. I knew Mother Mallol well. She loved her posting in Highever and spoke fondly of your family many times. I am glad that Rendon Howe has met proper Justice -- for her sake, and for yours.\"\n\nAedan nodded, murmuring thanks, keeping his eyes down, though he couldn't hide the familiar flash of pain that always crossed his face when he thought about that night. She didn't seem to expect more, and turned to the elf clenching his fists impotently on my brother's left next.\n\n\"Zevran Arainai, formerly of the Antivan Crows. It was not your mission, but I must thank you for joining these good people and keeping them safe.\"\n\nZevran blinked in surprise before his golden skin flushed in embarrassment. He recovered quickly, though, winking at her and shifting his posture to look more relaxed, although this left him looking more like a cat about to pounce than someone truly at ease. And more seductive, ridiculous elf. \n\nHe nodded acknowledgement. \"Yes, well, there's no telling what might have happened to them without my awesome self to help them out,\" he boasted sarcastically, but he seemed pleased, just the same.\n\nShe turned to my husband next. \"Alistair Theirin, Prince and Grey Warden. I can only apologise for the actions of my predecessor; I understand your training here was...stressful, and that she tried to use you for her own ends. That should never have happened, and I am sorry.\"\n\nAlistair blushed purple, rubbing his neck again as he always did when he was nervous. He stuttered something about how it all worked out in the end, and she smiled in relief. I was suddenly reminded, watching her reduce my family to grateful, puddled messes, that Dorothea had been a bard, before she rose through the ranks in the Chantry. She was using all of her considerable skills, and everything Leliana had told her about us, to manipulate them. She was telling them the things they needed to hear, playing on their emotional baggage. It might only have been to make them feel more comfortable, and she might have been telling the truth, but it was still manipulation, and there was no way to know how she really felt. I felt some of my walls, which had been dropping since meeting her, rise again.\n\nShe may seem a nice, kind, caring mother-figure, but I still need to be careful.  I gripped Alistair's hand, pulling it into my lap anxiously. My eyes narrowed at her as she finally turned to me.\n\n\"And Sierra...Cousland? Theirin, now, I suppose, yes? I imagine it isn't surprising I am most intrigued by your story. Leliana has told me a little bit about your other world, and about the apparent future of this one. Though I understand events have...changed, from what you knew.\"\n\n\"Yes, your Grace.\" I ducked my head respectfully, taking a deep breath and planning my next words carefully; I was there, after all, to help -- that didn't entirely require me to trust her. \"I was raised in a very different world than this...\"\n\nI explained Earth, again, pulling out my phone, my lighter, my Swiss army knife -- things I hadn't needed to demonstrate in months. She asked few questions, just watching and listening carefully. She wasn't able to fully hide the avaricious look in her eyes when I put my phone away, but I was used to that -- it was the same reaction any intelligent person would have when seeing technology that would be so clearly useful.\n\n\"And you have no idea how you came to be on this Earth, or how you managed to come back here?\"\n\nWe'd decided, way back at Soldier's Peak, never to tell anyone about the Architect's apparent role -- if my vision during the Joining was to be believed -- in my teleportation issue, and with the exception of Anders, Alim, and Seranni, no one else knew, not even Leliana. I shook my head. \"No, your Grace. I admit I've been thanking the Maker for bringing me back, but whether he had any part in it, I can't say.\" And that was the truth, if not the whole truth.\n\nI went on to tell her about Meredith in Kirkwall, all-but-ruling the city illegally, paranoid, making mages Tranquil for minor infractions and allowing abuse to go on under her nose. \"And Grand Cleric Elthina doesn't help,\" I opined. \"She may be a wonderful, devout person, but I can't help but feel that we can't wait for Andraste or the Maker to do everything for us. When we see things happening, bad things, and we have the ability to change them...well, given my story, I think you can guess how I feel about sitting back and doing nothing.\"\n\nShe nodded thoughtfully, exchanging glances with Leli; I couldn't help but see the slight look of distaste in her expression when I first mentioned Elthina. \"And just what do you propose the Grand Cleric could do?\" she asked.\n\nI gaped at her. \"Send Meredith back to Val Royeaux, and Orsino somewhere else, and replace them with reasonable alternatives who will work together. Force an election and stop the Knight-Commander from interfering with the secular functions of the city. Spend time aiding the poor, the downtrodden, the desperate, instead of basking in the admiration of the nobility. Saying she can do nothing, as the most important woman in the Free Marches, seems a little disingenuous, doesn't it?\"\n\nDorothea grinned suddenly, looking over to Leliana. \"You're right, I do like her.\" Her grin slowly faded as she turned more serious. \"Tell me about the war between mages and templars.\"\n\nI sighed and wracked my brain for a sensible way to organise what I knew. \"There's a lot to it. First, in response to Meredith's tyranny, a disillusioned apostate mage plants explosives in Kirkwall's Chantry and blows it to bits. I don't even know how many hundreds are killed in the explosion.\" I refused to admit to Justice's part in events, knowing that would never happen now. \"Meredith tries to annul the Circle, despite them not having anything to do with the explosion. Whether or not she's successful, the fall of the Gallows seems inevitable, and it triggers discontent from Circles across Thedas.\n\n\"Then the cure for Tranquility is discovered, and Lord Seeker Lambert tries to suppress it. The College of Enchanters, some of whom have been pushing for autonomy from the Chantry for a long time, take that as evidence that the Chantry is corrupt, and they hold another vote. Lambert, enraged, slaughters most of the Senior Enchanters in the conclave, then annuls the Nevarran Accord in anger.\n\n\"Without the Accord to control them, the templars and seekers are free from the shackles of the Chantry, and attack and kill any mages without a trial. The remaining mages hole up somewhere -- I don't remember where -- knowing the templars are probably going to attack en masse...and that's where the story ends. There was supposed to be another game and several more books, but they hadn't been published yet when I left.\"\n\nEveryone sat silently for a few minutes after that, contemplating the events as I laid them out. I could almost see the wheels turning behind Dorothea's vaguely horrified expression, and I wondered if she was just trying to assimilate everything I'd told her, or to plan for the future.\n\n\"So much death. So much tragedy. And for what?\" she finally murmured.\n\nGuess that answers that question.\n\nTo my surprise, before I had the chance to reply, Leliana was the one who spoke first. \"For what is right. Because what we are doing, what the Chantry is currently doing, is wrong, your Grace.\" The bard slipped off the couch next to me, sitting down beside Dorothea and taking one pale, wrinkled hand in hers. \"Mages do not deserve to be treated worse than criminals, for no more reason than being born. Magic is meant to serve man, but that does not mean man has the right to abuse those who wield magic.\"\n\nI was amazed, mouth open in surprise, at the redhead's passion and earnestness as she pleaded her case.\n\n\"I have seen mages starved, kept in the dark, tortured, and poisoned, for no more reason than wanting some contact with the families they left behind. I've seen mages throw themselves off the top of their towers rather than continue to live imprisoned and abused. The former Grand Cleric sentenced dozens of them to a slow, painful death by the taint, allowing them to become ghouls rather than let them free of Chantry oversight. Mages are imprisoned from the onset of their magic, torn from families who love and miss them. Fear of the Chantry's reaction to a mage child caused hundreds of deaths in Redcliffe, and that can't be the first time something like that has happened.\"\n\nDorothea winced, and I knew Leliana was right.\n\n\"I've seen templars, Brothers and Sisters and Mothers be corrupted, be cowardly, be avaricious and cruel. I've seen mages raped and civilians left to die by a Chantry who doesn't care -- and I've seen a blood mage stand in the face of true evil and risk his life to protect others. There is no other conclusion that I can draw than that we are wrong about mages.\"\n\nShe stopped to catch her breath, chest heaving with the intensity of her diatribe, and I had to work hard to stop myself from applauding. Dorothea looked gob-smacked, staring at Leli wide-eyed in shock.\n\nHer eyes were drawn to me when I spoke. \"It has to end. For the sake of all of Thedas, the abuse of mages must end. There is another path.\" I swallowed heavily. \"Look here in Ferelden. The Circle opened, operating as a school. Families allowed to visit, fully-trained mages allowed out into the world. Has the amount of magical violence or crime risen? No. The opposite. Free mages are out there, healing and protecting the citizens, working with the army and the guard.\"",
        "\"There have been more maleficar turned over for justice too,\" Leliana continued. \"Mages policing themselves, refusing to allow the few rotten apples to endanger their new freedom. Thanks to the mages, a huge gathering of blood mages in Denerim was aborted, the members captured and brought to the Chantry. They were discovered by some of the mages assigned to the army, and captured by a combined effort between templars and free mages.\" I twitched in surprise; I'd heard nothing about this, and clearly neither had Aedan or Alistair, by their shocked expressions.\n\n\"But it won't be possible if the future I've seen is allowed to proceed,\" I pleaded. \"Something must be done before it is too late. Meredith, Lambert, Elthina, even Orsino...it must be stopped.\"\n\nDorothea looked pensively from Leliana's earnest face to mine. \"I will do everything in my power. I give you my word. I do not fear mages, but change will not be accepted overnight. But I swear to you, I will find a way to change the path we are on.\"\n\nAnd for once, her sincerity rang absolutely true. I don't know if she'll be able to change fate, but I do believe she will actually try. That's a relief.\n\nWe spoke for a little while longer, Leli and the others telling stories of our travels during the Blight, me telling stories of fantastical things -- technology and other things -- from Earth. I had to admit, by the time we were ready to leave, I'd been thoroughly charmed by the woman, despite my urge to keep my walls up. She was still a manipulator, but a force for good, I was convinced.\n\nAedan, Alistair, Zev and I planned to sneak into the main chapel and then be seen praying, perhaps getting a public blessing from one of the Mothers there, as a cover for our visit; Dorothea asked Leliana to stay -- to plan, I assumed. Leli promised to meet up with us at the palace for supper.\n\nThe new Grand Cleric pulled me to my feet and hugged me, when I tried to curtsy as we left. \"I know you have no reason to trust me, but I will do what I can; I swear it,\" she whispered in my ear.\n\n\"Thank you, your Grace. But please, also remember...Leliana is an asset to you, but she is much, much more to the rest of us. Please don't forget, in all your plans, that we need her back in one piece when she's done?\"\n\n\"I promise.\" I felt her nod, and she squeezed me once before letting go.\n\n\"I hope to meet you all again sometime,\" she said to the four of us. \"And remember, if you need me, I owe each of you for not only ending the Blight, but for keeping Leliana safe for me. Should you ever need anything, if it is within my power, it is yours.\"\n\nAedan and Alistair bowed their heads gravely, deeply affected by the promise; I saw a smirk flash across Zev's face, and I elbowed him firmly in the ribs before he could suggest anything lewd. We both stifled a completely inappropriate snicker, and then we were sneaking down the stairs to the chapel.\n\n***\n\nChantry services were boring, I reflected later; we'd spent a good hour being preached at by one of the Sisters inside the chapel -- not Sister Theohild, to my disappointment, because at least there would have been bacon in that sermon -- and then Aedan had ostentatiously handed over a heavy bag of coin before we climbed back into the carriage and wended our way slowly back to the palace. Every merchant in Denerim, it seemed, had been on the streets, oxen and carts everywhere, and the ride had taken quite a while.\n\nZevran had made me chuckle with a pronouncement, once we were out of earshot of anyone in the Chantry: \"Oh, she is very good. I should like to take lessons in manipulation from her, yes?\" But to my relief, I was not alone in my assessment that Dorothea was a skilled bard -- and yet, at the same time, sincere and benevolent. Aedan also agreed; Alistair was caught somewhere between embarrassment at his implied naivety and outrage that we were at all skeptical of the 'nice lady'. I managed not to laugh, just patting his hand gently and changing the subject.\n\nOver the next two days, with the feared visit with Dorothea behind us, we shifted our focus back to the shipwreck. The remainder of the ship's survivors were questioned and released; no further details were discovered about the identity of the presumed inside man, and all of the crew believed he had drowned. Cailan was disappointed -- I knew I'd have liked to have someone to blame for Riordan's death, and that must have been a stronger urge for him, given the guilt he felt at even unknowingly sending Anora and Riordan to their deaths -- but to everyone's relief, he seemed to have passed the hurdle of his own horror and inability to cope. He had met with the demanding nobles, hand-selected a group of soldiers to bolster the ranks at Soldier's Peak, formally visited and approved the new Alienage, and had started planning for a diplomatic trip to Nevarra.\n\n\"Nevarra?\" I asked.\n\n\"Duke Anaxas is likely to be...displeased,\" Cailan replied wryly. \"Anora's marriage contract netted us some much-needed aid from Nevarra, through Rethnar calling in favours. Now that I can no longer offer him a politically skilled wife to aid him in his quest for power...well, a royal visit should placate him.\"\n\nEven knowing it was hopeless, Thedosian geography being what it was, I had to say it. \"Just...tell me you're not going by sea!\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-130"
}