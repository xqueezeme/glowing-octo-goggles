{
    "title": "Chinese Girl Adrift in Bangkok Ch. 08",
    "pages": [
        "Chapter 8\n\nDear readers, at last I have reached the final part of my story. I thank you all for sticking with me. Z x\n\nAnd suddenly, there was my James sauntering over towards me.\n\nI rushed to him and flung my arms around his neck. He held me close then at arm's length looking at me.\n\n'Mmmm, let me see.'\n\nGod, I'm a mature married woman, an experienced doctor, and he's just a boy! Stepping back lightly I turned from side to side, flouncing round in a little dance. I was beaming at him, behaving like a schoolgirl with a crush.\n\nHe took me in his arms again and I kissed him. I felt so light-hearted, it was a bit pathetic really.\n\n'Come on, I've got a hotel nearby.'\n\nHe encircled my waist with his arm, and we walked back along the main road. It was just a block away. A basic but pleasant enough entrance. Several people were sitting in the lobby. As we went in, the receptionist called us over, looking me up and down. I was aware of other people's eyes on me. It was obvious to everyone that I was a whore. This was a girlfriend friendly hotel supposedly, but the receptionist still seemed to want my ID. She didn't speak to me directly. Apparently she was new and not familiar with the hotels policy.\n\n'Bargirl, need to leave ID.' She informed James.\n\n'Oh! I don't have here.' I blurted.\n\nAn older New Zealand guy with a weathered face who was sitting watching us, slouched over. He looked as if he had been round the world several times. He was fluent in Thai and greeted us both then turned to James.\n\n'Hiya mate, the name's Frazer. Mmmm, where d'you find her?' He asked indicating me and licking his lips. 'I'm next when you're finished with her.' He winked looking very sleazy. He was a thickset man, not as tall as James, maybe 5' 10\". There was something creepy and quite repellent about him, with his skin dry and wrinkled, lizard-like. I held onto James' arm. He offered a reptilian hand to me which I took hesitantly. My tiny hand was nearly crushed in his hard grip and I yelped, surprised also by how dry and hot his skin felt.\n\n'Sorry love, forget my own strength sometimes.' He looked at the reception staff behind the counter.\n\n'It OK Mr Frazer.' I said softly nursing my crushed hand and clinging closer to James.\n\n'What are they saying?' James asked, turning to face the counter.\n\n'Well, the girl said the owner doesn't like girls like her... whores,' again he nodded in my direction, '...in here, especially without ID.'\n\n'Is there anything we can do?' James was looking worried. I guessed he was impatient to get into my panties.\n\n'Has she got any form of identification?' Our Kiwi friend asked. He siddled up beside me and unknown to James, who would surely have hit him, placed his hand on my ass, pressing my thin dress in between my ass cheeks. I didn't want to make a scene and raised my bag, putting it on the counter. I stood there looking straight ahead, as this low-life caressed my ass. My flesh crawled at his touch.\n\nI rummaged in my bag and pulled out some of my business cards, showing them to Mr Frazer. It was all I had. He guffawed when he saw them, snatching them from my hand.\n\n'Oriental supergorgeous Kitty! Very nice.' He read my attractions. 'Well pretty little Kitty, out from your bar?' I nodded. He handed one of my cards to the receptionist guy, pocketing the other and said something in Thai to him.\n\n'Should be OK now mate. Have a good time. Be seeing you soon darling.' Again, he winked at me as we headed to the lift. Seeing me soon? Ha, not if I've got anything to do with it.\n\nOnce in the room which was small but comfortable and looked clean, I told James I wanted a shower. I really didn't want James put off by the smell of my earlier customers. I showered quickly and came back into the room with a towel wrapped round me. James was lying on the bed in boxers using his iphone. He smiled up at me and I beamed back at him. I realized he was taking a vid of me.\n\nI slowly loosened the towel and let it slide from my body, displaying my curves. Naked I stretched my arms wide, then over my head, and did a little pirouette for him, then flounced from side to side, making my boobs bounce also. I was delighted by his applause. I crawled up the bed between his legs and put my hand on the small bulge in his boxers. I ran my fingers over the material feeling him stir and watched fascinated as the bulge grew.\n\nI held his cock while I moved up beside him snuggling against his body. He was clean and firm and young... OMG was I really in love? I pressed my mouth to his soft lips. Our mouths opened and out tongues met and danced together. It was delicious.\n\nHis fingers moved between my legs, touching my wetness. Gently he inserted his finger. I moaned and lifted my pelvis to meet him. His mouth moved down until it was fastened on my nipple, his tongue flicking over it. I was overwhelmed with desire.\n\n'Fuck me now, fuck me love.' I breathed without thinking in my normal Oxford English accent. He looked at me curiously, but he was breathing heavily with desire also. I could see he was turned on, his dick was rigid, jutting as he moved over me. I loved the feel of his weight on my small body. He fumbled with a condom and rolled it on with my help.\n\n'Oh God.' I shivered as I felt his glans slide over my wetness. He entered me steadily, advancing gently but firmly, pushing against the tight clasp of my vagina, forcing me open progressively. I threw my arms around him, gasping, little sounds of delight escaping me. I clung to him in desperate joy as he buried himself fully, evoking a painful rapture. Or bodies were locked together, as I gazed into his eyes. He laughed at my wide-eyed, apprehensive look.\n\n'Kitty, You look so innocent. I would never guess you're...' He didn't finish, not wanting to be rude. He just kissed me.\n\nHis penis moved faster, fucking me, loving me... for the first time in days it felt like lovemaking. Perhaps I was just delusional, but I really felt as though I was with a real lover. I held him to me kissing him as he gripped my shoulders, plunging in to me again and again. It was glorious and I felt like singing. Instead, I cried out in ecstasy as a golden blissful orgasm swept though my body and I convulsed against him, hugging him.\n\nAfter we had finished our love making he held me close. I rested my head on his chest, breathing his scent, a warm clean masculine smell. I felt content, completely at peace for the first time in days. His cock was still hard and I encircled it with my fingers, holding him firmly.\n\n'Kitty, why did you become a prostitute? Have you done it for long?'\n\n'Umm, some time.'\n\n'How many guys have you been with today, before me?' He asked. I paused deciding how to answer.\n\n'Three.' I murmured truthfully.\n\n'I wish we could see each other again somehow.' He was silent after this. I drifted into a deep sleep still holding his cock.\n\nIn the morning I woke first. We were both naked. We had dozed off with James spooning me. Now he was lying on his back with just his arm was resting on my thigh. He was very snoring softly, barely perceptible. I could live with that. What am I saying? Leave my husband and move in with a student? Nuts! As if he would want to take up with a whore anyway. It was 9.30am. I rolled from under his arm and sat on the edge of the bed. I loved looking down on his sleeping face. He stirred and looked up at me smiling and stretching luxuriantly. We showered together enjoying each other's bodies before towelling dry. James was due to fly up to Chiang Mai later in the afternoon, but he said I could relax in the room which he had paid for up front.\n\n'I won't forget you Kitty.' he whispered as he held me.\n\n'Nor me. Goodbye James.'\n\nHe reached for his wallet, taking out $30. He held the money out towards me. I looked from the money, up to his face, hesitating and uncertain.\n\n'Kitty, please, you need the money.' He smiled encouragingly. What did I expect? I am a prostitute. I reached out and took the money and thanked him, making a wai. Giving me a last, and regretful smile, he blew me a kiss and left the room. I felt a real pang in my heart as the door closed and wiped my tear-filled eyes. I found my soiled thong and washed it in the sink. Then wrung it and hung it out to dry.\n\nI lay on the bed. It had been so lovely to be with James. It was everything I had hoped for. At last my unexpected exploration of the strange world of sex workers was over. I could start to readjust to my normal life. I stretched out luxuriantly. It was after midday now and I was enjoying my lazy morning.\n\nSuddenly the room phone rang. It was the receptionist guy from downstairs.\n\n'Hello, you Kitty?' He said in a very familiar tone which rather took me aback.\n\n'This is Miss Kitty.' I replied in my most haughty English accent.\n\n'Yes, Kitty. You girl 43. One guest want you in Room 23. You go now.'\n\n'What on earth? How dare you? I was shocked, indignant, 'Why are you talking to me like this? You wouldn't dare talk to me like this if I was a doctor. I am...' I was angry, adopting an assertive tone. That was all behind me now. I am a doctor... a married woman.\n\n'...You aren't a doctor. You're a bar girl, a slut.' He cut in. 'One guest bring you here last night. We don't normally let girl like you in hotel. Owner does not like any more. We make exception for our guest. Now you go to room 33. You like I call police?' There was an aggressive note in his voice. Oh God no! I don't want that.\n\n'No!... Please don't,' my assertiveness crumbled, replaced by panic. He could hear it in my voice. I begged him, 'Please don't.'\n\n'Look, girl like you don't belong in respectable hotel. I don't like slut like you, sleep with farang for money. You be careful. You doing illegal, police can arrest you.'\n\n'Please Sir, forgive me. I'm sorry I rude to you. I'm so sorry Sir... I go to room 23.' I could hear him sniggering at my distress. It felt so demeaning to be so easily crushed by him.\n\n'10 minutes. Don't be late.' He put the phone down.\n\nSighing I got up and took a quick shower. I slipped on my already dry thong and wriggled into my skimpy red dress, then put on my heels. My love-making with James had been so wonderful, I felt it had drawn a line under my recent activities. Of course, I would now always be an ex-prostitute, I couldn't evade that shameful fact. But I had been looking forward to a new start. Now I was being dragged back into that sordid world. But what was one more stranger? So many unknown penises had entered my pussy over the last few days it didn't make much difference. Taking my bag, I left the room empty and walked to the stairs.\n\nI went up one floor and walked along the empty corridor, my heels making a high-pitched tap-tapping on the hard floor. It was much hotter here and I wondered if the aircon wasn't working properly on this floor. I felt quite nervous. This was something new for me. I was a prostitute called to a hotel room, not knowing who was inside. I stood outside the door, my heart pounding. I reached forwards to knock, but my hand froze. I was worried. In the brothel, I had not felt unsafe with so many people around me. Even in the back alley, at least other girls weren't far away. Here I would be shut in with a stranger with nobody around, but really, did I have a choice? Without thinking further I tapped lightly on the door. No answer. I tapped harder, and this time I heard movement inside.\n\n'Come in, it's open.' A voice called. I felt butterflies in my stomach. I pushed on the door and went in. The door closed behind me. The room was bigger than James's and quite untidy.\n\n'Hello? Hello, is Kitty here.' I said looking around me.\n\nClick! Click! The door opened and I looked up into the face of Mr Frazer, the seedy New Zealander from the lobby.\n\n'Oh! Mr Frazer?' I hesitated at the door as he looked down on me with a penetrating stare.\n\nHe could see my uncertainty but quickly took hold of my wrist in his vice-like grip, and drew me inside, closing the door behind me. Music came from a portable speaker on the bedside table. Seeing him again, I was once more struck by his reptilian appearance, His dry, wrinkled skin seemed to sag from his limbs like clothes several sizes too large. I guessed he had been much larger in the past, but once again I was struck by his iron grip as he continued holding my slender wrist.\n\n'Owww!' I uttered, unable to break free. A delicate girl like me was at risk of being crushed.\n\n'Good time with lover-boy was it, Princess?'\n\n'He's very nice to me, Sir.'\n\n'Looks a bit of a wuss to me. Anyway, you're with a real man now.' He said in his harsh low-pitched tone. It sounded like he had smoked too much over the years.\n\n'Funny thing, you could scrub up quite nice, but I guess once a slut always a slut. You know what they say? You can take the girl out of the bar, but you can't take the bar out of the girl'\n\nOh! Does that mean I'm always a slut now I wondered? I noticed a camera on a tripod pointing towards us. I sighed but I had been videoed so much did one more make any difference?\n\n'Introduce yourself to the camera baby.' He directed me.\n\n'Hello, I'm Kitty.' I said to camera.\n\n'Yeah, this is Kitty, cute Bangkok bargirl... cheap and cheerful, right?' He looked at me.\n\n'Yes, that me.' I confirmed. He directed me to walk up and down the room in front of the camera, and then dance. Obediently, I began to gyrate to the music.\n\n'I'm afraid I don't have much time so lets get on with it. He handed me some money... I looked at it in my hands Around $10 I guessed. At his beckoning I held the money up to the camera smiling and made a V-gesture.\n\n'Right, lets get a look at what I've bought.' He licked his lips.\n\n'Oh, yes Sir.' I really didn't like this creepy guy.\n\nReluctantly, I slipped off my dress, dropping it at my feet. I quickly folded my arms across my chest, attempting to hide my boobs in a pointless gesture and just stood there in my thong. He motioned me to continue dancing which I did now topless, while he looked down on me sniggering, and I noticed, literally licking his lips. He was sweating with drops running down over his temples and cheeks. But I was aware of sweating myself with little droplets on my chest.\n\nI knew that no matter what, his cock was going to be stretching my pussy very soon, so I might as well get on with it. Only a few days before I would have been utterly horrified at the thought of a guy like him touching my flesh. Now I had become a well-used prostitute, my submissiveness was apparent to everyone and all my holes had been fucked repeatedly by numerous complete strangers. What was one more? I did a slow pirouette for him and the camera pushing out my ass as I turned. Facing him again I reached down and slowly lowered my panties before stepping daintily out of them. I ended with a little bow at which he clapped happily.\n\nKneeling down I undid his trousers and began to suck him.\n\n'Look at the camera Gorgeous.' He told me. I looked sideways at the lens, tonguing his balls and licking the length of his shaft. I worked his cock with my lips and hands in unison making slurping sounds and beginning to drool. Eventually indicated he wanted to fuck me. We moved to the bed where he lay down. He reached for his phone and raised it to video me.\n\nI held his cock while I kneeled astride him and took position over it, then carefully lowered myself onto him. I wiped his cock back and forth between my labia and pressed my clit against it shivering at the sluttish pleasure it evoked in me. Looking down I could see my wetness transferred to his glans which glistened in the harsh room light. How the old me would have been appalled to see how far I had fallen, to see the wanton tart I had become.\n\nI adjusted the position of his cockhead at my introitus and slowly wetly, descended. My own weight forced me down onto his rod which worked its way slowly, tightly into my vagina. I felt him stretching me as I descended, savouring the feeling as I was distended, impaled, my secret depths penetrated. I couldn't restrain a little cry as I felt him suddenly pressing up, deeply inside me to complete his possession of my body. He grunted in satisfaction bringing his sweaty palms down on my buttocks with a sharp stinging slap. I squealed while he laughed again.\n\nI rose from my knees to a crouching position and began bouncing up and down on his penis like a pneumatic piston, driving waves of pleasure through my body. I didn't care who I was straddling, just revelling in the sensations. After a minute or so I was exhausted in this position and sank back down onto my knees driving him deeply back inside me, and I slumped forwards onto him, my hair matting onto his sweaty chest. He lifted my chin and pressed his lips to my mouth, forcing his tongue between my teeth. I sucked on his tongue as he repeatedly jerked his cock into me.\n\nI raised myself from him, feeling my boobs sticking to his chest until I was leaning with my hands braced on his pectorals. I thrust myself against him while he lay back looking up at me still holding his camera phone.\n\nNow I leaned back bracing my straight arms against his thighs so that he could see his meaty cock coated in my fluid disappearing inside me as I hoisted myself against him with increasing urgency. I was whimpering uncontrollably now with my hair going everywhere as my head flailed from side to side.\n\nHe grasped my waist and lifted me off him, then placed me on my back. I parted my legs opening my pussy for him and grimaced as he drove himself back inside. His cock jackhammered into me, the whole bed creaking to his rhythm while my breast wobbled frantically back and forth like two demented jellies. I could feel myself coming closer, but it was obvious that my urgent gyrations with my pussy tightly clasping his cock were going to drive him over the edge first.\n\nHe pulled back ,his cock plopping out, and he pulled off his condom holding his dick in front of my face and wanking himself hard. I wondered why he hadn't cum inside me, but opened my mouth putting out my tongue just as with a growl of lust his body jerked and he erupted. He spurted onto my tongue, into my open mouth and across my face, several more jets struck me making me blink. As the cum stopped pumping I sucked his cock into my mouth licking it clean before letting it drop limply from my lips. Although I hadn't come, I felt I had already had more than enough orgasms for one day and didn't feel cheated! I slumped back and lay discarded on the bed with legs akimbo my ragged pussy gaped as his cock had left it. He slowly filmed the length of my body, finally zooming in on my pussy.\n\nHe picked up a marker from the bedside table and without asking for permission proceeded to write on my abdomen and thighs:\n\n&lt;Chink cock whore, Bangkok&gt; followed by the date and his signature. Pathetically, at his instruction I sat with my legs spread displaying my pussy and his message, smiling and making V-signs with both hands. He moved in beside me making a thums up sign to the camera, before dropping some more money on my lap which I picked up thanking him.\n\nHe rose from the bed and got dressed quickly. He switched off the camera and packed it and the tripod into a holdall.\n\n'Sorry babe must dash. Sweet pussy you got there though, def worth every penny. You let yourself out when you're ready.'\n\nAs he left I slid off the bed and went into the shower. This restored me and I got dressed, retrieving my longer dress from my bag. I tied my hair up and felt I looked reasonably presentable considering what I'd been through over the last 24 hours. I walked down to the lobby and smiled sweetly at the reception guy who gaped back at me. Did he recognise me as the scantily clad whore of last night? Now smiling to myself, I stepped out onto the pavement.",
        "I walked quickly back to the main road and hailed a cab. In the taxi, I sat back in the seat and closed my eyes. It took just a few minutes to get back to the Marriott Hotel. Dressed demurely as I was there was no issue.\n\n'Good morning Madam.' I noticed it was the same team who had stopped me before. I smiled at them as they opened the door and gave the security man a wink as I passed aware of their stares. I headed up to my room. It was dark outside, early evening I watched TV idly and ordered food from room service. I didn't want to see anyone. The conference was due to finish tomorrow morning. I was due to fly to Phuket the following day to meet my friends for a few days holiday. They had already been there for a week.\n\nI had an early night and got up late too. Remaining in my room until after lunch, I packed my bags and lazed around, watching TV and reading... I sent some whatsapp messages on my work phone, and then thought about my other phone... my bag... my dress which were back at the brothel. Mamasan had said I could collect them. Could I dare to go back there to get my things? I turned it over in my mind. I was worried especially about leaving my phone with them but was it worth the risk. Surely better to just get the flight to Phuket and enjoy a recovery period on the beach. Yes, of course that's what I will do... and yet I never got a chance to say goodbye to my friends. Maybe I could just call in there briefly and then go to the airport? No! Stop it... Get real girl! You can't take the risk...\n\nAnd this really is the end of this story, my story... I caught a taxi to the airport arriving in good time. I arrived in Phuket and got to our luxury beach resort. The next day I made excuses and kept largely to myself. By the following day the love bite had all but gone and my bruises had faded significantly. I laughed them off as an over vigorous Thai massage. My friends looked at me questioningly but seemed to accept it. I spent a lovely week's holiday with my girlfriends enjoying my time on the beach, massages, spa treatments, the usual.\n\nA few days later I flew back to London feeling my equanimity somewhat restored... I had decided not to do a pregnancy test until I got back to UK, and I knew I had to get a full health check-up too. Strangely though, I felt more at peace with myself than I had in a very long time.\n\nThe End"
    ],
    "authorname": "zoeleong",
    "tags": [
        "asian",
        "chinese",
        "asian whore",
        "chinese whore",
        "prostitution",
        "brothel",
        "pregnancy risk"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/chinese-girl-adrift-in-bangkok-ch-08"
}