{
    "title": "How To: Young Wife to Shared Wife",
    "pages": [
        "First I would like to point out that most any wife can become a promiscuous wife. My wife had no plans of sleeping with someone else even though we often shared pillar talk and fantasized about it. This is something that goes slow but is very likely to happen if you take time to properly go about it. I would also like to point out that this might better be left fantasy. Either way, I plan to share thoughts of how this came about with my wife, the realities that you must be prepared to accept, and a few ideas that should be fun in your sex life regardless of where it leads.\n\nFirst a little history. When my wife and I were in our young twenties, she worked in an upscale lingerie store in a mall. She could very easily be a lingerie model with her tight, fit, and tan little body. She had applied at several other stores. The lingerie store was the first to call, so she found herself working there. She wasn't looking specifically to work in such a store.\n\nThe store associates wore tasteful very but sexy dresses and usually relatively short. Tabi, my wife enjoyed her job. The store also had sexy outdoor attire for women, but clearly focused on indoor ware. Tabi received an employee discount for her purchases, so she often came home with pretty nice clothes, which is usually what she wore to work.\n\nTabi is known for being friendly, and many have described her personality as \"Bubbly.\" She is petite at just over five feet barefooted. Her butt is round, curvy, and toned. She is athletic and firm. Her tits are not small or flat, but they are also not large. I would say like nice firm coconuts. \n\nTabi came home one day and mentioned that two men came in the store and shopped with her showing them various clothes. As she was checking them at the register with a few purchases, they told her they would like her number and said they had a well paying job for her. Tabi, being cautious and innocent, took their number instead and called them on her next break. They wanted her to be a dancer at a bachelor party. She politely declined and thanked them for the offer.\n\nWhen Tabi first told me this, I was a little pissed. \"Didn't they see your ring,\" I asked.\n\nI wanted all the details. Ultimately there wasn't much to tell. I wasn't pissed at Tabi, but I thought it was a little offensive that two men had the audacity to ask my wife to dance, and for money, at a bachelor party. I was clearly jealous and at the same time proud. After the shock wore off I was actually turned on in a way. I found it to be quite erotic to my surprise.\n\nThe incident continued to come up. Eventually we were joking about it. Then it would come up during sex. I think I brought it up first, but it became clear that she did enjoy the attention. She was quite flattered.\n\nAllow me to point out now that you must be careful what you wish for. Some things are best left a fantasy for some. Wife sharing might be for you, and it might very well not be. I never thought it was for me. My point is that you really need to answer this question before you pursue this very far, because it can and likely will happen for real if you do properly pursue it. I personally think it's well worth at least exploring, but you never know when the last opportunity to apply the breaks might be. Like I mentioned, I'll give you some things to think about and some ideas that will very likely lead to the real thing. I will also share a bit of my own experience not that yours will likely be the same.\n\nMany couples choose to swing. They discuss it and often the two of them decide to try it. I'm not talking about those couples. I'm gong to discuss the couples where the husband has this fantasy, and his wife is reluctant for now or is unsure.\n\nIf you go through with walking your wife in to this, these are some things you must be prepared to deal with in your mind once you are past the point of no return. Remember, if your wife does sleep with another man, she, nor he, nor you, can take it back. The first time will likely be a shock to one or both of you. If this moves from fantasy to reality, consider the fact that another man will see your wife nude. He will touch and lick your wife in her intimate places. He will eventually have his dick inside your wife. He will fuck her for his own pleasure and enjoy her body. Most likely he will cum inside your wife. Men who fuck other men's wives are not likely to pull out, and they are unlikely to wear a condom since she is married. It's possible that he will breed your wife making her pregnant., but hopefully your wife will mitigate this possibility unless she wants to be pregnant. Men who fuck other men's wives will likely at least try to fuck your wife in her behind. I always let them know that my wife is not interested in anal. I told one friend that it was okay with me if she wanted it, but that I doubt that she does.\n\nWhen men, even friends fuck your wife, they will do everything they want with her. Remember that it is sex for them, and they will try anything. They may get attached to her or at least want regular sex with her. If they know that you know, they might even tell you what they did and would like to do. I literally had a friend ask my permission to take my wife away for a weekend vacation. Most of these things come as somewhat of a shock regardless of what you were planning.\n\nI'll tell you how to lead your wife into this, but what if she cheats before you realize that she is ready. Are you prepared for her to have sex without you present? I believe most wives are more comfortable with sleeping with someone else in privacy at least their first time. This is what happened to me.\n\nI became somewhat obsessed with the idea and not necessarily with it actually happening. Someone else with my wife became an obsession for me. However, I was truly only obsessed with the erotic idea. We had fantasized and roll played. The fantasizing turned her on too, but she always said that the play was just for our own fun. I still thought it was a hot idea, but I was convinced that it wouldn't happen for real. I was satisfied with the fantasy.\n\nIt became more interesting to her as I convinced her to \"Be sexy\", and to \"enjoy her sexuality.\" Soon she was wearing clothes that showed how sexy she is. I encouraged her to enjoy the attention of other men. I think this was a turning point. We played a few games with strangers. For example, we did the shoe shopping thing in short skirts and sometimes without panties. We had to visit New Orleans to find a store that still placed the shoes on the ladies feet, but we did it.\n\nThe shoe shopping was interesting. We did this a few times. We even tried it twice with the same guy on two separate occasions. He of course remembered her the first time so he took a few liberties by boldly looking up her skirt. He obviously enjoyed the visit more on the second occasion. I usually went in the store with her, but I would pretend not to be paying much attention. She would try to sit in front of a mirror whenever possible. She would wear a spaghetti strap mini dress that would barely cover her bottom when she sat down. The first few times she was still shy and would wear sexy panties. But after a few times of only showing her panties, she began to remove them for more of a rush. She was actually shaking a little the first time a guy strapped heels to her feet when she had on no panties. She chickened out at first from nervousness and tried to keep her legs together. Of course, her legs soon opened a little just to position her feet. Then I caught an excellent view of her smooth pussy and the thin strip up top. I could see up her dress in the mirror. Her facial expressions were priceless the whole time as so many thoughts raced through her little head. When we left the store she told me, \"That was CRAZY hot.\"\n\nShe said the men would usually try to pretend that they weren't looking. She would look away at the shoes on her feet in a mirror so they could discreetly look up her dress. She also said the men usually would touch her legs and feet for no legitimate purpose.\n\nOne guy invited her to the back room of the store using the pretense that they had more shoes back there. She accepted but just for the purpose of giving him a better show. This was unplanned and I had wild thoughts going through my head. I knew he wanted her back there so he could try something with my wife. They were only gone about fifteen minutes, but it seemed forever. I was wondering what he was doing to my wife. I kept thinking is this it? Is she going to let him do it to her back there? Before they returned to the public part of the store, I had convinced myself that the salesman was doing it to my wife in the back room. I was not comfortable at all. I had butterflies in my stomach and a hard on at the same time. I wasn't mad at her, because I had lead her in to this.\n\nShe came out with new shoes on her feet; which we bought. I couldn't wait to get her out of that store and ask what happened. Turns out not much. I was thankful, because I wasn't ready. She said he did try though. She said he touched her very briefly. She told him she had to go but that she would be back shoe shopping again sometime. Tabi also admitted that it was extremely hot for her. It was the shere naughtiness that seemed to drive her mind wild. Later in our hotel room, we relived the experience in fantasy. Only in the fantasy version she allowed things to go further.\n\nThis was my first experience with all the mixed emotions. I was so jealous but extremely turned on. I kept wanting more as if I insisted on punishing myself. I kept looking for the next sexy game to play with her.\n\nI found a swingers site on line and made a few friends. I honestly explained the situation. I told them that I didn't think my wife would do much, but that I would like them to flirt with her and try seducing her. I told them they could do what they wanted as long as it was alright with her. She knew nothing about this at the time. By the time I introduced her to my new friends, she simply thought they were simply friends of mine. A few guys I never introduced to her and several others I didn't want near her.\n\nI would arrange to be out at the same places with her and my new friends. They sometimes danced with her. I would secretly encourage then to feel on her when they danced. I also encouraged her by somewhat joking suggesting that she flirt with them and let them play a little. By this time none of these suggestions came as a surprise to her due to our bedroom discussions during hot sex. On the other hand, Tabi wasn't ready to go very far with the play. She did loosen up some though and allowed the men to hold her close and feel her through her clothes.\n\nI would always ask my friends how it went with her when I had a chance without her hearing. They knew I wanted to hear good stuff. I think they sometimes embellished a little for my benefit. They often said they held her next to them while dancing and that they felt her breast and butt through her dress. My friend Greg claimed he fingered her. She didn't admit to that, so I think he was wishing. Although later during sex, she played along and talked about Greg fingering her like it did happen.\n\nNext, I began to inform different guys when I would be out of town. I travel pretty regular on business, so opportunities readily presented themselves. My friend Rick asked her to have lunch with him which she turned down while I was in town. Rick had decided that he was in for the long haul and planned to eventually seduce her in to bed with him. He and I made up a plan to get her out with him while I was gone. We told her that he was given two tickets to an event that I knew she would enjoy. The ticket dates were for days that I would be at sea. I encouraged her to go. To my surprise, she accepted. Then Rick and I had to buy the tickets for real.\n\nShe went, and they did have fun. Rick said he didn't push much but he did take her to dinner and drinks afterward. He was able to dance close with my wife and pursued his usual hands all over her tricks during the slow dances. He even kissed her on her cheek as he teased and flirted with her. Then Rick brought her home like a gentleman. A few days later he asked her to lunch. This time he accepted. They sent a few texts but kept their distance. Then the next day he took my wife to dinner for the second time. This was only two days before I was scheduled home. When he took her home, he asked if she wanted to finish their wine that they had left over from the restaurant. She accepted and invited him in to our house. They finished that bottle and opened another.\n\nYes, one thing lead to another. Rick spent the night with Tabi that night. My wife's innocence fell to Rick as she submitted her sexy little body and allowed his manhood inside her married little pussy. That was her first time with someone else. Rick slept with my wife in our house and in our bed. Neither of them told me until I figured it out weeks later. The next day was Sunday, so he slept with her that night too. I didn't know it but when I called her to pick me up Monday morning, Rick was fucking my wife. He had just finished in her before she left to come get me from the airport. Looking back I think it should have been obvious, but I wasn't suspecting nor expecting it. When I asked Rick about the date he just said they had fun. He did say that he took her to eat and that they danced closely and things like that but not that he seduced and screwed my wife.\n\nTheir date was on my mind the whole time, so I was horny when I got home. As usual, we talked about fantasy as we had sex as soon as we came through the door. I thought her extra wetness was just because our talk was turning her on. We talked about Rick and her. Tabi initially resisted much of the fantasy talk this time. I would often ask how sex was with someone else as foreplay and fantasy talk during sex. I thought this time was no different. Ironically, I asked her about sex with Rick. I thought she was just playing along as she actually told me some of what happened. She knew that I would think she only playing along.\n\nAs it turned out, I was making love to my wife only about a half hour after Rick had put some love in her. She was still freshly fucked from her hard fucking that he had just giving her. Rick had fucked my wife like she was some kind of a fuck toy. She still had his cum inside her. When I later found out details, I learned that he had fucked my little wife really hard. He was sweet and gentle the first time, but after that first time he used her body to the full extent of his pleasure.\n\nI was only home a week before I was gone again. I knew they had texted a few times that week, but I was still convinced that she would never do anything more than flirt and play a little. When I returned this time I was a day earlier than planned. This time she was really late picking me up even though I called her when I landed as usual. I had my bag and was at the curb when she drove up.\n\nShe looked a mess. Hair everywhere. Her clothes just didn't look right. She had on a little wrap skirt that wasn't wrapped on her little body quite right. She was barefoot. She had her Birkenstocks with her, but she had them off to drive. There was not a stich of makeup.\n\nI got her in the house and began kissing her. She mentioned that she should take a shower. I knew then that something was different. As I persisted, she gave in to my sexual advances. When I got my finger inside her panties, I knew this time that she had been fucked. She was sticky between her legs and it was all in her panties. I didn't say anything at first. I was a little angry. I pulled back the covers to the bed she had just been in and placed her on her back. I pulled her panties to the side with my left hand and grabbed her ankle with my right to hold her feet open. I jammed my dick in her balls deep and fucked her hard as I could for a few strokes. She knew at that point that I knew what she had done. I then turned her over and pulled her panties down to her thighs. I got on her and fucked her face down. She bent her knees with the bottom of her feet facing up. I could see her little toes curled as I slammed in to my wife's messy little pussy.\n\nI asked, \"Did he fuck you like this?\"\n\nShe immediately confessed. \"Yea,\" she answered.\n\nWhen she said that, I unloaded and shot probably my largest load ever of cum into her shared little pussy.\n\nI somehow knew that her pussy was no longer only mine. This time we talked about it after sex. I could now tell that she wasn't just playing along when she confessed to letting Rick fuck her. She cried at first and apologized swearing that she would never do it again if I didn't want her to. She claimed that she was scared to tell me. Tabi swore that she didn't plan to do it with Rick. She said it kind of just happened. Then once she had done it she did it again. She even said that she kind of hoped that she would be caught, because she didn't know how she could tell me.\n\nI kept making her tell me more, which she did with shyness. She continued to explain that she didn't intend for it to happen the first time. I knew I had to accept responsibility for this, so I tried to set her at ease. My emotions were nuts. My stomach was in knots. I also wanted to make love to my wife.\n\nI asked her if she liked it and if she thought she wanted to do it again. She said only if it was okay with me she might do it again. She admitted that she liked the sex.\n\nWithout too many details on the rest of that conversation, I came to the conclusion that she had explored her sexuality and she liked the freedom. Rick apologized for not being honest. He told me his side of the story, which was similar to hers. He also continued to fuck my young little wife when I went out of town. Soon, he would do her even when I was home.\n\nA few of my friends have since fucked my little Tabi now. It's not often but she likes the freedom when it's what she is in the mood for. She isn't any more slutty than she was before from appearance. She acts like a perfect lady until she is in the bedroom. Her style of \"Hot Wife\" or \"Slut Wife\" is more of a cheating wife with permission. She prefers that it happen naturally. She has always been honest after she cheated and admitted to it along with many details. It was months before she was comfortable with me knowing while it happened. She still is more comfortable with privacy, but she has allowed me to catch her. Just like from the beginning she has become a little more bold in time.\n\nThis is working out for us so far. We are very open and honest as we discuss it. She tells me what she likes and doesn't like, and so do I. Of course, being safe is imperative. Only a few times she has gone on dates with me in town although I occasionally encourage it. Since I know all about Rick, he has visited her while I'm home a few times. They only go so far in front of me, But I find it extremely erotic to see my wife passionately kissed and for him to love on her in front of me with his hands. Rick takes a dominate roll over her making her submissive to him. Tabi is embarrassed in front of me, but he kind of pushes her to let me see some things. For example, he made her show her panties to him in front of me. When things advance, she begs him to take her out of the room. A threesome was a long time coming although I had my turn with her after he finished in her in our room with the door closed. She still isn't comfortable with me watching. I try to give her the privacy she wants so she can be free to enjoy her sex.\n\nFrom what I have read, this is nothing like the average shared wife arrangement. However, I suspect that in reality each situation is unique in some way. There are Hot Wives, Swingers, Cheating Wives, and Cheating Wives who have permission. The point is that if you want this to happen for your wife, you must be prepared and flexible. It should not only be about you. It must also be about her.",
        "Also, you should expect a few embarrassing moments. When she decided that she should be on birth control, she went to our own doctor who knows that I have had a vasectomy. He looked at her funny and was noticeably uncomfortable. He even mentioned that he thought I was fixed. He knows us pretty well. He and his wife are our friends. I guess she should have been more discreet with that one, but we thought her regular doctor should know she is on birth control. There have been other interesting moments as well.\n\nIf this is for you, enjoy the journey. Let your wife be sexy first. Play games with the two of you. This will be fun regardless of where it leads."
    ],
    "authorname": "Tabbisfull",
    "tags": [
        "hot wife",
        "cheating wife",
        "toy wife",
        "shared wife",
        "wife sharing",
        "fuckable wife",
        "fuck my wife",
        "slut wife",
        "promiscuous wife"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-young-wife-to-shared-wife"
}