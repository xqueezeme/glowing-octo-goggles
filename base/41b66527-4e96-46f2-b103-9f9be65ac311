{
    "title": "My Crazy Girlfriend Pt. 03",
    "pages": [
        "Liv woke up late and met me downstairs for coffee. She pranced around the kitchen helping with breakfast and generally being happy. We only had two days left before we had to part until school resumed so she ran through a list of stuff we could do in that time.\n\nUnable to think of anything both free and entertaining outside the house, we settled on video games in the living room. It never went well for me. Liv is excellent at Smash. We played until almost noon, and I did even worse than usual. Eventually she took pity, and we did the story mode together. Eventually even that lost its entertainment value and she climbed into my lap.\n\nMaggie walked through seconds later and groaned, \"Get a room... not that it would help.\"\n\nLiv laughed and touched her nose to mine, \"Grow up,\" Liv said with a smirk, \"Part of a happy relationship is... playing.\"\n\n\"The whole family uses that couch.\" Maggie quipped from the kitchen, emerging with a cup of water.\n\nLiv looked over at her, \"So who made him nut himself on it again?\"\n\nMaggie laughed, \"Splash zone was right.\"\n\nLiv looked at me deviously and started pulling at my pajama pants, easily exposing my stiff shaft and tugging against my weight. I lifted up helping her pull them farther down. I turned bright red and she giggled. She was wearing a shirt twenty sizes too big and it hung to above her knees.\n\nShe climbed farther into my lap and my tip felt her under the shirt. She did not have on underwear. She was already wet and teased me with her bare folds, still grinning. She looked over at Maggie.\n\n\"Do you want to watch?\" She asked her face starting to sink as she slid her wet cunt over my shaft, \"Because I'm not going to stop.\" She lowered herself on to my cock and her breath caught in a small sound. She started to bounce, whimpering quietly as she fucked me.\n\nI could hear how wet she was as she bounced, her pussy making noise as she plunged me into her with each stroke. She pushed her head into my shoulder and moaned softly. She bounced steadily and I held her sides. She raised her head and giggled between moans, \"I'm going to make you cum on my couch again.\"\n\n\"It's not even a challenge for you.\" I said, she giggled again and gave me a long kiss. I lifted the hem of the shirt, exposing her butt and felt it causing her to make approving sounds into the kiss. She pulled out of the kiss and put her nose to mine. \"How wet do you think Maggie is watching us?\"\n\nWe looked over at her sister who was sitting on her knees, legs together, watching intently. In her tank top, her nipples poked through. \"Probably pretty wet. But I bet we can make it worse.\" I said and pulled the hem of her shirt up exposing her body as I did. She pulled it over her shoulders and her hair through and dropped it. My lean, pale girlfriend was now completely naked in my lap, my cock buried in her to the hilt.\n\nI ran a hand across her chest and played with one of her pink nipples. She cooed and held my neck grinding and bouncing. Her face was flushed, and her small-cup breasts shook, and she moaned lowly. She leaned in and kissed me again. I ran my hands across her back as she whimpered and cried against my lips, grinding against me.\n\nShe slowed her hips and looked over at Maggie who was gripping the couch with one hand and making a fist with the other. Maggie was biting her lip anxiously. Liv looked at her then me, panting, \"Lie down.\"\n\n\"Is this uncomfortable?\" I asked holding her hips.\n\n\"Oh no, but Maggie can't see anything, poor thing.\" Liv smirked through disheveled hair and glossy sweat.\n\nI swung bodily onto the couch and slid to the side, laying flat. My head bumped Maggie's knees who scooted back. Liv adjusted on top of me and pushed herself back, her mouth falling open as I slid back in. Liv started riding me again and I reached out and ran a finger lightly across her clit.\n\nMaggie fell back with her knees open and slid a hand into her shorts. Liv was red in the face, moaning loudly as she bounced and rocked on me. Her lean body tensed moved as she stroked my cock with her tight pussy.\n\nShe leaned forward grabbing my shoulders, \"I'm gonna cum...\" She cried with her eyes squeezed shut. \"I'm gonna cum...\" she squealed and moaned loudly, leaning further forward and quaking on top of me. I held her body at the ribs and back as she climaxed for several seconds and fluid from her pussy ran down my legs and hips.\n\nShe heaved for breath over me and gave me soft kisses as she recovered. She looked up at Maggie and smiled. Maggie apparently had pulled her shorts down and was whimpering quietly against the arm of the couch with a hand on her cunt.\n\nI slapped Liv's ass and she whimpered. \"Get on your knees, its my turn.\"\n\nShe giggled leaning off and pulling my cock out of her as we switched places. She was on her hands and knees on the couch looking at Maggie as I positioned behind her. \"I have to cum over and over again before I can get him to fill my pussy up with his load.\" She taunted Maggie, \"I get so wet from cumming again and again sometimes we need a towel.\"\n\nI moved up behind her and put my cock against her pussy, which had smeared across her legs and butt and pushed in. She covered her mouth and moaned into her hand as I started to fuck her again, sliding my shaft in and out of her tight pussy. Her ass slapped against me and she braced her hand on the couch moaning into Maggie's face.\n\n\"Fuck... his cock feels so good pounding my pussy, he's so deep.\" She cried, I grabbed her hair with my fist and yanked. She whimpered and flared her hips sinking to her elbows with loud cries. \"Fuck I'm gonna cum again.\" She shook violently yelling into the couch, holding the fabric. Her pussy dripped onto the couch and ran down my leg as she trembled through the climax.\n\nShe slid my cock out slowly and panted holding on to the couch. She looked up at her sister and wiggled a finger. \"Come help.\"\n\nMaggie didn't need to be told twice. She pulled her shorts all the way off and scooted down the couch pulling her top off. Her full breasts bounced free and she crawled over to me and lifted to her knees putting her hands around my neck.\n\nShe pulled on my neck craning my face to her breasts. I took one nipple in my mouth and sucked, flicking it with my tongue and she cooed with enjoyment grabbing my shaft in response. She twitched and whimpered as I sucked, nibbled and pulled on her breasts for several long minutes.\n\nShe looked at Liv over my shoulder and taunted her. \"See how much he enjoys a real set of tits?\" One hand pumped my shaft while the other held my hair. I ignored her and leaned over to the other breast. She giggled before being cut off by a gasp and moan as I tickled the pink with my tongue and teeth.\n\nShe pulled my head up to her face and kissed me hotly leaning in, so my cock brushed against her flat stomach. I groped her breast as we kissed, my other hand holding her ass until she pulled away and smiled.\n\n\"Lay back so Liv can watch.\" She said with a devilish smirk. I laid back on the couch and she swung a tan leg over me. I grabbed her ass pulling it open while she angled my cock under her. I felt her lips, which were hot and slick as she wiggled her hips until I felt my tip grabbed by her opening and she eased down, pushing me in.\n\nShe moaned gently as my cock slid into her pussy which squeezed it inch by inch until her hips settled on mine. She was panting at the sensation but looked at Liv with heavy eyes. \"Thanks for lubing him up for me. Now try not to distract me as I fuck my new cock.\"\n\nShe started rocking her hips which forced her mouth open. She moaned loudly, her tight stomach flexing as she fucked. Her pussy stroked my cock steadily making me gasp for breath and groan under her. I slapped her ass and she cried, biting her lip.\n\n\"Fuck yes, hit me again daddy.\"\n\nI spanked her again harder, and she squealed, \"Fuck I'm addicted to your cock. I'm going to fuck you whenever I want.\"\n\nBetween what Liv left on me and what Maggie was adding, her pussy made loud, wet squelches and my hips and thighs were smeared and slick as well. I sat up, leaning forward and sucked on one of her shaking breasts making her clench and moan into my ear.\n\nShe was fucking me frantically as I buried my nose into her cleavage and tugged in her breast again. She grabbed my neck and craned forward. I could feel her pussy clamping around my cock.\n\n\"Fuck, daddy I'm gonna cum, don't lay down I'm gonna cum!\" She yelled holding my face to her breast. She screamed and shook. Her nails dug into my neck and her lean, tan body seized on top of me. Her hips thrashed for several second as she moaned into my ear.\n\nWhen the climax faded she let my neck go and I fell back to the couch. She raked messy blonde hair and curls from her red face gasping for breath and laughed. \"Mmmm you've made me cum so many times today.\" She said looking over at Liv.\n\n\"Now its you're turn. Fill my pussy up again, I loved it so much.\" Moaning with sensitivity she leaned forward and started pumping my cock with her body. \"I can feel it you're so close.\" She moaned, \"Cum for me daddy.\"\n\nShe pushed her elbows in pushing her breasts together. \"Fill my pussy with cum while you look at my tits.\"\n\n\"I-I'm gonna cum...\" I groaned grabbing her neck with one hand and squeezing her ass with the other. Her steady strokes were building the pressure in me past the breaking point. My stomach started to clench as she rode me.\n\nI shuddered vocally and jerked beneath her as my cock sent shot after shot of hot cum into her. She stroked me with her hips laughing with satisfaction. My cock started to soften after it felt like it had totally emptied into her.\n\n\"Mmmm daddy you came so much.\" She said touching just below her belly button. \"I can feel it in me.\"\n\nShe leaned over and kissed me softly holding my face. I had lost most of my erection and she had already started to leak onto me. We kissed for minutes until she leaned up and pulled her blonde mess from her face catching her breath, before swinging her leg off me.\n\nCum spurted out of her as she moved and ran down her thigh making her laugh. She ran her finger through it and sucked the cum off. Then wiped her leg again and put some to Liv's lips who eagerly sucked the finger clean.\n\nShe watched her sister clean her finger and smirked, \"Get used to tasting that; I have more of his cum in me than you do.\" She flipped hair over her shoulder and climbed off the couch, cum dripping onto me and the cushions as she did. \"Keep my new cock ready for me, sis. I'm gonna need it again real soon.\" She said before practically skipping down the hall and up the stairs, her discarded clothes still on the end of the couch.\n\nLeft alone with Liv again I looked at her and opened my mouth, but she put her finger to my lips, and shook her head. \"Don't say anything.\" She laid down against me pushing her head into my chest. I felt anxiety wrap around my torso and squeeze. Had I just ruined my relationship? But then she said, \"You'll ruin the moment.\"\n\nAs my delicate, ginger, girlfriend hugged my chest, laying next to me completely naked; I found myself feeling down her back to her butt. Suddenly she started to giggle and laugh.\n\n\"What's so funny?\" I asked looking at her pink face.\n\n\"After all that you just, get hard again.\" She said between giggles and grabbing my cock. I hadn't even noticed.\n\n\"Sorry, is it too soon?\"\n\n\"No!\" She said excitedly, \"It means I can suck the taste of you and her off.\" She said shifting down and licking my shaft.\n\n\"You're actually loving this aren't you?\"\n\nShe smiled as best she could with her lips wrapped around my shaft. She sucked, lashing me with her tongue for several moments before pulling up. \"Are you not? Having a slutty little blonde fuck your brains out and claim your cock as hers.\" She licked my balls with several long licks.\n\n\"You're so hard again...\" She said quietly, before resuming sucking. She sucked aggressively and slid her lips off, \"Watching Maggie fuck you drove me crazy, I want to fuck again.\" She sat up and collected her thick hair behind her and turned around to lean over the arm of the couch.\n\nShe grabbed her ass cheeks and pulled so her pink pussy was open. I struggled to sit up and had to awkwardly roll onto my side before scrambling back to her. The mood wasn't lost on her however because as soon as I leaned behind her pushed back into me and panted.\n\nI pushed into her dripping pussy and it squeezed me gently as I pushed in. She groaned gripping the couch with her nails. She leaked down my shaft and balls as I pushed deeper into her until our hips met and she was nearly crying. I slapped her ass as I started to pump, and she moaned forcefully.\n\nI reached around, running my hands along her ribs and cupped her breast, she moaned and arched into my hand. I squeezed and teased her nipple loved the way her body reacted, and her pussy throbbed around me as I did. I reached my other hand down between her legs and ran my fingertip lightly over her clit, up and down.\n\nShe moaned and hung her head from her shoulders as I rubbed her clit, pounding her from behind. Her skinny body was panting for breath and red hair formed a tangled mess across her back and shoulders. I ran my fingers through the copper mess and leaned over her kissing her neck and said, \"I've always been partial to redheads over blondes anyway.\"\n\nShe laughed and craned her neck around to kiss me. \"I like when you fuck them and use them like slutty toys.\" She gripped the couch and moaned, \"I like watching you lost in their tits grabbing their ass trying not to cum.\" She moaned and leaned over, \"Fuck I think I'm gonna cum...\"\n\nShe screamed and shook, her ribs heaving for breath as climax ripped across her pale body. Her pussy clenched down on my cock and I grabbed her hair at the feeling. She was still yelling as I fucked her through the orgasm, and I could hear her nails dragging on the couch.\n\n\"I'm gonna cum,\" I said louder than I meant to. She spread her legs and flared her hips so my cock could reach deeper and begged me.\n\n\"Do it, cum in me, fucking fill my pussy, I need it...\" She shouted.\n\nI shoved myself into her pushing her chest into the arm of the couch and groaned loudly grabbing her hair. My cock burst, dumping gush after gush of cum into her. I grunted and groaned with each pulse, shaking. I had started to sweat by the time I was empty. When I pulled out, cum fell on the couch and ran down her leg.\n\nShe laughed with a hoarse voice and leaned back into me, looking down at the pearl puddle that was leaking out of her. She laughed again, flexing her stomach and squeezing more cum onto the cushion before she turned her head and kissed me softly.\n\nShe parted looking me in the eyes with a tired smile, \"Didn't know you'd like meeting my family this much did you?\"\n\n\"Except for the part where I was continuously encouraged to fuck your sister in the most perverse and reckless ways possible, I thought the weekend was quite dull. Your parents need more to talk about.\" I half smirked. She started laughing.\n\n\"You suck.\" She panted between laughs. She kissed me again and climbed off the couch. \"We should probably clean up the huge mess you made... twice... and shower and change. My parents will be getting home and we don't want to give them this much to talk about.\" She gestured to the series of clear and creamy smears and pools\n\n\"Is this a normal shower or an us shower?\" I asked poking her side. She flinched.\n\n\"A normal shower, you and your dick can take a breather.\" She collected her hair off her shoulders and face before pulling her leg up and looking at the slow wad of mixed fluids that were rolling down it. \"Hey, I hate to ask but-\"\n\n\"I can clean the couch.\" I finished for her.\n\n\"Thanks!\" She said desperately hurrying out of the room.\n\nNo part of cleaning up was fun. It was awkward. Liv and her sister weren't the only ones who were messy. I did get it cleaned up... mostly and collected the discarded clothes and carried them upstairs. Liv was in her bedroom shower, so I set the clothes on my very unmade bed and headed into my own.\n\nAfter we had all washed and re-dressed, we met in the kitchen where Maggie and Liv helped make dinner. I wanted to help, but the two girls and their mom were wizzes and I accomplished little more than clumsy buffoonery.\n\nIt was a little surreal to see them both in their usual outfits, Liv in one of her dresses and Maggie in tight, short, denim shorts and tank top- but not actively panting like animals in heat. It was surreal that I thought that too since I'm not exactly a player. I work hard enough just keeping Liv happy.\n\nIt was also strange to watch them have wholesome interactions with me, laughing as I- for example, poured chicken stock into a bowl fast and had it splash across the counter. But I did my best and both preparing and eating dinner was refreshing.\n\nAfter dinner was game time for me, and I was not excited. This trip had taken a wild left turn on me that I hadn't been prepared for. I wasn't expecting the world's kinkiest swinger-incest game when we pulled in and I really wasn't expecting to enjoy it as much as I had. Liv is so hard to say no to and even though she seemed to have had a blast; it didn't make the walk I was about to invite her on any easier.\n\nShe was washing dishes and wearing a floral yellow apron when I walked up and put my arms around her. \"Hey.\" She said happily.\n\n\"Are you almost finished?\" I asked.\n\nShe dropped the sponge in the empty sink and rinsed her hands, \"No, I am done!\" She chirped triumphantly.\n\nI gave her a high five that flung water from her hands across the counter. \"I was wondering if we could head out to the garden for a bit.\"\n\nShe wiped her hands on a dish towel and looked back at me, \"Yeah, sure.\"\n\nShe pulled the apron off and draped it over the back of a chair. She opened the door, then the screen door and we went outside. The garden wasn't exactly an elegant affair. As nice as their house was the garden was little more than a few flower beds along the garage and back fence and a small path with flower beds on either side that ran behind the garage. I had often joked we could grow pot back there, but Liv didn't think it was as funny as I did.\n\nShe stopped by the garage, but I took her hand and pulled her into the 'pot farm'. It's still funny to me. We stopped and she looked at me expectantly. I took a series of deep breaths and I could tell she was bracing as I struggled to start talking.\n\n\"This trip was not the trip I expected to be coming off of when I did this at all. I mean what a wild ride. You are certifiably the craziest and most fun girl I've ever gone out with.\" I started losing my breath midway through.\n\n\"But the whole pass-back game and banging my sister thing was too crazy and you're ready to move on.\" Liv said hanging her head.\n\n\"What?\" I asked blankly.\n\n\"It's been a lot of fun but you're looking for someone who isn't as wild or you're afraid I'll want to sleep with other guys or its weird.\" She continued, her eyes starting to well with tears.\n\n\"What, no I-\" I tried to interject but she continued.\n\n\"I thought with as well as things were going you would just roll with the fact that I'm a little off- hell maybe like any other douche bag you'd just enjoy the fact that I get off on you banging hot chicks, but I shouldn't be surprised that a quality, sweet, guy that I'm in love with isn't into that.\"\n\nShe closed her eyes and tears fell onto her cheeks. \"No, Liv, I-\"\n\n\"I mean, what kind of perfect boyfriend would want to be in some kind of one side- swinger relationship, I mean all you've ever wanted to do is love me and I'm just some sick, debased, perverted-\"\n\n\"Liv.\" I insisted.\n\n\"- CUCKOLD. It's stupid and I'm sorry I started this and ruined everything and-\"\n\nI grabbed her face and she stopped looking me in the eyes. \"Liv, shut up.\" I said firmly.",
        "Tears fell off her chin and she blinked, \"O-ok.\" I moved past her and pulled a white moonflower from the vines that covered the fence and stuck one in her hair over her ear. \"Just... shh.\" I said again wiping her face. \"Where was I?\"\n\nShe stared at me blankly.\n\n\"You can un-shut up.\"\n\n\"This trip isn't what you expected?\" She repeated with a dubious tone.\n\n\"Right. Yes. This um, this isn't what I expected to be thinking back on at this moment. I never thought that you'd be excited to hear that your sister fucked me this morning while you were asleep.\"\n\n\"I wasn't asleep.\" Liv said almost smiling.\n\n\"Ha, I knew it.\" I said pointing. \"I didn't expect to be worried your parents would notice stains from where I did you and her together on the couch. Just- you can't find porn on the internet this wild.\"\n\n\"Not good stuff anyway.\" She said rolling her eyes and wiping tears away before crossing her arms.\n\n\"Right?\" I said with agreement and she cracked a smile. \"But take it all away. The debauched games, all that stuff with your sister- just the purely hormone fueled circus that this whole trip has been, take it all away and replace it with a boring week going to farmer's markets and watching movies with your parents and this moment would still be the most certain thing I've ever done.\"\n\n\"Not breaking up with me.\" She said flatly.\n\nI shook my head, \"No.\" I slowly dropped to one knee and almost fell over and Liv squeaked as I did. Then I stood back up. \"Sorry, I can't get my hand in my jeans like that.\" I said fishing in my pocket and pulling out my fist, once again struggling to lower to one knee.\n\n\"Will you marry me?\" I asked holding out a ring. It wasn't a particularly impressive ring. But I'd been saving for it since our first date- just in case. The tears started falling from her eyes again and she covered her mouth in shock.\n\nAfter a moment of recoiling, she nodded vigorously and held out her hand. \"Left hand, Liv.\" She switched hands and I slid the ring onto her finger. \"Yes, please, every time, yes.\" She said, an uninterrupted stream of tears dropping off her cheeks and onto her dress.\n\nI stood up and she pulled me into a kiss before burying her face in my chest. \"Is this real?\"\n\n\"Yes, Liv, its real.\" I said, she cried for several more moments, and then unceremoniously wiped her running nose on my shirt.\n\n\"Will you keep sleeping with girls for me. Just once and a while.\" She asked sniffing.\n\n\"Is that really what's on your mind?\" I asked through a laugh.\n\n\"I just want to set the tone for the future you know?\" She said starting to laugh herself, \"You can say no, but a total freak just accepted your marriage proposal.\"\n\n\"I said yes to this weekend's thing, I can't imagine you could get any crazier.\" I said, \"Should we go share the news?\"\n\nShe nodded, \"I guess, 'will you bang my sister' is a pretty tough act to follow.\"\n\n\"Trust me when I say that everyone lives in your shadow.\" I said kissing her cheek.\n\nWe walked inside to wild celebration. Liv's parents had champagne ready and even let Maggie have some. The rest of the evening was spent talking to them and fawning over Liv's ring. This took us late into the night until everyone decided to call it a night.\n\nI collapsed into the guest bed and rolled onto my side and Liv climbed in shortly after. She was looking at me as I tried not to doze off.\n\n\"How's my favorite super soaker?\" She asked with a giggle.\n\n\"Super soaker?\"\n\nShe pointed at my junk.\n\n\"Oh. How is that a super soaker?\"\n\nShe rolled her eyes and laughs, \"Well, you have to pump it to make it shoot. But also, there's how much it shoots every time you pull the trigger.\" She started giggling.\n\n\"Oh, I didn't think it was that much.\" I said feeling my ears get hot.\n\nShe giggled again, \"It is, you cum so much. And you do it every time.\"\n\n\"Well, it and I are at your disposal.\" I said emphatically.\n\n\"Great!\" She said excitedly rolling over and grabbing her phone.\n\n\"That was not the reaction I expected.\"\n\n\"Just wait.\" She said putting her phone down and rolling back over.\n\nThen it hit me, \"What? We just got engaged.\"\n\nShe gave me a pouting face, \"We leave tomorrow, and besides, she did say your cock belonged to her.\"\n\n\"If I say your nipples belong to me does that make it true?\"\n\nShe rolled her eyes and stuck out her chest, \"Duh.\"\n\n\"You're crazy.\" I said. She laughed leaned over to kiss me.\n\n\"Just relax and think about her tight, tan body, and how much fun her tits are and how well she rides you. Those little moans she makes when she's turned on.\" She kissed me again and reached down to feel me. Busted, I was rock hard.\n\nI was going to protest but I heard our door open and close quietly and Maggie came creeping into the room. She was wearing a Nirvana shirt that hung down past her hips and nothing beneath- not that I could see. She tip toed into the room and then climbed onto the bed on the other side of me, making me scoot over.\n\nWhen Maggie had settled, Liv sat up off the pillow. \"I got you an engagement present.\"\n\nMaggie put her hands in the air and rotated on her hips. \"Open me.\"\n\nI rolled my eyes and grabbed the hem of the shirt lifting it over her shoulders and head. Her perfect, bouncy, tits came into view and as I suspected, her little body had nothing on under the shirt. Behind me Liv said quietly, \"Ta-da! I got you a slut!\"\n\nI feigned banal appreciation, \"Babe, you shouldn't have.\"\n\nShe leaned over and kissed my cheek, \"I wanted to get you something you didn't have.\"\n\n\"I want to play with both of you.\" I said trying to lift of Liv's tank top.\n\n\"You're supposed to play with your new toy first.\" Liv said pointing to Maggie.\n\n\"I know, but as any boy will tell you, the best part about playing with toys is mixing them up.\"\n\nShe looked at Maggie who shrugged, \"I can share I guess.\"\n\nI clapped and Liv let me peel the top off her, exposing her small, pale breasts. She hurriedly pulled off the pajama bottoms she had on and tossed them off the bed. Both girls were now completely naked and looking at me, sitting on their knees on either side of me.\n\n\"What?\"\n\n\"Take your pants off dummy!\" Liv laughed.\n\n\"Oh.\" I said and struggled out of my boxers. Maggie grabbed them from my ankles and tossed them into the air. As soon as I was laid flat again the blonde pounced forward grabbing my cock and wrapping her pouty pink lips around it.\n\nI made a noise with surprise but quickly settled into how good her tongue felt as she sucked. I held her head with one hand as she bobbed up and down dragging her tongue across the underside of my cock as Liv watched.\n\nLiv leaned over and pushed on Maggie's head forcing my cock into her throat. Her tan body seized as she gagged for several seconds and I felt drool run down my balls. Liv let her go and she resumed without hesitation.\n\n\"She's a happy little slut with cock in her mouth.\" She leaned over and kissed me. Her tongue slid across mine and I tried not to make sounds as Maggie eagerly tugged on my cock with her lips. Liv made a quiet noise of her own and pulled away, \"I love feeling you enjoy her.\"\n\nI put a finger under Maggie's chin and she slid her mouth off me and looked up. I motioned for her to move closer, and she did. I leaned over and took one of her tits in my mouth. She giggled and made sounds of approval as I tongued and sucked on her nipple, one hand holding her ass.\n\nShe panted and whimpered, and I felt Liv wrap her little fingers around me and start to stroke. I leaned off Maggie's breast and looked at both of them. \"Lay back.\"\n\nMaggie protested holding my neck, \"No, I want to fuck you.\"\n\nI patted her ass, \"There'll be plenty of that, but you both know that girls always cum first in bed with me.\"\n\nThey both laid down, their heads towards the foot of the bed and I crawled between Maggie's open legs. Her bald pussy was pink and glossy with arousal and I immediately started to taste it. She whimpered and cried, flexing her hips and stomach as I lapped at her lips and folds, tickling her clit with my tongue.\n\nShe moaned into her hand and squeezed her breast, her tan body squirming on the comforter as I teased and sampled her slick, sticky pussy. I looked up from licking when I heard giggling and saw Maggie holding Liv's face. They were kissing erotically with giggles erupting between them.\n\n\"Hey, aren't y'all like-\" I started to ask but was promptly shhed by Liv who resumed kissing Maggie. I like a little girl on girl, so I decided to roll with it and not think about the sister angle too hard.\n\nI leaned my head back down and resumed lashing her with my tongue causing her to moan loudly and roll her hips against my face. I steadily stroked her clit with my tongue and she groaned into her kiss. She pulled away from Liv, \"Oh fuck...\" She covered her mouth and moaned into her hand, \"I think I'm going to cum...\"\n\nHer legs suddenly grabbed my neck and shoulders and her fingers yanked on my hair as her whole body shuddered and she moaned open mouthed, her hips trying to fuck my face. As she came down from her climax her legs slid until they laid flat on the bed and she erupted in more giggles resuming kissing Liv, who fought her own round of laughs to do so.\n\nLiv leaned away from this kiss and Maggie giggled, gasping for breath, \"I think it's your turn.\"\n\n\"It won't take long.\" Liv laid back and spread her long, pale legs from the hip. Her pussy was dripping wet and had drained down her ass onto the bed as she watched me eat out Maggie. I settled between Liv's legs and started licking to clean her. I dragged my tongue from where her ass hit the sheets all the way up until I hit her soft folds.\n\nShe moaned into her hand and her hips started to rock right away. I ran my tongue across her pussy savoring the tart taste, plunging my tongue into her and circling her clit quickly. Her long body flexed and squirmed, Maggie had leaned over and begun kissing Liv enthusiastically as Liv struggled to control her moans.\n\nHer pussy was squeezing fluid out that ran down her pussy to her ass and spotted on the sheet and I couldn't keep up with it. I had my hands on her rocking hips and could feel her torso tightening as she squirmed. She gasped loudly and covered her mouth, \"I'm gonna cum...\" she panted.\n\nShe screamed into her palm and my tongue felt her pussy pulsing and squeeze shut. Clear liquid leaked out of her and her whole body seized, her legs clamping around my ears, pinning my lips against her wet folds as climax tore through her.\n\nHer body slowly stopped jerking and she lowered her legs gasping for breath. Her face with flushed and sparkling with faint sweat and threads of hair stuck to her. I raised up and climbed over her and she gave me soft, weak kisses, gently stroking my shaft.\n\nAs we kissed, I heard Maggie's pouting voice, \"Daddy come fuck me.\"\n\nLiv and I looked over at her. She was on her knees and elbows watching us kiss, her tight, round ass stuck up behind her. Liv looked up at me and smiled, \"Go fuck her, daddy.\"\n\nI gave Liv one last kiss and crawled across the bed to the sleek, athletic blonde, who was wagging her hips in the air. I slid my cock against her cunt and spanked her. She cooed with approval and looked back at me sliding her pussy against me. I spanked her again harder and she groaned.\n\nI leaned back and put my tip against her opening and pushed. She moaned, covering her mouth as I slid in, inch by inch, feeling her wet pussy give way. She pushed back against me until her ass hit my stomach. Through gritted teeth she egged me on, \"Fuck me hard daddy, use me up.\" She said half moaning.\n\nI started to pump my cock in and out, making wet smacking noises as I picked up pace. She moaned in her throat but quickly let her mouth hang open. I slapped her ass again and she groaned into her hand. I grabbed her hair in my fist and shoved her face into the mattress, pounding her body into it and she screamed into the sheets, one hand holding the pillow.\n\n\"Fuck!\"\n\nI pulled her face up and she moaned through gritted teeth. \"Ugh, fuck I'm gonna cum again!\" I leaned over, driving my cock into her hard, her ass slapping against me as I did and grabbed a hand full of her big, sensitive breasts. She buried her face in the sheets and screamed, her tan figure shaking and sweating as she was torn apart by orgasm.\n\nShe lifted her head and looked at Liv, \"Your boyfriend is addicted to my pussy, he doesn't want to fuck flat chested waifs anymore. Fuck!\" She was interrupted by a moan as I started fucking again. \"Look at how much he loves my ass.\"\n\nI was about to stop because I wasn't wild about her talking to Liv that way, but Liv's reply surprised me.\n\n\"Keep his cock satisfied and empty. I hope he picks you every time we visit and just fucks you over and over again.\" She panted with fingers between her legs.\n\nMaggie leaned away, sliding my cock out and rolled onto her back holding her feet in the air. Her legs were spread wide open and her heavy breasts pillowed on her chest. I took one of her cute toes in my mouth and sucked it gently. She cooed and squirmed on her back before pulling the toe away.\n\n\"Come on, daddy. Fuck me like we're in love.\"\n\nI leaned down between her and slid my cock against her pussy. It made wet sounds as I ran myself through the slick, wet, folds as she fidgeted on her back trying not to moan. I shoved myself in and she moaned, loud enough that she turned and moaned into the pillow.\n\nShe held my neck and rode my cock under me. Her legs wrapped around my waist and she was biting her lip as I stroked her insides feeling her stomach tighten. Her tight, young, pussy gripped my cock as I fucked, and I watched her cute face moan and her eyes squeeze shut. Her tits bounced with each thrust as she clung to me.\n\n\"Oh shit,\" I groaned. She cried desperately and I felt her grip on my neck tighten.\n\n\"Cum in me, daddy, fill me up again.\" She cried louder than I was comfortable with.\n\n\"I'm so close,\" I panted, \"I'm- oh fuck-\" I groaned loudly and my hips bucked out of my control. Cum shot from my cock in hot bursts, in rapid succession until it felt like her insides were full.\n\nI slowly slid my spent cock out. It was covered in Maggie and my own cum, which spilled out onto the bed with me. She giggled into her hand as my tip popped out finally. \"Holy shit there's so much.\" She touched her stomach, \"I can feel it up here.\"\n\nLiv rolled over and touched her sister's arm. \"Feed it to me.\"\n\nMaggie laughed again, \"Aw do you want a taste?\" She sat up and threw her leg over Liv's shoulders, who slid down beneath her sister. Straddling Liv's face Maggie held her cheeks apart and squeezed cum from her pussy.\n\nA huge glob fell onto Liv's face and she laughed licking it up as a slow string drained out of her sister onto her lips. Sticky, creamy, fluid coated her lips and dripped across her nose and chin. She lapped as much as she could off before leaning up to clean Maggie out with her tongue.\n\nMaggie clearly wasn't expecting Liv to make contact with her and yelped when Liv's tongue dug into her pussy for more cum. Her yelp turned into moans and she covered her mouth blushing as her sister worked to clean her pussy.\n\nLiv's face was covered in thick, glossy, fluid and her lips made strings when they parted having sucked and licked as much cum from Maggie as she could. Having watched the entire incestuous-lesbian affair, I realized I was stroking myself. I'm no stranger to masturbating but at this moment, clearly, I had better options.\n\nI ran a hand over Liv's thigh, and she pulled her legs open. Her inner thighs were a smeared, shimmering mess. Her pussy had leaked all over her ass and been spread across her legs. Her fingers were coated from fingering herself and the bed had a healthy wet spot where she'd watched us fuck.\n\nShe felt my cock on her slick, pink, pussy and whimpered, looking down at me. She giggled, \"I got a little carried away.\"\n\n\"Covered in cum is a good look for you.\" I said rubbing my cock between her legs. She squirmed and moaned. I could feel her throbbing as I did which meant she had cum more than once already.\n\n\"It tastes so much better draining out of a used pussy.\"\n\nI pushed into her folds and felt her pulsing, tight, pussy, give way. She groaned loudly and grabbed Maggie's ass. Her pale torso clenched, and she wrapped her legs around me. \"Oh fuck! How are you so hard?\" She moaned. I pulled threads of red hair that had stuck to her face away and leaned down to kiss her. Maggie kindly shifted so I could.\n\nI tasted the combination of Maggie and myself on Liv's lips, who kissed me aggressively, running messy fingers through my own hair. I ran my hand over her small breasts firmly feeling and cupping them, relishing the way her whole body reacted to the touch. Her tongue was coated in the taste of pussy and she struggled to stay in the kiss as I started to pound her.\n\nShe broke away from me and moaned forcefully, her hands making fists in my hair, gritting her teeth to keep from being too loud. Her nipples tickled my chest as I leaned closer to fuck her hard making her cover her mouth and howl.\n\nShe climaxed without warning, her long, supple, torso convulsing. Her legs shook against me and she screamed into her palm. The orgasm didn't relent immediately because I never stopped hammering her pussy, and when it did her face was red and her whole body had started to sweat.\n\nI slowed for her to catch her breath and she pulled me into a weak kiss, her pussy still throbbing around my cock. \"Cum on Maggie.\" She said softly, \"I want to eat more cum off her, cum on Maggie.\"\n\n\"Are you sure?\" I panted breathlessly. She nodded. She held my neck and her legs along my sides as I fucked her for several more minutes, her voice hoarse as she moaned. When her pussy worked me until I was too close, I yanked out and climbed over her and ran my shaft against Maggie's ass, who obliged me by rocking her hips.\n\nI stroked at the top of her crack until heat burst in my pelvis and lowered my cock. Cum burst out and splatted loudly against her ass. A second, third, fourth full burst splashed against her as my cock pulsed. Her ass was glazed with thick cum that ran down her crack and dripped off her pussy where Liv excitedly licked it up.\n\nShe rolled onto her hands and knees and licked the splatters of cum from Maggie's ass eagerly and sloppily so that it dripped off her chin until most of it was gone. She collapsed onto the bed and started giggling uncontrollably. It spread quickly to Maggie who wasn't sure how to recline without getting cum all over the sheets- well more cum all over the sheets.\n\nMy ginger girlfriend and her tan sister giggled for several long minutes, Maggie eventually regaining her composure and climbing off the bed. She looked at me as she stood up.\n\n\"I'm going to take the world's latest second shower and sleep in my own, fluid-free bed. But um, thanks for wearing me out.\" She winked at me. \"Are we all playing again tomorrow?\"\n\nLiv shook her head, \"No, we won't have much unsupervised time, plus we have to leave pretty early.\"\n\nMaggie leaned over and gave me a soft kiss. \"I'm not waking up early to give you a goodbye fuck, but, I'm always free to have some fun.\" She hurried out of the room and tip-toed into the hall. What a disaster it would have been for her to be caught creeping down the hall caked in ejaculate.\n\nI laid down next to Liv on what might have been the only dry spot left on the bed. She ignored everything on the sheets and cuddled next to me, her face still sticky. She kissed me softly for several long minutes.\n\n\"I love you.\" She whispered quietly.\n\n\"I love you too.\" I said, picking hair off her sticky face.\n\n\"I can't wait to stud you for the rest of my life.\" She said with a faint smile.\n\n\"You are absolutely crazy.\"\n\nShe smirked, \"You love it.\"\n\n\"I absolutely do.\""
    ],
    "authorname": "DragonLairReads",
    "tags": [
        "ginger",
        "redhead",
        "cuckquean",
        "reverse cuckold",
        "creampie",
        "blonde",
        "toes",
        "incest",
        "threesome"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/my-crazy-girlfriend-pt-03"
}