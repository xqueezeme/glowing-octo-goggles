{
    "title": "That Girl and her Fairy Godmother",
    "pages": [
        "This is the second version because for some reason the first bit was reproduced half-way through in the original, sorry about that -- this should be it mind you...\n\nThis story started as a single concept and kind of got away from me, it's very long but that's the way it went.\n\nA large part of it is by way of a suggestion that I have often written stories and thrown in the Army, so for all of the Air Force Boys and Girls, this one's for you. I thought about calling it 'Per Ardua Ad Astra' not just because of the RAF content but it's also kind of what our heroine does...\n\nHere you go then.\n\nThe Poor start\n\nMy name is Tracy Oliver and I did sex. No two ways about that, in fact I was quite famous for it in my part of the world and there was a popular tale around the estate that if a bloke was really desperate for a fuck I was the girl.\n\nI came from one of 'those families'. You know the ones; both parents on their second, third and fourth marriage, lots of children from various boyfriends or husbands, or girlfriends or wives.\n\nMy parents had been on their second relationships and I was child number three although and only met one of them. \n\nI lived in various houses mostly with my Mum, the occasional week with my Dad and very occasionally grandparents. It was always busy, always noisy, and I rarely knew what it was to have an undisturbed night and I remember occasionally sharing a bed with a younger sister or brother. I grew up with one older sibling for a short while and a few younger. I rarely had much to do with my new step-dads, some good, some bad, none that memorable.\n\nI'm not convinced my bat-shit crazy Mum really thought about any of her children as little people, I think she had watched some ephemeral bollocks on a daytime TV programme that children were this essential glue that kept a loving relationship together, something she needed to 'make this marriage the one, the one that worked, the one that was forever'.\n\nSadly she always fell in love with THE most inappropriate wankers imaginable but because of her amazing immaturity and overactive love gland she thought they were the real thing. The only one she never married was my Dad and much as it sticks in my throat to say it, he was actually the best of the bunch and that relationship lasted two years. That was pretty standard time for her and when it finally went wrong big style she was five kids for five, although four was a cot death. At that time my Grandma came to stay for a few weeks until Mum fell out with her and she went home to her one bed flat.\n\nThat was when I started changing stinking nappies, doing laundry and shopping, because, as far as my Mum was concerned such things were optional. People said that I shouldn't, but if I didn't no one did. My abiding memory of that time was when I fell asleep in warm afternoon classes and the first letter was sent home. It was still in my book bag the next morning when I went back to school because I had forgotten to take it out being busy arranging our three lunch boxes for the next day and putting my sisters to bed.\n\nThe school phoned and Mum said that she would ensure I got to bed on time. Mum tore into me when I got home and asked what was going on and why I'd hidden the letter. I explained that I'd forgotten it, but Mum wanted to know why I wasn't going to bed on time. I told her and she hit me.\n\nI was sent to bed early with no supper but slept through. My lunch the next morning consisted of a packet of crisps, two slices of unbuttered bread and the scrunched-up juice box from the day before. I don't think it was her being mean, more her being incompetent.\n\nNext day it was empty as I had thrown the empty crisp packet and juice box away in school and so I just drank the water from the fountain. The dinner lady saw this and gave me and my sisters sandwiches and a cake and promised not to tell. I knew there was no point in telling Mum that she'd forgotten as she'd only come up with some shit excuse and I'd get another slap for my trouble.\n\nI got home and she was watching daytime TV again with new baby Connor howling and screaming in the kitchen. I went upstairs and tried to ignore it in the same way that Mum did. I couldn't.\n\nI came down, lifted my brother out of the pram he'd grown out of three or four months before and changed his heaving nappy and looked around for a clean sleepsuit that would still fit him. There wasn't one. That morning we'd worn our school uniforms for the third day as well.\n\nI found a whole mess of clothes that needed washing and took my sisters' school uniforms and loaded them in the washing machine just like Nanny had, separating the white shirts from the colours. I probably used too much powder and conditioner but two hours later and listening to Mum first shouting, then cooing, then shouting down the phone to one of her most recent ex, I emptied the machine and hung the clothes on radiators to dry for the morning. In the meantime, I made up our lunchboxes for the next day like I had done before. The day after the lunchboxes were a little light so I took Mum's card to school, drew out some cash (her PIN was written on the back) and shopped on the way home, all good so long as I didn't go mad.\n\nThe clothes were all dry and I folded them and put them into our rooms just like Grandma. I continued to do that for three and a half years.\n\nOn my twelfth birthday I got home with my sisters and Mum wasn't there. I guessed that she'd be home eventually as Connor and new Baby Tom weren't there. I made us all sandwiches for tea as we'd started to have free school dinners thanks to Grandma applying and not telling Mum. I was a bit upset that despite my sisters' excitement nothing was done for my birthday, but not really surprised. I doubt Mum had even thought about it.\n\nMum didn't come home so I put my sisters to bed, did my chores and waited. I woke up on the sofa at a little after three and still no sign of Mum so I went to bed, setting the old radio alarm. No sign the next morning so I did my thing and we walked to school like we normally did and I kept it all together, telling my two sisters that it was all fine, I did have to promise that we'd have my birthday party later.\n\nGrandma came around three days after with my card and present as she had been trying to call and speak to me, but mum had our only phone with her and wasn't taking calls. My two little sisters were getting more and more upset at Mum's continued absence and it showed. Eventually little Jeanie cried to Nanny that we couldn't have Tracy's birthday party until Mummy got home. Grandma asked why we hadn't had it before. My other sister Tess put her hand over Jeanie's mouth and Grandma tumbled that something was up.\n\n\"Where's your mother?\" said Grandma to me.\n\n\"Don't know...\" I said.\n\n\"When did you last see her?\" I tried so hard not to cry but eventually had to confess that I hadn't seen her since the day before my birthday. \"and you've been here on your own all that time?\"\n\n\"We've been to going to school and having baths an' hair washes Grandma,\" said Tessie, pointing at me, \"Tracy done every'fing!\"\n\nGrandma looked at me, smiled and shook her head,\n\n\"Your big sister is a genuine hero Tessa,\" she said reaching out and stroking my cheek and seeing that I was scared I would get into trouble, \"Don't you worry Tracy,\" she said, \"I'll stay over tonight and in the morning we'll see if we can't find your Mummy.\"\n\nShe walked all three of us to school and told the headteacher that her daughter was missing and she would be staying with Tracy, Tessa and Jean for a few days until Mum was found.\n\nConnor and Tom had been found in the toilets at the local Arndale Centre three days before and the police called. They went into emergency foster care and I never saw them again.\n\nI could never work out where she went for nine weeks, prison or the mental health unit, and while my younger sisters went into care, I was given the choice and moved back with my Dad who I would stay with for two or three weeks of the year.\n\nFrom Mummy's little helper to Estate Bitch.\n\nI was in no rush to go home to Mum; after all that shit I did still love her but as well as the work of being a twelve year old housewife, I was sick of the constant downer that Mum appeared to be on and the brooding tension, and her ability to make everything that went wrong in HER life MY fault, it was uncanny. She rarely hit me, probably no more than four or five times, but it was the blame game she played, that was only when she wasn't totally ignoring me and all her other children of course. \n\nSo I went from the 'walking on eggshells' blame culture of Mum to the comedic irreverence of Dad's place and the total lack of control.\n\nStep-mum Steph was attractive, curvy, always well dressed and made and had a busy social life that only occasionally involved Dad. She was often 'out' and thanks to the briefing her and Dad received from the social worker she knew that I was quite a domesticated little thing and would leave me notes asking if I could 'put a load of washing on' and just 'do that little bit of washing up in the sink'. This was made worse when I asked my Dad to help out and I was met with his usual 'yeah... yeah... yeah... I'll do it tomorrow... yeah' which became as infuriating as Mum's wobbly balance between vague indifference to manic control-freakery. As well as occasionally dirty clothes my three Oliver stepsisters were taking their terrible attitudes to school with them, and I became the unpopular one when I tried to impose some sense of order.\n\nMy eldest step-sister in this new house was Clarice, three years younger than me and developing sibling rivalry to an art form. Named after the character from 'Silence of the Lambs' she disliked me from the start and her hatred of me never lessened even though I occasionally cleaned her clothes and cooked her meals. She would throw clean clothes into the laundry to make more work and would throw her meals in the bin every now and again and make a big dramatic statement that she wouldn't feed food that bad to the 'effing dog - just to make a point.\n\nThe moment she took on the aspect of 'ugly sister' to my 'Cinderella' my willingness to help out with the housework dropped to almost nothing and I stayed in my room, not seeing Steph's little notes; if she left them on my bed I'd put my bag or my coat on them, even better put them in the bin and blame Clarice. \n\nWhen eventually challenged I said 'as soon as Clarice does a load of washing then I'll do one as well'. Steph wasn't that pleased but even Dad said it was fair enough. Steph began to ask how Mum was getting on and how I must be really keen to get back to her. I found out from Grandma that Mum had been telling the police and then the social services that everything was my fault, I was violent, aggressive and lazy, caused trouble with my stepdads and that I wasn't welcome back. I overheard Steph asking my Dad if I shouldn't be sent back to social services if I was that bad, Dad didn't seem overly worried so I waited, getting my daily 'why don't you fuck off back to your own family' from Clarice.\n\nI soon realised that my presence in either household was only regarded as optional.\n\nI needed a family to be part of, and at the age of fourteen I found one. \n\nJackson's Park Estate had a gang, a loose conglomeration of around forty to fifty twelve to eighteen year-olds; sometimes mates, sometimes not, they drank, the smoked (tobacco and weed), a few punch-ups but mostly threats and life went on; we were the Jackson's Park crew, the Boyz and the Bitches. My best mate at school Jodie Blackburn was one of the Bitches and asked me to meet her in the park that evening and that was that.\n\nThere was normally a car knocking around the estate that could be started with a screwdriver, if there wasn't then the Jackson's Park Boyz would steal one, and so I learned the basics of how to drive, not worried about the police over much because thanks to the new austerity cuts, there just weren't enough of them to worry about. We ran the place. \n\nAs the hormones arrived we started everything else and the clinic on the estate did a roaring trade in various forms of contraception, and while the pill would have been the best form of defence I knew Clarice or one of my other siblings would find and steal mine then hide or throw away 'for a laugh', so I was a condom girl.\n\nJust after my sixteenth birthday I got legal, and found if not love, then at least a Jackson's Park Estate version of it. Everyone 'did it'.\n\nThe end of that particular phase in my life came when I was a week shy of my eighteenth birthday and had been invited to a party and got quite pissed with my latest boyfriend, Tony. I say 'latest' because Crew relationships were a bit like that and boyfriends were a bit of a moveable feast. Tony and I had been boyfriend and girlfriend twice over and had broken up and it had been quite a feature on Facebook.\n\nBut we tried again (I had to because Tony was jealous and would threaten any bloke I was seen with) and after some very drunk dancing we headed out into the empty garden to cool off. Tony suggested with no real feeling that perhaps we should head into the darkness for a fuck.\n\nI agreed, after all it was just sex. We tried to walk innocently. Hopeless, for every one of the other party guests in view and shouting distance howled and crowed.\n\nI was wearing a tiny skirt and raised it and removed my tiny panties and lay back on the grass and let Tony do his thing. I had barely got into the process when he groaned his release and slumped across me. I pushed him off, grumbling about how quick it had all been -- but it was no surprise, he never had been a great lover and I reached over for my panties to pull on when he let our a loud snore having rolled drunkenly onto his back.\n\n\"Tony left you in the lurch Trace?\" said a voice. It was Paul, one of our core group and he was stood a few yards away with a bottle of wine, swigging straight from it without a glass, \"Want some?\" \n\nHe handed me the bottle and I closed my knees to hide my embarrassment, my spare hand feeling around for my string. I took the bottle and swigged from it, it seemed quite strong for wine but I drank it anyway because that's what we did after all. In the park, in the town centre, sat on one of the tall graves in the cemetery; we drank, we made noise, got pissed then pissed off whoever was stupid enough to come past us; fuck society, we were the crew.\n\n\"So,\" Paul sat down and took his wine bottle back to take a swig, \"you're looking pretty hot tonight I think Trace, Here...\" he said raising the bottle back to my lips, \"Have some more.\"\n\nI can only remember Paul chatting to me quite sweetly and insisting that I finished what was left of the 'wine'. He would take a swig from the bottle and hand it to me, encouraging me to take a long pull. He smiled at me and I was feeling good, and a little sexy. I did quite fancy Paul and had never even made out with him; he was very good looking and paying little ol' me some attention...\n\nI woke and felt that Tony had recovered and climbed back over me, or was it Paul? \n\nWhen I came to my senses it was to find out that it was neither of them. I looked up into the face of a guy I barely knew, however he was on top of me and in me, fucking away to his heart's content.\n\nIt was a friend of Tony's, not even a very close one, so I pushed him off me snarling, and he complained.\n\n\"Oh come on Trace, you let three other blokes fuck you, what's up with me?\"\n\nI can vaguely remember sitting up and feeling a soreness around my puss, my top was rolled up and bra pulled up exposing my tits. I looked around and saw that Tony was further down the garden, and Paul was nowhere to be seen. My head felt really woozy and I struggled to stand up. I held out my hand for the almost stranger, a boy I only knew as Michael, to help me up. He slapped my hand away and I guessed it was the ringing jeers around the garden that were upsetting my disappointed lover.\n\n\"Fuck you Tracy you fucking slag, don't know why I even wanted to give you one after three other blokes had been there first.\" \n\nThere were some loud woohoo's from the distant audience, which was probably why he struck out at me and I felt the ringing slap on my face.\n\nThe pain in cheek was one thing and it didn't make it any easier to get my head straight; THREE boys?\n\nWhat?\n\nI looked around for panties and couldn't find them so stood as best as I could and pulled down and straightened my tiny skirt, automatically feeling for my bag which was still over my shoulder, the reassuring weight of my phone pressing against me. I staggered out of the garden and down a side passage and out on to the street. I had no idea of the time but the few cars driving around, mostly taxis made me think that it must be well after midnight. I got to the street corner and felt the world spin violently and before I knew it I was vomiting out whatever crap had been in the wine bottle, then everything else.\n\nA passing car added to my misery as its passengers whooped at the display of my bottom and everything else as I bent forward, puking into someone's front garden. I stood again, felt partially better and restarted my plodding trek home -- wholly on autopilot.\n\nI got home and found the place in darkness thankfully, and let myself in, made it to bed and collapsed on it still dressed, pulling the duvet up and over me.\n\nMy raging thirst woke me the next morning, and the throbbing of my hung-over head did little to help. Neither did my cow of a stepsister Clarice. While not strictly a Jackson's Park Bitch, she was working up to it and this seemed a perfect opportunity for her to rise in the ranks a bit.\n\n\"Fucking hell Trace, Facebook is buzzing with what you got up to last night!\"\n\n\"What?\" I tried to just focus on Clarice, not the smartphone she was pushing into my face.\n\n\"At Jaynie's party last night, everyone's talking about you. Paul Younger has a photo up of him and Danny Graysmill holding up that blue string of yours, look...\"\n\nEvidently Clarice was enjoying this, I'd never seen my chubby half-sibling this animated before, \n\nI looked and there it was,\n\n\"Fuck brother!\" the screen announced, \"me and DANNY after sorting out party girl TRACY OLIVER just after TONY. MICKY got bunned off halfway through!\" There I was in the background, comatose in the garden and virtually naked. I was to find out later that these pictures were emailed around the estate for weeks afterwards.\n\nThere was a virtual blog on how he had told his mates his plan and in the kitchen emptied a third of a litre of vodka into an empty Lambrini bottle, topped it up with lemonade and Apple juice and how I took very little encouragement to drink it. This was followed by some male comments on 'how much I liked it' and that they should have contacted all the Boyz to share that particular Friday night bounty - me.\n\nI pushed her out of the way and went to the bathroom. While I was in there she joined in the fun and posted pictures of me out cold on my bed.\n\nI've never forgotten that awful, miserable feeling sat in the Saturday morning health centre waiting room thinking that everyone would have seen Paul's Facebook page and I made eye contact with no one, until I was eventually called forward and into the treatment room. I looked at the nurse waiting for her judgemental stare.\n\n\"OK Miss Oliver, what can I do for you today?\"\n\n\"I think I need a morning after pill.\"\n\n\"OK,\" said the nurse with a smile, \"Can I ask when intercourse took place?\"\n\n\"Last night,\" I spluttered.\n\n\"OK,\" said the nurse looking a little concerned, \"Miss Oliver... can I call you Tracy?\" I nodded, \"I get the feeling that something is bothering you... please don't feel you have to answer this...\" the nurse took a deep breath, \"was the intercourse consensual?\"",
        "\"Pardon?\"\n\n\"Did you want to have sex or were your forced into it?\"\n\nHer kindness was too much I finally burst into tears and the misery of the moment hit me square in the face. I just stared down into my lap in shame.\n\n\"I was at a party,\" I managed to burst out between sobs, \"given spiked wine, passed out and three blokes shagged me...\" I broke down again, \"Pretty sure they didn't use condoms.\" \n\nConscious that I couldn't talk but the Facebook pages told everything I opened my phone and handed it to the nurse. The nurse's fingers flew across the screen and she looked cross and shook her head.\n\n\"Bastards...\" she said, \"Right Tracy, we don't know if they used condoms, so you'll need more than a morning after pill I'm afraid...\"\n\nThe nurse took swabs, cleaned me up and another took a blood test. While I lay on the bed holding gauze to my arm another lady came in.\n\n\"Tracy, this is my very good friend Claire, she's from the Rape and Domestic Violence team, I'm just going to leave you with her for a few moments while I label up all of these swabs.\"\n\nWhat I didn't know was that Claire wasn't a nurse, but a specially trained police officer and pretty soon she was taking screenshots of the gloating boys bragging about their sexual conquest over a comatose girl one of them had effectively drugged, then a 'report' from me.\n\nPaul's writings were of particular interest to her, especially when he laid out his M.O. in writing, disguising the vodka in the wine bottle and his recipe. Then how he had encouraged his already vulnerable victim, me, to drink it while he just pretended to, he even complained about 'that fat bitch' having pulled my drunken form further up the garden and away from my snoring nasty boyfriend.\n\nWith well-off parents he was always well dressed, always quite well spoken and the hottest boy in the crew, all the Bitches fancied him. Paul had no previous - unlike most of his mates - and was only known to the Police because of what the people he hung around with had done rather than him, and was always stood at the back when the shit hit the fan. The police had him on file for his ability to suggest what his more inebriated friends should do rather than doing it himself. Paul was the boy the lit the firework then stood well back; very very VERY well back.\n\nNot this time, he'd proudly told the world of Facebook his extreme cleverness tagging his best friends Danny and Micky and they too had joined in and boasted of it and it was such a great laugh. But by glorying in his brilliance then sleeping late Paul Younger had pretty much written his own page in the sex offenders register, with a page for his mates.\n\nHe didn't go in there of course and was released to the care of his parents in tears with a warning and told by the really pissed off Detective and furious Chief Inspector that if it wasn't for the subsequent withdrawal of my statement, his obvious premeditation would have gotten him into that life-restricting tome with a criminal record for rape along with his friends Danny and Micky C. His parents, who had always insisted what a good boy he was and argued with any policeman who suggested differently, were shown the screen shots and photos and were fuming at him and the shame he'd brought to them. \n\nHis Dad was the archetypal poor boy made good and ran his own building firm that Paul was being lined up to take over, but now the whole estate knew that his Gucci model citizen, golf-playing son was a scheming rapist and part of the hated Jackson's Park Boyz, and he worried about the effect this might have on his business, his golf club membership and whether he would still get into the freemasonry.\n\nEven though I'd been the victim, I was the one castigated by the community. I had withdrawn my statement hours after I was told that the three had been arrested because I knew that the Boyz would have their revenge on me if I didn't.\n\nEven my 'boyfriend' Tony joined in with the character assassination, angry that I'd 'allowed them other three toerags to fuck me when I woz pissed', which was the pot calling the kettle black. His anger at me was increased by the blame some of the older girls had thrown at him; if he hadn't been such a pissed lightweight none of this would have happened.\n\nProbably.\n\nThis was then followed by the most shaming quote, the one that really let me know what people thought of me, \"well everyone knows what Tracy Oliver is like...\" \n\nNext was 'Tracy Oliver, slut of the year' with a photo of Danny's arse as he shagged me, posted by Jodie my so-called best mate, which an hour later she tried to soften with an added 'LOL Bae' after I unfriended her. She was no stranger to recreational sex with occasional lovers herself but obviously saw a chance to throw stones in the glass house with minimal damage to herself.\n\nThe final straw was step-mum Steph laughing about it following Clarice's gleeful report of the overnight graffiti on the front garden wall saying 'T.O. is a grassin' slut', with large 'JPBz' tag to let the world know just who'd sprayed it there. \n\nMy Dad promised to paint it out; even he'd had a grin on his unshaven face. It was eventually painted out by a shamefaced Paul with his Dad stood over him a fortnight later.\n\nMy Mum rang me a couple of days after and shouted down the phone that I'd brought shame on her. Yeah right, she was an expert on sleeping around after all. At my lowest ebb, I went to the one place I knew I could get guilt-free solace and physical protection -- off of Jackson's Park Estate and straight to my Grandma's. She knew everything but said nothing, offering what I need most, a place to sleep and non-judgemental understanding. My had journey begun.\n\nFrom Zero to Hero.\n\nUnable to sleep, I was sat on Grandma's sofa and had been on my phone idly searching on the internet at something like three in the morning and followed the link to the place that she had gone with friends for a long weekend a few weeks before. As I flicked through with no real interest, the page changed and I saw that there were jobs for full-time seasonal staff at the centre, and because it was in the middle of nowhere had a small amount of on-site staff accommodation and I applied as the advert went live.\n\nSix hours later I was interviewed over the phone and gave my experience in child care, even admitting it was because my parents hadn't been that good at it, and was told to present myself at the site that Sunday for a month-long trial period. The interviewer said that because I would be working with children they would need to do a DBS check, but I knew that while my name had been taken a few times I had no criminal record, the detective had told me that there was nothing on file about me not a week before. I gave references of my last ever schoolteacher Mrs Joseph who had been my tutor and had been there when I was looking after Mum's children and knew me well.\n\nI told Dad what I was doing by text message and he replied with a smiley face, I knew that he would be impressed with one less mouth to feed and a spare bed, less impressed when I cancelled my standing order and stopped paying him for my bed and board. I didn't bother telling Mum, I doubted for a second she would even have replied.\n\nI went home during the morning and luckily everyone was out, it was a school and work day; I packed all of my clothes and possessions into a huge 'Sports Direct' zipped bag I found under the stairs, I didn't have much but I knew anything I left would be nicked, given away or car-booted. \n\nOn that Sunday morning I started my journey by walking to the railway station with a packed lunch and a hug from Grandma, spending the last of my money on the ticket. I had nothing left but a tiny overdraft facility and hoped that the food and accommodation the job came with started that day. \n\nWith no money for a bus let alone a taxi I walked from the station along roads bounded by fields and trees (not something that Jackson's Park estate was big on) for almost two hours and using the satnav found the place, hoping desperately that my phone charge would last until I got there. \n\nFortunately it did -- just - and the duty manager was very pleased to meet me and impressed when I said that I'd actually walked from the station.\n\n\"That's four and half miles!\" she said, taking my bag off me and taking me to the kitchen for a very welcome cup of tea. She showed me to my room, which although it was quite small it was just mine and for the first time in years I wouldn't have anyone walking in, or worse going to bed and finding someone there before me; AND it had a lock so none of my stuff would go missing.\n\nI didn't unpack until the duty manager had left, and she promised that she'd come back after dinner and take me to get my ID badge arranged and sort out my uniform.\n\n\"Uniform?\"\n\n\"Oh yeah,\" said the duty manager, \"corporate clothing lovely,\" she brushed her hand down the very smart looking light green smock that looked just like the nurses wore in the clinic where I'd gone after that horror night. \n\nI felt rather good about that. The only uniform I'd worn before had been from Burger King during the summer when I first left school, and this looked way smarter.\n\nI went to the staff canteen at a little after seven thirty once the residents and their visitors had eaten. I sat down to eat with lots of other staff members all wearing the smart looking uniforms and they were all very welcoming. The food was great and properly prepared, and a thousand miles from the processed garbage I ate at home - there was even a pudding.\n\nI headed to the office and the manager took my photograph and in moments it was printed onto a card, slid into a holder and attached to a lanyard and looped around my neck. Next it was into a large storeroom and she asked my size. I was chunky size 16, with a 38C bust and she handed me three smocks, three pairs of very smart trousers, one thermal waistcoat.\n\n\"I shouldn't do this yet Tracy but I've got a good feeling, here.\" She handed me a raincoat with a removable fleece liner, and finally shoes. This was the largest amount of new clothing I'd ever had.\n\nShe took me back to my room and showed me where the laundry was and the ironing board. I asked questions about detergents and tumble-drying and the manager grinned and said she was impressed that I knew such things as many of my contemporaries had to be shown. All of uniform needed to be ironed smartly and I was very pleased to report that being the eldest child I was very good with an iron. The now happy manager explained that while female staff were encouraged to wear make-up, it need to be smart and tasteful.\n\nI didn't have a lot of make-up and wouldn't be buying any until after pay day and she said she was sure that would be fine and showing me back to my room wished me a good night. I plugged in and logged my phone into the staff Wi-Fi and almost looked at Facebook, but then remembered that I'd closed my account and removed that App from my phone two nights before, swearing that I was going to turn my life around and that Tracy Oliver would have a minimal presence on the internet.\n\nI appeared for breakfast the next morning bright and earlier than needed feeling really smart in that first set of all new clothes, everyone around me was wearing the same or much like it and I'd gone with a light face powdering, eye make-up and lipstick. \n\nWhen greeted by three of the other girls I was happy that my accent wasn't so far from theirs and felt that this might be OK.\n\nI found that I was one of three new starters that day and we were all with the Duty Manager again and filling in more paperwork, undertaking some very basic training around food hygiene, essential first aid and the ethos of the company and the rather tortuous shift pattern.\n\nI had a great first day, which became a great second day that stretched into a great first week of learning the ropes and the routines. I had my first day off the following Sunday and took the bus into the sleepy holiday town; it was at least seventy miles and one hundred years different to the war zone I'd come from. I even had some money in my pocket courtesy of some tips I'd received and with two of the girls wandered into the coffee shop and had my very first latte; I'd probably drunk more wine than both of them put together many times over mind you. \n\nWe sat there and just chatted, and I was amazed the discussion wasn't centred around who was sleeping with who, what parties were going on and long discussions about clothes that no one could afford, and no one offering anyone first dibs on some recently stolen property.\n\nI'd gone with jeans and a T-shirt leaving my usual leggings and boob tube at the bottom of my wardrobe still in the 'Sports Direct' bag. The next week was more of the same and I found myself working with families with young children and virtually running the cr\u00e8che, the other girls happy to let me.\n\nI'd been looking after young children, even changing crappy nappies, for years so it came easily and I actually enjoyed it, saying a bit of a sad farewell each Friday afternoon to some of the kiddies I'd grown to really love working with.\n\nThe weeks flew by and I was called in to speak to the Human Resources manager without even realising it was the day I would be told how I'd got on and whether I still had a job.\n\n\"Tracy!\" said the HR manager, \"My name is Carol, how are you doing?\"\n\n\"Really well thank you!\" I replied, when it suddenly hit me what I was there for and it must have shown.\n\n\"I'll put you out of your misery Tracy,\" said the boss, \"You've passed your probationary month with flying colours, Your manager told me two weeks ago that you are such a natural with the kiddies, here,\" said Carol handing over some printed sheets, \"customer feedback...\"\n\nI read through each form, reading down each page until I reached the 'staff who have worked particularly well' section.\n\nAnd there it was, 'Tracy', 'Tracy O', 'that really nice brown-haired girl with the big smile', then the final one 'Tracy the lifesaver'. Each of the fifteen or so pages listing how great I had been with their children, the last 'lifesaver' one explaining that in the two weeks that their son had been spending mornings or afternoons in the cr\u00e8che, miracle worker Tracy had virtually potty-trained their previously wilful son who now only wore nappies to bed. I smiled when I read that one.\n\nLittle Jasper was quite a handful but then I guessed that I was the first person ever to say 'no' to the little fellow and set anything like ground rules. By the end of his first week he was saying 'please' and 'thank you' and the little lovely called me 'T'acey.\n\nI'd learned from my growing up how to deal with difficult small children, and these little holidaying cuties weren't even close to the sunset-yellow-colouring, blue-smartie devouring, hyperactive, ADHD'd hooligans I'd looked after before. \n\nBabysitting a bunch of reasonably good kids from nice families for eight hours a day was a walk in the fucking park; the fact I got housed, clothed and fed would almost have been enough, but the real icing on the cake was the I actually got paid for it.\n\nCarol the HR Manager smiled at my slightly misty-eyed look and took the forms back sliding them into the file with my name on.\n\n\"We've paid your wages into your new bank account and here's your contract of employment, sign here.\"\n\nI signed, looked at my payslip and saw for the first time just how much money I had in my account. After food and accommodation was taken out it was it was tiny, but to me it was a fortune, almost, plus I'd only spent the money I had from tips so far. Most importantly I'd made some good friends and while I had been waiting for the bitching, complaining and inevitable falling out that had been part and parcel of my previous friendships, that never happened here. \n\nThis job was worlds apart from my previous life and I revelled in it, spending the summer playing with and looking after really nice children that never swore at me or hit me, then in my downtime hanging out with nice people in the nicest way. \n\nI worked my arse off all summer, with the inevitable turn around as the school holidays ended. To my delight I was asked if I wanted to stay on working at the centre throughout the winter and said that I certainly did. The only change would be that the age range would change and the cr\u00e8che would close to be replaced by older people who all but took over in the winter months.\n\nThis was still no problem and while I missed my summer babies, toddlers and kiddies the options for tips were greater. I loved working with the pensioners just as much and they all seemed to treat me like I was a grandchild and tried to look after me! \n\nAfter a few weeks working the autumn holiday park I was greeted at the staff room by Carol the HR manager again, this time looking flustered.\n\n\"Hi Tracy!\" she said in her usual ebullient fashion, \"tell me sweetheart, did you have the 'flu vaccination earlier this year?\" The company had brought in a local pharmacist on a special rate and almost the entire staff stood in line for the injection.\n\n\"Yes,\" I said, wondering what that might have to do with anything.\n\n\"Sweetie, I have a real need for a staff member to go and work at our other centre a few miles away on the Sussex Coast. The 'flu has hit the place like a steam roller and I barely have enough staff to keep it operational, would you go there for me... PLEASE?!\" Carol whined.\n\n\"Sure,\" I said. I'd quickly worked at that this management team really liked keen people that were willing to help out and my options to stay employed with the company wouldn't be damaged by my agreeing.\n\n\"Oh Sweetie thank you, go and pack a bag and I'll run you over there.\"\n\n\"A bag?\"\n\n\"Yes,\" said Carol, \"You'll have to stay there for at least a week.\"\n\n\"I'll pack my bag.\" I ran up to her room and took everything, and in less than an hour was being shown around the other centre by a girl a bit older than me with a red nose, and a throaty, croaky voice and only too happy to give me her bunch of keys and run to her bedroom and lay down and prepare for imminent death, or slow recovery. I was sat in front of a laptop and did a first aid on-line refresher.\n\nI will confess that I threw myself into the work and pretty soon was being all things to all people at the centre. These ones were far from the week or fortnight package deal holidaymakers at the park, these were older, more genteel and semi-residential and in the ensuite, ala carte place for two or three months, sometimes longer, with a wing set aside for those recovering from injuries or surgery.\n\nOn my third day I'd started to flag from covering at least three jobs and found myself with a mug of tea sat in the cloisters, long passageways with seating against the huge windows looking out toward the coast with the dark blue of the channel beyond. The black clouds brooded across the skyline and the few trees already laid north-bound by the prevailing off-shore winds started to bounce around as the storm hit them. It was quiet behind the excellent double glazing though, the setting was really nice and I sipped my tea, happy to be inside on a day like this.\n\nI was feeling a bit down and had arrived at absolutely the wrong time; this was the week that the last of the summer students that had arrived a few weeks after me were all going back to their Universities.\n\nThere was Greg the English literature student, the hot looking boy two years older than me with the sexy hair that looked like he'd just rolled out of bed, the sharp eyebrows he MUST have shaped and the peaky perky mouth in that almost-smile he habitually wore. We had been chatting quite nicely and not flirtatious in any way even though I had the most horrendous crush on him. \n\nSince THAT party my self-confidence had taken the worst knock and even I wasn't sure how to talk to a guy as nice and as posh as him, well posher than any of my previous boyfriends had been at least; but there was always that thing in the back of my mind, my shame, that distrust of boys, that thought that anyone giving me a drink might end up...",
        "urrrgh...\n\nI asked if it would be possible to get back to the holiday park for an hour to say goodbye to all the great people I'd worked with over the summer, but sadly there was no one that could stand in for me and then it would take at least three buses to get back there. Denied the power of Facebook, I sent text messages to four of them asking that they relay my love to all the undergraduates heading back to their various universities. \n\nThis was done and many of them sent messages back asking that we stay in touch. I thought about all of those clever people and how this was just a summer job to them while I would probably do this kind of thing for the rest of my life; wouldn't be so bad. \n\nI knew that I would miss their clever conversation, their smart humour, the new things they had introduced me to. The BBC comedies on iPlayer, the American comedies on Netflix and Prime while they scorned the soaps and reality TV that were required viewing among the Bitches. I was very conscious that my horrible lazy London accent was receding, and I was sounding so much more like them and the guests around me even.\n\nThe window rattled as Storm Albert smacked into the Kent coastline, making me feel just a bit lonelier. I finished my tea and walked towards the kitchen to put away the mug before undertaking my hourly check of the various sitting rooms before dinner was served.\n\nI walked into the large room to find Andrea, a very sweet but occasionally overly dramatic old darling complaining of severe chest pains and it really didn't look like she was acting this time.\n\n\"Sit down for me Andrea,\" I said, silencing the woman and giving her the first aid 'once over' I'd been taught on the one-day course early that summer. I saw all the signs that the old lady was having or at least about to have a heart attack and pressed the panic button on my belt radio. It bleeped as I went over what they'd taught me again; chest pain, shortness of breath, dizziness, and Andrea looked really scared.\n\n\"Wassup Trace?\" came to voice of the receptionist Gill.\n\nMy training all came back to me and I responded using the shorthand that I knew wouldn't panic Andrea or her friends sat around her.\n\n\"Possible AMI in West Lounge,\" I said with a positive lift in my voice, \"I'll need the AED Gill?\"\n\nIn English that was an 'acute myocardial infarction' and I needed the 'automatic electronic defibrillator'.\n\n\"I'm on my way Trace, I'll call it in.\"\n\nBy the time Gill arrived Andrea was lying on her back unconscious and with her blouse open as I had gone into proper first aid mode, the cracking of her ribs as I started chest compressions far worse than the teacher had described them. Gill tore open the cover of the lifesaving machine and I followed its instructions and the basic training I'd had. The paddles were attached, and I continued the CPR then once instructed by the calm, quiet, electronic mid-Atlantic voice pressed the 'shock' button and watched as Andrea almost bounced as the electricity coursed through her.\n\nAnother two members of staff had arrived, and wheeled screens were put around us as the loud, scary but equally comforting siren wail of the paramedic two-tones turned into the drive and parked outside.\n\nThe medics prepared to take over, keeping Gill and I at our posts until their much cleverer machines were attached to Andrea, who seemed to be coming back from wherever she might have gone.\n\n\"Well done Sweetie,\" said the first paramedic, a girl that looked only a few years older than me wearing a tight green leather motorbike suit that seemed to both announce her profession and her femininity.\n\n\"Thank you,\" I said as the second crew arrived and took over.\n\n\"Tell me what happened Sweetie,\" said the biker. I explained what I'd seen, what I'd done and the responses from the now barely conscious and confused Andrea. \"Sit down Tracy,\" said the paramedic taking me to one side happy that our joint patient was being cared for and the wheelie stretcher prepared for her rapid move to A&E, to Accident and Emergency.\n\nThe paramedic had her notepad out and was talking when the centre manager arrived looking flushed and slightly panicked still in the clothes she had worn in the on-site gym.\n\n\"You the boss?\" said the paramedic with a big smile. The manager smiled back and nodded, \"excellent, you might want to consider a bit of a bonus for young Tracy here,\" the paramedic grinned and nodded at me now sat on the sofa where the patient had been, \"she has literally brought Andrea back from the dead,\" she put a hand on my shoulder, \"yes sweetie, Andrea has a bit of a long road to recovery but if you hadn't done what you did, she'd be leaving here in altogether different circumstances. Well done!\" She beamed a grin at me and gave my shoulder a bit of a shake.\n\n\"Well done Tracy!\" said the centre manager stepping across to stand next to me.\n\nI felt slightly lightheaded now as the import of what had just been said hit me.\n\nThe manager sat next to me and put an arm around me,\n\n\"S'alright honey,\" said the paramedic biker, \"Take a deep breath...\"\n\nI was the hero for the rest of that week, and everywhere I went I was congratulated by staff and client alike. OK, I didn't get a bonus like the paramedic had suggested but I was sent on a proper first aid course for which I received one of those upside down nurse's watches that clipped to my shirt.\n\nThe watch was the coolest bit, cooler even than the extra \u00a328 a month I got for being first aid trained, and I wore it with way more pride than the new badge holder that announced I was a 'qualified first aider'.\n\nAndrea's daughter came to the centre a week later and asked to see me, taking me in her arms and hugging me and weeping quietly into my shoulder until her husband lifted her away and handed over the flowers and chocolates they had brought with them. I put the flowers in the staff room and shared the chocolates with the staff and my lovely oldies.\n\nPA to Mrs D.\n\nAs the the autumn leaves began to fall in earnest, I was called into the office on a crisp, bright but very cold morning.\n\n\"Ah Tracy,\" said Carol the HR manager with a smile, \"I've got a very special job for you...\"\n\n\"Special?\"\n\n\"Special, Tracy you are one of the most natural carers I've ever met. You work the hardest and often above your pay grade and over your time, you don't grumble like the other girls, you get up to your eyeballs in the worst of it without a word and everyone loves you for it; I have a very special job with a very special guest and I know you'll do brilliantly.\"\n\nAnd so I was introduced to Mrs Dorothy Dixon, the 95 year-old lady famed throughout the centre as being the nicest, friendliest and most canny of any of our regular visitors. She was revered not only as the lovely Mrs D but also as the World War Two veteran of the Women's Auxiliary Air Force that had served at a fighter station just down the road, through the Battle of Britain and throughout the war, and I was going to be her new personal care assistant while she stayed with us.\n\nI was introduced to her by Carol the HR Manager as 'Our lovely Tracy' and as soon as she extended a hand, looked me up and down and smiled I just knew that we were going to get along.\n\nI was originally tasked with being there first thing in the morning and to help her dress but she was far too fit and independent for any of that nonsense. Instead I would bring her breakfast, depending on what she had ordered the night before. Then it would be out for a mid-morning walk along the coast arm in arm, the idea of a wheelchair abhorrent to this fiercely healthy lady, lunch out, then dinner in her room if she preferred it to dining with the other guests in the restaurant. If she did choose the restaurant I had to join her -- OK, the staff canteen wasn't bad but nothing like the expensive and extensive cordon bleu that the 'special' residents had. The other bonus was a corporate mobile phone and a corporate credit card because Mrs Dixon liked to travel, and I would need to accompany her. We went everywhere along the southeast coast and even though she was in her nineties I'm sure that I flagged before she did most times.\n\nThen it was seeing her to her bed, although more often we just sat and chatted into the night, with a few sips of her special port and a final 'night-night Mrs D' and a wave of my fingers. My eight-hour days had disappeared and while I was on a special rate, I would have spent my spare time talking to Mrs D anyway. By the end of the first week the wave of the fingers had a kiss on the cheek added, totally by accident on my part as I was a bit sleepy and so very comfortable with her and although it was bound to be against company policy it became the norm.\n\nMrs Dixon had the same kind of feisty personality that my late Great-Grandma had, a sharp responsive and intelligent woman that would growl at anyone who dared to talk to her like she was a geriatric idiot without full control of her marbles. Great-Gran had been one of my all-time favourites and I was heart-broken when she died and I soon I was enjoying that self-same relationship\n\nI just loved Mrs D's honesty and her stream of advice while she loved what she called my maturity, honesty and hard-work ethic, and in hindsight my evident need for that older mature advice giver.\n\nWe could talk to each other about anything, from clothing to relationship advice and we did - for HOURS. In to our second week Mrs Dixon got cross as a waitress instantly started talking 'to' me and 'down' to her in that awful 'does she take sugar' voice because she was obviously out with me, the uniformed carer.\n\n\"Perhaps next time you can wear 'civvies'?\" she said after the waitress had backed away, duly educated in customer care by Mrs D.\n\n\"Civvies?\"\n\n\"Civilian clothes Darling, I'll talk to the centre manager about it.\"\n\n\"I'm not sure that I have anything smart enough to wear out with you Mrs D.\"\n\n\"What kind of clothes do you have?\"\n\n\"Oh,\" I said, \"Just the usual, leggings, skinny jeans, and some tops; it's all a bit old and a bit scruffy.\" I mainly had jeans and sports clothing that I wouldn't have been seen dead in around this place, and didn't hint at the rest -- slutty stuff that held too many bad memories and I was too embarrassed to mention let alone wear; what the crew called 'pulling gear'. I certainly never wore it out with colleagues from the holiday centre and realised that I'd only worn my uniform, jeans or grey sweatshirt and matching pants for the six months I had been there.\n\nMrs Dixon looked at me and came to a decision.\n\n\"Well!\" she said, \"Let's get you something that you would be happy to wear out with me then.\"\n\n\"But...\"\n\n\"Don't worry about it Tracy Darling, my treat.\"\n\nWe finished our coffee and walked along the reasonably well appointed town centre and the kind of ladies clothes shops that I would never have been thrown out of a year before; I wasn't convinced that I could have afforded much more than a few pairs of tights from a place like that.\n\nI stood there with Mrs D feeling like Julia Roberts 'Pretty Woman' on Rodeo Drive and convinced I'd be asked to wait outside while the older lady shopped.\n\nMrs Dixon was approached by a sales assistant and she instantly pointed to me and even more of that film came up.\n\n\"I'm after a couple of daytime outfits that are as beautiful as my good friend Tracy here. Tracy Darling, what size are you?\"\n\n\"I'm a sixteen,\" I said.\n\nThe salesgirl shook her head; shit! she'd straight through me; she was bound to call the police. 'Young girl cons old lady into buying her clothes', job and good name gone, have to go back home to that...\n\n\"Not sure about that Miss,\" she said looking me up and down, \"You might wear a 16 but to be honest you look like a twelve.\"\n\nOK, my uniform was rather baggy now, but still.\n\nShe wandered off around the shop and returned with a collection of clothes, all with those square size markers around the hooks - 12.\n\nMy diet at home had been terrible, we lived off of processed food and fast food and seeing as I took no exercise I'd had quite a considerable belly on me and an arse to match when I arrived.\n\nThe Assistant handed over black slacks and something I hadn't had since I'd left school, a blouse.\n\nI took the clothes and went into the changing room and put them on. The trousers fitted quite nicely and even that self-deprecating housing estate girl in my subconscious had to look with some pride at the arse that had shaped up with my regular free gym and pool use and was shown off so nicely by the tight black cotton. I pulled on a very simple but well-tailored cotton blouse in a mid-green and stepped out into the shop feeling great and Mrs Dixon beamed.\n\n\"THAT'S better!\" she said and I couldn't hold back a smile of satisfaction. I noticed that the shop assistant held up a pack of string panties that she put on the counter mouthing the word 'line' to me with a cheeky grin. \"And look at that smile!\" said Mrs Dixon, \"that was worth every penny! Here,\" she reached around my neck and as I looked down it was to see a string of white pearls around my neck and under my collar. While she was there, she also undid a button! \"Only plastic costume jewellery Darling but really sets the whole thing off.\"\n\nThat was followed by another shorter skirt, more blouses, a cardigan, black plain slip on shoes and the same with a bit of a heel and my favourite purchase ever, a tan raincoat that the assistant didn't do up but pulled around me then tied off with the belt. I put my hands in my pockets and it looked so fucking cool and sexy I almost wanted it to rain. It wasn't until I got back to my room and checked I found it was an honest-to-God Burberry! That one item had probably cost more than my entire wardrobe for the last ten years!\n\nThere were several more shopping trips to follow, which included not only the make-up that would match my new clothes but advice from the ladies in the shop on how I should best apply it, followed by a little more from Mrs Dixon.\n\nOn Remembrance Sunday we taxied to the small village we drank our coffee in and I dressed in my new Sunday best, all finished off with my raincoat and the matching scarf I'd bought from Amazon.\n\nAs we stood at the small war memorial Mrs Dixon opened her handbag and brought out a row of very old looking but very shiny circular and star shaped medals that she pinned through the black wool coat she had on. \n\nAs the young Air Cadet in blue said the words 'they shall not grow old as we that are left grow old' I saw the first of my new friend's tears and Mrs D's wartime service she had talked about became very real - as real as the names listed on the memorial to the Airmen and women that she had actually known that had been killed serving at a fighter station not a mile from there.\n\nIn that moment of understanding I stepped closer and took Mrs Dixon's arm and stood straight. It didn't stop Mrs Dixon's occasional tear but she stood her ground taller than before and for the whole two minutes silence.\n\nAfter the small parade where Mrs Dixon had her hand shaken by many of the much younger veterans who recognised her medals, especially the three campaign medals, we both retired to our usual, almost empty, coffee shop. Mrs Dixon talked more of when she had been here during the war, and when she returned years later with her late husband.\n\nIt was getting very emotional and Mrs Dixon shook herself out of it,\n\n\"So, is there anyone on your radar Darling?\"\n\n\"Oh no Mrs D,\" I said with an embarrassed shrug.\n\n\"No one?\"\n\n\"Not since the summer,\" I said sipping my latte, \"There was a really nice boy working at the holiday park, guy called Greg,\" I will confess that I gave a bit of a shy giggle.\n\n\"And I trust you two didn't get up to anything?!\" she laughed letting me know she wasn't serious.\n\n\"Nothing at all Mrs D!\" I said, \"Well, he never asked me and I... err... I never got around to asking him.\"\n\n\"Life's too short Darling Girl,\" said Mrs Dixon patting my hand, \"you should ALWAYS be ready to jump in when you need to!\" the old Lady stared off into space, \"spit it out girl! That's what my old WAAF instructor used to say.\"\n\n\"Oh, I wasn't in his league Mrs D, he's a university student and I'm just...\"\n\n\"Codswallop!\" she snapped back, \"he'd be lucky to date a gorgeous girl like you!\" she leaned forward, \"he was probably just as nervous as you and thought that he wasn't in YOUR league!\" she sipped her coffee, \"as a very wise man once said, you should always chat to the most beautiful girl in the room, because she's probably the loneliest.\" She took my hand and squeezed it, \"jump in Darling girl!\"\n\nI took a deep breath, the last time I 'jumped in' I was the laughingstock of an entire community for a week, that I had since cut myself off from. \n\n\"I... err... have a bit of a bad record with 'jumping in' Mrs D.\" The old lady gave me an inquisitorial look that I was never able to resist, \"Well I... well...\" Mrs Dixon raised her eyebrows and pursed her lips and I gave up, broke eye contact and told it all, including the visit to the contraception and STD clinic, the three arrests, the ridicule even from friends and family, finally the threats written on almost every wall I looked at; I never mentioned my shame which while unspoken was obviously quite evident.\n\nBy the time I'd finished I could feel the odd tear run down my face. The look on Mrs Dixon's face was horrified, and I was worried that I had ruined any kind of respect that the lady might have had for me.\n\nThis made my bottom lip wobble and I fought to control it, just as the old lady sprung to her feet with a speed and energy I didn't know she had. Far from storming out or smacking my face Mrs Dixon was arms around me and hugging me.\n\n\"Tracy,\" she said drying my eyes with a napkin, \"for Christ's sake sweetheart!\"\n\nI looked up at her then dropped my eyes with the special kind of shame that only I could endow it with. I gave a most unconvincing chuckle, even resorting to the estuary English I had grown out of,\n\n\"But it don't matter Mrs D, it was just a few shags, me and my boyfriend weren't in love or anything...\" \n\nI all but broke down at the end mind you, and Mrs Dixon hugged me through the last few shamed shoulder heaves before resuming her seat,\n\n\"It bloody does matter honey,\" the lady leaned forward and gently took my hand, \"they got you drunk and then raped you!\"\n\n\"Yeah, but it was just sex...\" I said, \"and I must admit that I wasn't a stranger to it, I had a bit of a name as an easy girl.\" I tried to smile and joke my way out of Mrs Dixon's supportive look I didn't feel I was entitled to, \"I liked to make love,\" I said still with dropped eyes not brave enough to make contact with those watching me now with compassion.\n\n\"Love and sex are two different things Darling,\" she said gently patting my hand now resting in hers, \"I think the trouble is you've never differentiated between the two.\" The lady leaned back in her chair and waved to the waitress indicating that we'd like two more lattes, then leaned forward conspiratorially, \"No Tracy, I think you thought people would like you more if you 'had sex'...\" she said with a gentle finger under my chin and raising my face to look her in the eye, \"love isn't like that; love isn't just shagging, love is wanting to spend every waking minute with your man,\" Mrs Dixon stopped, considered something, then spoke again, \"or your woman if that's your thing.\"\n\n\"Why Mrs D,\" I said with a gulp and hoping to divert the attention away from my mistakes, \"don't tell me you've played for the other team?\"\n\nThe old lady smiled and saw my ploy and was kind enough to go with it,\n\n\"it's fair to say that I have dabbled with other side of the bed on a few occasions,\" she grinned, \"and for a time I think that what Diana and I felt for each other was love,\" the old lady looked wistfully into the distance, straight through the wall of the cafe and into the past.",
        "\"Was it during the War Mrs D?\"\n\n\"Oh yes Darling,\" said the old lady coming back to herself and picking up her cup, \"I shared a room with my lovely friend Diana, we were both Section Officers but we still had to share a room on the station, I was in charge of a section of WAAF's in the plotting room and the radar station a few miles that way, while Di ran the orderly room and station administration.\"\n\n\"Where you in love Mrs D?\"\n\n\"Not to start with Darling, think it was more lust to start with. We were on the old fighter station I showed you about a mile from here, working crazy hours of course,\" she looked down, \"both Di and I had lost a sweetheart each during the Battle of Britain, and Di was just mourning her second and she was really broken up about it.\"\n\n\"Did you... I mean...\" I dropped my eyes now, \"Did you... like... have sex with them, the sweethearts I mean?\"\n\n\"Never got to know them that well!\" she giggled, \"we didn't have the pill of course and... well... nice girls didn't do that sort of things in those days. We had a few dates, perhaps a show in London, certainly quite a bit of kissing in the long grass or in a car if he had one... it was...\" Mrs Dixon smiled at me, \"it was a tiny bit of peace in the chaos of those hellish days.\" She closed her eyes again, \"well Di had gotten really close with her boyfriend...\" she paused, \"do you know? I can't even remember his name... how awful is that, the boyfriend of my very best friend and for the life of me I can't remember his name, how terrible...\" she went quiet.\n\n\"Come on Mrs D,\" I said, \"How many years ago was it?\"\n\nShe smiled and opened her eyes,\n\n\"Well I suppose I do still have that excuse!\" she clapped her hands back to her knees and laughed gently, \"But I can remember all of my section though -- how strange,\" she closed her eyes again, \"Agnew, Barton, Batten, Dennison, Groves, Lewis, Loundes, McCardle, Morris, Oswald, Renyard, Smith, Smith and Smythe, Trent, Urquart and Wednesbury.\"\n\nI applauded, and Mrs Dixon grinned and nodded her head accepting the praise.\n\n\"Jenny Barton, Dot McCardle and Ossie Oswald were killed when their radar station was bombed, they're on that memorial out there. All my girls,\" she said, \"knew all of them, never by first name of course, not allowed to make friends.\"\n\n\"Well, you made friends with one of them obviously,\" I grinned.\n\n\"Aaah! Well Di was an officer, and I could become friends with her.\"\n\n\"Very good friends by the sound of it.\"\n\n\"Aah yes!\" said Mrs Dixon, \"very good friends indeed.\" Mrs Dixon closed her eyes and smiled in remembrance, \"Her boyfriend had been posted as 'missing' even though one of the other fighter boys had seen his aircraft go down in flames and crash into the sea, so many boys, such a waste...\" Mrs Dixon shook her head. I was just about to lay a consoling hand on hers when the old lady's head shot up, \"Rees!\" she shouted in triumph, \"Rhodri Morgan-Rees! Training to be a Doctor when he joined up, had just been promoted to Flying Officer!\" her joy at that memory was short lived, \"Killed the very next morning, never got to wear the extra braid.\" She looked contemplative again, \"but in the Royal Air Force of 1940 and 41, promotions did tend to come around a bit quicker in the fighter squadrons.\"\n\nMrs Dixon sat up, shaking off the thoughts of the deaths, \"Well the night she found out that Rhodri had been killed she asked if she could sleep in my bed, and of course with them being such narrow little things we got close up, and through our tears we both said that we wouldn't date any more fighter boys, no more dating until we knew that there was a reasonably good chance that they, and us for that matter, were all likely to come out the other side of that war.\"\n\n\"What did you do?\" I said intrigued by what my friend might have gotten up to almost eighty years ago in her narrow bed with her young female friend.\n\n\"Well, the first night we just cuddled, had to really, never a lot of room in those beds. The same the next night. The third night we both lay there and chatted, chatted for ages we did, everything and anything. I started talking about a previous boyfriend, a chap that had moved up to the Fens to command a flight of bombers, his name was Jeff.\" Mrs Dixon smiled again, a slightly cheeky one this time. \"Jeff was just the most amazing kisser!\" she said, \"just the greatest, he would do things with his lips and tongue that were amazing.\" Mrs Dixon looked down, \"Well laying there with Di, her face inches from mine, she said 'show me' and well... I had to didn't I.\n\nWe kissed at first, just innocent kisses to reassure the other, and it was lovely. We hugged some, then we hugged some more, then we kissed some more;\" Mrs Dixon looked down me, \"real kisses!\" she said with a soft grin, \"tongues and lips, I can still remember when it got serious and Di rolled over me and lay on top, we both started grinding away at each other. I can still remember; Di was wearing a nightdress while I had on pyjamas. I remember that we both started to play with each other, and I pulled off my pyjama trousers so they wouldn't be in the way. Christ she was good, made me come for the very first time that night.\"\n\nI was shocked by all this, but wanted to know more, and was surprised that a woman wouldn't have known about masturbation or orgasm until she was nineteen and was amazed that she could talk so candidly about something so personal. \n\n\"How long did the affair last?\" I said.\n\n\"Oh we were on and off for almost a year. Once the Battle of Britain was over and things settled down a bit Di was transferred to another station. I think they were onto us because we were so close I suppose; anyway, she was promoted and posted to another station in Eleven Group and we would meet occasionally for lunch, and shared a room a couple of times in London.\" She sighed happily, \"She met her husband a few months after our last meeting and that was that of course. She fell in love with a wounded pilot who was grounded from further operations because he'd lost a foot in a crash, a hurricane. Well I met her at her parents' house and she told me all about her new love. I knew that was us done of course; she was, how do you young people put it, 'loved up'. Named my eldest daughter after her and they were both her godparents, came all the way to the Rhineland for the christening.\"\n\n\"And you were on your own again?\"\n\n\"Yes,\" said Mrs Dixon, \"but Di wasn't my only move in that direction, I had a short affair with an ATS officer, Marthie,\" Mrs Dixon half-frowned and half-smiled, \"never seen someone quite so comfortable in trousers. She was in charge of an anti-aircraft battery in Hampshire. She was a proper Lesbian mind you, very butch and not afraid to show it; we only slept together a few times as she was rather intense and was looking for a relationship - not comfort and warmth like me.\"\n\n\"So you were still a virgin when you slept with your Husband.\"\n\n\"Technically,\" said the old lady, \"I can't say that I'd had a penis inside me, but Marthie did have a fine selection of Dildos she liked to use on me, and for me to use on her of course.\"\n\nI looked at the old lady and bit my lip,\n\n\"Why Mrs Dixon!\" I hushed my shock as the lady arrived with two more lattes.\n\n\"Oh it all seemed innocent enough at the time,\" she giggled waiting for the waitress to go back to her counter and lowered her voice, \"she even had one that we used to wear this strange bloody leather harness so we could screw each other.\"\n\n\"A STRAP-ON?! MRS DIXON?!\"\n\n\"Did nothing for me Darling,\" said Mrs Dixon quite simply, \"was really uncomfortable and to be honest I never saw the point. If you want that kind of penetration then you find a man, obvious I always thought. \n\nThink Marthie realised that I wasn't into it like she was; we had a huge argument in my hotel room and she shouted that I wasn't a real Lesbian, just screwing her in secret so I didn't get a name as a dyke or for screwing all of the blokes. She was right of course, but then I wanted sex -- easy sex, safe sex, all the passion and the orgasms I could get with the risk of pregnancy or losing the man in question in some dogfight over the channel or when he stormed the next set of beaches Churchill had his eye on.\"\n\n\"So did you split up with her?\"\n\n\"Yes, somewhat. She stormed off - the next morning mind you - the next week I was told that I was being posted to North Africa as the Africa Corps had been beaten, and that decided me on heterosexuality for good. Once we'd taken North Africa it was planning for the invasion of Sicily, then Italy after it had calmed down enough. I was stationed either in Naples or Rome and it was all about dinners, dancing and all strictly above the waist. I didn't want to get a name for being a game girl.\"\n\n\"Like me,\" I said.\n\nMrs Dixon paused,\n\n\"History honey!\" she said looking with raised eyebrows, \"you now live here or at the Holiday centre and having been here for getting on for a month I haven't heard that you sleep around.\" I thought about that for a moment, then pursed my lips, raised my eyebrows in realisation and nodded. \"That's the thing about local gossip Darling,\" she said noting my coming to terms with it, \"when you aren't local it really doesn't count. And I reckon that in your absence they've probably had to find someone else to talk about.\"\n\n\"I haven't had any text messages from my old lovers since I moved on.\"\n\n\"Partners Darling, Partners; like I said try not to confuse what you did with them as love. There's love and there's sex Honey, and while sex can be uniquely pleasurable there is nothing as good as making love to the person you are in love with, nothing.\"\n\n\"Who were you in love with Mrs D?\" I said.\n\n\"Aaah that's a simple one Darling, after my almost eighteen months of occasional Sapphic delights, I met Colonel John Dixon DSO, late of Kings College, Cambridge and the Royal Artillery and my wonderful husband for over sixty years.\" Mrs Dixon beamed her pleasure and I could only bite my bottom lip at the older lady's evident pleasure and pride. \"We met when I was working with some experimental radar as we were slogging our way through the German forces in Italy. He was an expert in anti-aircraft shells and radar direction finding and we met across a half empty tea urn at four in the morning, he was only a Captain then of course. We went out for dinner that night in a charming restaurant on the Via Forno, both of us in uniform and he was the perfect gentleman. Saw me back to my accommodation, kissed my hand and asked if he might see me the next evening. I was charmed and agreed of course.\"\n\n\"Of course!\" I said delighting in the wonderful romance I was hearing about.\n\n\"We courted for almost a year and just prior to our move through to Northern Europe, something to do with the final push through Germany and any of the new science and technology that might be found, he asked to me to marry him. I said yes of course.\" The old lady had the thousand yard stare again, \"Made him promise me that he wouldn't get killed, it was early 1945 and Arnhem and the Ardennes where just memories but no way would I go to another funeral of another young man I had real feelings for...\" she snapped out of it, \"But he was very careful of course and spent months and then years looking at what the Germans had developed and trying to work out if the Russians had it. After the war we settled in Germany and two months before my demob we married in Cologne Cathedral, I'll show you a picture one day.\"\n\n\"That would be lovely Mrs D!\"\n\n\"And that was that, we set up home together in a large unbombed house in Rhinedahlen and became part of the British Army of the Rhine. I took my medals and retired from the WAAF after five long years of war and just went on to become Mrs Dixon to Colonel Dixon, we had our children and our wonderful life in Germany with a few months back in England every now and again where he would test his latest invention while my parents got to meet him and their grandchildren and I got to meet his parents. John retired from the Army but stayed working in the defence industry and was responsible for some rather good patents which I still hold, a tiny part of which paid for your new clothes Darling.\"\n\n\"It sounds idyllic Mrs D.\"\n\n\"It was Darling, it absolutely was. He was my first male lover of course but by then I had a good idea how all of my bits and pieces worked and was able to show him. He was kind, gentle and passionate and our love just grew -- it does that Darling, and it just becomes more wonderful.\"\n\n\"I hope one day I'll find what you had Mrs D,\" I said with slightly misty eyes.\n\n\"And you will Darling,\" said Mrs Dixon, \"Stick with me Sweetie and I'll see you right.\"\n\n\"Chance will be a fine thing...\"\n\nMrs Dixon snapped her fingers,\n\n\"And That's enough of that Tracy Oliver!\" She pointed at me; the girl that had been taking care of her, not that she needed that much, for the last six weeks, \"I won't have this 'lack of self-confidence' nonsense - from this point on Tracy Oliver's biggest supporter is going to be Tracy Oliver!\"\n\nCinderella: 'drive' and ambition.\n\nAnd so it began; I had admitted to Mrs Dixon that I had driven cars around the estate during a trip out one day when we were passed by a rather jumpy learner driver. Mrs Dixon said that seeing as I worked so well with her, with my employers' permission and the necessary time off she would pay for me to get a licence. \n\nCarol the HR manager knew a good thing when she saw it and even suggested a driving school that she had used for her daughter. With almost no input from me I found myself with a provisional licence and undertaking a week-long course of instruction all finishing with me taking my test, and with some extra confidence building from Mrs Dixon I passed with flying colours. The Care Company even paid for me to undertake a Part D driving test so I could drive one of the half dozen minibuses they had across Sussex and Kent.\n\nI showed her my new licence and told her that I could drive the buses.\n\n\"First you sort out my dress and my glass slippers,\" I pointed across to the big Fords, \"Now you arrange my coach!\"\n\n\"Stick with me Cinderella, it's all in the plan!\"\n\nMrs Dixon paid to take one of the cars and we spread our tours and lunches further. My confidence grew and I drove her further out whenever she wanted.\n\nAs the autumn moved towards winter I was surprised when I received a letter through the post from the local college thanking me for my interest in the 'access to nursing' course. Considering I'd done nothing more than talk to Mrs Dixon about how I'd loved the first aid training I'd done and was thinking about doing the national certificate in care studies, and how I was a bit jealous of the paramedic and hugely jealous of the three registered nurses that worked in the recovery wing - that Mrs Dixon!\n\nThe next morning I took the letter and the brochure to her and she told me that I was a natural and why would I just learn how to hand around cups of tea and wipe old ladies bottoms when I could become a real nurse.\n\n\"A nurse?\" I said, \"I don't think I'm...\"\n\n\"Stop that!\" said Mrs D, \"We aren't doing negatives anymore are we?\"\n\n\"Well...\"\n\n\"ARE WE?!\" said Mrs D with a real vehemence to her voice, and her usual pursed lips and raised eyebrows.\n\nI stopped, looked at the picture of the nurse in the blue smock with the posh watch hanging from the pocket. I took a deep breath,\n\n\"No Mrs D,\" I said with the slightest snarl, \"are we fuck!\"\n\n\"That's my girl!\" roared Mrs Dixon slapping me on the back. She looked at me smiling back at her, \"You do that Darling, you become a nurse,\" the old lady sniffed, \"and you make me proud...\"\n\nI borrowed a centre car drove to the college open evening, took a couple of tests and signed up for the course which meant in the simplest terms that while my GCSE results had been pretty average this new course meant I would be qualified to apply for a degree in nursing from a university. They explained that I could pay for each module as it came along.\n\nMrs Dixon's stay at the Rest Centre was up, and we were both more tearful than we thought we would be at our goodbye that chilly December morning.\n\n\"I'll be back in the spring Tracy,\" said Mrs Dixon patting me on the back, \"just you read the books that the college have suggested and I'll see you in February, I can't go for too long without seeing that sunshine smile of yours!\"\n\nI went back to my work, and was transferred from the rest centre back to the holiday park for the Christmas season and any number of mid-week and weekend Christmas events; my first aid skills were called upon for the occasional slip, trip or fall that the inebriates had, more than that though I was driving the minibus to and from the railway station to collect and drop off the guests that arrived in that fashion.\n\nThe holiday centre offered me a quite significant sum to work through the Christmas holiday and I took them up on it, and was delighted when I was asked to drive to the station to collect the undergraduates that had returned for the Christmas period and there were lots of hugs, and cries of delight, not to say surprise that I could drive.\n\nI'd spoken to Mum, to Dad and my Grandma sending cards and small gifts for them via Amazon and telling them how well I was doing and that I'd passed my driving test. Dad said that was great and hoped I would soon have enough money to buy a car and could drive him to the pub, hmmm...\n\nMum did her usual and listened to my news for almost sixty seconds before she burst out with what an absolute arsehole new husband was, but strangely that she wasn't leaving him like she had the last one -- I guessed that over Christmas there'd be a short reconciliatory period and there would soon be another child for the social workers to add to my other siblings on the 'at risk' register.\n\nThe Christmas period was great and I had a wonderful lunch straight after the residents did. When I got back to my room after a great day almost entirely on my feet, I found a card on my bed that hadn't been there that morning, and I opened it.\n\nThere was a card with a Christmas scene of an old RAF station with snow covered spitfires and old buildings like the ones I had driven Mrs Dixon to during days' out. The title on the back showed that the card was from the RAF Benevolent Fund. \n\nI smiled, it had to be from Mrs Dixon and I had been quite surprised that I'd not received one before despite the one I had sent to her. I opened it and saw a piece of paper fall out. I inspected it closely and saw that it was a cheque.\n\nMrs Dixon! I was ready to phone the lady and tell her off for sending me money when she had already paid for my driving licence when I saw that the cheque wasn't made out to me at all, but was the entire cost of the course that would qualify me to go to University!\n\nI posted it the very next morning with my application form. I also emailed the very tech-savvy Mrs Dixon telling her how grateful I was and how naughty she was. Mrs Dixon mailed back telling me that was nonsense and it was a delight to able to help out someone as lovely, kind and clever as me. We became email pen pals and I wrote to Mrs Dixon at least once a week telling her how I was doing and the start of the modular course the following January. \n\nIt was hard going, working long days and heading to college two nights a week to fit in the study. Fortunately Mrs Dixon's emails were a constant support with the occasional five pounds or ten pounds paid into my account 'for something nice' from the College coffee shop to keep me focussed. \n\nI studied hard at college and on occasions was able to shadow one of the recovery wing nurses on rounds and on some of the procedures that they were specially employed to do.\n\nWhile Mrs D was at back home I even had a trip back to Jackson's Park to see my family initially not worried about seeing me now couldn't believe the change in their daughter, granddaughter and sibling. Grandma was over the moon with the new, more confident slimmer me, with nice sensible clothes not the slutty crap that I'd worn before and I had lunch with her telling her how great my new life was.",
        "The passive-aggressive, chubby, blonde-streaked, accented yob-girl that had left a year ago was now much nicer, more patient and, thanks to Mrs Dixon's advice and shopping trips, was actually Cinderella and well dressed with perfect hair and a perfect complexion aided by make-up that looked classy rather than what the Bitches thought was sexy.\n\nI parked the car that I'd borrowed from the centre in the railway station car park and walked the half mile home, after all I knew that Dad would demand a lift to somewhere he didn't really want to go 'for a laugh', my nasty bitchy step-sister Clarice would manage to damage it in some way or worse, and that Mum would think of something or someone that needed moving and I just couldn't be doing with the inevitable mess I would get from which ever grubby, dirty-nappied, younger step-sibling that would involve. \n\nSteph was 'out' of course, so after Dad, two of his kids and I finished the Uber Eats delivered MacDonald's meal, I made my goodbyes just as Clarice and Steph arrived back, both open-mouthed at my transformation. Steph was very complimentary but Clarice just stormed off.\n\nI was walking back to the railway station dressed in my smart pencil skirt and raincoat with an umbrella low against the faint drizzle pleased with the reaction I'd caused, when I saw a group of Jackson's Park Bitches clicky-clacking their way along the other side of the street at speed and heading for Dad's place.\n\nI overheard one of them recognising my one-time bestie Jodie,\n\n\"Clarice says you can hardly reco'nise the fuckin' bitch, cow's lost over a fuckin' stone!\" she shouted if such a thing was impossible. Obviously, my bitchy stepsister had spread the news the second she came home and found me there, \"says she's nursing in a fuckin' care 'ome, wearin' a fuckin' BURBERRY!\"\n\nThere was a general grumble of disapproval.\n\n\"Yeah, fucking bitch must think she's all THAT!\" shouted a second, making an exaggerated hand gesture in the air, the expensive looking but probably fake baseball cap she was wearing pulled down so far over her face that it was hard to make out who she was, and the tightly folded arms over the hooded puffa jacket made the body shape indistinguishable from the other high-heeled harridans advancing on my old house like an avenging horde of over-made-up slutty teenage shield-maidens that happened to work part-time in a girl band.\n\nI lowered my brolley and kept walking, happy that at five in the evening looking like a grown-up, in a street with half of the street lamps not working I had gone completely unrecognised shaking off the fear that the five girls I'd left behind all that time ago would find a reason to knock seven shades of shit out of me, not only for moving on but daring to look good into the bargain.\n\nI was soon back in the car, safely locked in and listening to the radio. I drove out of the car park and saw that crowd of Jackson's Park Bitches, those sworn-since-childhood BFF's of my previous life, were chasing along the road, almost running through the pouring rain towards the station now led by Clarice and followed by some of the boys that we hung around with, three of whom I'd had sex with, one of them without my consent. I shivered but remembered Mrs Dixon's words, 'history Darling, just history', and 'you can't be hurt by local gossip if you aren't local'.\n\nI stopped myself winding down the window and shouting 'fuck you bitches' instead sliding past unrecognised in the almost new, white seven-seater people carrier, contenting myself with a smile and a wave to one of the younger lads who's name I couldn't even remember running to catch up with the main gang, who stepped out into the road staring and pointing at the back of the car as he recognised me.\n\nI never went back, instead meeting Grandma in the holiday park chalet I'd managed to book for her with my staff discount along with some of her friends that spring.\n\nThe next summer holiday season was fantastic with the request that Miss Oliver return to the care centre as Mrs Dixon was due back. I hated to move away from the tiny tots in the cr\u00e8che but wanted to meet and catch up with my friend desperately.\n\nWe travelled further afield, and I took Mrs Dixon from the south-coast north to Essex and Cambridgeshire and where the bomber stations had been. We took more walks, shopped, ate out and stayed in the occasional hotel for a few nights before heading through London and more visits there.\n\nMrs Dixon headed home as I began my very last college module, the work placements taken care of by my employer. Before I realised it another Christmas had come and gone and further visits from Mrs Dixon and we would always carry on from where we'd left off.\n\nNow all Mrs D was interested in was which University I was going to attend. The one chosen was in East Sussex and not far from several of the centres I'd worked at for nearly two years now. With Mrs Dixon looking over my shoulder, I applied for a nursing degree.\n\nA very excited Carol the HR manager insisted that she drive me there to my interviews,\n\n\"I've been to Uni' interviews with both of my daughters Tracy,\" she said, \"and in Dorothy's absence I do feel rather responsible -- 'in loco parentis' honey!\" and she gave me a huge hug and promised she would wait outside. \n\nThree hours later and sat in her car sipping from Starbucks lattes and munching on blueberry muffins, I told her what had been involved in the test and then the interview and as we chatted more my phone beeped to tell me that 'I'd got mail'.\n\nI looked at Carol and bit my lip, not this quick surely? With a trembling finger I tapped the message from the University that told me that they were most pleased with my excellent interview and looked forward to meeting me that September. If I made them my first choice they would pay me a grant in my first year.\n\nCarol the HR manager screeched, clapped her hands in a real delight and put down her mug, hugging me and seemed almost as pleased as I was. She brought me back to her office where I applied for the necessary student finance. The close proximity meant that I would be able to return to the centre when on holiday from my University course which was just what all of my friends used to do, and also took care of where I would live when not in halls of residence or the flat share I would be paying for with my student loan.\n\nI phoned Mrs Dixon and she was delighted and promised to see me for a catch up and to celebrate my success properly. \n\nEducation: More than just book-learning.\n\nShe did and three months later I was there to meet her train and drive her back to what she often called her second home.\n\n\"Tracy, have you had your holiday this year?\" I admitted that I hadn't really had a holiday since my early teens, \"Well I think it's time you had one. Do you have a passport?\"\n\n\"Yes!\" I said brightly, I'd got one at the same time I got my driving licence using the same photograph and information.\n\n\"Excellent, pack a bag,\" she pursed her lips, \"yeeeees, SIX days worth of clothes I think!\"\n\nWe drove to Portsmouth where we got onto a night ferry called 'the Spirit of Normandy' and after a very comfortable night in first class, breakfast and docking in Caen, I was driving on the wrong side of the road! It came very quickly though and we found a very nice hotel that she booked a suite in.\n\nThe very next day we drove to Arromanche and Mrs D showed me the place that she had come ashore some months after D-Day with her husband and the rest of their team. We checked out museums, we ate the most wonderful cuisine all ordered in Mrs D's very good French; I could remember a bit having studied it for GCSE and most of it came back as we toured and I actually used it. \n\nI drove all across Normandy; Bayeux, Cherbourg, Harfleur, Rennes with her teaching me more French and more history, not only of World War Two but of Henry the Fifth and that period. At every big city she would find another fashion store and I would taken in for 'just a little something extra for Cinderella's wardrobe'. \n\nBack in England she was to holiday with her family and gave me an extra special hug when she left, telling me that I was going to do brilliantly at University; yes we cried some more, but I knew that I could chat with her on-line almost any time, and have access to my confidence booster, the fairy godmother that always had my corner.\n\nThere was a great farewell party with lots of the summer staff heading back to their colleges and universities of which I was finally one, off to be a Fresher. Before our French trip Mrs Dixon had finally ridded me of my now battered but well-travelled 'Sports Direct' bag and I headed off with my dark rucksack and bright red wheeled suitcase.\n\nThe HR Manager had kept me at the medical centres at both sites and almost constantly working with the nurses now, except for when I was looking after Mrs Dixon, so when I eventually collected the key to my University room and with my six mostly nursing flatmates it took me no time to get used to the more cerebral quality of our new relationships. \n\nThat night we put on our jeans and our fresher's night T-shirts and went out to get to know each other and it was fantastic and went on for a whole week!\n\nIn the most direct contrast to the Bitches, most of my new flat mates had been to good schools, at least schools that weren't in special measures, and had kept their virginities right through to well into their Freshman year. Not me, mine hadn't even survived my senior school.\n\nI didn't shout that from the rooftops of course but the dates just didn't come. I told Mrs Dixon and that it gave me more time for study, and my flatmates were all very much in the same situation.\n\nWhat really came home was that I was a good two or three years older than my compatriots and my more mature attitude and amazing wardrobe had most of the tongue-tied eighteen to twenty one year-old boys hiding like wall flowers from me at the freshers events. That would soon change and in a totally unexpected direction.\n\nI'd stayed in my room for my first student Christmas, having Accident and Emergency placements I had to cover rather than head back to the Holiday Centre for six weeks. I had booked dinner in the Union Bar with some other undergrads staying over and brought together by the Student Union and had been assured a great time. I'd already had my 'Halls Christmas' where the seven residents of our flat had our Christmas lunch the week before and shared presents, played games and all that. \n\nThat morning I'd had a phone call from Dad who of course made some stupid comment about me almost being a doctor. I rang Mum but the phone was picked up by an undisclosed child who just shouted down the phone about presents, while in the background I could hear the piercing scream of my irate mother, and a deeper voice in the back ground -- I guessed it was Mum preparing for a nice dramatic break-up.\n\nI rang Grandma who again complained that I should have come to see her for a few days, so I finally explained about Clarice and the local harpies trying to catch up with me. I promised I would meet up with her somewhere quieter and away from the estate.\n\nI opened the few cards from family and of course the present from Mrs Dixon, which was the most amazing Little Black Dress and a matching handbag.\n\nI put on my sexiest undies and my new little black dress with my plastic pearls and a beige jacket bought from a costumier in Le Mans that I knew would match perfectly and walked across to the Union for the day. After the fantastic Christmas lunch, the evening was spent in the Union bar and I didn't drink to excess. After the second hour or so I was sitting in almost completely female company after some dancing and had removed my jacket and everyone complimented me on my 'day to night' costume change. I noticed that the Oceanography student to my left was sneaking looks at me and had a certain flush to her cheeks.\n\nI started to sneak looks at the girl whose name was Anita and it looked as if she was checking me out! Anita must have noticed her checking out was being checked out and not only did she smile, I could see that my neighbour's very large bust was being pushed up and out.\n\nI reached forward for my drink and took a long slug, my mind going back to those warm afternoons walking with Mrs Dixon along the footpaths of her youth, pointing out the second floor room in the government style red brick building that she had shared with Diana.\n\nWhile Mrs Dixon hadn't gone into massive detail, I had spent several nights thinking about two young girls together and looking up what and how Lesbians did their thing, eventually masturbating to a very nice guilt-free orgasm.\n\nHere I was getting the same kind of sizing up that I'd undergone with many boys when I was back home, only this time it was from an extremely pretty girl with jet black hair. After my few glasses of wine I felt more turned on than any of those appalling teenage boys had ever made me feel.\n\n\"Can I get you another one... Tracy?\" said Anita, in the sweetest, softest Southern Irish accent.\n\n\"Please,\" I said sitting up straight and turning to my new friend, \"Another glass of the white please.\"\n\n\"How about something a little different,\" said Anita with a cheeky grin. I wasn't sure exactly how different Anita wanted it to be.\n\nI lazily closed my eyes coming back with a double entendre I didn't even realise was one until a few seconds after.\n\n\"Try me...\"\n\nAnita grinned and was up and to the bar and back in a few moments with a tall straight glass packed with ice and a black plastic straw pushed in.\n\n\"Try that,\" said Anita, and I took a sip. my eyes popping wide at the new and very pleasant taste. \"It's apricot gin and tonic,\" she added, \"It's quite yummy!\"\n\n\"That it is!\" I said turning to face my new friend and drinking buddy.\n\nWe started to chat; that innocent, gentle chat that many people have that doesn't necessarily indicate that anything else is in the offing.\n\nAnita discussed her plans; this was her third and final year although she was seriously considering coming back for a fourth and completing a masters' degree. She had thought about flying home to Ireland but it was such an expense and such a pain and she was getting double and sometimes triple time for the bar job she had been working through the Christmas break and that would pay towards her long summer holiday or even some world travel.\n\nI added that I was doing a nursing degree and had chosen a specialism in emergency medicine as I had a knack of dealing with people scared and in pain, calming them and treating for shock brilliantly, all of my supervisors said so. I had also thought about becoming a nursing officer in the Royal Air Force as an old friend had talked about the life and how great it seemed and the options for world travel were also extremely good.\n\nAnita seemed impressed as soon as I mentioned nursing.\n\n\"Me Ma' is a district nurse back home!\" she crooned, \"was something I thought about but it kinda runs in the family and I wanted a break with tradition. Is nursing in your family?\"\n\nI stifled a laugh, my grandfather had worked in the nearby train repair yard until that closed, my father had lost his job in one of the local companies that had relied on the train yard, and no one in my family really seemed to have had any kind of career since, not unless jobbing carpentry, taxi driving and shelf stacking in one of the many supermarkets locally could be considered a career. And that went for both of my step-families.\n\n\"No,\" I took another sip of my drink, \"I'm the first in family to go to university.\"\n\n\"Your parents must be so proud!\" said the Irish girl, her accent more noticeable now the booze was kicking in and she was more relaxed.\n\n\"My parents are divorced several times over, and my Mum's only concern was that I didn't come home with a degree and no money and expect to ponce off of her and her new husband.\" I sipped more gin, \"like I'd ever go back to her!\"\n\n\"And your Daddy?\"\n\n\"Not so bad; although he did joke that once I got a job in the health service I could get him all of his prescriptions for free and get him a sick-note pad.\" I closed my eyes and shaded them with my hand.\n\nAnita laughed.\n\n\"Aww Jasus honey,\" she chuckled placing a warm hand on my bare arm, \"that's family for yah!\" She gave arm a faint squeeze and leaned a little bit closer.\n\nI talked about my large family and how the moment I moved out for my first holiday camp job I was told in no uncertain terms that my room wouldn't be there.\n\n\"Large families,\" sighed Anita, \"I come from a Catholic family in County Clare Babe,\" she left her hand on my arm, \"while I can't say that there won't be a bed for me when I go home, I did share top and tail with my big sister until I was six and we got a bigger house, was sharing a room with her until I moved to England to study. My sister has moved out and has graduated of course so she's hardly at home now.\"\n\nAnita turned in her chair and twisted slightly so she could link arms with me.\n\nAfter an hour of discussing families and sharing bedrooms, and a second apricot gin and tonic, a double this time, we both decided it was time to go home.\n\n\"Where are your rooms,\" said Anita still arm in arm with me.\n\n\"Just over there,\" I said pointing across the road to the mock Georgian three storey buildings made to look like town houses that were actually large flats, \"you?\"\n\n\"Oh, over in Princess Court,\" said Anita, \"A bit of a walk...\"\n\n\"Rubbish!\" I said thinking on my feet and via my sexual subconscious, \"there's at least another six empty beds over at my place!\"\n\nArm in arm and a bit giggly we scooted across the dual carriage way avoiding the underpass and the roughs sleeper bound to be there, dodging the few cars out on Christmas evening and after a brief search found the front door key and let ourselves in to the cold, empty and damp foyer and into the lift to the third floor. I had initially hated it here when I was on my own, the place was very big but was normally full of noisy, busy, bouncy undergraduate girls and boys all living the best days of their lives, but since they had all drifted off a week before it was quite sepulchral.\n\n\"Coffee?\" I said heading to the central kitchen by the entrance to my flat.\n\n\"Not for me,\" said Anita, \"I'll be needing to get up in the night as it is!\"\n\n\"Right,\" I said shaking the door handle of the room to my immediate right, the home of our non-nursing political science and history undergrad Melanie. The door was locked, \"Shit, plenty more along here!\" I announced and trotted along swinging a left towards the front room that was mine. I turned another two door handles on the way, again all locked. \"I don't think they trust me!\" I said reaching my room and using the key to unlock it. \n\nComing from the upbringing I'd had, I was a tidy bedroom fanatic and there was nothing bar last night's panties hanging over the edge of my laundry basket to suggest the domestic war zones I'd been raised in.\n\n\"Nice room!\" said Anita, sitting down on the edge of my bed.\n\n\"I like it,\" I waved a proud hand around indicating my bookshelves, built in wardrobe and chest of drawers and the sink in the corner of the room.\n\nAnita patted the bed beside her,\n\n\"Tracy, I was raised sharing a bed and it wasn't a lovely big double like this one,\" she looked up all innocence at me, \"If all of the other rooms are locked that is.\"\n\n\"I'll check,\" I said, slipped out into the corridor and waited for the count of thirty and went back in.\n\nAll the other rooms were locked and I had known that from the start. While the flat was occupied, the rooms were all open and we all came and went as we pleased but under strict instructions from the management company the rooms all had to be locked while unoccupied. The rooms all contained TV's, CD players, mobile phone chargers, printers and that kind of tech that went with 21st century students and the many notices on all that company's properties told prospective tenants and burglars alike that this was the case and security was taken really seriously.",
        "\"OK,\" I said apologetically, \"looks like we'll be sharing!\"\n\nFor me this was a simple re-run of Mrs Dixon's first few nights with her war time friend Diana, just being in the same bed, a bit emotional and just see where the music took us.\n\n\"Easy!\" said Anita with a smile.\n\n\"So long as you're sure you don't mind?\" I said, \"I've brought you over here on false pretences!\"\n\n\"Rubbish!\" said Anita, \"now where's that bathroom?\"\n\nI took the opportunity to strip down to my matching bra and panties, if I'd been on my own I wouldn't have bothered with that even. I thought about those false pretences and whether I'd brought the pretty raven-haired Irish beauty back to my room for anything other than a coffee. Had Anita been an Irish boy I knew that any kind of handsy-touchy-feelly that I'd allowed Anita would have been stomped on in the bar straight away, and the eye contact I'd been getting did suggest more than just a friendly chat.\n\nI switched on the bedside table lamp, switched off the main light and folded back the duvet, and stood ready to take my turn in the bathroom.\n\nThe door swung open and in came Anita, her skirt and top folded over her arm and wearing just her very brief underwear, a really pretty and sexy dark blue matching set that went wonderfully with her skin tone. She was all smiles seeing me similarly stripped for bed.\n\n\"Could I pinch a swipe of toothpaste I?\" she said, \"I can manage with my finger for the rest.\"\n\n\"I have spare toothbrushes!\" I said with a beaming and triumphant grin, opening the cupboard under my sink and retrieving a new one.\n\n\"Awww, what a doll yah are!\" The Irish girl bounded across the room to the sink and took the brush and commenced to clean her teeth.\n\nI had been planning on going to the bathroom myself but couldn't resist sitting on my bed and in the half-light watching the extremely cute bottom pointing directly at me and the mirrored reflection of the impressive cleavage of the girl bent over at my sink.\n\nAnita saw this and winked to me in the mirror.\n\n\"That underwear set looks fantastic on you Anita!\" I said, which it absolutely did.\n\n\"Ditto Hun,\" said Anita spitting and wiping away toothpaste.\n\nFeeling my insides bubbling away, I excused myself and trotted down the corridor to the bathroom.\n\nWhen I got back it was to find Anita already in bed, the duvet pulled up and just over her big boobs, her bra on the chair with her jumper and skirt.\n\n\"I took this side,\" said Anita, \"I guessed that with all of your stuff on the bedside table there.\"\n\n\"Yes, thank you!\" I thought some more, \"you've taken your bra off, thank God for that!\" In a second I was unclipping mine and slipping it down my arms, and in just my panties climbed into bed next to my friend who seeing my bosom dropped the duvet she had tucked under her arms.\n\n\"You have great boobs Tracy!\" said Anita looking at them openly.\n\n\"Nowhere near as good as yours Anita, shit yours are perfect!\"\n\n\"Too big Hun,\" she said slipping her hands underneath them both to take the weight, \"They weigh a fuckin' TON!\" She lay back against the pillow and let go of them, \"YOURS now, may I?\n\nI smiled and nodded, turning slightly to my left to bring my tits closer to my new friend and Anita gently lifted them with a smile and a nod as if such a thing was perfectly normal.\n\n\"Perfect weight and size,\" she said, then in complete surprise to me using both of her thumbs swiped back and forth a couple of times over my hardening nipples. \"Even your nips are in size and proportion!\" she said turning and bringing her boobs into play, \"look at the size of these fucking things!\" I felt drawn towards them and gently took them and weighed them in the same way my friend just had to mine. Anita took a deep breath and there were the nipples in question, a deep red colour and larger than I had ever seen before. \n\nI rubbed a very gentle finger across the first one and it sprang up. Anita gave an involuntary shiver and a giggle, \"Aren't you going to do the other one? Fair's fair Tracy!\"\n\nI pursed my lips and smiled as I reached out for Anita's slowly elevating right nipple but it stayed partially inverted, so I leaned forward the few inches to bring my mouth level to it. \n\n\"It's stuck...\" I said and without further thought opened my mouth and closed my eyes just as Anita raised her tit to feed the tip in.\n\nI gently sucked on it, feeling the nipple pop out then grow into my mouth and I tongued it in the way that I had always wanted done to mine. My previous lovers had been more about a swift grope and a fuck, my boobs were always treated rather poorly.\n\nI could feel my passion rising and a similar thing was happening to my bed mate whose breathing had speeded up somewhat and whose spare hand was now at the back of my head, stroking my hair and, probably, stopping that loving mouth from moving away.\n\nEventually I pulled back with a huge smile and seeing Anita's equally big smile and the slight turn that brought the other nipple into mouth range. With a slight contented head wiggle I opened my mouth and sucked the other one, harder this time pulling more of the flesh into my mouth with Anita's sigh becoming more of a groan, her hands stroking the side of my face now, encouraging me to suckle with greater effort with my lips and tongue, letting me know with her 'oohs and aahs' what was acceptable when I started to gently nip and scrape with my teeth.\n\n\"Oh fuck yeah!\" said Anita sliding down slightly and pulling me over her, keeping my mouth to her breasts.\n\nI pulled off of them and lay on my new 'lover'. Lover? Hell, I was lying in bed with a virtually naked woman whose nipples I had been sucking on, sure she was a lover.\n\n\"You are very good at that Tracy,\" said Anita with a grin, \"Have you ever done that before?\"\n\n\"Nope,\" I said, then added, \"Weeeell I did lick one of my own nipples once before, just to see what it was like you understand.\"\n\n\"Well, your experience certainly showed, now let me return the favour...\" Anita rose slightly gently pushing me into the right position for her attack. She lowered her mouth down onto my breasts, and I lay there in exquisite anticipation.\n\nWhen it came it was just as lovely as I had expected it to be. There was no brutish grasping and grabbing I'd had from my teenage lovers back home; this was a gentle passionate loving invasion of my breasts the like of which I couldn't even imagine.\n\nIt seemed that Anita was doing everything to me that she'd wanted.\n\nAnita went from nipple to nipple sucking, licking, nipping with lips and teeth reciprocating with a similar amount of passion that I'd shown.\n\nAfter a great session that had both of us almost vibrating with lust, Anita lay next to me with a beaming grin,\n\n\"Well that was lovely!\" she said and leaned forward for a kiss. The first one was the friendly kiss, but as neither of us objected a second was undertaken and this was longer and more passionate and ended with tongues entwining and hands being brought back into play. \"Tracy...\" said Anita hesitantly, \"Look, if you want to leave it right here and go to sleep I will understand but...\" she stroked a gentle hand down my still exposed breasts, \"if you'd like to carry on and explore some other stuff I would really like that.\"\n\nI pursed my lips,\n\n\"You know what? So would I!\" \n\nThe kissing recommenced and it was without question the most passionate, loving strong but still gentle lovemaking I'd ever had; and yes, it was lovemaking.\n\nMy hands followed a similar pattern to Anita's and it seemed to meet with her approval as her giggles and sighs were coming on a reasonably regular basis. After what seemed like long pleasurable moments I felt my panties being pulled down and it made me shiver and giggle.\n\n\"You like that honey?\" whispered Anita in my ear.\n\n\"Fuck yeah,\" I whispered, \"That's the sexiest thing that's happened to me in years.\"\n\n\"That's nothing babe,\" said Anita sliding down the bed bringing her mouth level to my pussy. A pussy that had known nothing but my own finger and an Amazon vibrator since that awful night almost three years before when I'd been at that party.\n\nBut far from the swift fingering to check on how wet I was and the in-out in-out that I'd known before this was the single most passionate moment I'd ever had with another human. Yes, when I came home slightly pissed one Thursday evening and broke out the brand new vibe I'd been quite excited, but this was fucking amazing and I was positively trembling with that anticipatory lust. \n\nAnita had pushed back the duvet and was knelt between my knees with her tongue taking long swipes at my pussy, giving it a few more until she raised my thighs holding them in place so she had total access to all of my goodies.\n\nAnita tongued my clit for a few moments making me cry out feeling the first stirrings of a come that hadn't been instigated by me, \"Oh-shit-oh-shit-oh-shit...\" my string of expletives letting the little Irish girl know that all was going according to plan.\n\n\"Pace yerself Tracy,\" said Anita, \"No rush to the orgasm honey...\" after saying that she licked from my clit all the way down past my pussy pushing her tongue between the labia stopping to rim my anus which had me crying out in passion before the travelling tongue went back to my clit.\n\n\"Oh fuck the pacing Anita, make me come, PLEEEEEASE make me come... OH FUCK YEAH!\" The same lips and tongue that had done so much magic to my nipples were now concentrating on my tiny bud and I rolled slowly down that hill hitting the wall and coming in the single greatest example of its kind I'd had.\n\nI cried all the way through, so much so that Anita was up and cuddling me as I came down from the intensity.\n\n\"Hey Babes!\" said Anita cooing to me, \"It's just an orgasm!\"\n\n\"I've NEVER come like that before!\" I giggled hugging Anita back.\n\n\"You remember that old adage that if you get into a bed with a girl and her bra and panties match, you weren't the one planning to have sex that night?\" I nodded, it had been all over social media some years before. \"Weeeeeeeell I must confess I was in the Union bar when you were booking your Christmas dinner, and I kinda set my sights on yah then.\" Anita giggled. \"I knew I was stayin' over and saw just how fucking sexy you were, and I have to confess that I've fancied you ever since, and tonight I dressed up... for you.\" Anita looked just a touch ashamed, \"you don't hate me for that do yah?\"\n\nI grinned,\n\n\"After THAT come?\" I giggled, \"Fuck, Anita... no one, and I mean NO ONE has EVER given me a feeling like that!\" I leaned forward and kissed her. I felt a further shiver, \"My bra and panties match too Anita,\" I said, \"I knew all of the other rooms were locked before I asked you over, I have two sets of room keys in my bedside table drawer there, I wanted you to sleep with me after our second apricot gin.\" I kissed her, \"Anita, I've never done...\" I thought back to what Mrs Dixon had said to me, \"I've never made love to another woman, you might have to show me, at the very least put up with my rather feeble attempts to match you.\"\n\n\"Tracy honey,\" Anita leaned forward and brushed hair from my face, \"believe it or not you're only my second attempt at making love with a girl,\" she kissed me again, \"why don't yah just do what you think YOU would enjoy, that's all I did!\"\n\n\"You got it!\" I said kissing her, starting with her lips and working down her face, neck, chest, boobs, tummy; kissing first, then some gentle stroking and caressing before settling and licking and kissing, nibbling and slurping on the genitalia before me, thinking on what I'd liked and just doing that. \n\nWith my fingers and thumbs gently pulling Anita's labia aside I settled my lips over the clitoris and sucked gently while flicking my tongue across the fleshy bud; the reaction from Anita was just what I'd hoped for, and the sigh became almost a howl as I pushed my finger into my lover's pussy and scrubbed where I figured the G-spot might be. I was pleased I'd paid so much attention to the female consultant when I did my GU placement!\n\n\"Oh fuck YEAH!\" howled Anita letting me know that despite my Lesbian virginity I had nailed that bit and she'd come. \n\nI played and teased just as Anita had done to me and pretty soon I could feel that Anita was trembling almost constantly and after her second come. I was really enjoying myself, the nurse in me just had to stop and slide up for a kiss and a welfare check.\n\n\"Fuckin' hell gorgeous!\" hissed Anita, \"You can do that to any time yah fuckin' like!\" We kissed again and settled down to cuddle and canoodle before sleep took us.\n\nWe woke next morning and there was no embarrassment about what had passed the night before, and we both got up, cleaned our teeth and headed for the bathroom and a shower. Anita was first in and I just watched in delight as the Irish girl scrubbed down her perfect body, and even I had to admit that I could do all of that again.\n\n\"You not working today Tracy?\" said Anita, with some narcissistic delight in my admiration of her naked wet form.\n\n\"Not today,\" I smiled and unfolded my arms letting my boobs in on the action, \"Placement at the A&E Tuesday and Wednesday - you?\"\n\n\"No,\" Anita turned off the spray in the wet room, \"I'm back at me bar job tommora' through.\"\n\nI handed Anita a towel and brushed past her on purpose breasts to breasts, looking down as two pairs of nipples touched and erected. I stepped under the shower head and pressed the button to start the water with the short shock as a tiny amount of cold that came down. This was nothing to the shock when Anita stepped in behind me and wrapped one arm around my bust and grabbed my right tit while the other hand slapped on my arse, her index and middle fingers pushing hard up between my thighs and into my pussy and finger fucking me.\n\nI tried to turn around, but Anita held me tight,\n\n\"Oooh no Tracy,\" said my lover, \"if yer gonna tease then just you stand still and let me have me fun...\"\n\nBefore I knew it Anita had me pinned to the white panelled wall, her fingers in me, her other hand mauling my tits, pinching my nipples and kissing my cheek and neck just as my knees started to tremble into that day's first come. \n\nWell, two could play at that game that was for sure.\n\nTwenty minutes later and two comes each, we sat in the flat kitchen with a toaster using up the various tiny packs of sliced bread, quarter-full jars of preserves and picking at remains of boxes of breakfast cereal left out once it was clear that I was staying over; we both sat smiling at each other, both naked but for the towels now wrapped around our heads.\n\n\"So you've only done that once before?!\" I said pouring a second cup of tea.\n\n\"Oh yes,\" said Anita munching her third slice of jam toast, \"Me first was in me first year in a hall of residence flat just like this one, three years ago,\" she dabbed at her lip with some kitchen paper, \"That was the first year I didn't go home for Christmas.\"\n\n\"So you thought this year you'd have another go,\" I giggled. I sipped some tea, \"So what was it about me that made you want to... well... shall we say 'put on matching underwear'?\"\n\n\"I'd noticed you at one of the Fresher events, and you caught my eye. You're my age,\" Anita raised a foot to place in on one of the rails of the chair, exposing her still flushed but now showered pussy to me, \"you have... a certain 'je ne sais quoi'; sexy as fuck, I mean... the whole fuckin' bar went silent when ya took off yer jacket and there ya were in yer LBD!\" she said wide-eyed and leaning forward, \"but... it was before that even; while I don't consider myself a Lesbian, as soon as I heard you booking your Christmas day meal twenty minutes after I booked mine I just knew I wanted to meet you, and well... you know?\"\n\n\"So you're not a Lesbian?\"\n\n\"No Hun, guessing you're not?\"\n\n\"Nope, last night and this morning were my very first steps in that direction, ever.\"\n\n\"You're not a virgin though are yah,\" said Anita, \"You've made love before.\"\n\nI went quiet and saw that Anita had picked up on it.\n\nI smiled,\n\n\"Yes I have, had a few boyfriends back home when I was younger.\" Anita caught the hesitancy and that perhaps the back story that I hadn't shared wasn't as good as it could have been. I closed my eyes, \"Quite a few actually, and it's not a part of my life that I'm particularly proud of.\"\n\n\"I'm sorry,\" Anita putting her foot down and closing her legs, \"I hope I haven't brought back any...\"\n\n\"Long time and a lot of water since,\" I said hoping to recover the mood, \"You are the first person I've slept with in three years.\"\n\nAnita blushed,\n\n\"Well honey,\" she said, \"Believe it or not, you're the first person I've ever slept with.\"\n\n\"What?\"\n\n\"Still a sissy Irish Catholic virgin!\" Anita pushed her face into her tea mug to hide her embarrassed smile, \"Oh yes I did what we just did in my first year here but she went back to her room after we... err... finished, I think she was a bit embarrassed. I'd never spent the night with anyone until you. And it was lovely!\"\n\n\"You've never been fu...\" I thought back to Mrs Dixon and stopped myself, \"you've never made...\" the nurse took over, \"Never had penetrative sex with a man?\"\n\n\"Is that what you kids are callin' it these days?\" Anita giggled shyly, \"Nope not once, I may have come across as the predatory girls' girl last night but aah...\" she broke eye contact, \"just 22 and never been fucked.\"\n\nI thought back to what I had just done and the fact it was obvious she wasn't either,\n\n\"But... your hymen was broken already,\" I said quickly coming back as soon as I realised how bad that sounded, \"did you do that yourself?\"\n\n\"Grew up ridin' horses, it happened one day on a long canter and a few jumps, found some blood on me pants and that was that.\" She looked up again, casting a naughty look at me, \"did for what was left with the rabbit vibrator I bought in my first year!\"\n\n\"I've got one of those!\" I said gleefully, \"and to be honest I'd much rather have popped my cherry in the privacy of my own room with it than the swift fumble in the park I had with a young man called Pete just after my sixteenth birthday and just before my exams.\" I thought back on the advice that Mrs Dixon would have given, \"You hang on for the right guy Anita trust me, and it'll be all the sweeter for it.\"\n\nAnita stood and leaned across the table and kissed me.\n\n\"Let's get dressed and go back to my place, I'll put me jeans on and take you out and buy you lunch at the restaurant I work in.\"\n\nWe did so and it was a very nice start to Boxing day. The restaurant crew were all banter with Anita and complaining that she should be at work, and it soon became obvious that they were short staffed.\n\n\"Tracy here is free for a few days...\" she said with a mouthful of bacon sandwich and nodding to me.\n\nAfter admitting I had worked for two years in a holiday park I soon found myself with a Christmas job. I was given my very first stretchy form-fitting T-shirt in black that I knew Mrs D would have approved of, worn over a shaping balcony bra that I bought especially and with my tight blue jeans I was on shift with Anita the next day and the money went straight into my quite healthy bank account; we went back to my place because it was closer, and... well... you know.\n\nAfter some days that flew by, some of them in my sexy stretchy new restaurant T-shirt and others in blue scrubs, I spent the night in Anita's flat after we both worked New Year's eve, replaying Christmas Day evening again and the one in between but throwing in some other ideas that we'd both obviously looked up.\n\nWe rubbed pussies, going as far as some very exciting scissoring but settled for fingers and oral, finishing with a classic sixty nine that we both found uniquely pleasurable, each trying something and waiting for the other to do it back to them; a strange and sexy coded language of tongues, lips and fingers bringing both to orgasm several times - including the strange but sexy insertion of fingers into our lover's bottom."
    ],
    "authorname": "Androgynousother",
    "tags": [
        "highway song story",
        "lesbian",
        "oral",
        "lesbian romance",
        "straight sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/that-girl-and-her-fairy-godmother"
}