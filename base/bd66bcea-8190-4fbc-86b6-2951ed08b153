{
    "title": "Rental Problems Ch. 02",
    "pages": [
        "**Reading Part 1 will help understand the story**\n\n*****\n\nOn the drive to the airport Chris talked about when Sasha was coming back so he could setup a small getaway. Sasha turned and smiled saying it was sweet of him to think of her. She did not elaborate to the length of time she was staying, but Chris knew she was going to tell him soon.\n\nWhile in the airport Chris got anxious and finally asked, \"How long are you going to stay?\"\n\nSasha smiled. \"Three weeks, but it really depends on what they are having me do.\"\n\nChris liked the answer, but not the timeline, and knew that the three weeks without Sasha he would be masturbating a lot more. Not wanting to fight or get upset, he bid her farewell with a passionate kiss and watched as she walked away. The sight of her small and yet curved ass brought back the memory of what he did to it not long ago. Her plane took off and now the thought of being alone set in.\n\nChris drove back and saw that his place felt empty without her, and a sense of loneliness consumed him. Not one to be upset, he just decided to go to work and try and forget she was not there. His uncle asked if he wanted to do a repo tomorrow morning, and now that his schedule was free of girls and school he opted to join him.\n\nThe next day Chris was finishing up cleaning up a rental for his uncle and then heading to work to make some more money. Sasha was not returning his texts and he just figured she was busy with her own life and work. As much as he wanted her in his life, he knew it was impossible holding someone down that was not ever going to stay.\n\nBy the end of the week, Chris only heard from Sasha a few times, and her texts were plain and to the point with no adding flavor or loving emojis. Chris knew that this was the end of the line for a relationship that was fast and furious for the time he had it. She may have called him her boyfriend, but he just thought he was a boyfriend for a week.\n\nDeciding to beat her to the punch and end things on a more positive note, Chris asked her if she wanted to stay in California. Sasha admitted to wanting to stay, but also admitted that she wanted a relationship too. Chris decided to end it saying that he did not want to hold her back from making a career in law. Sasha was in tears but agreed that it was for the best. Chris hung up and retreated to his bed for needed sleep.\n\nChris was heartbroken about Sasha, but knew it was for the best if it was handled now instead of three weeks from now. He thought about her quite often, and sometimes thought about Destiny. She had not texted him in awhile and knew that she too had moved on. Shrugging it off with as much pride as he could muster, he thought about how he fucked two hot black girls and got introduced to a love of orgasming inside a girl.\n\nThe week passed with Chris finally taking a relaxing break on worrying about collecting rent, and doing repairs. All of his rentals were now occupied once an older lady decided to take his last vacant one quickly. The money coming in was steady as he felt his income had reached a point where he could almost live on just the rental income. The added knowledge that he still had most of the money Destiny gave him gave him a sense of freedom.\n\nNancy was already paying just like a normal tenant and not asking for special favors. Chris thought about Nancy and how he almost had her, but was quite relieved the more he thought about how easy she was. Salina was the only person that he felt some connection to and would consider being with again.\n\nThe following month Salina called about the air conditioner going out. Her rental was the first he bought and he knew the unit was old when he got it. It was something he knew that could go out at any time, and now was that time. Even though the cost to replace it would set him back, it was still part of being the landlord. With the cost of another rental, Destiny's payout was easily able to cover the replacement cost.\n\nHe walked to Salina's place reminding himself that he did have sex with her twice and each time he left she was spunked in. Thinking it could happen again was a possibility, but Chris was not going to try this time. Thinking that maybe he should be more professional, and that she might need a relationship compared to a quick fling.\n\nIn her accent Salina opened the door and gave a pleading apology. \"Mista Chris...I am sorry to have to call you late, but it just went out last night.\"\n\nChris stepped in as she held the door open for him. The moment he walked in he could feel the heat. His eyes did wander to Salina as she stood up close next to him. Her long, thick black hair had large curls in it that hung down her back. Her white tank top clung to her chest as her petite breasts were poking out for all to see. \n\n\"Please don't worry. I called the a/c guy and the new unit will be installed tomorrow.\"\n\n\"Thank you, thank you,\" she replied as if she was an inconvenience for telling him the air went out.\n\n\"It's no big deal. These things break, your place should be cool by tomorrow.\" \n\n\"I know..I know. It's just that you are so good to me. You never ask questions, and I just don't want to be a problem,\" Salina added as her thick accent was hard to miss still.\n\nChris tilted his head knowing that he did have sex with her and that she could have seen it as payment for something. He also wondered what she meant about questions. His curiosity got the better of him. \"What do you mean...questions?\"\n\nSalina gave a fearful look before answering in a soft forgiving voice. \"You know...documents...papers.\"\n\nChris could not help but smile. He had a suspicion of her legal status, but could not care about it. She never missed a payment, and was an easy tenant. It was then that he felt guilt. He then thought that she had sex with him because he could hold something over on her.\n\n\"It's okay. I am not telling anyone,\" Chris replied as he wondered if he should apologize for last time, but then he felt he should just leave it in the past. \n\nSalina stepped back. \"I know you are a good person. I don't mind if you want more.\"\n\nChris eyes grew wide from the shock of Salina just offering herself. The sense of guilt was still there though. \"You sure? I mean I only came to tell you that the new unit was ordered...and last time it was just that I thought you know.\"\n\nSalina stepped forward smiling. \"You need to stop worrying. I liked it, and would have said no if I did not want to.\"\n\nSalina reached her hand to him and then pulled him towards the bedroom. Once inside the small room, Salina sat on the bed and moved her hand towards his jeans. Chris went with the flow of things and let her undo his jeans and pull out his soft member.\n\nShe looked up with a smile before licking the head of his dick and then finally devouring it. Chris moaned as he looked down to see her pretty face just eagerly sucking away at his flesh. The sensation was running through his whole body as her tongue slipped around the tip again and again as she moved up and down on his shaft.\n\nThe feeling of her hands gliding the bottom half of his shaft made him moan hard as her mouth slurped away. His eyes then focused on her pert breasts as they swayed with each movement of her body.\n\nSalina broke free after a few minutes and then got on the bed. Her naked body was glistening with sweat as he knew his body was too. Her legs parted showing her dark pubic hairs that hid her sex. Chris got on the bed and positioned his body between her open legs. \n\n\"Please...don't be rough.\" \n\nChris nodded and aimed his erection right at her wet entrance. With a very easy push her snug sex accepted him. The sensation of her pussy taking him so easily resonated throughout his core. Her eyes closed but her mouth opened in a soft moan letting him know that she was enjoying it too.\n\nPushing in further as his body now rested on hers, he watched as her eyes opened. Her arms went around his body as he moved his mouth to her, kissing her like she was more than a simple fuck. Their tongues found each other's as he continued to pump his erection inside of her.\n\nWith a slow rocking motion Justin felt his male member hit as far as it could inside of her body. Her moans only confirmed the acceptance of his manhood inside of her was wanted if not needed. Her love fluids were generously coating his shaft as it plunged away at her sex. \n\nThe urge to slam his body against hers came and went as the slow motion of sliding softly through her clenching orgasms made him reconsider it. Chris could not help but moan a little himself as he felt the enjoyment of a slow paced love session. His prick was throbbing already and he sensed he could erupt at any time. \n\nBreaking the passionate kiss to see if she wanted to change positions, he could see her face distorted. Her eyes closed tight as he felt his own hard member being gripped hard by her vaginal muscles. He knew her big orgasm was hitting and he decided to push through it, hoping it would add to her fire.\n\nHe looked at her thinking she wanted more and a change. \"You want to change positions?\"\n\nSalina gave a demure expression as she replied, \"I want to look at you when you cum in me.\"\n\n\"I can pull out,\" Chris answered, wondering if he was cruel last time forcing her to take her seed inside of her.\n\nSalina's face grew concerned but also racked with pleasure. \"Please...ohhhh...please in me.\"\n\nHe smiled and continued his slow thrust knowing that she enjoyed feeling his warm finish last time. \"You liked it last time?\"\n\n\"Si...si...it was so much toooo,\" she moaned out her response as he felt her muscles grip his dick again.\n\n\"You want me to push deep in you when I cum?\" Chris asked as he felt she liked talking dirty like both Destiny and Sasha.\n\nSalina's eyes closed tight and Chris pushed through her quick spasming bout of pleasure. His own need was building and her ability to keep her pussy constantly gripping him now made the urge to finish come sooner than later.\n\nChris felt he could no longer hold out. His eyes went to hers, and she nodded as her fingers dug into his sides and pulled him closer. The pressure to end the buildup was at a bursting point and without thinking he naturally pushed his member deep in her. In that quick moment, he let go and exploded.\n\nIt was like a dam bursting as his body tensed up. Salina gave a smile as she looked up. \"Siii...si. Oh Si Pappi.\"\n\nHolding his erupting cock far into her depths, he continued to feel his need to release expel from his body. The wonderful bliss of the ending was only as good as seeing her eyes open wide and her smile go wide and big.\n\nWith his cock buried deep, the flow of his sperm continued to spurt inside her as he still saw her smile at him. Seeing her face covered in sweat as she smiled at him made him think about not pulling out and trying to get hard again.\n\n\"Did you like it?\" Chris asked wanting to hear her voice more than the answer.\n\n\"Si...I did,\" she answered, breathing heavy with a sweet sound of ecstasy to her tone.\n\nChris finally rolled over, but only after moving her body so he could cradle her in his arms. She moved easily as her small body was no match for his. She turned to him giving him a kiss on his lips. \n\n\"You want me to check up on you tomorrow after the new unit is installed?\"\n\n\"Si, but I have work,\" she answered with a hesitation to her voice.\n\nChris asked wondering if this was a onetime thing. \"Can we try next week?\"\n\n\"We can try, and try again when I get back.\" \n\n\"Where are you going?\" he asked with a smile as she gave him knowledge that she wanted more of him.\n\n\"I am going to see my family in Mexico. I should be back in a month.\"\n\nChris smiled and went back to cradling her in his arms again. To ease her worries, he figured he could give her something to make her feel better about being gone for awhile. \"Do you want to pay rent when you get back? I mean I can wait till you get home and all.\"\n\nSalina broke from the hold and straddled his body quickly. Her legs were on both sides of him as her eyes beamed down at his. \"Nooo. I do not think so...no more rent.\"\n\nChris's eyes lit up and shock gripped him. Her demure attitude was gone and replaced was a more demanding one. \"What? What do you mean you are not paying rent?\"\n\nSalina lifted up her body so he could see her pussy and then moving her fingers towards her cunt lips and pulling them apart. Chris could now see his cum easily making its way out of her and onto his stomach.\n\n\"Noo...no no. If you want to be my pappi, then this is the cost of it. Your rent is getting this now.\"\n\nChris thought about it quickly and realized that he did offer the place last time in exchange for sex. In his mind and the few seconds he processed it. Having Salina not pay rent would not hurt him anyway financially. She was paying cheap rent anyway, and she had the oldest rental.\n\n\"Okay, then. But does this mean anytime?\" Chris asked as he thought about how far he could go with her.\n\n\"If I am home, then it is yours,\" she said smiling before rolling back into a position where he was holding her.\n\nChris relaxed for an hour listening to Salina talk about her upcoming trip, before heading back to his place. The relaxing time with her, and the sex was much needed. \n\n***\n\nThe next day Destiny texted him. \"You busy next Monday? Need to go into the office and was thinking you wanted to catch up.\"\n\nThinking it was more than a business trip, Chris replied back quickly. \"Catch up?\"\n\nHe figured he would allow Destiny to elaborate and not sound too desperate. He also knew there was a chance that Destiny wanted to talk about Sasha or something else that was nonsexual.\n\n\"No pressure. Just thought you would like to meet up.\"\n\nChris answered back thinking that Destiny just wanted to talk now. In his head he pictured her with another man that was more inclined to be a partner for her than a just a fling.\n\nChris agreed and decided to keep himself busy with work. Salina was gone for a month and he had to return to masturbation. Not resting on being bored, Chris thought about expanding. Knowing that he was not getting rental money from Salina made him think about a new rental.\n\nWith the bulk of his money still in the bank, Chris thought about going for a larger home to rent over modular homes and trailers. With the rent being much higher, it would also require him to keep tight track on the rental for fear it could be damaged. \n\nAs he went with his uncle to an auction site, he got a new idea. A parcel of land came up for auction. It was ten acres of property really close to his own that had the rentals on it. He thought that if he could buy the land he could drop at least five to seven larger rentals on it, maybe more. It would be a massive pay bump per month if he could pull it off.\n\nWhen the auction ended Chris managed to have only a few thousand left over. Not only did he spend all of the money Destiny gave him, but also his life savings along with tuition money. He was all in with everything he had. He knew it was a gamble but he now knew it was his only way to make money.\n\nNot only did he win a new plot of land for homes, but also a three large modular houses to go on it. And when an auction for a trio of damaged trailers came up on the last auction, Chris bought them too. He walked out the door with his uncle with five new units and land.\n\nOf the three larger homes, two needed work done, while the last one could be rented as is. The new land was great for the larger homes and needed to be delivered by a special truck. The upside of having the larger homes was that they would bring in double or even triple the income as his smaller rentals. The three smaller units he decided would go next to his others on the land he already owned.\n\nThe smaller trailers all needed extensive cleaning and some repairs, but the price was too good to turn away. Given time, all three would pay themselves off within a year though. He decided the rent would be comparable to what he was already charging his other rentals.\n\nChris decided to stop working his other job and put off school. His tuition was spent and now the only concern was making money. Setting up the new rentals was his new full time job. It was enough work that he did not even get a chance to stop and think about meeting Destiny on Monday. His only focus was making sure he could have the one rental done this month.\n\nWhen Monday came around, Chris took a few hours to himself to cleanup and get ready to meet Destiny. She texted him a time and place. It was late in the afternoon as he headed towards the Hilton to meet her at the restaurant there. \n\nOnce inside, he saw Destiny waiting at the bar for him. She was wearing a dark blazer with her hair straight down her back. Her dark pants matched her shoes as her attire seemed meant for a business meeting than a casual lunch date.\n\n\"Hey there.\" Chris called out as he came up from beside her.\n\nDestiny got off the chair and instantly wrapped her arms around him, and kissing him quickly on the lips. \"I missed you.\"\n\n\"I missed you too.\"\n\n\"Well, there is an hour wait on the table,\" Destiny said as she looked over at the packed crowd.\n\n\"We can go somewhere else to eat.\"\n\nDestiny turned to smile at him. \"I planned on this crowd. We have an hour now.\"\n\n\"You want to have sex?\" Chris said as he looked at Destiny knowing that her plans was to fuck him after all.\n\nWith a sly grin on her face Destiny replied back. \"Of course. I missed that white cock of yours. Now let's go upstairs so you can fuck me.\"\n\nChris followed Destiny to the elevator. Her hands were on him the entire time gripping his package and stroking him to an erection through his jeans. The fear of getting caught grew as they shuffled into an empty elevator.\n\n\"I see that you're ready for me. You ready to fuck me nice and hard?\" Destiny asked as her hand was keeping his erection going with her hand.\n\nChris nodded his answer before moving into kissing her lips. His hand was on her large breasts, hoping they would get to the room quick so he could see them.\n\nAs the bell rang for the floor, he followed her to the room, and he entered right after her. The door was closed and her blazer was already off as she was now showing her blouse. Her large chest easily filled out her top as his eyes were now glued to her dark flesh. As he soaked in her breasts he could see her stomach pushed out just a tad. She had a flat stomach before, but now she had a small bump to it.\n\n\"Oh my God, you are pregnant,\" Chris stated as he sat down on the bed, feeling guilty that he actually did impregnate her and it was not an act of sexual dirty talk.\n\nDestiny smiled as she continued to remove the rest of her clothes as if nothing was wrong. \"Think it looks sexy? I think it does. It's small now and soon I am going to be as big as fuck.\"\n\n\"Do you want money or anything...should ...do I need to do anything?\" he answered quickly as his face looked flushed with anxiety.\n\n\"You can start by getting naked so you can fuck me,\" Destiny quipped back, looking at him like it was no big deal.\n\n\"I am serious. I got you pregnant. Do you want something...I mean anything?\" Chris replied still looking worried.\n\nDestiny smiled and walked over to him kissing him on his lips. \"That's why I love fucking you and had no issues with you getting me pregnant. You are so willing to do the right thing. I told you it's okay. Besides I know where you are and will tell you everything that happens. I want you involved of course, but you don't need to worry about anything.\"\n\n\"Are you sure? I mean I will do whatever you want,\" He admitted looking at her face still holding a worried look.\n\nDestiny laughed and then put her large tits in front of him. \"Since you are willing to do anything I want, then I want you to suck on my tits and then fuck me how I want it.\"",
        "Chris smiled and felt more at peace with what happened. He nodded his head and then caressed her large breasts before kissing them. She moaned slightly as he licked and then softly sucked on her nipple.\n\n\"Missed those big tits didn't you?\"\n\nChris stopped sucking and looked up like a helpless child removed from his toys. \"I did...oh God I missed your big tits,\" Chris admitted. He loved Sasha, and Salina's small breasts too, but there was something about Destiny's large globes that drove him wild.\n\nChris then began to undress as Destiny backed up giving him room to stand. As he removed his clothes he watched Destiny do the same as her panties were now on the floor and a small patch of black pubic hair now symbolized the pussy that he knocked up.\n\nAs he was finally nude, Destiny pushed him back on the bed and then pushed again so he was laying down. \"Bet this cock missed me,\" she said with a devious grin on her face.\n\nChris nodded as he then felt her mouth engulf his male tool. It was a pleasure sensation as his entire shaft fit right down her throat. She quickly moved to back off as her dark lips nibbled and then licked the tip. It was only for a second before moving back down again.\n\nHis hands went down to hold them as her mouth worked on his erection again. Her lips formed a tight seal as she slid down his shaft, furiously working him up to an almost bursting point. The feeling of his manhood being pleasured with her hand and mouth simultaneously added for his desire to explode.\n\nDestiny then moved away and bent over on the bed as if she was showing him what needed to be fucked. Her pussy was gleaming with wetness, and he only thought about fucking her. \n\nHe got up on the bed as Destiny turned to him smiling. \"I need you to fuck me really hard. Slap my ass a few times too. I need you to be hard when you fuck me though.\"\n\nChris nodded and before he could kiss her or say anything she turned back around showing her ass to him. From his view he could also see her large breasts just hanging free as she seemed ready to be fucked.\n\nChris got behind her and aimed his member right at her love folds and pushed in as her sex gave way to his erection. He slipped in fast and deep as she moaned, \"FUCK...oh fuck...yesss.\"\n\nHer hips were not like Salina's and her body had meat on her. She was not fat, but her ass had a curve to it that he just loved. He gripped her hips and began to plow through her love folds with intensity. He noticed she was already wet and there was no friction as his member seemed to glide in.\n\n\"Fuckkk yes...fuck that pussy baby,\" Destiny cried out as he felt her pussy already clenching onto him.\n\nDestiny leaned her head down and once again moaned out, \"Ohhh fuck...I missed this cock.\"\n\nChris slapped her ass as he was now bucking his hips and slamming into her. He felt her love hole grease his shaft too as he plunged in and out. His hands were gripping her hips hard as he fucked her like she wanted.\n\n\"Ohhh fuck yesssss...fuck that pussy baby,\" she moaned louder as Chris continued invading her twat fast and hard.\n\nChris once again slapped her ass hearing his hand clap against her backside filling the room with the slapping sound. Destiny looked back moaning with her face showing nothing but pure adrenaline of the moment. \"That's it...fuck that pussy...fuck it like you own it.\"\n\n\"Shit...you feel so good,\" Chris added as his cock now sloshed in and out of her wet orgasm. \n\n\"You missed my black pussy? You missed fucking my nasty black twat?\" \n\n\"Ohhh fuck...yes!\" Chris cried out as he felt another one of her hard orgasms grab onto his throbbing cock.\n\n\"You like my black pussy being pregnant?\" Destiny moaned out again as Chris slammed his hard monster fast and deep like she wanted. \n\n\"Ohhh God you feel good...yes,\" he answered, feeling his body getting worked up from the fast sex.\n\n\"Tell me I am a nasty black slut...fucking tell me I am a nasty pregnant slut,\" she cried out as her ass was being slammed into.\n\nChris knew she was moaning from it and added to it as his hand once again slapped her ass. \"You're a fucking, dirty pregnant slut who loves white cock...fuck you are so wet too,\" Chris added as he once again slapped her ass hard.\n\nHe continued to plow his male intruder fast and hard inside her wet cunt feeling it spasm as it clamped down in him in pleasure. The sensation of feeling her wet snatch take his erection made him only want to push harder too. \n\nDestiny moved forward as he watched his prick slip out of her sex quickly. \"Get on top of me.\" \n\nHe watched as she laid on the bed with her legs parted. Her dark shaved slit was covered in glistening wetness and waiting to be fucked more. He slid forward aiming his member right for her honey hole and slipped in just as quick.\n\nHis eyes were on her as she smiled wide once he was fully penetrating her sex. Once he began thrusting hard again she gripped his hips helping him go faster. \"That it baby...fuck that pussy good. Fuck me with your dirty white cock.\"\n\n\"Ohhh fuck, you feel good,\" Chris moaned out almost instinctively as he felt her pussy almost massaging his tool. He was throbbing hard but kept his mind focused so he would not finish too early.\n\nDestiny cried out as her hand gripped tight on his pulling him towards her body \"Do it then...fucking bust your white load in my dirty black cunt.\" \n\nAny thought of holding back ended as he was pushing down hard with his body into hers. His member was sliding deep inside of her each time and he loved knowing the end was going to be amazing. He wanted to say more but the insanity of being near the point of orgasming stopped him.\n\nChris felt his body tighten up as he knew the moment was here. Sending his cock hard once more and holding it as the sensation overwhelmed him. Destiny opened her mouth moaning in response to it. He could not hold out any more and just let go, feeling his cum shoot out in an amazing feeling of pleasure.\n\n\"OHHH yes...Oh fuck yes...I fucking feel it. I feel your cum inside of me,\" she moaned, holding on to him as Chris emptied his warm cum deep inside of her.\n\nChris smiled at Destiny as she seemed to enjoy feeling him finish inside of her. \"Did you like it?\"\n\n\"Yes...yes I did. I needed it bad too. I needed it a little rough too, although if you hit my ass more I would have been okay with it too.\"\n\nChris still holding his spewing erection in her love tube looked at her confused. \"You serious? I did not want to hurt you and all.\"\n\n\"It's fine. I like it rough sometimes. You know I like talking dirty about race too, at least with you anyway,\" she answered back with a sly grin.\n\nChris was about to get up and Destiny grabbed him quickly to stop him from moving. \"Not yet. I want to feel it go soft and slide out. I also need to ask you a favor.\"\n\n\"Anything. Anything you want or need,\" he answered, still feeling a little guilty that he got her pregnant and enjoying having sex while she was pregnant.\n\nDestiny smiled again and then kissed him softly on the lips. \"Well, I need a few things. First, I want you to stop worrying about me having a child. I plan on visiting often for business and pleasure so we can see each other more than you think. I also need you to keep a rental open for me.\"\n\n\"You plan on moving back?\" Chris asked as his erection finally died down and flopped out of her creamy vagina.\n\n\"Not really. It's one of those clients I can't talk about. They need a secure place from time to time that nobody knows about. I know you can keep your mouth shut about things and you are reliable.\"\n\n\"Sure...anything you want,\" he said, wondering what type of clients she had, but also knowing that he owed her. Chris felt he owed her for the money she gave him and for the fact she was carrying his child.\n\nChris quickly thought about what rental he would use for this unknown secretive client. He thought one of the trailers he bought would work fine, and if they wanted something bigger he could just move them later on. Already losing rent from Salina made him think twice about using a larger rental too.\n\nDestiny got up from the bed leaving Chris behind as he sat and watched her get up. \"Shit we still have a half hour before we can eat.\"\n\nHe sat at the edge of the bed looking at her stomach. \"We can eat somewhere else.\"\n\nDestiny opened a bottle of water that was on the night stand and took a swig. She then looked at Chris with a grin of disapproval. \"I got only two days here and I want to fuck you as much as I can. Feel like fucking me again?\"\n\n\"I guess,\" he answered, looking at her mesmerized at her need to have sex with him.\n\nDestiny walked over and got back on the bed and laid down with her legs open ready to be taken again. \"Good, now get hard for me and fuck me again.\"\n\nChris could feel his need to cum again still there. The whole fact of her being pregnant was still a shock and had not fully set in either. He looked to see her complacent expression and then his let his eyes wander to her breasts. Her ebony breasts lay to her sides a little as she lay on her back, but her nipples were erect.\n\nHe leaned down to put one of her nipples in his mouth as his hands were on the bed at her side propping him up. Her hands now went to the back of his head almost holding him. \"That's it...suck on them big tits. I know you missed those big tits...oh yes...suck on them.\"\n\nChris suckled on her nipple before biting it softly, not hard but just enough to arouse her. Her soft moans began and he felt her hand reach down to his now erect prick again. She took a hold of it and aimed it right towards her creamed slit. He denied to go with the flow and just push in.\n\nHe broke free from her nipple to see her smiling. \"You ready to fuck me again?\"\n\nChris nodded and felt his dick strong enough to penetrate her again. He positioned himself between her legs again and slipped inside of her again. The instant he entered her he could feel his own cum making it extremely slick for him. It also made it easy for him to slip far into her with minimal effort. He was slowly moving in and out just enjoying the wet tight sensation her vaginal cavity was giving him now.\n\n\"I am not going to hurt the baby am I?\" he asked, now realizing that he was fucking a pregnant pussy.\n\nShe smiled wide almost laughing. \"No...you're fine. You can fuck me slow if you like.\"\n\n\"Do you want me to fuck you slow?\" \n\nShe gave a look of concern as she asked, \"Do you mind? I mean we can fuck hard and dirty again, but I thought we could do it nice and soft this time.\"\n\n\"You mean you of all people want normal sex with no dirty talking,\" Chris joked as he thought of some of the nasty things she had said in the past.\n\n\"This time...but tomorrow morning I want to be filthy with you again.\" \n\nChris leaned in kissing her lips and letting the passion in him escape through the kiss. He began thrusting slowly and with just enough force as to fully enter her love sheath without slamming his body against hers. \n\nThe wetness of their last fuck was there and he thought about how his sperm was now the lubricant for making love to her now. Knowing that his child was in her womb made him conscious about going too hard this time as well. His mindful movements continued as did the amazing feeling of her slippery vaginal muscles clamping from her own pleasure. \n\nDestiny began to give out a soft moan and Chris leaned in to kiss her. It was a passionate embrace of her lips as his erection steadily pushed in and out of her sloppy sex.\n\nHe felt her sex muscles massage his fuck stick again and again as he knew she was orgasming from it all. When she finally broke the kiss, she gave a look joy. \"Go ahead baby...cum in me when you are ready.\"\n\nChris kissed her quickly again as he kept the rhythm going. His cock was throbbing once again, buried deep in her each time. His breathing got heavy and Destiny once again smiled wide to the end that was soon to be spurting inside of her.\n\nHis orgasm was closer than he expected. Just as he felt the pressure to finish upon him, he speared inside of her one last time, grunting loud as she pulled him down to her lips. He felt her tongue against his as his dick erupted for the second time in her. The pleasuring sensation was echoing through his body as his balls drained their life giving fluid in her already growing belly.\n\nDestiny's moans were muffled by his lips but her hands held tight to him just as her vaginal muscles contracted from her own pleasure. When he did break away and move off of her, she gazed upon him with a wide appreciative smile.\n\n\"I needed that bad...thank you.\"\n\nChris smiled back breathing hard himself. \"I guess we both did.\"\n\n\"Now that we got that out of the way let's go get something to eat.\"\n\nChris watched as Destiny put her bra on covering her breasts to his eyes. She then put on her panties quickly as he could see his cum just about to drip out. She turned to him with a dirty smile as if she knew something he did not. \n\nHaving Destiny for a lunch date was a great break from the day and she had him laughing as she explained how funny he was when they first started fooling around. Chris did not think he was that awkward, but Destiny found his reluctance charming.\n\nDestiny also told him to expect a check in the mail every month to cover the rent for the rental he was to hold vacant. Chris did not say a word as her offer was twice as much as he would have asked any other tenant. He felt she was being generous and that if she asked he would have done it for free too.\n\nAfter eating and talking for an hour, Destiny got up from the table and kissed him hard on the lips. Chris embraced her and let his tongue embrace hers just as hard.\n\n\"I have a meeting today until late.\" Destiny then smirked as if she heard a joke. \"I will be in this meeting all day with your cum dripping out of me too.\"\n\n\"You are bad,\" Chris added, but smiling with her knowing her humor was contagious.\n\n\"If I have time tonight I will call you. Maybe even tell you about how much of your cum soaked into my panties while I was in the meeting,\" she added just as she got in the car.\n\nRight before Destiny closed the door she looked at him seriously. \"Come by tomorrow as early as you want. I need one more good fucking before I head back.\"\n\nThe rest of the day Chris thought about Destiny and how great it was to spend time with her. His energy level was high knowing that tomorrow he was going to have sex with her again. When he stopped thinking about having sex with her, he thought about the rentals and how she was going to pay extra to keep one vacant.\n\nChris knew that four of his rentals were occupied on the original plot with three more being added on. The new plot was going to have three larger homes that would be his real moneymakers. The only real problem was getting all of them ready to be rented.\n\nAppliances needed to be ordered and he only had enough money to do one rental at a time and all of the rentals needed new ones. With a click of the mouse he ordered them for one of the larger rentals in hopes he could have it filled this month.\n\nDestiny texted him late at night that she just got back to the hotel from the meeting. That it lasted all day and night and made her too tired to mess around tonight. It did make him smile when she told him that some of his cum stayed in her all day too.\n\nNot waiting for another text Chris came back to the hotel early and walked to Destiny's room. He knocked on it excited that he could see her one last time and that she was still his in some weird way.\n\nThe door swung open and Chris's eyes set on Destiny fully nude, smiling as she had one hip to the side. \"Glad to see you are early.\"\n\n\"Wow...I love seeing you,\" he admitted as he stepped in with his eyes clearly fixated on her nude form.\n\n\"I hope you still saying that when I get fat,\" she responded smiling from his compliment.\n\n\"I think you will look good with a big belly,\" Chris said before kissing her on the lips and walking towards the bed.\n\n\"Oh yeah..fat belly and big leaky tits. I doubt you will find me so hot when that happens,\" Destiny chimed in as she still kept a grin of sarcasm.\n\n\"Guess we are going to have to find out now.\" He added as his hands went to her waist to pull her towards his body.\n\nShe smiled wide and kissed him. \"Do you want slow and loving, or hard and rough?\"\n\n\"I will leave it up to you. I just want you to cum hard.\"\n\n\"Mmmmm, I like that.\" She got on the bed and then spread her legs. Her dark legs were wide open as her knees were bent with her feet still on the bed.\n\n\"Eat me out baby.\"\n\n\"Bet you missed that too,\" Chris joked as he stripped really quickly and slid his body into position between her legs.\n\n\"You know I did.\"\n\nChris began with kisses on her inner thigh. The fresh smell of her shower was there as he planted kiss after kiss on her smooth silk like skin. With each soft moan his lips continued to her dark slit.\n\nWith a small kiss on her love knob, Chris began with long wet laps on her labia before circling around her clit. Destiny was moaning and shifting on the bed with each lavish lap of her cunt. Chris just wrapped his hands around her legs, holding her in place as he continued.\n\n\"Ohhhh yes...fuckkk yes,\" Destiny moaned loud as Chris tasted her sex. \n\nNot giving up until she pushed him away, Chris assaulted her clit harder and faster with his tongue. He pulled back on her clitoral hood to expose her pink love bud to make sure it would happen fast. Destiny was squirming harder, almost trying to escape as his tongue sucked and flicked away at her sex button.\n\n\"OHHHH yes...fuck!\" Destiny screamed as she finally won out and pushed him from her snatch.\n\n\"You ready for more?\" Chris joked as he got on his knees with his erection pointing forward.\n\nDestiny got on her knees and faced him. \"I am ready. I want you to fuck me hard too. Don't feel afraid to slap my ass harder too. I like to know I am being fucked.\"\n\nChris nodded and she turned around on the bed with her ass facing him. Chris could see her ass cheeks parted and her pussy wet and ready for him.\n\nWith his body against hers he slipped his prick right past her wet love folds. The sensation of her snug and wet sex tunnel was now encompassing his shaft. It brought back memories of all the times they fucked before this, as did the knowledge that he was fucking her pregnant.\n\nChris slapped her ass and began thrusting. It was not a hard smack, but it was loud enough to her, the crack of his hand against her bare flesh. Destiny moaned and then quickly turned her head as she lifted her body up. \"That's it...fuck that pussy.\"\n\nChris shoved his body against her, holding onto her hips as her ass pushed against his body. Feeling her cunt spasm quickly, he slapped her ass again. His harder slap once again cracked perfectly causing her to moan the instant he hit it.\n\n\"Fuck...fuck...Yes, fuck that pregnant pussy. OHH yesss. You like fucking it don't you?\"\n\n\"Ohhh yes...I do,\" Chris answered as his body was now slamming hard against her.\n\nDestiny moaned again and then almost went limp as he felt her cunt almost completely close and try to push him out. She turned to him looking weak and moaning. \"You did this. You fucked a baby in me.\"\n\nChris slapped her ass again listening to the sound he had made on her skin. Holding her hips, he began driving his shaft hard inside of her. He then did it once more before getting the willpower to be racial with her as she wanted. \"You are a good black slut who wanted it too. You liked me fucking you and knocking you up.\"\n\nDestiny moaned pushing hard against his body making him feel a wetness surround his shaft. She then looked back as he still pounded away at her body. \"Oh God yes...I am so fucking bad...I want you to give me more. Fuck..fuck...fuck me like you want more.\"",
        "Chris did not say a response and Destiny dropped down to the bed again with her hands gripping the pillow. Her moans were loud and steady. Chris could feel her orgasms coming faster as her cunt walls closed in on his cock yet again. Not stopping, he continued to plow his member through her spasming sex.\n\nChris slapped her ass again hard. This was the hardest slap he ever gave to anyone. Destiny moaned just as hard as his slap. She turned to him right after looking him with weary eyes of ecstasy. \"Fuck..fuck. It's yours baby...it's yours to fuck and knock up again and again.\"\n\nChris decided to play along and asked right before hit slapped her ass again. \"What's mine? Tell me what's mine?\"\n\nDestiny moaned hard as Chris felt his cock being squeezed from another one of her orgasms. \"OHHH...Shittt... It's your black pussy baby...fuck your black pregnant pussy.\"\n\nStill gripping her hips, he pounded away harder and harder feeling his bloated member get close. Another slap on her ass only brought Destiny to a louder moan as she lifted her body up again.\n\nShe held him close as Chris paused for a moment still buried deep in her sex canal. She smiled and then kissed him moving her tongue against his. \"Get on the bed. I want to suck your dick now.\"\n\nChris pulled free and laid on the bed as Destiny got between his legs. She grabbed a hold of his shaft and immediately lowered her lips to the head. \n\nHe closed his eyes as her mouth enclosed around his hard member. \"Ohhhh yesss.\" \n\nDestiny continued moving her lips the length of his slick shaft over and over. Chris felt utterly at peace as his pressure built up. She was not slowing down either and not using her hands. \n\nHis eyes flew open as she sucked hard on his throbbing tip. Her eyes were now looking at his as his erection screamed to shoot its warm release in her mouth. He nodded his head and Destiny moved her mouth and quickly replaced it with her hand.\n\n\"You going cum?\" she asked as her hands seemed to glide up and down his spit covered tool.\n\nChris could only nod his head as Destiny smiled back at him as if she was the master of his orgasm. Her face was still close to his throbbing member as she continued stroking faster and faster.\n\n\"Ohhhh fuck...I am going to cum,\" Chris moaned out as she smiled that her work was completed.\n\n\"On my face baby...cover my face with your load.\" \n\nChris let go and watched as his cock spat out its pearly spunk all over her lips and nose. Destiny smiled and looked right at him still as another shot went right in her mouth and on her chin. Chris continued to flex and tighten as he saw a third and weaker spurt of his orgasm get licked up by her outstretched tongue.\n\nDestiny's face was covered from her nose down. She moved back still not removing her joyous smile. \"I love how that cock of yours cums. Did you like shooting it on my face?\"\n\n\"I've never done anything like that.\"\n\n\"Well, I like it from time to time,\" she answered back as she finally got up from the bed to clean up.\n\n\"I can see that,\" Chris joked as he got up from the bed and walked behind her to kiss her neck.\n\nDestiny turned around as she wiped his sperm from her face. \"You know if I had another day I would have you fuck my ass too. Was thinking about that today, but I wanted to do something dirty.\"\n\n\"Guess next time then.\"\n\n\"Oh I expect it,\" she said still letting him kiss her back and neck.\n\nChris let her get dressed and talked with her about her current lawsuit and when she would be free again. When he did leave the hotel it was almost noon and he felt like she never moved away.\n\n***\n\nChris continued to keep busy getting his one rental finished. He already put an advertisement out that it was ready to rent even though he still needed to paint a few rooms. He figured he could show it to prospective renters still even though it was not completely done.\n\nWhen the first of the month came, he now had five rentals that were ready with four being occupied. He collected rent and had enough money to start on the next two rentals. Destiny's firm paid rent and it was a much needed boost of cash to keep going on setting up more rentals. Even though the rental he was going to keep vacant was not ready, he thought she would not need it so soon. \n\nChris had his hopes up high when two different people called him about looking at the vacant rental. He thought that this was the start of making real money as the large homes he got brought in more rental income. He figured he would use the first month's income and their deposit to finish the other two larger ones before starting on the smaller trailers.\n\nEven though the house was not done, a renter could still look inside to see if they wanted it. The only thing that was left was some painting and that alone would not stop a renter from seeing if they wanted it or not.\n\nThe first people to ask about the rental was a man who seemed interested in a home for him and his new wife. Chris was eager to rent the home and cleared his schedule to meet them at the site that day. He watched as a young black couple pulled up. They looked to be in their late twenties or early thirties. He could also see their smile once they saw the house too.\n\nMalcolm introduced himself first and then his wife La'Shay. Malcolm stated quickly that he wanted to have a year long lease and he might extend it another year as they were unsure about his job moving him. He added in that they have only been married a few months and have not decided on if they even wanted to stay in the state or move to the West Coast.\n\nChris could not help but notice La'Shay was very beautiful with her long braided jet black hair. Her complexion was dark, but it seemed to highlight her high cheekbones and thin neck. She was short and petite like Sasha but her breasts looked oversized and wonderfully amazing for her frame. When she walked to the house his eyes couldn't help but gawk at the well shaped bump she had for an ass. \n\nMalcolm offered him two hundred less a month than he was asking. Chris knew his price was a little higher than other rentals the same size, but priced them high due to the location he had. The local school district in this area was considered the best and there were almost no rentals in the area because of the reason. \n\nChris said he would consider the offer and would get back to him once the other renter looked at the house. He thought that the other renter would pass or agree to the full price, if not he would rent to them at a lower price. Chris figured it was a win no matter what.\n\nAs they were getting in their car to leave. The wife tuned to Chris asking about the other two houses that were there. They were the same size and Chris knew that were next to be fixed up. He explained to her that they were going to be rented as soon as he finished cleaning them up.\n\nIt was almost dusk when the other prospective renter showed up. Chris could see the driver was a young black woman as she pulled right into the unit. The minivan she pulled in with was dented on both sides and had a cracked windshield. The muffler was hanging off and the car sounded like it was going to die at any moment.\n\nWhen she stopped, the side door opened and two small boys about five years old jumped out. They looked like twins and were playing with toys as they circled the vehicle chasing each other.\n\nShe looked even younger than the last couple. Her straight dark black hair was down past her shoulders as she was about five three. She was wearing cutoff jean shorts that were high up on her thighs as her caramel skin was visible to his eyes. \n\nChris could see her face was extremely cute and her body had definite curves to it. Her thighs were not fat, but thick. Her ass was also curved with thickness and pushed out slightly. Although she had a small gut, it did not take away any of her beauty as her weight seemed natural and sexy. \n\nHis eyes wondered to her thin top she was wearing. The shirt had a low neckline as the top of her large breasts bulged out. Chris made his glances casual as to not deter away from the fact it was business with her only.\n\nShe introduced herself as Regina, and was instantly taken by how clean the place was and the school district it was zoned for. He knew that was the same reason why Destiny picked the place. As the two kids wandered about the rental, Chris was able to ask her if it was just the three of them. She said it was and that her job was very close by.\n\nThey were in the living room of the rental when Chris brought up the price. Regina closed her eyes and then opened them with a soft weak look. \"Please, can you take less?\"\n\n\"How much less?\" he asked, wondering if she was maybe off by a hundred and not two hundred that the couple was off.\n\n\"I can afford six hundred,\" she answered looking worried.\n\nChris hated the look she was giving him and knew from the mountain of things in the vehicle that she was probably almost homeless. His heart gave way to consider it, but knew the other couple had deeper pockets and she was off by a lot more. \n\nHe swallowed hard as he needed to make a stand. \"That's too low. The last person to look at the place offered me more though. I am afraid I can't do six hundred.\"\n\n\"Please Sir...Mr. Silvo. The boys can do some work around the yard or something. I have everything I own packed up. I need them to go to this school district too.\"\n\nOnce Chris let his eyes drift to her chest he instantly regretted it. They were large and her bra was visible through the shirt making her breasts seem so inviting to the eyes. With the glorious sight of her chest, it was still a choice he wanted to take back. \n\nRegina looked at him and shifted her weight to one foot as her eyes rolled a little. \"Are you some perverted white boy or something?\" \n\n\"Noo. no. I am sorry but I can't,\" Chris answered as he made sure his answer went back to the business and not his wandering eyes.\n\nRegina's hand went to her hip as her eyes stared back at his. \"I don't get paid that much. Six fifty is the most I can afford and still put food on the table. Can you be nice and take it?\"\n\n\"I am sorry, I can't,\" he answered, glancing again at her chest and then down at the floor.\n\nRegina shifted her body again. \"You into black girls?\"\n\n\"What?\" Chris answered quickly as he gave a bewildered look at her.\n\nRegina looked over at her two children. \"Ty...Devin, get in the car while mommy talks to the man.\"\n\nChris felt he should have stopped but he was a tad bit curious to what she was going to offer. He did not want to be rude and he did think she was going to beg him to come down or discuss price with a sterner tone.\n\n\"I saw you look at me. You want me to suck your cock or something?\"\n\nChris stepped back feeling his heart pound with excitement. He was put on the spot and now he wondered how to get out of it. \"Regina...I don't think this is the place for you.\"\n\nRegina took a deep sigh like she was annoyed and stepped forward lifting her shirt up exposing her bra that held back her sizable breasts. \"Don't be a bitch. Let me suck your white dick so I can get this place.\"\n\nChris gave another confused look wondering how it progressed so fast. \"Wait...wait, you're going suck my dick so I will lower the rent?\"\n\nRegina did not wait and took another step forward and then bent down to her knees. She looked up annoyed. \"You got something with this black girl sucking your white pecker?\"\n\nChris knew he got lucky with Destiny, but sometimes wondered if it was right. Now he thought he could stop it from happening again. \"No...I just don't think we should go to sex for rent.\" \n\nAlthough Chris protested, he did not move her hand away as she pulled down his zipper. She looked at him again with a half smile. \"Mmmm...you got a big ole white dick too.\"\n\nHer lips opened and he felt her warm mouth encompass his member. The relaxing and pleasurable sensation of oral sex hit him as she moved back and forth down. Her lips tightened as saliva began to coat his tool. He looked down in defeat as he knew she was not going to stop no matter how much he protested.\n\n\"Ohhh fuck yes...\" Chris moaned out not caring who heard him. \n\nRegina glided her mouth along the length of his shaft as he lost himself in the joy of getting head. Her hand cupped his sack rolling her fingers through his sensitive skin. The sound of her sucking filled his ears as the euphoria of tingly pleasures washed over him.\n\nChris wondered how far he could go and although getting a blowjob was great, the sight of her wide hips and thick ass made him reconsider what he wanted. He pulled away and looked down at her. \"Turn around, I want to fuck you.\"\n\nWhen Regina got to her feet without protesting about sex, Chris knew it was going to happen. The power over her fueled the exhilaration in his body. She moved a few feet to the counter that divided the kitchen and living room and put her hands on it to brace herself as she presented her backside.\n\nChris was amazed at how her naked ass looked. She was not thin by any means but her large ass was free from cellulite waves too. His eyes grew wider as she bent over a little more for him to see her pussy lips just budding out from her large backside.\n\nHe stepped forward and grabbed her hips. He did not penetrate her yet as her hands were still on the counter. Her face showed a somber look of defeat as he knew she had to give it up to him. He thought he would feel guilty, but his mind was only filled with the need to have her.\n\nChris opened her ass cheek with one hand just so he could see her dark love folds before putting the tip of his hard member at it. Her sex relented quickly as he pushed in. He did not stop until he was buried deep inside her love canal. \n\nRegina was tighter than he expected and could feel the snug warmth of her sex. He put his hands on her hips and began to methodically pound against her meaty ass. Her head went down a little as he bucked against her body as her ass absorbed all of his thrusts.\n\n\"Ohh...mmmm...ohhh...fuck,\" Regina moaned out as she finally turned to him with her helpless expression.\n\nThe utter satisfaction of getting her was now upon him and Chris wanted to take every advantage he could. He grabbed more of her soft hips as he began to slam harder and harder. Her ass seemed to absorb everything he gave as the sounds of their bodies slapping against each other grew louder.\n\nWhen she began to moan with each thrust inside of her, Chris knew she was enjoying it to the best she could. Her wet entrance was firmly gripping his shaft too as her sex fluids coated his member. Not going slow either Chris relied on long, fast pumps making sure he hit home deep inside her fuck hole.\n\nRegina was down to her elbows on the counter as Chris was still slamming into her wildly. He felt her wet pussy grip him again and again and loved how her body seemed to just push back as he bucked his hips into her. The sensation was so intense he decided not to hold back or delay his expulsion of sperm.\n\nThe familiar sense of his impending orgasm grew closer and he was not going to tell her that her womb was going to be dealing with his white love bearing seed. He wanted her to be surprised when her snatch was being pumped with his DNA. \n\nChris finally gave way to his body's needs and slammed home deep inside her cunt. He wondered how deep the tip of his cock was when it shot out. There was no going back and he instinctively pushed and held his tool in her, making sure his seed had a direct path to her womb.\n\n\"Ohhhh yes...fuck,\" Chris moaned as he held her wide hips firmly so that she was forced to take his cum. Holding her steady, he made sure his cock gushed out while his balls emptied his fertile swimmers in her sex tunnel. With his prick wedged so far in her sex, there was no doubt as to the effectiveness of making sure his sperm had an easy path for them to find an egg to latch onto.\n\nRegina turned to him in fear as her mouth slightly parted as if she was fighting against her own pleasure. \"You came in me. Why? Why did you not pull out?\"\n\nChris backed away and looked at her as her ass was still in view. \"I never pull out.\"\n\nShe turned showing her sex to him as her hands were pulling up her shorts. \"You asshole. I am not on birth control...Oh my God...you really came in me.\"\n\nFucking her from behind made him think about how he needed a steady piece of ass in case Salina was not around. The only concern was not giving the rental way like before though.\n\n\"The place is yours though. Soon as you pay this month's rent you can move in,\" Chris replied pulling his own pants up.\n\nRegina reached for her purse and opened it and then glanced at him. \"You're a real fucking asshole.\"\n\nShe counted out the correct amount as Chris finished getting dressed. He felt that she did enjoy it, but was just pissed that he picked where his orgasm was going to go. He hated pulling out and using condoms since Destiny introduced him to bareback sex.  \n\n\"Well, next month you are going to have to make up the difference again,\" he stated knowing that she was going to have a reaction to what he told her.\n\nRegina's eyes bulged as her body became animated. \"What? I fucked you already. You fucking busted your white cracker nut in me and everything. I am not doing this fucking again.\" \n\n\"Look, you're not going to get a better place for anything around what your paying me. Plus you offered sexual favors first, not me. This place will easily be taken if you don't want it too.\"\n\nChris knew that she was getting a deal and that he could ask for a lot more too. He did not ask for sex whenever he pleased and thought he was being generous with asking for it once a month.\n\nRegina put her hand on her hips as her head was towards the side giving a dissatisfied expression. \"What about a blowjob instead?\"\n\n\"With the way you felt, and look...I don't think so. That and I am not even asking for a deposit,\" Chris answered smiling, knowing that he complimented her and was helping her out as no other landlord would rent her a place this size with no deposit.\n\nRegina closed her purse and then opened the door as her kids were now knocking to be let in. She turned to him still looking upset a bit. \"I get paid the first of the month. Come Saturday morning after the first.\"\n\nChris nodded and handed the keys to her. He walked out knowing that he won the discussion and that one Saturday a month he was going to fuck the shit out of her. \n\nHis new rentals were less than a mile from his other houses. Regina's rental was the only one occupied but the other two were there. The rentals were spaced apart as Chris knew this land could fit at least ten additional rentals the more he thought about it.\n\nChris called Malcolm to let him know that the rental was not available. La'Shay called back instantly asking to see the other rental that was not yet finished. He agreed and then told her to come by tomorrow to look at it.\n\nThe next day he got a message from La'Shay that she and her husband were coming out to look at the house and put down a deposit for next month. Chris agreed and drove out and waited for them to come. Regina's minivan was not there and assumed she was at work.\n\nA car pulled up and Chris could see it was La'Shay without her husband. He got out and greeted her. She was wearing a purple sundress that showed no cleavage, but he could still see that her chest was pushing the free neckline out. Her make-up was done and she was wearing perfume that smelled like sweet roses.\n\nLa'Shay walked around the house for about a half an hour inspecting all of the corners and rooms thoroughly. She then walked back to Chris as he waited for her to finish. \"This place is perfect. Can you do seven hundred?\"\n\nChris knew she was a hundred more than their last offer, but still down from his original price. It was not much of a difference though and he knew Regina was getting a real bargain too.",
        "\"I can. I can write up a lease for you in a few days and then you can move in next month,\" he said with a smile on his face, letting her feel that she got what she wanted.\n\n\"I have three dogs though. Is that going to be a problem?\" La'Shay asked as her face twisted with fear he would say no.\n\n\"No...I don't allow dogs at all. If I did it would be one dog and your deposit would have to be doubled,\" he replied, knowing the full damage a dog could do and she had three of them.\n\n\"Please...they are very friendly. I can add more of a deposit,\" she asked again still looking worried.\n\n\"My insurance policy lets me allow my renters to have one dog as long as it is not a pitbull or anything similar to that type of dog. What kind of dogs do you have?\" he asked wondering if he could bend if they were small dogs that could be kept inside.\n\nLa'Shay looked down and then gave a nervous smile. \"Two are pitbulls and Drogo is my husband's boxer.\"\n\n\"I can't. No way. My insurance will cancel me. I can't allow you to bring those dogs here. The boxer I can allow, but your deposit will be doubled. If there is no damage done at the end of your lease, you get your money back though.\"\n\n\"Is there anything you can do? I can't give them away...and I can't put them in a shelter,\" she stated, looking visibly sad at his answer.\n\n\"There are other rentals that allow for dogs. I can't though,\" Chris said again as he knew he was not going to budge on this issue.\n\n\"Not in this area though and not with the yard you have now. Please I will do anything,\" pleaded almost looking sexy as she begged.\n\nChris then realized that if she would pay a bigger deposit it would cover the cost of getting his other rentals setup and fixed. He figured it would be for a year only and then he would not let them sign another lease for the second year unless they got rid of the dogs.\n\n\"Would you pay a bigger deposit?\" he asked, hoping she would say yes and thinking about what needed to be ordered for all of his new homes.\n\nLa'Shay's eyes grew wide and a smile appeared on her face. \"I can do a bigger deposit...but it would be for all three dogs though.\"\n\n\"All three dogs, but it would be three thousand I would need.\" He replied knowing that number would get him on the road to fixing everything he needed.\n\n\"I can do that much. I was thinking maybe one grand,\" she answered as her smile disappeared.\n\n\"That would be my only offer,\" Chris said knowing that it was not worth it for anything less.\n\n\"I don't have that much money. My husband already wants me to get rid of them. Can you take some form of collateral though?\"\n\n\"I am not a pawn shop. I can only take money,\" he answered looking at the door, knowing this negotiation was going to end with no deal.\n\n\"Is there nothing else?\" she asked as she seemed desperate.\n\n\"I am open to suggestions with you,\" Chris said and then instantly regretted saying it. It seemed like he was asking for something, but he meant it in a harmless way.\n\n\"What do you mean?\" she asked as her eyes grew wide with curiosity.\n\nChris looked and felt nervous as he knew she was digging for a hidden meaning that he did not intend to say. \"Nothing...I did not mean anything.\" \n\n\"Were you asking for sex? Is that it? You want to have sex with me for letting me keep my dogs?\" she said looking grossed out that someone would ask her for sexual favors.\n\n\"No..no. I am just saying that if you have any other ideas I would be open for them,\" Chris said making sure to keep his eyes on her and not her chest, knowing he made that mistake before. He instantly thought about Regina and how he just fell into this pit trap.\n\n\"Would you though?\" she replied as Chris could see her eyes showing interest.\n\nChris finally let his eyes drop to her large breasts that were outlined in her dress. The thought of what she looked like nude danced in his thought process. Images of her pussy and what it looked like not to mention the feeling of fucking such a beautiful woman ran through his thoughts. \n\nKnowing it was wrong crossed his mind, but the need to have sex with her was greater. She was married and every other girl he was with was single. He was only bending a rule with allowing more than one dog, but that was not the issue that bothered him the most. \n\n\"I would take a thousand for a deposit too though,\" He offered still holding onto hope of getting his rentals done while his need for sex took over.\n\n\"Okay, fine. But it has to be quick.\"\n\nChris felt his mind go to mush with the thought that he was going to fuck her. She was easily the hottest girl he had ever met and now she was going to have sex with him. He looked around thinking of a place to fuck.\n\nLa'Shay stepped forward putting her hand on his chest. \"Let me see what you have.\"\n\nChris did not say a word as she kneeled down right there in the living room and unzipped his pants. Her hand fished out his new growing erection. \"Oh MY! It's really big...you got a big penis... for a...wow!\"\n\n\"Were you about to say for a white guy?\" Chris asked as he felt his member grow hard in her hands.\n\n\"Sorry. I just did not think white guys were so endowed. I know I am being stereotypical. It's really nice looking too,\" La'Shay said as her smile made him feel she wanted to fuck more now.\n\nShe stood back up and pulled down the top of her dress to reveal her very large breasts. Her dark skin was flawless as her nipples topped two perfect globes on her chest. \"You like big boobs?\"\n\nChris smiled and then put his mouth right on her nipple sucking it. \"OHHhhh.\" Was her response as she moved her hand to his member slowly stroking it.\n\nLa'Shay then moved to the side of the room and grabbed the ledge that separated the kitchen from the living room. It was only a few feet and acted as a counter too. She then pulled her dress up for Chris to see her dark red thong that was wedged in her ass crack.\n\nShe pulled them down to her ankles and Chris walked over feeling her smooth skin as he caressed her ass. She smiled and he then moved his hand to her breasts cupping them. The feeling of her large breasts in his hand was amazing but he only did it for a moment before aiming his tool at her ass.\n\nLa'Shay bent over more and then pulled her cheeks apart slowly allowing him to see her large, dark hanging pussy lips. Chris slid the tip of his cock up and down her slit before resting it right at her entrance. He then eased himself inside of her feeling the sensation of entering a warm tight pussy again as she made no comment about him going in bareback.\n\n\"Ohhh God...Ohhh dear lord you're really big,\" La'Shay moaned out very loud.\n\nChris was going slowly, making it count as he slid deep in her, feeling her vagina muscles open up and take what he was giving her. His hand went to her hips holding on as his guided his male muscle deep in he again and again.\n\nHe moved his hands from her hips to her breasts feeling how heavy they were and how they hung so perfectly. He did not stop methodically driving his member inside of her love nest either. He knew she was loving it too as her moans grew louder as well as the sensation of wetness surrounding his prick.\n\n\"Oh...God...Ohhh God...Ohhhh\" she moaned out as Chris could feel her pussy tensing up hard as he pushed in and out of her. It was almost too tight as he continued to push past her hard orgasm. \n\nNot stopping as her pussy muscles clamped around his shaft, he pushed through and watched as she went weak from feeling him inside of her. She then turned to him with her mouth open and moaning. \"Ohhh Godd...ohhhh. It's really THICK tooo.\"\n\nIt was nonstop as she now held onto the room divider for dear life as Chris plowed through her multiple orgasms. The wet sensation was amazing to him as his cock rampaged in and out of her twat. \n\nHe thought about pulling out but wanted to feel the ultimate pleasure of finishing inside a girl's pussy while still fucking her hard. The feeling his cock got as it blew its warm load of fertile jizz inside a girl's reproductive system was unmatched. He could feel it was building up too and he wanted it to go far into her body too.\n\nChris made sure his hands were on her hips now as his body instinctively began to pound against her backside harder. She was still moaning as he did the same. She quickly turned around in horror as he knew he was past the point of no return.\n\nLa'Shay made no effort to move away or stop him as his sperm was sent on its mission to find something to inseminate. Chris did not say anything either other than moan as his cock unloaded more and more warm fertile fluids into her womb. He even pushed in slightly feeling his orgasm demand that his shaft be fully entrenched inside of her too.\n\n\"Ohhhhh God...I came. I came really hard too,\" La'Shay moaned out softly as she finally pulled away.\n\n\"Felt amazing,\" Chris admitted as he watched her just drop her dress down to cover her now filled sex.\n\nShe quickly pulled up her bra and her dress. \"I got to get going. I am late. Can I text you the details about the money?\" \n\nChris pulled up his pants and looked at her as she grabbed her car keys from her purse. \"Sure. Not a problem. I will have everything ready for you to sign too.\"\n\n\"Thank you so much,\" La'Shay said as her hand went to his softening manhood gripping and then moving her lips to his kissing her.\n\nHe did not know what to make of it. She did not seem overly upset about him spunking inside of her nor did she seem bothered by him just fucking her. Her kiss on his lips was one thing, but her grabbing his shaft made him think she was happy that it happened.\n\nThat night Chris got a smiley text from La'Shay and a message that she will have a check for him soon. It would be for both the first month's rent and the deposit they agreed to.\"\n\n\"I was glad I could help out.\" Chris texted back wondering if she would respond to it.\n\nShe texted back late as Chris read it when he first woke up. \"I am glad we came to an arrangement too.\"\n\nHe spent the rest of the week fixing up the rental for La'Shay and her husband. Chris needed to do some drywall and paint before he could be ready to put in the carpet. The only big expense was the appliances and setting up the heat and ac. It was worth using the last bit of credit on his card as he calculated the rental income from the units he did have rented. Even with Salina's rent being absorbed, the money coming in was worth it.\n\nIt was a week since Chris fucked Regina and La'Shay. Everyday he worked on the other two rentals with every bit of time he had. Regina's minivan was not there as he only assumed she worked during the day and probably came home at night some time. He was almost done with La'Shay's rental when he decided to order the appliances and have them delivered.\n\nOn Sunday Chris showed up early to the property. He rush ordered the appliances and the delivery was going to be sometime before nine in the morning. He pulled in and for the first time since they fucked he saw Regina's minivan in the driveway.\n\nHe quickly thought about how he was going to stop by in two weeks to collect the rent for her, and make her work off the difference. He was going through his phone when he heard her door close. His eyes darted up to see her already walking towards him.\n\nChris leaned away from his car and took a few steps towards her. \"Hey there.\"\n\nRegina's face looked bothered as she trotted out in sweatpants and a loose t-shirt. Her hair was up in a clip that looked like it was done in haste. \"You out here for me?\"\n\nWithout showing emotion he could see she was bothered by his presence. \"I have a delivery coming today...nothing else. You need something to your place fixed or anything.\"\n\nHe knew his answer would detract her from thinking he was up to no-good and even wondered if she would apologize from storming outside to confront him. \"Ohhh..okay. I...I do have a problem with the drain being slow and all. Since you out here, guess you could fix it.\"\n\nChris smiled as he watched her facial expression break from being upset to apologetic. \"Yeah. Looks like the delivery is delayed a bit. I could look at it now if you want.\"\n\nHe followed Regina to her place walking behind her. His eyes could not help but stare at her large ass as it swayed and bounced with each step. Her grey sweat pants were loose but it still hugged and clung to the curves that defined her backside.\n\nChris stepped in to see a very clean place. Although there were kids toys strew about the living room floor, the place was quite clean in the kitchen. The place sounded quiet and he figured the kids were asleep.\n\nOnce in the kitchen Chris went straight to work. If it was Salina, it would be a ploy for sex but he felt Regina was only interested in her sink being fixed.\n\nRegina leaned against the counter facing him. \"So you have a girlfriend?\"\n\n\"No. Not anymore,\" he answered as he knew she was still wondering about him.\n\n\"She dump you or did you leave her?\"\n\nChris pulled himself free of the cabinet to look at her. \"She moved away to start her career. It was a friendly split.\"\n\nHe stood up and then tried the water to see if the drain was flowing. He then looked at Regina as he knew he needed to get some parts and tools from his car.\n\nJust as he stopped the water she probed again. \"You mind if I ask if she black or white.\"\n\nChris looked at the drain and he wiped his hands dry on his pants. \"She was black. One before her was white. Color doesn't matter to me.\"\n\nHe walked past her thinking that the drain was a quick fix and knowing Regina must be thinking about him and that he wanted to fuck her. He walked in and she was still sitting at the chair waiting for him to return.\n\n\"Going to change out the gasket and clean out the pipe. Should work like new after that.\"\n\n\"So you really going to bust your nut in me every time?\"\n\nChris had his pipe wrench out and was about to loosen the pipe when he answered, \"Yep...love the way it feels.\"\n\n\"I can't afford to go on the pill this month. Can you pull out next time at least? Cum in me after that when I am on the pill.\"\n\nChris freed himself of the cabinet and then turned on the water to watch the drain work perfectly. He then turned to her after her plea. \"Not a chance. Gets me even more excited knowing that you are not on the pill.\"\n\n\"You crazy,\" Regina spat out as her voice was sounding confused.\n\n\"All fixed,\" Chris stated as he moved away from the sink.\n\n\"So you getting all excited knowing that when you fuck me I won't be on the pill?\"\n\nChris smiled at her and then answered. \"Getting me excited now knowing your worried about it now and that you won't be on the pill next time.\"\n\n\"So you tellin me that you hard right now thinking bout knocking me up?\"\n\nChris put down the wrench on the table and then reached for his zipper. His fingers were on the zipper when he replied back with a wide smile. \"You want to see it hard?\"\n\nRegina's face stood firm with disbelief. \"You lying.\"\n\nChris could feel his erection only at halfway from the conversation but figured she might not know the difference. He then unzipped his fly and fished out his prick. He pulled it out and flopped it out right in front of her face.\n\nShe smiled and blushed as she sounded amused more than shocked. \"Shit...your white thing is hard.\"\n\n\"Told you,\" Chris answered as he moved closer to her. \n\n\"You really want to fuck me wit that thing?\"\n\n\"I do.\"\n\n\"Needs to be quick then, my boys will be home soon.\"\n\nChris did not say anything as she led him to her bedroom. He leaned in kissing her and for the first time felt that she wanted this just as much as he did. Her tongue mashed against his as her hands stroked his member to a full erection to be proud of.\n\nShe broke the kiss and smiled as she pulled up her shirt to reveal her large breasts. Chris gazed as her big puffy nipples sat upon perfectly rounded breasts. They were puffed out and darker than her caramel skin tone and looked ready to suck on. \n\nHe moved to sit on the bed and reached out to pull her towards his lap. Her tits were now eye level with him as she smiled from his reaction to her chest. Chris immediately put his lips to her large nipple and sucked. Her soft nipple filled his mouth as he suckled. His hands caressed up and down her back while his lips did the same to her breasts. Not stopping, his hands slid down gripping her ass and feeling his fingers sink in.\n\n\"Like dat ass don't you?\" she moaned as Chris had his mouth on her nipple still.\n\nHe moved his lips away from her nipple. \"I love that ass.\"\n\nRegina slid down her sweats to reveal her bare pussy to him. Chris began to rub her slit while his other hand caressed her breast. \n\nRegina instantly moaned as Chris gave her body instant attention. \"Ohhh fuckkkk.\"\n\nChris stopped only to pull down his own pants and free his erection. Regina looked down at his dick and then looked at him. \"Your white cock seems to want this pussy.\"\n\nChris pulled her down aiming the tip of his male spear towards her honey hole. \"It does. It wants it bad.\"\n\n\"Ohhh God...shit it's big,\" she cried out as Chris pulled her right on his lap penetrating her love nest as her body weight now rested on him.\n\nRegina's knees moved to the bed as Chris pumped his hips upward. Her body was grinding back and forth matching his thrusts. He could feel her wet sex take his thrusts with ease. \n\n\"You really going to cum in me?\" Regina moaned as Chris felt her snug vaginal cavity closing around his shaft.\n\nHe knew she secretly wanted to be a told what to do. That the act of being forced to accept surrender of her body drove her wild. Chris just did not know how far to go and to when to stop. His only needs seemed to change too as he felt that forcing her to take him deep turned him on more than anything else.\n\nChris continued to push up against her grinding sex as he felt her wet love hole enjoying what was happening. He then looked up at her as his fingers pulled hard on her nipples. \"I am going to cum so far in you too.\"\n\nRegina's eyes closed as he felt her vaginal muscles spasm with pleasure. He did not stop though and pushed through her orgasm making her moan deeply, pulling on her nipples trying to make her feel like her body was his to use.\n\n\"Shit, shit, shit...fuckkk,\" Regina cried out again as he began slamming home inside her fuck hole making it impossible for her to clench on his manhood to stop it.\n\nChris loved how wet she was getting as he was now gliding in and out of her with almost no friction. Her love opening was now making a sloshing sound as he thrust far into her. The urge to cum deep in her was building and now he thought about truly knocking her up from this.\n\n\"You feel it...you feel me throbbing inside you?\" Chris asked as he knew his pulsing member was almost there.\n\nRegina nodded her head as he mouth was open from the pleasure that was being fucked into her. She then closed her eyes as Chris felt her trying to squeeze her cunt muscles again against his invading erection.\n\n\"Do it...if your gonna do it in me, then just do it,\" she moaned loud as Chris could feel his own need to release match hers.\n\nHis muscles tightened and his own moan was as loud as hers. He then felt his prick give way and spurt its life giving seed inside of her. The more he pushed the greater the sensation was. In his mind the intense feeling he was getting was from her tight birth canal milking his white load inside of her wanting more. \n\nChris grunted again as he felt his member spurt out another warm dose of pregnancy worry as he knew she was being inundated with white swimmers looking for something to latch on to. The utter amazing pleasure his cock got from unloading his seed into her made him think there was no greater high.\n\nRegina looked down in shock but it was short lived as her mouth opened in a soft moan. \"Ohhh fuck...your dick is deeeeeppp too.\"",
        "Chris leaned forward a little so his lips could kiss hers. His hands went to her back and held her as he let his member finish the deed of sending the rest of its fertile load inside of her. His cock pulsed again and he just continued to kiss her, feeling her moan into his mouth as she seemed defeated into accepting his love nectar in her.\n\nRegina broke the kiss and looked at him worried. Her voice still moaning, \"Oh God...ohhh...I stillll feel it...so much fucking cum in me.\"\n\nChris held his hard prick deep in her as he looked at her with her scared face that had a hint of pleasure. \"Just relax and let it happen...just enjoy feeling it happen.\"\n\nRegina nodded her head as her mouth was still open as a few more moans came out. \"Ohhh...Oh Goddd. Fuck it's a lot of cum.\"\n\nShe swallowed hard as Chris felt his male tool was done spewing inside her reproductive system. \"For a girl that did not want it, you sure did enjoy it.\"\n\nRegina gave a coy smile and replied. \"For a white guy, you really know how to fuck a black girl. But I be serious about the not being on the pill.\"\n\nChris smiled as he knew she loved it. \"I know you are serious, but I am still going to cum inside of you no matter what.\"\n\n\"You got something for gettin me pregnant and all?\"\n\n\"I just love the way it feels. I think you liked it too,\" Chris replied smiling deviously as he knew she was going to have to admit she got off from him ejaculating inside of her.\n\n\"Well, enjoy it this time. I am going on the pill as soon as I can now,\" Regina answered back with a half smile.\n\n\"Guess I got one more shot in two weeks then on that Saturday after the first,\" he joked as he wanted to hear her response.\n\nRegina gave a sly grin. \"I will be nice and all. Give you another shot this Friday. Kids be with my mom's for the weekend.\"\n\n\"Just Friday night?\" \n\n\"Be wanting me all weekend?\" she asked, looking surprised that he wanted more time.\n\nHe smiled back running his hand over her ass enjoying the feel of her skin. \"I got nothing else to do. Besides I think you will like it.\"\n\n\"So you want to spend the weekend trying to get my black ass pregnant?\"\n\n\"That and maybe dinner every night, a movie maybe.\"\n\n\"You crazy.\" Regina smiled and then finally lifted herself up. \n\nChris watched as her pussy came into view. Her shaved pubic region came into clear view. Her skin glistened from their sex as he could see the first drop of his cum make its way out past her exposed cunt lips.\n\nRegina looked down at her sex putting her hand to the cum that was leaking out of her. \"Fuck, you really did cum a lot.\"\n\nChris smiled. \"I blame it on you. You got me excited and all.\"\n\n\"So it's my fault you have a thing for black girls and having your cum in their pussy?\" she joked back, showing a big smile as her hand held her sex.\n\nChris quickly thought about fucking her again, but the sound of a truck pulling into the lot broke him from his thought of more pussy. \"Shit, I have to get going.\"\n\n\"Next Friday then?\" she asked.\n\n\"I will be here. Figure around six or seven,\" he replied as he hurried to get his clothes on.\n\nRegina opened the door for him and Chris was outside in a few minutes. He walked over to help unload the truck when he looked back at Regina's place to see her stand in the door smiling at him. He knew she wanted more and was okay with him unloading his orgasm in her.\n\nChris spent the rest of the day thinking about Regina. The rental needed only another week before being able to rent it to La'Shay and her husband. The third and last rental was now his concern as was the trailers on the other lot. One of those trailers was already claimed too by Destiny's firm.\n\nThe rest of the week Chris thought about texting Regina, but decided to act like he was busy hoping the no communication would make him more desirable to her. \n\nDestiny did keep up with texting though as she began sending pictures of her belly with messages about how she wanted him. Chris thought about masturbation and even reciprocated pictures of himself back to Destiny of his morning erections. Destiny in turn sent him a plethora of nude pictures making sure every body part was photographed.\n\nOn Wednesday Chris made his way to the auction only to help his uncle move something if he won a trailer or two. He did not expect to bid or even win anything. But when the auction for a duplex in a middle class neighborhood came up, it was too good to pass up. \n\nNot only did he use his car payment money, but all of the money he was going to use to buy appliances. The only hope of getting things done was the deposit La'Shay was going to give him.\n\nThe hammer dropped and Chris was only thinking about the end result of having a duplex that could bring in even more money. Each part of the rental was more than any of his other rentals too. Even the fact it would require more time and money to fix than he had still did not deter him from buying it. \n\nThe next day Chris made his way to see his new house that he purchased. It was his first actual house and it was a new kind of problem for him. Not having to worry about transportation was good, but the house needed a lot more work than he thought of. The double income was great, but only if he could get the repairs done.\n\nChris got a call from La'Shay that she could meet him tomorrow morning to give him the deposit and sign the lease agreement. Knowing that the money was coming in made the gamble of buying the new house worth it. The only issue now was what to fix in the budget he had to work with.\n\nLa'Shay pulled in by herself and Chris watched as she got out of the car wearing scrubs. He did not think she was a doctor, but then it would seem to fit as she was able to part with money just for her dogs. \n\n\"I did not know you are a doctor?\" he asked, thinking in his mind about doctors being old and stuffy.\n\nLa\"Shay smiled wide. \"I am a dental assistant. I am just finishing up dental school too.\"\n\n\"Ohhh okay. Here let me show you what is done,' Chris said waving his hand for her to follow him inside.\n\nOnce inside Chris did not close the door and stayed in the living room close to the front door. He wanted to keep things professional and nice and figured last time was just a one time thing. Although it was an amazing fuck, he had not counted on ever doing it again.\n\nHe then pulled out a few keys showing her. \"This is the key to the back and this one is for the front door.\"\n\nShe handed over the check and Chris could see it was the amount he expected. He was already thinking about what he needed to buy with it today just as soon as he could get to the bank.\n\nLa'Shay took the keys and smiled. \"So do you work another job, or do you just rent out homes?\"\n\n\"I was in college, but now I just do this.\"\n\nLa'Shay smiled wide at him. \"So you don't have anywhere to be right now?\"\n\nHe looked at her and could see a glint of evil intentions, and then thought she could just be asking. \"Not really...just fixing other rentals right now.\"\n\n\"So you have time to fix something here?\" La's Shay countered as her face made a smile of lustful desire while her finger went to the waist band of her scrubs pulling on it slightly.\n\n\"You want to do it again?\" he replied, thinking that it was a one time fuck and there was no strings attached and she did not need to bargain for anything.\n\n\"Just a quickie before I have to be at work. Come on, I know you liked it last time.\" \n\n\"You sure? I mean it was really good last time, but I just assumed...\"\n\nLa'Shay interrupted him. \"You think too much. Now get your pants off and fuck me.\"\n\nChris thought about her marriage but his growing member denied him the ability to think rational. The only reasoning he could do was think that if she wanted it then he should give it to her.\n\nLa'Shay took a step closer pulling him by his shirt and began kissing him as her hand went to his bulge in his pants. Chris could only think about how great it felt to fuck her before and wanted to recreate the encounter now.\n\nHe moved her to the same ledge as before and La'Shay stopped him and went to her knees unzipping his pants. She fished out his erection and looked up at him. \"Can't believe you have such a great dick.\"\n\n\"Ohhhh yess,\" Chris moaned as her mouth instantly took him in before he could respond to her professing her love of his manhood. She was bobbing her head fast as he felt his entire shaft get the pleasure of her lips and tongue.\n\nLa'Shay was back at her feet and ditched her bottoms while moving, turning around to face the ledge like last time. Chris could not help but stare at her brown skinned ass as it was now presented to him. \n\nHe slipped his hard member right inside of her, feeling her wet slit easily open to accept his member. She moaned and looked back with a lustful gaze of being a slave to his cock. Chris was only rocking against her slowly wanting to feel her sex take every inch of him.\n\nHis hands went to her hips and like before he began to ram against her body sending his tool into her far depths while feeling the pleasure of her body. He was not slowing down, but also not ramming too hard. The utter feeling of having her tight sex cavern take his length was amazing and only pushed him to try to go further inside of her.\n\nLa'Shay was moaning with each crash of their body and his own breaths were labored with her. Over and over he could hear her soft moans grow louder until she was moaning loud enough for someone outside to hear.\n\nNot telling her when it was going to happen but only giving her a hint when he began to grunt a little and go faster. She turned to him nodding and moaning with him. Without a warning, he felt his sexual urge to finish come upon him like a speeding train. He only pushed in and let go.\n\nLa'Sahy moaned and closed her eyes and Chris grunted with her moans as his orgasm was being shot into her. Not stopping though, Chris continued to fuck her, slamming her twat as his warm cum was being sent inside of her. It was only when her body began to shudder from it all did he finally stop and keep his manhood wedged inside of her sex.\n\n\"Did that do it for you?\" he asked smiling, knowing full well that she had an amazing orgasm.\n\n\"It did. I so needed that. I would love to stay and talk but I am going to be late for work,\" she replied smiling and then pulling away from him.\n\nChris watched as she just pulled up her bottom scrubs and walked out the door not a care in the world that his seed was deposited inside of her.\n\nThe next day he needed to get some drywall and decided to measure out how much was going to be needed in all of his unfinished rentals. After a quick measure, he decided to see if the heat and air worked. When he found out that the outside unit was making noise he looked over to see \n\nRegina walking out to greet him. He knew he was done for the night because he said he would spend time with her. \n\nShe then approached him and asked. \"Go out and eat, or I can cook you something?\"\n\nHe looked over at her with a cheerful gaze. \"You know I am a sucker for a home cooked meal.\" \n\nRegina smiled and swayed her head. \"That, and my pussy it seems.\"\n\nChris smiled even wider as Regina joked. \"It seems so.\"\n\nShe smiled and motioned for him to follow her back to her place. Chris followed her looking at her jean shorts as they displayed a lot of her thighs and made her ass even more delightful to look at as it swayed and bounced while she walked.\n\nChris stepped into the rental looking at the living room floor as it was covered in toys.\" Regina looked at him and then at the mess almost embarrassed. \"Let me clean up real quick.\"\n\nNot waiting or caring about the mess he grabbed her arm to gain her attention. \"No need. Is your bedroom a mess?\"\n\n\"You want to do it now? I thought we would eat first. I was not expecting you until later and all.\"\n\n\"Me too, but I needed to look at something and saw you were here.\"\n\n\"Let me get dinner going first and then we can start,\" Regina replied, looking at him and then at the mess in her living room.\n\nChris thought about being spontaneous and how some girls liked it. He felt he was never really a quick on the fly type of person until Destiny. He then looked at Regina and wondered if she had a long day and would probably like to be taken right there and shown some pleasure of her own.\n\nHe walked right up to her wrapping his arms around her waist. He moved his lips to hers not even stopping as she gave him a confused look. She did not break away though and he continued until his tongue was rubbing against hers.\n\nChris then took control and led her to the bedroom. She broke the embrace but still moved backward following his lead. \"Now? You want to fuck now?\"\n\nOnce in the bedroom Chris reached for her top. His face beamed with joy as he answered her question. \"Fuck later...right now I am going to eat your pussy.\"\n\nRegina looked at him worried. \"Please..let me take a shower at least. We can fuck now but let me clean up first.\"\n\nChris decided not to stop and pushed her to the bed making her sit before him. He thought about pulling down his pants so she could suck his dick but knew something else needed to be done. In his mind she needed some oral pleasure to ease her long day.\n\nHe got to his knees quickly and forced her jeans off as she struggled to keep them on. \"Pleaseeeee...let me shower first,\" she cried out.\n\nChris did not listen and finally pulled her jeans with her red panties off her body. Without thinking he pushed her back on the bed and lifted her legs. Her shaved dark sex was now before him. He leaned in taking in the musky smell of her pussy like it was a fine wine.\n\n\"Ohhhh fuckkkk,\" she moaned quickly and Chris began lapping away at her love folds.\n\nHe thought about waiting and building up to it but knew it needed to get started quickly. His tongue dived right in tasting her strong smelling sex. Not stopping at just her labia, his tongue circled around her clit and then moved further down to her entrance.\n\n\"Ohhhhh God...fuckkk shit,\" Regina moaned out as Chris continued to use his tongue to caress and lick away at her pussy.\n\nHe held her legs high and then did long, strong fast laps at her pussy, tasting all of what she had to give. He could already taste her wetness too as his tongue pushed a bit into her entrance. The knowledge that she was enjoying it only added to the desire to go faster and longer with his tongue. \n\nRegina was squirming and moaning as his tongue danced and circled around her love button. He was still going the length of her sex flaps but always managed to come back up to nibble away at her pleasure spot.\n\nChris only stopped as Regina finally began to shake and then relax as she let out a moaning sigh that she was satisfied. Chris stood up looking at her as she was still on the bed with her legs open. He reached for his zipper and gave a sly grin. \"Now it's your turn to eat.\"\n\nThe idea of being demanding was both impolite and wrong to Chris but being a little demanding at the time seemed appropriate. He knew in the past he would have asked and then waited for a girl to ask. Then he realized that some girls wanted to be forced. It was not like he was too forceful, and Regina was definitely into it.\n\nRegina lowered her legs and then looked at Chris as he pulled out his erection. She did not say a work but slowly wrapped her lips around his shaft. He felt her tongue slide down the underside of his dick before going back to the tip. \n\n\"Ohhh yesss...just like that,\" he uttered out as he could sense her lips were doing the perfect job of arousing him.\n\nRegina continued to slide her tight lips round his cock as her hand kept a grip on the base of his dick right by his balls. She stroked slowly but moved her mouth faster. The sensation was like having a sensual hand job while getting head at the same time.\n\nChris relaxed and let his body feel the brilliant sensation of Regina giving him oral pleasure. His mouth let out a series of moans as he felt his erection tensing up to an almost bursting point. \n\nHe thought about fucking her but loved the relaxing wet feeling of having her suck on his cock. She was still going fast with her mouth keeping her lips tight around his shaft while her hands stroked him off. \n\n\"You still want to fuck me? I can feel your going to cum soon. I will swallow it too if you cum,\" Regina asked as she backed away from him quickly.\n\n\"I need to fuck you again,\" Chris replied as he saw her smiling and wiping her face clean.\n\n\"Fuck me from behind,\" she said as she got into position on the bed, presenting her ass to him for the taking.\n\nChris got on the bed and behind her. He put his hands on her wide hips and then slowly sunk his member deep inside her sex, feeling her wet vaginal muscles grip onto his shaft.\n\n\"Ohhhh fuck...Jesus fuck it's big in me,\" Regina cried out as Chris pushed all the way inside of her.\n\n\"Feels so good,\" he replied as he started going slow with his hips.\n\n\"Like that pussy don't you?\" she moaned again as Chris rocked back and forth, making her feel the full length and thickness of his male organ intruding into her body.\n\n\"I do...feels really good,\" he replied as he began to move faster as their bodies were now slamming into each other.\n\nRegina moaned again loud as he felt her sex tighten up. \"Oh shit...fucking me so good.\" \n\nChris then began to slam hard against her ass feeling her thick backside take his body's motions. Not letting up, he buried his member far inside her sex over and over. The sensation of fucking her bareback was just as euphoric as knowing she was vulnerable to his fertile sperm.\n\n\"Ohhh fuck,...right there...keep fucking me!\" she moaned again as Chris knew she was loving his cock fucking her.\n\nRegina began pushing back against his thrusts. Chris still gripping her hips did not slow down and just kept on pounding his member inside her slick love cave without worry. He knew his cock head was poking deep past her cervix. He knew that his seed would be flowing inside of her and would be followed up by another dose just as soon as he could muster another erection.\n\nRegina lifted her head as she still continued to push her ass against his pounding body. \"Fucking that pussy good too.\"\n\nChris wanted to keep fucking her but could not help the urge to spill his seed inside of her. The pressure was there and the sensation of his approaching orgasm let him know it was the time. He pushed in faster and harder tightening his body and moaning louder.\n\nRegina moaned in unison as Chris let go and began to feel his cock pumping its orgasm deep into her active reproductive system. There was nothing stopping his sperm now from finding a possible target to impregnate. \n\nRegina turned to him as her body began to shake. He could feel her sex clamping down and massaging his tool as he kept himself deep enough. The flowing sensation of his sperm leaving through the tip of his male spear made him hit a state of tranquility as Regina kept still and allowed his DNA to rush in her without any regard to what might happen.\n\nRegina pulled free and laid on the bed. \"Get close and let me suck you clean.\"\n\nChris moved up and watched her fingers rub silently at her glazed cunt. His seed had yet to drip free, but her fingers were still rubbing away. His cock was still holding its strength as Regina quickly engulfed it.\n\nRegina was sucking hard and fast now as he watched her fingers rub her wet slit with reckless abandon. His shaft's strength was holding true even after bursting its load. Her tongue flicked and plunged in his piss slit like it was wanting more warm cream too.\n\nRegina let out a hard moan biting down on his member as his body shook violently. She pulled away and breathed heavy. \"Oh my God...I came so hard.\"\n\n\"I can see that,\" Chris added, smiling as her naked body still looked amazing as it lay used in front of him.",
        "Regina lifted her body on the bed as Chris sat down next to her. \"You want more of me, or can I start cooking?\"\n\n\"You can start cooking, but I am going to want more of you later though.\"\n\n\"I figured as much. That white cock of yours seems to get hard all the time,\" she joked standing up looking at him with a sly grin.\n\n\"Bet you like that though,\" he replied, looking at her naked form as she grabbed her clothes.\n\nAs Regina turned around to answer him, he grabbed her clothes and threw them across the room. \"No clothes. I want to see you nude all night.\"\n\n\"You are bad...let me put on something.\"\n\n\"Nope. I want to see you and you know I am going to fuck you again...I just don't know when I am going to get the urge either.\" \n\n\"So I am not allowed to wear clothes all weekend?\" she asked with a half-smile, not making any movement to actually get dressed at all.\n\n\"Sounds like a great idea.\"\n\n\"Well, then you are not allowed to wear clothes either. I want to see that big cock of yours all weekend too,\" she jested back, looking down at his manhood as it was beginning to soften.\n\nRegina got up not even flinching to go for her clothes. Chris watched with great amazement on how her large breasts just bounced and swayed with each step. His only distraction from staring was when his eyes began to stare at her ass.\n\nAs he continued to stare, she cooked for him bringing up questions about his life. He explained about his new rentals and how he just recently gave up on college. Regina was quick to ask about his past girlfriend and he told her some of the details of Sasha. He made sure to leave out certain things about their relationships though.\n\nChris thought about fucking her again, bending her over the small kitchen table and pounding away at her pussy, but decided to wait. He talked with her over dinner still staring at her breasts and puffy nipples. Her dark brown nipples puffed out and seemed to distract him almost the entire meal. He knew she could feel his eyes on her but made no mention of it. She was also not caring about being nude in front of him either.\n\nReina put the plates in the sink and then promptly stood in front of Chris as he sat at the table almost confused to what she was doing. She looked down at him with a smile. \"You want to suck on them don't you? So just suck all you want now because I want to be fucked again.\"\n\nChris only responded by putting his lips to her large nipples. He suckled and began to feel a sense of erotic relaxation come over him. Regina put her hand to his head comforting him as Chris melted away as his mouth and lips sucked on her now erect nipple. \n\nChris switched to her other nipple and nothing was said. Regina went back to holding his head as he continued sucking as if it was going to lactate for him. It was a bonding thing as her warm hand on his head made him feel wanted and protected in an odd way.\n\nRegina finally broke free and looked down at his massive erection. \"I need you to fuck me now.\"\n\n\"Okay,\" Chris replied feeling his need to have sex again.\n\nRegina pulled him up and dragged him to the bedroom. Chris had to watch his step as Regina was quickly pulling him through the room filled with toys on the way to her bedroom.\n\n\"I need you to go really slow this time. Can you do that for me?\" she asked, looking like he would say no.\n\n\"Sure. Anything you want.\"\n\nRegina smiled and sat on the bed. Her hands reached up and pulled him towards her. She took a soft grip on his erection as she looked up with a large happy grin. \"I love your cock, and I want it in me all night long. You can bust your load in me all you want, but I just need you to be loving about it. I am still scared about what could happen.\"\n\nChris responded to her smile with one of his own before bending down to kiss her. It was not a simple peck as his tongue slowly made its way into her mouth for a more sensual kiss between them.\n\nRegina then moved on the bed and opened her legs wide. Chris followed right after her and placed his body between her open legs. He could feel his erection near her entrance but it was not inside her yet.\n\nHe then felt her hand take hold of his hard on and place it right at her wet opening. Wasting no time, he pushed in feeling the warmth of her love hole as it slid in very easily. His lips were on hers as he felt his erection sink as far as it could with his body now pressed hard against hers.\n\nChris kept up the passionate embrace as he rocked his hips into hers. Regina was moaning into his mouth loud as he pushed his tool far and deep inside her sex. He was not going fast, but slowly going in and out, feeling her vaginal muscles spasm like crazy from the intrusion.\n\nChris wanted to tell her how amazing it felt, but decided not to stop kissing her. It was an emotional feeling as his lips and tongue were against hers. His manhood was still sliding through her dark love folds with ease at a steady, slow loving pace.\n\nOver and over Chris felt the bonding moment of love come over him. The lasting kiss never stopped as his hard tool lovingly pushed through multiple orgasms. He felt each one as her birth canal closed and even tried to expel his member as it now glided through her wet spasms of pleasure.\n\nChris finally broke the kiss and stared into her eyes. He could feel his own approaching climax and wanted to tell her he was close. He said nothing and only nodded to signal to her that he was going to finish. Regina smiled and also nodded making him feel that she was okay with him finishing inside of her and willing to take his seed deep.\n\nChris let himself go in the moment and tightened his body. Regina surprised him by lifting her head to kiss him. Chris felt his cum begin to flow and moaned into her mouth as she did the same. The utter brilliance of the moment hit him as his climax roared through his shaft as he spurted everything his body had into her womb.\n\nRegina was moaning too as he felt her body shake a little as his member continued to unload its life making juices far into her reproductive depths. The instincts to push further inside her sex forced him to push hard giving in to his body's desire to inseminate her body.\n\nChris finally broke out of his spell but still did not pull out. Regina smiled as her legs were now almost up in the air. \"That was nice.\"\n\n\"It was. Nice break from the hard, dirty talking sex,\" he admitted.\n\nShe looked worried as she assumed he was upset at her. \"I like this way better, but I can talk dirty to you if you like it.\"\n\n\"I like it both ways to tell you the truth. I needed the change. Every so often I like it a little rough, but this way is great too.\" Chris smiled and sounded reassuring as he admitted it to her. \n\nRegina smiled wide. \"Can we do this one more time this week just like this? I promise I will talk dirty about your white cock all you want after that too.\"\n\nChris could not help but laugh as he knew Destiny's fetish had spilled over. \"To tell you the truth, you talking about my white cock is not as good as what we just did. If you want to talk dirty though, I can do it too.\"\n\n\"I would like that,\" Regina answered as Chris knew his member was still inside of her as he felt how slimy her pussy now was from his cum.\n\nRegina then softly smiled again. \"You are really sweet, can I ask you one more favor? I promise if you say I will do anything, I will even let you put it in my ass.\"\n\n\"What is it?\"\n\n\"Do you mind if I skip next month. I have more bills then I thought...please. I will do anything.\"\n\nChris knew he was going to fall into this trap the moment he said yes to her. He felt his ability to say no to girls would be his downfall. The only saving grace to her request was that La'Shay paying more on her deposit.\n\n\"Can you help me clean up and get the other rentals ready? It would not be a one time thing either and I would need your help every month collecting rent and getting some renters to pay.\"\n\nRegina's face lit up. \"You are not allowed to collect rent anymore. I can do all of that. And to tell you the truth, you are easily manipulated with pussy.\"\n\nChris smiled at her response knowing she was right. It also did not help that his member was still somewhat hard even after just having shot its load inside of her too. His quick calculations would still keep him making money and also cut down on his own workload.\n\nThinking of having more of her, he began rocking again as there was some life left in his dick and did not go completely soft. Regina's face was shocked as he began pushing back inside of her. \"You still want more.\"\n\n\"Said I had all weekend,\" he joked, still slowly rocking his body and nudging past her slick cervix.\n\nRegina smiled and joked back. \"I did...you better save some strength though. I want you to fuck my ass too.\"\n\nChris smiled and let out a small laugh. \"I have been waiting for you to say that.\"\n\n\"Oh you like a girl who takes it in the ass don't you,\" she replied, moving her body against his making sure his member continued pushing into her sex. \n\n\"We all have our dirty kinks,\" he said as he could not help but show a smile at her want for anal sex.\n\n\"Since we are being honest and shit, I will tell you that I love my nipples being sucked. Not just sucked like all girls, but sucked like nursing sucked.\"\n\n\"You liked me sucking on your tits before like that?\" he asked, looking surprised by her admission. \n\n\"I did. It's a huge turn on for me. You know my tits were bigger when I was pregnant and I really loved them being sucked and shit all the time. I kinda like it when they are lactating too...feeling them being sucked like that gets me wet all the time.\"\n\n\"Shit really?\" he asked, wondering how dirty she was and how much she was holding back.\n\n\"Don't be judging.\" She shot back smiling but also looking a bit embarrassed.\n\nChris smiled and then began to slide his softening member inside of her again. Regina smiled and pushed back meeting his thrusts. Not wanting to give up yet, Chris never stopped his soft thrusting until he finally slipped out.\n\nHe repositioned himself and Regina closed her legs as he reached to hold her. She put her head of his chest as he held her. Regina then moved her hand down to his shrunken sack holding them as if she was weighing them in her hand.\n\n\"Not as full as they once were,\" she joked smiling and not letting go of them either.\n\n\"Can I ask you a question?\" Chris said as he wondered why she was willing to say yes both times to him. \n\nRegina moved her head up and looked at his eyes. \"Sure, but keep in mind that I have your balls right in my hand.\"\n\nChris gave a sly grin as she joked. \"If I was not renting to you, would you have said yes to me?\"\n\n\"If we being honest with each other then I will answer you if you answer my next question,\" Regina stated as she shifted her body and let Chris see more of her breasts.\n\n\"Okay.\"\n\n\"I thought you were cute and shit. I would have said yes. I didn't know you wanted to fuck me so quick though. I mean shit, your cock was in me before I knew anything about you.\"\n\n\"Sorry,\" Chris answered looking at her with an apologetic face.\n\n\"I knew you were looking at my ass and tits the whole time too. I knew you wanted this booty and it was just a matter of time.\"\n\n\"Oh, so you were planning this?\"\n\n\"Maybe...I just did not know you were into busting your nut in me all the time,\" she answered almost sounding guilty for doing it. \n\n\"Can't help myself.\"\n\nRegina went and put her head down on his chest and before Chris knew it, his eyes betrayed him. He was sleeping before he even knew he was tired. His last thought was how nice it was to have Regina resting her head on his chest as she held onto his ball sack softly. He did hear her ask another question, but could not recall what it was before he fell asleep. \n\nChris woke up still next to Regina in bed. There was a blanket covering them and he was still nude. The only difference was he was not holding her, as she was now holding him.\n\nRegina then adjusted her body and moved her arm to cuddle more and Chris could feel her nipple right at his lips. \"Shhh...just suck.\"\n\nChris closed his eyes and opened his mouth to let in her large nipple. It was a soothing feeling as he sucked softly feeling the connection with her at the same time. Her left breast was against his face and her nipple was all the way in his mouth as he suckled at her, feeling his stress leave his body.\n\nRegina held his head and Chris never moved a muscle, but just sucked on her breast as it relaxed him better than any massage ever did. His lips and cheeks moved as he suckled from her tit like a small child would. He did not switch nipples either letting the moment continue as long as she would let it.\n\nRegina only lifted her body away after what seemed to be an hour of him suckling. \"Let me make some breakfast.\"\n\nChris watched as Regina walked out of the room wearing only a long shirt that did nothing to cover her ass. He grabbed his clothes and only put on his boxers and a shirt before making his way to the bathroom. After relieving himself, he sat at the kitchen table to see Regina making his food.\n\n\"I got work and can't be taking off. Do you mind if we try again tonight?\"\n\n\"Yeah...I am fine with whatever you want.\"\n\n\"Okay, please don't be mad and shit. I know I offered you pussy all weekend, but I need money.\"\n\n\"Where do you work?\"\n\nRegina gave a look of embarrassment. \"McDonald's on the weekend and a cleaning service for a hotel during the week.\"\n\n\"It's no big deal about this weekend. How about a raincheck for when you're free?\" he asked, knowing that she really could not afford his rental more or less anything else. Although he knew she should be evicted, he could not help but want to be with her again.\n\n\"Not going to be mad and shit. I mean I should be free tomorrow maybe even tonight, I don't know yet.\"\n\nChris moved in and kissed her. His arms wrapped around her and tried to imagine her not stressing about money. He broke free and kissed her. It was not a simple kiss but a passionate kiss he had built up from last night's emotional love making.\n\nChris left after eating and talking with Regina. He even thought about having sex with her again, but lost interest after hearing about her ex and how he beat her. It seemed almost wrong to even ask her for anything after she told the story.\n\nHe was back at his place wondering how far he was in with Regina. She did not have the small sexy body as Sasha or Salina, but she still looked hot. She had curves but not in a fat way but a normal body way. The memory of her large breasts and curved ass made him hard all over again.\n\nChris always loved getting naked pictures from Destiny and wondered if Regina was into that too. He thought that if she was willing to send him nudes of her body, then she was into him as well. The whole idea bothered him though as he wondered what in him made him fall for someone so fast.\n\nIn his mind, Chris knew that if he asked for naked pictures and she sent them it would mean she is into him. The only downside would be that she would think he is something more than a fuck. The dilemma of having someone worried him too.\n\nThe text was simple and Chris knew it. He explained how he loved looking at her and that she should send him pics to help him get hard. If she said no it was still okay and that he would just fuck her as fuck friends. If she did send pictures, then he knew she wanted something more too.\n\nRegina texted back an hour later asking if he really liked her pussy that much, or just wanted to see her black tits. What threw Chris off was that she texted back again that she had a thing for his white cock and he should send pics of that to her.\n\nChris smiled and knew that it was a two-way street with pics and unlike Destiny, Regina asked him. Thinking that it was fair to ask, he took out his phone after his shower and snapped five good pictures of his dick. The last two pictures he took was when he was hard and thinking about fucking her.\n\nRegina sent the same number of pictures back as well as comments about his erection and how she enjoyed being fucked by his cock. He could not help but comment back as she sent pictures of her breasts without a bra and good open snatch pictures too. It was enough to get him instantly hard and wanting more.\n\nChris was getting ready for when Regina would get back from work, but it was all for not. She texted him that her one son was sick and that she was going to have to pick him up and care for him. He understood the need for her to be with her sick son. Although disappointed in not being with her, he texted her about his sympathies.\n\nRegina then offered for him to come by anyway and that she would suck his cock in her driveway so he could at least get off. Chris felt it was a great gesture but did not want to be that selfish and declined.\n\nChris woke up Sunday morning to texts from both Destiny and Regina. He did not know who to answer first as both of them were sending pictures of their open pussies explaining to him how they needed his cock to fuck them. The sense of being wanted empowered him to send them both pictures of his morning erection and telling them that he could not wait to fuck them.\n\nRegina texted back first saying that she was so sorry for not being able to fuck. He responded by saying he understood and for her not to worry. Destiny texted him how she wanted to be fucked so bad right now that she was already rubbing her pussy. Chris did not know if he should masturbate to Destiny's pictures or ask Regina if she as free.\n\nStill needing to get out, he decided to start the cleanup on the third larger rental and write down some of the items that needed to be ordered. He had time and wanted to make sure he had some money to at least start ordering some of the things needed.\n\nPulling up he could see Regina pulling up in her minivan. He walked over to her and could see her in her work uniform. \"You just getting home?\"\n\nShe looked at him with a pleasing smile. \"I am but only for a little while. I have to pick up my kids at my mom's in an hour.\"\n\n\"You worked all night?\" he asked, seeing that she was tired.\n\n\"I have to work late some days, and I have to go back in tonight.\"\n\nBefore Chris could respond she grabbed him by the hand. \"Let me make some coffee for us.\"\n\nChris followed her into the house and sat at her small table as she made a pot of coffee. Her hair was in a tight ponytail as her blue work uniform hugged her ass giving it an illusion she had a larger curve to it. She had all the buttons on her shirt buttoned and any sight of her breasts was impossible as she was fully covered.\n\nHe did not even get out a simple question about her night before she turned around with a cup of coffee in her hand. \"Did you want to fuck me real quick before I go pick up my kids?\"\n\n\"I...did not expect too. Was just settling up with another renter is all,\" he responded, shocked at how forward she was.\n\n\"If you need to get off, I can be a little late picking up my kids,\" she said looking at him with a smile.\n\n\"Only if you want to, I don't want to mess up your day or anything.\"\n\nRegina gave a smirk and then took a step over to the kitchen sink. She pulled down her work pants revealing her dark blue panties. Chris could see they were nothing special but the sight of what they were covering still got him excited.\n\n\"Have to be quick. I don't have too much time.\"\n\nChris stood up just as quick and pulled down his jeans revealing his growing erection. Regina was already pulling down her panties and moving her legs apart so he had easy access to entering her from behind.\n\nChris put his male spear right at her slit pushing in past her dark love folds in a quick motion as he entered her. Regina moaned as he pulled out and pushed in just as fast. He then settled on a steady motion as his body pounded abasing her, making him feel the snug warmth of her sex with each thrust. "
    ],
    "authorname": "Jay626",
    "tags": [
        "black female",
        "white male",
        "creampie",
        "insemination",
        "pregnancy",
        "landlord"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/rental-problems-ch-02"
}