{
    "title": "Make Me Your Plaything",
    "pages": [
        "I was in my early thirties when I had my first prostate exam. A visit to a new doctor and she (yes, she) told me that it was something men should do regularly once they reached my age. \n\nMy friends and I had joked about prostate exams, as you do, and I was expecting the worst. But here's the thing. I didn't hate it.\n\nThe doctor pulled on a rubber glove, covered it in lubricant and had me bend over the examination table. There was pressure and she told me to relax. I managed to do so and felt her finger enter my anus. She moved it around and told me that everything felt normal. I had to laugh. Nothing felt normal about what was happening. Anyway, it was over in a few seconds. \n\nIn the following days, I couldn't help but think about the exam. The whole idea of having something up ones ass had always been unappealing, but now I wasn't so sure. \n\nI thought about trying it again. I'd watched bisexual porn before, and been quite excited as an observer. Those guys seemed to enjoy it, right? \n\nI was between girlfriends at the time, so masturbation was a regular hobby. Sometimes, instead of actual porn, I read the Craigslist Casual Encounters page and fantasized about answering ads.\n\nOne evening while I was jerking off, I remembered my recent prostate exam and was tempted by its memory. I reached down with my non-stroking hand and began to tickle my anus. \n\nIt felt very nice. I decided to try a little more. But I had no lube and there was no way I could go deeper without hurting myself. \n\nI probably would have left it there but, as chance would have it, a few days later I saw an ad from a woman looking for a man.\n\n\"Thirty-something female, not lesbian but with tomboy tendencies. Seeks man who is willing to explore role-reversal. I'm okay looking. I work out. I am not crazy. Just looking for a straight guy who wants to be penetrated by a strong woman.\"\n\nI debated with myself. I'd never answered these ads, they were just wanking-fodder. But this one seemed like a perfect opportunity coming along at the right moment. I sent her a message.\n\nWe traded a couple of e-mails, names (she is Megan, I am Rob) and face pictures before arranging to meet in the flesh.\n\nKnowing that we may end up having the kind of sex that had brought us together, I prepared myself carefully. Shaved my face, trimmed my pubic hair and, most importantly, gave myself an enema. \n\nWe met at a mutually convenient coffee shop and it went well. \n\nOutwardly, we were age- and looks-appropriate. I think I was probably getting the better of the deal. Her hair was cut short and there were several rings in each of her ears. She was wearing a leather motorcycle jacket, under which her ample bust was barely covered by a low-cut t-shirt. I knew I was going to have trouble keeping my eyes on hers while we chatted. \n\nLater, allowing myself another admiring glance, I noticed that she was not wearing a bra and I could clearly see the outline of a nipple piercing. I tried not to stare, but she caught me and just laughed. \n\nShe was self-conscious about only one thing: her height.\n\nAt just over six feet, she is taller than I am. I'd never been with a girl even close to my height, but it was fine. Intriguing, even.\n\nWe had some similar interests and she had a good sense of humor. I liked her and she clearly liked me. She told me this wasn't the first time she had placed an ad, but that I was the first - apparently - sane man to reply. \n\nOur conversation didn't dry up, but our coffee was finished. I felt that the next move was hers, so decided be patient and not lead her. By then, I knew what my answer would be. When she invited me to her apartment, I readily accepted.\n\nShe lived nearby and we arrived at her place within minutes. She kicked off her shoes at the door and asked me to do the same. When she slipped off her jacket, I saw for the first time two full-sleeve tattoos. I've always found girls with tattoos to be very arousing. The whole circumstance was arousing, really. I was standing in a strange apartment, barefoot and facing a sexy, pierced and tattooed woman who was towering over me. Well, it seemed that way. She had me by an inch or so, but that was almost a foot adjustment from the last girl I had dated. \n\n\"So, this is my place.\"\n\nI looked around. She had some nice art on the walls and a view of downtown Seattle across the water.\n\n\"It's cool. Great view and plenty of light. And so convenient!\" \n\n\"Well, not really. I have a long commute.\"\n\n\"Yes, but I'm only two blocks away.\"\n\nIt was a groaner, but I made her laugh, which has always been my most successful approach to gaining a woman's approval. \n\nShe invited me to sit and we took opposite ends of the love-seat in her living room.\n\nWe were already comfortable with each other and made small-talk, discussing local bars and restaurants. We danced around it but I was very aware, and I could tell she was too, that we hadn't yet talked about the elephant in the room. \n\nEventually, there was a lull in the conversation. A pregnant pause. We looked at each other.\n\n\"So,\" she said, eventually.\n\n\"So,\" I coyly replied.\n\n\"Do you want to do this?\"\n\n\"Right now?\"\n\n\"No time like the present.\"\n\nShe took my arm and pulled me over and onto her. My legs straddled her thighs. Then she reached up and forcefully pulled my face close to hers and started kissing me. It was hard and fast. She definitely took the lead. I felt her tongue enter my mouth and she explored. Hard, darting movements, all around. \n\nMy hand came up and caressed her cheek. I ran my fingers into her short black hair as I kissed her. Then I slipped one hand down and touched her breast through the thin material of her shirt. I wanted to feel her nipple piercing. The little bar that I had seen the outline of earlier. \n\nAs I did that, she reached down and started fondling my ass. Her hands on my buttocks squeezed and kneaded. She lifted her hips, pulled my groin to hers and ground herself against me. I was already erect. She felt it and gently pushed me off her.\n\n\"If you're a good boy, I'll take care of that later. But first, you do what I want. Why not take off your clothes.\"\n\nI stood in front of where she was sitting and slowly tugged off my shirt.\n\n\"Come on! I didn't ask for a fucking striptease. Just get it all off!\"\n\nThere was laughter in her voice, but it was she who was directing the action for now. I quickly peeled off the rest of my clothes and stood naked for her appraisal. \n\nShe told me to take my hand away from where I was vainly attempting to cover my cock-stand. She said it was a nice size, much to my relief. I stroked it for her when she told me to. I turned around, when she asked. Bent over for her. Spread my cheeks.\n\nThe control she was exerting was arousing her. I was excited too, and my heightened anticipation was ratcheted up even further when she took my wrist and led me to her bedroom.\n\nShe made be bend over on the end of the bed. \"Are you ready for this? I don't want you to chicken out.\"\n\n\"I think so.\"\n\n\"Well maybe I should make sure.\"\n\nI heard a clinking sound behind me.\n\n\"Reach out your arms.\"\n\nI reached towards the head of the bed and she swiftly snapped on a pair of padded handcuffs. Then she tied them to one of the rails in the frame. I waited, patiently, while she found a couple of lengths of silky rope which she used to tie each of my ankles to a bed leg. I was immobilized. My bare ass was bent over the end of the bed. My legs were wide apart. Although I was now at the mercy of a woman I knew very little about, I was intensely aroused. My cock, trapped beneath me, was like iron. But it was pointing backwards between my legs. I wriggled around, trying to get it into a more comfortable position.\n\nShe misinterpreted my movements.\n\n\"Oh, you are keen, aren't you?\" she asked, mockingly.\n\nEven though my movements had been for another reason, I was keen. Very keen. I wanted it. But I didn't want to admit aloud quite how aroused I was by the prospect. I played it as cool as a man in my position might.\n\n\"Well, it's why we're here, isn't it?\"\n\n\"It is indeed. I want to fuck a guy, and you want a girl to fuck you. We're a perfect match.\" \n\nI heard her stripping out of her jeans behind me. Out of my sight. Then some other sounds. She was stepping into a harness.\n\n\"I've had this for a while. A girl friend bought it for me. Not a girlfriend, just a friend who happened to be a girl. At least, that's what I thought,\" she chuckled, ruefully.\n\n\"She knew I was turned on by the idea of wearing a strap-on and was very disappointed when I didn't want to use it on her.\" \n\nShe moved to stand beside me and I looked over to see her sporting a leather harness with a large black rubber cock sticking out of the front. \n\n\"So here it is, finally about to lose its virginity.\"\n\nThere's a lot of that going around, I thought to myself.\n\n\"This toy has one end that goes up inside me. See?\" \n\nShe turned away from me and bent over. She had a gorgeous ass, as it happens. I could see the end of her dildo was inserted into her pussy. It was as fat as the cock on the other end and her vulva was stretched around it.\n\n\"So I will get a lot of pleasure out of this.\" She turned and walked back behind me. The rubber penis bounced up and down.\n\nI had only heard it once before, in the doctor's office, but I recognized the sound of a rubber glove being pulled on. I recognized another sound as she unsnapped the cap of a tube of lubricant. She sat down beside my upturned ass and began gently rubbing it. The lube on her latex glove felt cold and wet. She probed between my cheeks and quickly came to my tight sphincter. She dribbled more lube there and I felt her pressing a finger into me. I relaxed as much as I could and it allowed her to go deeper. \n\n\"You like that?\"\n\n\"Yes,\" I admitted, \"but please go slow.\"\n\n\"Don't worry. Relax.\" \n\nI did manage to relax and felt her going deeper. Now she was as far in as the lady doctor had gone. But the doctor hadn't moved her finger in and out of me, which is what Megan now began to do. I moaned, then.\n\n\"I'm going to do some more, now. You're mine to play with, unless you tell me to stop.\"\n\nI said nothing, just groaned a little.\n\nAnother of Megan's fingers joined the first. It stretched my asshole and I tried to move away from it as far as my restraints would allow, but she moved with me and kept a steady pressure. The second finger found its way into me and then she began finger-fucking my ass again. The lube made everything slippery and my sphincter adjusted. In only a few moments, I was once more moaning with pleasure.\n\nMegan kept up her movements for a few minutes and then added a third finger. I tensed, then relaxed and was able to accept it. She started separating her fingers inside me, stretching me even more. Then she began thrusting more forcefully. I took it all with increasing delight.\n\n\"You like this, don't you?\"\n\nMy face was buried in the bed. I just hummed yes-like noises, concentrating on the exquisite pleasure I was feeling in my bottom.\n\nShe withdrew her fingers and moved behind me.\n\n\"I'm going to fuck you now, Rob.\"\n\n\"Oh yes. I'm ready.\"\n\n\"You think you are, but this is pretty big.\"\n\n\"I want it.\"\n\nMegan dribbled lube over her cock and I heard wet noises as she smoothed it all over the shaft. She was murmuring as she did so. I couldn't make out words but, from the timbre of her voice, it was clear that she was really getting off on the fantasy of having a penis. Then, with one hand, she separated the cheeks of my ass and, with the other, she positioned the dong against my back door. The head entered me. I flinched and Megan stopped for a moment.\n\n\"All okay?\"\n\n\"Yes, just be gentle.\"\n\nI sounded like a little girl. I think it turned Megan on even more.\n\nShe began putting more pressure on me and I felt the big cock going deeper up my ass. Suddenly there was a buzzing inside me.\n\n\"Surprise!\"\n\nShe had switched on a vibrator option. The sensations were unbelievable. I moaned. Megan moaned. The vibrations on the end that was up her cunt were working similar magic. \n\nShe went slowly, as I had asked, and it took more than a minute for her to fully impale my ass with the big dildo. By the end, I wanted it faster than she was giving it and I lifted my buttocks to meet the invading toy. When she saw and felt that, she gave me the last two inches in one push. I loved it. \n\nNow the entire length of the rubber phallus was buried inside me. Megan switched off the vibrations and began thrusting her hips. Now it felt less like a toy and more like a cock. I think that was her intent. \n\n\"You alright?\" she asked. \n\n\"Better than alright.\"\n\n\"I'm loving this. Fucking your sexy bum.\"\n\nShe was lying on top of me but the angles were off.\n\n\"Untie me,\" I told her. \"You know I'm not going to run away now.\"\n\nI felt the giant cock withdraw from my ass. Megan reached down and undid the ropes around my ankles then moved to the head of the bed and released the cuffs around my wrists. The fat, black dildo protruding from her groin glistened from the lube with which she had so liberally anointed it. \n\nNow I was free to move up the bed, I got up onto all fours and spread my knees wide apart. This raised my bottom. Megan was on her knees, between my legs and told me she was about to re-enter me. I was more than ready. I felt her shove her cock all the way in with one long thrust.\n\n\"Feels so good.\"\n\n\"You have a sexy bum. I'm going to fuck you until I cum.\" And she did.\n\nHolding me by the crook of my hips, she humped my ass for several minutes. At last, I felt the intensity of her movements change. She fucked into my ass in a frenzy until her orgasm began to overcome her. But then, the strapon suddenly pulled out of my ass. I collapsed onto the bed, rolled over onto my back and watched Megan. \n\nShe was sitting back on her heels. The big cock was in her hand and she was furiously rubbing it up and down as though she were a man masturbating. In fact, I realized, her actions were moving the other end in and out of her soaking cunt. I stroked myself while I watched the intensely erotic spectacle.\n\nMegan was once more approaching her peak when she started to unbuckle her harness. She quickly stood and withdrew the dildo from herself.\n\n\"I want you to take me over the edge.\" she told me.\n\nShe stepped out of the harness and came to lie down beside me. Spreading her legs, she pulled me over and onto her, then gripped my cock and guided it to her juicy cunt. \n\nI slipped in easily and felt her hands on my ass, pulling me into her. The dildo had been fatter than what I had to offer, but she still felt tight. My member was enveloped by her silky smoothness. It felt so good. Her arms encircled me then, and held me. Her voice was husky with desire.\n\n\"Give it to me, Rob. Fuck me with that lovely cock of yours.\" \n\nI moved in and out of her as she held me in her embrace. Her breathing quickened. I felt it, hot against my ear and neck. Fucking this gorgeous Amazon was a dream I didn't even know I'd had. I worried, after all that had gone before, that I wouldn't last long but Megan only needed a few minutes before her final all-consuming orgasm overtook her.\n\nI ground myself into her. Putting pressure onto her engorged clitoris each time I bottomed out inside her wonderful cunt. As her body convulsed with pleasure, she held me tighter still, I couldn't move. My penis was deep inside her and she bucked her hips up against me. Fucking herself with my cock. I felt her juices let go. A hot wetness covered me. It was more than I could stand. I came then, flooding her cunt with my cum. Grinding, spurting, cumming like a teen on speed.\n\nIt was glorious.\n\nMegan continued to hold me tightly. I lay between her spread legs as our mutual climaxes slowly subsided. My cock finally lost its erection and she released me from her clutches. I withdrew from her wonderful pussy and climbed from between her legs to lie beside her. \n\nShe rolled toward me and we looked at each other, smiling. She was flushed and beautiful. She had taken me somewhere I had never been and then brought me to somewhere I never wanted to leave. \n\nThis had been an exercise in sexual experimentation for both of us but I knew then, looking into her eyes, that I wanted to be with her. Not just for the sex, but because she was an amazing woman. After we had showered and dressed and were sitting once again on her love-seat, she told me she would like to continue our relationship and see where it would lead us. My heart was in my mouth, I was so happy.\n\nWe've been together for five years now. Our sex-life is adventurous and varied. We don't always do the pegging thing. She uses her harness and dildo on me when she has the need to feel dominant. Usually when she's had a bad day at work. And, of course, she uses it when I feel that need to be penetrated by a strong woman."
    ],
    "authorname": "dlcalguy",
    "tags": [
        "toys",
        "pegging",
        "domme",
        "tattoos",
        "strapon",
        "craigslist",
        "straight"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/make-me-your-plaything"
}