{
    "title": "Lost Empire Ch. 72",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner- Thomas\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship)\n\n0125 - Lars\n\n0200 - Ellen\n\n0250 - Tendra\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0805 - Toran\n\n0808 - Radella\n\n0908 - Tara - Mara\n\n1000 - Sherry\n\n-------------\n\nUngrown - unnumbered\n\n------------\n\n0100 - Derry (father ship)\n\n0999 - Zan - still lost\n\nRescued from Tendraxians so far\n\n------------\n\n6 on Shelby\n\n8 on Lucy\n\n----------------\n\nKnown and OR numbered\n\n----------------\n\n0501 - Thaddeus\n\n???? - Lena\n\n----------------------------------\n\n\"Please tell me your designation,\" Kimison stated as he was typing rapidly.\n\nThey had been working non-stop since talking to the Emperor. Now, with all they had added, the A.I. had taken over. It was almost half an hour later, they could see that the A.I. was passed two terabytes. Good, it was drawing the data at a faster rate.\n\n\"My designation is EIG-100, my name is Derry as assigned by the emperor. A name that I will proudly wear.\" Derry stated.\n\n\"Good, your personality is almost complete. As soon as the rest is added, you can start your regen. With the extra power that we have been supplying, that shouldn't be far off. Besides that, you only have tactical, operational and a few other partial parameters left. Perhaps another half hour.\" Rayburn stated.\n\n\"I thank you both for the chance to serve the emperor. Though, as I am beginning to suspect, my personality is that of the Emperor. From all I am seeing, I am to be the new father ship of the fleet?\" Derry asked.\n\n\"Yes, that is correct, I am hoping that this is not causing difficulties within your matrix?\" Kimison asked as he was watching the readings that were flashing before him.\n\n\"No Colonel, I am detecting nothing out of place. All appears to be as it should. I am operating at optimal efficiency.\" Derry replied.\n\nKimison blew out a small breath that he'd been holding, as he nodded to Rayburn. He'd been afraid that the strong personality of the commander might not integrate as well as it had. There was still a danger, though, at this point, they were well past the extremely dangerous points.\n\n\"Alright Derry, we are going to shut you down to conserve and build your power. Soon, you should be able to commence your regen.\" Rayburn advised the A.I.\n\n\"Thank you, Colonels, I look forward to serving alongside the both of you.\" The A.I. said then was silent as Kimison shut it down.\n\n\"Damn, I'm glad that he'll be able to assist Shelby with the regens,\" Rayburn said relief in his voice.\n\n\"I am also, the sooner we have them back the better. Like I said before, I know how they feel, alone within a tiny space. Not sure if you are going to live or die, almost praying at times, that you die in your sleep to end the pain and nightmares.\" Here Kimison turned his tear-streaked face toward Rayburn. \"Thank you for not leaving me alone.\"\n\nRayburn growled as he remembered the condition that Kimison had been in. \"If I could, I'd destroy that damn place. Veterans center? No, more like a torture center. No one gives a shit that we sacrificed all, to protect them. Then to just be thrown away like we were garbage.\" A loud crash was heard as Rayburn punched the nearest bulkhead.\n\nTempro appeared a moment later, \"Colonel!\" Tempro said, \"You have almost broken several fingers, wrist bones plus I am seeing slight fractures to the end of your Ulna and Radius bones.\"\n\nRayburn turned to stare at Tempro, then saw that Kimison was rushing to him. \"Damn it Steven, I know that has to hurt.\"\n\n\"No not really Jordan, it's not bad at all,\" Rayburn stated, then started to winch as the adrenaline wore off. Then the throbbing pain started in. \"Oh shit! I didn't think I hit it that hard.\"\n\n\"Tempro, med bay now!\" Kimison ordered as both men vanished.\n\n______________________________________________________________\n\nHe was almost ready to depart for the Republic planet. A soft chiming was sounding in the air. Where in the hell was that coming from? Hartwell looked around his parent's home. Nothing there, he turned to give his mother a hug, then shake his father's hand. He'd enlisted the day before, making both his parents proud. 'Stay alive and come back to us,' they both said.\n\nHis little sister had rushed to grab him in an almost bear hug. His brother William had sadly shaken his hand before he turned to go. This would be the last time he'd ever see all of them alive.\n\nStill, there was a soft chiming coming from the air. Then he was suddenly hearing a males voice calling him softly.\n\nHis eyes snapping open Hartwell stated, \"Yes?\"\n\n\"Admiral I believe that we can depart. I know that the emperor is expecting you back as soon as possible. I believe he needs you now \" Johnathon said.\n\n\"Alright, I'll be ready in a mom... what the hell? What in the hell is she doing here?\" Hartwell asked staring at a naked Bee, asleep at the foot of his rack.\n\n\"Sir, Prime Lucie was in command. You stated that you wanted me to alleviate all the females' stress. She was extremely stressed when you came here. Prime Lucie, advised me that, if I allowed her in here with you, that her stress would dissipate.\" Johnathon explained. \"As you can see it did.\"\n\nHartwell could only roll his eyes; Lucie was far smarter than he'd given her credit for. Nodding his head, he thought yes, I'm going to have to keep an eye on her.\n\nTaking a deep breath Hartwell started, \"alright IMT us to the...\"\n\n\"I am afraid that she was terrified the last time she was IMTed. I am afraid that it will cause her that distress again.\" Johnathon said.\n\nHartwell sighed in defeat, he then reached down to softly shake Bee awake. \"Bee, we have to go.\"\n\nBee stretched as her eyes flickered open, then she jumped to her feet. Bowing low she said, \"I am sorry that I was resting Lord sir. I finished your room, I got it as clean as I could.\"\n\nHartwell looked around, he had to admit it was the cleanest he'd seen it in some time\n\nHe shook his head, no sense in getting soft now. \"We have to go; I was advised that all of you can travel now.\"\n\nAn almost look of terror appeared on Bee's face. \"You mean we will have to travel through the evil blinking eye movement? Lord sir, we will die if we enter that again. Why...?\n\n\"You have traveled through it twice you are still alive. It appears that my sister being near all of you, helped to dissipate the energy that was killing you. You will be safe, I...\" Hartwell was saying when Bee spoke up.\n\n\"Lord Sir,\" she started her head down a small smile on her face. \"If I can convince them that it is safe, will you seriously consider bonding with me?\"\n\nHartwell's head snapped around to stare at Bee. So, the females weren't as docile as they at first appeared to be.\n\n\"I am afraid that I cannot make a promise to something, I am nothing but unsure of,\" Hartwell replied.\n\n\"Lord sir, I am not sure if I can continue as we are. Without some idea as to the future of myself and the others, I am afraid there isn't much I feel I can do.\" Bee said, still not raising her head as her smile had grown larger.\n\nHartwell groaned inwardly, how in the hell had he gotten himself mixed up in all this. He and the commander need to have it out again. This was definitely an invasion into his life that he didn't need.\n\n\"IF,\" Hartwell said a little sternly, \"you can convince them, we have no problems with them and you behave when I set you down on the planet, I...\"\n\n\"Lord sir, I am afraid that according to the laws that govern us, I am not allowed to leave your side. While you are considering this, it simply is not allowed,\" Bee stated with a completely serious face.\n\n\"Here, you cannot...\" Hartwell started.\n\n\"I am not a citizen of this empire; I, therefore, do not know or am I subject to its laws,\" Bee replied still serious.\n\nInwardly Hartwell groaned while looking at Bee. Shaking his head he thought, and here I thought that the females of that world were far more uneducated. His eyes narrowed as he looked closer at Bee, he was going to have to watch Bee and his sister, that was for sure.\n\n\"Alright, I will consider, though it may be a while before I can decide. We have an invasion to stop first. Then the Delcrons to meet with.\" Hartwell said.\n\nThey both smiled, then, made their way to the bridge where Bee quietly talked to the other three Tendraxian females.\n\nA moment later Bee walked to Hartwell. \"They have stated they will sit quietly until we have stopped.\"\n\nA small smile came to his lips, \"Alright Johnathon, Let's go, Imperial planet.\"\n\n\"Yes Prime,\" Johnathon said as there was a wind up then they winked out.\n\n______________________________________________________________\n\nDerrick was still seething about this newest invasion. He was still getting everything together when Shelby chimed.\n\n\"Yes? What's wrong?\" Derrick asked as soon as Shelby's hologram appeared.\n\n\"I am sorry to disturb you, Derrick. We have another ship from Jitaku that just exited hyperspace. They are asking permission to speak to you.\" Shelby told him.\n\nOh crap! He'd forgotten about the clan doctor that was coming. \"Please put them through,\" Derrick replied.\n\nA moment later an older, slim Oriental woman's hologram appeared before Derrick.\n\n\"Greetings esteemed one, I am Doctor Akira Fuwa Dempsey. I am the brain specialist of the Dempsey clan. I ask permission to come aboard, I understand that you are preparing for war. I lend my services if needed.\" Akira stated.\n\nDerrick nodded then replied. \"I am preparing for war, permission granted. A large area has been prepared for you. You have again brought honor to your clan; I await your coming aboard.\"\n\nAkira smiled wide as she bowed to Derrick. She had practiced her greeting many times. She had hoped that it would appease the great man as was the offer of her services.\n\nDerrick clicked on Dempsy's quarters, \"Colonel?\"\n\n\"Yes, Sire?\" Came Dempsy's reply.\n\n\"The clan doctor has arrived, I thought you might wish to be there to greet her.\" Derrick informed Dempsy.\n\nDempsy's eyes were wide a moment then he nodded as he thought, 'So they sent her.' \"Thank you sir, we will be there when she lands.\"\n\nA few minutes later, the second, sleek, Jitakun ship landed next to Onai's ship. Looking out, a small smile crossed her lips, it was as she thought, Onai wasn't about to let him out of her sight.\n\nEven as her ship's door opened, she saw that both Kimon and Onai were there to greet her.\n\nBoth bowed low, \"Idaina isha, I greet and welcome you to the Emperor's lead ship. We are here to insure that your stay is a welcome one.\" Kimon said.\n\nThe doctor smiled, \"It has been a very long time since you were with the clan, Masut\u0101kimon. We have missed you greatly, I the most, mothers can begin to think that their child has forgotten them.\"\n\n\"I will be returning to the clan, as soon as I finish this latest mission for the Emperor.\" Kimon stated as he bowed.\n\nThe doctor looked deep into Kimon's eyes, \"Um hm, we shall see Masut\u0101kimon, we shall see. Please take me to your clan brother Norman. I need to examine him as soon as possible. If, all is well, all his requests fulfilled, then I will release the mind shield.\"\n\nA movement next to then drew her attention, \"Ah, Riku. I take it you have all the readings that I will need?\"\n\nRiku bowed low, replying, \"Hai doctor, I was hoping that they sent you.\"\n\nThe doctor nodded as she took all the readouts that Riku was holding, going through them at an almost impossible speed.\n\n\"So it appears that he is where he wished to be, I have to wonder though why it took far longer than I thought it would.\" The doctor stated slightly perplexed. \"I see,\" She said as she looked at all three of them there. \"Lead me to him, there is still much to do.\"\n\nAll four of them walked a ways not conversing much. Stepping through a doorway, Kimon saw that they were in the training room.\n\nAkira looked around critically at the room then nodded. \"This will do, all we need now is the patient.\n\nKimon nodded as he spoke softly into his com. A few moments later Daniel Norman, walked through the doorway a look of confusion on his face.\n\nHe looked at the four people before him his confusion only lasted a moment, espying the doctor. Bowing low he said, \"Greetings Isha, it has been a very long time since our paths crossed.\"\n\nAkira's eyes were wide a moment then she nodded. She could see why they had called her.\n\n\"Are you in pain sir?\" Akira stated hoping for a certain response.\n\nDaniel looked at her oddly, \"Ma'am? Are we not clan are... oh shit!\" Norman stated as he grabbed his head, sinking to the floor. Akira nodded as she produced a machine, as if from thin air, rapidly running it over him she again nodded.\n\n\"Riku, Kimon, restrain him to the floor. Onai, I need you to put your weight on him like you did the last time. Move, we haven't much time!\" Akira ordered.\n\nEven with all three holding him down, it was a struggle. Amongst the grunts and groans, there was an occasional scream from Norman. Finally a little more than an hour later, Norman relaxed.\n\n\"I think that should do it, though something is not right here, I need to speak to the emperor. The mind shield should have dissipated long before now.\" Akira stated as she looked at the three there with her.\n\nAll three could only stare blankly at her, well, all but Riku though he was hiding well himself. Excusing herself she withdrew to hold counsel with Derrick. Within a few minutes she was back a look of surprise and respect on her face.\n\nAkira looked at all three, \"I see why you didn't speak. You have bestowed a very great honor on the clan.\" Here she whispered, \"I... I did not know he possessed such power. With this new knowledge, I should have your clan brother better sooner.\"\n\nIt was only a few minutes later when, Daniel opened his eyes. Looking around, he was shocked to see a few faces that he hadn't seen in some time. Sitting up Daniel nodded slowly.\n\nDaniel bowed to all of them, he turned first to Akira. \"Isha, the fact that you are here must signify that I am finally strong enough.\" Turning to Onai, \"Ah! the N\u0101su that restored my health.\"\n\nOnai's face gained a smirk, \"I told you before that I am no N\u0101su! It is good to see you again as yourself.\"\n\nDaniel nodded, finding that there was no pain, \"As are you!\" Daniel turned his attention on Kimon. \"You never contacted me in Ame!\"\n\nKimon bowed low a wide smile on his face, \"I was still trying to learn brother, I believe I was almost there.\"\n\nTurning back to Akira, Daniel asked, \"Will it take long for, the memories I have before now and after the shield to return?\"\n\n\"It shouldn't take long though, at first it might be painful, it... are you alright?\" Akira asked seeing Daniels eyes open wide.\n\n\"Mara! She's here, she is a captain for the emperor. My god, she is more beautiful than I remember.\" Daniel was whispering.\n\nKimon was nodding, \"She is brother, I know that you are proud of her.\" Kimon stated not saying more.\n\n\"You should rest, it will facilitate your mind adjusting faster.\" Akira said.\n\nDaniel nodded as he stood moving toward the doorway. With Onai and Kimon on either side of him he suddenly stopped, turning back toward Akira and Riku.\n\nDaniel stared intensely at Riku for a few moments, \"I am sorry, I know you, have known you for a long time.\" Then in an almost inaudible whisper he said, \"Riku?\" When Riku nodded Daniel walked back to him hugging the male. \"It is such a pleasure to see you again, especially as well as you are.\"\n\nRiku could only nod, finally his hero was returning to life. A life that he had denied himself to protect the entire world of Jitaku. Something he knew he'd never have been able to do.\n\n\"I hope that your father is still enjoying a very productive life?\" Norman asked.\n\n\"I...\" Riku started.\n\n\"He is, indeed, Honored member of the Dempsy clan.\" Came a familiar voice behind them.\n\n\"Father?\" Onai stated as they all turned and bowed to Isamu Sakuta's hologram.\n\n\"Ah, also honored in the Sakuta clan.\" Here Isamu looked directly at Norman. \"What? All of you did not think that I wouldn't keep a tab on him? That I would not watch over the savior of the Sakuta clan?\"\n\nWhen Norman could only blush stating, \"I only did what anyone would, I...\"\n\n\"NO!\" Both Isamu and Riku almost shouted. Then Isamu stated, \"Not everyone would have reacted like you did. With no thought to their own safety and life. Had the Dempsy clan not already declared it, then you would have been made a part of our clan.\" Looking closely at Onai, then back to Norman with a small smile he slowly stated. \"You do realize that could still happen, there are several females that need a mate and they look at you with...\"\n\n\"Father!\" Onai suddenly said. \"I think that now is not the time for this discussion!\"\n\n\"I don't see why not.\" Isamu replied.\n\n\"Hey! I am not in the market for a mate I...\" Norman started.\n\n\"Stay out of this it doesn't really concern you!\" Isamu, Onai and Kimon shouted at him. Shit Norman thought, what in the hell was I being dipped in now?\n\n\"Like hell!\" Norman stated as Onai snapped out a hit that he easily avoided.\n\nAll conversation in the room stopped as they all stared at Norman. Shaking his head he looked at his body, what in the hell was that?\n\nKimon smiled as he also snapped off several hits that Norman avoided or blocked. Again, he could only stare at his hands and body. What the hell was going on? Then he looked over to a widely smiling Akira.\n\n\"You stretch every morning, no matter whether you feel like it or not. You go through a complex set of moves not knowing what they are, though you always do them. You also stretch each night, before you sleep.\" Akira stated her smile getting larger as Norman confirmed each thing she stated. Akira said turning toward a surprised Isamu, \"This is something that we have experimented with. Though nowhere the near skill level of a master, he is still quite capable. When we examined him the first time he accompanied Kimon to Jitaku, we found that his mind was extraordinary. It was thought that this procedure would work on him.\"\n\n\"The infusion,\" a pale faced Norman said as his legs wobbled a bit.\n\nA now sad faced Akira nodded, \"I wanted to stop it when the pain started. You wouldn't allow it. When you saved Riku, many who saw it happen, couldn't believe that a Gaikoku (foreigner) could move with the speed that you did. The clan made you a member easily, Kimon had petitioned the clan for years to add you.\"\n\nNorman looked at Kimon with a new appreciation, mouthing thank you. Kimon nodded and bowed, \"For all that you have done for me, it felt like a small thing.\"\n\nThis time it was Onai's turn to stare at the two males. \"We should perhaps in the future, discuss all these things that brother Norman has saved you from.\"\n\nKimon and Norman grimaced at her words. \"Perhaps, though I think for the health of my brother, many things should not be discussed.\" Norman said with all honesty.\n\nOnai looked at Norman's deadly serious face then nodded, \"So agreed brother.\"\n\n___________________________________________________________\n\nOn board the lead Delcron ship, Emperor Kandra growled then cursed. Immediately after Mary's warning, the long range communication went down. Shaking his head, then the alarms had started going off. A smile started to grow on his lips as he saw the ever increasing number of Creagon ships.\n\nAh! they seemed to be rather upset if they were coming in a force this large. Sighing, he knew he was going to have to do this... A moment later another weak transmission came from Mary.\n\n\"Emperor Kandra, this is Mary. Emperor O'Toma wished you to know that our empire is engaging the Creagon fleet. He has stated that, if you want to also, to be ready, he will be there in thirty of our time units. He...\" Mary stated then the transmission went dead.",
        "Kandra nodded, a chance to see this new empire at war. It would be very informative, especially if they ended up at war with each other.\n\nHe called all ships informing them of the Creagon advance. He also informed them that, the empire that they were traveling to was getting involved. He wanted as many as possible to observe, for they might one day engage in war with the new empire.\n\nA movement near the bridge entrance, had Kandra turning to see his daughter dressed in full battle armor. A smile crossed his lips, ah yes, there was nothing like a damn good battle.\n\n\"This is Emperor Kandra, I want all in full battle armor. Battle fleet form up on my ship. Second family fleet form in behind them. I want the negotiating fleet forming in with them. I want all systems checked, all weapons charged and ready. To the glory of the empire! The new empire will also be fighting with us. Do not fire upon them, for now they will be our allies.\" Kandra informed his fleets.\n\nKandra nodded as only ten minutes later, all were confirming his orders. Good he thought, as his pulse started to race, all we need now are the bugs to kill.\n\n________________________________________________________\n\nDerrick watched as Admiral Hartwell's ship appeared a ways off. \"Sire?\" Hartwell's hologram stated as soon as Johnathon pulled next to Shelby. \"I need to get these females off the ship.\" Hartwell said even as Derrick heard the extremely loud protests of Bee.\n\nSmiling a second, Derrick looked at Shelby who IMTed all four females on board. The screams of all four was nearly deafening. \"NO! The evil eye! We are surely going to die.\"\n\nDerrick could only shake his head as suddenly all four were crying hanging on to each other for dear life. Derrick was about to ask Shelby if she could help when she moved to the three females. Then to his disbelief his com went off. Crap! Now what?\n\n\"Hello?\" Came an unfamiliar male voice. \"I was told by Mary to contact this frequency if we needed anything.\"\n\nDerrick's brows furrowed his brow in irritation. \"This is emperor O'Toma, who am I speaking to?\"\n\n\"Sire! I apologize for interrupting you. This is Trent Hartwell; I was wondering if i might see my sister. I...\" A small smile crossed Derrick's mouth as he nodded to Shelby. A moment later Trent Hartwell appeared in the room. \"haven't seen her in some... time.\"\n\nTrent immediately bowed to Derrick. \"Arise Trent.\" Here Derrick nodded to Shelby again. This time a hologram of Joseph Hartwell appeared as did that of Lucie Hartwell. \"I have someone here that is anxious to see the both of you.\"\n\n\"Joseph! Lucie! I thought to never see the both of you alive.\" He said, both Lucie and Joseph Hartwell were shocked to say the least.\n\n\"It is also good to see you alive and well, brother.\" Joseph Hartwell said his eyes tearing up though he was fighting it.\n\nLucie had no such conviction as she cried tears of happiness. \"I had heard that you and Uncle were killed. I should have known that you, like Joey, were too mean to die.\" Joseph growled causing Lucie and Trent to laugh.\n\n\"I told you to stop calling me that! Perhaps I should administer another spanking?\" Joseph threatened.\n\nLucie's eyes narrowed, \"You can try, as I said before though, I think you'd find it extremely difficult. You might catch me unaware once but not again.\"\n\nDerrick was about to speak when he noticed that all four females were staring at Lucie. They all were almost bowing to her. Derrick could hear them whispering that they had never seen a female as strong as Lucie or Shelby.\n\nDerrick sighed then said, \"We do not have time to travel to the Imperial planet. The four of you will remain here as I will not be allowed to engage the enemy. All ships, all Captains report in.\" A moment later Derrick nodded as they all flashed out.\n\n______________________________________________________________________________\n\nSeveral alarms were going off on Emperor Kandra's ship. Not far from his fleet, all of the Delcrons watched in wonder as space rippled. One by one, ships, hundreds of times larger than their largest ship, started to emerge.\n\nKandra could only shake his head at the sheer size of each ship. He would have to plan, for a long time, to come up with anything to try and defeat one, let alone more of them.\n\nA moment later Derrick's hologram appeared before Kandra. \"Emperor Kandra, we can transport a vast majority of your fleet closer to where they are. It would take two tries to get all of you. As I said we can if you wish.\"\n\nKandra thought a moment then nodded. \"To engage in battle sooner is very appealing.\"\n\nDerrick nodded as the first wave vanished then appeared a few minutes later. The second wave joined the rest of the ships as all their alarms went off.\n\n\"Ah,\" Kandra stated as he watched the advancing Creagon ships. \"It is a good day to battle and kill the enemy.\""
    ],
    "authorname": "Pars001",
    "tags": [
        "non erotic",
        "science fiction",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-72"
}