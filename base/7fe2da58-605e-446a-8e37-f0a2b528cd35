{
    "title": "The Mask of Pan",
    "pages": [
        "The Great War had ended six years ago. For some of us, though, it was still a part of our daily lives.\n\nI had enlisted when I was seventeen. Six months later I was in hospital with pieces of shrapnel embedded in both of my legs. I recovered fairly quickly and returned to the fighting. As luck would have it, only a week before the Armistice was declared I was back in hospital, this time with two bullet wounds in my upper right chest.\n\nThe wounds were fairly clean and the bullets had gone completely through, nevertheless it took over six months for me to be released. Miraculously I didn't succumb to infection and my healing was fairly successful.\n\nWhile I was in France fighting for my country, both of my parents died as victims of the influenza pandemic that was raging that year. I was unable to even attend the funerals.\n\nMy sister, who was older than I, had made a successful marriage and was well provided for so she insisted that all of my parents' estate come to me. As soon as I was well enough to travel I returned to Baltimore.\n\nI discovered that there was nothing for me, there. My close male friends had all died in the war and I had never had a lasting relationship with a woman. Only a few months after my eighteen birthday I was independently wealthy and rootless. I returned to Europe.\n\nIn the years since the War I had wandered aimlessly, never spending much time in any town or country. I knew that I was wasting away, both physically and spiritually.\n\nI found myself in Rome and had already spent two months just wandering the city. There was a dealer in antiques and books that I visited several times, purchasing a few small items but more intrigued by an object which he refused to sell. In the private area behind his counter he had several objects on the wall. One of these was a mask of Pan which I coveted. It was carved wood and covered the top of the head like a helmet, with eye holes in the front and a curved bridge that rested on the nose. Curled goat horns were carved on each side. He and I had discussed the mask and he told me that it wasn't old but was very dear to him, for which reason he couldn't part with it.\n\nOn this particular day I had unearthed a portfolio of prints and engravings representing various Classical paintings, sculptures and mosaics. There were several pages in the portfolio that were of a particularly erotic nature, most of them dealing with sexual congress between males.\n\nI was looking at the prints when I became aware of the shop owner standing at my elbow.\n\n\"I can give you a very good price on those.\" he said. \"They have been here a long time and are not as popular as I expected.\"\n\nI was a bit embarrassed to be caught out looking at erotic pictures but I did want the portfolio. He and I agreed on a price and as he wrapped the package he said, \"You are an American?\"\n\n\"Yes,\" I replied, \"I've more or less been in Europe since the War ended. I can't seem to stop wandering from city to city.\"\n\n\"Perhaps you need some time in the countryside.\" he responded. \"There are many interesting small villages where one can rest and recuperate. They also often have undiscovered advantages. There is such a village that I often spend my holidays in. It is very small and quiet and it has some most spectacular ancient ruins that are hardly known.\"\n\n\"Roman ruins?\" I asked, skeptical that anything of that much interest could be undiscovered by tourists.\n\n\"No, these are much older than the Romans. These are prehistoric ruins, though I am uncertain even in calling them ruins. They are the remains of a religious compound I believe, somewhere that was sacred before my ancestors even arrived in this country. I think you would find them of great interest. Also, the mask of Pan that you are so interested in was made in that area. Perhaps you will find one like it.\"\n\nI agreed that I would like to spend some time in the country, the Rome summer was torturously hot and the city had already had several outbreaks of summer fevers.\n\nThe shop owner picked up a pencil and on the brown paper of my parcel he delineated a series of clear instructions on how to arrive at the village he'd mentioned, trains to take, where to change trains, where to disembark and how to walk to the village from the train station. I decided that I would take advantage of his recommendation and early the next morning I began my journey.\n\nAfter a day of traveling I found myself at the station where I was to stop. There was nothing more than a covered platform, not even a ticket seller in the office, so I shouldered my pack and began my walk. I still retained the pack I had carried through the War as my only luggage.\n\nThe dealer had told me that the village was a distance of about seven miles from the train and after walking for several hours I found myself entering the settlement just as dusk was falling.\n\nThere was a small caf\u00e9 with a few outdoor tables on the main street where the proprietor was closing his business for the night.\n\nMy Italian was rudimentary but serviceable so I approached him and asked, \"Pardon me, sir. Is there an inn or a rooming house where a traveler may spend the night?\"\n\nHe looked at me with no expression for a moment, and then beckoned me to follow. He led me several doors up the street until we arrived at one of the last buildings in the village. He knocked and the door was shortly opened by a handsome middle aged man.\n\nWhile the two of them conversed I looked him over. He was of the typical swarthy complexion of those parts with abundant black curly hair. I could see from the thick musculature of his arms and chest that he was used to physical labor. He had on a fine linen shirt that clung to his chest and which had several buttons unfastened, exposing his curly chest hair.\n\nI could decipher enough of the conversation to know that he had been told that I was American and that I needed lodgings for the night.\n\nHe thanked the inn owner and then turned to me.\n\n\"Come in.\" he said.\n\nI entered and he closed the door behind me.\n\n\"I suppose that you haven't eaten.\" he said in lightly accented English.\n\n\"No, but please don't trouble yourself. I can get something in the morning.\"\n\n\"When did you last eat?\" he asked. He had a very unsettling way of looking at one; his intense eyes seemed almost to bore into you.\n\n\"It was early this morning.\" I replied. \"But I'm used to skipping meals.\"\n\n\"Nonsense, you look like a ghost.\" he replied. \"I can make you something. It won't be fancy; I was not expecting a guest. Would an omelet suffice?\"\n\n\"An omelet would be wonderful.\" I said.\n\nHe ushered me down the hall and seated me at his kitchen table while he made his preparations. I observed him from behind, admiring his virile physique and fleshy buttocks. \n\nWhen the eggs were cooked he served me with home made bread and a light wine. I found myself ravenous and ate everything on offer.\n\nI cleaned my plate, ate all of the bread and downed two glasses of wine while he sat and watched me. When my hunger was finally appeased he asked, \"Was the meal satisfying?\" \n\n\"I believe that was the best meal I've eaten in years.\" I said. \"Restaurants in the capital could do no better.\"\n\nHe smiled at the praise and sipped from his drink while I looked around me. The kitchen was large and spotlessly clean with large copper pans hanging on the wall. Wide windows were flung open to the night and I could see a forest at the edge of his cleared yard. I became aware of an odor, slowly growing stronger, that permeated the room.\n\nIt was the scent of some flower, somewhat like the smell of violets but earthier. There was a strong under note to the aroma that at first I couldn't place, I only knew that it was somehow vaguely stimulating.\n\n\"What do I smell?\" I asked. \"Do you have a garden?\"\n\n\"It is the scent of a wild flower that grows only in this part of Italy. They bloom at night.\" he said. \"Do you find it disagreeable?\"\n\n\"Rather the opposite.\" I replied. \"I wish that I could have cologne that smelt so good.\"\n\nI suddenly realized what the underlying scent reminded me of. Many times in my life, during the War and during my travels, I have spent sometimes days without the luxury of bathing. The subtle scent in the flower's aroma was almost identical to the smell of an unwashed masculine body, the heady aroma that comes from the cock and balls when they are allowed to ripen. Realizing this caused my cock to unexplainably stiffen a bit.\n\nMy host refilled my wine glass and asked, \"Why have you come here?\"\n\n\"On a whim, actually.\" I said. \"I met an antique dealer in Rome who told me that there are unusual sacred ruins close to this village that he thought would interest me. I was tired of Rome and wished to be somewhere less urban, so here I am.\"\n\n\"I know who you speak of.\" he said. \"He has often stayed here. Did he tell you anything about the sacred ruins?\"\n\n\"I'm sorry, we barely conversed. I neglected to even ask his name. I suppose I had been looking for a reason to move on.\" I sat musing for a moment and then I asked, \"The ruins, are they as unique as I've been told?\"\n\n\"I will allow you to be the judge.\" he said. \"The local men do not like strangers intruding there uninvited. I will arrange for one of the locals to guide you in the morning. Now, come, I will show you your room.\"\n\nHe rose and bade me follow him down a short hall. At the end, he flung open a door and lit a lamp. From where I stood in the doorway I could see the entire space, a whitewashed room with heavy old rustic furniture. The bed was high and soft with snowy white sheets and white curtains also covered the broad windows along one wall. My host crossed the room and, drawing back the curtains, flung the windows wide. The scent of the wildflowers filled the room.\n\n\"What a lovely room!\" I exclaimed.\n\nThe host smiled broadly and said, \"The bathroom is through here.\" \n\nHe stepped into the hall and opened another door across from my room.\n\n\"I will leave you now to get some rest.\" he said, then stood looking at me. I peered back, unsure of what he was waiting for.\n\n\"Aren't you going to ask me what I will charge you for your room and meals?\" he asked.\n\n\"I'm sorry, I'm such an ass. I'm not very good at this kind of thing. What will you charge?\"\n\n\"Something appropriate but not too dear.\" he said and turned and left me there.\n\nI washed off some of my travel grime, marveling at the luck of finding a place that had indoor plumbing. The large porcelain bath tub beckoned but I decided to go to bed and wait until the morning for more thorough ablutions.\n\nThe bed in my room was exquisite, soft but firm and wide enough for two or three. I stripped down to my briefs and climbed in, reveling in the cool night air blowing softly over my bare chest. I must have fallen asleep immediately.\n\nSome time later I awoke, badly needing to urinate. After I had satisfied the urge, I came back into my room and stood at the open windows. The moon was almost full and flooded the landscape with its cold light, making the shadows and the leaves a shade of black. I became aware of movement at the edge of the forest and as I watched a white figure passed through the trees. I could tell that it was a man by his tread but he was too far from me to discern anything more than the paleness of his dress. I lie back down and once again fell asleep instantly.\n\nThe next morning my landlord woke me by coming into the room. I had kicked the sheet off in the night and lay, clad only in my briefs, sprawled across the bed.\n\n\"I've drawn you a bath.\" he told me. \"Afterward, you will have breakfast and I have already arranged for Paolo, one of our local men, to guide you to the temple.\"\n\nHe came and stood beside the bed as I sat up and swung my feet to the floor. I became aware that he was staring at the scars on my chest and shoulder.\n\n\"You were in the War.\" he said. \"And so young.\" He touched the scar on my chest with one finger tip and asked, \"Were you a hero?\"\n\n\"Nothing so grand.\" I replied. \"I was just another of the millions of foolish young men who thought that we were fighting for something that mattered. I even lied about my age so that I could join up early. I never had an inkling that we were merely fighting and dying to appease the egos of other men who wouldn't deign to dirty themselves. But my scars remind me every day.\"\n\nHe looked down at the many shrapnel scars on my legs and said, 'So many wounds.\"\n\n\"I was lucky.\" I said. \"At least I came back. So many beautiful young men were lost forever.\"\n\n\"Most of the men in the village are also veterans.\" he said. He came back to himself and said, \"Your water will be getting cold. Not that that is a bad thing in this heat.\"\n\nI followed him across the hall to the bathroom. He had filled the tub almost to the brim and there were the blossoms of blue flowers floating in the water.\n\n\"The local wild flower we spoke of.\" he said, indicating the blooms. The odor rising from the steaming water was intoxicating.\n\nHe turned to go and I dropped my briefs at my feet and began to climb into the tub.\n\n\"If you will give me your dirty clothing I will arrange to have it laundered.\" he said from where he stood in the doorway, still watching me. \"I shall go see to breakfast.'\n\nThe deep warm water was sheer luxury and I lay back and enjoyed it. The flowers in the tub were even more fragrant close up and their scent caused my cock to harden and expand despite my efforts to control it. I hastily washed myself with the rough cloth and climbed out of the tub before my host happened back and found me with a stiff cock and wondered what sort of freak he was sheltering.\n\nWhen I returned to my room I found that my host had unpacked my belongings. Fresh clothing was laid out on the bed and awaiting me, including a shirt of fine spun linen identical to the one my host wore. It had been washed to a velvety softness and was the same pale blue of the unique local flower. He had found the portfolio of prints and etchings and had placed some of them at various points around the room along with vases of the pungent blue flowers. Initially I was embarrassed at the prints but, since he had thought them worthy of display, I ceased to worry.\n\nWhen I was dressed I went to the kitchen where a sumptuous meal awaited.\n\n\"It was very kind of you to unpack my things.\" I said. \"It is also very kind to lend me one of your shirts.\"\n\n\"I didn't think your shirts suitable for this heat. That color is very becoming on you, it matches your eyes. I believe I also have some lighter pants that a guest left behind that might fit you.\" he replied. I was wearing canvas work pants that I had bought in America. \"I hope you don't mind me taking the liberty of displaying your art works. I thought them very beautiful. I'm glad that you are an admirer of our ancient customs.\"\n\n\"Ignorant, but an admirer, yes.\" I replied. \"By the way, the forest behind your building, is it safe?\"\n\n\"Why ask such an odd thing?\"\n\n\"In the night I awoke and was looking out of the window at the moonlight. I thought I saw a figure in the woods.\"\n\n\"Perhaps you saw one of the satyrs that the ancients believed frequented these hills.\" he said.\n\n\"This seemed to be a more mortal being.\" I replied.\n\n\"Probably you saw some benighted traveler who had come late from another village. Or maybe someone who was on an emergency errand. I assure you there is nothing to worry about in our village.\"\n\nHe watched me the whole time with that penetrating and discomfiting stare.\n\nAfter I had eaten my fill and had another cup of his excellent coffee, there was a knock at the door. My host went to answer and came back leading a young man about my age.\n\n\"This is Paolo.\" he said. \"He will take you to observe the temple and perhaps answer any questions you might have.\"\n\n\"I'm glad to meet you.\" Paolo said in excellent English.\n\nHe, like my landlord was olive skinned with thick black hair. His features were sharper with a high curved nose and full lips. Thick black eyebrows capped eyes of a darkness and depth I'd never seen before, which were fringed with incredibly long lashes. I wondered what they must think of a man as pale skinned and anemic looking as I compared to them.\n\n\"Will it be acceptable for me to visit the ruins?\" I asked Paolo. \"I do not want to offend any of the local people.\"\n\n\"No fear.\" Paolo said. \"With me accompanying you, no one will think twice about it. It is only the boorish and crude they wish to bar from the site. You will soon see why.\"\n\nWe took leave of my host and, surprisingly, Paolo led me to the rear of the building we had just exited.\n\n\"The path through the forest begins back here.\" Paolo told me as he led the way through a field of closed flower heads to an opening in the tree trunks. I could see a well worn path that had been invisible from my room.\n\n\"This must be the path that was taken by the person I saw last night.' I said.\n\n\"You saw someone? Could you tell who it was?\"\n\n\"No, it was too dark and they were too far away. I wouldn't have even noticed if he hadn't been wearing such light colored clothing.\"\n\n\"It was probably one of the locals on a midnight errand. Or, maybe on his way to an assignation.\" Paolo said. \n\nAs I followed Paolo through the pines and cypress trees I was struck by how much cooler it was in the forest. A lovely ambient light filtered through the treetops and I could hear a chorus of insects around me. I also noticed Paolo.\n\nHe had a very powerful slim body which his clothing seemed to accentuate. His broad back was roped with muscles that played beneath the thin linen of his shirt and even though his light cotton pants were loosely cut, they hugged the full globes of his buttocks. Again I found my organ responding, a condition I had almost never before experienced in connection with another male. My confusion was compounded when Paolo abruptly stopped and turned back to me on the path.\n\nHis eyes noticed the obvious tumescence in my trousers and he gave me a sly smile.\n\n\"We are almost at the site.\" he said. \"Look thoroughly at what I show you first, before you ask me questions.\"\n\nWe rounded a curve in the path and at first all I could discern was a massive collection of boulders. Some of them were higher than a house, others just as wide. We followed the path around to the side of the mass and then I saw what was hidden in the forest.\n\nIn a sunlit clearing there was a massive shaft of stone that rose from the boulders, gracefully soaring with a slight curve. At the top there was a rounded, helmet shaped head that had the groove in the middle that delineates the shape on the underside of a cock head. I then noticed that there was a thick channel that ran down the length of the enormous phallus and that two huge rounded boulders were positioned at the base where a man's balls would be. The huge cock stood at least fifteen feet high and was so large around that I wondered if two men spreading their arms could reach each other around it.\n\nIn front of the giant cock there was a flat space made from an enormous stone that almost appeared as some sort of plaza. I noticed that there were signs that a fire had been made many times in the past at the edge. Also, at the base of the cock, in between the enormous stone balls, there was another stone that had an angled face and several hollows worked into the surface.\n\nI stood, literally speechless, before the breath taking sight.\n\n\"Who made this?\" I asked Paolo. \"Surely this is not a remnant of the Romans.\"\n\n\"It goes back in history much further than that. So far, in fact, that the people are lost to modern man. Some have theorized that it was made by a cult similar to the Druids in England but no one really knows.\"\n\n\"You would think there would be a rush of academics to claim this site as their own.\" I said.\n\n\"That is why the local people are so secretive. They are very jealous of sharing it with outsiders.\"",
        "\"And yet, you've brought me here.\"\n\n\"You are one of us, that was immediately apparent.\" Paolo said.\n\nThe remark was so unexpected and confusing that I decided to try to process it later.\n\n\"May I go closer?\" I asked.\n\nPaolo laughed and said, \"I don't believe that after all of these centuries you can damage anything.\"\n\nI approached the huge shaft and examined the surface. Close up, it was easy to distinguish the marks of prehistoric tools that had worked on the monolith. I made a circuit of the stone and then began to examine the peculiar stone placed in front. On the inclined face there was a long bowl shaped indentation that lowered to a bowl on a shallow stone shelf below. On either side of the shelf there were stone steps that looked as if something had once sat upon them. The top of the altar was flat and again there were indentations carved into the sides that were crossed by stone handles that something could be tied to.\n\n\"Obviously this was once an altar.\" I said to Paolo. \"But I wonder at how it was used?\"\n\n\"I have heard that virgins were sacrificed here.\" he replied.\n\nI looked at the surrounding forest and at the proud erection and I said, \"It is hard to believe anything so gruesome could have taken place here.\"\n\n\"I don't believe it was their lives that were sacrificed.\" Paolo said. \"Merely their virginity.\"\n\n\"Then, my touching the stone is not a sacrilege.\" I replied. \"Nevertheless, the configuration seems very awkward.\"\n\nPaolo did not reply.\n\n\"There has been a fire made here recently.\" I said, walking to the edge of the plaza.\n\n\"Vagrants sometimes camp here and travelers who can't afford a room. They don't harm anything.\"\n\nEven though it had felt cooler when we first entered the forest, the clearing was exposed to the full sun and the heat and glare bounced back from the face of the rocks. My shirt was entirely drenched with sweat and clinging to my body. Paolo's shirt also was wet and clinging but I was careful not to look too long or closely at him.\n\n\"Is it always so hot here in the summer?\" I asked.\n\n\"This summer has been particularly brutal.\" Paolo replied. He stood musing for a moment and then he asked, \"Would you like an opportunity to cool down?\"\n\n\"If at all possible.\" I replied.\n\n\"We're only a short distance from a small river. The water is cold because it comes from the mountain. Shall we go there?\"\n\n\"With all possible speed.\" I replied. \n\nAs we left the clearing via another path I looked back at the enormous cock rising out of the ground. I regretted leaving and hoped that I would be able to visit again.\n\nAfter walking for some minutes we came to the bank of the waterway. As Paolo began to remove his shirt I suddenly became self conscious.\n\n\"I have some rather ugly scars.\" I said.\n\n\"I do, also.\" Paolo said. \"We can compare our wounds.\"\n\nNervously I doffed my clothes, my back turned to Paolo, and when I was nude I turned to face him. He was nude, also, and an exemplary vision of masculine beauty. He truly resembled one of the prints back in my room.\n\nWide muscular shoulders topped a muscular chest that was thickly coated with black curls. His slim waist flared to a flat abdomen that was also covered in curls. At his crotch a thick uncircumcised penis hung over a hairy ball sack. I at once wondered how large his cock would grow when excited.\n\n\"Your skin is so pale.\" he said, making me aware that I had been staring at him. \"You should spend more time in the sun. And you are blond all over, I haven't seen that before.\"\n\nI wondered if he was making fun of my sparse body hair.\n\nPaolo stepped closer to me and I could feel the heat radiating from his body and smell the clean, masculine aroma of his flesh.\n\n\"You were shot.\" he said, looking at my scars.\n\n\"Twice, unfortunately.\" I replied, pointing to each entry. He grabbed my shoulder and turned me so that he could look at my back and I was aware of his flaccid cock hanging less than an inch from my hand. I had an overwhelming desire to cup it in my palm and feel its weight.\n\n\"The bullets went all of the way through?\" he asked. \"I suppose that is why you survived.\"\n\nHe looked at the rest of my body and noticed the many scars on my legs.\n\n\"I am very fortunate.\" he said. \"I wasn't shot or hit by shrapnel. I have this, instead.\"\n\nHe turned to the side so that I could see the back of his shoulder, then lifted his arm. Beginning on his shoulder blade there was a thick, livid scar that curved around under his arm and descended his torso until it finally ended on the front of his right hip, mere inches from his cock.\n\n\"The German who gave me this was trying to stick his bayonet in my back.\" he said. \"I managed to turn at exactly that moment and you see the result. I lost more blood than you can imagine and I was unconscious for two days after they found me. It took a long time for me to heal, every time I tried to move I tore the stitches open.\"\n\nEven though I was full of sympathy for what had been done, I couldn't stop myself from looking at his lush ass. The rounded globes stood out in almost perfect semi-circles from his hips and the deep crack was filled with more of his wiry curls. I could feel my cock beginning to swell, so I ran forward and plunged into the river.\n\nIt was indeed cold and I lost all inclination toward an erection. Paolo followed me in and I submerged myself so that I was sitting on the silted bottom with only my head above water. Paolo went out further and swam back and forth in front of me with his superb ass cheeks visible above the water line. I sat puzzling over my lately discovered lust for other men.\n\nAfter half an hour or so, we heard voices and a group of four men came toward us from the path. They shouted out a greeting to Paolo, acknowledged me with a salute and began to undress. I judged them to also be roughly my age and when they stood naked and unembarrassed on the bank I was confronted by four more examples of masculine beauty. The thick muscles of their arms and bodies betrayed their history of hard work.\n\nThey immersed themselves in the river and began splashing each other and Paolo, frolicking like children. I watched their antics for awhile and then Paolo came beside me.\n\n\"They are farm workers who are close to the village.\" he said. \"They've come for a midday break. We should leave soon so that you may have lunch.\"\n\n\"Let's not hurry.\" I replied. \"I'm not hungry and the water and breezes are so cooling. I want to lie on the bank and dry first.\"\n\nI stood and walked to the bank and climbed up onto a sun warmed rock that lay there. It was so large that I was able to lay down full length and rest on it. Paolo came and sat beside me and watched the others playing in the water.\n\nI must have dozed off because the next thing I was conscious of was the men in the river shouting something and laughing. I opened my eyes and looked up at Paolo beside me.\n\n\"What are they shouting?\" I asked. \"What's going on?\"\n\nPaolo smiled down at me with a mischievous look and said, \"They are shouting grosso cazzo, it is what they call the temple. It means 'big cock'.\"\n\nHe then looked down the length of my body and I became aware that I had developed an erection in my sleep. I am one of those men whose cock looks fairly normal when it is soft, maybe a bit larger than most. When I have an erection, however, it grows to a disproportionate size. I've always been a bit ashamed of how over sized I am and had been careful to not allow anyone to see me. Now, I was lying in the sun with a massively hard cock in front of total strangers.\n\nI quickly rolled over onto my stomach and said, \"I'm so sorry. Please forgive my crassness.\"\n\nPaolo, still smiling, said, \"It is only natural. They are probably jealous that you are so well endowed.\"\n\nThe men in the water had come closer, still shouting the phrase and one even splashed water on me. When I looked over my shoulder, they were motioning for me to turn back over.\n\n\"They're a cheeky bunch, that's for sure.\" I said.\n\n\"They mean no harm; it is a joke to them.\"\n\nI thought for a moment about what he had said, then jumped up and faced them. I grabbed my erect cock at the base and waggled it at them as they laughed and made cheering noises, then for good measure I turned and shook my buttocks at them to more loud cheers.\n\nPaolo was laughing so hard that he had trouble breathing. I began to pull on my clothing and the men in the river made booing noises and slapped the water loudly while making motions for me to join them.\n\n\"We'd better go before they beat me.\" I told Paolo.\n\n\"I don't believe beating you is what they have in mind.\" he replied, still laughing.\n\nWhen we were dressed we started back while the farm workers still jeered and catcalled. I heard one shout something about the American and I asked Paolo what he had said.\n\n\"He told me, 'Paolo, be sure to bring the American back for us to play with.'\"\n\nI wasn't sure how to interpret that and was turning the phrase over in my mind when Paolo said, \"They want to be your friends, don't take things so seriously.\"\n\nAs Paolo led me back through the forest I began to think of how his naked body had looked and of how the farm workers had looked in the water, their abundant body hair plastered to the flesh and the flesh gleaming in the sunlight. Once again, I began to grow an erection.\n\nWhen we left the forest I realized that Paolo had led me back via a different path and I was sorry that I didn't get to once again see the phallic temple.\n\n\"Will I be allowed to go back to the temple, again?\" I asked.\n\nPaolo smiled again and said, \"Be assured, I will guide you there soon.\"\n\nWe crossed a field and were soon back in the village. When I knocked at the door where I was staying, the landlord opened it almost immediately and ushered us inside. As I passed him he smiled and said, \"You smell like the river. And you have gained some color from the sun. I wish I had known, I would have come along.\"\n\nI envisioned what he must look like nude, his muscular hairy body bare to the sun and my unwelcome erection began to start swelling once again.\n\n\"I have found the trousers I mentioned earlier.\" he told me, brandishing a pair of natural colored linen pants. \"Try them on and see how they feel.\" he said.\n\nI took the pants and started to go to my room when he said, \"There is nothing to be shy about, we are all men here.\"\n\nI decided that he was right and peeled off my heavy pants.\n\n\"No one wears underwear when it is this hot in the village.\" Paolo said and I remembered noticing his own lack when we dressed. I peeled off my undergarment and pulled on the light trousers as he and the landlord watched. With the thin shirt, it was almost as if I were wearing a pair of light pajamas, wonderfully cool.\n\n\"Leave your shirt tails out.\" the landlord said. \"And leave those heavy boots off, too. We will make a real villager of you in no time.\"\n\nI walked about, marveling at the cool air flowing against my body, the feeling of my cock and balls swinging untethered and the cool tile against my bare feet.\n\n\"Supper won't be for an hour or two.\" he then told me. \"Why don't you go down to the caf\u00e9 and enjoy the breezes there and allow the locals to see and become familiar with you. Paolo, I need a word with you, please.\"\n\nHe ushered me back out and as I walked barefoot the few doors up the street I looked back over my shoulder to where he and Paolo were in deep conversation. I couldn't hear what they were discussing.\n\nWhen I arrived at the caf\u00e9, I sat down and looked around myself. There were several men sitting at one of the other tables, engrossed in a game of dominos and they merely nodded to my greeting and stared at me with blank eyes. I was feeling very bohemian until I noticed that some of the other men were also barefoot. \n\nAs soon as I sat down the inn keeper appeared with a glass which he set down in front of me before I had a chance to order. I thanked him and looked at the drink.\n\nIt was a pale pink, somewhat cloudy. I sniffed it and at once thought of the blue flowers that grew in the village. I sipped it and it was as if the perfume had been distilled and sweetened, that same aroma with its underlying note of muskiness. I found it delicious.\n\nAs I sat sipping my drink and pondering the morning's events I became aware of a singular apparition entering the village and making its way along the street.\n\nA bicyclist, clad in a soft tweed cap and plus-fours wended his way toward the caf\u00e9. When he arrived in front of where we all sat, he dropped the bicycle in the dust and loudly asked in a heavy British accent, \"Does anyone hear speak English?\"\n\nIf the plus-fours hadn't already made me hate him on sight, the braying voice interrupting the peaceful afternoon would have.\n\nNo one spoke and finally I felt compelled to answer, \"I do.\"\n\n\"Oh, thank heavens!\" he exclaimed and immediately moved up and seated himself across from me. \"I thought I was doomed to ride across this entire country before I heard another civilized voice.\" He looked down at my bare feet and at my clothing and then said, \"At least you look only half savage.\"\n\n\"We all have our aspirations.\" I replied.\n\nHe made a great show of waving at the inn keeper and snapping his fingers at him until the man leisurely walked over to where he sat. He looked at me and I raised my eyebrows in helplessness.\n\n\"Cool drink.\" the Englishman said loudly, miming drinking something. \"Orangeade? Cool drink?\" he repeated as though he were talking to a half-wit.\n\nAs the proprietor turned his back and walked away, the Englishman said, \"You would really think that these savages would learn to speak proper English if they expect civilized people to visit here.\"\n\n\"You could always learn Italian.\" I said.\n\n\"What a waste of time. No one I know speaks Italian.\"\n\n\"It must be a trial.\" I replied.\n\n\"Do you know, I couldn't get anyone to tell me where I am after I left the train? It's almost as if they didn't want to.\"\n\n\"Yes,\" I replied, \"I'm running into more and more ignorant people daily.\"\n\nThe Englishman gave me an odd look and I went on.\n\n\"I suppose that they were unaware of where you were going, also.\" I said. \"Where are you going?\"\n\nThe inn keeper appeared and roughly set a cup of steaming coffee in front of the Englishman, making sure that it slopped over the brim and into the saucer.\n\n\"Now, honestly, can you imagine serving boiling coffee in this heat? Is everyone in this country mad?\" he asked me. \"What is that you're drinking?\"\n\n\"A medicinal tonic I'm forced to imbibe frequently.\" I said. \"I suffer terribly from flatulence and this helps somewhat.\" He gave me a look of revulsion. \n\n\"Coffee at this hour must be a local custom.\" I then said. \"Where did you say you were headed?\"\n\nThe Englishman distastefully pushed the steaming cup away and said, \"I'm searching for some ruins that I've heard mentioned. A Roman temple or some such. I'm not really sure, I just heard that there were some extremely risqu\u00e9 friezes or something of the sort and I thought I would take some photos to show my friends back home.\" He held up the camera suspended on a cord around his neck.\n\nThe mere thought of this crass idiot trespassing at the sacred site, leering and snickering, sickened my stomach.\n\n\"There were some standing stones here, once.\" I said.\n\n\"Standing stones? What good are standing stones? We have the most famous standing stones in the world back in England. If I wanted to see standing stones, I could have taken a day trip to Stonehenge.\" he replied.\n\n\"Well, even they aren't available to view.\" I said. \"During the War, the Germans dynamited them and now all that remains is a pile of rocks. That's one of the reasons that the locals hate foreigners so venomously.\"\n\n\"I didn't think the Germans made it to this area.\" he said, his eyes darting about.\n\n\"Apparently they made a special trip.\" I said. \"Some idea of destroying national pride or something. Anyway, there's nothing left to see.\"\n\n\"I was given a bad tip, wasn't I?\" he replied. \"I should have guessed there was nothing worthwhile in a sinkhole like this. Is there at least a hotel or rooming house?\"\n\n\"Oh, no.\" I said. \"I've been here a while now and one of the locals was kind enough to allow me to sleep in his goat shed. It's really quite comfortable, except when the goats get loose. I've already had a shirt and a pair of cufflinks eaten. Would you be interested in sharing my space?\" I smiled most sincerely.\n\nWith a look of abject disgust, the Englishman said, \"I believe I'll just chalk the whole affair up to experience and make my way back to the train.\"\n\n\"In that case, I should hurry if I were you.\" I said. \"There are robbers and brigands loose all over these mountains that come out at dark and as I said before, the locals despise foreigners. Such a fancy bike as yours would probably be worth your life to some of them.\"\n\nThe Englishman blanched and said, \"You're probably right. Thank you for your help, such as it was.\"\n\nHe threw some coins on the table, remounted his bicycle and briskly peddled off in the direction he had come. \"What an arrogant prick.\" I muttered to myself and turned to see the men at the other table looking at me.\n\n\"Scuse\" I said.\n\nWhen he was out of sight, the inn keeper appeared at the table.\n\n\"The gentleman didn't like his coffee? \"he asked in perfect English.\n\n\"Apparently he was in the wrong place and had to hurry off to catch a train.\" I said. \"What do I owe you for my drink?\"\n\n\"The first drink at my caf\u00e9 is always free.\" he replied. \"We will tally up when you decide to leave the village.\" He hesitated and then asked, \"Was the drink to your liking?\"\n\n\"Very much so.\" I replied as he smiled. \"It is made from the blue flowers, isn't it?\"\n\n\"Indeed so. It is distilled only here in this village from our flowers and it is not to everyone's taste.\"\n\n\"That may be so but I found it delicious.\" I said.\n\nThe inn keeper picked up the coffee and flung the brew into the street, then went back into his building. I sat musing, totally at peace once more. The drink seemed to have energized me, I could feel the blood coursing in my veins and the light and smells of the village seemed somehow heightened. I could also feel my traitorous cock once more beginning to stir.\n\nThe inn keeper returned and sat down opposite me before placing a small bottle on the table.\n\n\"Since our local liqueur is so to your taste, I thought that you might like to have some for later.\" he said. \n\n\"If you drink it before retiring, you will have blissful sleep and pleasant dreams. Carlo, your landlord, can show you how it is prepared.\"\n\nI was overcome by his generosity and I said, \"I don't know how to thank you enough. Everyone here has been so kind to me.\"\n\n\"We want you to feel comfortable and at home.\" he said, rising. \n\nI sat a while longer, looking at the bottle on the table. It was a deep red color surprisingly and there were gold glints that shimmered in the depths of it. It almost seemed to move about as it sat in the container.\n\nI looked up and my landlord was beckoning me from his doorway so I stood up, pocketed the bottle and took my leave of the other gentlemen.\n\nOne of them, as I left, said, \"Grosso cazzo.\"\n\n\"I have seen it.\" I said, hoping he might understand. \"It is magnificent.\"\n\nOn my way up the street it occurred to me that that was the same phrase the farmhands had used earlier when referring to me and I hoped that he was not referencing that embarrassing episode.\n\nMy landlord had prepared dinner for the two of us and I found myself eager to eat again. We sat down and began and as we ate I drew out the bottle of liqueur.\n\n\"The inn keeper gave me this to help me sleep.\" I said. \"He said that you might show me how it is prepared.\"\n\n\"It is a very good sign that he has accepted you so quickly.\" Carlo replied. \"Usually he is suspicious of all outsiders. You must have made a good impression.\"",
        "\"He's a very kind man.\" I replied. \n\nOur meal passed with minimal conversation and afterward he had me draw a chair outside onto the sidewalk and sit next to him watching the light dim over the village. We sat in a calm companionable silence and I felt more at ease than I had in all of the years since the War.\n\n\"Do you think it would be acceptable for me to stay on here for a few more days?\" I broke our silence to ask. \"I have money to pay for my room and board.\"\n\nMy host smiled and said, \"I had hoped that you would feel that way. Money is not an issue. I enjoy having you stay with me.\"\n\nIf possible, I felt even more contented. \n\nWhen the sun finally sank and the street grew dark, we dragged our chairs inside and then went back to sit at the kitchen table. The glimmering bottle of spirits sat waiting.\n\n\"Have you ever had absinthe?\" my host asked.\n\n\"No, but I've heard of its effects.\" I replied.\n\n\"Our liqueur is very like absinthe.\" he told me. \"It can cause wild dreams and imaginings, so it is best to proceed with caution until you discover its influence. I will show you how to prepare it.\"\n\nHe procured two glasses and poured an inch or two of the flowery liquid into each glass. He then placed a strainer over the mouth of each glass that held some sugar lumps and slowly poured water from a pitcher over the sugar and into the glass. The resulting drink was a much deeper red color than the one I had had at the caf\u00e9.\n\nHe handed me one of the glasses and I took a drink. It was much stronger than the other drink, too, and it tingled as I swallowed. The flowery flavor filled my mouth and nose with a musky aftertaste.\n\n\"It is best to sip at it.\" my host said.\n\nOver our drinks we began to talk about our pasts and the War. Over our second drinks I found myself telling him of my deep shame at what had happened during my time fighting, how I still grieved over the men I had killed and how I carried that guilt with me every day. By the time he had made us a third drink, I was in tears.\n\nHe moved his chair over next to mine and wrapped his huge arms around me.\n\n\"We all of us have memories that tear our heart.\" he said. \"The man who shot you, if he still lives, probably sees your face before him every time he closes his eyes. It was a terrible time but it is over now.\"\n\n\"But how can anyone ever forgive me for killing other young men?\" I asked between sobs.\n\n\"You are already forgiven.\" he said. \"Now, you must learn to forgive yourself.\"\n\nI rested my head against his hard chest and cried myself out, the first time since the War ended, while he held me close. When I had cried my fill, he kissed the top of my head and said, \"It is time for you to go to bed.\"\n\nI tried to stand and immediately fell over.\n\n\"We now know that three drinks are your limit.\" my smiling host said as he helped me up from the floor.\n\nThe walls of the room and the floor were all moving and the light was suddenly too bright to bear. My host placed his arm around me, under my arms, and guided and supported me as I lurched down the hall to my room. When he sat me down on my bed, I immediately slipped off of the edge to sit on the floor. \n\nHe helped me back up and then lay me down on the bed. He unbuttoned my shirt and drew it off of me, then unfastened my pants and drew them down and away. \n\nI lay nude on the bed and he stroked my hair and said to me, \"Sleep now and don't be afraid to dream.\"\n\nHe lowered the lamp and then crossed to the door. My last waking memory was him standing in the doorway and smiling at me.\n\nThe dreams, when they came, were the most vivid I had ever had. Memories of the War replayed in my mind, not the horrible memories but gentler ones, ones of friends I had made and the other servicemen I had grown to care for. I once again experienced the feeling of security and safety I had felt when I was with them. Special friends that I had scarcely remembered revisited me that night in my dreams and I longed to be with them, wherever they were.\n\nAfter some time that I couldn't judge, the most vivid dream of all began.\n\nI heard three sharp raps that almost broke my slumber, then the three raps again. I dreamt that I opened my eyes in my room. The full moon was flooding the room with light and as I glanced around I became aware of a figure standing outside of my window. A male with a hairy bare chest and wearing the mask of Pan that I had admired in the Rome antique shop stood looking through the casement at me. When he saw my eyes were open, he beckoned me with one hand and stepped backward from the window.\n\nIn my dream I rose unsteadily and crossed to the window and looked out. Halfway across the garden, near to the path through the woods stood a nude man. His muscular hairy body shone white in the moonlight and I could see that his large uncircumcised penis was slowly growing hard. He beckoned to me again and I managed to raise one leg and climb over the sill and stand outside. I discovered that I was nude also but totally unabashed.\n\nI waded through the masses of the blue flowers, now totally opened and perfuming the air with their feral scent. \n\nI could see the nude man's eyes glittering through the eye holes of his mask as he watched me stumble toward him and just as I was about to reach him, he turned and disappeared into the darkness of the path through the forest.\n\nI followed and when I arrived at the opening to the path I could see him standing further along in a stray patch of moonlight. I stumbled after him and each time I was close he would turn and move deeper into the forest, leading me along the path. The dark forest was silent except for the sound of crickets and an occasional bird that was disturbed by our passage. All of my senses seemed heightened, the cool breezes against my flesh felt like sweeps of velvet and I could hear the sound of each of my bare footfalls. As usual in dreams, time seemed fluid. At times I would find myself fascinated by my surrounding and time seemed to slow, others everything seemed speeded up and I no sooner had a thought than I'd done it.\n\nAfter several minutes I could see the boulders ahead that surrounded the temple, outlined in light. My guide had disappeared so I followed the path around the heap until I came to the flat plaza in front of the temple. In the spot where I had seen cinders earlier that day, a huge fire now burned that illuminated the entirety of the plaza and the soaring column that anchored it at one end.\n\nI turned and approached the stone phallus and as I did so, my guide came around the side of the shaft and into the light. His erect cock swayed before him as he walked. When he was standing in front of the altar stone he stopped and waited for me to reach him.\n\nI stood in front of him, admiring his beautiful hairy body and strong, thick cock and he slowly raised his arms and wrapped me in them. I could feel his soft body hair all against the front of my body and his stiff, heated cock jutting against my own. Without thinking, I wrapped my arms around him also and then our lips met. I had never been kissed before, let alone by another man, but this felt so right to me that I all but swooned. Our mouths clashed together hungrily and I felt his wet tongue probing into my mouth. My cock, naturally, began to stiffen and grow until it was as upright and hot as his own.\n\nUnder his arm I felt the thick scar that I had seen earlier that day on Paolo. As is the wont with some dreams, my unconscious mind told me that of course I would dream of Paolo, while the dream continued.\n\nI wrapped my hand around his swollen cock and softly stroked it. Looking down I could see the loose foreskin sliding back and forth over the engorged head. Without thinking, I fell to my knees and buried my face against his fragrant cock and meaty ball sack.\n\nI became aware of other nude men appearing from the shadows and surrounding us, each wearing the mask of Pan that I had seen in Rome.\n\nHands gripped me under the arms and raised me to my feet as the crowd closed around me. Hands caressed my body from all sides; stroking and teasing my flesh while mouths kissed mine one after another. I felt a hand close around the erect shaft of my cock as another hand massaged my balls. Behind me hands were stroking my buttocks and I felt a hand stray into my hairless cleft and finger my virgin hole. My entire body was being stroked and caressed by this mob of nude men and I willingly surrendered myself to the exquisite sensation. It was as if every hair and every inch of flesh on my body was super sensitive, the fingers probing my tight ass hole felt delicious, not at all rough or alarming. The hands stroking my cock and balls were light and soft, teasing me to even greater hardness. I felt erect cocks brushing against my hips and buttocks and my cock, too, and lips kissing my chest and back, even my hideous scars.\n\nI had never experienced such a sensuous dream, in fact, I rarely even remembered dreaming.\n\nThe crowd seemed to part in front of me, even though the many hands remained on my body. Another man, this time with a thicker body stood before me. He had massive biceps and thick forearms that were covered with dark wiry hair, as was his solid muscular chest. I glanced down at his slim hips and saw that his upright cock was as thick as the rest of him, its foreskin pulled back over the fat head and clear liquid leaking from the hole. He now came to me and wrapped his arms around me and I felt his big hands cupping my buttocks and kneading them. The fingers of his right hand sank between my buttocks and he toyed with my tight hole, pressing and probing it. I threw my head back at the rapturous feeling and he nuzzled at my exposed throat. In my conscious mind, it suddenly dawned on me that this figure represented my landlord.\n\nHe held me so tight that I was almost breathless, his steely cock grinding against my own. He suddenly released me and grasping my hand, led me forward to the altar stone. He turned me to face it and I noticed that there were leather pads placed on each of the shelves at the sides. He held me by my waist as two other men stepped out of the crowd and grasped my upper arms on each side. They compelled me forward and then lifted me so that I perched with a knee on each side of the stone resting on the leather pads. The two men guided my hands to the carved hand holds I had noticed earlier. My chest rested against the inclined face of the stone, my legs spread and my erect cock and balls cradled in the carved nook on the face and my ass spread and thrust back.\n\nI glanced over my shoulder at the burly man who had guided me there and saw him looking at my wide spread ass cheeks. He was handed a jar and he scooped out some of the contents and with one hand began to knead the greasy substance between my ass cheeks. I felt his probing finger enter my tight hole and I jerked at his intrusion. His finger explored inside of me, thrusting in and out, and the sensation soon became pleasurable. I felt another of his thick fingers slide into me and I thrust my as back to me his hand.\n\nI had never guessed that it could feel so good to be penetrated there and as my hips rode his hand I made contented sighs. Abruptly, the probing fingers were withdrawn and I again glanced over my shoulder to see him massaging the oily unguent over his rampant cock. He stepped forward holding the thick meat in one hand and began to slide the velvety head up and down in my lubricated ass crack. After a moment he paused, the fat head resting against my puckered hole and asked, \"Do you want this?\"\n\n\"Yes!\" I said. \"Please, enter me.\"\n\nThe thick cock began to press forward, opening my tight hole for the first time to another man's lust. I felt the opening expand and then the fat head pop through the tight ring and enter my body. I gave a low involuntary cry at the pain and the two men at my sides stroked my back and kissed the sides of my face. \n\nMy penetrator maintained his pressure forward and soon I felt his wiry pubic hair against my smooth ass cheeks. The feeling inside of me was indescribable, a fullness that I had never experienced and a sense of rightness. The thick cock filled me and inflamed my passion.\n\n\"It is good?\" the man asked as he slowly began to ease his cock in and out of my body.\n\n\"It is wonderful.\" I said and all three men gave a low chuckle.\n\nI was able to lower my hips while at the same time spreading my ass cheeks wider, allowing even more access to my tight hole. My fucker responded by grasping me on each side of my waist and increasing the tempo of his thrusts. I had never experienced a feeling that was so fulfilling.\n\nI threw my head back and I could see the full moon standing over the clearing and I began to make a series of animal noises, my lust was so inflamed. The men on either side of me, their arms flung across my back, were kissing and nuzzling at my face and lips and even thrusting their tongues into my ears. I began to rock my hips backwards to meet the thrusts of the fat cock deflowering my ass, which seemed to make my fucker even more excited.\n\nAll of the feeling in my body seemed concentrated on my stretched hole and I could feel the thick veins that decorated his shaft as it slid in and out. I could hear him panting as he drove in and out of my ass, never slowing. His thick cock pounded into my guts and his hard abdomen slapped against my ass with each hard thrust into me.\n\nI could smell the blue flowers and the sweat of the man fucking me and the musky odor of the bodies of the men standing around me and observing. Time had ceased, the objects around me were tipping and swimming in my sight and I closed my eyes and totally abandoned myself to the ecstasy of that delicious meat violating my ass.\n\nThe thrusting intensified and then suddenly he stopped and stood still, his cock buried full length inside of me. I felt his shaft swell and buck and then his hot seed was splashing against the inflamed walls inside of my ass. I could feel each spurt as it shot into me and I felt the liquid soothing my tissues.\n\nHe began to back the meaty shaft out of my clutching hole and I almost sobbed as I felt the fat head pop free and leave my hole. No sooner had he left my ass than I felt another cock head pressing at my hole. I looked over my shoulder and saw that it was the Paolo dream figure and I welcomed him, pressing my hips backward to make his entry easier. I closed my eyes and rested my head against the altar stone, enjoying the sensation of a new hard cock invading my ass. \n\nAs I wrote earlier, time seemed to have collapsed in upon itself and I don't know if the Paolo figure fucked me for five minutes or for an hour. Each passing moment was complete and ecstatic on its own, time had ceased to exist. I lay completely at peace and offered up my body for any use it could be put to.\n\nWhen I felt the cock inside of me begin to shoot its hot seed, I roused only long enough to feel the rigid cock sliding out of my ass and being replaced by another stiff prong.\n\nI don't know how long my imaginings went on or how many cocks I finally had imagined fucking me; I simply reveled in the feeling as long as it lasted. When a final cock had drained itself inside of me, I opened my eyes and saw that the moon had shifted and was now almost out of sight to the side of the clearing.\n\nThe two men at my sides, whether the same men or others, helped me to climb off of the altar. My legs were like rubber and I still had no control of my equilibrium. They pushed me back so that I sat on the stone shelf in front of the altar with my legs spread and my erect cock arching out from my body. I don't think it had wilted once during my period of being fucked.\n\nThe hirsute, muscular man who I equated with my landlord, the one who had first entered me, stepped forward from the crowd. He knelt in front of me and gripped my stiff cock around the base of the shaft and stroked it up and down.\n\n\"Grosso cazzo!\" he said and then used his tongue to clean the liquid leaking out of my distended slit.\n\nWhen he had licked the shaft up and down and used his tongue to tease my aching balls in their sack, he slid his tongue back up to the top and closed his hot mouth around the head of my cock.\n\nThe feeling was as wonderful and indescribable as having him fuck my ass had been. I've told you that my cock is inordinately large and thick but he seemed to have no problem sliding his mouth and throat down over it until his lips rested in my sparse pubic patch. He began to bob his head at the same time that his throat made constricting movements around the shaft of my cock, a sensation that made me arch my back and curl my toes. He varied the speed of his ministrations so that when I was close to shooting my juices, he would slow down his tempo and allow the sensation to build once again. I had no experience to judge but I was sure that he was an expert at his endeavors. Up until that point in time, my right hand had been the only one to ever make love to my cock.\n\nThe crowd of nude men surrounding us made low encouraging sounds as they watched him labor over my swollen cock. I was almost in tears, the feeling was so intense and my need for release so great. I had a stiff cock in each of my hands and the other men's hand slid over my body caressing it. The Paolo figure had again begun to kiss my open mouth and tease me with his hot tongue. The tension in my balls built to the point that I was panting and wanting to beg to be allowed to release my fluid. The hot mouth pleasuring my cock must have known the signs because he began to suck my cock harder while his head flew up and down on the thick shaft.\n\nMy balls were in his hand and he kneaded them while sucking me and finally the combined feelings were too much. I felt my fiery fluid climbing up the channel of my cock and then splattering out of my cock head into his ravenous mouth.\n\nAt that point my dream ended and I was conscious of nothing else until my landlord woke me the next day. He bustled into my room where I lay in nude abandon across the bed. and stroked the hair back from my forehead.\n\n\"How are you feeling?\" he asked.\n\nEven though I was nude and exposed, I felt no embarrassment at him seeing me so.\n\n\"I'm feeling well rested.\" I replied.\n\n\"It is the mountain air. The liqueur you imbibed last night probably helped also. Did you dream?\" he asked.\n\nThe wanton fantasies of the night before flooded back into my brain and I must have blushed, not only at the memory but because remembering them had made my cock start to stiffen.\n\n\"Yes,\" I said, \"I had wonderful dreams.\"\n\nI sat up and must have been feeling the effects of my drinks still because when I strove to rise, I lost my balance and sat back down abruptly. My landlord was immediately at my side and he gently raised me from the bed and supported me. With one arm about my waist he guided me across the hall to the bathroom and sat me on the commode lid.\n\n\"It is after noon, already.\" he said. \"You slept for a long time. I have a combination of breakfast and lunch prepared for you that you will have after we wash you. Your bath can wait until later.\"\n\nHe ran the water and soaped up a wash flannel, then had me stand while he washed my body. For some reason I felt no discomfort or oddness having him do so and he seemed equally nonplussed. He lathered me all over and when the flannel passed between my buttocks I jumped at the roughness of the cloth.\n\n\"You seem to have some chafing.\" he said. \"Probably the result of your long walk the other day. I have something that will sooth that.\"\n\nHe rinsed my body clean of suds and sat me down once more, then stepped out of the room. When he returned he was holding a small jar of a red salve and when he opened it I could again smell the ubiquitous flowers of the village. He bade me stand up and when I did, he used his finger to apply the salve to the sensitive area between my buttocks.",
        "\"You really shouldn't have to do all of this.\" I said.\n\n\"Nonsense, it is a pleasure to serve such a handsome young man. With your scant body hair and your smooth muscles, you look like one of the ancient Roman sculptures that my ancestors made.\"\n\nHaving his hand between my buttocks and hearing his flattering words were having a marked effect on my cock, especially in view of the dream still swirling in my head. He looked at my slowly expanding penis and chuckled, then said, \"Your meal is waiting.\" before turning and exiting the room.\n\nWhen I returned to my room, feeling much refreshed, there was another suit of clothing similar to the one I had worn the day before. Piled on a chest nearby I counted four more of the soft linen shirts and three more pairs of the rough linen trousers. On the floor there was a pair of woven scuffs.\n\nI dressed and when I went to the kitchen my host was sitting at the table waiting.\n\n\"I can't allow you to give me your whole wardrobe.\" I said.\n\n\"Those are not mine.\" he said. \"Some of the men of the village saw you yesterday at the cafe and they wanted you to feel cool and at home, so they have shared some clothing with you.\"\n\n\"Are all of the guests to this village treated so royally?\" I asked.\n\n\"No, only the very special ones.\" he replied.\n\nThe mountain air had certainly fired my appetite and I wolfed down everything placed before me. Usually my appetite was spotty at best and I never cared what I ate. The food that my host placed before me always fired my hunger and satisfied it at the same time.\n\nWhen I had devoured every crumb, my host asked, \"What plans do you have for today?\"\n\n\"I hadn't really thought.\" I replied. \"I would like to go and see the temple again but I don't want to barge in as if I had a right.\"\n\n\"No one will think badly of you if you go.\" my host said. \"I have business to attend so that I can't guide you but if you stay on the paths you will find it. If you haven't returned in a few hours, I'll come and find you. Also, I forgot to show you one of the features of your room. Come with me.\"\n\nHe led me back down the hall and when we arrived at my room he entered and walked to the opposite corner. I had noticed the drape hanging there but had assumed it was a closet alcove. When he pulled the drape back, there was indeed an alcove but in it was a doorway that led out into the area behind the building.\n\n\"You can come and go as you please instead of always needing to knock at the front.\" he said. \"Also, should you have a visitor; they can come directly to you.\"\n\nHe opened the door and ushered me out into the sunlight.\n\n\"The entry to the path is just there.\" he said, pointing toward the forest.\n\nThe forest was a different place from what I had dreamt the night before. Sunlight broke through the trees and dappled the forest floor and cicadas sang their high pitched songs. A cool breeze floated through regularly, making the temperature much more bearable than the day before.\n\nIt was only a short time before I came in sight of the massed boulders and followed the path around them. I noticed that someone had cleared the cinder and ash that had been at one end of the plaza the day before and it looked as if the whole area had been swept clean. I approached the altar stone, my previous night's dream replaying in my head and found myself stiff with excitement.\n\nThe shelves on each side of the stone were just as I had remembered them, although lacking the cushions I dreamt of, and with no difficulty I climbed onto the m and replicated the posture I had assumed in my dream. The sun had warmed the velvety texture of the smooth stone so that it almost felt like living flesh and as I lay against it warmed my body. The sunlight was not so harsh as the day before and the frequent breezes cooled the air. I closed my eyes and strove to remember as much detail of my dream as I possible could.\n\nI must have fallen asleep because the next thing I was aware of was my landlord stroking the back of my neck to wake me.\n\n\"I was worried that you were gone so long.\" he said. \"Now, here I find you peacefully napping after lying in bed so late this morning.\"\n\n\"How long have I been here?\" I asked.\n\n\"Only a few hours.\" he said. He looked around and then said, \"This place is very peaceful, you can feel the holiness of it. It is a good place to rest.\"\n\nHe assisted me to climb down from my perch and with his hand on the small of my back he guided me back through the forest. We entered my room through the newly revealed doorway and my host said, \"Supper will not be for another few hours. Why don't you go and sit at the caf\u00e9, again.\"\n\nI followed him to the front door and then walked the short distance to the caf\u00e9. The same group of men was sitting at the same table, still playing dominos. When I arrived they greeted me, looked at my wardrobe and went on with their game. I noted that they hadn't gazed at me with the vacant, stony stares of yesterday but instead their eyes were warm and friendly. The inn keeper appeared with another of the drinks he had served me yesterday and after setting it down he asked, \"How did you sleep last night after trying our local liqueur?\"\n\n\"Wonderfully well.\" I replied.\n\n\"And did you dream?\" he asked.\n\n\"I certainly did, better and more realistic dreams than I have ever had before.\"\n\nHe leant down and kissed the top of my head and said, \"That is exactly what I wanted to hear.\"\n\nAfter he had walked back indoors one of the men at the table turned to me and said, \"Do you like our temple in the woods?\"\n\nI had assumed that none of them spoke anything but Italian and I replied, \"You speak English?\"\n\n\"We all speak English.\" he said.\n\nI remembered with some shame the lies I had told the wayward Englishman the day before and I said, \"You all must think me a real ass after hearing the tales I spun for the stranger yesterday. I do like your temple, a very great deal, and I couldn't countenance such an undeserving oaf learning of its mystery.\"\n\n\"But you didn't hear any of us contradict you, now did you?\" he asked and the rest of the men laughed. I laughed also, feeling much better about the interaction.\n\n\"Our temple is only for those who appreciate its beauty.\" he then said before turning back to his game.\n\nI sat and sipped my drink as the day waned and the light slowly faded. My vivid dream of the night before replayed over and over in my brain. I had never felt so calm and at peace since before the War, even the demons that seemed constantly to plague me had called a truce. Eventually I felt a hand smoothing my hair and I looked up to see the inn keeper standing by me.\n\n\"Carlo is calling you to supper.\" he said, motioning up the street to where my landlord stood. \n\nHe grasped my hand to help me up and the other men all called farewells to me as I slowly returned to my lodging. When I arrived at the doorway Carlo said to me, \"You look a little peaked. Are you feeling well?\"\n\n\"I'm just tired.\" I replied. \"That, and I have a lot on my mind.\"\n\n\"Good things, I hope.\" he said.\n\n\"Good, but worrisome nonetheless.\"\n\n\"Come in and let me feed you.\" he replied. \"Everyone feels better with a full stomach. And I insist you make an early night of it and get more rest.\"\n\nHe led me into the kitchen where the table was already laid. As we ate, something that had been at the back of my mind suddenly became clear.\n\n\"Do you know, I haven't seen a woman since I came to this village?\" I said.\n\n\"Yes, that is true.\" Carlo said. \"This village has always been a place for males, like the monasteries of the Christian church, though our tradition goes back much further. This has always been a place where men come to be alone with other men. There are women on the farms and in the close villages but they never come here. I've always thought that while women may mend your body, only other men can mend your soul.\"\n\n\"Which would explain the temple.\" I replied.\n\nAfter plying me with a sumptuous meal which he insisted that I eat second helpings of, Carlo cleared the table and brought out the bottle of liqueur.\n\n\"Only two drinks for you, tonight.\" he said as he prepared the drinks. \"Last night we may have over indulged.\"\n\nAgain, Carlo's drinks were much stronger than those at the caf\u00e9 and my tongue loosened. I told him of how I had spent the last years just wandering from place to place, restless and unsatisfied. I had no close relationships and was afraid of trying to find any, thinking that the War had destroyed any possibility of happiness for anyone like me.\n\n\"Do you feel that alienation here?\" he asked.\n\n\"This is the only place that I haven't felt it.\" I replied. \"That is what is so perplexing.\"\n\n\"It will all come clear in time if you are patient.\" he said.\n\nHe had fixed my second drink and I could feel the influence stealing over me. It was not like the night before, I still had my wits about me and the sensory effects were less intense.\n\nCarlo rose and said, \"Come, you must get some rest.\"\n\nHe grasped my hand and led me down the hallway and undressed me as I stood before him like a child. When he had arranged me comfortably on the bed he said, \"Now, sleep. And have more of your pleasant dreams.\"\n\nI dozed almost immediately but unlike the night before I wasn't troubled by a whirlwind from the past. I had untroubling visions of my village sojourn, of swimming in the river and the lush forest. Paolo, Carlo and the inn keeper also made appearances in my reverie, reassuring me with their presence.\n\nThen, as the night before, a new dream emerged. Once more I heard the three sharp rapping noises and imagined opening my eyes. The masked man stood at the window again, beckoning me. I rose in the dream and walked across the room and noticed that the door in the corner stood open. As I went to it and exited, my nude guide from the night before once again beckoned me across the field. This time he did not keep such a distance between us and as I followed him I watched his lush buttocks flex with each step. My cock grew tremendously hard.\n\nI followed him as I had done the night before until we arrived at the temple. This time, the crowd of nude masked men openly awaited me and as I came forward they pulled me into their midst, kissing and caressing me. It seemed each of them was eager to kiss my lips and fondle my cock, balls and ass and their warm hands slid over my whole body. Many of them bent to kiss or lick the swollen head of my member. Again, I was engulfed in the scent of the blue flowers and the masculine musk of the men around me.\n\nAfter a time, two of the men pulled me backward by my arms until I was again before the altar stone. This time, they laid me down on my back and placed the leather cushions under my head for comfort. They held my arms down at my sides and two more men immobilized my legs.\n\nA man came forward to where I lay and I recognized him as the inn keeper's doppelganger.\n\nHe nudged my legs apart and knelt and then began to lubricate my cock from the same jar that I had dreamt of yesterday. He held my cock upright by the base and stroked the grease over the entire length. When it was sufficiently coated he lifted himself up so that his hips were positioned over the head and then lowered his ass onto it. He lifted his loose ball sack so that I could see my cock poised against his ass hole, and then slowly lowered himself so that my stiff shaft disappeared inch by inch inside of him.\n\nIf the sensations I had experienced the night before had been wonderful, this was ten times so. I had never penetrated another person's body and had no idea of what to expect. What I felt was a tight, slick sheath of flesh sliding down over my cock and the hot inside walls gripping me. He continued to lower himself until the full length of my meat was buried deep inside him and I saw him smile, his eyes twinkling behind the mask.\n\nAs he sat impaled on my stiff cock, I watched his own member swell and expand until it stood upright. He then began to raise and lower himself, riding my cock with his head flung back. He uttered guttural cries as he fucked himself with my cock and his stiff cock bounced up and down, slapping against his belly. I was unable to move and could only lie and watch him pleasure his hole.\n\nThe Paolo figure approached him and gripped him under the arms and raised his body. My cock slipped out of his ass and lay along my belly. The Paolo figure then gripped it and did as the other had done, lowering his hips over me until my cock pierced his hole. He was slower to engulf the full length and I could tell that the length and width caused him some discomfort. When he finally had taken all of it into him, he sat and rocked back and forth and I felt my cock head rubbing against the walls of his ass. His cock grew as he rocked and he gripped it in his hand to stroke it. His eyes bored into mine through his mask and he muttered to himself in Italian.\n\nHis rocking increased in urgency and his fist pumped up and down on his stiff cock, the foreskin sliding back and forth over the head. With a huge sigh, the pearly juice from his balls erupted from his cock head, flying into the air and raining down on my chest and belly. After several spurts, his juice stopped flowing and he leant forward and licked the creamy mess off of my body, all the while still impaled on my cock.\n\nWhen he had finished his meal he slowly raised himself off of my hips until my swollen cock popped free of his tight ring. Immediately, another man moved to take his place.\n\nAs he rode my cock I looked around me. The men were pleasuring each other in various ways, sucking each other's cock or fucking each other in the ass. Very near me were two men, one on his hands and knees and the other on his knees behind him and I could see the swollen cock as it slid in and out of the first man's hole. I even saw one man who was crouched behind another, his face buried between his ass cheeks. \n\nThe man who was riding my cock eased himself off of me and I then saw the figure that resembled my landlord step into view. The thick cock that had been the first to fuck me yesterday was already erect and I longed to grasp it but I was unable to move. \n\nHe crouched over me and fed my slick cock into his waiting hole. Seeing his masculine hairy body and fat cock and balls ride my shaft almost was enough in itself to cause me to have a climax. He moved up and down at a leisurely pace, his sparkling eyes watching mine and his tongue licking his red lips. He leant forward and began to kiss me, all of the time pumping his hole up and down on my swollen cock. With his lips glued to mine and his tongue deep in my mouth, I felt his fat cock buck against my belly as the hot flood of his semen spilled out of his cock head. It felt as if he wanted to devour me as his hips bucked with each stream of cum that flew out of his balls. When he was emptied, he sat back on my abdomen and smiled down at me. I wished that it had continued forever.\n\nAfter he had freed himself from my cock, another man took his place. This went on until I lost count but I assume that at some point every man there had had my cock in his ass. My balls were aching and my cock was throbbing, hungry to be allowed to shoot its hot load.\n\nI looked up to see the figure that looked like the inn keeper standing over me and I shrugged off the hands of my captors and stood up. I grabbed him in my arms and cupped his muscular buttocks in each of my hands. When I probed his hole I found that it was still well lubricated.\n\nWithout another thought I pulled him down onto the ground and rolled him onto his back. I took my place over him and his legs automatically raised and wrapped around my waist. One of the men beside us grasped my hard cock and guided into his tight hole. When I felt the head against the opening, I thrust forward into his fiery depths. He squirmed, bucking his hips against me and as I began to roughly fuck him he made whimpering noises. I used one hand to hold the back of his head and glued my lips to his. His soft lips opened and I began to thrust my tongue in and out of his mouth, fucking it with my tongue in time to my cock fucking his ass.\n\nI had never fucked anyone before and the violence of my assault surprised me. It was as if some primal nature had taken over and demanded to be satisfied. Even after all of the time that I had spent with my cock being ridden that night, I had no desire to cum quickly. I found that by concentrating on the hands of the men around me who were caressing my body and stroking my ass, my desire lessened. The man under me was making squealing noises around my tongue and thrusting his hips upward to meet my invading cock. When my orgasm finally erupted it was totally unexpected. I knew that he could feel my juices flooding into him by the noises that he made and by the way he thrust his ass against me. Even as the hot seed squirted out of my balls, I continued thrusting my hard cock deep into him, filling his guts.\n\nAt last my cock began to soften and I lowered myself to lie on top of him. He was wildly kissing my face and hair, his head flung back and forth as he did so. I felt spent as I never had before.\n\nWhen he stilled I slowly extricated my half hard cock from his tight hole and he sat up and cupped it in his hand before leaning down and kissing it. He then planted a kiss on my lips and raised himself from the ground and disappeared into the shadows.\n\nAs I lay on my stomach watching the fire flicker, another man lay down beside me and flung an arm around my waist and began to softly kiss my buttocks in various spots. I looked over my shoulder and saw that it was the figure I equated with my landlord. He cupped my cheeks and made sure that there wasn't a spot that his lips had missed. When he had covered the entirety he lay with his cheek resting against my ass, content. We lay like that for some time.\n\nAfter awhile I saw the Paolo figure hovering over me and when I looked up he held out his hand. I grasped it and he helped me to my feet, dislodging the head using my ass as a pillow. Pulling me by the hand he led me into the forest and back toward my room.\n\nI again watched as his superb ass flexed with each step and before we were even half way back, I stopped and pulled him to me. Wrapping my arms around his body, I hungrily kissed his mouth while kneading and fondling his gorgeous ass. He responded in kind, deeply kissing me and stroking my cock which quickly regained its former hardness.\n\nI knew that I had to have him and I bore him down to the forest floor and lay atop him. He gasped as my stiff cock delved into him and his body stiffened. I pressed on until I was entirely sheathed in his ass.\n\nWith his legs around my waist I began to plow my cock into his hole mercilessly. I could tell when it began to feel good by his arms gripping me and as I pounded my cock in and out of him, his hands drifted down to cup my ass cheeks and pull my hips ever harder against him.\n\nBecause I had just spilled a load of cum less than an hour before it was even more difficult for me to reach my climax. I thrust my cock in and out of his hot hole for what seemed like hours, him kissing and caressing me the whole time. I felt his hot seed fly out of his cock squeezed between us and our bodies skid against each other, lubricated by the sticky fluid.\n\nKnowing that he had cum just from the power of my cock in him sent me over the edge. I felt the semen boiling in my balls and my balls retracting in the sack, ready to explode. One, two, three sharp thrusts and my second load of the evening blasted out of my cock head. This was even more intense than the first and I felt as if I might lose consciousness. We lay entwined on the forest floor until the birds began to chirp their morning song, heralding the dawn.\n\nWe stood and dusted the pine needles off our bodies and taking my hand again, he led me up the path to the entrance. The blue poppy like flowers were fully open and the aroma was overwhelming. He freed my hand and motioned me forward and as I waded through the field of flowers I looked back over my shoulder but he was nowhere to be seen.",
        "The dream ended there, I have no memory of entering the room or climbing into bed. I supposed the dream had run its course.\n\nThe next I knew, I was lying in my bed in full daylight and my erect cock was spewing a load of cum over my belly and chest. I looked up to see my landlord standing in the doorway clutching a towel.\n\n\"I had just come in to wake you when you started to erupt.\" he said, chuckling. \"I thought a towel was in order.\"\n\nHe tossed it to me on the bed and I ashamedly covered my swollen cock while wiping up most of my load.\n\n\"There is no need to be embarrassed.\" he said. \"It is just proof that you are a healthy young man, though I do wonder what you were dreaming of. I have had the same experience many times.\"\n\nWhen he said that, I remembered what I had been dreaming. It was a replay of the dream of fucking Paolo's ass on the forest floor.\n\nHe walked over to the bed and inhaled and said, \"Have you noticed that the blue flowers have an odor very similar to that of semen?\" and I realized that that was the component of the smell I had been unable to identify.\n\n\"I don't usually have this type of event happening.\" I said.\n\n\"It shows how much the mountain air and the village agree with you.\" my landlord said. \"You are becoming healthier by the hour.\"\n\n\"Was my condition so obvious when I arrived?\" I asked, sitting up.\n\n\"Not so obvious as the marked improvement that you already are displaying.\" he replied. \"Now, you've slept late again, your bath is drawn and lunch awaits.\"\n\nHe gave me a hand to help me up from the bed and I noticed that his eyes lingered on my still half hard cock. I got the impression that he was tempted to grasp it.\n\nAfter I had been bathed and fed, Carlo said, \"Off to the caf\u00e9 with you to watch the passing sights, if there are any. I'll call you when supper is ready.\"\n\nI duly trooped down the street to the caf\u00e9. When I arrived I was given a friendly greeting by the men who I usually saw there, even calling me by name. I had just sat down when one of them leant over and asked, \"Do you play dominos?\"\n\n\"I'm afraid I don't.\" I replied. \"I never learnt.\"\n\n\"Come, move your chair over beside us.\" he said. \"We shall teach you.\"\n\nI slid the chair over to the space that had been made for me and the men each introduced themselves. While they were doing so, I concentrated on their lower face and jaw, trying to decide if any of them had made an appearance in my lustful dreams. I couldn't really be sure.\n\nThe inn keeper appeared with my usual drink and set it on the table, then stood behind me as they began to explain the game to me. I was acutely conscious of the nearness of his hips and ass and the dream I had had of fucking him. My cock was beginning to harden and it was no help that he decided to rest his hands on my shoulders and lean near as I began to play the game.\n\n\"This time next week, I shall challenge you to a match.\" one of the men told me.\n\n\"Be careful,\" the inn keeper said. \"He's a known cheat and he will try to take advantage of you.\" The men at the table laughed and I could feel his seemingly erect cock pressed against my upper back. Was it just my imagination?\n\n\"It isn't taking advantage if I'm willing.\" I said.\n\n\"A true sportsman.\" the man said. \"We will have a wager that we will both enjoy the outcome of.\" The inn keeper chuckled and returned indoors.\n\nWith the familiarity of all Italian men, I soon found myself with the man on the right of me with his arm draped over my shoulders while the man on the left clutched my hand in his. I had never been in such a situation and I found it anything but unpleasant. I could smell the musky aroma of the bodies surrounding me, more pleasing than the flowers.\n\nThe afternoon flew by, all of us absorbed in the game before us. When next I looked up, the afternoon was fading and the inn keeper was directing my attention to Carlo standing up the street.\n\n\"I'm sorry, I'm being summoned.\" I said to the men. \"I have enjoyed the afternoon; I hope you will allow me to play again.\"\n\n\"Make no mistake,\" the man who had invited me said, \"we all look forward to the opportunity to play with you.\"\n\nI returned to Carlo's house and the evening passed much as the previous ones had done. We had an excellent meal together and then Carlo brought out the bottle of liqueur.\n\n\"Let us try having only one drink tonight,\" Carlo said, \"and we will see if your dreams are as compelling.\"\n\nWe sat and talked until bedtime and I honestly didn't feel that much effect from the drink, although once again my senses seemed heightened. Carlo led me down the hall and we stood talking as I undressed. When I was nude, he drew back the sheet and said, \"I hope that this night is as pleasant as the last few have been for you.\"\n\n\"That is something we both wish.\" I said as I reclined in the soft bed.\n\nI closed my eyes and various scenes passed behind my eyelids. The erotic fantasies of the previous two nights replayed in my head in great detail, stoking a lust I didn't know I even possessed. My cock was so hard that it ached.\n\nI wasn't even aware that I had fallen asleep when I heard the three taps that my previous dreams had begun with. When I opened my eyes, the figure in the mask again stood at my window. I rose and went to the door to the outside and stepped into the moonlight. This time, it didn't feel like a dream, it felt as if the events were actually happening and were real. I stumbled after the figure through the field of blue poppies only this time I stepped upon something that hurt my bare foot. I looked down and saw a small rock shining in the moonlight and I bent and grasped it in my hand. It was cool and sharp.\n\n\"Paolo, wait a moment.\" I cried.\n\nThe nude figure at the edge of the woods stood and waited for me to reach him. When I did, I ran my hand over his hairy chest and down to grasp his stiff cock. I moved forward and wrapped him in my arms and cupped his lush buttocks in my hands. I could hear and feel him breathing against me.\n\n\"This isn't a dream, is it?\" I asked.\n\n\"No, none of it has been a dream.\" Paolo replied and he reached up and removed his mask. \"Are you sorry?\"\n\n\"How could I be sorry?\" I asked. \"That means it all happened. Last night, you and I in the forest, that really happened.\"\n\n\"It did, indeed, and it was one of the best nights of my life.\" Paolo said. \"You're not angry with us, are you? If we had invited you to join us at the temple, your mind would have rejected the idea. Even if you had, your inhibitions would have held you back when you were there. We knew that you were one of us and we wanted you to become a part of our group.\"\n\n\"You're right in all respects.\" I said. \"I'm just thankful that you made so much effort to include me. But what is the meaning of the masks?\"\n\n\"It is an ancient custom that we still employ when we have a new initiate. It helps to maintain the dream-like atmosphere.\"\n\nI kissed Paolo, clutching his beautiful ass cheeks and I could feel his stiff cock throbbing against my own.\n\n\"Come, the others are waiting and they'll think I've kidnapped you to keep all to myself.\"\n\nHe grasped my hand and led me along the path until we arrived at the temple. The men were waiting on the plaza in front of the giant stone phallus and when they saw that Paolo had removed his mask, they all followed suit.\n\nI waded into the crowd, welcoming hands caressing my body, stroking my cock and ass, kissing me on the lips. As I stood in the embrace, I felt a warm mouth close around my stiff prick and I looked down to see one of the men from the caf\u00e9 sucking me. Someone else was lubricating my ass and I soon felt a hard cock pressing against my hole seeking entry.\n\nThat night there was no confusion and no inhibition. My hole, my mouth and my cock were common property along with the cocks and orifices of all of the other men there. At various times I found myself being fucked from the rear while sucking on a stiff cock. Other times, I had my cock deep in a tight ass while someone else fucked me from behind. At one point, there were two men sharing the task of sucking my cock while another man licked my ball sack and yet another used his tongue to tease my ass hole.\n\nIt was as if all of the men at the temple were one big organism, its only goal to satisfy the components of the whole. \n\nWhile vigorously fucking the inn keeper, his legs over my shoulders so that I could penetrate his ass to the maximum depth, I said to him, \"I think that you are my favorite of all of the men available.\"\n\n\"And I am available whenever you should want me.\" he replied. \"Your cock gives me more pleasure than I had thought possible.\"\n\nThe rest of the night flew by. When the sun finally began to rise I was lying on my stomach between my landlord's wide spread legs, enjoying the flavor of his cock in my mouth while Paolo's stiff prick pounded in and out of my hole. I had already cum twice that night and felt no dire need to do so again.\n\nMy landlord and Paolo almost simultaneously reached their crisis. No sooner did I feel the divine juice squirting from Paolo's steely cock buried deep in my fevered ass than I was also gulping down the massive flood of hot fluid that flowed into my mouth from my landlord's thick cock. When his balls were entirely drained I buried my face in his hairy crotch, his softening cock against my face. Paolo kept his cock deep in my ass until it too had shrunk to normal size.\n\n\"I wish we could just stay like this forever.\" I said.\n\n\"But there is one more of our customs that we must share.\" my landlord replied.\n\nI had noticed when the sky began to lighten that the men around me started to rise and drift along the path toward the river. Now, the three of us disentangled our bodies and with my landlord grasping my hand and Paolo following clutching my other hand, we did the same. There was still mist playing along the forest floor between the trees and the birds were making their early morning sounds. Pale masculine bodies seemed to float along the path before us and behind.\n\nWhen we reached the river, it was at a different spot from where Paolo and I had bathed. This was a wide pool with water plummeting over a rocky slope at the top. The river again narrowed at the bottom and gushed over more rocks to continue its journey. Most amazing, the banks surrounding the still pool were so heavily carpeted with the blue poppy like flowers that no inch of earth or foliage could be seen, only a thick blanket of blue.\n\n\"It is said that this is where the ancients came to bathe after their rites at the temple.\" my landlord said as he led me into the brisk water. \"The legend is that the blue flowers sprang up from all of the male fluids that were washed into the water here. You can see that they still grow with abandon.\"\n\nAll around me my companions from the night before were standing or floating in the water and my landlord and Paolo led me into the deepest part until only our heads were not submerged. Paolo's body was tightly pressed against my back; I could feel his superb cock starting to grow again as it rubbed against my buttocks. In front of me, my landlord was pressed just as tightly and his thick cock ground against my own, inflaming us both. \n\nAfter a minute or two, Paolo began to kiss me and my landlord reached down and lifted my legs so that they were resting on his shoulders. My head was on Paolo's shoulder and his arms supported my body. My hard cock jutted up over the surface of the water.\n\nWith his face close to my tight ball sack between my legs, my landlord wrapped his hand around my stiff prick and began to stroke it. With the other hand, he fondled and stroked my balls. The men around us paused to watch as Paolo kissed me while my cock was serviced.\n\nWith only a few minutes of pumping, my balls let loose another jet of pearly fluid that arced into the air and fell to sink into the water around us. Two or three more spurts followed.\n\n\"That is to feed the flowers.\" my landlord said and then he let me back down into the water. He and Paolo stroked my body, washing away the accumulated essences of the night before. When they were satisfied with their labors, they led me back out of the pool and back along the path.\n\nWhen we arrived back at the temple, Paolo took his leave of us to follow another path. The massive stone erection stood in the early morning sunlight, shining with dew.\n\n\"It truly is awe inspiring, isn't it?\" I said to my landlord.\n\n\"As always is the real thing, too.\" he replied.\n\nWe slowly trekked on until we reached the door to my room and entered. \n\n\"You must rest, now.\" my landlord told me.\n\n\"I would rest better if you would share my bed.\" I replied.\n\nHe smiled at me and then said, \"Let me go and lower the shades at the front of the house so we will not be disturbed.\"\n\nHe left and walked down the hall, lowered the shades and returned to where I lay looking at him.\n\n\"You really are the most beautiful man I've ever seen.\" I said as I lay looking at his muscular arms, chest and legs coated with dark hair and at his magnificent cock and balls hanging heavily before him.\n\n\"Then you must not often look into mirrors.\" he replied. \"At best, I'm a poor second. The villagers have already nicknamed you \"The Roman Statue\" because of the marble whiteness and smoothness of your skin.\"\n\nHe climbed onto the bed beside me and grasped my half hard cock.\n\n\"And, of course, having a cock almost as big as the one at the temple is an advantage we may all admire and enjoy.\" he said.\n\nHe lay down and we turned to face each other and I buried my face in his warm chest hair.\n\n\"I wish I never had to leave here.\" I whispered.\n\n\"Then, why should you? How did you exist in Rome?\"\n\n\"There was a bank where my bank in America sent me money as I needed it.\" I answered.\n\n\"On the other side of the mountain, really not far away, there is a town with a bank where you can make the same arrangement. Paolo can take you there in his cart tomorrow.\" he told me. \"It costs very little to live here, all that you need money for is your food. I won't charge you for your room; I enjoy having you here too much.\"\n\n\"But what if other guests come and you need the room?\" I asked.\n\n\"Then, you shall have to share my bed until they depart.\" he answered. \"I want you to stay with us. The others all want you to stay. Is there anyone waiting for you in the outside world, is there any place that you have to be?\"\n\n\"No one has ever really wanted me anywhere before.\" I said.\n\n\"And now, an entire village of men does. The old man who carves our masks has been looking for someone he can train to take his place. I can introduce you, if you wish.\" he replied.\n\n\"What about when winter comes?\"\n\n\"It may become too cold to gather at the temple but that doesn't mean that our activities stop. We may meet at one or another's house, there are always gatherings. And, we all have our special friends that we see frequently. Paolo and I already claim you as such and so will others.\"\n\nI lay against him, wondering if I was brave enough to follow my instinct while toying with his fat cock until it had grown long and stiff.\n\n\"Rest first and then we shall play.\" he said, caressing my ass cheeks while holding me tight.\n\n* * * * * *\n\nWhen we finally arose from bed late that afternoon, Carlo fed me a small snack and then instructed me to go and visit the caf\u00e9 until the dinner hour. I wandered down the street and when I arrived it was the same as always. The men playing dominos called to me and indicated an empty chair already placed beside them. I sat down and looked around the table, acknowledging the men who I had spent the night before having torrid sex with. The innkeeper came with my drink, set it on the table and stood behind my chair again.\n\nThe man beside me reached over and began to toy with my cock under the table until it was full grown again. As he stroked it, the inn keeper bent down and wrapped his arms around my neck.\n\n\"Tomorrow evening, after I close the caf\u00e9, I wonder if you would like to come and spend the night with me?\"\n\nI reached over and ran my hand up between his legs until it was firmly lodged in the heated deep crease of his ass.\n\n\"And then shall I have this all to myself?\" I asked.\n\n\"For as long and as often as you wish.\" he replied. He reached down to feel my cock under the table and encountered my neighbor's hand.\n\n\"Don't be so greedy!\" my neighbor said. \"I was just preparing to ask this young man if he would like to take a walk into the forest with me so that I could teach him the wonders of nature.\"\n\n\"Don't worry, there is more than enough here for us all to share.\" the innkeeper said, as he massaged the top part of my stiff dick.\n\n\"Sharing. Now, that sounds like an idea worth endless investigation.\" I said.\n\n\"Spoken like a true villager.\" the inn keeper replied."
    ],
    "authorname": "rae121452",
    "tags": [
        "big cock",
        "gay anal",
        "gay orgy"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-mask-of-pan"
}