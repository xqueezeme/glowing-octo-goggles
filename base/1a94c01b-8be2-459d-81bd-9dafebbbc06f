{
    "title": "Confirming Carter Bk. 03 Changes Ch. 03",
    "pages": [
        "Cisco learns that there are benefits to his new job while Ronin goes back to Sateda. Carter has an encounter with the leader of the Genii, and invites him to dinner...\n\n(-)\n\nConfirming Carter Book Three, Changes\n\nChapter Three\n\nInterior-Infirmary\n\n0620 Hours\n\n\"Samuels to Cisco.\"\n\n\"Go ahead.\" He said quietly as he tapped his headset.\n\n\"Can you meet me in the colonel's suite?\" She asked.\n\n\"Five minutes?\"\n\n\"That's fine, I'll have coffee ready.\"\n\nHe stood up, and saw that Tammy was looking at him.\n\n\"You're a light sleeper.\" He said. \"How are you feeling?\"\n\n\"Better.\" She smiled. \"Who was that?\"\n\n\"Samuels. She wants to talk to me.\"\n\nShe nodded, her eyes closing.\n\n\"Go back to sleep. I'll be back later.\"\n\nShe smiled, but didn't say anything.\n\nInterior-Kitchen\n\n0630 Hours\n\n\"Get some coffee, and have a seat, they need a few more minutes to finish getting your suite ready.\" Andi said, not turning around.\n\nHe noticed that she had a tablet on the table in front of her, and there were pictures of the living room and kitchen on it. He waved his arm, and saw himself doing it on the tablet.\n\n\"It's a live feed, we use it to monitor Sam. Or we used to, we don't need it that much anymore.\" Samuels said. \"They both wear a bracelet that we monitor them with too.\"\n\n\"Could those bracelets be modified to send out a distress signal, or to track them?\" He asked as he sat down across the table from her.\n\nShe shook her head. \"The range on them is only about two hundred feet. It's a medical device. Sam has a subcutaneous transponder, I guess we could get Tammy one.\"\n\n\"Since she's already in the infirmary, could we do that today?\" He asked.\n\n\"It might be a little soon for that.\" She said. \"She may not be up to it.\"\n\n\"She's feeling better. I just came from there.\"\n\n\"When did you go down there?\"\n\n\"I was there all night.\"\n\nShe looked at him, then nodded.\n\n\"I check the video system here in the suite, the conference room, and anywhere they go that has a video feed.\" She said. \"I use it to track Sam's progress as my patient, and also to make a historical record as foreign minister.\"\n\nShe got up and refilled her coffee cup, then came back and sat down.\n\n\"They withhold information from both Jennifer and I, but they know that we check the video. They don't object, or else Tammy would have shut it down. She set the system up.\"\n\nHe nodded, and waited for her to continue.\n\n\"I understand that your first loyalty is going to be to them, and that you're going to have to withhold information from me at their request. But I need you to share information about their state of mind, and their health with us. We can talk to Sam about that later, I doubt if she'll object.\"\n\n\"My job is to protect the royal family, and that means more than just keeping them alive.\" He said. \"Would you agree with that?\"\n\nShe nodded.\n\n\"I'll need to speak to Ronin and the queens to see what that includes. But I agree, I doubt if they'll object to us sharing medical information with you.\"\n\nShe nodded again, looking at him.\n\n\"Let's go down and take a look at your suite.\" She said as she stood up. \"I gave you the one I used to live in. It's got a rustic decor, I think you'll like it.\n\nInterior-Kitchen\n\n0745 Hours\n\n\"Carter to Cisco.\"\n\n\"Yes, Ma'am?\"\n\n\"Where are you?\"\n\n\"Right here.\" He said as he stepped into the kitchen.\n\n\"Neat trick.\" She laughed. \"I like the outfit.\"\n\nHe was wearing a light brown Atlantian style suit with a soft, cream-colored shirt.\n\n\"I don't like the cut of the jacket. No collar.\"\n\n\"Take it off.\" She said. \"I want to see what you have on under there.\"\n\nHe slipped the jacket off, revealing twin shoulder holsters, each with a large automatic pistol.\n\n\"Turn around.\"\n\nHe turned, and she could see the two small pistols clipped inside the waistband of his pants.\n\n\"Now lift the pants legs.\"\n\nHe drew up the legs of his pants. He had another pistol strapped to one ankle, and his bowie knife strapped to the other.\n\n\"What else do you have? I know there's more.\" She said.\n\nHe pulled a small knife from one sleeve, then held his other arm out, and a small pistol appeared in his hand.\n\nRonin smiled. \"What about the knife under your collar, and the one strapped inside your left leg?\"\n\n\"Those are carved bone, won't show up on a metal detector.\" Cisco said.\n\n\"So another knife, or a bomb isn't going to pop out of your shoe? We've seen it all?\"\n\n\"You never see it all.\" He said as he reached up and slipped a thin piece of wire from under the collar of his shirt.\n\n\"What's that for?\" She asked.\n\n\"Garrote.\"\n\n\"And you're going to pack all that hardware around all the time?\" She asked.\n\n\"No. But at least one guard per team will carry most of it. The other one will have a small automatic weapon.\" He said. \"I like the Mac10. But if we can find more of Ronin's gun, we can use those.\"\n\n\"That's why we called you.\" She said as he sat down next to Ronin.\n\n\"I want you to go to Sateda today. I'll send the Apollo with you.\" She told them. \"Ronin can tell them where to look, and they can scan before they send you down.\"\n\nCisco shook his head. \"Ronin can do this. I'll be staying here.\" He said. \"One of us will be in the city, with you, at all times.\"\n\n\"He's right.\" Ronin said. \"And I want to sit down with you and Tammy when she gets home. We need to talk about ground rules.\"\n\nCisco slid a piece of paper with ancient symbols on it over to him. Ronin slid his own back to him. They both nodded as they looked at each others lists.\n\n\"So you're going to lock us down.\" She said.\n\n\"Only as much as we have to.\" Cisco said. \"Once we get the security systems up, you'll have free run of this building, the conference center, and the formal dining room. Those areas are going to be kept locked down. If you go anywhere else, we'll do a pre-sweep of the area first.\"\n\nHe paused, glancing over at Ronin, then back at her.\n\n\"But the most important thing we're going to need you to understand, is what your job is in an emergency. It's going to be hard for you, because it goes against all the training you've ever had. You have to let our people protect you, and that means not resisting them if they try to move you out of an area, or try to cover you. You do not fight. If they go down, you run, you only fight as a last resort.\"\n\nShe looked at Ronin, and saw the same stony expression on his face that Cisco had. \n\n\"I don't know if I can do that.\" She said quietly.\n\n\"You'll learn. We're going to practice it.\" Cisco said. \"We don't expect you to get it right the first time, or every time. We just want you to be ready.\"\n\n\"Do you really think something will happen that often?\"\n\n\"No, but it will happen. People will just lose it, and try to take it out on you because you're symbols. We have enemies, and will make more, things change.\"\n\nInterior-Infirmary\n\n0930 Hours\n\n\"Hi sweetie.\" Tammy smiled as they came up to the bed.\n\n\"Hi, how are you feeling?\" Sam asked as she took her hand in hers.\n\n\"Better, I'm still a little weak though.\" Tammy said. \"Jenn says I have an infection, and she wants to keep me here for a couple days.\"\n\n\"Oh.\" Sam said, her face going pale. \"I haven't talked to her.\"\n\n\"She just left. She let me feed Jacob. Just the bottle though.\"\n\nShe glanced over at Cisco.\n\n\"Did he tell you that he stayed here with me last night?\" She asked Sam.\n\n\"No, Andi did.\" Sam smiled. \"I don't think he was going to. He doesn't give up much.\"\n\n\"As long as he gives up the good stuff.\" Tammy said, wincing as she started to laugh. \"Oh shit, it hurts to laugh.\" She grunted.\n\n\"Then don't laugh.\" Jennifer said as she walked up and stood on the other side of the bed. She looked over at Sam.\n\n\"She's got a minor infection and a low grade fever. We've got her on a wide spectrum antibiotic.\" She said. \"I'm going to keep her here today, and we'll see how she's doing tomorrow. There's no more internal bleeding, we got everything when we went back in.\"\n\nSam nodded, but didn't say anything.\n\n\"I'm really sorry, Sam. We thought we had gotten everything.\" Keller said. \"I went back over the video, and still didn't see the bleeders, even though I knew they were there. That's why the second surgery took so long.\"\n\n\"Tell her about the STID.\" Tammy said.\n\nJennifer looked at Tammy, then back at Sam.\n\n\"Andi called down and asked if we could put a subcutaneous transponder like yours in Tammy. We talked about it, and Tammy agreed.\"\n\nCarter looked over at Cisco. \"This was your idea I guess.\"\n\nHe nodded. \"Dr. Samuels was telling me about the video system, and your bracelets.\" He said. \"And I asked about the transponder after she said that your bracelets are medical devices, and only have a short range.\"\n\n\"He's locking us down too.\" Sam told Tammy. \"They want to sit down with us when you get home. Ronin says we're going to have ground rules.\"\n\nTammy nodded. \"Good, we should have done it before now.\" She said, looking at Cisco. \"I just didn't think we'd need it so soon.\"\n\n\"Neither did I.\" Sam said.\n\n\"I don't want either of you to think about it after we get everything setup.\" Cisco said. \"You won't even notice it most of the time. Just live your lives, and let us worry about the rest.\"\n\nTammy looked at Sam, then over at Jennifer.\n\n\"Can we have a minute Jenn?\" She asked.\n\n\"Sure, I want to look in on Jacob, then I think I'll go try to figure out how my chair got out here.\" Jennifer said, looking at Cisco. \"No one seems to know.\"\n\nWhen she was safely out of earshot. Tammy looked over at Cisco.\n\n\"Will you take Sam home and make love to her for me?\" She said softly.\n\n\"Tammy, not yet. You're hur...\"\n\n\"No, Sam. I want this for you.\" \n\nShe looked back at Cisco. \"Three times. Once for her, once for me, and once for us.\"\n\nSam was blushing as she looked at Cisco, then quickly away. \n\n\"Come here, baby.\" Tammy laughed. \"Give me a kiss, and get out of here. I'm tired, and I really do need to rest.\"\n\nSam leaned closer, bringing her lips to Tammy's. They kissed lightly, and Tammy ran her hand over her breast, pinching her nipple.\n\n\"Your nipple is hard, is your little pussy wet too? That's why you're blushing, isn't it?\" She whispered.\n\nSam nodded, smiling against Tammy's lips.\n\n\"Go Sam, just forget everything else for a few hours and have a good time.\" Tammy whispered. \"I want you to.\"\n\nSam nodded again and kissed her lightly. \"I will, and I love you.\"\n\n\"I love you too.\" Tammy said, closing her eyes.\n\nSam stood up and took Cisco's hand, leading him away from the bed. She stopped by Jennifer's office on the way out, and stuck her head in the door.\n\n\"Will you tell the senior staff that I'm taking the day off?\" She said lightly. \"I'll be available for dinner, if anyone wants to join me. I just won't be taking calls till after say...sixteen hundred?\"\n\n\"I think that's a good idea Sam. I'll let everyone know.\" Jennifer said. \"But let's make it eighteen hundred. And I'd like you to stay with me tonight, or have Teyla come over and stay with you. I don't think you should be alone.\"\n\nSam just nodded. \"How about both of you come over? We can make it a girl's night in.\"\n\nInterior-Living room\n\n1015 Hours\n\n\"You don't really have to...\"\n\nCisco held his finger to her lips, smiling when he saw the soft green glow of her shield.\n\n\"I want to. I have for a while.\" He said gently. \"Turn your shield off, but don't undress, I want to do that.\" \n\n\"I need a minute.\" He said as they stepped off the porter. He turned to the marine standing there and signaled for him to follow. He walked down the hall with him, then watched as he stepped onto the elevator. He stood for a moment, speaking quietly into his headset.\n\n\"We can't be queen and subject when we do this.\" He said as he came up to her, putting his arms around her waist, holding her comfortably. \"Can you do that?\"\n\nSam nodded, but didn't speak.\n\n\"Do you want me to make love to you?\"\n\nShe shook her head, then smiled slowly. \"With me.\"\n\nInterior-Apollo Bridge\n\n1020 Hours\n\n\"This was another storage area.\" Ronin said, pointing at a section of the map on the monitor. \"Very few people knew about it. I was a guard there for a while.\"\n\nThey had already been over the two main continents, and had only found a few weapons, and two small ammunition caches. \n\n\"I'm getting energy and life sign readings from the west side of the city.\" Wilkins said. He enlarged the map, highlighting a cluster of buildings. Small red symbols dotted the area. \"The X's are life signs, the yellow areas are buildings that I think are powered. At least two of them are underground.\"\n\n\"What do you want to do?\" Lorne asked. \"This is your show. And they might be your people.\"\n\n\"I'm with my people.\" Ronin said quietly. He looked over at Wilkins. \"How many life signs do you see? And can you put us into one of those underground buildings?\"\n\nWilkins shook his head. \"They're both too deep to put you down in them safely. I can put you in the buildings directly above them, they look unoccupied. There's only about twenty life signs all together, and those are all around the perimeter.\"\n\n\"Let's beam one of them up, and ask them what they're doing there.\" Lorne said. \"These are the first life signs we've found so far, so I think we may be on to something.\"\n\nRonin nodded, and Lorne looked over at Wilkins.\n\n\"Pick one that's alone, and beam him into the brig. Let's see what he has to say.\"\n\nInterior-Bedroom\n\n1020 Hours\n\n\"I like your hair short like this.\" Cisco said as he opened the buttons on her vest slowly. When he reached the bottom, he put his hands on her waist and ran them slowly up her sides.\n\nSam sucked in her breath at his gentle touch, arching her back to force her breasts toward him as his fingers stroked lightly over her skin. \n\nHe moved around her slowly, pressing himself against her as he drew her vest off over her shoulders and slid his hands around, cupping her tits and squeezing them.\n\n\"I've always liked your body.\" He whispered. \"From the first time I saw you. I never thought I'd be doing this with you.\"\n\n\"When was that?\" She gasped as he pinched her nipples between his fingers.\n\n\"At the SGC, I used to watch you in the gym, and I was on the security teams for a while before I got moved to SG-14.\" He said, moving his hands down to her waist. \"Turn around.\"\n\nHis fingers opened the button on her slacks, then slid the zipper down slowly. Her pants fell around her feet, and she stepped out of them, kicking them aside and taking a step back, smiling at him.\n\n\"You like?\" She asked posing like Andi had had her do on the first day they'd met.\n\n\"You're beautiful.\" He said, taking a step toward her.\n\n\"Huh uh.\" She laughed. \"My turn.\"\n\nHer hands came up and she jerked the front of his shirt open, sending buttons flying across the room. Her hands moved to his belt, opening the buckle quickly, then pulling it off and tossing it on the bed. \"We're going to need that later.\" She muttered.\n\n\"Get rid of the shoes.\" She said as she opened his pants and moved the zipper down. As his pants dropped down his legs, she pushed him backwards. His legs hit the side of the bed, and he fell back onto it. Sam dropped to her knees, pulling at his pants legs as he tried to kick off his shoes.\n\n\"I don't have alot of experience with men, or with sex in general, if you want the truth.\" She said as she ran her hands up the insides of his thighs. She wrapped her fingers around the soft, warm shaft of his cock, looking up at him. \"There's something that I always wanted to try, but was afraid to. Is it okay if...\"\n\nCisco smiled down at her as he rested on his elbows, watching her. \"Go ahead. I'll tell you what feels good, and what I like.\"\n\nShe was smiling as she pressed her lips to the side of his cock, then started rubbing it all over her face.\n\nInterior-Apollo Brig\n\n1030 Hours\n\nThe glare of an Asgard beam flared and faded, and a man appeared behind the bars in the brig. He looked surprised, then reached for his weapon, stopping when he saw six marines pointing weapons at him. He drew his sidearm slowly, then sat it on the floor, and stood up, facing them.\n\n\"Genii.\" Ronin said with disgust, then stepped up to the bars. \"What are you doing here?\"\n\nThe Genii looked at him, not saying anything.\n\nRonin turned to Lorne. \n\n\"Tell Wilkins to beam them out, and spread them around the island.\" He said as he turned toward the door. \"Beam this one down too.\" \n\n\"You're not going to question him?\" Lorne asked.\n\n\"No, let's go look for ourselves.\"\n\nInterior-Bedroom\n\n1040 Hours\n\n\"You smell different than Tammy does.\" She said softly as she inhaled his musky scent. Her tongue came out, and she dragged it slowly around the head of his cock, making him moan.\n\n\"You liked that.\" She giggled. \"You like what I'm doing, your thing is getting bigger.\"\n\n\"It's a cock, or a dick, not a thing.\" He laughed. \"Say cock. And tell me that you like mine.\"\n\n\"I like your cock.\" She said, running her hand slowly up and down over the shaft. \"You're not circumcised, and I really like that. One of Boris's cocks is like that, and it feels really good inside me.\"\n\n\"Who's Boris.\" He asked, a puzzled expression on his face. \"And how many...\"\n\n\"We'll have to show you.\" She laughed. \"He's in the shop right now.\"\n\nPulling the skin on his cock up and down, she watched as the foreskin came up and almost completely covered the head, then retreated when she pulled down on it. She picked up the pace of her stroking, smiling as his cock stiffened in her hand, getting longer and thicker as she watched.\n\n\"That is so kewl.\" She whispered. She looked up at him, blushing slightly. \"Ca...can I put it in my mouth?\"\n\n\"Don't ask, do.\" He said. \"Do you want me to tell you what to do?\"\n\n\"No.\" She said as she kissed the tip of his cock. \"I think I can figure it out.\"\n\nHer lips parted slowly, and she let the thick knob of his cock slip into her mouth.\n\nExterior-Sateda\n\n1040 Hours\n\n\"You should be able to access the first underground area from the building in front of you.\" Wilkins told Ronin. \"I'm not getting any life sign readings, but that doesn't mean no one is home, so be careful.\"\n\n\"Copy.\" Ronin said, then waved the first squad of marines into the building. One of the marines stepped out a moment later, signaling that it was clear, and Ronin waved the second squad forward. Waving for the third squad to set up a perimeter, he stepped into the building.\n\n\"Got a staircase going down over here, sir.\" A marine said.\n\nRonin went over and looked down the stairs, then started down. The marine put his hand on his shoulder, and Ronin looked back at him.\n\n\"That's my job, sir\" he said, waving his squad forward. \"Let us clear it. We'll tell you when to come down.\"\n\nRonin looked at him and nodded, then stepped back out of the way.\n\nThe marines went down the stairs quietly, disappearing as they fanned out at the bottom. One appeared a moment later, signaling that it was clear. Ronin went down the stairs, and the sergeant came up to him.\n\n\"Seven rooms, most of them look like labs.\" He said. \"No one has been down here in days, but it looks like they use it regularly. You should see this.\"\n\nHe led Ronin down a hall and into a large room, stopping him just inside the door.\n\n\"Those are nukes, sir. So we don't want to hang around here too long.\" He said. \"I think we found one of the Genii's research labs.\"\n\nRonin nodded. \"Check the rest of the floor. Is this the only level?\"\n\nThe sergeant nodded. \"There's a door at the end of this hall leading to a connecting tunnel, probably to the other building.\" He said. \"I'd like to send second squad up and have them access the other complex from above, while we go in through there.\"\n\n\"Send half of the other squad with them for support.\" Ronin said. \"But have them stay topside unless we need them.\"",
        "Interior-Bedroom\n\n1040 Hours\n\nShe moaned around the head of his cock, surprised that it filled so much of her mouth. She bounce her head up and down, letting the flaring rim slip in and out between her lips, then pressed her head down, taking in more of his shaft.\n\nShe choked when the head of his cock hit the back of her throat, and she felt his hands on her head, pulling her up. Easing back till just the head was in her mouth, she looked up at him.\n\n\"Don't try to take it all.\" He smiled. \"Just take the head and the first inch or so into your mouth. Use your hand to rub and jerk on the rest of it.\"\n\nShe nodded, not taking his cock out of her mouth.\n\n\"Come up here with me.\" He said, guiding her mouth off of his cock. \"We can lay out and get comfortable.\"\n\nShe shook her head as she looked at his cock, watching her hand run up and down the length of it. \"I like this.\" She said. \"I'm in a good position for me. I can reach and see everything, and I can see your face too.\"\n\n\"Okay.\" He said, reaching back and grabbing a pillow. \"But before you start again, get my cock wet. Lick it, or spit on your hand and rub it in. Jerk me off, and play with my balls too.\"\n\nHe laid back, spreading his legs wider as he relaxed against the pillow and closed his eyes, sighing as he felt her tongue running up and down over his cock.\n\nInterior-Sateda\n\n1050 Hours\n\nThe marines breeched the second part of the complex, and met no resistance. The sergeant came back down the corridor, a shit-eating grin on his face.\n\n\"We hit the jackpot, sir.\" He said, then sobered. \"I'm sorry. I forgot that...\"\n\nRonin waved him off. \"Show me.\"\n\nThe sergeant led him down the corridor, and turned into the first room that they came too. A marine was kneeling on the floor with half a dozen boxes open in front of him.\n\nRonin leaned down and picked up a triple barrel shot gun, jacking the slide and checking the chamber. A fond smile crossed his face as he held it in his hands.\n\n\"You look natural with that.\" The sergeant said.\n\n\"I learned to use one when I was six.\" Ronin said softly, sitting the gun back in it's box. \"What else do you have?\"\n\n\"There's thirteen rooms like this one on this level, and there's two more levels under this one.\" The sergeant told him. \"I don't know if the beams will reach the lower level. We may need transponders. There's an elevator in this building. Worst case, we have to move it all upstairs.\"\n\n\"Let them know.\" Ronin told him. \"I don't want to hang around here any longer than we have too. I'm going back to the ship.\"\n\n\"Yes sir.\" The sergeant said to Ronin's back. He was surprised when Ronin stopped and turned around.\n\n\"I grew up not far from here.\" Ronin said. \"On the other side of town.\"\n\nHe looked at the sergeant for a moment, then turned and went up the stairs.\n\nInterior-Bedroom\n\n1050 Hours\n\n\"I changed my mind.\" she said suddenly, getting to her feet and clambering up onto the bed. \"I want to feel you in me.\"\n\nStretching out in the middle of the bed, she spread her legs, watching him as he rolled over and got up on his knees. He shuffled over until he was between them, the thick shaft of his cock sticking out over her belly.\n\nSam reached down, wrapping her fingers around it, shucking the skin up and down as she pulled it closer to the fur fringed lips of her pussy.\n\n\"Let me do it.\" She whispered huskily, running the tip of his cock up and down between the fleshy, cream coated lips of her pussy.\n\nShe pulled him forward, letting his cockhead press deeper into her, then went back to rubbing it all over the puffy outer lips. She whimpered when the tip brushed across her clit, and she brought it back, centering the head over the stiff little nubbin, grinding her cunt up at it as she held it in place.\n\nCisco groaned as she teased herself with his cock. His balls were already pulling up under the base of his cock, and he could feel them twitching in their wrinkled sac.\n\n\"I...if you don't put i...it in soon...\" He gasped.\n\nShe looked up at him, her eyes wide. \"Oh my god! I'm sorry.\" She panted. She brought his cock back down between her juice slickened labia, lining it up with the opening of her pussy. \"Do it! Stick it in and fuck me Cisco.\" She moaned as she reached for him.\n\nPressing his hips forward, he forced the head of his cock into the warm, wet opening of her cunt. He groaned, dropping down and supporting his weight on his forearms, his lips seeking hers as he started stroking his cock in and out.\n\nSam's legs wrapped around him and she snaked her arms up around his neck. Writhing under him, she marveled at how much better it felt than with her previous lovers. His cock was pounding in and out of her roughly now, his breath rasping in her ear.\n\n\"Cum...cum for me. I want to feel it.\" She panted, humping her pussy up at his cock.\n\nCisco slid his arms under her, cradling her, then starting to shuttle her up and down over the length of his cock. He spread his knees wider apart, changing the angle of his strokes, thrusting deep into her with long, tip to root lunges.\n\n\"Oh god!\" She groaned. \"Don't stop! Keep fucking me like that you big beautiful bastard. Oh shit. I...it's nev...never been li...like this.\"\n\nShe clung to him as he pounded his cock in and out of the spasming sheath of her cunt, waves of sensation crashing over her as he fucked her. Whimpering happily, she hooked her heels under his asscheeks, spurring him on like a rider with a horse.\n\nCisco jaws clenched and he growled deep in his throat as he felt the first hot slugs of cum surging up his cockshaft, then bursting free, coating the soft inner walls of her pussy. He buried his cock balls deep, humping forward in short jerking strokes, barely withdrawing as his balls emptied themselves inside her.\n\n\"Yesssss!\" She screamed, thrashing and writhing under him frantically. His hot cum filled her clasping cunt channel to overflowing, and she could feel it running out of her as he kept slamming his cock into her.\n\nHer legs worked steadily as she humped and arched her cunt up at him. She clasped his hips between her knees, urging him to give her longer strokes.\n\n\"Please.\" She whined. \"Give it to me. Fuck me Cisco. I want to feel it moving in me!\"\n\nGasping and panting for breath, he nodded into her neck and started moving his hips, letting his cock slide in and out of her. He slowed his strokes gradually, but moved steadily over her as she wriggled under him.\n\n\"Oh god.\" She laughed a couple of minutes later. \"No one has every done it like that before. Well, Tammy has made me cum better, but I've never been fucked like that. That was amazing!\"\n\nLetting her arms drop from around his neck, she flopped back on the bed. Her legs still held him, looser now, but she kept up a slow, steady pumping motion, digging her heels into his asscheeks.\n\nCisco raised up over her, smiling down at her.\n\n\"You liked that, huh?\" He laughed. \"I usually call that a quickie.\"\n\n\"The first time is always a quickie.\" She giggled, and pulling him down onto her, she kissed him hungrily. When she pulled away, she smiled up at him. \"We can take our time the next time.\" She paused, staring up at him as he started moving his hips on his own again. \"And that's going to be soon, isn't it?\"\n\nInterior-Apollo Bridge\n\n1200 Hours\n\n\"All the holds are full, but Daedalus will be here in about twenty minutes.\" Lorne said. \"We'll stay and fly cover for them, just in case.\"\n\nRonin just nodded.\n\n\"I know this was hard for you, Ronin. But we did good today.\" Lorne said. \"And I don't think your people would mind.\"\n\n\"No, they'd want us to have it, instead of the Genii.\" Ronin said quietly. \"I just didn't expect to feel this way. It's still my home.\"\n\n\"I feel the same way when I go back to San Francisco. That's in California, back on Earth.\" Lorne said. \"But Atlantis is starting to feel like home, and I want to make it safe for all of us.\"\n\n\"It is home now, and we will make it safe.\" Ronin said slowly. \"Sateda and Earth are the past, Atlantis is the future. It's time to make families, and be part of something.\"\n\nInterior-Apollo Bridge\n\n1310 Hours\n\n\"We should be back in about an hour, John.\" Ronin said. \"We just broke orbit and went into hyperspace.\" He paused for a moment. \"What's going on? I told Ops to put me through to the colonel, and I got you.\"\n\n\"Jennifer said that she was taking the day off.\" Sheppard said. \"And she would have called me in anyway. I am the military commander of the city.\"\n\n\"If you say so.\" Ronin grunted. \"Have you heard anything about Tammy? Is she doing better?\"\n\n\"Jenn says she has an infection, and a low grade fever. She's going to keep her for another night.\"\n\n\"Then we need to get people in there.\" Ronin said under his breath.\n\n\"There's a squad of marines at the door, and Jenn said Cisco was there all night.\" Sheppard said. \"He slept in her chair next to Tammy's bed.\"\n\n\"He didn't tell me that.\" Ronin said, looking surprised. He looked at Sheppard staring back at him on the monitor. \"I like him, John. I think we just got real lucky.\"\n\n\"Yeah, I had heard good things about him, but if I had known the truth about him, he'd be an officer, working for me, not your captain of the guard.\"\n\n\"Like I said, we just got lucky.\" Ronin laughed.\n\n\"So what did you get?\" Sheppard asked. \"You find what you were looking for?\"\n\nRonin nodded. \"We don't have a count, but Apollo is maxed out, and Daedalus is close. Weapons and ammunition. There was also a Genii lab, your marines said that they were building nukes. We left it intact, I figured we were already taking what they think is theirs, there wasn't any reason to make the situation worse.\"\n\n\"Good thinking.\" Sheppard said. \"And if they don't come in diplomatically, we can always go back and blow it later, now that we know it's there. That was a smart move, not killing any of their guys.\"\n\n\"They'll have a thousand men at that site tomorrow.\" Ronin said. \"Or at least I would. Ladon Radim isn't as bad as Cowen, but he's smarter, and that makes him more dangerous.\"\n\n\"We'll let Samuels handle it. That's what she's there for.\" Sheppard said. \"She's still talking about sending Vala as an emissary. God help them.\"\n\nInterior-Bedroom\n\n1430 Hours\n\n\"Can we go over to the infirmary and see Tammy? I want to see Jacob too.\" Sam said. She was laying across his back, her head resting on his shoulder. \"We've done it three times, and...\"\n\n\"Four.\" he said. \"You forgot the time that you...\"\n\n\"That doesn't count!\" She laughed, smacking his shoulder lightly. \"You never pulled out, so that just counts as one long one.\"\n\n\"If you're going to be that way, we've only done it twice.\" He said seriously. \"I didn't pull out after the first time either.\"\n\n\"And she did say that we had to do it three times.\" Sam said as she rolled off him and slid off the side of the bed. \"But that just means that we can do it again when we get back. Or you can just owe me one.\"\n\n\"Come on, let's get in the shower, then get dressed.\" She said as she skipped toward the bathroom. \"I want to go by the mess hall too. I'm starving!\"\n\nCisco smiled as he followed her into the bathroom.\n\n* * * * *\n\nThey ended up doing it again in the shower, then twice more in Cisco's suite, once on the floor in the living room, and again in his bedroom. Sam had explained that they had to break it in, or it would be bad luck. When they had showered again, and he'd gotten fresh clothes, they went over to visit Tammy in the infirmary.\n\n* * * * *\n\nInterior-Infirmary\n\n1540 Hours\n\n\"Can I see her, Jenn?\" Sam asked as she stepped into her office. \"Is she awake?\"\n\nKeller looked up and smiled. \"She's awake, and doing much better. So much better as a matter of fact, that if you promise to make her stay in bed, I might be talked into letting you take her home tonight.\"\n\n\"Oh god, Jennifer. That would make me feel so much better.\" Sam said, coming around the desk and hugging her. She stepped back, holding her at arms length. \"You and Teyla can still come over, and we'll call Vala too. We can have a slumber party!\" She laughed.\n\n\"That actually sounds like fun.\" Jennifer laughed. \"But she can't have any alcohol, and I'm not kidding, she has to stay in bed. Or at least stretch out on a couch. She has to stay off her feet for a few days.\"\n\n\"And I almost forgot, John called a little while ago.\" She said. \"Ronin is back, and they're going through what they got right now. He sounded like a kid at christmas.\"\n\n\"They got that much?\"\n\n\"Filled both ships apparently. At least, that's what John said.\"\n\nSam let her go and turned toward the door. \"Cisco.\" She said. \"Call Ronin, they're back. Get with him and go through what they got. You guys get thirty percent, off the top.\"\n\n\"I don't like leav...\" He began as he stepped into the doorway.\n\n\"There's a squad of marines outside the door, and you can send more if it will make you feel better.\" She laughed. \"Now go, I'm not going to want you around when I talk to Tammy anyway.\"\n\nHe looked at her, then nodded. \"You keep your shield on. And stay in sight of the marines. Promise me.\"\n\nShe nodded. \"I promise.\" She said seriously.\n\nHe stepped away, and she saw him talking to the marine outside the door as she came out of the office, and knew that at least one more squad was on the way.\n\n* * * * *\n\n\"Hi, sweetie.\" Tammy smiled as Sam came over to her bed. She was holding baby Jacob cradled in her arms. He was sleeping, but he kicked and jerked every few moments.\n\n\"Do babies dream, Jennifer?\" Sam asked.\n\n\"Everyone dreams, Sam.\" Jennifer said as she picked him up. \"He's probably having dreams about still being in the womb.\" She looked down at Tammy. \"I'm sorry, but I really need to put him back in the chamber and hook up the IV. It's doing wonders for him. He's put on almost a pound already.\"\n\nShe paused, bouncing him gently as he made a whimpering sound. \"But I promise, you can take him home tomorrow.\"\n\nThey both nodded, and she walked off, heading for the back of the infirmary.\n\n\"Well now, you have a rosy glow about you that just hearing that Jacob can come home wouldn't give you.\" Tammy smiled.\n\n\"Well, before we came over here, Jenn told me that she might let you come home too.\" Sam smiled back. \"But you'd have to stay in bed, or at least lay on a couch or something.\"\n\n\"That is good news!\" Tammy said, looking at her closely. \"But that isn't what I was thinking.\"\n\n\"I know.\" Sam said, blushing slightly, but smiling nonetheless.\n\n\"So why are you holding out on me?\" Tammy asked. \"You know I want to hear about it!\"\n\n\"Can we wait till we get home?\" Sam asked. \"I mean, what if someo...\"\n\n\"Oh shit! He wasn't any good, was he?\" Tammy gasped, a look of disappointment on her face.\n\n\"Oh god no!\" Sam blurted out. \"He was incredible. He was the best I ever...I mean, except you of course...he...\"\n\n\"Tell me! My feelings aren't hurt.\" Tammy laughed. \"As long as you had a good time. Did you do it three times like I told you?\"\n\n\"Oh yeah, we did it...we did it three times.\"\n\n\"You did it more? You little slut!\" Tammy giggled. \"How many times.\"\n\n\"I'm not sure.\" Sam said, blushing a deep red. \"We couldn't agree on what counted as one. So we did it at least twice in our bed, once in the shower...and twice at his place. Once on the floor, and once in the bed.\"\n\n\"Five times?\" Tammy said. \"I'm impressed. But what do you mean you couldn't decide what counted?\"\n\n\"Well, he didn't you know...pull out before we started doing it again.\" Sam said, looking down at the floor. \"That happened twice. So I'm not sure if it's two, or four times in our bed.\"\n\n\"Oh god!\" Tammy moaned, her hand going under the sheets and between her legs. \"Are you serious? Fuck! I'm gonna scrap Boris if he's that good.\"\n\n\"Oh, don't do that!\" Sam laughed. \"I like Boris. I tell him what to do and he does exactly that. He...just did what he wanted. It felt good and all, but it wasn't the same. I like them both though.\"\n\nShe looked at Tammy with a small smile on her face, then leaned closer, so her lips almost touched her ear.\n\n\"Oooooohhhh, I'm going to like this!\" Tammy said as she felt her warm breath on her ear.\n\n\"I...I sucked his dick.\" Sam said in a conspiratorial whisper. \"I had never done that before, and I felt so nasty doing it too! I was looking at his face while I did it, and he was really enjoying it!\"\n\n\"You never gave a guy a blowjob before?\" Tammy said, looking at her in disbelief. \"How old are you? And where did you grow up, a convent?\"\n\n\"They...you know, asked me too, but it just never felt like...I don't know.\" Sam muttered. \"I did handjobs and stuff, but most of the time they would just get on top of me and do it.\"\n\n\"Oh baby.\" Tammy said, taking her hand. \"I'm sorry. You deserve better than that.\"\n\n\"I...it wasn't them...well, not all the time.\" Sam said. \"I...I was different, not like I am now. You wouldn't have...we wouldn't have...\"\n\n\"I know.\" Tammy said. \"Andi fucking up like she did opened up a whole new world for you, for all of us. I'm glad she made us possible. I've never been as happy with anyone else as I am with you. Even when we're old and grey I'm going to like being your lover.\"\n\nInterior-Warehouse East Pier\n\n1600 Hours\n\nCisco walked the short distance from the porter to the warehouse, and as he stepped inside, he saw Ronin standing talking to Sheppard and Caldwell near a stack of crates.\n\nSheppard spotted him as he approached.\n\n\"What are you doing here?\" He asked.\n\n\"The colonel wanted some private time with Lady Tammy.\" He told him. He looked over at Ronin. \"I left three squads of marines with them. One in the back of the infirmary, and two covering the door and corridors.\"\n\nRonin nodded, turning back to Sheppard.\n\nBefore he could say anything, Sheppard spoke up. \n\n\"I know you want some of this stuff for your guards, but we can use it alot more...\"\n\n\"We get thirty percent, off the top. And we decide what we want first.\" Cisco interrupted him.\n\n\"What?\" Caldwell said. \"Just who the hell do...\"\n\n\"That came right from the colonel.\" Cisco said. \"And if you don't like it, take it up with her.\"\n\nHe turned and looked at Ronin.\n\n\"So what did you get?\" He asked. \"No problems? No one hurt?\"\n\n\"We got what we wanted, and more.\" Ronin said. \"That was a good idea, going to Sateda. I'm glad you said something.\"\n\n\"You okay?\" Cisco asked. \"That had to tough for you.\"\n\nRonin nodded. \"We need go through and see what we have. We might as well split it out three ways if she wants us to take thirty percent.\"\n\nHe looked over at Sheppard. \"Have our stuff stacked in the lobby of fifty-eight. We'll move it when we know where we're going to put it.\"\n\n\"How do you know I'm not going to screw you?\" Sheppard laughed.\n\nRonin glanced over at Caldwell, then back at Sheppard. \"Because that's not the kind of man you are, and we all know it.\"\n\nInterior-Tower Fifty-Eight\n\n1640 Hours\n\n\"The conference room I was telling you about is just down the hall.\" Samuels said as they stepped off the elevator. \"It takes up half this floor, and we can set it up anyway you want.\"\n\nThey went down the hall, turned a corner and went through a set of double doors. The room was dominated by a large table at the front, sitting in front of a large monitor flanked by whiteboards. the center of the room was filled with chairs, and the outside walls were lined with shelves and bookcases.\n\n\"You're right, doc.\" Cisco said. \"This will make a good assembly area, or maybe even a training room. We won't need all those chairs, but I'd like to keep the table, and maybe a dozen of the chairs?\"\n\n\"Are you thinking about using this space for workouts and training?\" Samuels asked. \"I can get you mats and some equipment, mostly things like free weights, speed bags, boxing kinds of stuff. Would that help?\"\n\n\"That would be great.\" Cisco told her. \"How many of these rooms did you say you had?\"",
        "\"There's five more in this building.\" She answered. \"But keep in mind, that the suites on these floors are smaller, and only have two bedrooms. There's four of them on the floors with the conference rooms.\"\n\n\"So if we take two, that's sixteen people. How many suites on the other floors we can have?\"\n\n\"The other floors have six suites with three bedrooms each.\" She said. \"Why, what are you thinking?\"\n\n\"I'd like at least two more floors, that's another thirty-six people. That should cover us for a while.\"\n\n\"I'll give you two conference rooms, and four of the other floors.\" She said, making notes on her tablet. \"Let me know as you start moving people in, and we'll get the closets stocked for them. You're still planning on sending them out plain clothes, not a standardized uniform?\"\n\n\"Yeah, having them blend in will be best right now. There's no need to advertise.\" He said. He smiled as he added, \"And I think both the colonel and Lady Tammy will be more comfortable with them that way.\"\n\n\"I doubt if Tammy will care.\" Andi said. \"But you're right, Sam will be more comfortable if they blend in.\"\n\nInterior-Col. Sheppard's Office, North Tower\n\n1650 Hours\n\nSheppard stopped in the door to his office when he saw Sam and Lorne sitting across from each other, laughing. Sam looked over and smiled as she spotted him.\n\n\"John! I was wondering where you were.\" She said. \"I came over and no one was here, and Evan came in before I could call you. We got to talking, and it just slipped my mind. I'm sorry.\"\n\n\"That's fine.\" Sheppard said lightly as he went behind his desk. \"I just wanted to wrap a few things up and call it an early day. We got alot done today, so what's left can wait till tomorrow.\"\n\n\"Well, don't wrap it up too early.\" Sam said, leaning back in her chair. \"But we probably need Stephen for what I want to talk to you about. Did he come back with you?\"\n\n\"He went home already.\" Sheppard laughed. \"He said he wanted to get ready for dinner.\"\n\n\"Well, give him a call, and ask him to come back.\" She said. \"I have something I want to talk to the three of you about.\"\n\nThey traded small talk while they waited for Caldwell, and when he walked in, Sam stood up and waved him and Sheppard toward chairs in front of the desk. When they were seated, she pushed a pile of papers out of the way and hopped up on the desk.\n\n\"Stephen, as commander of the navy, are you planning on staying on as commander of the Daedalus, or do you have someone in mind to step up into that spot?\" She asked Caldwell.\n\n\"I've been thinking about that.\" He answered. \"We haven't been that active recently, so it was a low priority item. The department is shaping up nicely though, so doing both wouldn't be a hardship.\"\n\n\"If you had to step aside, who would you put in command of Daedalus?\"\n\n\"It would have to be Marks.\" Caldwell told her. \"But the problem there is we gave up our backup helmsman to the Apollo, and we're still training his replacement.\"\n\nShe nodded, thinking for a moment.\n\n\"I'm not looking to take you out of the big chair, I just want to be ready if it comes up.\" She told him. \"I've already talked to Evan about the Apollo, so we can put that aside for the moment.\"\n\nShe looked at the three of them before she continued.\n\n\"I've decided that we're not going to help Todd with his eggs.\" She said, looking at them steadily. \"We're going to reach out to the Travelers, and ask them to do joint ops with us. We're going to start aggressively hunting the Wraith down and killing or capturing their ships as we find them.\"\n\n\"Yes.\" Sheppard said quietly, earning him a grin from her.\n\n\"I knew you'd like that John.\" She said. \"I'm going to let you talk to Larrin about it. I'd like the two of you to work out the details between you. But I want to see a plan by the end of the week. Two plans actually. One with joint ops, one with just our ships.\"\n\n\"Do you have a preference on how you want this done?\" Caldwell asked. \"Evan has had Apollo out daily, and we have more than a dozen idle hives and their escorts tagged. We can take those out, or take them, depending on if you think we can use them.\"\n\nShe looked over at Sheppard. \"You know more about Wraith ships than any of us do, John. What do you think?\"\n\nSheppard looked at her for a moment before he answered. \"I know the Travelers can use them, but we don't have what...who, we need to make it worthwhile for us to try to capture any of them. Zelenka never got off world that much, so isn't familiar with the technology. So the only one that really understands that stuff is...\"\n\n\"McKay.\"\n\nHe nodded. \"As much as I hate to say it, if you want to take and convert those ships for our use, there's only one guy that can do it for you.\"\n\n\"If that's the case.\" She said slowly, \"If we asked him to come back, could you work with him, and more importantly, keep him under control? I've kind of liked not having a crisis every other day, so I'd want him limited to what he had access to.\"\n\n\"It has been nice having the problems coming at us from the outside, and not making our own, hasn't it?\" He laughed. \"But to answer your question, yes, I can keep him under control. For what I have in mind, he wouldn't need access to any city systems, and only a few in the science labs.\"\n\n\"He has the ancient gene.\" Caldwell said. \"Would you want to put him on the teaching machines, or do you think that that would make him more dangerous?\"\n\n\"He's only really dangerous if you let him go his own way.\" Sam said. \"I think if we kept him on a short leash, we could limit the problems he could cause.\" She smiled at them, then added. \"The problem with Rodney is, he thinks he's always the smartest one in the room. Well, that's not the case anymore. I was always at least his equal, but now Tammy and I both make him look like a preschooler. And I don't know how that's going to sit with him.\"\n\n\"Teyla can fly a hive or a cruiser, if push comes to shove.\" Sheppard said. \"I don't know if she could land one. From what Todd told us once, landing a hive is a tricky proposition even with an experienced pilot.\"\n\n\"Why would we need to bring Dr. McKay back to Atlantis?\" Lorne asked. \"Couldn't we send him the information, have him build a control interface, then duplicate it for any ships we want to capture?\"\n\n\"I like the idea of the control interface, but it would be something that he'd have to be on site for.\" Sam told him. \"Trying to send that much data back and forth would keep the gate open for hours at a time. I doubt if the SGC would go for that.\"\n\n\"What makes you think they'd let McKay come here, even if he wanted to?\" Caldwell asked. \"He's an asset, and probably not one they'll want to give up.\"\n\n\"You haven't spent as much time with him as we have Stephen.\" Sheppard laughed. \"I guarantee, whoever he's working for will be glad to be rid of him.\" He looked back at Sam. \"I like the guy. Once you get past the ego, he's not that bad. And he can be handy to have around.\"\n\n\"You didn't have him hitting on you, convinced that you found him as, if not more attractive than he found you.\" Sam said with a wry grin. \"But you have a different problem now, John. He was getting things going with Jennifer, and now you're with her. I don't know how that's going to go over.\"\n\n\"I don't care how it goes over.\" Sheppard told her. \"If we decide to ask him to come back, we tell him up front what he can expect. The only way I want him back is with a clear definition of his role. That's our definition, not his.\"\n\n\"I agree.\" Sam said. \"This is something we need to talk to Andi and Tammy about. I'll get with them later, and see what they think.\"\n\n\"But back to Wraith hunting.\" She said. She looked over at Lorne. \"Evan, keep doing what you've been doing. Find and tag as many of those idle hives as you can. If you run across an active hive, I'll let you decide how to handle it. Daedalus will be on call if you think you need backup.\"\n\n\"Yes, ma'am.\" Lorne said.\n\n\"John, get with Larrin and let her know what we have in mind.\" She said, moving on to Sheppard. \"Let her know that they can have half the ships we've found if they want them. And ask her what they're doing with the ones they already have. Are they converting them somehow, or do they have people that can fly them? We may want to go with their method. It might make McKay a moot point.\"\n\n\"Stephen.\" She laughed as she turned to Caldwell. \"I don't have anything for you, except to step up and do what needs to be done, like you always do. I'm sure John is going to need help, and Evan may have you going out joyriding, so I doubt if you'll be bored.\"\n\nInterior-Kitchen\n\n1830 Hours\n\n\"Colonel Carter, Dr. Samuels is requesting permission to come up.\" \n\n\"That's fine, send her up.\" Sam said as she poured herself a drink. \"I'm expecting Dr. Keller and Ambassador Emmagan later. Just send them up when they get here.\"\n\nThe comm sounded again as Andi walked into the kitchen, and she tapped the button as she walked by.\n\n\"Samuels.\" She said as she opened the fridge and took out two cokes. She held one up, offering it to Sam, but she shook her head.\n\n\"Ops, Dr. Samuels.\" The tech said. \"We have an incoming video signal. It's Ladon Radim of the Genii.\"\n\n\"And I wonder what he wants to talk about.\" Sam muttered. She smiled at Samuels and pointed at her tablet. \"Can you get a video feed on that thing, or do I have to go in the office?\"\n\n\"We can take it on this.\" Andi said, tabbing through the menu on her tablet. \"But I think we should go over to the conference center. And get the court assembled.\"\n\n\"No, I know what he wants, and I know how I want to handle him.\" Sam told her, holding out her hand for the tablet.\n\n\"Ops, send that up here, We're ready.\" She said.\n\n\"Yes ma'am. Wait one.\"\n\nAndi reached over and tapped an image on the screen, and a moment later, Ladon Radim appeared.\n\n\"You are Col. Carter, so called queen of Atlantis?\" He said, glaring at her.\n\n\"Yes, and you're Ladon Radim, so called leader of the Genii?\" She replied. \"My sister queen isn't available to join us, but I won't need her to deal with you.\"\n\n\"You have committed an act of aggression against the Genii.\" Radim said. \"Your action on Sateda can be considered an act of war.\"\n\n\"Really?\" Sam said lightly. \"I think you're blowing what happened this morning out of proportion, but I've heard that your people do that. From my point of view, we recovered weapons and ammunition left by the Stedman's. No Genii were killed, and no Genii property was damaged.\"\n\nRadim stared at her, then turned and spoke quietly to someone off screen.\n\n\"My court was discussing what we were going to do about the Genii the other day.\" Sam said casually. \"We haven't gotten a response from you about opening relations, and we were debating whether we should bother sending an emissary or not.\"\n\n\"You need not send an emissary.\" Radim said, then turned and listened to someone off screen. When he turned back, he was smiling slightly.\n\n\"Good. I doubt you could handle who I had in mind to send.\" Sam said before he could say anything else. \"Atlantis and The Genii have had a...difficult relationship, since we first met. The leadership here in Atlantis has changed since then, as it has with the Genii. We no longer have to follow orders from Earth, but make our own decisions.\"\n\n\"And your first decision was to steal from the Genii.\" Radim said. \"Dr. Weir and others have been told, you do not want...\"\n\n\"Want to make an enemy of the Genii. Blah, blah, blah.\" She finished for him. \"But you exaggerate again. The action on Sateda was not our first decision, it was an afterthought. One of my advisors had an idea, and we checked it out. We had no indication that the Genii were occupying Sateda, not that it would have made any difference.\"\n\nShe smiled at the camera. \n\n\"You said that you considered our action this morning an act of war. So be it.\" She said coolly. \"You can expect my ships over that research lab later this evening. And over your capitol city tomorrow.\"\n\nShe closed the channel and looked at Andi.\n\n\"So, how long do you think befo...\"\n\nThe comm sounded, and she grinned at Samuels.\n\n\"Get that.\" She said. \"He called back quicker than I thought.\"\n\nSamuels got up and answered the comm, speaking quietly to the Ops tech. She nodded at Sam, and she tapped the screen on the tablet.\n\nRadim looked at her for a moment before he spoke.\n\n\"If we may begin again.\" He said softly. \"I believe that we are starting down a path neither of us wants to travel.\"\n\n\"I'm fine with the path you've chosen. But if you'd like to try again, I'm willing to listen.\" She said, looking at him steadily. \"But I'd prefer to talk in person. Have you had dinner yet?\"\n\n\"It is midday here. I was about to order lunch.\" He said, a quizzical expression on his face.\n\n\"Excellent. I have a taste for beef tonight.\" She said lightly. \"You'll love the way my cook does up a ribeye. You look like a medium rare kind of guy. We'll see you in an hour.\"\n\nShe closed the channel and slid the tablet over to Samuels.\n\n\"Now you can get the court together. And reach out to Teal'c. See if he can get here in the next hour or so, I have something I'd like to talk to him about.\" She said as she stood up and walked to the door. \"We'll meet him in the dining room. I'm going down to talk to Tammy.\"\n\nInterior-Infirmary\n\n1910 Hours\n\nShe sat quietly beside Tammy's bed, looking at her. \n\n\"So what happened?\" Tammy asked, not opening her eyes.\n\n\"How long have you been awake?\" Sam laughed.\n\n\"Since you dragged that chair over and plopped your ass down on it.\" Tammy said, turning her head and looking over at her. \"Now tell me what's got you so pensive.\"\n\n\"We heard from the Genii.\" Sam told her. \"Ladon Radim. He opened hard, talking about aggression and war, so I told him fine, we're at war. And hung up.\"\n\n\"Then what happened?\" Tammy asked, trying not to smile.\n\n\"He called back a minute later, and tried to backpedal.\"\n\n\"Did you let him?\"\n\n\"I told him I wanted beef for dinner, and to be here in an hour.\" Sam answered. \"We're going to talk to him in the dining room if he shows up.\"\n\n\"Then we need to get me some clothes...\" Tammy began as she tried to sit up..\n\n\"No, you need to stay here, or if Jenn says it's okay, we can move you to our bed.\" Sam told her, reaching out to take her hand. \"But you need to rest, at least for the next few days. I need you to get better, and that means you have to take it easy.\"\n\nTammy looked at her, then nodded.\n\n\"Have them get me a monitor set up in our room.\" She said. \"I'd rather be in my own bed. This one sucks. And you can't get in with me here.\"\n\n\"I miss just holding you.\" Sam said, squeezing her hand. \n\n\"Me too.\" Tammy smiled. \"So how are you going to handle Radim?\"\n\n\"I'm going to explain that the Genii are a second rate power, and if they don't like it, we can make them a fifth rate power.\" Sam said. \"I've asked the Travelers to come over and join in, so he'll know where he stands from the gitgo.\"\n\n\"Good idea. But be careful, the Genii can be dangerous.\" Tammy said.\n\n\"They're only as dangerous as we let them be.\" Sam said, shaking her head. \"They don't have any ships, and from what I've read, there's so much infighting that they have trouble...\" \n\n\"That infighting will stop if you give them an enemy to focus on.\" Tammy told her.\n\nSam nodded. \"That's why I'm bringing the Travelers over for this. Once he sees that they're in with us, he should lighten up. And they'll keep me honest.\"\n\n\"Let Arrin do most of the talking.\" Tammy said. \"Pharris says that he has the best relationship with the Genii. You say what you want to say, but let him tell them how things are. And are going to be.\"\n\n\"I'll get with him before dinner.\" Sam said. She stood up and came closer to the bed. \"I also had Andi reach out to Teal'c, to see if he could drop by. I know you said that having the Jaffa in Pegasus could be dangerous, but I was thinking that having a small force of them under our control might not be a bad idea.\"\n\n\"And you're planning on using them against the Genii?\" Tammy asked.\n\n\"Yes, if Radim gives me any trouble, we're going to take that facility on Sateda, mainly to use as a bargaining chip. But I might let Teal'c bring in a couple hundred Jaffa to assault other Genii strongholds. I want to talk to him and see what he thinks about that.\"\n\n\"But I have to go.\" She said softly, leaning down and kissing Tammy lightly. \"I'll have them get you moved, and get everything else ready.\"\n\nTammy nodded, closing her eyes, a small smile on her lips.\n\nInterior-Dining Room, East Tower\n\n1945 Hours\n\nCisco stepped into the room, stopping just inside the door. He glanced over at Sam, then stepped to the side when she nodded.\n\n\"Ladies and gentlemen, Ladon Radim of the Genii, accompanied by ministers Phrenum and Colak.\" He said as they entered the room.\n\nRadim was wearing the plain, unadorned green and brown uniform of the Genii, while the other two men wore insignia of rank and rows of medals.\n\n\"Ladon, it's been too long my friend.\" Arrin said as he stepped forward, taking Radim's hand. \"I don't believe that you've been formally introduced to our friend Samantha. If you would allow me?\"\n\nRadim looked at him, then followed him over to where Sam was standing.\n\n\"Samantha, if I may present Ladon Radim of the Genii.\" Arrin said warmly. \"Ladon has been a friend of the Travelers for many years, long before he became leader of the Genii.\"\n\n\"We spoke earlier.\" She said, giving Arrin a soft smile. Her expression hardened as she turned back to Radim. \"It's too bad he hasn't been as good a friend to Atlantis, considering everything that's been done for him.\"\n\n\"A situation I hope to correct.\" Radim said, holding out his hand. \"I was sorry to hear of the deaths of Dr. Beckett and Dr. Weir. I owe both of them for the life of my sister, and the other Genii that they treated.\"\n\n\"I had expected to hear from the Genii sooner.\" Sam said as she took his hand. She held it, tightening her grip as she continued. \"Had we known that the Genii were occupying Sateda, perhaps we would have asked before we went poking around.\"\n\n\"A misunderstanding.\" Radim said, glancing down at her hand. He looked back up at her and smiled. \"We're not occupying Sateda. We purchased that complex from the government in exile.\"\n\n\"Kell.\" Ronin said softly, glaring at him.\n\n\"Ronin! I almost didn't recognize you.\" Radim laughed. \"But yes, we dealt with Kell until he disappeared last year.\"\n\n\"He didn't disappear, he's dead.\" Ronin grunted, coming over to stand next to Sam. \"He betrayed his people, and had no right to sell anyone anything.\"\n\n\"We had no way of knowing that.\" Radim answered, looking at him steadily.\n\n\"Ronin.\" Sam said softly as she took his hand in hers. \"Come sit with me. Take Tammy's seat.\"\n\nShe looked at Radim and waved him toward a seat on one side of the table. \"We're having ribeye steaks for dinner. These are the last we'll have until we get relations worked out with Earth. I guess we'll have to start looking for a new source of meat.\"\n\n\"I had something called a potterhoose with Dr. Weir.\" Radim said. \"Is a ribeye anything like that?\"\n\n\"A different cut, but off the same animal.\" Sam said as Ronin held her chair for her, then sat down beside her. \"And it's called a porterhouse, don't ask me why.\"\n\n\"I'll remember that. I thought it was delicious.\" Radim said as he sat down. \"But we have a similar herd animal, called a dron, that offers meat very close to the taste of what we ate.\"\n\n\"Well, if your dron can get me a ribeye, or a sirloin, we might be able to do business.\" she said. \n\n\"We've heard that you are taking in refugees, and talking of selling goods.\" Phrenum said as he came over and sat next to Radim.\n\n\"Yes, we are.\" Pharris said, looking across the table at him. \"The Travelers have entered into a partnership with Atlantis, to the mutual benefit of both.\"",
        "All three Genii looked at her, barely hiding their surprise.\n\n\"A partnership?\" Phrenum asked.\n\n\"Yes.\" \n\nSamuels came into the room at that moment. She glanced over at Sam before she spoke. \"I'm sorry to interrupt, but is it okay to serve?\"\n\n\"Yes.\" Carter said, glancing over at her. \"But have one of your people take care of that, I'd like you to join us. And put your foreign minister hat on.\"\n\n\"I was going to do that.\" Andi laughed. \"But this came up so quickly, I decided that it would just be easier to handle it myself. Give me a few minutes.\"\n\nCarter nodded and looked down the table at Pharris\n\n\"I'm glad you mentioned our partnership, Pharris.\" She said lightly. \"I think it's important for Mr. Radim and his aides to know that we're working together...\"\n\n\"If I may interrupt, Samantha.\" Arrin said as he turned toward the Genii. \"Ladon, we do not just work with Samantha and Atlantis, but we stand with them in all things. Samantha and her people have reached out and offered a safe haven for our planet bound brothers, and a true partnership as they begin trying to improve the lives of the people of our galaxy.\"\n\n\"What Arrin is trying not to say, Radim.\" Larrin said as she came into the room. \"Is that we have, and will fight with Samantha and her people. They have proven themselves to be trustworthy allies, and formidable fighters. You'd do well to keep that in mind.\"\n\nShe turned and smiled at Sam. \n\n\"I'm sorry I was late Samantha. The first shipment of drones arrived today, and I couldn't resist taking the Kuneia out for a little target practice.\" She laughed as she sat down across the table from Radim. \n\n\"That's quite all right, Larrin. How did she do?\" Sam asked.\n\n\"My helmsman still needs training, but the weapons officer is a natural in the control chair.\" She grinned down the table at Sheppard as she went over and sat with the rest of the Travelers. \"He might even be as good as Sheppard.\"\n\n\"Then I guess we won't have to have John help when you start bringing your other cruisers online.\" Sam laughed. \n\nShe looked back at Radim as she stood up and moved down the table. \"While we're waiting for dinner, it might be a good idea to introduce everyone.\"\n\nShe stopped behind Sheppard, resting her hands on his shoulders. \"I believe you know Sir John Sheppard, Commander of the Royal Forces. Next to him, we have Jennifer Keller, Chief Medical Officer, Sir Stephen Caldwell, Lord of the Admiralty, and his fianc\u00e9e, Ambassador Teyla Emmagan.\"\n\n\"We had not heard that Teyla Emmagan was betrothed.\" Radim said with a smile. \"I hope I will be invited to the wedding.\"\n\n\"I'll let them decide who's on the guest list. It's still up in the air if you're going to be invited to the coronation.\" Sam said as she moved around the table. \"But to continue with the introductions, these are our senior councils, General Jack O'Neill of Stargate Command, and Master Bra'tac of the Free Jaffa Nation.\"\n\nThe three Genii sat silently as they watched her continue around the table.\n\n\"You know our Traveler friends of course, and my Guardian of the Realm and head of the household guard, Sir Ronin Dex.\" She said as she came to the foot of the table. \"The man at the door is Sir Steven Carter, known as Cisco, my captain of the guard. My other two knights won't be joining us tonight, they're on a mission at the moment.\"\n\nShe looked down, resting her hands lightly on Teal'c's shoulders. She smiled down the table at the Genii.\n\n\"This is my old friend, Ambassador Teal'c of the Free Jaffa Nation, our ally in the Milky Way galaxy, and our trading partner there. Teal'c and I have been discussing establishing settlements for his warriors on worlds here in the Pegasus galaxy. We just haven't decided where or when. It was Ronin's idea to look at Sateda.\"\n\n\"There is room on Sateda, should they decide to settle there.\" Radim said lightly. \"We are only using the one island we purchased. But tell me, do you have other worlds in mind for these settlements?\"\n\n\"As a matter of fact, we do.\" Sam said as she came back around the table and took her seat next to Ronin. \"We had taava beans with dinner the last time that Teal'c was here, and he loved them. So we'll probably look for planets that they'll grow on.\"\n\n\"You wouldn't dare...\" Phrenum rasped as he leapt to his feet.\n\n\"Taava beans grow on many worlds, Colonel.\" Radim said, grasping Phrenum's arm and pulling him back down into his seat. \"It is a hearty crop, well suited to many types of soil and climates. I'm sure you will have no trouble finding suitable worlds for your friends to settle on.\"\n\nHe paused, a small smile on his face.\n\n\"But are you sure that your friends would want to settle in this galaxy?\" He asked. \"There are many dangers here, the Wraith being chief among them.\"\n\n\"Haven't you heard that the Wraith are at war with each other, and that their Primary, and all their other queens were killed recently in a battle that wiped out almost eighty percent of them?\" Larrin laughed. \"You need to get better spies, or pay them more.\"\n\n\"We had heard that the Wraith were not culling as much, but did not know why.\" Radim said. \"Has this information been confirmed?\"\n\n\"Yes.\" Pharris said softly. \"I was present when the Wraith they call Todd asked for help fertilizing eggs to produce new queens. It was he that told us of the war, and the number of Wraith destroyed.\"\n\n\"It might please you to know Pharris, that I've made a decision on that request.\" Sam said, smiling down at her. \"We're not going to help them. On the contrary, we're going to start hunting them. I've already spoken to John and Stephen about it, they'll be getting with Larrin to set up joint operations in the next few days.\"\n\n\"This is wonderful news, Samantha.\" Arrin said, smiling broadly. \"We were concerned that you might decide to help them.\"\n\n\"We already have more than a dozen idle hives and their escorts located, we'll get with you to work something out if you want any of them.\" Sam said.\n\n\"The Genii would be interested in acquiring ships, especially Wraith hives and cruisers. Or perhaps you would give us one of the cruisers you spoke of, Larrin.\" Colak said, looking around the table.\n\n\"We would have to discuss that with Samantha and her court.\" Waleen said, staring steadily at Colak. \"But we do not feel that it would be in the best interest of the Travelers to have the Genii as a space faring people. You have not always dealt favorably with us in the past, and considering your failure to open relations with Atlantis...\"\n\n\"The food is here.\" Sam said as a server sat plates in front of her and Ronin. \"Andi, Dr. Samuels, my Foreign Minister, has a rule about no business at the dinner table. I find that it makes for a much more pleasant meal.\"\n\n\"My sister Dahlia has the same rule.\" Radim laughed, glancing at his ministers. \"And I agree, not talking business while eating aides the digestion.\"\n\n\"I think it's a waste of time.\" Larrin said. \"I can talk and eat at the same time.\"\n\n\"Yes, but you're a bronnow, Larrin. But we love you anyway.\" Waleen said, smiling at her.\n\nThe Travelers, Teyla and the Genii laughed, while the humans looked around in confusion.\n\n\"A bronnow is a herd animal, Samantha.\" Teyla explained. \"It is akin to your pigs\n\nI believe.\" \n\n\"I see.\" Sam smiled. \"But I can't have my guests insulting each other at the table...\"\n\n\"But why not, Samantha?\" Radim said quietly. \"You insult and threaten me and my people at every turn. Why should our friends act any differently?\"\n\nSam smiled, but before she could say anything, a voice from the doorway answered.\n\n\"Putting the fact that you threatened war on her city aside, she's trying to test your mettle, to see what you're made of. And you're failing miserably.\" Tammy said as Susan wheeled her into the room and over next to Radim's seat. \"Personally, I think it's because you're afraid you'll be held hostage, like Phrenum did with Dr. Weir several years ago, but I could be wrong.\"\n\n\"I'm Tammy Ford, Samantha's sister queen.\" She said as she held out her hand to him. \"I was one of Dahlia's nurses when she was here. I hope you'll tell her hello for me when you see her again.\"\n\nRadim stood and took her hand.\n\n\"I'll see her when I arrive home.\" He said, smiling down at her. \"She manages my house, and my life. I do not know what I would do without her.\"\n\n\"Well, have her get you some different clothes, or at least tailor that uniform. It doesn't do anything for you.\" Tammy laughed. \"Now scoot over a little bit, and cut me off a piece of that steak, it looks delicious.\"\n\nRadim laughed as he slid his chair over to make room for her. Tammy glanced over at Sam, then at Jennifer, shrugging her shoulders at her.\n\n\"I'll tell you a secret.\" She said softly, leaning close to Radim as he cut pieces off his steak and put them on his bread plate for her. \"I wasn't supposed to attend this dinner, I'm supposed to stay in bed for the next few days. But I couldn't help myself, I just had to come over.\"\n\n\"I was wondering why you were in a wheelchair.\" He said as he slid the plate closer to her, handing her a salad fork. \"Were you injured?\"\n\n\"I was shot the other day, just a flesh wound.\" She said casually, spearing a piece of steak and popping it into her mouth. \"Oh my god, that is perfect!\" She purred as she stabbed another piece and held it out to him. \"Here, you have to try it.\"\n\nRadim took the proffered morsel, nodding in agreement. \"You're right, it is delicious. This is much better than the dish I had with Dr. Weir. Much more tender.\"\n\n\"Now, I bet you're wondering why I'm being so nice to you, when Sam has been such a bitch.\" She said, smiling at him. \"I know your henchmen are.\"\n\n\"Not really, I was more interested in who would shoot such an attractive woman.\" Radim smiled. \"It seems such a shame.\"\n\n\"We had a man come through the gate from an alternate universe, and he started shooting up the gate room. I just got in the way.\" Tammy told him. \"I got hit while I was getting Sam out of the line of fire. Our security teams took care of the rest.\"\n\n\"Did you say he was from an alternate universe?\" Phrenum asked. \"How could you know that?\"\n\n\"He came through the shield on the gate, and he told us before he died. He was the second visitor from the same universe in two days.\" She answered. \"We know how it happened, and have taken steps to ensure that it won't happen again.\"\n\n\"Well, I'm glad you weren't hurt too badly.\" Radim said, taking another bite off his steak. \"But to answer your question with a question, why are you being nice to me, when Samantha has barely managed being polite?\"\n\n\"Because I'd much rather have you on our side, working with us, instead of killing you.\" She said, looking at him evenly. \"The Genii are the most organized military group in the galaxy, and has, by far, the best spy network. That's useful to us. We've found and isolated more than forty of your spies in the city, but I'm sure there are more.\"\n\nRadim looked over at Colak, who nodded, frowning.\n\nShe continued before he could say anything. \"You realized this morning when your men were beamed away from that research lab that your advantage in numbers means nothing against us. Add to that the fact that all of our installations are, and will be protected by shields so you can't get at us, and you see your people in a new light, one not quite as bright as you're used to.\"\n\nRadim nodded, staring at her silently.\n\n\"And you're wondering why she asked you here.\" Tammy said softly.\n\nRadim nodded again.\n\n\"You're here because you need to know that you have a place in our plans, but you need to understand what that place is.\" She said softly, so only he could hear her. \"It's up to you if you want to step into that role, one that your people were made for.\"\n\nRadim closed his eyes, sighing heavily. When he looked at her again, he nodded, his face pale.\n\nTammy looked around the table, smiling at Sam.\n\n\"Pharris, Arrin, Sam, Andi, would you join Ladon and me in the residence for a little while?\" She said as she rolled her chair back away from the table. She looked over at Radim. \"Would you mind, Ladon? Susan my nurse left, and I really shouldn't be trying to push this thing by myself.\"\n\nInterior-Living Room\n\n2100 Hours\n\nCisco got everyone drinks while Tammy got the visitors seated in the living room. When everyone was settled, Tammy looked over at Andi.\n\n\"Andi, show him the battle and Anchorage. Then we can tell him what we want.\" She said.\n\nSamuels looked at her for a moment, then glanced over at Sam. Sam nodded, trying not to smile.\n\nRadim took the tablet that Andi handed him and watched the video as she gave him a voice over.\n\n\"This first video is the warship Daedalus doing a survey of the Wraith Gathering at Sector 347C3. They spent several hours moving around that cluster of ships. They were cloaked, and went undetected, even managing to scan most of the hives and beam materials off of some of them.\"\n\nShe reached over and pressed an icon on the tablet, and the video changed.\n\n\"The next day, the Daedalus, joined by the Apollo, set nuclear warheads on thirty-nine of those hives. This was the result.\"\n\nRadim stared at the screen as the video played out, then looked up, an expression of disbelief on his face.\n\n\"What you were told is true, to a point.\" Tammy told him gently. \"The Wraith are at war, but we started it. They assumed, incorrectly, that when that gathering went up like a super nova, that it had to be due to infighting. You can see that it wasn't.\"\n\nShe looked over a Samuels.\n\n\"Show him Anchorage.\"\n\nSamuels reached over and pressed another icon on the tablet. Another video started, this one showing an aerial view of a central spire surrounded by forests.\n\n\"This is our second city, Anchorage. It is partially buried at the moment, and we're in the process of restoring it. We're expecting it to be space worthy within a year.\" She said as the screen changed to a slide show of still pictures. \"The shield and weapons systems are already active, but we're putting production on hold until we get the raw materials we'll need for that. Pharris has been put in charge of Anchorage, and is in the process of settling some of her people there to begin farming, logging and mining.\"\n\n\"We're looking at settling three hundred thousand people on the plains surrounding the city, and in the mountains to the south, we already have ten thousand people in the city itself, getting it ready for when we begin production.\" Pharris said. \"Depending on how quickly we can get the equipment we need, we should be able to begin production in the next six months.\"\n\n\"This is amazing.\" Radim said. He looked over at Samuels. \"Will you play the explosion again? I still can't believe what I saw.\"\n\n\"We had scouts in the area.\" Arrin told him. \"They witnessed the blast, and saw the Atlantian ships in the area. One of the Atlantian ships was damaged when the shock wave hit them. We opened relations with them the same day, not from fear, but because they welcomed us, and offered to make us partners in their plans.\"\n\n\"What plan is that?\" Radim asked, looking back and forth between Tammy and Sam.\n\n\"To improve the quality of life for the peoples of the Pegasus galaxy.\" Pharris said. \"And we've already taken great strides toward that goal. Samantha's people took the first step alone, by eliminating most of the Wraith. The fact that the survivors began fighting amongst themselves was just an added benefit.\"\n\n\"With the threat from the Wraith reduced, and hopefully soon eliminated, the peoples of the galaxy can stop living in fear of being culled.\" Arrin said. \"So the next step is to provide food, tools and technology to help make their lives better.\"\n\nRadim looked over at Tammy.\n\n\"What role do you see the Genii having in this effort?\" He asked.\n\n\"We need you to keep doing what you've been doing, gathering information.\" Tammy said, smiling at him. \"But instead of looking at who is doing what, we want you to look at who needs what, and help us figure out the best way to get it to them.\"\n\nRadim sat back, staring at her. \n\n\"And if I don't believe what you tell me, and decide not to join you?\" He asked quietly.\n\n\"Then we proceed without you.\" Sam said evenly. \"We won't take any hostile action except in response to hostilities from you. We'll just leave you alone. And I guarantee, you don't want that.\"\n\n\"You're saying that if we do not join you in this effort, the Genii will be left behind as the rest of the galaxy grows and moves forward.\" He said. \"You will let us wither, while those that join you flourish.\"\n\n\"Yes, that's exactly what we're saying.\" Tammy said as she watched him closely. \"You knew where you stood before you came here, but you came anyway. I think you expected something like this, just not on the scale you're being confronted with.\"\n\n\"This is true.\" Radim answered. He looked over at Sam with a sad smile on his face. \"I knew we could not stand against you, so I sought to frighten you with bravado. You called my bluff so quickly, with such confidence, that I knew there was no point continuing the charade.\"\n\n\"So what do you think?\" Sam asked him. \"Will your people join us, or are they so proud that they would prefer to be left behind as their neighbors prosper?\"\n\n\"We will join you.\" Radim said quietly as he stood up. \"It will be more difficult to persuade my staff than it will be to persuade the people. The news that the Wraith will soon be no more, or of little concern, and that they can come out of hiding, to live in the light, this alone will make them wish to join you.\"\n\n\"We had hoped you would see it that way.\" Tammy said. \"As we told the Travelers, we will not force you to join us...\"\n\n\"But you do use force.\" Radim said. \"By threatening to leave us behind, you threaten extinction. Your weapon is time. The longer we resist, the farther behind we fall.\"\n\n\"We did not see it that way.\" Arrin said. \"Even Larrin said that we should join them, because they were offering a banquet when they could have been dictating terms.\"\n\n\"I see no banquet laid out before me.\" Radim laughed, pacing slowly back and forth in front of the couch. \"Merely the status quo.\"\n\n\"Because we haven't gotten to what we have to offer, and what you stand to gain.\" Tammy said. \"I could give you a list, but you're in no mood to hear it. I think it would be best if you went home and talked to your people. We'll be returning the agents we know about here, question them about what they've learned. Talk to Arrin, and other leaders you have relations with. They'll all tell you what you stand to gain. You already know what you stand to lose.\"\n\nLooking over at Sam, Tammy grinned shyly. \"I'm sorry baby, but I have to get out of this fucking chair. Don't tell Jenn, okay?\"\n\nShe kicked the footrests up and put her feet on the floor, then looked up at Radim and held out her hand.\n\nHe looked at her for a moment, then stepped over and helped her up out of the chair.\n\n\"Thank you.\" She said softly, holding his hands so he couldn't step away. \"Now, what did you learn from that?\"\n\n\"I don't understand.\" He said, a look of confusion on his face.\n\n\"I could have stood up on my own.\" She told him as she squeezed his hands. \"But it's easier and safer when someone helps you. That's what we're asking you to do. Help us make this galaxy a better place to live, for everyone.\"\n\n\"What we shared with you, about our second city, and our attack on the Wraith, are two of our most closely guarded secrets.\" Sam said as she came over to stand next to Tammy. \"We gave you a weapon to use against us should you decide you need it. But I doubt if you'll use it, or even share it with your advisors. Because you already see the value in what we offer, even though your pride has taken a beating.\"\n\n\"How can you know I won't betray your trust?\" Radim asked, looking down at Tammy's hands still holding his.",
        "\"Because Elizabeth Weir, Carson Beckett, John Sheppard, and everyone else that wrote a report about their dealings with you said that you were an honorable man, and would do what was in the best interest of your people.\" Tammy said, smiling at him softly. \"And I saw you with Dahlia when we sent her home. That alone told me what kind of man you are.\"\n\n\"Tell me why.\" Radim said. \"Why do you go to so much effort for people you do not even know, will never even see? What do you stand to gain from this?\"\n\n\"To answer the first part of your question, we're doing this because someone should do it, and we're in a position where we can do it, or at least get it started. We may not live to see our plans completed.\" Tammy told him. \"You'll have to come back if you want an answer to the second part, because that answer is long, and complicated.\"\n\n\"We've been over here almost an hour, and really should be getting back.\" Andi said as she stood up. \"Phrenum and Colak are probably getting worried about what we've done to you by now.\"\n\n\"Phrenum hopes you'll kill me, so he can succeed me.\" Radim laughed. \"And Colak will lick the boots of whoever replaces me to keep his position of power. But you're right, we should get back. Dahlia will be worried that I have stayed this long.\"\n\nInterior-Bedroom\n\n2330 Hours\n\nThey'd gone back over to the dining room and apologized to the rest of their guests for being away so long, then sat and talked while they had dessert. When the talk died down, they went down to the gate room with their visitors and said their goodbyes.\n\n* * * * *\n\n\"You were wonderful tonight.\" Sam laughed as she snuggled close to Tammy, hugging her gently. \"You handled Radim perfectly. I wasn't sure about telling him about what we did with the Wraith, but I think it will work out for us.\"\n\n\"I really didn't have any choice, Sam.\" Tammy said. \"I was sitting here reading through the files and listening to you, and the longer I listened, the more convinced I was that you were going to end the meeting by killing him. You'll have to have Andi play the video for you.\"\n\n\"I wasn't that bad, was I?\"\n\n\"Yes, you were. Ladon was right, everything you said was either an insult or a threat, even the way you introduced people.\" Tammy said. \"The way you were going, if they had managed to get out alive, there was no way they were going to agree to anything. It was almost like you were trying to provoke them, to make them do something.\"\n\n\"You may be right, I did go in there with an attitude.\" Sam said rolling over on her back and throwing her arm over her eyes. \"That 'so called queen of Atlantis' crack he opened with just pissed me off.\"\n\n\"I'm more disappointed with our people, especially Andi and John, for letting you go on like that.\" Tammy said, laying her hand on Sam's stomach, rubbing it gently. \"Arrin and Pharris didn't help either, they just kept throwing gas on the fire. And don't even get me started on Larrin! Good god! What was she thinking? She...\"\n\n\"Andi wasn't in the room, she was in the kitchen, and I don't think John knew what to do.\" Sam said as she rolled over, propping herself up on her elbows. \"I think he signaled me a couple times, and I know Teyla was tugging on my pants leg when I was standing next to her.\"\n\n\"And you just ignored them.\" Tammy said. \"Oh, before I forget, you need to apologize to Teal'c in the morning. I'm glad he stayed over, if only for that.\"\n\n\"I guess you're right, I dragged him over here, then didn't spend any time with him.\" Sam said. \"But it worked out in the end, don't you think? Like I said, you handled Radim beautifully, almost like you were reading his mind.\"\n\n\"I think I was a couple of times.\" Tammy said, reaching down and pulling Sam up so she could hold her. \"Elizabeth and Carson both made detailed notes on him, and Elizabeth had video clips in hers, so I got to see his reactions to different stimulus. That helped alot.\"\n\nShe looked over at Sam as she spoke again.\n\n\"Is this how we're going to do things?\" She asked. \"You hit them with the big stick, and I sooth their bruised egos?\"\n\n\"God, I hope not.\" Sam said softly, rolling over and putting her arms around her. \n\n\"I didn't like it when Bra'tac said it, but the warrior queen thing just felt so right tonight.\" She smiled at Tammy, and kissed her gently. \"And you did say you would act as the conscience of our fair city in all things...\"\n\n(-)\n\nSo ends Chapter Three of Book Three, Changes. Read Chapter Four to see what happens next.\n\nPlease leave a comment on whether you like the story or not...getting feedback helps in the writing process..."
    ],
    "authorname": "RibaldWriter",
    "tags": [
        "romance",
        "intercourse",
        "lesbian",
        "intrigue",
        "sex",
        "fun sex",
        "oral sex",
        "relationship",
        "love",
        "family"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/confirming-carter-bk-03-changes-ch-03"
}