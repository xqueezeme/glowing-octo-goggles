{
    "title": "Miz Sarah Strikes Back",
    "pages": [
        "The cleaning people were always very thorough, but in the hot Georgia summer, dust has a way of returning the minute you stop cleaning. So when the front doorbell rang, I had on my apron and was using my turkey feather duster. \n\nI could see through the lace curtains the figure of a young man waiting on porch so I opened the door to let him in out of the summer heat.\n\n\"Can I help you?\" I asked.\n\n\"I'm looking for Sarah Cannon,\" he said.\n\n\"I'm Miz Sarah,\" I replied. \"What can I do for you?\"\n\n\"No,\" he said, \"I'm looking for Sarah Cannon, the attorney.\"\n\n\"That's me, honey,\" I replied, \"Come on in.\"\n\nI guess now's as good a time as any to introduce myself. I'm Sarah Cannon, an attorney practicing family law in Atlanta. In this day and age family law is, of course, mainly divorce work. A lot of attorneys don't like that kind of work, they think it's unsavory. But when a marital union dissolves, I've seen a lot of good people get hurt, and I don't mean just emotionally. I figure that if I can help protect some poor spouse legally and financially, I'm doing her -- and usually , though not always, it's a her, not a him -- a real benefit.\n\nI've been doing this for a long time. I won't tell you how long, because a lady is under no obligation to give her age. But I will tell you that I can remember seeing the Kennedy-Nixon debates on TV, if that helps.\n\nIf you've managed to stay in a profession like the law as long as I have, you're either pretty good or you're a millionaire with a hobby. I won't brag on myself, but I'm not a millionaire.\n\nMy office is actually the first floor of my home, which is near Piedmont Park, if you're familiar with Atlanta. My late husband and I bought the house many years ago, and I've been here ever since. I like having my office in my home; it makes the commute to work easy, which is very important in a city with traffic like Atlanta.\n\nAnyway, after I enlightened the rather flustered looking young man who had come to see me that morning, I led him through the French doors into my office and maneuvered him over to the settee on one wall. Once he was settled, I asked him \"And whom do I have the pleasure of meeting?\"\n\nHe smiled a bit at my greeting and replied just as formally, \"I am Mr. Stephen Markham.\"\n\nWalking over to the little ice box I'd had built into the armoire, I asked, \"Well, Mr. Markham, will you join me in a glass of sweet iced tea? It tastes mighty good on a hot day, especially with one of these sugar cookies I baked.\"\n\nWhile he took his glass of sweet tea and helped himself to a sugar cookie, I looked him over carefully. He appeared to be in his late twenties. I could tell he was left-handed from the way he held the plate with the tea and cookies in his right hand. His hands also revealed that however he made his living, it was not by manual labor.\n\nHe was nice-looking but not movie-star handsome, slightly above average height and appeared to keep himself in shape. I was glad to see he wasn't overweight; it troubles me to see so many young people carrying all that extra. He had a sensitive face, but today it looked deeply troubled.\n\n\"Now,\" I said, \"what brings you here today?\"\n\n\"It's my wife,\" he replied sadly, \"she wants a divorce.\"\n\n\"Excuse me just a minute, honey. I think I'd like someone to join us for this.\"\n\nI went out of my office and across the hall to another office that used to be a parlor. When I peeked in the door, Emily Mereweather looked up from her computer expectantly. \"Miss Emily,\" I said, \"I have a prospective client in my office. Would you please join us?\"\n\n\"Yessum,\" she said, like the good girl she was.\n\nAs she arose, I thought yet again what a lovely young lady she was, tall and willowy, with her brown hair tied back with a simple ribbon. Her sleeveless summer dress reinforced her femininity.\n\nI was pretty high on Emily. She came from a good family and had recently graduated from Agnes Scott College. I hire all my assistants from my alma mater because they're all well bred, well educated young women. And besides, it seems like a good way to repay the college for the fine education it had given me.\n\nEmily wasn't an attorney; that isn't what I wanted. A family law practictioner like me really doesn't need a legal assistant because family law just doesn't require a lot of legal research. But someone who is earnest and ambitious, and who has a quick mind and a good heart, can be of great help doing other kinds of research, especially with all the blogging, tweeting, social networking and who knows what all that passes for communication these days.\n\nI felt that having Emily sit in on the initial interview would be useful. Since she was close in age to our would-be client, she might have a different perspective from someone as old as I am. At the same time, hearing her assessment of our client would give me more insight into Emily. You can tell a lot about a person from how they see others.\n\nWhen we walked back into my office together, I noted approvingly that the young man stood as we entered. I always appreciate good manners; they're not common these days.\n\n\"Mr. Markham, I'd like you to meet my assistant, Miss Emily Mereweather. Miss Mereweather, this is Stephen Markham. He's seeking our assistance with respect to a possible divorce.\" \n\nEmily nodded demurely.\n\nAfter we were all seated, I prompted Mr. Markham to give us the particulars of his situation. The young man proceeded to give a rambling account of his marriage to his \"beautiful\" wife Lola, whom he married right after college, their only child, Anita, to whom he was devoted, and the sudden service of divorce papers, seemingly out of the blue. Moreover, shortly after the initial confrontation, Mr. Markham told us he had been handed a restraining order prohibiting him from contacting his wife and young daughter or coming within 200 yards of them until all legal issues were resolved.\n\nInitially, his tale sounded depressingly familiar; after all, most of my practice is dealing with unhappy marriages. But I frowned when I heard about the restraining order, for this suggested the possibility of violence, something I would not have expected from this well-behaved young man. Clearly, there was more here than met the eye, or at least, I admitted, my tired old eyes.\n\nAfter he had completed his discourse, I sat up a bit and shifted in my chair. \"Mr. Markham, I have to inform you that the majority of my clients are ladies rather than gentlemen. Likewise, in the majority of the cases I accept, it is my client who is the suer, and it's my job to ensure she gets her due. I'm not making any judgment about your situation, but, since it's outside my normal practice, I would like a little additional time to consider whether or not to accept your case.\n\n\"If you will return to my office tomorrow at this time, I'll let you know what I've decided.\" With that, I rose from my seat, indicating that our interview was over.\n\nHe rose likewise, but his facial expression made it clear that he was both surprised and disconcerted by my response. \"Um, well, I thought lawyers took whatever clients came their way,\" he protested. \n\n\"Some of them do, Mr. Markham,\" I replied primly, \"but I am not one of that type of lawyer.\"\n\n\"Okay,\" -- here he paused and then gave a small smile -- \"I heard you were the toughest . . . I mean the best . . . divorce attorney in town, so I guess I'll take my chances tomorrow.\"\n\n\"You're kind to share a favorable opinion with me, Mr. Markham. We'll see you tomorrow. And when you come,\" I added, \"be sure to bring a copy of the papers that were served upon you. If I accept your case, I'll need them.\"\n\nHe flushed, realizing he should have brought the papers with him today, then shook my hand and said, \"Well, good day, Miz Cannon, good day Miz Mereweather,\" and departed.\n\nAfter he was gone, I turned and raised my eyebrows to Miz Emily. \"Well, child, what is your first impression of our visitor?\"\n\nWithout hesitation, she replied, \"He doesn't seem like the type of man who would drive his wife to seek a divorce. He appears to be a gentle person and very well-mannered. I thought his concern for his daughter was genuine.\" She hesitated a second, and then blurted out, \"And he's nice-looking, too.\" With that, she blushed and looked down.\n\n\"I agree that he's an attractive fellow,\" I said soothingly. \"But when a wife suddenly seeks a divorce, there's usually a good reason. And when she feels she has to seek a restraining order, that's a bad sign.\" \n\n\"So before you let yourself be too taken by his nice looks and his good manners, I want you to get on the internet and do a little research. See if you can find any clues about what Mr. Markham is really like. I'll need it this afternoon so you and I can review it together and I can make a decide whether or not to represent him.\"\n\nChastened, Emily said \"Yes, Miz Sarah,\" and hurried to her computer.\n\nWhen she had gone, I tidied up the ice tea glasses and uneaten sugar cookies. As I cleaned, I thought to myself, \"Young Markham was right about one thing: most attorneys have little choice but to take whichever clients come their way. Even worse, some attorneys have to chase after clients, pecking around accidents and such like hungry birds. And worst of all in my book are those so-called attorneys who advertise for clients like some barker at a carnival shilling for the bearded lady. You're a lucky old gal, Sarah Cannon: you've been doing this long enough and well enough to get to pick and choose the people you represent. And if you're luckier still, you might even bring a little justice into this world every once in a while.\" \n\nI said an \"amen\" to that last thought and returned to my desk.\n\nOnly an hour later or two later, as I sat reviewing another case, there was a gentle rap on my office door and Emily stuck her head in. \"Can I come in, Miz Sarah? I've found some information on Mr. Markham.\"\n\nI waved her in and she sat down in front of my desk, straightening the skirt of her dress in a lady-like manner. She had a large stack of paper with her that she'd obviously printed off the internet. She began organizing her print-outs into neat stacks based on an outline she'd made for herself.\n\nI was glad to see how much energy she had brought to the task I had given her. \"My, my,\" I said, \"You must be very taken with Mr. Markham's looks. I can see how motivated you were.\"\n\nIgnoring my teasing, she picked up her outline and got right to business. \"Here's what I've found so far.\"\n\n\"He was born in Nashville, but his family moved to the Atlanta area when he was still in grammar school. He graduated from Emory University with a major in art. That was about six years ago, so that would make him only about five years older than me.\"\n\n\"He's an artist and his paintings have begun to generate some favorable interest locally. He hasn't had any big-ticket sales, but after the last art fair in Centennial Olympic Park, he got a nice mention from the critic who writes for the Journal-Constitution.\"\n\n\"He's married -- at least for the time being -- to Lola Markham, nee Martinez, formerly of Miami Beach. They apparently met in college and were married right after graduation. As he mentioned, they have one daughter, Anita, who's now three years old.\" She paused in her recitation, looked up and added, \"I've seen her picture -- she's adorable.\"\n\n\"He has no arrests, no complaints, no warrants,\" Emily went on, \"not even a traffic ticket. Until the restraining order was issued, the police had no record of him whatsoever.\"\n\n\"Very good,\" I said, \"now what can you tell me about Mrs. Markham.\"\n\nEmily pulled a different set of papers out of her stack and referred to a page that appeared to be a biography from a corporate website. \"She's a vice-president and senior account representative for the Atlanta branch of Hamilton Johnson, which is the largest publicly-held public relations firm in the country. She joined them as an intern while she was in college, began working there full time upon graduation, and has been there ever since. Currently she's directly responsible for a bunch of big name clients here in the metro area.\"\n\nEmily handed me the sheet so I could look at her picture, and I blinked in spite of myself. In my day we would have called Lola Markham a \"bombshell.\" Her wavy dark hair fell past her shoulders, framing a striking face. Even in her tailored corporate power suit, you could tell she had curves in all the right places.\n\n\"Very pretty,\" I remarked.\n\n\"If you like that type,\" Emily sniffed disapprovingly.\n\n\"Hmm, well what do you know about her life outside work?\"\n\nEmily proceeded to pull out another set of print-outs, these apparently from Lola's Facebook page. There was a lengthy list of memberships and activities, along with a selection of thumbnail photos showing Lola at various parties, events, charitable activities and the like. \"It's a little hard to say where work leaves off and her social life begins. She certainly does get around,\" Emily remarked. \n\nShe paused, then added, \"I think it's interesting that there aren't any pictures of Stephen on her page, or her daughter, for that matter.\"\n\n\"Let's not make any hasty judgments, dear,\" I said. \"That could just be because of the nature of her work, or because she likes to keep her personal life private.\"\n\n\"Well, maybe, but if I had a husband as nice and talented as he seems to be, I'd want to show him off.\" As she realized what she'd just said, Emily blushed again, and she hastened to add, \"and her daughter.\" \n\n\"It seems you've taken a bit of a shine to the fellow,\" I smiled. \"Just don't let that cloud your judgment.\" Emily avoided looking at me.\n\n\"Nevertheless,\" I went on, \"I have to agree with you that Mr. Markham seems a somewhat unlikely candidate for a philandering husband. And I think he's even less likely to be a physical threat to Mrs. Markham or their daughter. It all makes me think there's more to the story than what we've heard so far, so perhaps I will take his case after all.\"\n\n\"Oh, I'm so glad, Miz Cannon!\" Emily spoke up.\n\nThe next day found Stephen Markham again knocking on the door of the old home that served as my office. \"Do come in, honey, it's much too hot to be standing out there,\" I said, ushering him into the front hall.\n\nWhen we entered my office, Emily was already seated in the side chair with her hands demurely folded in her lap. She looked up from under her eyelids and said sweetly, \"It's nice to see you again, Mr. Markham.\"\n\n\"It's my pleasure, Miss Mereweather,\" he replied with a smile. I could tell she was pleased he had remembered her name.\n\n\"Let's get started,\" I said, sitting down on the other end of the settee from Mr. Markham. \"As I told you yesterday, it is usually the case that I represent the female side in a domestic dispute. However, Emily and I have found some things about your circumstances that have made us both a tad curious. Accordingly, I think I will make an exception in your case, and will represent you, Mr. Markham, if you'll still have me.\"\n\nStephen's face showed his relief, and he began to express his appreciation. I stopped him quickly: \"Don't thank me now, young man. I haven't done anything to merit your gratitude just yet. Hold all that until after I've accomplished something useful.\"\n\nHe nodded his understanding, but I could clearly see how relieved he was for me to represent him.\n\n\"Well, now that I've decided to represent you,\" I went on, \" I'd like your permission to call you Stephen.\" When he quickly nodded his assent, I continued, \"And you may call me Sara.\"\n\n\"Thank you, Miz Sara,\" he said politely.\n\n\"Now, Stephen, the first thing I'd like to do is to look at the papers that were served upon you, as well as the restraining order. I trust you've brought them with you?\"\n\nStephen quickly reached into the inside jacket pocket of the summer suit he was wearing and withdrew a thick sheaf of legal-size papers. He handed them to me.\n\nIt didn't take me long to see that the petition for divorce was standard boilerplate; it read like it had been copied out of a legal textbook. The restraining order was also unremarkable, so I turned next to the proposed division of property. \n\n\"Well, well,\" I remarked. \"It seems Miz Markham wants your house and all its contents, she wants primary custody of your daughter, and she wants you to pay child support. Sounds like she pretty much wants everything she can get her hands on.\"\n\nStephen's face had resumed the expression of sorrow and dismay it had worn the previous day. \"If she takes all that, it will just about wipe me out,\" he moaned. \"I won't have a place of my own to live or to paint, and I'll pretty much lose Anita altogether.\"\n\nHe bent his head in bewilderment. \"I just don't understand why she's turned so spiteful towards me. I've never been anything except loving to her.\"\n\nWith a pitying expression, Emily began to pat his arm. \n\n\"Now, now, Stephen, nothing's been decided yet. In chess, this would only be the opening move; the game is far from over,\" I encouraged him.\n\n\"But there is one thing that still concerns me, and that's this restraining order. What in the world did you do to cause your wife to seek the protection of the police?\" I asked.\n\nStephen flushed a bit, this time in anger rather than embarrassment.\n\n\"It was the damnedest thing -- oh, excuse me, Miz Sarah!\" I waved away the oath and beckoned him to continue.\n\n\"It was the darnedest thing: I was meeting with Roger Avery, my agent, about some paintings I was hoping to sell. As we sat there talking, some fellow I'd never seen before in my life came up to me and asked if my name was Stephen Markham. When I told him it was, he handed me some papers and said, 'You've been served.' When I opened them and saw that it was a divorce petition from Lola, I was just dumbfounded.\"\n\n\"Go on,\" I encouraged.\n\n\"Well of course I broke off my meeting with Roger and rushed home to find out what was going on,\" Stephen resumed. \"But when I got there, the door was locked and my key wouldn't work. I began pounding on the door and then I heard Lola inside. She wouldn't open the door so I had to yell at her to be heard. All she would tell me was I couldn't come in and to just go away and let the court settle everything.\"\n\nStephen looked at us helplessly. \"I was astounded: I couldn't go into my own house? Then I thought about Anita and when I asked Lola where she was, she told me I couldn't see her till all this was settled! I guess I must have flown off the handle then, because I started pounding on the door and threatening to kick it down. Suddenly, before I knew what was happening, a policeman had hold of my arm and was dragging me away from the house. He told me that if I didn't leave immediately he'd have no choice but to arrest me.\n\n\"I was terribly angry and upset, but I've been raised to respect the law, and I certainly didn't want to get arrested, so I finally left and went to my brother's house. The next day, I got this restraining order,\" he concluded.\n\n\"What did you do then?\" I prompted him. \n\n\"Well, I talked with my brother, and he told me I needed to get a lawyer quick. When I told him I didn't know any lawyers, he said that you were the best damned -- excuse me -- the best divorce lawyer in town and I'd better get over to see you right away to ask if you'd take my case.\"\n\n\"Well, I guess I need to make a peach cobbler to give to your brother for such a nice endorsement,\" I said with a smile.\n\nPutting the legal documents down, I turned to look at Stephen and Emily. \"Before we can do anything, I need a lot more information to work with. Emily, I need you to take Stephen back to your office and learn everything you can from him. Find out about his life history, his family, and his friends and associates. \n\n\"What are you looking for, Miz Sarah?\" Emily asked.",
        "\"I can't rightly tell you because I don't know yet. I'll know it when I see it,\" I explained. Emily didn't look convinced, but I knew she would try nevertheless. I could tell how much she wanted to help Mr. Markham.\n\n\"Then,\" I went on, \"when you've done that, Stephen, I want you to tell Emily everything you know about Lola, her business, her outside activities, her acquaintances -- everything. And don't worry if you forget any details or don't know something -- Emily is just a whiz at researching things on the internet, and if the two of you work together, I bet she'll find it.\"\n\n\"So get to work, you two, and please stick with it however long it takes, because the longer this goes on, the longer it will be before Stephen can get back together with Anita.\" \n\nI think they understood the urgency, because they looked at each other and nodded. \"Miz Sarah,\" Emily said, smiling shyly, \"we can do that.\" She took Stephen by the arm and led him to her office.\n\nAs the two young people walked through the French doors, already talking animatedly, my thoughts returned to when Stephen was served, first with the divorce papers and then with the restraining order. \"Well, I know one thing for sure: Lola Markham is an excellent event planner,\" I thought. \"She had her ambush of Steven planned down to the minute, and she had everybody lined up -- from the process server to the locksmith down to the policeman who just happened to be nearby when Stephen returned home. And she also must have had her attorney lined up to file for the restraining order.\"\n\n\"I'll remember not to underestimate her,\" I decided.\n\nAs I thought about that restraining order and how Lola must have planned it out ahead of time, it also occurred to me that Lola hadn't really been fearful for her safety when she requested it. \"Heck, Stephen is a gentleman; he'd never lift a finger against a woman under any circumstances. And Lola knows that better than any of us.\"\n\nWell, if she didn't need protection from Stephen, why did she seek an order of protection? Because, I decided, she must want Stephen to settle the divorce as quickly as possible. How better to make that happen than to take away his little girl? \"I think I see you now, Miz Lola,\" I thought. \"You're a devious little thing, aren't you?\"\n\nThere was another thing about the divorce petition that piqued my interest. Lola had chosen Bolger, Willingham and Howe, one of the largest law firms in Atlanta, to represent her. Fair enough, I thought, except that Bolger, Willingham specializes in corporate law. I'd be surprised if they even had a family law specialist on staff.\n\nSure enough, when I went to the legal directory and looked up the name of the attorney who had signed the petition, I found that Harold Jenkins, Esq., was an associate barely three years out of law school. His specialty was mergers and acquisitions. It looked to me like the firm had foisted her case off on some youngster hoping to impress the partners.\n\n\"Hmm,\" I thought, \"Lola would have had to call in a lot of favors to get Bolger, Willingham and Howe to take her case. Why would she do that? Maybe she was hoping that such a high-powered firm would scare Stephen into submission.\" \n\nI grinned. \"This is going to be fun.\"\n\nNow that I had his name and number, I picked up the phone and called Mr. Harold Jenkins to request a preliminary meeting to discuss the terms of the divorce. Jenkins informed me rather grandly that his calendar was quite full, but he thought he could squeeze me in the beginning of next week. \n\n\"Thank you for your courtesy, young man,\" I told him. \"I'll look forward to meeting you then.\"\n\nOver the next few days, Stephen and Emily worked hard on their assignment. Every time I passed by her office, the two of them would be huddled together, talking earnestly about something or other. Emily would type queries into her computer and Stephen would lean his head closer to see what she had found. Twice their research took them well past regular office hours, and they went out to grab a bite to eat together, only to come back to the office later for another round of work.\n\n\"Are you sure you're not writing Stephen's biography?\" I asked her one day, with a smile. \n\n\"Oh, no,\" she replied, blushing again. (She seemed to be doing that a lot recently.) \"But you said that every bit of information might be important, so I'm trying to get to know him as well as I can.\"\n\n\"I'm sure you're doing fine, honey,\" I soothed. \"Just keep up the good work.\"\n\nThe day of my meeting with Harold Jenkins, I drove over to their offices on Peachtree Street. The firm leased the top four floors of a 35-story tower, and the elevator ride seemed to take forever. When I finally reached the right floor, a pretty receptionist was waiting to fetch me. She led me to a conference room paneled in wood and metal that could easily have seated 20 people. I felt small in the huge space; I think that was the intent.\n\n\"Would you like a Coca-Cola, honey?\" she asked me politely. \n\n\"No thank you,\" I replied. \"I'll just wait for Mr. Jenkins.\"\n\nMy guess was that Jenkins would keep me waiting 15 minutes, but he walked into the room after 10. I guess he was nervous.\n\nHe was dressed in a typical attorney's grey pinstriped suit with a white shirt and an understated striped tie. Although he was young, his hair was already thinning, and I noted that his mid-section was starting to stretch the buttons of his shirt.\n\n\"Mrs. Cannon,\" he said effusively, \"I haven't had the pleasure to make your acquaintance, but I've certainly heard good things about you.\"\n\n\"How flattering,\" I responded. \"I'm likewise glad to meet you, Mr. Jenkins.\"\n\n\"Now,\" he said, seating himself at the head of the table, \"let's see if we can't work out the details of the division of property so these two people to move on with their lives.\"\n\n\"Do you mind if I knit?\" I asked, pulling my bag into my lap. He was clearly surprised at my request, so I explained, \"I find that knitting helps me to concentrate.\"\n\n\"Um, no, of course I don't mind. Please go right ahead.\" I thought I heard a note of amusement in his tone, but I ignored it and, pulling out my needles and a skein of yarn, began my knitting and purling. \n\nHe shifted impatiently in his seat and attempted to re-establish control of the meeting. \"Now about the division of property, Mrs. Cannon,\" he started, but I interrupted him again.\n\n\"Yes, about the proposed settlement. My client was quite taken aback by your client's proposal. It seems rather one-sided, somehow.\"\n\n\"Oh, no,\" he quickly responded, \"we don't think it's out of line in any way. Take the proposed custody agreement, for example. It's quite customary for the court to award the mother custody in the case of a child so young, especially when it's a little girl.\"\n\n\"Yes, of course,\" I agreed, \"but my client is distraught at the proposed limits on visitation. He misses his daughter badly, and would like to see her far more than a few weekends and a two-week vacation per year. And right now, with the restraining order you've placed on him, he can't see her at all.\"\n\n\"Of course I'm sure the separation is very painful for him,\" Jenkins said placatingly, \"and the quicker we can get everything resolved, the quicker we can get the restraining order lifted and the dear child back in her father's arms.\" \n\nHe gave me what I thought was a rather unctuous smile, and I thought to myself, \"That's going to cost you.\"\n\nOut loud, I agreed, \"Having her back is my client's highest priority.\"\n\n\"Excellent,\" the attorney enthused, as though the custody issue were now settled. \"Then let's turn to the property settlement.\"\n\nI didn't argue. \"Very well,\" I said, \"about the property settlement: is my client to lose not only his home but all its contents as well?\"\n\n\"Not at all, Mrs. Cannon. Of course he's welcome to the remainder of his clothes, his shaving equipment and other miscellaneous personal effects,\" Jenkins stated, smiling as though he were making a generous concession. \"We have no problem with that.\"\n\n\"But what about furniture and cooking utensils? Surely Lola doesn't expect Stephen to have to start over with nothing to his name?\" I protested.\n\nJenkins shook his head sadly but firmly. \"Mrs. Markham is a woman of taste and refinement. She has gone to great lengths and considerable time to decorate their home in a manner that reflects her sensibilities. And, considering the sizable disparity in their incomes, you'll have to concede that she provided the vast majority of the funds for that undertaking. \"\n\nWhen I said nothing, he went on, \"Under the circumstances, she is understandably loathe to have her efforts -- he paused here, obviously searching for just the right word -- vandalized in a scavenger hunt undertaken by a vindictive husband. No, she is adamant that she must be allowed to retain intact what she has worked so hard to assemble.\"\n\n\"Indeed,\" I said. \"Even so, she surely can't claim the paintings in his studio. I'm given to understand that she doesn't even have any of his works hanging in the house. Can't she allow him to have his own artwork?\"\n\n\"I must remind you, Mrs. Cannon, that it was my client who set up and funded Mr. Markham's little atelier.\" He paused when I looked curiously at him, then explained, \"You know, his artist's studio.\"\n\nI nodded impatiently. \"I am a graduate of Agnes Scott College, Mr. Jenkins. I know the meaning of 'atelier.'\" Under my breath I added, \"And unlike you, I know how to pronounce the word correctly.\"\n\nHe hurried on. \"Yes, of course. Frankly, Mrs, Cannon, after the unfortunate incident when Mr. Markham practically ran amok at their home and had to be restrained by an officer of the law, Mrs. Markham is quite unwilling to yield on the transfer of any property for which she paid, other than what we've already discussed, of course.\"\n\n\"That's interesting,\" I reflected. \"He was anticipating that possession of the paintings might be an issue and had a carefully worded response all prepared.\" \n\nJenkins now pressed on, sensing he had the advantage, \"Mrs. Cannon, I would ask you to impress upon your client that this whole unfortunate matter can be resolved and access to his daughter quickly restored if he will just sign the proposal we have put forth. Drawing out these negotiations will only result in greater delay, and I very much doubt they will change the outcome.\"\n\nI put my knitting back in my bag and stood up. \"Very well, Mr. Jenkins, I'll convey your position to my client directly. I believe we should all be able to get back together for a final disposition in the near future.\"\n\n\"Very good, Mrs. Cannon, the sooner the better. Now, if you'll excuse me, I have another meeting to attend.\" With that, Mr. Jenkins took his leave, a smile of triumph barely hidden on his lips.\n\nI showed myself out, stopping to thank the receptionist for her kindness.\n\nWhen I returned to my office, Stephen and Emily were dying to hear how the meeting went, so I invited them in to review what had happened. \n\nAfter I described my session with Mr. Jenkins, the two young people wore mournful features. \"It sounds to me like the whole meeting was fruitless,\" Emily bemoaned.\n\n\"On the contrary, honey, I'd say it was a very fruitful meeting,\" I corrected her. \"I learned three things today that I think may prove very valuable to us.\"\n\n\"You did, Miz Sarah?\" asked Stephen, with a puzzled expression. \"What were they?\"\n\n\"Well, the first thing I confirmed was my suspicion that your wife is using your daughter to pressure you into accepting a quick settlement on her terms. Mr. Jenkins all but rubbed my nose in the advantage Lola holds over you in that regard.\"\n\nStephen's face darkened visibly.\n\n\"The second thing I learned is that not only is your wife adamant about keeping everything in your house, she is especially determined to retain your paintings,\" I continued.\n\n\"But why would she care about them?\" Stephen burst out. \"They're not worth all that much in the first place, and besides, she hasn't shown any interest in my work in a long time.\"\n\n\"That's a very interesting question, Stephen,\" I replied. \"I'd like to know the answer to that myself.\"\n\nAs I paused, Emily piped up, \"You said you learned three things, Miz Sarah. What was the third?\"\n\n\"I learned that Mr. Richard Jenkins is neither a very skilled lawyer nor a gentleman,\" I said, crossing my arms and straightening my back. \"I'm going to have to ask the Lord's forgiveness for some of the things I thought about Mr. Jenkins today.\"\n\nWith that I smiled at the two of them and asked, \"Now that I've shared with you what I learned from Mr. Jenkins, I'd like you two to share what else you've found out about Mr. Markham and his wife.\"\n\nEmily ran back to fetch her ever-growing stack of notes and print-outs, and the two of them settled shoulder-to-shoulder on the settee in order to report on their findings. After a whispered discussion, Emily began the recitation with a synopsis of Stephen's family and early life. Next, he took over to recount how he met and subsequently married Lola Martinez. \n\nAs they made their presentation, I noted with amusement that they often finished each other's sentences in their eagerness to show what they had learned.\n\n\"Very good,\" I commended them. \"Now have you learned anything further about Mrs. Markham.\"\n\nTheir little duet seemed to shift into a minor key as they began describing Lola's life and career-to-date. Clearly, neither of them enjoyed this new topic for discussion. Yet their negative attitude couldn't disguise the fact that Lola Markham was a most impressive young woman. In college, she'd been active in service organizations, was president of her sorority, and had graduated in the top 10% of her class. Once she'd gone to work full time for Hamilton Johnson, she'd been promoted from entry-level assistant to vice-president and senior account representative in the time it would take the average new employee to learn her way to the ladies' room.\n\nWhen I remarked on the speed of her spectacular rise in the company, even Emily had to acknowledge that Lola was not just a pretty face. \"She must be awfully good at what she does to have gone so far so fast. And the number of major accounts she handles is pretty amazing,\" she conceded grudgingly.\n\n\"Do you know who they are, by chance?\" I asked.\n\n\"Oh yes,\" she replied, and, consulting her notes, she began to rattle off an impressive list of major Atlanta-based corporations, institutions and organizations.\n\n\"Excuse me, honey,\" I interrupted, \"but did you just say Avery International Art? Would that be the firm owned by Roger Avery, Stephen's agent?\"\n\n\"That's right,\" Stephen confirmed. \"Actually, it was Lola who introduced me to Roger in the first place. I was quite pleased to have the chance to work with such a well-known agent.\"\n\n\"And here's another connection, Miz Sarah,\" Emily chipped in, \"Lola also does public relations for Bolger, Willingham and Howe.\"\n\n\"What a small world we live in!\" I exclaimed, although to myself I thought it was distasteful for a law firm to hire a PR firm.\n\nAs the two of them continued, my mind drifted as I tried to make consider everything I had learned today. I had lots of possible scenarios, but nothing I could hang my hat on. If we were going to make any headway, I'd have to get outside assistance.\n\nIt seemed that the two young people in front of me were going to continue their presentation well into the night, so for the second time I stopped them. \"Please excuse me for interrupting, but I think the time has come for me to call on an old friend of mine. I'll need to do that before it gets too late, so why don't you two call it a night and we'll continue this first thing in the morning.\"\n\nAs they made their way out of my office, I began searching the drawers of my desk. \"Now where did I put my church directory?\"\n\nWhen Emily and Stephen entered into my office together the next morning, they were startled to find me in conversation with an older African-American gentleman they'd never seen before. I quickly arose to make the introductions.\n\n\"Mr. Rayford, I'd like you to meet my assistant, Miss Emily Mereweather.\" She nodded politely although somewhat uncertainly. \"And the gentleman standing next to her is Mr. Stephen Markham, the client I was telling you about.\"\n\n\"How do, how do,\" Mr. Rayford nodded congenially.\n\n\"Emily, Stephen, may I introduce Mr. Lucius Rayford. He's the man who cleans my offices.\" \n\nEmily and Stephen tried not to react, but their confusion was obvious.\n\n\"Lucius and his wife Mabel are dear friends of mine,\" I explained, \"we go to the same church together. He's agreed to help us.\"\n\nI took Mr. Rayford by the arm and said, \"Thank you so much, Lucius. It's such a comfort to know we can count on you.\"\n\n\"Aw, Miz Sarah, you know I'd do anything for you,\" he replied. \"I'll get back to you as soon as I can.\"\n\nTurning to Stephen and Emily, he bowed slightly and said, \"Nice to meet y'all,\" and headed for the door.\n\n\"Please give my best to Miz Rayford,\" I called after him. \"I surely will,\" he promised, and he was gone.\n\nSomewhat timidly, Emily turned to me and asked, \"How can Mr. Rayford help us, Miz Emily?\"\n\n\"I've been friends with Lucius for a long time,\" I smiled. \"You'd be surprised at what he can do.\n\n\"But for right now, we must be patient,\" I continued, \"we have entered the waiting stage of the game.\"\n\n\"What are we waiting for, Miz Sarah?\" Emily asked uncertainly.\n\n\"I don't rightly know,\" I replied with a smile. \"I guess I'll find out when I see it.\"\n\n\"In the meantime, I want you two to continue your research. See if there's anything you might have missed, or any other coincidences you can uncover.\"\n\n\"I'm glad to keep working with Emily,\" Stephen said with a glance in her direction, \"but I'm getting quite anxious about Anita. When do you think I'll get to see her again?\"\n\n\"All in the Lord's time,\" was all I could say.\n\nAs it turned out, the Lord's time came only three weeks later. That afternoon, Lucius Rayford came to see me, and when Stephen and Emily came into my office, I had just finished reviewing the contents of the large envelope he had brought me. \"Well, well,\" I said disapprovingly, \"I wouldn't have thought we'd see anything like this, especially so soon.\"\n\n\"Yes'um, Miz Sarah,\" Lucius agreed. \"Ain't it a thing, ain't it a thing?\"\n\nI leaned over the desk and gave Lucius a hug and a kiss on the cheek. \"Thank you for everything, dear. You've been so helpful. I'm going to have to have you and Mabel back over for dinner very soon.\"\n\n\"That'll be fine, Miz Sarah,\" he said. \"We'll be looking forward to it.\"\n\nAs he departed, I turned to Emily and Stephen and smiled. \"I think we're about ready for the end game.\"\n\nNo sooner had I spoken than the telephone on my desk rang. I recognized the number on the display, and, motioning to Emily and Stephen to remain, I answered the call.\n\n\"Yes, this is Miz Cannon.\"\n\n\"Certainly I'll be glad to hold for Mr. Jenkins.\" \n\nA minute passed, then two.\n\n\"Hello, Mr. Jenkins, how nice to hear your voice again.\"\n\n\"Yes, I have had the opportunity to discuss your client's proposal with Mr. Markham.\"\n\n\"Yes, I think we are at a point where we can reach a mutually acceptable agreement. Why don't we meet in your offices at the earliest mutually convenient date? And this time, Mr. Jenkins, I think all the parties should be present so that we can take this thing to a conclusion. It's dragged on much too long, I'm afraid, and my client has been missing his daughter something awful.\"\n\n\"Yes, tomorrow at 3:00 p.m. in your offices would be perfectly acceptable,\" I said, raising my eyebrows in question to Stephen and Emily to be sure they were available.\n\n\"Very well then, Mr. Jenkins, it will be a pleasure to see you then.\"\n\nTurning to Emily and Stephen, I said, \"As great Caesar said, 'The die is cast.' Now, before we have our meeting, I need to know if you've found any other information that might make a difference in our case.\"",
        "The two of them looked sheepishly at each other. The way they were fidgeting put me in mind of a couple of elementary school students who were eager to please but unable to answer the teacher's question. Finally, Emily said, \"Miz Sarah, we spent hours together going over everything again and again, but all we could find was one little coincidence that doesn't seem very important.\"\n\n\"Well, child,\" I asked, \"what is it?\"\n\nI think she wished now she hadn't mentioned it, but she finally said, \"Well, we did notice that Bolger, Willingham and Howe and Hamilton Johnson both have their offices in the same building. But I don't see how that matters.\"\n\nI smiled at Emily and said, \"That's alright, honey, you and Stephen have done great. Besides, Mr. Rayford brought that same coincidence to my attention.\"\n\nEmily was silent, but Stephen was unabashed. \"What difference could that make, Miz Sarah? That just made it easier for Lola to go see her attorney when she needed legal advice.\"\n\n\"You're absolutely right, Stephen, but you have to concede there sure are a lot of coincidences in this case.\"\n\n\"Now, if you'll excuse me, it's late and I have a lot of work to do between now and tomorrow afternoon. Why don't the two of you go grab a bite to eat? I'll see you tomorrow in time for us all to drive over to Peachtree Street together.\"\n\nI wasn't exaggerating when I told the young pair I had a lot of preparing to do. It took me late that night and all morning long to get everything just the way I wanted it. I was tired but happy with what I had done, and glad that we'd soon be able to put an end to this game we'd been playing.\n\nThe three of us drove over to the Bolger, Willingham and Howe offices in virtual silence. Between the oppressive heat outside the car and the nerves we all were feeling inside, idle conversation was kept to a minimum.\n\nOnce again we were ushered into the sterile, over-sized conference room I had shared with Mr. Jenkins previously. And once again we were made to wait, this time a full 20 minutes. \"He must be very confident today,\" I thought.\n\nFinally Mr. Jenkins made his grand entrance, mouthing insincere apologies for his lateness. \"So sorry to have kept you waiting,\" he proffered, \"I had an overseas call that ran late.\"\n\n\"No need to apologize, Mr. Jenkins,\" I replied with a little smile, \"we all know what an important man you are.\"\n\nJenkins's head came up just for a second; I think he was wondering if I was being sarcastic or just polite. \n\nAt that moment there was a quiet tap on the door, and Mr. Jenkins quickly opened it to enable the young woman standing there to make her entrance. \"Mrs. Cannon,\" Jenkins said, sounding like a tv show host, \"I don't believe you've had the pleasure of meeting Lola Martinez Markham.\"\n\nI sensed Stephen tense beside me at the sight of his once loving wife. \"It's not going to take him very long to get over her,\" I thought to myself.\n\nLeaning across the table, I shook her hand and said, \"How do you do, Mrs. Markham? I wish the circumstances of our meeting could have been different.\" I thought she was attractive in that glossy way so many young women affect today and that I don't think is all that becoming. \n\nShe acknowledged my greeting with a little smile and seated herself back from the table, crossing her legs so the hem of her short skirt would ride up to reveal a bit too much thigh. She wore a man-tailored blouse with enough buttons left open to display a generous amount of cleavage. \"She must have dressed like that deliberately to show Stephen what he's losing,\" I thought wryly. \"She must really want to hurt him.\"\n\nAfter I had introduced Stephen and Emily, Jenkins appeared to want to take control of the meeting as he had done the last time. But first he turned to me with a patronizing smile and said, \"I see you've brought your bag with you again, Mrs. Cannon. Will you be knitting again?\"\n\nI smiled back at him sweetly and said, \"No, I need my bag for other things today.\"\n\nWith these pleasantries concluded, Jenkins spread his arms in a grandiose manner and said, \"I'd like to begin our session by reviewing the proposal my client has made. I think . . .\"\n\n\"Excuse me,\" I interrupted him, \"but I would like to begin our negotiations by reviewing our counter-proposal.\"\n\nJenkins was taken aback, but he recovered quickly. \"Why of course, Mrs. Cannon, ladies first. We had no idea your client had an alternative to offer. We'd be most happy to hear what you have to propose.\"\n\nLola shot him an angry glance; I don't think she agreed.\n\nI ignored their little interplay and began. \"With respect to the home that Mr. and Mrs. Markham have shared, our proposal is that Mrs. Markham vacate the premises immediately, relinquishing all her rights of ownership therein to Mr. Markham.\"\n\n\"What!\" Lola Markham shrieked. She looked at Jenkins and hollered, \"She can't do that!\"\n\nJenkins quickly put his hand on hers to silence her and then turned to me indignantly. \"Mrs. Cannon, whatever could make you think Mrs. Markham would ever consent to such an outrageous proposal?\" \n\nI ignored him for the moment and turned directly to Lola. \"Mrs. Markham, you are a most impressive young woman. In a scant three years you have achieved a prominence in your field that most people would spend their entire careers hoping to attain. Clearly, you have the beauty, brains and talent to take you far.\"\n\nAlthough Lola was clearly still annoyed at the proposal I had just put on the table, I could see that she registered my compliments. \"Little miss narcissus,\" I thought.\n\n\"However, even with such remarkable qualities,\" I continued, \"it seems to me that it would have been difficult for anyone to have accomplished so much in so little time -- I paused -- without the use of other talents, such as these.\"\n\nWith that, I reached into the bag in my lap and extracted a photograph that I passed across the table to her, face down. When she turned it over and looked at it, she gasped. \"Where in the hell did you get that?\" she screamed at me.\n\nJenkins quickly grabbed the photo from her and gaped in astonishment as he realized what he was seeing. In black and white the photograph clearly showed Lola Markham lying on a desk with her skirt hiked up to her waist and her breasts bared. Between her legs was an older man who was very energetically enjoying Mrs. Markham's most intimate charms.\n\nStephen and Emily also gasped when I passed them duplicate photos of the lewd scene, and Emily began to speak urgently to Stephan in a low voice to keep him from making any outburst. But there was no one to restrain Jenkins, and without a thought for the consequences, he blurted out, \"Who in heavens is that?\"\n\n\"Why that,\" I said, \"is Mr. Warren Lewison, the managing director of the Atlanta office of Hamilton Johnson. I believe, Mrs. Markham, that he is your boss.\"\n\nAs Jenkins sat gawping at the print, I observed drily, \"It would appear that your client has not been completely forthcoming with regard to the reason she is seeking a divorce.\"\n\nLola began to talk angrily, but Jenkins, to his credit, regained his composure and shot her a steely glance that caused her to fall silent.\n\n\"While this photograph of what appears to be a little, er, office romance is unfortunate,\" Jenkins blustered, \"it has no bearing on the case before us. The State of Georgia has a no-fault statute, and does not take the cause of a divorce action into consideration. Any purported infidelity would be irrelevant in a court of law.\" \n\n\"Besides,\" he continued, gathering strength, \"there's no way to tell when this liaison took place. It could very well have occurred after Mrs. Markham determined to bring her marriage to an end. Any relationships developed after notice has been given would be ex post facto.\"\n\n\"All that is very true, Mr. Jenkins,\" I acknowledged. \"But if you and Mrs. Markham will look carefully at the setting of her little tryst, you'll see that it was conducted at the offices of Hamilton Johnson, in this very building. It's my belief that if the existence of this relationship and its consummation on these premises were to be made known to the directors and shareholders of Hamilton Johnson, they would not be very forgiving. In the first place, what they're doing is in clear violation of the corporation's Ethics Policy, which prohibits any such relationship between executive and subordinate. Secondly, they might draw some unfortunate conclusions about the real reason for Mrs. Markham's remarkable rise through the ranks.\"\n\nAs the significance of what I had said sank in to the unhappy pair across from us, I offered them a lifeline. \"I see no necessity, however, for such unpleasantries. There is no need for anyone else to see this photograph or consider its significance -- if we can all agree on our proposal regarding the Markham home.\"\n\nJenkins and Lola immediately began a whispered conversation. While the words exchanged between them were inaudible, the tone of the conversation was quite clear.\n\nI looked around to see how Stephen and Emily were doing. Emily, bless her heart, had been shocked by the photograph, but she had recovered and was now doing her best to calm Stephen down. As I saw her glare across the table, however, I doubted that she would \"friend\" Lola Markham on Facebook.\n\nStephen's face was a mix pain and anger. Unfortunately, I had seen that particular combination on the faces of clients many times before.\n\nTurning back to Jenkins and Lola, I interrupted their little tete-a-tete by loudly clearing my throat. \"We now turn to our second counterproposal. This one concerns custody of their daughter Anita. We propose that Stephen Markham, her father, shall have full custody of his daughter, with Lola Markham having limited right of visitation only at the father's discretion.\"\n\nLola and Jenkins were clearly astounded, and Jenkins could not restrain himself. \"Mrs. Cannon, this is impossible! No court would ever grant sole custody to the father unless the mother were behind bars in jail! This is preposterous!\"\n\n\"It's funny you should mention that, Mr. Jenkins,\" I responded calmly. \"Perhaps you'd be so kind as to review this letter.\" Again I reached into my bag and distributed copies of a document to all parties at the table.\n\nThe letter was written on the stationery of a major art dealer in New York City and was addressed to Mr. Roger Avery. The gist of the letter was a proposal from the New York dealer to purchase a number of works by Richard Markham for an extremely handsome sum. \n\nJenkins face reflected his bewilderment. \"I don't see what this has to do with our discussion this afternoon.\"\n\nBefore I could respond, Stephen could no longer contain himself. \"Wait a minute! This letter is dated over a month ago. Avery never told me about this! I never knew about any deal to sell my paintings!\"\n\n\"That's right, Stephen,\" I said, \"you didn't know about it, but I suspect that Mr. Avery may have shared this information with your wife.\" That good lady refused to meet my eyes, so I pressed on. \"I kept asking myself why she was so insistent on keeping Stephen's paintings when she'd never expressed any particular interest in them before. This letter suggests an answer.\"\n\nJenkins struggled to reassert himself. \"This is slanderous,\" he said loudly. \"You're making wild accusations. You have no proof that my client had any knowledge of this letter. You don't even know that there was any fraud. Jenkins could have misplaced the offer or forgotten about it, for all we know.\" \n\nA fresh idea struck Jenkins. \"Besides, Avery had nothing to gain from any sort of collusion. He'd have been paid his commission on the sale of the paintings, regardless of who owned them.\"\n\n\"Why I thought the very same thing, Mr. Jenkins, until I saw this.\" Reaching into my bag for the third time, I pulled out another set of photographs and passed them around the room.\n\nThere was a stunned silence as everyone stared at the sight of Lola Markham on her hands and knees, performing oral sex on a gentleman obviously in the throes of an orgasm. \n\n\"That's Roger Avery,\" whispered Stephen, confirming what everyone else either knew or had guessed.\n\nI had to wait until the hubbub that followed had died down before I could speak again. As before, I directed my remarks to Lola Markham. \"Conspiracy to commit fraud is a felony, my dear. If I were to present this letter and this photograph to the authorities, I believe they would have no hesitation in handing down an indictment.\"\n\n\"No!\" she screamed, \"you can't prove it. You can't do this to me.\"\n\nI smiled thinly at her. \"As it happens, I'm having dinner next week with the state Attorney General, who's an old friend of mine. Would you like me to bring these to his attention?\"\n\nJenkins turned to Lola and howled in frustration, \"Just shut up! You're only making it worse for yourself.\"\n\nAs her protests subsided, I moved to fill the silence. \"Once again, my client and I have no particular wish for his daughter to undergo the shame of having a convicted felon for a mother. If we can agree on the custody arrangement that we have proposed, with full child support from Lola, of course, I think we can spare everyone the pain an investigation, trial and likely conviction would entail.\"\n\nI looked directly at Jenkins and added, \"Wouldn't you agree that the court would be amenable to giving primary custody to the father if he had the written agreement of the mother?\"\n\nJenkins wouldn't look at me or his client now. In a defeated tone, he muttered, \"I'm sure that will be perfectly acceptable, Mrs. Cannon.\"\n\n\"Well, if we're in agreement on our two counterproposals, that leaves only one last item,\" I continued brightly.\n\n\"Oh my God, what now?\" Jenkins moaned.\n\nI frowned at his taking the Lord's name in vain, but decided to ignore the blasphemy and continue.\n\n\"The last item for discussion is the bill for the time my firm has spent on this matter. Given the circumstances that required my client to seek legal counsel in the first place, we feel it is only appropriate that Bolger, Willingham and Howe assume full responsibility for the bill.\"\n\nSaying this, I reached in my bag and extracted a copy of the statement of my legal fees. I slid it across the table to Jenkins. As he began to look it over, he blanched. \"The hourly rate you're asking is higher than what our senior partners charge,\" he protested. \n\nThen he stopped short as he realized what I had just said. \"Wait a minute,\" he backpedaled. \"You mean you're asking my client to pay your fee, right? You said Bolger, Willingham and Howe would pay, that was a mistake.\"\n\n\"I know what I said, young man, and that's exactly what I meant. I expect the law firm of Bolger, Willingham and Howe to pay this bill in full,\" I said determinedly.\n\n\"This is unbelievable,\" Jenkins protested. \"One law firm doesn't pay another attorney's fees. My boss would laugh me out of his office if I were to bring your bill to him!\"\n\n\"Not if you give him this along with it,\" I said, reaching into my bag for the last time. When he looked at the photograph I gave him, I thought he was going to have a heart attack. \"That's Robert Willingham, our managing partner,\" he said in astonishment. \n\n\"Indeed it is,\" I replied vindictively, \"and he seems to be enjoying the pleasure of Mrs. Markham's oral services every bit as much as Roger Avery did.\"\n\n\"As an active member of the Georgia State Bar Association's Ethics Committee, I know that engaging in sexual relations with a client is grounds for disbarment,\" I said sweetly. \"So I suggest you take my bill along with this photograph to Robert and ask that he pay it promptly.\" \n\nAs I closed my bag, I thought of one more thing: \"And when you see him, tell him Sarah Cannon said to keep it in his pants!\"\n\nWith that, the three of us rose to depart. Lola Markham was weeping on the table; she refused to look at Stephen as we passed behind her. He carefully avoided looking at her as well, I noticed, but there was a sneer on his lips as he passed her.\n\nRichard Jenkins sat slumped in his chair, staring at the wall. My guess was he was wondering if his law career was about to come to an abrupt end. \n\nAs we opened the door, I turned toward him again. \"One suggestion, Mr. Jenkins.\" He looked at me, a beaten man. \"The next time you invite a lady to an engagement, don't keep her waiting.\"\n\nI refused to permit any discussion of the afternoon's triumph until we had successfully navigated Atlanta's dysfunctional roadways and were safely back in my office. Then I allowed the celebration to begin. Stephen and Emily were dancing with one another in glee. I passed out glasses of sweet tea.\n\nEmily could scarcely contain herself. \"Oh, Stephen, did you see the look on Lola's face when Miz Sarah handed her those pictures? It serves the bitch right!\" \n\n\"Oh, I'm sorry, Ms. Sarah,\" she apologized, her face flushing yet again.\n\n\"Under the circumstances,\" I smiled at her, \"I think you can be forgiven. In fact, under the circumstances, I would have to agree with your assessment of the lady.\"\n\n\"But those pictures,\" Stephen protested, \"however did you obtain them?\"\n\n\"For those, my dear, we have Lucius Rayford to thank.\"\n\nBoth of them looked at me in puzzlement.\n\n\"You see,\" I explained, \"Lucius Rayford is the owner of one of the largest janitorial services in Atlanta. His firm has the contract to clean the building in which both Bolger, Willingham and Hamilton Johnson are located. I simply asked him to put a couple of wireless digital cameras in certain offices and let me know what they picked up.\"\n\n\"But Roger Avery's office isn't located on Peachtree Street,\" Stephen pointed out. \"How did you get that shot of Lola -- um -- doing it with him?\"\n\n\"Lucius may not own the only janitorial service in Atlanta, but he is friends with the owners of most of the others. It wasn't hard for him to ask a favor of the people who service Avery's building.\"\n\n\"How could you know that Lola was, er, consorting with all those people in the first place?\" Emily wondered.\n\n\"I didn't know that, of course, but my suspicions were raised when you pointed out how quickly she had risen at Hamilton Johnson. They have their pick of top graduates for their program; I even know one of them came from Agnes Scott. Yet out of so many talented people, Lola was the only one who had that sort of career progression. I had to wonder why.\"\n\n\"But how in the world did you know about Roger Avery?\" Stephen wondered. \n\n\"I would never have thought twice about him,\" I admitted, \"until Emily pointed out that he was Lola's client. That could have just been a coincidence, but I thought it was odd when you told me you were served with papers in his office. How would the process server know to be there at exactly the right time if Avery hadn't tipped Lola off? And finally, why would Lola be so dead set on keeping Stephen's paintings that, as far as we knew, had no great value?\n\n\"When I put all that together, I got Lucius to ask his friend to snoop around Avery's office to see if he could find any correspondence with Stephen's name on it. And, of course, I got him to plant the camera at the same time.\"\n\n\"And the old guy at Jenkins' law firm? What about him?\" Emily asked.\n\n\"Oh, Robert Willingham,\" I said, \"that was easy. Hiring Bolger, Willingham to represent someone in a divorce case is a little like using a sledge hammer to kill a mosquito. Not only is it overkill but it would be far too expensive. The cost to maintain that monstrosity of an office alone has driven Bolger, Wllingham's fees through the roof. How could Lola possibly afford a firm like that, even on her salary?\n\n\"Besides, regardless of the fact that Lola was their PR representative, a major corporate law firm just wouldn't take on a divorce case under normal circumstances. So I just went looking for the unusual circumstances. Guess I found them,\" I grinned.",
        "\"Even so,\" Emily insisted. \"Lola put her scheme in motion long before Stephen ever came to your office. That means she would have, er, sealed the deal before Lucius could put his cameras to work. How did you know she would, um, give a repeat performance with all three men?\"\n\n\"Oh, that,\" I said, \"I counted on human nature to give us a little hand.\"\n\n\"I don't understand,\" she asked.\n\n\"It's simple. A schemer is seldom content to leave her plans alone. She always has to do one more thing to ensure success. The 'one more thing' she did was Warren, Roger and Robert!\"\n\n\"And as for the men,\" I said, with a twinkle in my eye, \"well, let's just say that once they get a taste of honey, they always want another.\"\n\nSarah blushed.\n\nIn the silence that followed, I glanced at Stephen. Once again, I saw a mix of emotions on his face. He was still thrilled at the victory we had won, but I thought I detected a trace of sadness in his eyes.\n\nI took a guess at what might be the cause. \"Don't be sad about Lola, Stephen. I'm sure she loved you when you two first married. But a girl like that loves herself more than any man. When she figured out how to manipulate others to help her get her way, I doubt she thought twice about trading you in for a richer model.\"\n\n\"I guess you're right, Miz Sarah,\" he replied ruefully. \"When I married Lola, she seemed like the perfect woman. Now that I've seen what she's really like, I'm just glad to be rid of her. But it still hurts.\"\n\n\"Of course it does, honey,\" I said. \"But you're definitely better off with her out of your life. Now you just need to find a good woman who will love you for who you are.\"\n\nBefore he could respond, I asked him, \"But right now, aren't you forgetting something?\"\n\n\"What do you mean?\"\n\n\"Don't you have a little girl waiting at home? I bet she's just dying to see her Daddy,\" I smiled.\n\nHis face brightened instantly. \"Oh my gosh, you're right! Everything happened so fast that I almost forgot.\" He started to leave, then stopped, turned back to Emily and asked hopefully, \"Would you like to come with me and meet Anita?\"\n\nEmily looked at him earnestly. \"Oh yes, I'd like that very much.\"\n\nTogether the two turned and headed out the door. As they headed for the car, I thought I saw them holding hands.\n\nI returned to my desk and made a note on my calendar for first thing in the morning: call the Dean of Students at Agnes Scott. \"Better get started now,\" I thought, \"I have a hunch I'm going to have to hire a new assistant pretty soon.\" "
    ],
    "authorname": "FrancisMacomber",
    "tags": [
        "cheating",
        "loving wife",
        "romance"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/miz-sarah-strikes-back"
}