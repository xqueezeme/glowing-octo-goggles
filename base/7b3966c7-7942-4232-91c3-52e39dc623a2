{
    "title": "Dwelling in Desire Ch. 12",
    "pages": [
        "Hey Beautiful, \n\nDon't go anywhere. I just ran to the store to get a few things. \n\n--Curt \n\nI smiled as I read the thoughtful note he'd left on his pillow. \n\nBeautiful. He kept calling me beautiful. \n\nI'd always been called this. All my life. Frequently enough that it had grown tiresome, and I wondered if anyone gave a damn about my other qualities. \n\nBut I wanted to hear it from Curt. I wanted to be everything he wanted. \n\nLooking at the alarm clock on his bedside table, I saw that it was almost eight a.m. \n\nOrdinarily, I wouldn't feel so chipper at such an early hour, but it occurred to me that we had gotten to sleep rather early. And on empty stomachs at that. But there was no question as to why food had been the last thing on my mind. \n\nWe had slept together. \n\nCurt, that man-God-being, had taken my virginity. Or rather, I had given it. And while things had not aligned exactly with my vision, it had been nothing less than amazing. \n\nYes, it had hurt, as I'd expected it would, but the sharp pain had passed eventually, to be replaced with a dull ache. A dull, beautiful ache that paired exquisitely with the intensity of Curt's eyes as he thrust urgently into me. \n\nI couldn't fight off a sultry grin as I recalled Curt rolling on me during the night and taking me a second time. I had been sore, but eager to give him whatever he desired. And if he desired to come inside me... \n\nBut I had been the one to insist upon that little detail hadn't I? I'd begged him that first time. Begged him to release inside of me. And he'd grudgingly relented. After which he'd been distant. Curt had seemed conflicted, possibly even regretful. \n\nI felt my expression turn bleak as I recalled his look of barely veiled anguish. \n\nHe'd said afterward that he wanted it. And would want it again. \n\nOr had I dreamt it? Was I dreaming now? Was my fantasy being dangled before me, only to be ripped away? \n\nBut as I fisted my hands in the brand new Egyptian cotton sheets, I knew it was not a dream. \n\nI flinched in surprise as I heard the garage door activate. He was home! \n\nMoving from the bed, I realized I was totally naked and my clothes were again in need of a wash. Looking around frantically, I dashed naked through the bathroom to his closet as I heard the kitchen door downstairs. \n\nFinding a navy blue robe on the hook by his closet door, I thought of how sexy it would look...how crazy it might make him. Me wearing his robe. \n\nWith a mischievous smirk, I quickly wrapped myself in it, becoming pleasantly dizzy from the masculine scent that enveloped me. Scurrying back through the bathroom, I checked myself quickly in the mirror. \n\nYup. Sexy. \n\nAfter licking my lips and fluffing my already volumized hair a bit for good measure, I flounced cheekily from the master suite and down the stairs to greet him. \n\nThe tone-deaf whistling bouncing obnoxiously off the cathedral ceilings had me wearing a goofy grin as I reached the bottom of the stairs. I quickly masked it, donning a coy expression upon entering the kitchen. \n\nCurt had turned on the fan above the range as he warmed the pan, so he didn't hear my approach. His hair was mussed and his morning scruff was tantalizingly dark. \n\n\"Beth, you're up!\" Curt did a double-take as I breached his peripheral. \n\nI smiled sheepishly as I took him in. The bland combo of white t-shirt and black track pants had never looked so good. \n\n\"As are you.\" \n\n\"Yeah well, I didn't want to wake you until I had breakfast ready. And I didn't want to bore you with plain ass scrambled eggs again, so I ran out and got some bacon and cinnamon rolls.\" \n\n\"Impressive, Mr. Donovan,\" I purred, leaning against the island provocatively. I wondered what had gotten into me, as I observed him swallowing in what looked suspiciously like nervousness. \n\n\"Yeah, by the way uh, you look...\" he trailed off. \n\nI grinned at his obvious lack of concentration from my ensemble. \n\n\"Just amazing,\" he shook his head in defeat at not having found better words. \n\nBut his words worked just fine for me. \n\n\"Thanks. Sorry I stole your robe.\" \n\n\"Keep it, I insist,\" he laughed. \"It looks far better on you anyway.\" \n\nI doubted that very much, having seen how lethal he looked in a towel. But if there was one man I wanted compliments from, even false ones, it was Curt. \n\n\"I thought you said you only knew how to make eggs,\" I teased as he turned to lay the bacon in the pan. \n\n\"Eggs-n-bacon falls under the category of eggs,\" Curt declared matter-of-factly. \n\n\"Mmm, lucky me,\" I grinned. \"I love bacon.\" \n\n\"Well I hope you like it extra crispy, 'cause that's how I make it.\" \n\n\"My dad makes it that way too,\" I laughed. \"Ever since I was a little girl.\" \n\nSilence. \n\nCurt's back was turned to me as he focused on the stove, but I sensed something was wrong. \n\n\"Is that right?\" Curt mused after a long pause. \n\n\"Yeah, so...can I help at all?\" I offered. \n\n\"Uh, well...it looks like the oven has preheated so maybe you can handle the cinnamon rolls?\" Curt suggested hopefully. \n\n\"Absolutely!\" I smiled. \"Where are your cake pans?\" \n\nThe blank look on Curt's face had me debating over whether to laugh or just start looking through cupboards. \n\n\"Where do you keep your pans?\" I simplified. \n\n\"Below there,\" he indicated to his left. \n\nI nodded and began sifting through the cabinets, before pulling the closest thing to a cake pan I could find. \n\n\"This'll do,\" I muttered. \"The rolls are in the fridge, yes?\" \n\nCurt nodded before returning his attention to the bacon. My mouth watered in anticipation as it sizzled and popped in the pan. \n\nOnce the rolls were in the oven, I hopped onto a barstool and observed him once again. \n\n\"So, this is...different,\" I broke the ice. \n\n\"Yes,\" Curt affirmed, \"But in a good way, obviously.\" \n\nHis expression turned serious, and for a moment he abandoned his focus on the bacon. My heart skipped a beat as he pinned me with his gaze. \n\n\"Do you regret last night Bethany? Don't lie.\" \n\nThose amber eyes were so intense. Filled with such fiery lust and dark secrets. Secrets I yearned to uncover. \n\n\"No,\" I answered honestly. \n\nHis mouth quirked a bit, but he said nothing as he returned to the stove. \n\nWe were silent for the next nine minutes as we waited on the cinnamon rolls. Curt set the bacon aside to cool, and expertly broke the eggs, one after the next. It was laughable how business-like he was about it. \n\nPulling the rolls from the oven, I began glazing them while Curt finished the eggs. \n\n\"Now all we need is some fresh squeezed orange juice,\" I mused, more joking than anything else. \n\n\"Fuck!\" Curt cursed harshly, startling me. \"I forgot to get juice!\" \n\n\"It's okay Curt,\" I assured him as I giggled in amusement. \"All that you've done here is amazing. I was kidding about the juice.\" \n\n\"No, I should have gotten some,\" he shook his head. \"You obviously don't care for coffee.\" \n\nIt warmed my heart to know that he'd been paying attention. Feeling the need to comfort him, I abandoned my task and approached him. \n\n\"Look at me Curt,\" I said firmly, my hand moving to his thickly stubbled cheek, turning the tables on him for once. \"You. Are. Amazing. Fuck the juice.\" \n\nHe grinned, and my bare toes curled on the cool marble tile. \n\n\"That's a dirty mouth you've got on you, little girl.\" \n\nI bit my lip at the way he growled \"little girl\". My body tingled all over. I found myself flustered and shy, but wanting more. \n\n\"I don't normally swear.\" \n\n\"I know,\" he chuckled. \"And if the eggs weren't ready, I'd bend you over that island and spank you for it. But alas, little girl, they are ready.\" \n\nMy eyes nearly popped out of my head at his amused but confidently issued threat. \n\nWas he seriously talking about spanking me? And why did such a ludicrous suggestion fill me with butterflies? \n\n\"On the other hand, they're just eggs,\" he said with a sinister laugh. \"If you want, I can make us a fresh batch after we get done.\" \n\n\"Get done?\" I stammered. \n\nHis cocky grin firmly in place, Curt leant in and whispered into my ear, \"Fetch us some plates, little girl.\" \n\nSweet heavens. \n\n--- \n\nThe look on her face was unmistakable. And unbearable. She wanted it. And here I had to go and make breakfast, instead of focusing on more important things like the warmth and wetness of her young tight pussy. \n\nBut the rumbling in my belly reminded me again that I had deprived us of dinner last night, and if we were to...engage in further activities, sustenance was required. \n\nBut damn it I wanted her. Now. \n\nEven more so when I recalled that look of guilty desire in her eyes as I uttered the words \"little girl\" before I could think better of it. \n\nShe was begging to be bent over that counter. Not literally of course. My Bethany was far too virtuous for that. No, it was the cute pink polish on her toes peeking out from beneath my robe, the fluffy well-fucked look of her hair, the blush of her cheeks, and the sass hurled at me like curve balls driving me insane. \n\nIt was all of her. All of her made me want to just...possess her. Take her. Punish her. Again and again. \n\nI knew right then and there what I wanted. I wanted it all. \n\nBut I reminded myself that Bethany had no real reason to commit. She was young, still able to do so much with her life. Not to mention incredibly desirable to any number of eligible men, many much younger than I, to be certain. \n\nWhy then did she pick me? She'd waited years longer than most women, and for what? Some fucked up sadistic old man? \n\nDrawing in a deep breath, I wondered how I'd repressed those sadistic tendencies with Bethany. And despite my desperation to be with her, I hadn't forced her. Hell, I'd never forced a woman in my life\u2014but Bethany had been the first to test my self-control. Really test it. \n\nI'd had her consent. I'd required it before touching her. Before my common sense had gone to shit. I cursed myself as my cock hardened in recollection. \n\nBeing with Beth had been heaven. And coming inside her...it was more than I deserved. Why had she allowed, begged even, for me to come inside her unprotected? \n\nBeth was a smart girl. She knew what it meant. She had to. \n\nI definitely needed to address this with her, but how to go about it? The last thing I wanted was for her to run away from me, to abandon the budding relationship that had been so painstakingly cultivated. I couldn't lose her. \n\nShe wouldn't meet my eyes as I served up the eggs and bacon on the plates she'd fetched. Was it shyness? Or sadness? Or regret? \n\nAs we settled finally at the table, the silence stretched. \n\nI was trying to figure out a way to confront her when she spoke first. \n\n\"Mmmm, yum. Your eggs are amazing Curt, again!\" she laughed, licking her lips clean of the yellow egg yolk. I licked my own lips at the sexy image she made. \n\n\"So why, pray tell, are eggs the only thing you know how to make?\" \n\nI frowned as I considered her words. I hadn't thought on it in years. Even now, I hesitated to conjure the memory. \n\n\"Curt?\" \n\n\"Sorry Beth, I just...\" I trailed off. \n\nShe shook her head, clearly disturbed by my lack of reply. \n\n\"Did I say something wrong?\" \n\n\"Not at all. The eggs, I guess, I mean, it started when I was young.\" I tripped over my words, unsure how to begin. Or how to finish. \n\n\"Did your mom teach you?\" \n\nI smiled, more bitterly than intended. \n\n\"No. It was my older brother, Jake. He taught me, the morning of my first hangover, how to make sunny side up eggs. Said it worked like a charm, and most mornings, it did.\" \n\n\"Most mornings?\" \n\nI winced at my slip-up, and grudgingly continued. I'd never told this story to anyone. The memories had been buried deep, but the breakfast ritual had been thoroughly ingrained. \n\n\"I uhh...\" I cleared my throat in procrastination. \"I struggled with alcoholism for many years, starting when I was about nineteen. My dad left when I was four, and my ma worked two jobs to support us, so most of the time it was just me and Jake.\" \n\nAs I felt her cool hand gently cover mine, I realized both my hands were tightly fisted, breakfast all but forgotten. \n\n\"I'm sorry I pried,\" she whispered. \"I didn't realize it would be such a sensitive topic.\" \n\n\"No,\" I chuckled remorsefully, \"I don't imagine you would. It's a rather unconventional story. One I've not discussed with anyone in fact, for nearly twenty years.\" \n\n\"We don't have to talk about it,\" she offered. \n\n\"Well it certainly isn't my topic of choice after sleeping with a woman,\" I laughed. \n\nWhen I felt her hand suddenly withdraw from mine, I realized what a dumbfuck thing it was to say. Shit. \n\n\"There've been women before me,\" Bethany murmured absently, her eyes now studying the table. \n\n\"Bethany,\" I cleared my throat, \"I won't lie to you. There have. I've got decades on you after all.\" \n\nBeth nodded, but didn't look at me. \n\nI'd been her first. My former relationships were understandably a sore issue for her, to know that I'd been around the block. What could I say? \n\nBut it was what she said next that baffled me. \n\n\"I wish I could have given you more.\" \n\nFury brewed in my gut. This insecurity of hers needed to end, immediately. \n\n\"Listen to me,\" I ordered. \"You are perfect Beth. Be sorry for nothing. Do you understand me?\" \n\nShe nodded again, but still stared at the table. \n\n\"Eat,\" I commanded. \"Now.\" \n\nWe ate, trading awkward conversation for the shitty symphony of chewing noises and screeching forks. \n\nI felt unpleasantly full when I finally shoved my empty plate away, wincing as I watched Beth struggle to finish hers. \n\n\"It's alright Beth, you don't have to finish,\" I offered. \n\n\"Uff, good! I can't eat another damned bite,\" she groaned, nudging her plate toward my own discarded one. \n\n\"There you go with that dirty mouth again,\" I chuckled, delighting in the worried look she cast me. \"Don't worry Beth, I'm teasing you.\" \n\n\"You like to tease don't you?\" she frowned. \n\n\"Not always. But you do tend to blush when I tease you. I can't help that it's so delightfully addicting.\" \n\nI laughed again when her blush deepened. \n\n\"Yes, like that.\" \n\n\"Whatever Curt,\" she rolled her eyes. \"So what do we do now?\" \n\nSighing, I rose from the table. \n\n\"Something less pleasant, I'm afraid. Come,\" I held out my hand to Beth, leading her to the sofa. \n\nSituating us both upon the supple leather cushions, I turned her to me, and looked into her eyes. \n\n\"Beth, I think we have a problem.\" \n\nHer sudden look of terror made my stomach turn. \n\n\"Are you...dumping me?\" she squeaked. \n\n\"What? Beth no!\" I gathered her hands in mine. \"Jesus, how could you think that?\" \n\n\"You're sitting me down on the sofa, preparing to give me unpleasant news after a night of passion. What am I to think?\" \n\n\"No Beth,\" I declared firmly. \"I meant what I said last night. This is not a fling for me. I like you. A lot. In all honesty, you were never just a decorator to me. I knew that I...\" \n\nI debated over whether to say it. \n\nNo. Too soon. \n\n\"I knew that there was more to us than a business transaction. Early on, I knew. I hope I'm not alone in that.\" \n\n\"I suspected that you liked me,\" she admitted shyly. \"But men tend to like what they see when they look at me. It was nothing new to see...attraction, in your eyes. I've seen it in many.\" \n\n\"And yet I'm your first.\" \n\nShe nodded, embarrassed. \n\nWhy'd you have to fucking point that out? Dumb fuck. \n\nJust say it! \n\n\"Beth, I'll come right to the point. The problem, or potential problem rather, is that we both gave in to temptation last night, giving little thought to the repercussions.\" \n\nHer eyes drifted down to her lap. She knew exactly what I meant. \n\nI swallowed anxiously, continuing my unrehearsed monologue. \n\n\"Trust me Beth, there is nothing in the world I would rather do than make love to you unobstructed, to have you as completely as a man can have a woman. But you're young. Independent and active in your career. You don't want to get pregnant right now...isn't that true?\" \n\nShe didn't answer right away, and a part of me lurched in desperate lust. \n\n\"Yes,\" she whispered. \"I mean, it wouldn't be the best thing. We're not...\" \n\nI waited, giving her a chance to gather her thoughts. \n\nBethany made a face, clearly conflicted on whether to speak. \n\n\"We're not married.\" \n\nI couldn't help but smile at her naivety. \n\n\"We don't have to be married to have a child together Beth. But you obviously love your career. I don't want to be the one that takes it away from you, and a baby would jeopardize the time you could commit to it.\" \n\nShe nodded, but continued to fidget and avoid eye contact. \n\n\"I think, at least for a while, we should err on the side of caution. I'll use a condom when I'm inside you, and if you want to use an alternate form of birth control, I am open to that.\" \n\nAs I waited for her look of relief, I was perplexed by a strange expression of what couldn't have been anything other than disappointment. She tried to mask it, but it was clear. \n\nI wanted to say something\u2014like the truth. Like the fact that I wanted to make her pregnant. That I wanted to caress her firmly rounded belly with my hands, to kiss it passionately in worship for its fertility. That I wanted to see her holding my son close to her chest, rocking him gently to sleep as her belly swelled with another. \n\nI wanted a family. For the first time. And I had to want it with a fucking career woman, twenty years my junior. \n\nIf Beth thought she wanted a child now, it could only be due to her newly sex fogged brain. It would pass. And when it did, I didn't want her to hate me. \n\n\"Beth, I... I don't want you to think that I don't want you, that I'm avoiding commitment or some shit,\" I tried to explain. \n\nLifting her chin, I looked into her eyes seriously. \n\n\"But we shouldn't rush into that. Let's just enjoy each other, get to know each other, and we'll take it one step at a time, okay?\" \n\nA small smile bloomed on her adorable face, and I thanked God that I hadn't fucked things up. Yet. \n\n\"Okay,\" she whispered. \n\n\"Good girl,\" I smiled. \n\n--- \n\nBeing this close to him, seeing the unguarded look of desire in his eyes, hearing and feeling the timbre of his sexy voice...I knew there was little hope for me. If this didn't work out, and there were few reasons why it should, I would be nothing less than devastated. And that was just the emotional side of the coin. \n\nAs for the sexual side, well, I was in a vulnerable state to say the least. Curt needed only ask. He needed only look at me with that expression of hunger, and I was done. I would do anything for him, and I didn't even know what anything was. \n\nGoodness, I was already shamefully moist between my legs, and without any panties, it wouldn't be long before my legs grew slick. Which reminded me... \n\n\"Umm Curt, I think I'll be needing your washer and dryer again.\" \n\n\"I certainly hope so,\" he grinned. \"I hope you'll need them regularly.\" \n\nWe both laughed at his goofy romantic gesture, but I felt a glimmer of hope at the implications. Needing his laundry room regularly would mean me being here regularly. Being with him. For a while, if not the long term. \n\n\"Well at some point I'm going to need some extra clothes,\" I stated seriously. \n\nI needed to make a stop at my house to gather some things, and explain my uncharacteristic absence to Mrs. Hathaway. \n\n\"We can swing by your place in a bit,\" Curt nodded. \"But first, let's take care of that laundry...and a shower.\" \n\n\"A shower?\" I repeated stupidly. \n\n\"Yes,\" Curt smirked. \"I wanna show you my shower.\" ",
        "With that, he collected me from the sofa and steered me up the stairs. I laughed as he unceremoniously grabbed our discarded clothes from last night and led me down the hallway to dump them in the washer, careless of the hazardous combination of lights and darks. \n\nThey were my junky clothes, so I wasn't concerned for my own sake, but his clothes were much finer. It made me wonder if he washed all his clothes with such negligence, or if it was just a special occasion. Either way, I felt special as he dragged me back through his bedroom and into the master bath. \n\n\"Check this out,\" Curt smirked proudly as he turned the lever, activating the showerhead. \n\n\"Running water. Very nice,\" I returned with a smirk. \n\nCurt grinned even wider as he turned a second nozzle, and immediately the glass enclosure clouded up with the steam from several additional jets. \n\nIt was hard to conceal my look of awe. I'd heard of these high-end showers with several showerheads, dreamt of one day designing one, but had never actually seen one in use. \n\n\"Okay, so maybe I'm impressed,\" I rolled my eyes. \n\n\"Good,\" Curt replied smugly, before his expression turned dark with mischief. \n\n\"Take off the robe.\" \n\nHis tone sent shivers down my spine. It was soft, almost nonchalant, but with a threatening edge, making me bite my lip instantly in reaction. What was happening? Why was his manner so different all of the sudden? And why did it make me want to fall to my knees in worship? \n\nI looked down at the floor shyly, and obeyed him, removing the robe and handing it to him before he tossed it aggressively to the floor, making me flinch in surprise. \n\n\"Come here.\" \n\nRapt with anticipation, I stepped closer to him, throbbing between my legs from that look of hunger that so fascinated me. \n\n\"Undress me.\" \n\nOn that I didn't hesitate. I lifted the soft tee shirt up, grazing his warm firm abs as I did so. I observed the dark hair coating his broad chest, and finally his deliciously sculpted shoulders. \n\nAs I removed the shirt, I noticed a faded tattoo of a cross on the inside of his bicep. \n\n\"My pants, Bethany,\" Curt prompted me, sensing my distraction. \n\nI nodded, and slipped my fingers inside his waistband. Curt's waistline hardly called for elastic, but I was grateful for it today, as it expedited the process of disrobing him. The man simply exuded sex, and my mouth watered instinctively. \n\nI wanted to...put my mouth on him. In some way. Any way. \n\nWhat on earth had happened to me? \n\nCurt. That's what happened to you Beth. Curt. \n\nKneeling before him now, I cowered at the intimidating protrusion. I glanced hesitantly into his amused eyes before proceeding to pull his underwear down, maneuvering as necessary to avoid bending him. When Curt sucked air through his teeth, I thought that perhaps I had scratched him, but his wolfish grin betrayed no discomfort as he stepped free of his boxers. \n\nAnd there it was again, hovering in the air like a big monstrous lollipop. \n\nWould he ask me to... lick him, or suck him, or something? What kind of a slut was I that I would even consider such a thing? \n\nApparently not even sex god Curt had such perverse notions, for he simply smiled and helped me up. \n\nNodding to the shower, Curt entered after me, chuckling as I moaned from the blissfully hot water now blasting me from all angles. \n\nWhat extravagance! \n\nI'd always been taught to keep my showers economical. The briefer the better, the less hot water the better. But I could tell that Curt had no intention of making this brief. He was a master of seduction. And I was letting him seduce me. \n\nPerhaps I was being stupid, or na\u00efve. But in Curt I saw no reason to mistrust. Despite the undeniable lust that permeated the air whenever he was around, his hungry, bordering on cruel looks that sent tremors through me, I sensed an enduring gentleness in him. A tenderness. A capacity to love. \n\nI wanted his love. \n\nBut he was a guy. Guys didn't profess love easily, or quickly for that matter. I didn't need experience to know that. It was one of life's clich\u00e9s. \n\nMaybe someday. Someday, if I pleased him enough, maybe he would love me, and tell me that he loved me. Did I love him? \n\nMy heart screamed 'yes', but I knew it was stupid. I knew nothing about Curt. Well, not much anyway. But I would work on that. \n\n\"What do you think?\" came a deep voice. \n\nI turned to him, and smiled broadly. \n\n\"It's amazing. So luxurious!\" \n\nCurt afforded me another smug look before turning to grab the bar of soap. \n\n\"Have you ever been washed by a man Bethany?\" \n\nI shivered from his words, despite the hot water hitting us in droves. It was a laughably pointless question, but I answered anyway. \n\n\"Not in decades Sir.\" \n\n\"Sir?\" Curt raised an eyebrow. \n\nWhy did you just call him Sir? \n\n\"Umm, sorry Curt...I don't know why I said that,\" I stammered, embarrassed. \"It just felt right, I guess.\" \n\n\"Well if it feels right, then it can't be that wrong can it?\" Curt smiled. \n\nShaking my head, I didn't bother going into the many ways that feeling right can be extremely wrong. Though I had bible verses aplenty running through my mind, I just couldn't bring myself to spoil the moment. Not with him. \n\n\"You may call me Sir when it feels right Bethany. It's part of a practice called submission, and you honor me with it,\" Curt explained. \n\nI looked inquisitively into his eyes, and was taken aback by his suddenly guarded expression. \n\n\"Do you know about submission? And domination?\" Curt asked seriously. \n\n\"I've read a little about it,\" I confessed. \"I thought it sounded silly, and demeaning. But here with you Curt...I feel it.\" \n\nMy words made no sense. My thoughts made no sense. I just hoped that he would understand. \n\n\"I feel it with you too Bethany,\" Curt replied softly as he stepped closer to me. \"I've wanted to dominate you, for a long time. You've sensed this, I'm sure.\" \n\nI nodded shyly. \n\n\"Would you like to submit to me Bethany? I'm a demanding guy, but we can take it slow.\" \n\nI could feel my juices now, escaping not so slowly from me. I licked my lips. \n\n\"Yes Curt...yes Sir.\" \n\nCurt smiled in quiet approval. \n\n\"Here,\" he handed me the soap. \"Wash me.\" \n\nHow could a command sound so gentle and unyielding at the same time? \n\nI could feel the redness blooming in my cheeks as I accepted the bar of soap and began to massage it over his wet skin. His shoulders, his back, his...everything. \n\n\"Now my front Bethany.\" \n\nOoh, how I'd missed him calling me that. In that sexy, husky tone of voice. \n\nI bit my lip as I circled to face him, confronted again by his demon shaft, fully erect. It was red, the veins angry and pronounced. Demanding even in silence. \n\n\"Keep going sweetheart. He doesn't bite,\" Curt encouraged, his eyes dancing in amusement. \n\nIn theory, the idea of washing his dick was tantalizingly erotic. In practice, well, I was timid to say the least. It was so, angry looking. So hot, and apparently very sensitive, if last night had been any indication. \n\nBut I looked at Curt, and saw his expression now stern, as if his patience with me was waning. This must be the challenge in submitting. Pushing past my hang-ups. Obeying him, even if the task was uncomfortable or scary. \n\nTo hell with it. \n\nAbruptly, I applied a handful of suds to his groin before stroking him firmly. \n\n\"Oh Jesus!\" Curt gasped. \n\n\"Does that hurt, Sir?\" \n\n\"God no baby, you just surprised the hell out of me!\" he laughed. \n\nI frowned at the sudden change in mood, irritated that I couldn't even do this right. \n\n\"It's okay Beth, keep going. Just ease up a little, so I don't embarrass myself.\" \n\n\"Embarrass yourself?\" \n\n\"Yeah, I mean, I don't want to come all over you or anything,\" Curt laughed, then grimaced. \"Well okay, I guess that's a lie. But right now you're washing me, and I don't want to distract you from your task.\" \n\nI blinked in shock. He wanted to come all over me? Good lord. I was almost too stunned to form an opinion on whether I found the idea disgusting, or intensely erotic. Or both? \n\n\"Wash me Bethany. Now,\" Curt ordered sternly. Back to business. \n\nI was grateful. As long as I didn't think too hard about what I was doing, I could proceed without blushing to my ears. Maybe. \n\nSwallowing, I continued to lather him, in a considerably gentler fashion of course. It probably would have been easier to focus, if not for the light groans and gasps escaping him every now and then. It seemed as if the gentler I was, the more noise he made. \n\nWhen at last I'd completed work on Curt's feet, he helped me up and handed me the shampoo. \n\nThis was surprisingly more awkward than washing his manhood. Curt refused to lean down for me, so I had to move up against him, my body flush with his as I began to lather his hair on tiptoe. I had nowhere to look but into his face. His eyes. \n\nThey sparkled with mischief as I struggled with the naughtiness of our position. The more I massaged his scalp, the more my breasts pressed into him, deliciously abraded by his chest hair. The more his cock pressed insistently against my stomach. The more my pussy tingled in recollection of his grunts as he thrust into me last night. \n\nI was growing dizzy when I felt his warm hands circle my waist, holding me steady. The way his thumbs stroked softly along the underside of my ribcage, so tenderly, had me totally enthralled. Ready to give myself to him, all over again. \n\nI felt him twitch against me as I finished, and licked my lips in anticipation. \n\n\"Good girl,\" he whispered in my ear before dunking his head under the spray. \n\nThe sight of water and suds cascading down his strong back had me in a tizzy, unsure what to do. Would he reciprocate? Would it be as excruciatingly sexy? \n\nI didn't have to wait long to find out. Curt took the reigns again, washing me while I stood there and tried my best not to pant, or groan, or mew like a cat. But when he squeezed a dollop of shampoo from the bottle and began to massage my scalp, it was an exercise in futility to stay quiet. \n\nThe man was gifted. His hands. They were so strong, and warm, and skilled. He was just firm enough. Just gentle enough. Just freaking fantastic. \n\nI was devastated as Curt brought me under the large showerhead to rinse. But the way he pulled me to him afterward, the warmth of his body, the scent of him, it made everything go away. Everything was perfect. He was perfect. Life was perfect, as long as I could be with him. \n\n\"So...did you submit to me?\" I asked. \n\nCurt cocked his head in question. \n\n\"I washed you. And then you turned around and did the same thing,\" I explained. \"Did you submit to me?\" \n\nCurt chuckled, \"No darlin, I didn't submit to you. I was simply caring for you. Do not confuse the term submission with servitude.\" \n\nCurt paused a moment. \n\n\"Do you recall the other night, when I...commanded you, to stay?\" \n\nI nodded. Of course I did. He'd stripped me of all resistance with that tone. I could still hear his firmly issued command in my mind. \n\n\"I ordered you to stay, to relax, and rest, because I believed it was in your best interest. I was caring for you, as a Dominant cares for his submissive.\" \n\nAs a man cares for his wife. \n\nI couldn't help the fleeting thought. \n\nI looked into Curt's eyes as the water continued to run warm, somehow. Things were becoming clear. \n\nHe was serious. He wanted to take care of me. So what exactly was he getting out of this arrangement? \n\n\"Sometimes though,\" Curt continued, \"I may command you to do something that is in my best interest. Something that that gives me pleasure. That is why submission is a gift. Do you understand?\" \n\n\"Yes Sir, I think so,\" I nodded. His words were so powerful, and yet so gentle. \n\n\"What happens if I don't do what you say?\" I asked, not sure if I wanted to know, but needing to fully understand what I was signing up for. \n\nCurt looked conflicted, like he was afraid I would run away if he told me. \n\n\"I'm a believer in discipline.\" \n\nDiscipline. Why did my insides just flutter? \n\n\"Knowing what I know about you Bethany, I doubt that you will consciously disobey me. Unless of course, you want to be punished.\" \n\n\"Knowing what you know about me?\" I frowned. \n\nWhat'd he mean by that? \n\n\"You are naturally submissive Bethany. It's one of the reasons I pursued you. Natural submissives are very rare. You give because you want to give, not because it's required of you. You are genuine, and honest, and kind. I love that about you.\" \n\nA thrill ran through me like an electric shock as that word escaped his lips. The magnitude of that word, along with the intensity of his eyes proved too much to handle, and I bashfully turned my attention to our wet feet. \n\n\"I want to give to you, Curt. I would have given you anything.\" \n\n\"Anything?\" he raised an eyebrow. \n\nI thought back to that first day in his closet, discovering his...sex toys. Because there was really no more apt term in my vocabulary for it. \n\nI closed my eyes, visualizing again what I had seen. The whip. \n\nThe whip stuck out in my mind. It was the one thing I couldn't wrap my head around. \n\nWhy have such an instrument of pain among so many obvious instruments of pleasure? Did he hit his women with it to punish them? Why had it been sitting on top, as if it were used with more frequency than the items below? \n\nI imagined Curt standing over me, holding his whip. Commanding me to turn over, and receive my punishment. I pictured his face. \n\nAnd it turned. Me. On. \n\n\"Bethany?\" \n\nOops. He asked you a question, stupid. \n\n\"Yes, anything,\" I whispered. \"I think.\" \n\nCurt nodded, \"It's best not to make promises you can't keep.\" \n\n\"I can promise that I want to give you everything Curt. I want to. And I'll try,\" I said determinedly. \n\n\"I know sweetheart,\" he said warmly. \"And I don't want to hurt you. Do you remember my promise to you last night? If you ask me to stop, I will. And you promised me you would tell me if it ever became too much. Remember?\" \n\nI nodded. \n\nSo that's what he'd meant. He'd been trying to prepare me. To protect me. \n\nIt still hurt my brain to try and imagine things that Curt could do to me that I would dislike. Other than dump me. We were less than a day into our relationship, and it was already an idea too horrible to bear. \n\nAs I reached for him on impulse, I caught a glimpse of my fingers. \n\n\"I'm all pruny Curt,\" I whined, scrunching my nose in distaste. \n\n\"You're all beautiful,\" Curt corrected, taking my hand and sucking a finger into his mouth. \"And all mine.\" \n\nShivering, I nodded in agreement. \n\n\"Let's dry off,\" he growled. \n\n--- \n\nAfter I took my time drying him, Curt again returned the favor all too quickly. It was as if he was immune to the fact that he was more or less frisking my lady parts. It almost annoyed me. Why should I be the only one to gawk? To adore? \n\nBut my annoyance with him was short lived as Curt retrieved his robe from the floor and abruptly wrapped me in it. He did so with a look of determination, like he was claiming me, marking me as his, and would hurt anyone who threatened to remove it. Unless of course, he desired to remove it. \n\nHe was wrapping me, in him. The metaphor was painfully obvious, but I couldn't have cared less. The hunger in his eyes. The dominance. The promise. I would run around all day in his robe if it made him happy. I loved it. The heaviness of it, the smell of him, the darkness. It all represented the hotness of Curt, and I tingled in anticipation of when he would touch me next. \n\n\"Why are you blushing Bethany?\" Curt whispered. \"What are you thinking?\" \n\nThe man would not give an inch. \n\nJust be honest Beth. What will it hurt? \n\n\"I was thinking that I like wearing your robe Sir. I like being wrapped up in you.\" \n\n\"And I in you,\" Curt chuckled. \n\nI shook my head at his naughty joke. \n\n\"Speaking of which,\" he continued, \"Perhaps I should get dressed before I decide to wrap myself in nothing but you, again.\" \n\nSweet heavens, did this man have a way with dirty talk. \n\nHe had me juicing liberally at the reminder of our two couplings. There'd been nothing to bar the way when he'd had his release last night. And God help me, I wanted it again. \n\nTruth be told, Curt was just so damn sexy I would happily have had ten of his babies. At least that was how I felt right here, right now. \n\nIt was stupid. Immature. Idiotic. Infatuation. \n\nDoes it really take so little to corrupt me? One night? \n\nNot one night Beth. You've been smitten with him since the day he opened that front door. The tape measure. The pizza. The wedding... \n\n\"What do you think Beth?\" Curt drawled, pulling me to him and whispering sultrily in my ear. \"Should I get dressed?\" \n\nThrough the robe, I could feel his hardness. The hardness I'd been trying to ignore since I undressed him this morning. \n\n\"You should,\" I murmured stupidly, letting him run his hands over me through the robe. \"I'll just go move our stuff to the dryer...\" \n\n\"Mmmm, such a good girl,\" Curt growled in my ear before grabbing my ass and pulling me roughly against him. \n\n\"Such a fucking good girl.\" \n\nOne of his hands snuck upward to fist in my hair, making me squeak and gasp in surprise. \n\n\"Bethany,\" he whispered into my neck, sending goosebumps all over me. \n\nI whimpered as I felt a more insistent tug on my hair, his mouth opening over my neck, the heat of his breath, the wetness of his tongue for the briefest moment. \n\nTeeth. \n\nI nearly convulsed at the ever so slight graze. \n\nAnd suddenly, I was struggling to keep myself upright. \n\nCurt had backed away, that look etched on his face. \n\nAngry. Animal. Lust. \n\n\"Go,\" he rasped. \n\nI went. \n\n--- \n\nSo. It was out there. \n\nI'd told her I wanted to dominate her. I'd explained some basics. And she hadn't run away screaming. \n\nYet. Yet, fucker. \n\nI knew I needed to tread softly. This could so easily turn into the worst mistake of my life. If I lost her... \n\nI recalled staring down at her beautiful hair as she dried me, struggling not to laugh at how carefully she handled me, how innocent her face was, even as she openly gawked. \n\nAnd when she'd dried my back, dear God. The way she'd worshipfully patted at me with the towel. So gently, as if she didn't want to risk marring me in any way. Slowly, reverently, adoringly. It was the most excruciating tease. Especially when she'd lingered over my ass. \n\nJesus. \n\nI'd felt her breath on my ass cheeks and it made me clench my fists, yearning for her tongue. It wasn't something I'd ever commanded any of my subs to do, but with her... \n\nAhh hell, anything with her. Any touch from her. And I was done. \n\nI quickly threw on some weekend clothes and strode to my newly completed home office. \n\nIt was the shit. I'd have called it glorious, but I'd already assigned that title to Bethany's tits. Nothing else would be worthy. \n\nI couldn't help a smug grin as I dialed Joe on my new office phone. Typically, I didn't make much use of the land-line, but it was a special occasion. \n\n\"Happy Saturday fucker. To what do I owe the pleasure?\" Joe teased. \n\n\"Bethany.\" \n\nSilence. \n\n\"Bethany...?\" Joe prompted. \n\n\"We're together now.\" \n\n\"Together?\" \n\n\"She finished the project yesterday. We kissed. And now we're together.\" \n\nI saw no reason to elaborate. \n\n\"Kissed, huh?\" Joe laughed. \"Well I'm glad to hear that Curt. No one deserves it more.\" \n\nOr less. \n\n\"Thanks. So listen,\" I continued, \"I'm taking the week off. Bethany and I need some time to be together.\" ",
        "\"Ahh shit, Curt. I know I'm gonna sound like a colossal asshole, but I really can't spare you for an entire week. You know we're trying to wrap up this deal with Ruiz. I need you here.\" \n\n\"Excuse me?\" I growled. \"Who was it that held the fort when you were gone not one, but two weeks? The latter of which you didn't even bother to clear with me. You had your time with Kate, and I deserve mine with Bethany!\" \n\n\"I know Curt, I know.\" \n\n\"You don't fucking know! You don't know what hell it's been to restrain myself!\" \n\nI was fuming now. \n\n\"You said the only thing stopping me was me. And you were right God damn it. But now you're telling me I need to be away from her? No, Joe. I'm taking the week off. You can go fuck yourself if you think I'm going to bend on this one.\" \n\n\"Curt, we need to settle the termination agreement with Ruiz. The sooner we get it done, the sooner you and I can both rest easy and move forward with our lives. Don't you want to be able to start fresh, on the clean side of the law? For Beth's sake, if not yours?\" \n\nShit. \n\nThe fucker was pulling his courtroom finesse shit on me. And unfortunately, he was right. I hadn't been thinking of Bethany. I'd been thinking of my own selfish needs. \n\nShit, shit, shit... \n\nAfter a few moments of silent man-pouting, I muttered, \"Fine.\" \n\n\"Thank you Curt. I understand how hard this must be for you. Really I do.\" \n\nI heard a squeak, and my eyes flicked to the doorway, where Beth was peeking her head in. I couldn't help an impulsive smile when I saw her, even if I was royally pissed at Joe. \n\nCovering the receiver, I whispered, \"Beth, I'll be off the phone soon honey. Go wait in the bedroom.\" \n\nShe nodded her cute little head, and disappeared. \n\nLike a fucking bunny rabbit tempting a fox. \n\n\"I doubt you can understand Joe. You were never forced to let go of Kate once you had her.\" \n\n\"You're right Curt. But you also know that I'm right. We need to get things settled.\" \n\n\"Yes, I know!\" I spat, still frustrated with the situation. \n\nTaking a deep breath, I continued, \"I know you're right. I want to ensure Beth's safety, and Kate's, and the baby's of course.\" \n\nI thought of my union with Beth last night. We could very well have conceived. But I dared not hope. I dared not wish for it. It had been a mistake. \n\n\"Thank you Curt. It will all be over soon, I promise.\" \n\n\"I'll see you Monday Joe. Be sure to give babydoll a kiss for me.\" \n\n\"See you Monday.\" \n\n&gt;Click&lt; \n\nI smirked in satisfaction at Joe's abrupt goodbye. He talked a big game, but in the end he was just as insecure as anyone. \n\nBig game. \n\nMy smirk suddenly morphed into a huge grin, and I picked up the receiver again. \n\n\"Margot, need a favor. Yes, I know it's Saturday...\" \n\n--- \n\nI'd been overjoyed to discover Curt in his office, making use of the new space I'd designed for him. \n\nIt wasn't every day I got to witness one of my clients actually utilizing their new home. I saw their initial reaction at the big reveal, but never got to observe them actively enjoying the results of my hard work. \n\nI sighed in puzzlement. Yesterday, Curt had been a client, and now...what was he exactly? \n\nMy boyfriend? My...lover? What? \n\nWhat was I to him? We needed to discuss it...my place in his life. Where we went from here. He'd said he wasn't dumping me, made it clear that it wasn't a fling. So obviously I was...something. \n\nSomehow, the thought of asking a man twice my age, \"Am I your girlfriend now?\" seemed asinine. Needy. Off-putting. \n\nAnd another concern was slowly clawing its way to the surface. \n\nMy parents. What would they say if they knew how reckless I'd been? And with an older man, no less. What if I was already pregnant? They'd be so...ashamed. \n\nI thought of Kate, of how her parents had reacted, and paled. \n\nThe idea of disappointing my parents filled me with more dread than the prospect of a baby. But Curt was a good man. He would take care of me, wouldn't he? He certainly hadn't seemed bothered by the idea of a baby. Which, now that I thought about it, was totally out of the norm. Or what I thought was the norm. \n\nKnowing our clothes would take a while to dry, I decided to make the bed. Get the room looking nice again\u2014set the scene for what I hoped would be another night of passion. Would it be as amazing as the first time? Curt had set the bar so high last night, I wondered if the pleasure could ever be matched. \n\nThat heated moment after the shower with Curt had been intriguing. The way he'd gripped me, forced his erection into my belly...he'd seemed on the brink of losing control. Like he wanted to take me. Roughly. \n\nAnd you wanted it, didn't you Beth? You're a slut for this man. \n\nI shook my head as I finished with the accent pillows on the bed. \n\n\"Stupid horny Beth,\" I chastised myself before meandering back through the bathroom to the closets. Closet. \n\nIt looked fantastic. The built-ins had come out better than expected, thanks to Rick. \n\nCurt had only to fill them. \n\nI tested the drawers, which glided perfectly, no sticking, and tugged lightly on a few of the hooks, ensuring they were stable. Not a one budged. \n\nWhat would he hang on these hooks? I thought of the whip in his trunk. Would he ever show it to me? \n\nDo you want him to show it to you? \n\nA deep laugh caused me to whirl around in surprise. \n\n\"Maybe I should get that security lock after all,\" Curt purred from the doorway. \n\nHis arms were braced on the door jambs, blocking my escape. \n\n\"Curt! I was just...giving everything a once over. Looks like Rick did a good job on the cabinets,\" I squeaked. \n\n\"That he did,\" Curt nodded, though he didn't appear to be paying them the slightest attention. \n\nAs he advanced on me, I flashed back to that day. He looked the same, walked the same, with the same determined steps, the same carnal motive written in his features. \n\n\"Did everything go well, with the phone call?\" I struggled to project the illusion of composure. \n\nCurt chuckled bitterly. \n\n\"Sadly not. It seems, sweet Bethany, that I'll be returning to work first thing Monday, despite my protests.\" \n\n\"Oh, were you going to take some time off?\" I asked, confused. \n\n\"I was gonna take the week off. To be with you.\" \n\n\"Oh, umm, wow. That's so nice,\" I melted. \"I can't say I had the same plans, but it would have been nice.\" \n\n\"What do you mean?\" he frowned. \n\n\"I mean, my week's already half booked Curt. Gotta pay the bills, you know?\" I explained, my nipples hardening beneath my robe as he stalked toward me. \n\nD\u00e9j\u00e0 vu. \n\nI swallowed nervously when I felt the smooth cherry-wood cabinet against my back, butterflies rampant in my stomach, and elsewhere. \n\n\"Bills hmm?\" Curt mused. \"So you're saying that if I'd had the week off, you still would have worked?\" \n\n\"Of ccc...ohhh!\" I moaned as I felt the robe part, cool air hitting my bare breasts. \n\n\"You were saying, Bethany?\" \n\nA large hand caressed my left breast as his lips hovered teasingly over mine. \n\n\"I, oh God...\" \n\n\"Hmm?\" \n\n\"I...have to work...\" I panted. \n\nFingers kneaded my flesh, a warm thumb grazed my nipple. \n\n\"And if I say no?\" \n\n\"I...have to work Curt!\" \n\nA firmer grip on my breast drew the air from my lungs. \n\n\"I see.\" \n\nLoosening grip. \n\nHot breath in my ear. \n\n\"Well then, if that's how it is, I suppose I'll have to make the very best of our weekend,\" Curt whispered menacingly. \n\nI shivered. The words were rational enough, but the harshness in his voice seemed to promise retribution in some form. \n\nRetribution. Punishment. \n\n\"What do you say Bethany?\" Curt's hand dipped lower, parting the robe until my quivering sex came into view. \n\nI blinked stupidly at him, unsure how to respond. Why this man-God was attracted to the dopey lump of nothing I consisted of at the moment was totally beyond me. \n\n\"I'm...aahhh...\" \n\nHis warm hand delved between my legs, gently teasing my folds and grazing over my clit, torturing me into a mess of babbling acquiescence. \n\n\"Will you submit to me Bethany? Obey me? Be mine, all weekend?\" \n\nA large finger plunged into my sopping wet pussy, stroking me firmly. \n\n\"Oh God, Curt!\" I panted, struggling to gather my wits long enough to answer his question. What was the question anyway? \n\n\"Say yes, Bethany. Now.\" \n\nTo hell with it. I would be his, for whatever he wanted. Whatever it was. I was sure it could only be so terrible. And it was one weekend. What did I have to lose? \n\n\"Yyyes!\" I cried as he forced a second finger into me. \n\n\"So be it then.\" \n\nThe fingers were gone. And suddenly, my robe, or his rather, was yanked from my shoulders, and puddled on the carpet at my feet. \n\n\"Close your eyes,\" he ordered. \n\nI obeyed. It was easy enough, as the new sexual sensations were almost too much to process without the added stimuli of his carnivorous stare and calculating smirk. \n\nI felt cool air breach the space between us. There was a soft rustling noise, and the sound of a zipper. \n\n\"Shall we pick up where we left off that day Bethany?\" \n\nI bit my lip, eyes still closed, before I felt his warm breath on my mouth. Just as it had been. That day. In the closet. \n\nAnd today, there was no reason to stop. No reason for us to deny ourselves. \n\nI leant forward the fraction of an inch to meet his lips, giving him my consent. He took it for all it was worth. \n\nIn no time at all, I was drunk on his kiss, lost in his spicy masculine taste as he moaned into my mouth. His tongue was gently teasing, pulling passion from me, rather than forcing it upon me. \n\nCurt's hand, still damp from his exploration of my traitorous pussy, returned to my breast. Then its partner joined, drawing a tawdry moan from me as he massaged my hot sensitive globes in tandem. \n\n\"Tell me Bethany,\" Curt murmured wetly in my ear, \"Did you want me that day?\" \n\n\"Yes,\" I whispered, trembling from the memory and his heady words. \n\n\"Tell me what you wanted.\" \n\n\"I wanted you to kiss me, to touch meeeaahh...\" I gasped as I felt familiar teeth tickle my neck. \n\n\"Hmm?\" \n\n\"Curt please!\" \n\n\"Fucking tell me what you wanted that day Bethany! Now!\" he hissed. \n\n\"I wanted you to fuck me!\" I cried. \n\n\"And now? Do you still want me to fuck you?\" \n\n\"Yes Curt, yes!\" \n\n\"Mmm, good girl,\" Curt growled. \n\nCurt lifted me suddenly, causing me to gasp and wrap my legs around him, before pinning me against the cabinet. \n\n\"You're mine Bethany. Mine. And I'm gonna fuck you now, like I wanted to fuck you that day.\" \n\nCurt affixed his lips to mine before lifting me higher, tilting my hips, and guiding his tip along my folds. He groaned into my mouth as he did so. He enjoyed the tease. As did I. But my pussy was selfish. Seemingly of its own accord, my pussy humped at him, trying to draw his cock inside me. \n\nCurt growled in pleasure into my mouth, the joy of the tease swiftly obliterated by more powerful sensations as he relented, and slowly lowered me onto his dick. \n\nAgony. Bliss. Torture. Heaven. \n\nThey were one as I felt him penetrate me deeper than I could remember, stretching me, robbing my lungs of air and turning my mind to mush. \n\n\"Aaaooohhh Curt! Ahh!\" I hissed as my insides struggled to adjust to his size. \n\n\"Ahh Jesus baby, you're so fuckin' tight!\" Curt swore through clenched teeth. \"God damn girl...\" \n\nI was starting to lose count of the number of times he'd taken the lord's name in vain. But the forbidden sounded so fucking beautiful coming out of Curt. It sent sparks of hot desire ricocheting through my body. Sparks which were suddenly overshadowed by pain as he allowed gravity to impale me fully onto his thick shaft. I couldn't help a pathetic whimper of discomfort as he slid home. \n\n\"Curt!\" I squeaked in alarm. The potent sensation of being so overstuffed was overwhelming. \n\n\"Aahhhh, Bethany...aahh...\" Curt grunted. \"That's it baby girl, fucking squeeze that cock! That's it...\" \n\nHis voice sounded strained, like he was in pain. But his next actions suggested otherwise as he began a rough pace, grunting ferociously as I held on for dear life. \n\nPounding. Stretching. Screaming. \n\nHe punched at that spot inside me, again and again. My cries rang out, so loud, so obnoxious I was sure Curt would stop. \n\nBut it seemed to egg him on, his thrusts becoming increasingly desperate and wild. \n\n\"Aaahhh!! Curt, please!\" I begged, having no idea what for. \n\n\"Fuck yes Bethany! Scream, babygirl! Scream for Daddy! Yes!\" \n\nI didn't have more than a second to ponder the significance of his words before a rush hit me, overtaking my senses. \n\n\"Aaahhh!!\" I wailed, my pussy clamping down like a vise, resulting in a guttural moan from Curt, and a rich burn between my legs that was hard to put a label on. \n\nHe just kept stuffing me full, and my pussy kept clutching, grasping greedily for more. \n\n\"Mmmfffuckkk, Curt!!\" I cried, unsure how much more I could take, but wanting to be good for him. \n\n\"Yes baby! Ahhh, fucking milk Daddy's cock! Yesss!!\" he roared, pushing hard against that spot one last time, forcing a scream from me as I gripped his shoulders, digging my nails into his skin in retaliation. \n\nPulsing. Gasping. Trembling. \n\n\"Fffuucckkk, aaahhh...aahh...aahh...\" Curt hissed, his forehead slick against mine. \n\nI was useless as he lowered us gently to the floor. \n\nAfter shifting into a comfortable position, I vaguely wondered, was it silly to be spooning on the carpet in the closet? Wasn't there a perfectly good bed in the other room? \n\nPerhaps, but I didn't give a shit. Scratchy carpet be damned. His arms around me were all that mattered. \n\n\"Christ Bethany,\" Curt panted, still recovering, into my ear. \n\n\"Mmmm,\" was my exhausted reply. There was no need for words, as long as his hot body was against mine. \n\nI was uncertain how many moments passed, but I stirred in alarm when I felt him pull away. \n\n\"Shhh, baby, I'll be right back. Stay,\" Curt ordered softly. \n\nI went limp again on the carpet, confident he would return. \n\n------ \n\nJesus. \n\nI shook my head as I discarded the condom. Fucking condoms. \n\nI'd tried to be quick about the new safety measure, not wanting to ruin the mood for her. Though it had put an undeniable damper on the experience for me, I doubted that she'd noticed at all. \n\nBeth was newly deflowered, and didn't have the sense yet for covered versus uncovered cock. But I knew the texture of flesh. And for hers there was no equal. \n\nI would forever have the memory of her naked pussy clutching around me, her whimpers, her soft thighs flanking my hips, her delicious cries as I came inside her, and most of all, the hot rush of knowing my sperm were deep inside her, intent on finding her egg. It would be with me til my last fucking breath. \n\nI wanted it again. I had to have it again. \n\nBut you had to go and fucking tell her \"No\". You had to point out the fact that this is crazy. Irresponsible. Wrong. \n\nAnd it is wrong, fucker. \n\nYes. It was wrong. But \"wrong\" didn't seem nearly enough of a reason to keep me from the temptation of Bethany's unprotected womb. Not for long anyway. \n\nSo what the hell to do? Fucking propose? \n\nPropose. \n\nThe crazy fleeting thought made me recall our earlier conversation. Bethany's main hang-up seemed to be the unmarried and pregnant angle, not the baby versus career angle. \n\nJust put it out of your fucking head. It's too soon. Hell, you don't even know if you can live with this girl. Test out the waters. Responsibly. And then, maybe, you can think about it. \n\nNodding to myself, I rinsed off before returning to the closet and gathering her in my arms. \n\n\"Sweet Bethany,\" I soothed as she murmured softly, still basking in afterglow. \n\nI laid her gently on the bed, and maneuvered her carefully under the covers. Once she was situated, I eased into bed next to her. I pulled her against me as I had last night. Her beautiful bare ass flush with my softened cock. \n\nIt was a dangerous position, but I didn't care. She was mine. \n\nI lay there with her, trailing my fingers gently over her body. My hand came to rest more than once on her belly, just over her womb. \n\nGod how I wanted to put my baby inside her. To feel it grow, kick stubbornly against my hands. \n\nIt was not the wisest direction of thought with my cock firmly wedged against her virgin ass. \n\nAh hell, I cursed myself, willing him to go down. \n\nI worried that Beth might have woken up, but her cute light snore put me at ease. \n\nI grudgingly rolled away from her, lying on my back as I waited for the post-fuck stupor to hit me. \n\n--- \n\nThe sun blaring through the edges of the drapes betrayed what was probably early afternoon. \n\nI turned in the direction of his body heat, observing Curt fast asleep beside me. Well, perhaps not fast asleep. But asleep. He had a strange look of deep concentration written on his face, even in slumber. \n\nI wanted to soothe him. \n\nSoftly, trying not to wake him in the process, I ran my hand over his soft warm chest hair. His body was so warm. Why was it always so warm? \n\nIt was hard not to get carried away as I gently explored his body. I snuggled up to him, my breasts now hugging his ribcage, but it wasn't enough. \n\nI wrapped my arm around his front, caressing his waist, trailing my hand over his stomach. I was not expecting the hardness that suddenly kicked against the back of my hand. \n\nI gasped. Sweet heavens, it was his cock. So hard, even as he slept. \n\nOh how I wanted it inside me. My pussy, which strangely was none the worse for wear, yearned for his cock. It was right there. \n\nBut I couldn't just take it. It was too slutty. But dammit I wanted his cock. \n\nMy leg was the traitor, impulsively wrapping over his in a whorish attempt to get closer, to sate the need that pulsed within me. \n\nI felt the head twitch, and I inched my hand lower on his abdomen. Lower and lower until it was lodged firmly at the base of his cock. I couldn't bring myself to touch him. Not directly. It was too naughty. \n\nI wasn't touching his cock. His cock was touching me. \n\nMy leg wrapped tighter around him, and I realized that my pussy was now flush against his hip. \n\nOhh. \n\nI shifted, felt a fantastic pressure against my clit. \n\nWhat are you doing? \n\nIt's not me. It's my pussy. \n\nMy traitorous pussy humped against Curt's hip. \n\nI moaned. \n\nAnd suddenly, I was trapped beneath a wall of heat. \n\n\"What are you doing little girl?\" \n\n\"Oh! Curt, I'm sorry, I...\" I babbled, humiliated. \n\n\"You're sorry? You didn't seem sorry when you were humping your pussy so whorishly against me,\" Curt growled, his eyes now boring into mine. \n\n\"I...\" \n\n\"You should have known better Bethany,\" Curt hissed. \"You should have behaved.\" \n\nBefore I had a chance to say anything, Curt spread my legs and lined up his hot cock with my pussy. \n\nHe pushed in an inch, making me moan and buck like the whore he described. \n\n\"Yes,\" Curt hissed. \"You see Bethany? You want this.\" \n\n\"Aahh Curt!\" \n\n\"Tell me Bethany,\" he growled. \"Tell me you want my bare cock inside of you.\" \n\n\"Please Curt, please!\" I obliged. \"I need your...bare cock inside me. Please...\" \n\nThe words were new, awkward, but I meant them with all my heart. \n\n\"Good girl.\" \n\nCurt thrust the rest of his cock firmly inside of me, drawing all the air from my lungs. \n\n\"Aaahhh...\" I moaned, like I was used to it. \n\n\"God yes, Beth...oh yes...\" Curt moaned softly as he began a moderate pace between my legs. \n\nEven beneath the covers, I heard my juices making sloppy noises between us. My wanton pussy was at it again. \n",
        "\"Curt,\" I whispered. \"Please, I need more. Harder.\" \n\n\"Uhhh, fuck, little girl...\" Curt immediately increased the pace of his thrusts. \n\nThe intense heat between us was immediately gratifying, and I moaned and thrust my pussy up at him in encouragement. \n\n\"Yes Curt yes! Please!\" \n\n\"Aaaahhh,\" Curt groaned, his pace increasing. \n\nI felt my pussy tightening on him in anticipation. He wasn't wearing a condom, and the knowledge had me humping at him like a well-ridden whore. \n\n\"No, Beth,\" Curt gasped, even as he forced himself deeper, hitting that spot I loved and hated at the same time. \n\n\"Yes!\" I cried, wrapping my legs around him. \"Come inside me!\" \n\n\"Fffffuck!\" he cursed as he pistoned into me at a blinding speed. \n\nMy toes curled. Not a sound escaped me as my jaw dropped, eyes closed in ecstasy. I came, my pussy fluttering over him again and again. \n\n\"Aahhh! Little ssslutt!! Aaahh!!\" \n\n\"Yesss!!\" I screamed. As I felt him pulse inside me once, twice, three times, I knew I had won. \n\n\"Aahh!!\" Curt released one final pained groan before collapsing on me. \n\nI could barely breathe below him, but I loved it. I could die this way, wedged beneath Curt Donovan, trembling and dripping sweat all over me. It was carnal, dirty, and more satisfying than anything I could remember. \n\nI was his. Completely. \n\nOnce he'd caught his breath, Curt rose up on his elbows and stared into my eyes. I stared right back, concealing nothing from him. Several moments passed in silence before he nodded softly. \n\n\"Alright little girl,\" Curt purred. \"Get yourself to the shower. I'll go after.\" \n\n------------ \n\nTo be continued..."
    ],
    "authorname": "joodle",
    "tags": [
        "virgin",
        "bdsm",
        "daddy dom",
        "romance",
        "impregnation",
        "romantic"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/dwelling-in-desire-ch-12"
}