{
    "title": "The Last Time",
    "pages": [
        "Author's Note: \n\n\"The Last Time\" is a story about Maggie, a waitress at her mom's dive bar in a small tourist town, and Caleb, a well-off man visiting the old family cabin to renovate it after his father's death. With the bar is at risk of being closed down, can Caleb and Maggie set aside their differences to save it?\n\nThis story is approximately 36,000 words and is completed, posted here in its entirety. You can expect gratuitous erotic scenes, rough but consensual sexual situations, plenty of romantic drama, and alternating first-person POV. All characters involved in sexual situations are over 18. Special thanks to the people who beta-read and edited this story: Bebop3, norafares, and OneAuthor. All remaining errors, grammatical, factual, or otherwise, are my own.\n\n**\n\nCaleb\n\nThe stale smell of dust and stagnant air hit me as soon as I walked in the door. \n\nI tried flipping the light switch closest to me, but nothing happened. Glancing up, I saw there was no light bulb in the socket. \n\nTypical Dad. He could afford a vacation house in Marble Beach, right on the lake, but took the light bulbs home at the end of every summer to avoid having to buy spares until he absolutely needed to.\n\nMy heart squeezed a bit tighter in my chest as I thought of Dad, and I tried to bury the thought. \n\nLate summer light filtered through the dirty windows. The cabin was dim, but I could see well enough as my eyes adjusted. Muscle memory kicked in, and I stepped further into the cabin.\n\nA quick hop over the squeaky floorboard in the entranceway, particularly important to avoid when sneaking out. The patio door, which had to be pushed in before sliding it open. The furnace needed to be kicked twice on the left and once on the right if it gave out on a particularly cold night. It had been about ten years since I'd been in the cabin, but I still remembered every strange quirk about the place.\n\nI smiled in spite of myself as I looked around. The place was old, dusty, and needed a lot of work to compete with the other vacation homes for sale on the lake. But I'd worked summers as a carpenter while in university, and renovating it was well within my skill set. Dad had left me the cabin in his will. It was the only thing he hadn't left specifically to Mom, and that was because she had no desire to deal with it. I had decided I'd spend the winter sprucing the place up, then try to sell it in the spring. \n\nFirst things first, though. \n\nI opened as many windows as I could, letting in light and fresh air as I cleaned the upstairs bedroom. The kitchen still had all of the old pots and pans we used to use, and I added food to the refrigerator and pantry. Before it got dark, I jumped in my car and drove into town to grab light bulbs from the grocery store. Once I was back, I took a chilled beer from the fridge and headed to the deck to watch the sun go down over the lake.\n\nEvery summer of my childhood, Dad would drive down the week before school finished and get the place ready. On the last day of school, he and Mom would pick me up and we'd drive straight out to the lake. For two months, we'd live in the cabin. Dad turned one of the spare rooms into a makeshift office and spent some mornings working. Once a week or so, he'd drive back to the city and take care of things at the office. It was one of the rare times he'd flaunt his success, his ability to determine when he'd work and how hard. He had a team of people to take care of all the other pedestrian things he usually had to do so he could live his summers in a small slice of paradise.\n\nI'd spend the days swimming, riding bikes down the dirt roads, and playing with the kids who lived in the other cabins or in the town. Dad would take me fishing at least once a week, and we'd have a big fish fry on our patio. \n\nAs I got older, I stopped spending as much time hanging out with kids from the other cabins, and more time hanging out with the kids who lived in the town. I knew my family was well off, but Dad didn't like to flaunt his wealth. The \"summer kids\" were the ones who lived in the lake houses and had jet skis and dirt bikes. I didn't feel like I belonged with them. Dad owned a fishing boat, and that was it. So I spent more and more time with the kids from town, because they didn't have jet skis and dirt bikes either.\n\nI'd complained about having to spend all summer at the cabin every year. I wanted to hang out with my friends at home, but Dad insisted. The last summer I'd spent there was just before I went to university. At the end of the summer, I told my friends from town that I wouldn't be back the next year. As a parting gift, one of the girls I'd known since we were kids gave me her virginity, and took mine. \n\nIt had been unexpected. I didn't even know she liked me like that, but suddenly one night we were sitting on the beach in town together. Everyone else had gone home, and it was just her and me. \n\n\"When are you leaving?\" she asked.\n\n\"Couple days,\" I replied. \n\nShe bit her lip. \"Have you ever had sex?\"\n\nMy eyes nearly burst out of my skull. \n\n\"No,\" I finally answered. \"Have you?\"\n\nShe shook her head. \"Do you want to? With me?\"\n\nI did, and I told her that. She had a condom with her and we hurried down the beach to a gazebo that afforded the slightest bit of privacy. She kissed me and let me touch her everywhere. I doubt that I actually made her orgasm, but she said I did, and as naive as I was, I believed her. I wasn't inside her for very long, and tried to laugh it off, embarrassed. She smiled and said it was okay, and she had heard it was normal for the first time to be like that. \n\nAfter going home, I thought about her often, about the frantic, groping tryst we'd had in a gazebo by the lake. Neither of us really knew what we were doing, but she was gorgeous and warm and willing. That year in university, I told friends the story of my first time on drunken nights when we were all bragging, laughing at how terrible it must have been for her. And as time went by, I laughed more and more about how my dad insisted we \"rough it\" at Marble Beach. I joked about how my dad had all that money, and just built a shitty little cabin when he could have had a huge party house. I met more girls, had more sex, got better at it. Broke my share of hearts, and had mine broken in return.\n\nThat first girl, though. Sitting on the back deck that night, I wondered what had happened to her. I imagined she'd left town, as most of the kids planned to. \n\nAfter I finished university, I'd gone to work for a few years. Dad had asked if I'd come back out to the cabin with him one year, but I'd been too busy. I wished I'd gone. I wished I'd spent more time with him before he died. \n\nI lifted the bottle in a toast as the last rays disappeared beyond the horizon. Mom had moved back to her hometown in England earlier in the summer, giving me a decent amount of money to renovate the cabin after I explained my plan. Dad had been gone for nearly six months. \n\nI wished he could have been there with me to have one last beer. \n\n**\n\nMaggie\n\n\"Come a little closer, gorgeous, and tell me about those specials again.\"\n\nI stared at the tourist, my expression somewhere between blank and disgusted. \n\n\"Just the one special. The Beach Burger's on for half price until five.\"\n\nHe chuckled, his arm resting openly on the back of his chair as he turned towards me. \n\n\"What, no smile for me? Come on, sweetheart. What's your name?\"\n\nGritting my teeth, I looked across the room. My mother was behind the bar, chatting with one of the regulars. She'd just finished lecturing me on giving better customer service, or at least not openly despising the tourists.\n\n\"Maggie,\" I finally said. \n\n\"Maggie,\" the man repeated. \"Miss Maggie. You been working here long?\"\n\nAlmost my entire life, I thought. \n\n\"Yeah, a while.\" \n\n\"Ever get tired of the work, Maggie?\"\n\n\"Are you going to order something?\" As an afterthought, I tried to smile. \"Sir?\" \n\n\"Ah, in a minute. We've got time. How long have you worked here, Miss Maggie?\" \n\n\"If you're not going to order something\u2014\"\n\n\"You from around here?\"\n\nI nodded. \"My mom and I have lived here my whole life.\"\n\n\"Just you and your mom, hey?\" \n\nI nodded again. \n\nHe lowered his voice, looking up at me with whiskey-glazed eyes. \"Miss Maggie, I have to ask. Do you have a daddy?\" \n\nMy face flushed. The man, mistaking it for embarrassment, laughed. \n\n\"I heard girls with daddy issues are a special type. I can be your daddy, baby. You wouldn't have to be a waitress anymore.\"\n\nMy mom had told me approximately a million times that when a man propositioned me\u2014not if, but when, because she knew exactly what these men were like\u2014 I should walk away and tell her, and she'd get Big Red or Tiny Steve to kick them out. Other customers didn't like how I dealt with men like him, she said, and it wasn't good for business.\n\nI didn't want Big Red or Tiny Steve to help me. Instead, I leaned toward the man, bending until my elbows rested on the table. I let my fingers trail against the icy glass of beer I'd just put down in front of him. \n\nHe looked like he'd won the lottery, and the men he was sitting with looked like they would each want a turn with me before the end of the night. There were four of them total, all middle-aged, all well-dressed, all able to afford a nice vacation property on the lake. They probably all had wives waiting for them back at their luxury cabins, kids at private schools, and enough money to buy my silence should anything unsavoury happen.\n\n\"You're a fucking pig, sir,\" I said sweetly.\n\nPicking up the beer, I dumped it over his balding head. Splashes of cold lager spilled every which way and drenched his lap, spraying the men on either side of him.\n\n\"What the fuck!?\" He shot out of his chair, drops of beer flying off his shirt and landing on the tables in the splash zone. \n\n\"Goddamnit, Maggie!\" My mom was over in a flash. \"Not again.\"\n\n\"Again?\" The man was livid. \"This little bitch has dumped beer on customers more than once and still has a job here?\" \n\n\"This little bitch is my daughter,\" Mom growled, her voice low enough that only he and I could hear her. \"And she only does that when someone gropes her, asks her for sex, or tells her they want to fuck me. So which was it, sir?\" \n\nThey never wanted to admit which one it was. I plastered a sweet smile on my face and blinked innocently at the man as he grabbed his jacket and left the bar with his friends.\n\n\"Friggin' tourists,\" mumbled Fred, who was at the next table with his wife. \n\n\"Jo, dear, could we get some more napkins?\" she asked, glaring at me.\n\n\"Of course, Wanda.\" Mom grabbed a stack from the cutlery station, then started towards the bar. \"Maggie, you come here.\" \n\nSighing, I followed her to the back. She pulled me into the small office just behind the kitchen.\n\n\"Goddamnit, Maggie,\" she said again.\n\n\"He was being a pig, Mom.\" \n\nI settled onto the old green couch in the corner. Beside me, an old TV showed feeds from the two security cameras that actually worked.\n\n\"Yes, but you need to remember that we are running a business here.\" She sat down at the desk and put her head in her hands. \"Why can't you just ask Big Red or Steve to handle it?\"\n\n\"I can handle them myself. Nobody wants the tourists in here anyways. This is the local bar.\" \n\n\"We need the business, and never mind that you're pissing off the locals,\" she shot back. \"That's the third time Wanda's gotten splashed after you've dumped something on a customer.\" \n\n\"Well, you said I couldn't pour coffee into their laps anymore. Beer on the head is really the only option.\"\n\n\"Being a Taurus doesn't give you the right to be full of bullshit.\" She glared up at me. \"The only option is to ask Big Red or Steve to handle it. They will always have your back.\"\n\n\"I don't need Tiny Steve to look out for me.\"\n\n\"Please stop calling him Tiny Steve.\" \n\nI rolled my eyes. \"It's meant to be ironic.\"\n\n\"It's meant to be emasculating, you mean.\" Mom looked at me, her eyes tired. \"I know you're not a huge fan of me dating Steve, but hon, I'm allowed to pursue a man.\"\n\n\"It's not that you're dating someone. It's that you chose to date a guy named Tiny Steve.\"\n\n\"You're the one who started calling him that.\" \n\nI tried not to laugh, especially since Mom didn't seem to be lightening up. \"He likes it when I call him that. It's our thing. It's funny because he's not tiny.\" \n\n\"Mags, things are getting more serious with me and Steve.\"\n\nI raised my eyebrows, stunned at her sudden admission. \"Okay.\"\n\n\"He's a good man. He treats me well.\"\n\n\"I know, Mom.\"\n\n\"He makes me happy.\" She drummed her fingers on the counter. \"I'm thinking of asking him to move in.\" \n\nThat didn't surprise me all that much. Tiny Steve had been a bartender at The Sea Glass since Mom first bought it. He only worked the bar a few evenings a week because the rest of the time, he worked on motorbikes in his local shop. Between their two schedules, Mom and Steve didn't see each other as often as I knew either of them wanted to. \n\nSteve was a good guy. I didn't know why it took him so long to finally admit he was in love with my mom. I was happy for them, really, but my mom was all I had and I was allowed to be a little protective of her.\n\n\"Do what makes you happy, Mom.\"\n\nShe smiled. \"Thanks, Mags.\" \n\nSuddenly, it was back to business. \n\n\"Now look, you have to stop dumping things on customers. I know they're pigs. I know they're saying horrible things to you. I know it isn't right. Not only are you wasting product, but I'm also losing the money on their bill and the bills of everyone around them.\" Mom's expression was slightly forlorn. \"I'm sorry, sweetie. If I could make them stop harassing you, I would, but this is the last time I'm warning you.\" \n\nShe sent me home for a while after that, with instructions to come back with my guitar around 8:30. Luckily, home wasn't far. I trudged up the stairs to the apartment above the bar and let myself in. \n\nMom and I had lived in a small house a few blocks away from the bar while I was growing up. We'd always had the apartment above the bar, but she only ever used it for storage. As a teen, I'd stolen the key and used it as my own hiding space. I had cleaned it up, made a little nest among the boxes, and spent hours upon hours hiding away. My friends and I had gotten drunk there. I'd lost my virginity there, at least twice if the boys believed me. Funnily enough, neither of them was my actual first, but nobody seemed to care about the lie.\n\nWhen I finished high school, I begged my mom to let me move out. We had that perfectly good storage room above the bar, I argued. I needed independence. \n\nLooking back, I'm sure she knew I was using it as a teenage hangout. My mom was young when she had me and had worked at this same bar before getting knocked up by a rich kid whose parents owned a nearby vacation house. They'd given her a ridiculous amount of money to keep his name off the birth certificate, and she'd used that money to buy a house in town and the bar she worked at.\n\nSo, I think she knew I was sneaking around to have sex. We never really talked about it, aside from her drilling in my head to always be careful. \n\n\"Do what you need to do. I'm not a moron,\" she would say. \"But always use a condom. And don't fuck tourists.\" \n\nI'd only disregarded her advice twice. Not about the condom, I wasn't that stupid. But as for tourists, well. The first time barely counted as a tourist, since we'd been friends since we were kids. The second time was shortly after I moved into the apartment above the bar. \n\nThe man had been reasonably good looking, probably nearing fifty, and was reasonably respectful to me. He'd made promises.\n\n\"Let me take care of you, let me buy you jewellery, let me treat you like a princess.\"\n\nSo I'd let him come upstairs with me one night, and then another night, and then so often that I wasn't sure how he kept it a secret from the wife I knew was waiting for him at his fancy luxury vacation house. \n\nThe sex was okay. I'd expected it to be better, but that part of our arrangement wasn't about me. He bought me little presents, jewellery and lingerie mostly. New wine glasses after I served him a cheap red out of a coffee cup I'd stolen from a car dealership. Stupid little things. \n\nAnd really, the relationship\u2014if one could call it that\u2014wasn't bad. He treated me well. He complimented me all the time. I would never have invited him upstairs if he talked to me the way most of the men did. And at the time, it was hot. The taboo of it, the sneaking around. I felt bad for his wife at first, though I told myself that it wasn't my problem, that he knew what he was doing. \n\nNear the end of the summer, his wife had stormed into The Sea Glass while I was working, trailed by the very pale, very terrified man I'd been sleeping with. She slammed her hands on the bar in front of my mom and told her that some whore of a waitress who worked here was fucking her husband and demanded to know who it was. \n\nMom had scoffed. \"None of my girls are fucking your husband.\" \n\nShe motioned to me, another waitress named Michelle, and Annie, my surrogate grandma who did the dishes and prep work in the back. \n\nHis wife's eyes fell on each of us, resting on me the longest. \"It's this one,\" she declared. \"You've been fucking my husband, haven't you?\"\n\n\"Bold of you to come in here and accuse my daughter of sleeping with your husband,\" Mom said. \"Look at her. She's young enough to be your daughter and then some. How dare you?\" \n\nThe man had gone even more pale, if that was possible. His wife didn't notice, but I think my mom did. The woman left in tears, no longer accusing anyone in the bar of fucking her husband but despondent at the idea that she wouldn't be able to find out who it was. \n\nAfter closing that night, I had brought the cash drawer for my mom to count in the office. Sitting behind the desk, she looked up at me.\n\n\"Maggie, you know I'll defend you to the death. But I have to know. Were you sleeping with that woman's husband?\" \n\nI don't usually lie to my mom, especially not when confronted directly, but I couldn't meet her eyes and answer that question honestly.\n\n\"No, Mom,\" I said. \n\nI don't think she believed me, but she let me have my dignity. \"Okay, sweetie. Just remember. Always use a condom\u2014\"\n\n\"\u2014and don't fuck tourists,\" I finished, nodding. \"I know. I promise.\" \n\nAnd I'd kept that promise. After the man, I hadn't fucked anyone. No tourists, none of the locals who were left, no one. \n\nI should have probably kept some of my tip money to invest in the sex toy industry, given how many I was buying. My reputation as a waitress was that I was quick and accurate, but cynical and surly. If people knew how long it had been since I'd gotten laid, they'd probably understand why I was cranky. \n\nThat, and because this was the rest of my life. Mom had bought The Sea Glass as an investment when she was pregnant with me. We'd always had enough to get by comfortably, but never enough for me to leave. One day she'd retire, and she'd pass The Sea Glass down to me, and I'd replace her as the eccentric lady behind the bar. \n\nI had come to terms with it. Without The Sea Glass, I didn't know what I would do. I had never worked anywhere else. Even if I had the means to move away from Marble Beach, I'd just end up waitressing at some other dive. At least here, I had my mom, and I didn't have to pay rent.\n\nThe upside of being the owner's daughter was that I got to do what I wanted a lot of the time. One of those things was performing. Mom let me play music at the bar a couple of times a week, especially in the summer when she had seasonal help and didn't need me to waitress all the time. As a kid, I'd begged her to buy me a guitar for Christmas one year, and she had. I had worked my ass off to learn to play it and was reasonably good. Sometimes people came in just to see me play, which certainly felt nice. ",
        "So at 8:29 that night, I picked up my guitar case and headed back downstairs to the bar. Some of the locals cheered as I started setting up, and I smiled one of my increasingly-rare smiles. Mom came over as I was settling in, kissing me on the cheek.\n\n\"Kick ass, sweetie,\" she said. \n\n\"Yes, Mom.\"\n\n**\n\nCaleb\n\nBetween cleaning the cabin out, drawing up plans for the renovations, and driving to the city and back to start gathering materials, I was busy every day of those first few weeks in Marble Beach.\n\nThe cabin needed a decent amount of work. It was certainly liveable, but I wanted to make it compete with the other lakefront homes nearby. I had grand plans for a three-level deck facing the water, which would require redoing the one that was already there. I wanted hardwood throughout, a built-in wet bar, heated floors. Every luxury I wanted as a kid, but that my dad refused. \n\nThe final design was clear in my mind, but the work to get there was going to take quite a while. Especially since I was doing it all myself. \n\nAfter the initial excitement, I had some doubts. I'd never been alone in Marble Beach before, and the town had changed since the last time I'd been there. Main Street was as kitschy as ever, with little souvenir shops all overfilled with crafts from local artisans. But the local ice cream place I remembered was gone, replaced with a fast-food chain. And I was fairly certain the Starbucks hadn't existed the last time I'd been there. \n\nMore importantly, I didn't recognize anyone. The kids I'd made friends with growing up all seemed to have disappeared, and being that it was the end of summer, I stuck out as a non-local. I tried chatting with people at the grocery store or coffee shop, but most people branded me a tourist right away.\n\nIt was my second week in Marble Beach when I decided to stop by The Sea Glass. I knew it was where the locals generally went for a drink and a decent burger. They got some tourists, but it was far enough off Main Street that it was considered the locals' bar. \n\nBut even The Sea Glass was different from what I remembered, though not quite in the same way. The building was rundown, the painted sign faded and peeling. For a moment, I wondered if it was closed, but there was a neon sign in the front window and people going in. I parked my truck and hopped out.\n\nThe bar was dim, warm, and inviting. As rundown as the place looked from the outside, the inside was cozy. It was relatively busy, and there was a girl playing the guitar and singing in the back corner. Seating myself at an empty table, I looked around.\n\nAt first I thought I was imagining it, but after the third time I caught someone staring, I knew I wasn't. Awkwardly, I looked down at the drink menu in front of me.\n\n\"Whatcha having, darling?\" \n\nI recognized the woman leaning over my table instantly. Josie Myers owned The Sea Glass, and seeing as I'd spent summer after summer hanging out with her daughter, I'd gotten to know her reasonably well. It had been ten years, but Josie looked exactly as she had the last time I'd seen her, save for a line or two in the corner of her eyes. \n\n\"Just whatever lager you've got on tap,\" I said.\n\n\"Sure thing. Any food?\"\n\n\"Bacon burger, please.\" \n\nShe walked away. Whereas I recognized Josie immediately, she didn't seem to have any idea who I was. I didn't blame her. Ten years is only a huge difference when going from a teenager to an adult. The last time I was there, I was a scrawny kid with a babyface. \n\nThe wait for my beer and burger wasn't long, but it was uncomfortable. At the tables around me, people seemed to perpetually whisper about my presence. Some were more obvious than others, and I began to regret going to The Sea Glass at all. I tried to focus on the girl playing guitar in the corner.\n\nI couldn't really see her from where I was sitting, but her voice was beautiful. She sang with the kind of heartfelt sorrow that runs through small towns like Marble Beach, bringing up feelings of longing and loss. I closed my eyes briefly as I listened, trying to imagine what it would have been like to live in Marble Beach my entire life. Most of the friends I'd had over the summers as a kid lived here year-round, and I remembered being jealous of them. It was only when I got older that I realized summers in Marble Beach weren't the same as winters there. Winter was cold and dreary. The lake froze over and businesses in town nearly shut down for lack of customers. \n\nMy reverie was broken by Josie placing the beer and burger in front of me. \"Here ya go,\" she said.\n\n\"Thanks.\"\n\n\"Anything else while I'm here, darling?\" \n\n\"No, thank you.\"\n\nHunger had set in, and I ate the burger quickly. It was as delicious as I remembered, a blend of salt and cheese and juiciness that threatened to drip onto my shirt. I washed it down with a few swigs of beer. Almost as soon as I was done, Josie came back for my plate.\n\n\"Dessert?\" she asked.\n\n\"Just the bill, please.\" \n\nAfter bringing the credit card machine to me and giving me a receipt, she hovered over the table for a moment. \"You seem out of place, hon. No offence. What brings you to town this late in the season?\"\n\nI smiled. \"That obvious, hey?\"\n\n\"It's a small town. Locals know when someone's new.\" She winked.\n\nChuckling, I met her eyes. \"I know you don't remember me, but I used to spend summers here as a kid. I was friends with Maggie.\"\n\nHer face changed as I said her daughter's name. \"Really, now. Well hon, I have to apologize, because you're right.\"\n\n\"It's been a while. I'm Caleb Vaughan.\"\n\n\"Caleb!\" she exclaimed, a hand clapping my shoulder. \"Oh, shit. I remember you. You just look like an actual grown man now!\"\n\nAn embarrassed smile spread across my face. \"Thanks, Josie.\"\n\n\"Wow, look at you. I can't believe you're the same kid. What brings you back?\"\n\n\"Renovating the old cabin. Probably going to try to sell it in the spring.\"\n\n\"That's too bad. How's your dad doing? I haven't seen him in a couple years, come to think of it.\"\n\nMy heart tugged in my chest. \"He, uh, passed. Earlier this year.\"\n\nJosie grimaced. \"Oh, darling. I'm so sorry to hear that.\"\n\nI shrugged it off. \"How's Maggie doing? She still around town?\"\n\nThe look of amusement on Josie's face took the tension out of the conversation. \"Well, you should ask her. She's playing right now, over in the corner.\"\n\nI whipped my head towards the girl playing the guitar, straining to see her. \"That's Maggie? Really?\"\n\nJosie laughed. \"Yeah, hon, that's Maggie.\" \n\nAnother customer called her away, and I sipped the last half of my beer while listening to Maggie. I couldn't believe she was still in town, though it made sense. Through the later years I'd spent here, she worked part-time at The Sea Glass. I supposed she'd eventually take over the business from her mom. \n\nJosie's conversation with me didn't do anything to stop the stares I was getting. If anything, people were even more curious. I tried to ignore it so I could wait around and say hi to Maggie once she was done. But once I had finished the last sip of my beer and Maggie had started up a new song, my patience had worn out. \n\nTucking my napkin under the empty beer glass, I got up and headed towards the door. I tried to catch a glimpse of Maggie as I walked by, but the people crowded around her as she sang blocked the view. Disappointed, I left the bar and headed towards my truck. \n\nApparently, someone had not been a fan of my parking job. A car sat just behind my bumper, boxing me into the spot I'd taken. I swore under my breath and looked to see if anyone was around, then headed back towards The Sea Glass. \n\nJust before I could open the door, someone bolted out carrying a paper bag of takeout food. Narrowly avoiding a collision, I held the door for him.\n\n\"Thanks, man,\" the guy said. \n\n\"That doesn't happen to be your car blocking me in, does it?\" I asked.\n\nGuiltily, he shrugged. \"Sorry. There was no other parking and I was just picking this up.\" \n\n\"All good, saves me from asking around.\" \n\nHe got into his car and waved as he pulled away. Just as I had opened the door of my truck and had one leg in the cab, I was interrupted again. \n\n\"Leaving already?\" \n\nI turned, and Maggie was there. \n\nThe Maggie I remembered had been a skinny, long-limbed teenager whose eyes seemed to fill half her face. I remembered those wide eyes bright in the moonlight as she asked if I'd be her first, her freckled cheeks burning as she waited for my answer. I could still see that Maggie in the woman before me, but so much had changed.\n\nRings adorned two fingers on each hand, as well as her thumb. Scrawling black tattoos wrapped around her wrist and forearm, and another peeked out on her shoulder underneath the sleeveless top she wore. She seemed to have grown into her limbs, no longer the gangly girl I'd held in the gazebo. Her face had matured, upturned nose and pouty lips now complimenting the bright brown eyes. Her thick hair fell against her shoulders, and a necklace with two pendants fell against her chest. \n\nShe was as beautiful as I remembered, and more beautiful than I could imagine. \n\n\"Should I?\" I finally replied.\n\nHer face split into a wide grin and she laughed, a sound as musical as her singing had been. \n\n\"Shit, Caleb, I can't believe it's you.\" I got back out of the truck and shut the door just in time to catch her as she hugged me. \"Mom told me you were back in town as soon as I was done. I almost died when I realized you'd already left.\" \n\n\"I was going to come back when you weren't busy. It's so good to see you, Mags.\"\n\nI let go of her and she stepped back, looking me up and down. \"What are you doing here? It's been years, why are you back now?\" \n\nHer face fell when I told her about my dad. \"Fuck. That's horrible. I'm sorry. How are you doing?\"\n\nI put on the fake, plastic smile I wore whenever I had to talk about my dad. \"I'm okay. Thank you.\" \n\nShe was holding a flannel jacket and shrugged it on. \"Want to sit by the lake? I'm done for the night and we have ten years of catching up to do.\" \n\n\"Absolutely.\"\n\nI clicked the lock on my key fob and crossed the street with Maggie, making our way to a bench on the beach. \n\nWe talked about everything. I told her about university, getting my business degree, and working summers as a carpenter. About working for a contractor after I graduated, intending to start my own business one day, until my dad got sick. About deciding to renovate the cabin, quitting my job, and coming out to Marble Beach, and how out of place I was feeling.\n\n\"Why'd your mom move to England?\" she asked.\n\n\"She's from there. I think once Dad died, she didn't want to be around things that reminded her of him.\" That familiar tugging in my heart happened. \"I know I haven't wanted to.\" \n\n\"Are you really okay?\" Maggie's bluntness hadn't changed since we were kids, either.\n\n\"As okay as I can be,\" I admitted. \"I wasn't ready for it, even though we knew it was coming. And now that it's happened, I'm not ready to go back to how life was before he got sick.\" \n\nI paused. I hadn't really told anyone how I was feeling about my dad's death, yet there I was spilling it all to Maggie. \"I'm sure he would have wanted me to pick up and move on, but that's a lot easier said than done.\"\n\nShe nodded. \"It's rough. I'm sorry.\" \n\nWe were quiet for a moment, staring at the gentle lapping of waves on the lake. All that time spent apart didn't seem to matter. The silence between us was comfortable, not awkward. \n\n\"I can't believe you've been in town two weeks and haven't come to see me before tonight,\" she said, breaking the silence.\n\n\"I didn't know you were still here.\" I shifted on the bench, facing her. \"I've been yammering about myself all night. What's going on with you?\"\n\nShe didn't answer right away. \"Hardly anything.\" \n\n\"Come on, something must have happened in the last ten years.\" \n\nMaggie's smile had faded, her eyes reflecting a forlorn sadness. \"Not much, really. Last I saw you, I was working at the bar part-time. Now I work at the bar full-time.\"\n\n\"You play music there, though.\"\n\n\"Sometimes. If Mom doesn't need me to wait tables.\" \n\n\"Any boyfriends?\" I teased.\n\nI expected her to laugh, or blush, or even smile, but Maggie just shook her head, her face serious. \"Nothing worth writing home about.\" \n\nI was making her sad, and I didn't want that. Seeing Maggie was the happiest I'd been in ages, and I didn't want to ruin it.\n\n\"What about everyone else? Still in touch with any of the old crew?\"\n\nMaggie finally smiled. \"Yeah. Alison keeps in touch, comes back and visits her parents pretty regularly. I've been to visit her a couple of times. That's where my tattoo artist is, so it works out well.\" \n\nShe told me about the rest of the group. Most of them had moved, she said, but a few were still around, mostly on nearby farms. Of everyone, it sounded like Maggie was the only one who stayed in town permanently. There was a sadness in her voice, and I wondered how she had really been. \n\nThe conversation flowed easily, though, and we sat on that bench talking and laughing for hours. It was only when Maggie shivered and pulled the flannel around her more tightly that I realized how cold the night had gotten.\n\n\"Shit, it's late!\" I exclaimed, checking the time on my phone. \n\nShe glanced over. \n\n\"Wow, I didn't expect that.\" She shivered again. \"Are you wanting to go home?\"\n\n\"Not really,\" I admitted. \"But you should, if you want to. Did you walk here? I can drop you off.\"\n\nMaggie's eyes seemed to twinkle. \"I don't think that's necessary. My place is closer than your truck is.\" I was confused and she rolled her eyes. \"There's an apartment above the bar. I live there now.\" \n\n\"I would never have guessed.\"\n\n\"Come up and see it,\" she suggested. \"We can have a beer and warm up.\" \n\n**\n\nMaggie\n\nMy fingers were frozen as I unlocked my apartment door. I twisted the key and flexed my joints, willing the warmth to return to them. \n\n\"It's not much,\" I said to Caleb, suddenly nervous. \"But it's better than living with my mom.\" \n\nHe stepped inside and I glanced around instinctively, making sure it was reasonably presentable. Downstairs, the dining room had a high ceiling, but the apartment was built over the kitchen and bar area. It was relatively small, but tidy, the furniture old but clean. My bed sat in one corner, neatly made, and a living room area and makeshift kitchen took up the other wall. The bathroom was old but functional, and even had a washer and dryer in it. \n\nIt wasn't much, but it was mine. \n\n\"It's nice,\" Caleb said.\n\nI knew he was just being polite, but I smiled anyway as I took off the flannel jacket I was wearing and hung it by the door. I took Caleb's coat as well, grabbed a beer for each of us, and settled on the couch.\n\n\"When did you move in?\"\n\n\"After high school,\" I said. \"I had a little hideout up here for a while before that. That would have been after you left, though.\" \n\n\"Damn, that's too bad. We could have had crazy parties up here.\" \n\n\"Or at least somewhere a little more private than that gazebo.\"\n\nI pressed my lips together, unsure of how Caleb would respond. We'd been talking for hours at that point, easy conversations that made me feel like those years apart had never existed. \n\nEven with all that talking, we hadn't even referenced the night I'd last seen him. That night, when I'd stumbled my way through asking him to sleep with me. When I knew he wouldn't be coming back, and it was either tell him how I felt then or keep it a secret forever. \n\nCaleb chuckled, which was about as good as a reaction as I could hope for. \"Can I be honest with you? That night is still one of my top memories of all time.\" \n\nI smiled in spite of myself. \"Mine too.\" \n\nNeither of us seemed to know what to say after that. \n\n\"Mags, can I ask you a question that's really inappropriate?\" Caleb finally said.\n\n\"Please do,\" I replied. \n\nHe took a swig of his beer, as if for courage. \n\n\"You told me that night that I'd gotten you off. I believed you at the time, but now...\" He trailed off and I felt my face turning red. \"Did you actually?\"\n\n\"At the time, I thought I had,\" I admitted. \"I wasn't lying. But, in hindsight, well...\" \n\nI started giggling. \n\n\"Ah, shit,\" Caleb said, and he laughed as well. \n\nInviting Caleb up to my apartment hadn't just been because I was cold. The crush I'd had on him growing up had roared back like a tidal wave, and he looked so damn good. As a teenager, I thought he was the cutest guy I'd ever seen, and as an adult, I could hardly keep my eyes off him. His hair was long, about to his chin, and thick. I wanted to run my hands through it, feel the scruff on his cheeks against my face, touch those broad shoulders that hadn't existed the last time I'd seen him. I could almost hear my mom's voice in my head telling me to not fuck tourists, but I pushed that thought away. Caleb wasn't a tourist. \n\nThe question was really whether or not I could handle it. It had been so long since I'd been with anyone that I was scared I'd be terrible at it. Then again, if anyone would be understanding, it would be Caleb. Biting my lip, I decided to take the plunge. \n\n\"You could make it up to me,\" I suggested.\n\nCaleb's laugh faded. The expression on his face was an echo of when I'd asked him if he'd ever had sex before, though slightly more subdued than the shock he'd shown that night. After a moment where I'm sure he was wondering if he heard me right, the shock was replaced by a wicked smirk. \n\n\"Did you lure me up here just to get in my pants, Maggie?\"\n\nI shrugged, trying to look nonchalant and failing miserably. I could feel the corners of my lips turn up as I blushed and looked away. \n\n\"You're the one who asked about orgasms. What's a girl to think?\" \n\nThe beer bottle clinked dully as he set it down on the coffee table. \"So, how can I make it up to you?\" \n\nI set my bottle down next to his. \"However you'd like.\" \n\nCaleb leaned forward and brought one of his hands up to my face. I shivered inadvertently as he tilted my chin towards him, and he paused. \n\n\"Are you sure?\" he asked.\n\nI was and I wasn't, but he didn't need to know that. My amount of certainty had nothing to do with not wanting him, and everything to do with the fact that I hadn't touched a man in years. I closed the gap between us without a word, pressing my lips to Caleb's. \n\n\"Yes,\" I mumbled against his mouth. \n\nHis kiss alone was enough to send a wave of desire through my body. As soon as I told him I was sure, his mouth started moving against mine, slow and soft at first. The last time I'd kissed Caleb, he'd been uncertain and timid. That clearly wasn't the case anymore. His tongue was insistent, its exploration of my mouth practiced and confident. \n\nThe hand on my chin moved to the back of my neck, his fingers toying with my hair as he deepened our kiss. For a while, we just kissed, reacquainting ourselves with the feel of our lips against each other. Soon, though, Caleb's hands began to wander. The hand on the back of my neck remained while his other hand came up to my shoulder, sliding down my bare arm as he kissed me.\n\nI couldn't help it and shivered again. Caleb pulled back, concerned.\n\n\"What's wrong?\" he asked. \n\n\"Nothing,\" I said, but my response must have been just a little too quick for him to believe.\n\nHe took my hand in his, lifting it in the air slightly as he looked at it. \"You're shaking.\"\n\n\"I'm nervous,\" I admitted. \"Not because I don't want this, but it's just been a while since I've been with anyone. Like, a really long while.\"\n\n\"How long?\"\n\nMy voice was quiet. \"A few... years.\"\n\nHis expression softened and he touched my knee softly. \"Are you...\"\n\n\"Don't ask me if I'm sure again,\" I snapped, and then grimaced. \"Sorry, I'm not... I am sure. I want this. I'm just scared I'm going to be bad at it.\" ",
        "\"There's no possible way you're bad at this.\" My hand was still in his, and he brought it up to his mouth and kissed my knuckles. \"Besides, I owe you a minimum of one orgasm. Don't worry about me. Let me take care of you.\" \n\nHe helped me to my feet and led me over to my bed. Placing a gentle kiss on my lips, he directed me to lie down. Heart racing, I lay my head on the pillow, my hair fanning out behind me.\n\nCaleb crawled towards me, and I looked up at him as he hovered over me. His eyes met mine, deep and intense and yearning. My lips were parted, soft breaths passing through them as I waited for his next move.\n\nHe looked at me for a moment, then kissed me again. I responded eagerly, his lips warm and smooth in contrast to the roughness of his beard against my cheek. Just as I was relaxing against his mouth and enjoying myself, he shifted, and his lips pressed against the corner of my mouth, then my jaw bone, then my neck.\n\nOnce his lips landed on my collarbone, he pulled back. \n\n\"Still okay?\" he asked.\n\nI nodded, and he kissed the same spot on my collarbone again before letting his hands trail down my body. Over the thin fabric of my tank top, he caressed my breasts, ribs, waist, and stomach, before his fingers slid beneath the hem. \n\nAnother involuntary shiver coursed through my body as his fingers walked up my skin. Feather-light touches traced from my belly button to the edge of my bra, climbing over the fabric between the cups and between my cleavage. He teased along the edge of the cup, his fingers tracing the skin there before they slipped into my bra. I sighed as his fingertips increased the pressure just the slightest bit, travelling deeper into my bra until he could hold my breast in the palm of his hand. \n\nAs soon as he had his hand cupped around my breast, his lips started moving again. He kissed along the collar of my shirt, tongue flicking out here and there to lick certain spots on my scorching skin. As he got to the spot where the collar brushed the tops of my breasts, I writhed just the smallest bit beneath him. My body wanted him, and it wanted him immediately. Beneath my jeans, my panties were catching the juices I could feel dripping from my pussy. \n\nCaleb paused again, eyes flicking up to meet mine.\n\n\"I'm fine,\" I murmured. \n\nThat wicked smirk flitted across his lips again. \"Good.\" \n\nMuch to my disappointment, he withdrew his hand from my bra. Pressing another kiss to the tops of my breasts, he brought his hands to the hem of my shirt again. His head followed, and as he lifted the shirt up, he put his lips on my stomach. His removal of my shirt was agonizingly slow, and the movement of his lips as it followed even more so. \n\nInch by inch, he revealed my torso, making sure no single spot of skin was missed by his lips. Once the shirt was finally over my head and his lips were back on mine, a hand slid behind me and fiddled with the clasp on my bra. I let him struggle for a few moments before shifting so I could twist my arm behind me and unhooked it with a quick snap, grinning as he shook his head.\n\n\"Never quite got the hang of those,\" he said.\n\nNot that it mattered, because he certainly had the hang of removing it once it was unclasped. As soon as it was off, he pulled back again, still holding my bra in his hands.\n\nI expected him to ask if I was still okay, but he didn't say anything. Laying there, topless in my jeans, I watched as his eyes devoured my body. My breath came faster as he shamelessly stared at my breasts, taking in the hardness of my nipples, eyes roaming over every curve, every freckle. \n\n\"Something wrong?\" I finally asked.\n\n\"Fuck no,\" he replied. \"Just trying to commit this view to memory.\" \n\nCaleb dropped my bra unceremoniously beside my bed. He kissed me, his hand moving between us to cup my breast again. After a moment, he kissed back down my chest, his lips kissing and sucking everywhere except my nipples.\n\nI had started breathing harder, and my nipples ached for attention. I think Caleb knew this, but he continued to tease me as his fingers mimicked the pattern his mouth was making. When I was at the point where I was ready to beg for him to touch my nipples, he finally took one of the hard little nubs in his mouth.\n\nA relieved moan escaped my lips as my head tilted back, my eyes fluttering shut and my fingers making their way to Caleb's head. He sucked and licked my nipple, his tongue circling it before he kissed his way to the other side and repeated the actions there. I thrust my breasts into his face, eager for more of his attention.\n\nHe gave it willingly, and every little ministration of his tongue against my breasts added to the hollow, insistent desire in the pit of my stomach. Wriggling again beneath him, I searched for some sort of friction to relieve the need between my legs.\n\n\"Be patient,\" Caleb muttered, his lips brushing my nipple as he spoke.\n\n\"Easy for you to say,\" I gasped. \"You have no idea how this feels.\"\n\nCaleb pulled back again, sitting up and raising an eyebrow at me. \n\n\"Is that so?\" His hand moved to my wrist and, grasping it lightly, he guided it to the bulge in his jeans. \"I have no idea?\"\n\nUnconsciously, I licked my lips as I touched Caleb's hard cock through his jeans. Moving my hand back and forth lightly, I watched his face change and his eyes flutter closed just the slightest bit. His hand still covered mine as I rubbed him, and I relished in the sudden shift of power I'd created.\n\nIt didn't last long, though. Caleb gripped my wrist again and pushed my hand away, pinning it back to the bed as he leaned over me again. \n\n\"Not yet,\" he said, his voice stern.\n\nHe let go of my wrist, unbuttoned my jeans, and then went back to work worshiping my breasts. \n\nHis tongue returned to my nipple, but instead of his hand mirroring the actions on my other breast, his fingertips skimmed along my stomach and slid past the unbuttoned jeans. A noise of longing left my throat as he touched my mound through the fabric of my panties, his fingers exploring the crevices and curves of the junction between my legs without passing that cotton barrier. He found the soaking spot below the entrance to my pussy, and I heard him make a satisfied noise as he traced back up my slit. \n\nMy throat was dry and I had to swallow before I could speak. \n\n\"Please, Caleb.\" \n\nThe hoarse plea didn't go unnoticed, and he slipped his hand into my panties. \n\n\"Oh!\" I exclaimed, a rush of air pushing out of my lungs as his fingers started moving.\n\nWhile he continued to devote his mouth to my breasts, his fingers worked magic in my panties. His fingers explored my slit thoroughly, tracing along the folds of my pussy and circling the swollen, sensitive bud. Another shiver ran through my body as he brushed against my clit, and I cried out in relief as he dipped his finger inside me. \n\nWhen I'd lost my virginity to Caleb, I'd let him touch me anywhere he wanted. His uncertain hands had run all over my body, unsure of what to do. He'd kissed my breasts then, too, and had pushed his fingers against my pussy, probably trying to remember something he'd seen while watching porn. At the time, as a virgin who had nothing to compare it to, it had felt amazing. \n\nBut, of course, it paled in comparison to what Caleb was doing with ten years' experience on top of that first time.\n\nHe fingered me slowly, his hand restrained by my panties. Once he was sure I was ready, he added a second finger. I cried out again as the hollow arousal in my core was filled, and whimpered when he eventually withdrew his fingers. Only for a moment, however. Almost as soon as he'd taken his fingers out of my pussy, he found my clit and began working tight circles over the sensitive bud. \n\nMy head tilted back as he touched me. Short, high pitched moans escaped my throat as the sensations of his mouth on my breasts and fingers in my panties drove me crazy. Caleb seemed urged on by this, and the pace at which he flicked his tongue on my nipple matched the way he was rubbing my clit.\n\nIt didn't take long for me to feel the telltale signs of an approaching orgasm. Pressure seemed to build up in my body, filling every inch of my skin from the tips of my toes to the top of my head. I was breathing harder, faster, and Caleb's fingers responded to the changes in my demeanour. He kept his pace, but increased the pressure on my clit.\n\nThe building orgasm boiled over and I came, writhing under Caleb's hands and mouth. White sparks flew through my eyes and I was distantly aware of the noises I was making, though I couldn't care less. After a few long, mindless moments of orgasmic bliss, my senses returned to me. Caleb's fingers still pushed against my clit, though the touch was light and mindful of how sensitive the spent little nub was. His mouth was no longer sucking my nipple, and his face nuzzled against my breasts as he waited for me to catch my breath.\n\n\"Holy fuck,\" I finally said, and he burst out laughing.\n\nRemoving his hand from my panties, he moved himself up to kiss me again. \"Sorry it was ten years overdue, but there's the orgasm I owed you,\" he teased between kisses. \n\n\"Consider the debt paid, and then some.\" \n\nHis tongue darted into my mouth, and the talking ceased as our heated kissing took priority. I knew Caleb's cock must still be painfully hard. I trailed my hands down his arms to the waistband of his pants.\n\nHis jeans were tight from the swollen bulge beneath them. As we kissed, I fiddled with his belt, managing to undo it and the button of his jeans. I unzipped his jeans carefully, and his cock seemed to push through the opening of its own accord, freeing itself from its denim prison. \n\nCaleb groaned as I gripped his cock, still encased in his boxers, and stroked tentatively. His lips left mine as he looked down to watch me handle his cock. I rubbed his cock a few more times, then began pushing his jeans down, followed by his boxers. There was a look of pure animalistic lust gleaming in his eyes just before I wrapped my fingers fully around him.\n\nHis cock was even better than I remembered it. Caleb was blessed with a beautiful cock, like something out of a textbook. Even having just had an intense orgasm, I felt my pussy throb with desire to have it buried deep inside me. Stroking him gently, I pushed my lips against his again. He let me play with his cock as we kissed for a good few minutes. After that, he seemed to have other plans.\n\nGently prying my fingers off his shaft, he gave me a final kiss before shifting on the bed so he was able to lean over me again.\n\n\"I want to be inside you, Mags,\" he said. \n\n\"I thought you'd never ask.\" \n\nHe removed his shirt first, then tugged on my jeans, bringing them down at the same time as my panties. I reached into the nightstand drawer and dug through to find a condom I knew was somewhere near the back of the drawer. His cock brushed against my thigh as he resumed his position between my legs, and he stroked it with a few long, powerful strokes as I handed him the condom. With practiced hands, he rolled it on, then positioned his cock at my entrance.\n\nWithout another word, he plunged into me, his thick head stretching my pussy lips. In unison, we sighed, and after a few tentative thrusts so I could adjust to him, he began a steady but deliciously satisfying rhythm.\n\nThe feeling of his cock inside me was intoxicating. The walls of my pussy gripped him as he sheathed himself inside me. Caleb's weight was heavy against me, my breasts squished against his chest. He propped himself up on his elbows to keep from crushing me, though my nipples still brushed against his skin. I wrapped my legs around his waist, urging him on harder, deeper, raising my hips to meet his as he penetrated me. I hadn't expected to come again, but the feel of his body against mine, his cock filling me, and his breath against my face was pushing me to the edge.\n\n\"I'm not going to last long,\" Caleb groaned. \"Maggie, you feel so good...\"\n\n\"Just a little longer,\" I gasped. \"Just fuck me a little bit longer...\"\n\nLooking back, I can see why that sentence achieved the opposite purpose. Caleb's eyes squeezed shut and he grunted suddenly, stilling inside me as he came. I could feel the twitches of his cock as he blew his load. \n\n\"Sorry,\" he murmured miserably.\n\nI refused to let it be over and pulled his face down to mine. \"Stay inside me,\" I demanded, and I wriggled my hand between our bodies as I kissed him.\n\nHe held still as I finished, fingering my clit rapidly as his cock softened inside me. It wasn't long before I came again, moaning against his mouth as my body shook beneath him. Gasping for air, my legs tight around Caleb's waist, my body tensed and relaxed.\n\nCaleb kissed me one last time before finally pulling out, my legs flopping to the bed as he moved from between my legs to clean up. I watched as he took off the condom and wrapped it up, directing him to the garbage can in the bathroom. When he returned, he lay back down beside me, his skin almost cool against the searing warmth of my body.\n\n\"Is this the part where I insist that I usually don't come that fast, even though both times I've been with you are probably the shortest I've ever lasted?\" he asked.\n\nI chuckled, then curled up against his chest as he wrapped his arms around me. \"I believe you.\"\n\n\"Fuck. That means you don't believe me.\"\n\nLaughing again, I swatted him playfully. \"You'll have to prove it to me some other time.\"\n\nThe arms enveloping me tensed momentarily. Caleb didn't respond immediately, and I felt my pulse quicken as I thought I'd said something wrong. \n\n\"I'd like that,\" he finally said.\n\n\"Sorry. I made you uncomfortable, didn't I?\" \n\nHis lips pressed against the top of my head. \"Not at all. You've just always been talented at saying things that surprise me.\" \n\nI didn't know what to say. Instead, I pressed my lips to the bare skin of his chest and closed my eyes, listening to his gentle breathing until we both fell asleep. \n\n**\n\nCaleb\n\nThere isn't anything quite like the feeling of waking up next to a beautiful and blissfully naked woman. \n\nIt took me a moment to remember where I was after opening my eyes. Beside me, Maggie was still asleep, making the tiniest snoring noises I'd ever heard. I was on my side, facing her, and she lay on her back, her hip pressed against my pelvis. Her hair was spread across the pillow, tangled and wild. She held the blanket with one hand, the fabric covering one breast, and her other hand flopped over her head on the pillow. I couldn't help but stare at her exposed breast, and my cock twitched as I stopped myself from leaning down to take the perky round nipple in my mouth.\n\nI wanted to touch her, but she wasn't awake yet, and I didn't know her so well as to assume that would be okay. My cock seemed to have other ideas, and though I tried to stop it, I started hardening against her leg as I watched her chest move up and down in soft breaths. \n\nTearing my eyes away from her gorgeous body proved difficult, and I had just managed to convince myself to roll over when Maggie's eyes fluttered open. She blinked a couple of times before turning her head towards me.\n\n\"Morning,\" she yawned. The blanket shifted as she stretched, sadly covering the exposed breast.\n\n\"Morning,\" I said back. \n\nThere was no way of hiding the erection pressing against Maggie's leg, especially as she stretched her body alongside me. As she finished, she rolled on to her side, facing away from me. \n\n\"Top drawer of the nightstand,\" she said sleepily. \n\n\"What about it?\" I asked.\n\n\"Condoms. They're in the top drawer of the nightstand.\" \n\nGrinning, I rolled over. It took a bit to hunt through the drawer, but I found a single condom hanging out beneath a vibrator. Biting back a comment on the toy, I withdrew the condom and closed the drawer. Once I suited up, I rolled back towards Maggie.\n\nShe bent her legs, pushing her beautiful ass towards me. I sidled up behind her, gently guiding her hips closer to me until the tip of my cock was nestled between her legs, eagerly searching for the entrance to her pussy. She was already wet, heat radiating from the tight hole between her legs. \n\n\"How are you ready for me already?\" I whispered, wrapping an arm around her body to grasp her breast.\n\nMaggie wiggled her ass, making me groan as my cock slid along her slit. \n\n\"You just seem to have that effect on me.\" Her voice was still dreamy, as though she was not quite fully awake. \"Now, fuck me, would you?\" \n\nI buried my face against her neck, inhaling the sweet scent of her hair as I reached down to guide my cock inside her. I entered her slowly, pushing forward gently, relishing the feeling of her pussy gripping every inch of me. Soft noises came from Maggie's mouth until my balls were pressed against her, my cock buried as deep in her as I could go. \n\nThe feeling was like nothing I'd ever experienced. Maggie's pussy was so tight, so wet, and so perfect. Her ass, thick and firm, was settled against me, and her body fit against mine like a perfect puzzle piece. I held her breast in my hand as I groaned against her neck, my other hand pressed against her back. \n\n\"You feel so good,\" I mumbled. \"Fuck, Mags. You're fucking perfect.\" \n\nI don't know if she responded. As much as I wanted to stay in that moment forever, with my cock buried inside her and her body pressed against mine, I couldn't hold myself back. \n\nMaggie moaned softly as I fucked her. As much as I wanted to continue holding her breast, I wanted to feel Maggie come on my cock, and there was no way I was finishing before her this time. I squeezed her breast one last time, then brought my hand between her legs.\n\n\"Yes,\" she breathed as my fingers found their mark. I rubbed her clit slowly, intensely, trying to match the pace of my thrusts. She reached up and swept her hair away from her neck, and I kissed along her shoulder and back as I burrowed inside her. My lips traced the tattoo on her shoulder as her breathing came faster and faster. I nipped lightly at the skin on her neck, and seconds later Maggie's cunt was even tighter around my cock. She cried out, her hips trying to buck against me as she came. I held her in place, my fingers still making circles around her swollen clit as I kept fucking her.\n\nShe came twice more in that position, one right after the other, all as I maintained a slow, intense speed. Each time, I held her still, preventing her from writhing beneath me. It was after the third orgasm that I had to stop holding back. \n\nI plunged into her deeply, withdrawing my cock almost completely before pushing inside her, fast and deep. Maggie panted each time I was fully inside her, as though I was forcing the air out of her lungs. My cock throbbed in anticipation with each hard thrust.\n\nSpooning her was amazing, but I couldn't get the speed and depth I was craving. Forcing myself to pull out for just a moment, I pushed Maggie on to her stomach. She slid her elbows beneath her, holding herself up as I mounted her and tunnelled back into her tight, dripping pussy. \n\nI wrapped my arms underneath her body, a breast in each hand as I unleashed on her. I didn't think this part would last long, especially as I listened to Maggie's moans while I fucked her. Her ass shook as I pounded her, my own orgasm closer and closer as I fucked the tight, willing body beneath me. \n\nEven without my hands on her clit, Maggie came again. Her wail was muffled by the pillow in front of her, and the telltale clenching of her pussy pushed me to the point of no return. I blew my load moments later, my heart pounding as I stilled inside Maggie's pussy, losing all sense of anything aside from the feeling of her cunt wrapped around me and the cum spurting from my cock. \n\nPulling out, I rolled onto my back, eyes closed as I regained my breath. Maggie shifted beside me, pulling her knees under her as she sat up on the bed. ",
        "\"Now it's a good morning,\" she said.\n\nI smiled, eyes opening to see her grinning down at me. Her hair was still wild around her head, but with her skin flushed, eyes bright, and lips swollen, she was about the most beautiful thing I'd ever seen in my entire life. \n\n\"Good late morning, in any case,\" I added, the clock on the wall just past Maggie's head indicating it was just after eleven. \n\nMy comment caused a major reaction. Maggie whirled around and looked at the clock.\n\n\"Oh shit. Oh fuck.\" \n\nI sat up as she bolted out of bed. \"What's wrong? Are you late for work?\" \n\n\"No.\"\n\nShe started dressing quickly, passing my clothes to me as she found them. I matched her pace, alarmed.\n\n\"I live above the bar, Caleb. My mom's going to be here to start opening in like twenty minutes. I don't need her to know that you spent the night.\" She glanced at me, her face twisted with guilt. \"I'm so sorry. I feel like an asshole for kicking you out.\" \n\nIt was a fair and reasonable point, and I said so. \"No hard feelings. Why don't you come by the cabin?\" I asked her as I pulled my jeans on. \"I can make you lunch, as long as you don't mind sandwiches.\" \n\nHer face brightened again. \"You know, I don't think I've ever seen your cabin.\"\n\nThat's how, twenty minutes later, Maggie was stepping out of her car in my driveway. She'd insisted on following me in her car, stating it would appear less strange to her mother. \n\nMaggie had never been inside the cabin before. As kids, my mom insisted we play outside all the time, and Josie had instructed Maggie not to go into any of the lake houses. I was never really sure why, but in any case, that was Maggie's first time seeing the cabin.\n\n\"Sorry for the mess,\" I said, leading her through the garage. \"I just got a load of supplies last week.\"\n\nMost of the lumber was stacked there, as well as the cabinets I'd bought for the kitchen. Inside, there were stacks of tile, boxes of hardwood, and miscellaneous supplies here and there. \n\nMaggie looked around, her face unreadable as she took in the cabin. \n\n\"It's not much right now,\" I said, slightly embarrassed. \"It's kind of old and shitty. But the renovations are going to be awesome. I'm tearing out all the cabinets and putting new countertops in the kitchen.\" I indicated the stack of hardwood in the living room. \"Redoing the floors, too. I got the hardwood already, but I'm going to see if my buddy can come out and help me put in heated floors. Need an electrician for that, I can't do the wiring myself.\" \n\n\"Wow,\" she said.\n\n\"Come outside on the deck with me.\" I led her through the cabin and onto the balcony. \"So this is here already, but I want to do a three-level.\" I drew the plans in the air, imagining them as I spoke. \"Kind of like a patio up there, that's off the master bedroom. Then stairs down to here, this would be the main level with the BBQ and stuff, then another set of stairs down to a terrace off the basement. It'll be a huge selling feature. I can make a fortune off this place.\" \n\nMaggie didn't say anything, just stared at the cabin as I spoke. \"What's wrong?\"\n\nShe shook her head. \"This just isn't what I pictured.\"\n\nI wasn't sure what she meant. \"It's not the fanciest house on the lake, I know that. But I'm going to make it a competitor. It'll be worth a fortune when I'm done.\"\n\n\"You seem to have it all figured out.\"\n\nFrowning, I turned to her. \"What's wrong? I mean, were you expecting some kind of mansion?\"\n\nShe finally looked at me. \"Caleb, this place is nicer than the house I grew up in. The way you talked about 'the cabin,' I thought it was like, a bare room with a fireplace and no indoor plumbing.\"\n\n\"It just seems like you're disappointed or something.\"\n\n\"What, you think I'd be impressed if you had a huge lake house?\" Maggie's voice was harsh, and her eyes seemed to flash with danger. \n\n\"No, I just mean that I know it isn't that great of a house and that it seems like you were expecting more.\"\n\n\"More? What, like you think I'm some kind of gold digger?\"\n\nI hadn't meant to upset her, and I wasn't sure what I'd specifically done wrong. \"I didn't mean to imply anything. I just thought, you know, compared to the other places on the lake\u2014\"\n\n\"The things people call their vacation homes could fit my mom's house inside them four times over. I didn't expect that your 'cabin' was actually a lake house.\"\n\n\"So you're upset that it's too nice?\"\n\nShe let out a dry laugh. \"No, just stupid of me to think you'd be different from any other tourist. You seem all down to earth but you have this place that's a friggin' palace and it's not good enough for you.\"\n\n\"Why are you upset?\" I asked. \n\n\"I'm not upset,\" she spat. \"Aside from you thinking I'm some kind of fucking gold digger. Forget it. This was a bad idea.\"\n\n\"Maggie, wait.\" She started storming around the side of the cabin to the front. \"Just a sec! Can we talk about this?\"\n\n\"No.\" Maggie crossed the driveway towards her car. \"I have to go. Bye, Caleb.\"\n\nShe slammed the car door and started the car, reversing down the driveway before I could even respond. \n\nAs the dust on the driveway settled, I finally managed to close my jaw. \"What the fuck just happened?\" I muttered.\n\nI slowly turned and headed back inside the cabin. No, not the cabin. The lake house.\n\n**\n\nMaggie\n\nMom hadn't seen me leave with Caleb, but Annie had.\n\n\"Who was the cutie?\" she asked as I walked through the kitchen at the start of my shift. \n\nI stopped in my tracks, alarmed. \"What?\"\n\nAnnie laughed, tightening her apron around her. \"Don't worry, your secret's safe. Just humour an old lady and tell me who the fine gentleman was.\" \n\nA tremble ran through my jaw as I tried not to clench it. Of course Annie had seen Caleb. She always got to the bar hours before anyone else to start prepping ingredients for the day.\n\nI sighed. \"A mistake, that's who.\"\n\nAnnie's smile faded and she put down the head of lettuce she was about to start chopping. \"Are you okay, Mags?\"\n\n\"I'm fine. Just a bad decision.\" I tried to force a smile, though I'm sure it was obviously fake. \"He was very sweet and very nice, but I can't see myself being with someone who complains his lakefront mansion is too old.\" \n\n\"Ah, a tourist.\" Annie nodded knowingly. \"I thought your mom's rules were\u2014\"\n\n\"\u2014always use a condom, don't fuck tourists.\" I flushed. \"Does it help if we were friends growing up?\"\n\nAnnie frowned. \"Really? Who was he?\"\n\n\"Caleb Vaughan.\"\n\nI jumped as Annie slapped the counter with her hand. \"Hot damn! I can't believe it. He certainly grew into his own, eh?\" \n\n\"I guess.\" I tried not to grimace and Annie patted my shoulder.\n\n\"It's okay, Mags. Things will work out.\" \n\nI didn't know who I was kidding or what I was thinking when I invited Caleb back to my place. I didn't know why I thought sleeping with him was a good idea. \n\nCaleb honestly thought that house was hideous. As he talked about all the things he wanted to do and replace and change, I couldn't help thinking he was just like every other person who owned property around the lake. And then he thought I was the one being shallow because I thought his house would be nice. Not only was that not the case, it really showed he had zero understanding of what life was like for normal people.\n\nIt was stupid of me to think he was different, stupid of me to fuck him, stupid of me to feel let down.\n\nHis presence back in town had injected some semblance of hope back into my life. Hope for what, I didn't know. It might have been hope for something more than living in a small town for the rest of my life. Hope that I might not be alone forever. Hell, it might have just been hope to have an orgasm that wasn't caused by a vibrating piece of silicone. But with hope came pain, and the reminder that Caleb and I were very different people. \n\nIt was better to cut my losses sooner rather than later. \n\nMom noticed that I was grouchier than usual over the next few days. I didn't pour beer over anyone's heads, but she did have to comp two bills after I told someone to make up their fucking mind, it didn't take all day to pick a burger. \n\n\"Goddamnit, Maggie.\" She had pulled me into the office again, having seen me flip off a customer on the security camera. \"What the fuck is going on with you?\"\n\n\"I'm on my period.\" \n\n\"Bullshit.\" \n\n\"Fine. Mercury is in retrograde and I'm an agent of its chaos.\"\n\nShe threw the bar towel that was hanging over her shoulder at me. \"Don't give me that crap. Mercury's retrograde ended at the beginning of the month.\"\n\nI stifled a giggle as she tried not to laugh. My mom was known for her love of astrology and crystals and all things mystic, but she was down to earth enough that she could laugh at it. \n\n\"Maggie, seriously. What's going on?\"\n\n\"Nothing.\"\n\nMom cradled her head in her hands. \"I can't ask you any more than I already have. Please be nice to the customers. Please stop swearing at them. Please.\" She looked up at me. \"I can't afford to keep covering your ass. Next time I have to comp a bill because of your behaviour, it's coming out of your tips.\"\n\n\"You can't do that. That's illegal.\"\n\n\"Watch me.\" Mom's eyes were hard, the kind of look that I knew meant she wasn't joking. \n\nSo, in addition to being grouchy, I had that threat looming over my head when Caleb walked into the bar one slow afternoon.\n\nIt was a windy day, and the gust of air that blew into the bar preceded his entrance. I turned on my heel before he saw me and ducked into the kitchen. It had been nearly a week since I'd peeled out of his driveway, angry and upset that he wasn't the person I had wanted him to be. Annie was washing dishes while Big Red cooked and covered the bar, where two local regulars were sitting. Mom was in the office, and I was the only waitress on the floor. \n\nMaybe I could pretend to get sick, I mused. Mom would go out and serve for a bit, and then hopefully Caleb would leave. I started towards the office to tell her I was ill when the door popped open.\n\n\"Maggie! There's a customer out there, go help him.\" \n\n\"I'm not feeling so good,\" I blurted. \"I think I might be sick.\"\n\n\"Bullshit. Get back to work.\" She gave me a pointed look, then gestured out the door. \n\nI vowed that the next chance I had, I would break the remaining two cameras, and walked back into the dining room with a sigh. \n\nCaleb was sitting at one of the high tops. He looked at me, a disgusting amount of hope in his eyes as I approached.\n\n\"Welcome to The Sea Glass, happy hour's on from now till six,\" I said blandly, slapping a menu on the table in front of him.\n\n\"Come on, Maggie,\" he said quietly. \"Can we talk? Please?\"\n\n\"Beach Burger's half price till five, too. I'll be back in a minute for your order.\" I turned on my heel and walked away, busying myself with something in the kitchen until I couldn't procrastinate any longer.\n\n\"What are you ordering?\" I asked Caleb when I returned.\n\n\"Just wait a second.\" Caleb's voice was quiet and his eyes begged silently. \n\n\"I can come back when you're ready.\"\n\nHe grabbed my wrist before I turned away. \"Mags, please.\"\n\n\"Don't call me Mags.\" I wrenched my wrist from his hand. \"And don't touch me.\" \n\n\"Just tell me what I did wrong. I didn't mean to offend you or upset you, and I think we're both overreacting to a misunderstanding.\"\n\n\"Just because you want an explanation doesn't mean you'll always get one,\" I said, my teeth clenched. \"That's how the rest of us live their lives. We can't always get what we want.\"\n\n\"I'm not... when did I ever give you a reason to think I was like that?\" He looked incredulous, and his voice lowered suddenly. \"Maggie, I don't think you're shallow or anything. I think you know that. I'm not asking you to stop being angry or to change your mind. I just want to know why you went from sleeping with me to screeching out of my driveway.\"\n\nI stuttered for a moment. Caleb held my gaze, and I could feel my cheeks flushing as I tried to come up with a response. \n\n\"You know what, Caleb, I was dumb for ever thinking you'd understand. You come from a life where you can just quit your job and renovate a fucking lake house to work through your feelings, hoping time away from the daily grind of getting anything you ever wanted will lead to some epiphany.\" I picked up the menu. \"I, on the other hand, am a fucking waitress. The fact that you'd think, even for a second, that your goddamn mansion wasn't 'good enough' for me is an insult. Now, why don't get out of my bar and my life?\" \n\n\"Maggie Myers, I swear to God.\" Both Caleb and I jumped as Mom stormed up behind me. \"Caleb, hon, good to see you again. Don't leave. Whatever you want to order is on the house. Maggie, office. Now.\"\n\nShe gripped my shoulder and practically dragged me from the room. As soon as we got into the office, she slammed the door.\n\n\"That was completely unacceptable and I am absolutely ashamed of you right now,\" she started. \"Goddamnit, Maggie! How can you\u2014\"\n\n\"You have no idea!\" My face was burning, and I threw the menu I was holding onto the couch. \"Mom, he's a fucking asshole!\"\n\n\"How is he an asshole, hmm? What exactly did he do that made you go from rushing out of the bar to see him, to telling him to get out of my bar?\" \n\n\"He's... when I... what does it matter? Why can't you take my word for it?\"\n\n\"Because you couldn't even tell him why you're mad at him!\" she exploded. \"I'm not a moron, Maggie! I heard what you said, and all I can damn well hope is that you were safe when you slept with that boy\u2014\"\n\n\"Mom\u2014!\"\n\n\"\u2014I'm not done! You're a grown woman, it's your choice what you do. But goddamnit Maggie, you need to start acting like a grown woman. What in the fuck did he do that was so bad that you just told him to get out of my bar?\"\n\n\"Nothing!\" I yelled. \"He didn't do anything specific, he's just another fucking rich, spoiled tourist. His 'cabin' is four times the size of our house, he's renovating it with more money than I'll ever see in my life, and it pisses me off because I thought he was different.\" \n\nThe words hung between us and Mom stared at me. I waited for her to start yelling at me again, my fists clench as I braced myself. What I wasn't ready for was her walking around to the other side of her desk, sitting calmly and upright in her desk chair, and then bursting into tears.\n\nMy mom was not the crying type. Any woman who lived life like she did didn't have time for tears. She wasn't close to her parents, so when they died, I didn't see her cry. She didn't have time to watch movies, and when she did, she watched comedies and not tearjerkers. The closest I'd ever seen my mother to tears was when I graduated high school and caught the slightest glimpse of wetness in the corner of her eye as I posed for a photo shaking my principal's hand. \n\nSo the sight of her in tears had me terrified. I froze in place, staring with my mouth open as she sobbed behind the desk.\n\n\"Mom, what... are you dying?\"\n\n\"Don't be stupid,\" she sniffed. \"I wouldn't cry over something as menial as that.\" \n\nI pushed the box of tissues towards her, still dumbstruck. \"What's wrong?\"\n\nShe blew her nose loudly, then pushed a letter towards me. \n\n\"We're losing the bar.\"\n\n\"What?!\" I snatched the letter off her desk.\n\nThere were a lot of official words and legalese in the letter, but between reading it and my mom's explanation, it was simple. The building that had housed The Sea Glass since before I was even born was old. It was built close to the lake, meaning the soil beneath it shifted. The foundation of the building needed work, not to mention the out-of-date wiring, plumbing, and structure. Mom owned the building, and if she didn't make major renovations and get it up to code, they were going to condemn it and tear it down.\n\n\"They can't.\" I slammed the letter back on her desk. \"They can't, Mom. We can fix it.\"\n\n\"We can't afford to,\" she replied. \"Mags, I can't pour my savings into it on the off-chance things will get better. We used to do good business, but not so much anymore. We're not trendy enough for the tourists, and we're getting too touristy for the locals.\"\n\n\"We can't give up.\" Tears were pricking in my own eyes. \"Can't we get a loan?\"\n\nShe shook her head. \"I can't get a big enough loan, and even if I could, I wouldn't be able to pay it back. I'm going to close down at the end of the month. I'll sell the land to the town and they'll tear down the building, then sell it to a developer. Hopefully, I'll make enough that I can retire early. Or maybe Steve'll let me work at his shop.\"\n\n\"Give me some time,\" I begged. \"How much do we need? How much will it cost to fix?\"\n\nI almost puked at the number she told me. \n\n**\n\nCaleb\n\nI didn't know why I thought Maggie would return from the office in a better mood and be willing to talk.\n\nProbably because I was an idiot sometimes.\n\nDespite Josie's insistence that I order something, I hadn't, choosing to wait for Maggie to come back. What I wasn't expecting was for her to burst from the back like a shotgun, untying her apron as she flew through the dining room. She was moving so fast, her hair fanned back from her face, and I caught a distinct glimpse of tears in her wide eyes. The front door opened with a slam and wind blew into the restaurant as she left.\n\nI jumped off the barstool and followed her out the front door. She had crossed the street, walking as fast as she could onto the beach. \n\n\"Maggie!\" I called out, though she either didn't hear me or didn't react.\n\nJogging across the street, I caught up with her as she sank down onto the bench where we'd chatted for hours the week before. \n\nThe beach was deserted, due to the lateness of the season and the strong wind. I approached her carefully, any frustrations I'd had melting away to concern. \n\n\"Are you okay?\" \n\nShe very clearly wasn't. \n\nThe last time I'd seen Maggie cry was when she was maybe ten or eleven. Young enough that we were still children, old enough that we were allowed to roam the town on our bikes. Her bike chain had slipped and she'd fallen on the pavement. I remember helping her up as she sobbed, gravel embedded in the palms of her hands and her knees, wailing as we walked to The Sea Glass to get help from her mom.\n\nThis time, she cried quietly. Her legs were pulled up on the bench and she hugged them to her chest as she cried into her knees. Tentatively, I sat beside her.\n\n\"Mags, I know you're pissed at me, but please tell me you're going to be all right,\" I said softly. \n\nA choked sound left her throat. I thought it was a sob, but it might have been a laugh. \n\n\"My mom's losing the bar.\" \n\n\"What?\"\n\nShe stammered through an explanation. The building wasn't safe, and they didn't have the money to fix it. \n\n\"That can't be.\" I shook my head as she finished. \"There's got to be something. You said your mom owns the land? How'd she buy it?\"\n\n\"She got knocked up by a rich tourist,\" Maggie said, her voice bitter as she glanced at me. \"Let's just say they paid her 18 years of child support in advance. She bought the bar and a house, that was it.\" \n\n\"Wait, what?\" \n\n\"To which part?\"\n\n\"Your dad paid your mom off?\"\n\nShe shrugged. \"His parents did. My mom was only 18 when she had me. He was around the same age.\"\n\n\"Did you ever find out who he is?\"\n\n\"Yep. She told me his name so I can avoid ever having to meet him.\" She shook her head. \"I should have taken up more of those old guys. Gotten a real sugar daddy. I could have saved the bar.\" \n\nMaggie had stopped crying by that point, though she was still hugging her knees to her chest as she stared out at the lake. I was struck again by how beautiful she was as her hair swirled around her head, her eyes shining with the remnants of her tears. I understood at that moment why she'd been upset with me, why she'd felt alienated as I talked about the lake house. Sitting next to me was a girl I'd grown up with, but had never known anything about. ",
        "\"Mags, I'm sorry.\" She glanced at me warily. \"I was careless with the way I talked and I didn't realize it was upsetting you until it was too late.\"\n\nShe moved her eyes back forward, glaring towards the water. \"I thought you weren't going to ask me to stop being angry.\"\n\n\"You don't have to forgive me if you don't want to.\"\n\nWe sat quietly on the bench, staring out at the lake and listening to the wind as it howled.\n\n\"Apology accepted.\" Her words were quiet and begrudging. \"More importantly, I'm sorry.\" She chuckled dryly, her voice thick as though she was going to cry again. \"I'm what they warned you about when they said 'don't stick your dick in crazy.'\"\n\n\"I don't believe that for one second,\" I said. \"Overdramatic, maybe. Crazy, no. And apology accepted.\" \n\n\"Definitely overdramatic,\" she agreed.\n\nAfter another moment of silence, I couldn't help asking. \"At the risk of making you mad, can I ask about something you just said?\"\n\nShe shrugged. \"Sure.\"\n\n\"When you said you should have taken up 'more' of those old guys...\"\n\nMaggie's shoulders tensed as I trailed off. \"I slept with a guy who liked to buy me things. And was older than me. And a little bit married. And had a lot of money. If I'd taken up even ten percent of the sleazeballs who'd tried to buy me over the years, I'd have enough to save the bar.\" She looked at me sidelong. \"Judging me yet?\"\n\nI shook my head. \"No.\"\n\n\"Yes, you are. But thanks for pretending.\" She looked back out at the lake. \"Doesn't matter. I don't think I have what it takes to be a hooker.\"\n\n\"I don't think that counts as prostitution.\"\n\n\"Close enough.\" She shrugged, finally unfolding her legs from in front of her, shivering as another gust of wind blew past her bare arms. \"I'm going to try to save the bar. Mom said she's got two months to make all the repairs. If I can get the money by the end of the month, we'll have time to fix it.\"\n\n**\n\nMaggie\n\nI worked my ass off for the next month.\n\nEvery night, I diligently counted out exactly what I needed to live off of from my tips, and put the rest in an envelope for my mom. I organized a huge dinner event and invited everyone in town, practically begging them to spare whatever they could to help save The Sea Glass. I played music at the event, and gave every cent I earned to my mom. I wrote a terrible but catchy song about The Sea Glass and shared the story online, hoping it would gain traction on social media. \n\nThe Sea Glass was all I knew. I'd never lived anywhere besides Marble Beach, and I'd never done anything besides work at the bar. As much as I wanted to leave sometimes, I had nowhere else to go. And even then, Mom had put so much work into the place that I couldn't bear to see it die that way. \n\nDespite not being the most popular person in town, the locals banded around me. The Sea Glass was our place, they said. Destroying the building would take away a Marble Beach landmark and take away even more of the charm that our little town had. \n\nCaleb came around the bar almost daily, but I barely had the time or energy to talk to him. Despite our apologies and acceptance of them, things were different. I was embarrassed about my behaviour, though he insisted we were okay, and I wasn't sure that I could get past it. Not that it mattered during that time. My life was consumed by saving The Sea Glass. If I wasn't working in the bar, I was trying to raise money.\n\nThree weeks in, I knew it was hopeless, but I refused to quit. I had barely made a dent in what was needed to save the bar, but I was too stubborn to stop before I absolutely had to.\n\nEven though I'd lived above the bar for years, Mom had rarely visited me. So when she knocked on my door one morning, I was astounded.\n\n\"What are you doing here so early?\" My hair was wild around my head, and I was still in my pyjamas. \n\n\"Early?\" Mom said. \"It's 11:30 in the morning.\"\n\n\"That's early for me. I work nights.\" \n\n\"We're not open that late.\" She followed me into the apartment and sat on my couch. \"I had a business meeting. Now you and I need to talk.\"\n\nMy heart dropped as I settled beside her. \"Mom, I still have a week. The video's online still, it might still go viral. I can tweet it to the Ellen show\u2014\"\n\n\"It's too late, Mags.\"\n\n\"Mom, no\u2014\"\n\n\"It's not what you think.\" She sighed. \"I sold part of the business.\"\n\nIt certainly wasn't what I was thinking. I was confused as all hell. Selling the business hadn't even been on the table.\n\n\"What?\"\n\nShe tried to smile. \"I had an interested investor. He's going to take care of the repairs and help renovate the bar. So, now he owns half the business.\" \n\n\"Who, Mom?\"\n\nShe paused. \"Caleb.\"\n\nI had thought she was going to say Tiny Steve. Or maybe a regular tourist. Hell, I would have been less surprised if she'd said my father's name. \n\n\"Caleb,\" I repeated. \"Caleb bought half the bar. Just... bought it.\"\n\n\"Hear me out\u2014\"\n\n\"So after all this, he's throwing his money around.\" A giggle burst from my lips. \"I guess I should be thankful.\" Another giggle. \"Is this weird? Don't you think this is weird, Mom?\"\n\n\"You can get past your issues with his money. He's a smart man, Maggie. He has a business degree, and apparently a soft spot for The Sea Glass.\"\n\n\"He's not a local. We've been working the 'local charm' angle this whole time and he's not even from here. What if he changes everything?\"\n\n\"He won't. He only owns half the business.\"\n\nI scoffed. \"Yeah, 'only' half. And now he's my boss.\"\n\n\"He's not your boss.\"\n\n\"He's half my boss, then.\"\n\n\"Maggie.\" Mom's voice was commanding, and I stopped my freak out. \"He's not your boss. He's your business partner.\" \n\n\"No, he's your business partner.\"\n\nShe shook her head. \"Sweetie, I've been doing a lot of thinking. It's time for you to take over.\"\n\n\"Nope. No way.\"\n\n\"You have to.\"\n\n\"I'm too young. I don't know how to run a business.\"\n\n\"You've been working at the bar since you were able to hold a tray. If you don't know how to run the bar by now, there's no hope for you. Anyways, Caleb will help with that side of it.\"\n\n\"And what exactly are you going to do?\"\n\n\"I'm going on a road trip.\" \n\nI'm not sure what the expression on my face looked like, but Mom laughed. \n\n\"I've been in this town my whole life. I've worked at this bar day in and day out since you were born. I was younger than you are now when I started running it, and everything turned out fine. So I'm taking a break. Next week, Steve and I are going on a road trip. It's still warm enough to take his motorcycle down south.\"\n\n\"Down south? How long are you going for?\"\n\n\"Well, until we can come back up after the snow melts.\"\n\nMy entire world had just changed around me, and my brain still hadn't quite caught up. I stared at my mom, lips parted as I tried to process everything.\n\nShe got up and wandered to my kitchen, busying herself making coffee. As the scent filled the room, my mind kept racing. When she came back with two mugs, I took it gratefully.\n\n\"Why didn't you talk to me before doing any of this?\"\n\nMy mom, the eccentric astrologist, the quick-witted bartender, the woman who loved to shake things up and throw people off, grinned at me. \n\n\"Mercury is in retrograde and I'm an agent of its chaos.\"\n\n**\n\nCaleb\n\nJosie was in town just long enough to help make the renovation arrangements, and then she was gone, along with our evening bartender. \n\nI knew she had told Maggie about my new involvement with the bar. Maggie had been avoiding me since it was announced, though it was probably for the best. I fully expected her to be upset with the change of events, and more so because no one had consulted her before the plans went through.\n\nThat wasn't by my design, though. I had planned on telling Maggie what I wanted to do, but she had been so consumed with trying to raise money for the repairs that it had been all but impossible to talk to her. Instead, I had asked Josie what she thought. \n\nShe thought I was crazy, first of all. But she asked for a night to sleep on it, and who was I to disagree? The next day, she showed up unannounced at the lake house.\n\n\"So this is the infamous cabin,\" she said as I opened the door.\n\n\"Mags told you about that, eh?\" \n\nJosie nodded. \"Let me see the place, will you?\" \n\nI led her inside, giving her the same grand tour I'd given Maggie, albeit with less detail. She was interested in the renovations, asking about paint colours and flooring types, about how I knew what to do and what experience I had. Finally, we were out on the balcony as I explained my dream for the three-level deck.\n\n\"That'll be one hell of a view,\" she said.\n\nI nodded. \"We spent almost all our time outside when I was here as a kid. Unless it was raining, we ate at that table there. The lake is the whole purpose of the house.\" \n\n\"Caleb, hon, I gotta ask one thing before we get down to business, and I hope you don't take it the wrong way.\"\n\nMy shoulders tensed as the idea that she might ask about me and Maggie popped in my head. \n\n\"Ask away,\" I replied, hoping my voice didn't betray my nerves.\n\n\"You've got money. You've got this house. You don't need to be part-owner of a dive bar. So, why are you buying out part of the bar instead of just donating to Maggie's cause?\"\n\nSome of the nerves dissipated as she asked. That was a question I had an answer for. \n\n\"I wanted to just give Maggie the money,\" I said. \"But I didn't have enough cash to just give her the amount you need. So I called my mom to ask if she'd lend me the remainder\u2014\"\n\n\"\u2014and she'd only agree to it if you were buying the bar, not just throwing money at it,\" Josie finished and I nodded. \"I remember your mom being a very smart lady. That was a good decision. So why not just buy me out entirely, instead of only owning half?\"\n\n\"I don't want to own the whole thing. It's your bar. I want to save it, not change it.\"\n\n\"And you think you can do that?\"\n\n\"I can make it work,\" I said. \"I need to hire people for the major structural repairs, but I've got connections, and I'll do the rest of the work myself. Then I'll just be behind the scenes. It's still your bar, you make all the calls.\" \n\n\"No,\" she said. \"The bar needs help from someone who knows what he's doing. You're a business guy, you'll help with that.\"\n\n\"If that's what you want.\"\n\n\"It's what I need. Or, more accurately, what Maggie will need.\"\n\nWe signed the paperwork the next day. The bar was close to being re-inspected, and we had to move fast. At that point, there was only a month and a half before it had to pass code. As soon as Josie had signed off on the sale, I was on the phone with Reid, an old pal from my carpenter days, to start planning the repairs. \n\nJosie left with Steve on their road trip only a few days later. They stopped by the lake house on their way out of town, acting like two kids on their honeymoon, and that was that. Why Josie trusted Maggie and me to take over her investment in The Sea Glass with little-to-no guidance was beyond me, but there we were.\n\nAfter their impromptu visit before they left town, I drove to The Sea Glass. It was another slow afternoon, and Maggie was wiping down the laminated menus when I walked in.\n\n\"Hey Mags,\" I said.\n\nShe glanced up, her face stony. \"Hey, Mr. Moneybags.\"\n\nI tried not to let the harshness of her words affect me. \"We should talk about the next steps.\"\n\n\"This is crazy, you realize that, right?\" She put the menus down with a loud clap. \"You realize this is entirely fucking insane?\"\n\n\"It's been a whirlwind, yeah.\" \n\nMaggie's eyes were wide. \"Last week I was a waitress trying to raise an insane amount of money. This week, my mom's gone, you bought part of my bar, and\u2014oh yeah\u2014it's my bar now, because my mom just hefted it on me before she took off for God knows how long. Caleb, this is fucking ridiculous.\" \n\n\"I know. But it's where we're at, so let's get to work.\" \n\nMaggie led me to the office, asking Big Red to keep an eye out for customers. She sat down behind the desk, looking uncomfortable. \n\n\"Here's the renovation plans and schedule,\" I said, passing her a stack of papers. \"I can't give you an exact amount of time, but I think we can swing it so that we only have to be closed for a week. Two at the most, but that's if something goes horribly wrong while they fix the foundation.\" \n\n\"What's this stuff?\" She was flipping through the papers and had stopped on a sketch.\n\n\"That's my plan for the renovations. Since we have to close anyways, we should update the look in here.\"\n\n\"No.\" \n\n\"Mags, your mom said the look of the place has never been updated.\"\n\n\"She's not the owner anymore. I am.\" She flipped through the rest of the package. \"I say no. We don't need all this. The bar is perfectly fine the way it is.\"\n\nI pressed my lips together. \"We've already approved all this, and a lot of what's currently there has to get torn out so they can fix the structure. We have to redo it anyway.\"\n\nShe continued to fight me on every possible thing she could. She hated every suggestion I made, from putting a new hood fan in the kitchen to refinishing the bar stools and high tops. By the time I had gotten to the end of the package, I was as grouchy as Maggie was.\n\n\"Look, you can hate all these ideas, but they're happening,\" I said. \"I don't need your approval, Josie already approved them.\"\n\n\"She's not here!\" Maggie snapped. \"She left this place in my hands and what I say goes.\"\n\n\"Half of what you say goes,\" I shot back. \"I don't want to swing my dick around and tell you that we're doing it my way or no way, but most of this shit is common sense and is required. And seeing as I'm putting the money up, I'm making the call.\"\n\n\"Oh, of course, so sorry, Mr. Moneybags, sir. Can you please forgive me? I only have worked here my entire fucking life.\" \n\n\"I'm not saying I don't want your help! Maggie, this shit would have to be done even if I wasn't here. If you'd raised all the money, you'd still have to do all this stuff.\"\n\nShe seethed quietly for a moment before pushing the stack of papers at me. \"Fine. You've got the money, you've got the business degree, you call the shots.\"\n\n\"I'm not\u2014\"\n\n\"Just answer me one thing,\" she interrupted. \"You came here to renovate your fucking mansion and then sell it. Now you're investing in my bar. So what's your game here, Caleb? What's your priority?\"\n\n\"The bar,\" I answered without hesitation, staring directly at her. \"I'm committed to this, Maggie. I wish you'd stop looking at me like I'm the enemy.\" \n\nA flash of what I thought might be guilt crossed Maggie's face, and she looked away. \n\n\"Fine,\" she said. \"Let's go with your plan. Just do it.\"\n\nI swallowed hard. \"There's one more thing.\"\n\n\"What?\" She glared at me, and I braced myself for the reaction I knew was coming.\n\n\"You can't live in your apartment while they're doing repairs.\"\n\n**\n\nMaggie\n\nI wouldn't admit it to anyone, but staying at my mom's place during the renovations was pretty nice.\n\nIt wasn't until I stayed there that I realized how loud my apartment could be. Even when I wasn't working, I could hear noise from the bar downstairs or people chatting in the streets. The building was old, the pipes made noise when the water ran, and sometimes the floor shook when the heat was running. Wind from the lake was constantly shaking the windows. \n\nMom's house was old, too, but it was quiet. The only sounds I ever really heard were the neighbours opening their garage doors or rolling their garbage cans out to the curb. My first night there, I slept better than I had in the years since I'd moved out. \n\nI had packed up a week's worth of clothes, my guitar, and a few other items to bring with me to Mom's place. We had announced that The Sea Glass would be closed for two weeks. Caleb was fairly certain we'd only need one, but he figured it was better to reopen early rather than late. And truth be told, that week off was the first real vacation I'd had in years. Aside from the occasional weekend trip to visit Alison or other friends nearby, I hadn't really left Marble Beach.\n\nI still didn't trust Caleb completely. The whole situation was ridiculous, and the people who I'd told about it agreed. Though, in fairness, most of them said that my mom was the craziest one in the whole situation, and that Caleb was doing the best he could and being far nicer to me than I probably deserved. \n\nBeing away from the bar and my apartment and the whole situation for a week had helped put that into perspective. I was still pissed that Caleb had gone behind my back and bought his way into my life without even telling me, but that was the hand I'd been dealt and I had to run with it. \n\nI hadn't heard from him at all that week, though I wasn't expecting to. He had brought in a crew of people to repair the major issues, and as soon as they cleared him to go in, he'd taken over the renovations. I had given him my keys to the bar and my apartment, told him to call me as soon as I could move back in, and that was that. \n\nMy time was spent reading, sleeping, watching trashy TV, and playing my guitar. For the first time in what felt like forever, I had the time to learn new music. I played for hours, stopping only so my fingers wouldn't bleed, and then going back to it.\n\nOn the fifth evening of my blissful, solitude-filled vacation, I broke my G-string.\n\nEvery guitarist ever has heard all of the jokes, innuendos, and anecdotes about the G-string. Not only is it named hilariously, but it also generally causes the most problems on a guitar. \n\nThe sudden snap shocked me and I stared at my guitar in disbelief. It had been a long time since I'd broken a string while playing, and the shock gave way to frustration as I realized I hadn't brought any spares with me. \n\nPutting the guitar in my case, I contemplated my options. I hadn't heard from Caleb yet, though at his earliest estimate it would be another two days before I could get back in my apartment. I could call and ask him if he'd let me in so I could grab the spare string. Alternatively, I could wait until the morning and drive the hour and a half to the closest city to get a new string. \n\nI had just put a load of laundry in, including my jeans, and was wearing an old T-shirt dress I'd had for years. If I went to see Caleb, I'd look like hell. Shaking my head, I mentally kicked myself. It didn't matter what I looked like. It was just Caleb. \n\nDriving to the city and back would take the better part of half a day, and did not appeal to me at all. The bar was just down the street, and I was sure Caleb wouldn't mind letting me in the apartment for a couple of seconds to grab a spare string. I grabbed my flannel jacket, shivered as the cold airbrushed my bare legs, and hopped in the car.\n\nWhen I pulled up, the parking lot was empty, and I frowned. It was early evening, and while theoretically, I knew that meant Caleb could have gone home for the day, his renovation plan had him working long hours so we didn't have to be closed longer than necessary. That, and I knew he had hired a few people to help the work go a bit faster. \n\nCould he be there without his truck? I put the car in park and went to the front door. It was locked tight, and I peered through the window. The lights were off, and I couldn't see anything inside. Maybe it was done, I mused, and that made me frown even more. If the renovations were done, why couldn't I go back to my apartment? \n\nAs I walked back to my car, I tried calling Caleb. The phone rang a few times, then went to voicemail. I hung up. Frustrated, I got back in the car and tapped my fingers on the steering wheel. \n\nI could feel the anger boiling in my stomach, and I took a deep breath. I wasn't being reasonable, I told myself. There was a perfectly good reason for Caleb to not be at the bar. Maybe he had to go into the city to get materials. Or maybe he was taking a dinner break. I couldn't expect him to be in the bar 24/7 trying to get the work done. He was still human. ",
        "However, it didn't explain why he didn't answer his phone. Putting my car in drive, I turned around and started driving towards Caleb's lake house. \n\nHis place wasn't technically in town, but it was only a five-minute drive from The Sea Glass. The vacation houses in his area were fairly private, with wide stretches of lake access and relatively secluded yards. It was a coveted area, and properties there very rarely went up for sale. \n\nThe driveway wound past some trees so his house couldn't really be seen from the road. As my car bumped through the gravel, I saw Caleb's truck parked out front. Reminding myself to be realistic and that Caleb deserved a break, I parked next to him and strode up to the front door. \n\nI knocked on the door three times and waited, shivering, wishing I'd waited until the laundry was done so I could have at least put leggings on. Just as I was considering ringing the bell, the door opened. \n\nAny potential anger within me faded completely as I looked at Caleb, and I internally congratulated myself for not being a complete raging bitch. Ragged was the only word I could think of to describe how he looked. His hair was tangled and sticking up on one side, and puffy bags hung under his eyes. He was shirtless, wearing baggy grey sweatpants that hung on his hips. \n\n\"Did I wake you up?\" I asked tentatively.\n\nHis voice was hoarse. \"Mags, please don't lecture me, I came back for a few hours' sleep while the paint dries. I swear to God I've been working my ass off all week.\" \n\nThe suppressed anger flared a bit in the pit of my stomach. \n\n\"I wasn't trying to be a bitch,\" I said icily. \"I was going to apologize for waking you.\" \n\nHe considered me for a moment, then looked down and shook his head. \n\n\"Sorry. Yes, I was sleeping. But I was supposed to get up half an hour ago and go back to do a second coat. I missed the alarm.\" \n\n\"You look like hell.\"\n\nHe frowned, his lips moving as he tried to respond.\n\nI grimaced. \"Sorry. I meant it like, are you okay?\"\n\nAgain he considered me, as if processing what I was saying. Finally, a grin broke out on his face and he laughed. \n\n\"Shit. I'm pretty much brain dead. If I look half as tired as I feel, I'm surprised you didn't run away screaming.\" \n\nI tried to hold in a laugh, looking down and smiling as Caleb shook his head. \"So you're mostly okay, then.\"\n\n\"Mostly okay,\" he agreed. \"Wait, what... why are you here?\" \n\n\"I was hoping you'd let me into my apartment. I broke a guitar string and wanted to grab a spare.\" I looked at his puffy eyes again. \"But honestly, don't worry about it. You should go get some sleep.\"\n\nHe was shaking his head as I finished talking. \"No, I have to get the last coat of paint done. Yeah, I can let you upstairs to get it.\"\n\n\"Caleb, seriously. I'm sure you can take the night off to sleep.\"\n\nHe motioned for me to come inside. \"Nope. I'm so close to being done. Just wait for a sec while I get changed.\" \n\nSighing, I stepped inside as Caleb jogged up the stairs. \n\n\"It works out great, actually,\" he called down. \"They're doing the final inspection tomorrow afternoon. I was going to call you in the morning, get you to come check it out. Just ignore that the wall needs one more coat and it's almost done. Oh, and the high tops aren't done. I was going to varnish them in the morning. Oh, and...\"\n\nHe kept talking as I looked around. The house was less crowded than the last time I'd been there. The stacks of boxes containing flooring and tiles were gone, as was the lumber he'd had stacked in the living room. Without the mess, the house looked even better. Through the windows, I could see the sun setting over the lake, and the warm glow filled the house with a dreamy haze of light. \n\nIt didn't look like he'd started the renovations, really, at least not on that level. I wondered where he'd put the materials. The garage, I thought. That's why his truck was parked outside. \n\nCaleb bounded back down the stairs, looking slightly more refreshed. He'd obviously splashed water on his face, and a few errant drops of water clung to the scruff on his cheeks.\n\n\"Come on. I think you'll like the new bar.\" \n\nLess than ten minutes later, I was nervously waiting behind Caleb as he unlocked the front door. My stomach was doing flips and I wasn't sure if it was from excitement or dread. He pushed the door open and stepped in, flicking on the lights just as I crossed the threshold. \n\nThe light spilled across the bar and I stopped in my tracks. \n\nIt wasn't what I expected. I didn't really know what I expected. But it was exactly what I wanted. \n\nCaleb had redone almost everything, and at the same time, it was still The Sea Glass. The light fixtures were new but still cast the same warm glow that our old fixtures had. The flooring was new, dark hardwood instead of the old vinyl tile that used to be there. It gleamed under the soft lights. Along the walls and pillars, Caleb had added dark wood panels and had painted the rest of the wall a lighter shade of the rich brown that used to coat them. \n\nThe bar front was redone, and new cabinets lined the wall behind it. Tiles lined the floor there, and a band of them ran around the front of the bar where the stools would eventually sit. The liquor shelves were empty, but he had added a feature wall of frosted stained glass that seemed to glow on its own. Sea glass, I realized. \n\nAs I stared around the room, it slowly dawned on me that I'd seen these materials already. \"Isn't this the stuff you bought for your cabin?\" I asked.\n\nCaleb shifted uncomfortably. \"Yeah. I hope you don't mind. With the time constraints, I needed to use stuff that was available and that I could get more of right away.\" \n\nI didn't respond, just finally took a step further into the room. In the corner where I used to play my guitar, a short platform was built.\n\n\"What's that?\"\n\n\"A stage.\" Again, he looked uncomfortable. \"The first night I came here, you were playing, but I couldn't see you. This way... well, if you still want to play, I mean... everyone can see you.\" I didn't respond and he cleared his throat. \"It's easy to take out, if you don't want it. Or just leave it and not use it as a stage. I figured we could use it as seating for a bigger table, like if we get a group of ten or twelve or something.\"\n\n\"You did all this in less than a week?\" \n\n\"I had help,\" he replied. \"And it wasn't too bad. Anything I could do before we shut down, I did. We had all the materials and stuff ready so we could get in and put it all together. Then they let me work up here while they were finishing up the electrical and stuff.\" \n\n\"I can't believe you did all this.\"\n\nCaleb cleared his throat again. \"So, does it look okay?\"\n\nI finally turned and looked at Caleb. He looked uncertain, almost terrified, as though I was about to lose it. I thought maybe he was expecting me to scream or gush or throw things, and I couldn't blame him one bit for thinking that. The fact that I was barely reacting scared him, but it couldn't be helped. My emotions were just catching up with me after the initial shock.\n\n\"Caleb, it's fantastic.\" \n\nCaleb blew air past his lips, finally smiling. \"You like it?\" \n\nEmotional catch up was hard, and as the numbness of my shock faded away, I felt my heart clenching. With a start, I realized I was about to cry, and I turned away from Caleb hurriedly. \n\n\"Is it just out here, or is the kitchen new too?\"\n\nHe'd redone a few things in the kitchen. New hood fan, updated electrical, and the countertops he'd intended for his own cabin. The office was the same, aside from a fresh coat of paint and the absence of the old security TV. \n\n\"I put a new system in. It's all computerized. The cameras aren't hooked up yet, but that can wait until the last minute,\" he explained as we wandered back into the front of the bar. \"I added a few more, too. There's one in the office now, since that's where the cash is kept.\" \n\n\"That's smart,\" I replied.\n\nIt was warm inside, and I'd taken my jacket off and laid it on one of the barstools while he showed me all the renovations and repairs. \"Shit, Mags. I'm so glad you like it. I was really worried.\"\n\nHe shouldn't have had to be worried, and a sense of guilt crept through me. Caleb was putting up with far more than he needed to, considering everything he was doing for me, my mom, and the town in general.\n\n\"I owe you an apology,\" I said. \"I've been an asshole the entire time.\"\n\n\"Don't worry about it.\"\n\n\"No, I need to worry about it.\" I turned to him, heart racing. \"It's not your fault my mom decided to throw this at me. You bought into the bar to help us, and even though you've never given me a reason not to trust you, I haven't trusted you. I'm sorry, Caleb. I'll try to do better.\" \n\nHe touched my arm, calloused hands warming my skin. \"I forgive you, and I know you're doing your best. It's okay.\" \n\nWhen we looked back on the next moment, I always insisted that Caleb had kissed me first, and he insisted I had kissed him. Truth be told, it was more likely a mutual action. However it happened, moments after I apologized, Caleb's lips were on my mouth and his hands were around my waist. \n\nHis body pushed firmly against mine as we kissed furiously. Almost instantly, I felt my body respond to the electricity between us. My pussy was dampening rapidly, and my nipples hardened as my breasts pressed against his chest. I reached up and tangled my fingers in Caleb's thick hair, as if he'd float away unless I held him to me. His mouth was warm, insistent and aggressive in taking what he wanted. \n\nNothing about it was soft, or innocent, or romantic. Urgency and brazen desire bounced between us as Caleb's hands moved up and down my body, grabbing me through the thin fabric of the T-shirt dress. His hands were rough from renovating the bar, and he smelled of dust and sweat and need. I'd created a vision of Caleb in my head that didn't match this version, and as he groped me through my dress, I knew it was my vision that was wrong. Caleb had never been a spoiled rich kid. He'd never been too good to hang out with us locals or to get covered in dirt as we rode bikes around town. He wasn't too good to work with his hands or fix the bar himself. \n\nThe version of Caleb with the rough hands and the demanding tongue probing my mouth was the reality, and I liked it.\n\nUntangling my hands from his hair, I brushed them down his body, feeling his muscles through his shirt. Caleb let go of me only to yank the hem of my dress up and slide his hands underneath it, caressing my stomach as the skirt bunched around my waist. \n\nMy body was on fire as he continued to touch me, his hands moving up to cup my breasts through my bra. My nipples were hard, and he pinched them through the fabric of my bra as he bit down on my bottom lip.\n\nI gasped and he released my lip from his teeth, sucking it gently as he continued to dig his fingers into my breasts. \n\n\"Tell me to stop,\" he growled. His voice was masked in yearning, asking permission as much as he was trying to communicate that he'd stop if I wanted him to. \n\nI wanted him\u2014needed him\u2014inside me. My pussy was dripping, a hollow ache in my stomach begging to be filled. \n\n\"Don't you dare,\" I breathed.\n\nCaleb groaned at my words, and he pushed me towards a bar stool. It tilted slightly as my ass bumped against it, and Caleb nudged me up so I was sitting on the edge of the stool. The dress was pooled around my hips and he practically tore it out of the way so he could yank my panties down. I leaned back, the edge of the bar digging painfully into my spine, so he had full access to my pussy. He shoved his hand between my legs and I cried out as he plunged two fingers inside me.\n\n\"You're fucking soaked,\" he grunted.\n\n\"I need you.\" \n\nHe withdrew his fingers and unbuttoned his jeans quickly, dropping them to the floor followed quickly by his boxers. His cock was jutting out, fully erect, and weeping pre-cum already.\n\nI licked my lips as I saw it, eager to have him inside me. \n\n\"Mags, wait.\" He stopped, his hands on my bare thighs. \"I don't have... do you have a condom on you?\" \n\nFuck. I didn't think I even had any left upstairs in the apartment.\n\nI stared at him for a moment, heart racing. \n\nI wanted him. I needed his cock inside me. I felt like I'd collapse in a pool of unrequited angst if I didn't have it.\n\n\"Don't come inside me,\" I said.\n\nHe looked down at my pussy, glistening with juice in front of him. He hesitated again.\n\n\"Are you sure?\"\n\n\"Are you?\"\n\n\"Fuck. Yes. I'm not... I don't have anything. STDs or whatever.\"\n\n\"Me neither. I'm on the pill, just... I trust you. Don't come inside me.\" \n\n\"Tell me to stop,\" he said again.\n\nI shook my head. \"Fuck me, Caleb. I need you. Please.\"\n\nHis hands pushed my thighs apart and suddenly his cock was buried inside me. \n\nI've always heard that sex feels better for guys when they don't have to wear a condom. It's one of the excuses they say a guy will use to get out of wearing one. I had never had a guy refuse to wear a condom, though, so I thought maybe they were just exaggerating. What I wasn't expecting was how different it felt to me.\n\nHis skin against mine, no barrier between the throbbing of his smooth cock and the sensitive walls of my pussy. I looked down and gaped at the sight of my pussy lips stretched around his bare cock. The heat, the sensation... maybe it was just the knowledge that there wasn't anything at all between us, but everything felt different. \n\nThat was the only moment during that night which wasn't about raw, lustful pleasure. Caleb's breath came in short gasps as we both stared at his cock inside me. He looked up, eyes full of desire and concern. \n\n\"Are you okay?\" he breathed.\n\n\"Yes. Are you?\"\n\n\"Yes.\"\n\n\"Good. Now fuck me already, would you?\" \n\nAnd just like that, we were back to being creatures of instinct. Caleb pounded inside me as I leaned back, my arms bracing me against the bar as he ravaged my cunt. My breasts were thrust forward, and he grabbed at them, squeezing hard through the fabric as he pumped in and out of my dripping pussy. \n\nThe feeling of his cock inside me was pure pleasure, and I knew I was going to come. The hollow ache in my stomach became a dam, and Caleb's cock was there to break it. As he dug his fingers into my tits, I grew closer and closer, high pitched cries coming from my throat as he embedded his cock inside me.\n\n\"Gonna come,\" I gasped. \"Don't stop, I'm so close.\"\n\nHe let go of my breasts and grabbed the bar behind me, leaning into me as he shoved his cock inside me. The slight shift was enough that his pelvic bone was rubbing against my clit, and I was almost there. Caleb pressed his lips to mine in a bruising kiss and that was it. I came hard, legs tensing around him, pussy clenching as I moaned against his mouth. Caleb didn't stop fucking me, keeping up his pace as I came around his bare cock.\n\nAs the waves of pleasure finished wracking my body, Caleb slowed. \"I'm close,\" he grunted. \"How... where?\"\n\nI pushed him away from me, slightly disappointed as his cock slid from my folds. Hopping off the barstool, I fell to my knees on the tiled floor in front of him. His cock was glazed with wetness from inside me, shining in the soft glow of the bar lights. I took him in my mouth immediately, tasting the sweet tang of my cunt on his throbbing cock. \n\nCaleb's knees almost buckled as I swallowed his cock, and his fingers wrapped through my hair. I lost all control of the situation soon after. His cock hit the back of my throat as he fucked my mouth recklessly. I braced my hands on his hips, focusing only on trying to breathe as he used me, his cock so deep that my nose kept hitting his pelvis. Saliva dripped from my lips as he face-fucked me, and sloppy, wet sounds came from my mouth as his balls slammed against my chin.\n\n\"Coming,\" he grunted. My nose was buried in his pubic hair and he pulled my hair tightly as I felt his cock pulse. His cum hit the back of my mouth and I tried not to gag as the hot spurts dripped into my throat. \n\nIt was probably the least sexy I've ever looked after a blowjob. I could feel wetness around my eyes and my nose was dripping. My chin was coated with saliva and as Caleb finally let go of my hair and took his softening cock from out of my throat, I coughed pathetically. He was looking down at me, the soft glow of the bar lights creating a halo effect around his head. \n\n\"Shit, Mags. Are you okay?\" He grabbed my hand, helping me to my feet. \"Did I hurt you?\"\n\nI shook my head, wiping my face with my hand. He tugged the hem of his shirt up, using it to help wipe some of the wetness away.\n\n\"Shit, I'm so sorry,\" he murmured as he helped clean me up. \"I wasn't even thinking. You just looked so hot. It was so hot. I'm so sorry.\"\n\n\"Stop apologizing.\" My voice was hoarse, and I giggled before clearing my throat. \"I'm not hurt. That was amazing.\"\n\n**\n\nCaleb\n\nIf I hadn't just blown my load down Maggie's throat, and if I hadn't felt so guilty for the way I used her mouth, I probably would have gotten hard all over again.\n\nMaggie was the most beautiful girl I'd ever seen. Something about seeing her beautiful face wrecked like that was incredibly hot. She wasn't crying, but wetness glistened under her eyes. Her hair was tangled from the way I had yanked it, and her chin was covered with spit that had spilled from her mouth as I fucked it. \n\nI almost lost it when I was wiping her face and she smiled, promising me she was okay. I wanted to push her over the bar and fuck her every which way I could. \n\nInstead, I pushed those feelings down and finished wiping the various fluids off her face before smoothing down her hair.\n\n\"We shouldn't do that again, though. Not using a condom, I mean,\" she said. \n\nI nodded. \"You're right. That was... well.\"\n\n\"Stupid but amazing. I know. But it was dumb.\" \n\nShe helped me wipe down the bar and the stool we'd fucked on, then pitched in to help put the last coat of paint on the wall. With the two of us working on it, it didn't take long to finish.\n\n\"So if I'm part owner, does that mean I can help myself to some of the beer that's in the fridge back there?\" I asked.\n\nMaggie laughed. \"Just don't drink us into bankruptcy. Go grab one, I'll clean up the trays.\" \n\nI grabbed a bottle for each of us and popped them open. Maggie was bent over when I returned, closing the lid on the gallon of paint. I tried not to stare at her ass, but it was a losing battle. \n\n\"Have a drink with me? We should be the first to have a drink at the bar,\" I said. \n\nShe joined me, sliding back onto the barstool I'd fucked her on. \"We're going to have to move all the stools around so I can't tell which is which, otherwise I'll never be able to keep a straight face when someone sits here.\" \n\nWe drank quietly for a moment, the air thick with the smell of paint. \"I want to help, Maggie,\" I said suddenly. \"I want The Sea Glass to do well.\"\n\n\"I know.\" She sighed, peeling the label from her bottle. \"I just don't want it to lose its culture. It's a part of Marble Beach, and a part of my family.\" \n\n\"I know. And that's why I refused to buy it outright. I can't make this place successful on my own. It needs you.\" She nodded, and I continued. \"But I have some thoughts, too. I don't mean to brag, but I did go to business school. I'm not just pulling ideas out of my ass.\"\n\n\"Tell me your ideas,\" she said. \n\nWe spent the rest of the night discussing the business, looking at ideas to help keep it focused on the locals, but not unattractive to tourists. Maggie squashed my idea of a loyalty rewards card but countered with the idea to send out coupons to local addresses to bring people from the community in. A few hours later, we were deep in our brainstorming session, paper spread across the bar as we planned out the next year."
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "business partners",
        "dual perspectives",
        "female orgasm",
        "friends",
        "oral sex",
        "passion",
        "romance",
        "romantic drama",
        "rough sex",
        "tourist"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-last-time-22"
}