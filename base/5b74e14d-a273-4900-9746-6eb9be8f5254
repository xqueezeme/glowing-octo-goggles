{
    "title": "There and Back Again Ch. 051-052",
    "pages": [
        "Chapter Fifty-One: Reunions\n\n Gearing up in the morning was somewhat depressing, overall; no more beds, no more clean linens, no more bathing chambers with hot water on demand. And it may have been illusory, but I'd felt safe, relatively, in Denerim, while being back on the road was decidedly...not. Not that being practically right under Loghain's nose was particularly risk-free, either, though. Whatever, at least there was a bed.\n\n I sucked it up and pulled on my gear, breastplate now not rubbing awkwardly, repaired bracer finally not leaving me feeling lopsided, and I spent a moment thankful for Wade. The helmet was still going to drive me crazy, but at least it could wait until after breakfast. I helped Alistair gear up -- the dragonbone was surprisingly light, compared to his old gear, but still awkward to do alone. It looked snazzy though, and I told him so. He grinned and blushed, as usual.\n\n Everyone else was stumbling into the dining room with backpacks on just as we were, and we all indulged in one more well-cooked meal before finally donning helmets and setting off. With so few people out and about so early, we made it unmolested to the market district. We had split up the list of things to acquire, and planned to divide into two groups to get everything done quickly. Alistair and I ended up with Leliana accompanying us. For once, I actually carried my own backpack -- all of the bags were largely empty since we'd sold our stash of junk, so mine had only my Earth clothes and gadgets.\n\n The changes to the market district were noticeable immediately as we turned the corner and it came into view. The first was the general lack of mercenaries standing around doing nothing. There were a few small groups of armed men, but they actually appeared to be patrolling, sort of, and were generally better equipped than the ones I'd seen on previous visits. The only other armed or armoured people were alone, and seemed to be actually shopping, or personal guards for those who were. There definitely weren't any who seemed to be collecting money from their 'employers'.\n\n The merchants seemed less jumpy than previously. Some were actually smiling, and none stared at us with the fear we'd seen earlier in the week. Sergeant Kylon was standing at the centre of the busy area, looking around with a satisfied expression, shouting orders to another man, who seemed to be sending runners and relaying orders to those on patrol. It was organised, quiet, and unobtrusive. There were even nobles wandering about shopping; I wondered if one of the pretty doll-like women was Habren Bryland, and if so, whether Zev -- or Aedan -- would pick her pockets. I grinned at the thought. I wanted to ask Alistair what was going on, but with helmets on and errands to run, I figured it would have to wait.\n\n Leliana popped into the shoe store and the tailor's shop where she'd ordered me the gown, coming out with wrapped parcels tucked into her pack. We picked up some spices, some bread and cheese, some clothing changes for everyone -- apparently Leli had ordered them a few days prior -- and some cookies, for Sten. I stopped at a jewelry stand and bought Morrigan a gold necklace with a tear-drop shaped pendant of what might have been amethyst, and a small collection of beautiful coloured stones for Shale. It was clich\u00e9, but if it would help, I was willing. When we met back up with the others, Aedan had picked up some sort of amulet for Dariel, as well as food stuffs, and sharpening stones for our weapons. With packs full of supplies, we finally got ready to leave Denerim.\n\n The gate was quite busy, with wagons, carriages, and plenty of people on foot, and we all stuck close together to avoid separation. My hand was firmly gripping Alistair's shoulder, as he took the lead parting the crowds and finding us a path out. Aedan's hand was on my shoulder in turn, until we were a few dozen yards outside the city, when I heard him mutter something unintelligible and let go. I turned in time to see him spin, dagger drawn and held to the throat of an armoured man in a full helmet, who had evidently been following us. Alistair had half-drawn his sword, I saw the glint of steel in Zevran's hands, and even Wynne had gripped her 'walking stick' in a threatening manner when the figure reached up nonchalantly and pulled off the helmet.\n\n \"I am pleased to see you remain vigilant. You've got me, I surrender.\" He smirked.\n\n It was almost comical as everyone drew in a sigh of relief at the sight of the dark-skinned, clean-shaven man of obvious Rivaini descent, and then chaos reigned as Alistair tried to hug him, Aedan scolded him for sneaking up on us, and everyone else just put away their weapons.\n\n After a few minutes of nodding, vaguely, in Aedan's direction and clapping both Aedan and Alistair on the back in greeting, he finally turned to me and the rest of our party.\n\n \"Tomas.\" I smiled, though I knew no one could see it. He hugged me, and I chuckled. \"It's good to see you again.\"\n\n Greetings finally complete, he put his helmet back on and gestured to Aedan. \"Mind if I follow you for a while? I'm assuming you have a camp somewhere, perhaps we can talk there?\"\n\n We all headed out, Aedan leading as we turned off the road to cut cross-country towards where Morrigan and the others waited. Before long, we were out of sight of the walls and the road, and we all stowed our helmets. I breathed a sigh of relief; full helms are stuffy. Alistair reached back to take my hand, and I saw Tomas notice it with a small smile. He told us, as we walked, that he had been scouting in the Wilds, but had yet to locate the Archdemon. The horde had been spreading, more slowly than he expected but still quickly enough to cause problems, and was threatening the southern edge of the Bannorn. The Wilds had been virtually swallowed by the Blight.\n\n We updated him on finding the Dalish and securing their aid, killing Flemeth, and the ambush that brought us Dariel. He was introduced to Gorim, who vaguely recognised him from official Grey Warden visits in Orzammar years before. We didn't get into the details of why Gorim was with us, deciding to save that for back at camp, so we would only have to tell the story once.\n\n I was smiling 'til my cheeks hurt; I was hand-in-hand with the man I loved, spending time with my brother, and my surrogate father, sister, and grandmother. I couldn't have been happier. I giggled and skipped as I walked, and everyone else's pleased expressions mirrored my own. We were all energetic, from having a rest the day before, and we made good time.\n\n About halfway to the campsite, we noticed a suspiciously large bird flying overhead; in moments, Morrigan landed beside us and changed back to human form. It was a fascinating process to watch, as always; she shimmered and stretched, and suddenly there was a scantily-clad woman walking with us. She stepped up beside me, and I released Alistair's hand to pull her into a hug, which she tolerated impatiently.\n\n I was surprised when she just kept walking with us; I'd have expected her to change back and wing off, preferring to be alone. When I said as much, she flushed slightly and looked away before replying, quietly enough that no one else could hear.\n\n \"I do not always wish to be alone. I have had enough solitude in the last week, and your company is preferable to that...that...cretin the Warden saddled us with.\"\n\n \"Oh, dear, has Dariel been pestering you?\"\n\n \"He will not desist! Teach me, talk to me, tell me about your mother... He makes the Warden look positively taciturn. I spent half of the past week alone in a tree, avoiding him. I had not realised what a benefit it was that you knew much about me prior to our first meeting, so I had fewer questions to answer.\"\n\n I chuckled. \"I'm not surprised. He looked a bit...smitten, before we left. You can't blame him -- you are a beautiful woman. And probably the only female apostate he's ever met. Possibly the only woman he ever talked to -- all of his mercenary friends were male.\"\n\n She sniffed. \"It shows. He has no idea how to talk to a woman. I'd prefer being propositioned by the Crow again to his pathetic attempts at flirting.\"\n\n I choked out laughter as Zevran, his timing impeccable as always, spoke up from behind us, where he'd apparently been listening. \"I am certainly happy to oblige, oh beauteous Witch; Aedan has expanded his horizons once, I'm sure I could convince him to try it again...\"\n\n Morrigan looked both intrigued and disgusted, which made me laugh harder.\n\n \"Or perhaps I could just take the little elf under my wing, so to speak, and teach him a few things about how to more productively water a mature flower such as yourself, no?\" He reached out as if to put his arm around her shoulders.\n\n \"Touch me again, Assassin, and we shall see whether you remain as effective in a fight with only one hand.\"\n\n The two of them continued bickering, mostly good-naturedly, and I grinned and left them to it. Instead, I elbowed my way in between Aedan and Alistair, who were walking with Tomas.\n\n \"So is one of you going to tell me what the hell that was all about in the Market?\"\n\n Alistair flushed and looked away, while Aedan gave me his best innocent look. \"Whatever are you talking about, dear sister?\"\n\n Tomas smirked, so even he was in on the joke, and I was annoyed. \"You know damn well. All the mercenaries were gone, and the guards suddenly had patrols? You expect me to believe you had no part in that?\"\n\n Aedan smiled. \"I don't. Alistair told you about the Blackstone Irregulars -- we just helped them out a bit. We 'encouraged' some of the dumber, meaner mercs to go elsewhere, and the smarter ones we sent to the Irregulars or the guard for recruitment. Which reminds me.\" He fumbled in his pack for a moment, and handed me over two coin purses, followed by handing one larger one to Alistair and two more to Tomas. \"We should split the coin in case someone gets robbed.\"\n\n I looked into the top of one of the purses -- it was filled to the brim with gold sovereigns. I quickly tied it shut again, putting one into my pack and sticking the other behind the little sash I wore as a belt. \"Maker's Breath, Aedan, where did you get that much coin? What did you do?\"\n\n He grinned cheekily. \"We might have sort of...assassinated the leaders of the various mercenary groups and stolen their payroll. As encouragement for the mercenaries to find other employment.\"\n\n Tomas looked concerned. \"Aedan...\"\n\n \"Don't worry. No one knows it was us -- they don't even know we were in town. We apparently got a reputation -- they think it was one person, and they're calling him the 'Dark Wolf'. And we tried to give the coin back to the merchants in the market, but we had no way of knowing how much to give to each. We spoke to a few who we thought might be a little more honest, and they all refused to take any coin. They were so happy to have the mercenaries gone, they didn't even care. So I gave half of it to Sergeant Kylon to hire some guards, and made Kylon promise to keep the mercs out of Denerim. With all the nobility scared, he didn't have enough man-power to keep the peace. Now he does.\"\n\n I whistled. \"This was half of the gold? Wow. Extortion pays well.\"\n\n \"Um. About a quarter, honestly. I gave another quarter to Hahren Valendrian for use on supplies to keep the plaque at bay. I can't help but notice you're not...yelling at me. Not that I'm complaining, mind you, but I thought you'd be angry.\"\n\n \"I'm a little miffed that you didn't just tell me what you were doing. I wouldn't have wanted to participate, but I'm not so fragile that I can't stand the truth. I'm not angry you took down those gangs. They deserved their fate, really. And I'm thrilled you managed to get into the Alienage and help out. It's truly despicable how the elves live there.\"\n\n Aedan stared at me like I had three heads, and then strode off to walk by himself for a while, muttering under his breath. Alistair and I exchanged glances, and I started to giggle. \"Good to know I'm not always predictable.\"\n\n \"I'm just hoping you aren't mad at me.\" Alistair looked nervous.\n\n \"About not telling me? I'm guessing Aedan made you promise not to. Would you have told me, if he hadn't?\"\n\n \"Maker, yes. I hated lying to you.\"\n\n \"Then I'm not mad at you.\"\n\n I went up on my tiptoes to kiss my templar on the cheek, and he responded by wrapping his arms around my waist and swinging me around while I squealed and giggled. He finally put me down, kissing me softly and brushing my hair out of my eyes. \"Have I told you lately that I love you? Yes? Well, it won't kill you to hear it again, will it?\"\n\n Tomas smiled. \"So you two managed to work through your...differences?\"\n\n I laughed, disentangling from Alistair. \"If you mean we stopped being complete idiots, then yes.\"\n\n He put one gauntleted hand on each of our shoulders. \"I'm pleased. You both deserve some happiness.\" We both blushed, but Alistair took my hand again. \"I have to ask, Sierra. I've heard you do it several times, but why do you refer to Aedan as 'brother'?\"\n\n \"Oh! I forgot we didn't tell you. Um. So back where we found the Sacred Ashes? We met the...spirit, I guess, of Bryce Cousland. He told me that Aedan and I were twins, but that somehow my soul, or whatever, got born on Earth instead of here. We're not clear what happened to the body that was born here, but the Couslands never told Aedan about me because they didn't want him to think he was competing with a ghost for their affection. We had figured out a long time ago that we had the same birthday.\"\n\n He stared at me for a moment, and I wondered if he was looking for a family resemblance. He opened his mouth as if to speak, but nothing came out for a few humourous moments.\n\n He finally got his voice working again. \"That...explains a few things.\"\n\n \"Yep. But brings up even more questions. Like how I ended up there, how I'm here now, and whether I can manage to stick around. I made a whole list of questions we can't answer back in Denerim.\"\n\n \"So...you're a Cousland.\"\n\n \"Well, sort of, I suppose. Not that anyone will believe it. I have dark hair, but that's where my resemblance to Aedan or Fergus ends. And why would anyone believe the crazy girl is a Cousland they'd never heard of before? I think I'll just stick with Jones, for now. Besides, I earned it.\"\n\n Tomas and Alistair both looked confused. Tomas spoke. \"Is it some sort of reward?\"\n\n \"Nooo. No. Um...well, I told you I was raised as a foster-child?\" Alistair nodded; I spent a few moments explaining that to Tomas. \"Most foster-kids still have their names. Their parents are known, and they keep the names they were born with. I didn't have a name. The social workers who dealt with me as an infant had to name me. Most baby girls with no name in the system are called Jane; I have no idea how I ended up as Sierra. But if your parents aren't known, they give you the last name Jones. It's supposed to be a common name, but it isn't, not really. And everyone in the foster system knows that if you're a Jones, you were abandoned at birth, that your parents wouldn't even name you. It was a way that the other foster kids could discriminate. 'My parents may be criminals, but at least they wanted me enough to give me a name.' There was a hierarchy, and the Jones' were always at the bottom of it. I didn't care, really, but I made it a point of pride for myself and the other Jones' I ran into. No one could use it to pick on us if we were proud of it, if we refused to be ashamed of it. Now, I'm rather...attached to it, I suppose.\"\n\n Alistair kissed my hand, and Tomas patted me on the shoulder again. They obviously didn't know what to say, but that was okay. There was nothing to say. It was part of who I was; I didn't want pity because of it. That they accepted me was enough.\n\n We made it back to the campsite a few minutes later, and I greeted Shale, Sten, and Dariel enthusiastically. Sten almost smiled at me; I just about fell over in surprise. Dariel was introduced to Tomas, and everyone was introduced to Gorim, and then we settled in to discuss our next moves.\n\n The plan was still to go to Soldier's Peak and then Orzammar, and Tomas decided to accompany us. He wanted to see the Peak, and he was hoping to get some idea of darkspawn movements from the dwarves. He was very interested when I mentioned that we might actually see the Archdemon in the Deep Roads.\n\n I mentioned my concerns about Wynne, Leliana, and Morrigan accompanying us into the Deep Roads, and Tomas grimaced. At Alistair and Aedan's confused look, I sighed, sat back, closed my eyes, and tried to remember.\n\n \"First day they come and catch everyone. Second day they beat us, and eat some for meat. Third day the men are all gnawed on again. Fourth day we wait, and fear for our fate. Fifth day they return, and it's another girl's turn. Sixth day her screams we hear in our dreams. Seventh day she grew as in her mouth they spew. Eighth day we hate it as she is violated. Ninth day she grins and devours her kin. Now she does feast, as she's become the beast.\"\n\n Tomas spoke. \"Broodmother.\" He glanced around at the group, whose expressions ranged from disgusted to terrified, grimaced again, and continued. \"Have you never wondered how darkspawn reproduce? There are no female darkspawn.\"\n\n \"We will see one in Bownammar.\"\n\n Tomas nodded slowly. \"They take females. They kill the men, but the women they...change. They become broodmothers. Massive, tentacled creatures that give birth to thousands of darkspawn. Human females give birth to Hurlocks, dwarves to Genlocks. Elves spawn Shrieks, and Qunari produce Ogres. It's supposed to be a secret, but honestly, it's a secret even I don't understand. Everyone should know. No female, of any race, should ever go near the Deep Roads.\"\n\n Gorim spoke. \"Selfish bastards! They knew, and they didn't tell the dwarves? The Legion takes women! We have to tell them. The Assembly, the Legion.\"\n\n \"You're not going into the Deep Roads either, Sierra.\" Aedan looked nauseous.\n\n I laughed drily. \"I don't have much choice, do I? If I don't go with you, I'll just disappear and end up alone somewhere in the Deep Roads. That's not an improvement.\"\n\n \"But...\"\n\n \"I know, Aedan. Not my idea, remember?\"\n\n He sighed, and Alistair gripped my hand harder. Suddenly Gorim spoke up.\n\n \"What do you mean, disappear?\"\n\n We spent a few minutes convincing Dariel and Gorim of my identity; neither of them had heard the full story about me. I didn't think it worked, entirely, though the fact that everyone else, even Shale, now accepted it as fact helped. They'll believe soon enough - I'll disappear and they won't have much choice.\n\n They asked some rather intelligent questions. Dariel asked about himself in the 'performance', and I was stumped. It must have been something to do with the butterfly effect of me showing up in Thedas - Loghain got frustrated faster, and ordered a second assassination attempt. I couldn't explain it. And where he would have been if he hadn't met us, I couldn't even guess.\n\n We finally packed up the camp and headed out onto the main road leading to Soldier's Peak. Talking to Aedan, he explained that the old Warden Base was probably technically in the Arling of Amaranthine, but because of its location on a mountain top and the fact that it belonged to the Wardens, it was not part of a vassalage. That meant it didn't have any way of sustaining itself, and would need to rely on gold from Weisshaupt to buy supplies, since it had no arable land.\n\n We discussed the plans, both for Avernus and for closing the tears in the Veil. I felt Avernus should be allowed to continue experimenting, just not allowed to use blood magic anymore. Aedan and Alistair were a bit more disgusted, but Tomas was pragmatic about it. He agreed that killing him would be a waste of the research he'd already done, that it would be making all those men's deaths meaningless. I had personal reasons for wanting him alive - I hoped he might know something about how I'd gotten to Thedas, as well as hoping he knew some way to extend the time before a Warden's Calling. He'd managed to put his off for centuries with blood magic; maybe he'd learned a way to duplicate it for those without. In the end, both Aedan and Alistair conceded the point, if reluctantly.",
        "Chapter Fifty-Two: Modern Technology\n\n We had another two weeks of walking ahead of us before we would arrive at the base of Soldier's Peak. I wished for a car, or an airplane, for perhaps the millionth time since arriving in Thedas. Even a horse, although I understood from Tomas that you didn't actually get much further per day on a horse than walking, you just did it with fewer blisters on your feet, and more on your butt, and you could carry more stuff. Horses can sprint well, but when needing endurance, their walking speed apparently isn't that fast. And in Thedas, only the wealthiest of nobles could even afford them.\n\n When I mentioned vehicles, everyone was fascinated, and I ended up spending most of the first day trying to explain engines and fuel sources, trucks and trains and helicopters. Sadly engineering wasn't my area of expertise, and my explanations were weak at best. The skeptical look on the faces of Gorim and Dariel were hilarious; everyone else just looked like they had a headache from trying to imagine it.\n\n I'd handed the gifts I'd bought for Sten, Shale, and Morrigan to Aedan to give out. Everyone seemed touched when he gave them away, and I smiled.\n\n I spent some time over the next few days catching up with Morrigan. It didn't take her long to figure out that Alistair and I had finally 'done the deed', and she quietly teased me about it for a bit, which was amusing. I'd never spent much time walking with her -- usually she was flying overhead -- and I guessed she must have been lonelier than she'd admitted over the last week. In addition, apparently walking with me was a bonus for her because it kept Dariel away; he still wanted nothing to do with me.\n\n I noticed Wynne walking with Dariel much of the time, and at some point she must have offered to teach him, because they were deep in discussion on the nature of magic. I didn't understand much, but it seemed that their healing methods were very different, and Wynne was most eager to learn from Dariel as well. I smiled; it was the most animated I'd seen Wynne since she'd joined us. It appeared she was a good teacher. I could see why Irving had wanted her to stay in the Tower after we rescued it from Uldred. And Dariel's condescending pity towards the older Circle mage was starting to thaw a little, too.\n\n I walked with Sten and even Shale, for a bit; neither had much interesting to say about the past week, but both seemed happy enough to see me, even if they weren't big talkers. Gorim had gotten cornered by Bodahn, and was riding the cart, discussing something or other with the merchant. His expression was distant, but tolerant; he hadn't really opened up to anyone yet, and I wondered if he would. I couldn't imagine what he was going through.\n\n When I walked with Leli, she started pestering me about songs from Earth, and I wracked my brain to think of ones I could teach her that would not only make sense in Thedas but also weren't embarrassing if she sang them. Almost everything appropriate I could think of was a love song -- or perhaps that's just where my mind was at. I sang her \"The Rose\", by Bette Midler, and \"River of Dreams\" by Billy Joel before Alistair finally joined us, silencing me. I loved Alistair, but I wasn't about to subject him to my singing this early in the relationship.\n\n But most of all I walked with Alistair, hand-in-hand, talking about nothing and everything. Sometimes one or another of our companions would join us, other times they left us alone. I felt drunk half the time from giggling until I was breathless; Alistair's running commentary about what the rest of the group were doing or thinking kept me in hysterics for hours.\n\n The first night, Alistair and I resolved to be courteous, and not have sex after we went to bed. Lying in the dark with him right there, wanting him, knowing he wanted me, was the hardest thing I think I'd ever done. I slept poorly, and even he wasn't as cheery in the morning as usual. The next night we decided to just try not to make any noise after we retired to our tent. When we woke to find visible bite marks in his shoulder where I'd tried to silence myself, we decided we needed a better option. Alistair decided to ask Wynne about silencing spells on the third day, so I was skipping along between Aedan and Duncan, walking a few yards ahead of my templar and the mage, when I heard sputtering from behind.\n\n I turned just in time to see Alistair's mottled face as he shouted, \"Andraste's Flaming Sword! I know where babies come from!\" and then stomp away looking mortified as the entire group cracked up laughing. Wynne was trying to stifle a smug grin, and failed when she caught my eye and I raised one eyebrow in amusement. When I managed to catch my breath, I turned and headed back to where Alistair was now walking, alone, face beet red, avoiding eye contact with anyone.\n\n When he saw me, he blushed more, and refused to meet my gaze. I took a surreptitious look around -- no one was watching us -- and then pushed him off the path we followed into a small copse of trees where I proceeded to kiss him senseless. His acute embarrassment forgotten, he wrapped his arms around me and kissed me back, and we lost track of time for a few endless moments.\n\n \"So did Wynne know any helpful spells?\"\n\n \"Apparently not. And the rest of her advice was even less useful.\" He scowled.\n\n I struggled not to laugh again. \"Would you like me to try? I have an idea.\"\n\n He agreed, and then, holding hands, we proceeded to run out onto the path and hurtle towards the group, who'd left us a ways behind. Red-faced from exertion by the time we caught up, I left him with Aedan and Duncan and approached Bodahn's cart.\n\n \"Sandal?\"\n\n \"Enchantment!\"\n\n I grinned. \"Yes! I have a request. Do you know any way to enchant something to block sound?\"\n\n The young dwarf simply stared at me, head cocked slightly, eyes unblinking. Bodahn leaned over to look at me.\n\n \"What are you looking for, my Lady?\"\n\n \"I was hoping Sandal knew an enchantment we could put on a tent to block sound. Because, you know, Alistair snores so loudly.\"\n\n The older dwarf grinned at me and winked, making me blush, but he handed the reins to Sandal before reaching behind into the cart, fishing through a small sack. He came out with a tiny stone in his hand, a rune I supposed, and then grabbed one of the rolled up bundles that made up our tents. Turning back to the boy, he took back the reins, handed over the stone, and pointed at the tent material. \"Enchantment?\" he asked.\n\n Sandal took the rune, rubbing it between his fingers possessively, then eyed the canvas speculatively. \"Enchantment.\" He nodded. \"Yes.\"\n\n Bodahn stuffed the bundle back behind him on the cart and smiled at me. \"I'll have him work on it when we set up camp tonight, my Lady.\"\n\n I'd given up on trying to talk Bodahn into using my name, and just sighed at the honourific. \"Thanks Bodahn. What do I owe you for it?\"\n\n His smile turned smug. \"On the house, my lady. In thanks for thinking about the rest of us and silencing the...snoring.\"\n\n I blushed and thanked him, and then slowed down until Alistair caught up with me. As I linked hands with him, I nodded at him quietly and he smiled. That night, Bodahn presented us with a different canvas than we were used to using, winked at me again, and then headed over to climb under the cart with Sandal like he did every night. Deciding to test it out, we set it up a short distance away from everyone, and then I went inside and closed the flap. I shouted, once, at medium volume, and then when no one seemed to react, tried again louder. Crawling back to the flap, I leaned out and looked up at my handsome boyfriend, firelight making his skin glow softly.\n\n \"Anything?\"\n\n \"Nope.\"\n\n \"Good. Get in here.\"\n\n \"Yes ser! Right away ser.\" He grinned at me. \"Want to see how well it works for other sounds?\"\n\n Giggling, I rolled away from the flap as he ducked in and tried to tackle me; he caught me on the far side when I fetched up against the wall, pulling at straps and ties with desperate haste. It turned out that making love on the ground, in a tent, was quite acceptable after all. And based on the lack of teasing the next morning, the enchantment worked perfectly.\n\n I hugged the little, simple, dwarven enchanter the next morning, and he blushed and laughed. \"Enchantment!\"\n\n On the seventh day out of Denerim, I was walking along, holding Alistair's hand as Wynne showed me various plants she'd grabbed from around the campsite to demonstrate after I'd almost used something very bad for my health as toilet paper. She showed me how to tell which were safe and which weren't, and I was trying very hard to memorise the shapes when I became dizzy. I stopped walking, interrupting Wynne mid-sentence, and turned to Alistair.\n\n \"I'll find you. Keep going, and I promise, whatever it takes, I'll find you.\"\n\n His face was ashen and I could see his lips moving, I presumed asking me to stay, but I couldn't hear him over the buzzing in my ears, and finally everything went dark.\n\n ********\n\n I woke back in a little hospital room, in a bed that shared space with three others. One of the others contained an elderly woman who appeared to be sleeping, while the other two were unoccupied, though unmade so I assumed my room-mates were out walking somewhere. The sun was shining in through the large window, and it was more than a little warm. Then I looked down and realised part of the reason why -- my request had finally been granted. I was wearing clothes -- jeans, a t-shirt, and a jacket, though no boots -- instead of a hospital gown. I smiled happily and sat up, swinging my feet down where I encountered my boots. After a few moments to get them tied on properly, I stood up and stretched, before hearing a shriek.\n\n I turned to see the woman I'd assumed was sleeping staring at me like she was seeing a ghost. I said hello and smiled reassuringly, which seemed to scare her more -- now the ghost is talking to her, I assume -- and she shrieked again. A nurse came rushing in, saw me standing, and chuckled before hurrying over to reassure the patient that everything was okay. When she was settled, the nurse came back over to where I stood.\n\n \"They told me you do this. I didn't really believe them.\"\n\n I laughed. \"I get that a lot.\"\n\n \"So...how long are you likely to be awake for?\"\n\n \"I have no idea. It's never the same. While I am, though, can I wander around a bit? I want to see if they have something in the hospital gift shop.\"\n\n She nodded, and I rummaged through a nearby locker to find my purse, which had about fifty dollars in the wallet. I grabbed the cash, snagged my iPhone and a cable, and headed out to the elevator. I made it to the gift store and looked around a bit before I found what I was looking for -- a portable device charger. They only had two in stock, they were only ten dollars each, and the box said they came fully charged, so I grabbed both, paid for them, and stuck them in a pocket.\n\n I also picked up a little Ironman figurine for Alistair and bought it as well. I was looking forward to his skeptical look and about a solid day of explanation. The lady in the gift store gave me a strange look when I shoved all that into my pants pockets, but I just shrugged and headed back upstairs.\n\n I ran into the doctor in the elevator, and he followed me back to my room. We spent a few minutes discussing the usual -- no new tubes, nothing medically had changed -- and then he paused, looking uncomfortable.\n\n \"I have a question for you. We got all your records from your family doctor, and I noticed the other day that you have an IUD in.\" I nodded, and he took a deep breath. \"I realised that it's been four-and-a-half years since you had it inserted. They're only good for five. I was wondering...what you want us to do about it.\"\n\n I was impressed; given that I was sure he still half-thought I was dreaming while unconscious, he was asking me what I wanted to do for birth control with someone he didn't believe existed. It was a leap of faith I appreciated greatly.\n\n I thought about what to do about it for a couple of minutes, mind racing. On the one hand, not having a period in Thedas was really, really nice, but on the other...maybe one day I'd want to have a child there, and it was possible the IUD would prevent that. And given the increasing intervals of time spent there, I couldn't guarantee that I'd be back on Earth at a convenient time to have it removed. At the same time, no one could predict what would happen if I did get pregnant there, with the whole body-hopping thing I had going on...\n\n I took a breath and let it out. \"Take it out.\"\n\n \"In six months, you mean?\"\n\n \"No, now. You can apologise to the nurses for me, but I think out is the best idea. We'll just have to put up with bodily functions.\"\n\n \"Well, I can't do it this instant, but if you're sure I'll make arrangements over the next few days.\"\n\n I agreed, and after a few more minutes of small talk, the doctor took his leave.\n\n Once he left, I still didn't feel dizzy, so I pulled my laptop out of the locker and plugged in my phone to charge. Then I had an idea; now alone in the room, I booted up Dragon Age: Origins, picked a save where I was in camp with all our companions, and then proceeded to take a video, on my phone, of talking to each of my companions briefly. I avoided the sex scenes and seriously personal discussions, getting just a few seconds of each companion. I even loaded a save from Highever when I'd first met Duncan with my character, and spoke with him as well. Thinking about it again, I also grabbed the discussion between Duncan and Cailan when first arriving at Ostagar.\n\n Still not dizzy, I spent a few minutes going through the songs on my phone and removing ones I thought really wouldn't go over well in Thedas. I couldn't wait to play some music for Leli -- the expression on her face would be well worth the money to ensure the battery lasted long enough. And everyone was going to be amazed by the phone itself. I grinned to myself as I tucked the now fully-charged phone into my pocket alongside the battery chargers and figurine. I shut down the laptop, put it away, and picked at my questionable hospital-food lunch, before laying back, fully dressed, to have a nap.\n\n ********\n\n I woke to darkness, broken only by the soft light of a nearly burnt-out firepit. The first thing I did was check my pockets, and I confirmed that my phone and the chargers had made it to Thedas. I rolled over to see Tomas sitting on a nearby stump, watching me with a smile. I grinned and sat up, and he handed me a water skin. I realised I actually disliked the water from Earth now -- I was so used to fresh stream water that the chemical taste of chlorine made water almost undrinkable. I'd run out of water purification tablets months before, and hadn't been sick from the water yet.\n\n \"I'm glad you decided to give Alistair a chance. I was worried, after I spoke to you in Redcliffe about what happened.\"\n\n I smiled. \"I'm glad too. He's...amazing. Much more than even I expected. And I can forgive jealousy. It's actually sort of sweet, when you look past the whole prostitution inference.\"\n\n He laughed. \"Just look past it, you say? Seems like no mean feat. But I think you'll be good for him. Actually, you'll be good for each other.\"\n\n I warned him about a surprise from my world for the next morning, and then decided to crawl in to the tent I shared with Alistair and demonstrate my level of appreciation for him. He was thrilled to see me, once the initial panic of being woken wore off, and he held me tightly in his lap for a few minutes, just relieved I was back. When he made love to me, he was tender and reverent, and we spent the rest of the night in each other's arms.\n\n I was practically bouncing with excitement in the morning, waiting to show everyone my surprise. I don't know why I didn't think of this earlier. I waited impatiently until everyone was at the fire for breakfast before pulling out the phone. Alistair watched curiously over my shoulder as I turned it on, and gasped when the lock screen popped up. I had a photo of a tropical beach on it, and he took the phone, staring at it in amazement. He jumped when it timed out and turned itself off, and dropped it like it was on fire.\n\n I giggled and picked it up, thankful for the impact-proof case I always kept it in. I entered my lock code and promptly picked a song from my library, turning up the volume as far as it would go. The look on Leliana's face when one of the Vonda Shepard songs I'd taught her came on was priceless, and I lifted the phone and snapped a picture before it changed. She blinked and squawked as the flash went off, and I laughed even harder. Switching over to the photo app, I showed her the lifelike image of herself looking astonished. That led to everyone demanding to have their picture taken, and then wanting to be taught how to take pictures. I was amused at the mental image of getting my phone back to Earth and showing off my photos of Alistair, Leliana, and the rest, but knew I'd never do it -- even if I could -- in case it harmed my chances of coming back somehow. Or ended me in the psych ward.\n\n If I'd thought that photos amazed them, the videos were an even bigger show-stopper. They all danced and wiggled and goofed around as one or another took video after video. I finally had to put a stop to it fearing my memory would fill up or my battery wear out prematurely. I could see a hungry look on Leli's face when I told them we had limited power; I knew she'd be begging to listen to music and commit as much as possible to memory before long."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-51-52"
}