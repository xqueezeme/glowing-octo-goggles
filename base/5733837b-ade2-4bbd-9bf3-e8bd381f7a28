{
    "title": "Lady in Red Pt. 03 Ch. 02",
    "pages": [
        "Amber Stahl had covered a lot of speeches in Washington over the years, but had never seen or heard anything even remotely like the lambasting Gwen had just delivered to Congress. She struggled to find the appropriate words to do justice to the situation as the cameras switched from the Capitol Building back to the studio. The red light suddenly lit up and Amber was on air. \n\n\"Ladies and Gentlemen, we have just watched the most thorough berating of Congress by a sitting president in my memory, and quite possibly in history. When President Hammer asked to address a joint session of Congress, most members believed she would use the occasion to reverse her stated intention of withdrawing our armed forces to positions held before June. Rumors have been flowing for the past day and a half about a possible impeachment of President Hammer and many thought those rumors might intimidate her into altering her course. Some even suggested that she would resign her office.\n\n\"What Congress got was an entirely different story! No one could have predicted this. President Hammer first expressed her disdain for what she termed the 'stench of fear' that permeated the chamber. She went on to berate members of Congress as 'cowards'. She essentially defied them to do their damndest to impeach her. \n\n\"President Hammer first stated she has committed no impeachable offenses, and thus, any such attempts would be groundless. Then she proceeded to double down on Congress by telling them that they were too timid and frightened to actively pursue impeachment. The coup de grace was when she flatly pointed out that her husband, Steve Hammer, would politically eviscerate any politician foolhardy enough to malign her honor in any way. Her warrior husband would wield the sword of truth to destroy their careers. \n\n\"The stunned chamber remained seated and silent as President Hammer made her way down the aisle and out the door. We have reporters waiting to speak with members of Congress about the blistering rebuke they have just received from the President. We'll break in as soon as any of our people are able to find a member of Congress willing to be interviewed. That in itself maybe considered an interesting commentary on the determination and character of America's legislative branch.\n\n\"The President's husband holds no official office or position, other than 'First Husband', or perhaps 'First Gentleman'. Naomi White's nomination as Secretary of State has only delivered to the Senate today. Indications are that the Senate will delay considering any of President Hammer's nominations until they see how well the President handles the potential war our nation faces. \n\n\"Even though Naomi White and Steve Hammer have no official position in government at this time, President Hammer has made the decision to follow their advice, rather than heed the opposing opinions of her military advisors, as well as Congress. She has essentially staked her presidency, and many feel the security of the United States on her confidence and faith in her husband and her friend. This couple has been extraordinary in every way since they first gained the public's attention as high school students with their first dance. While many believe that pulling back our forces was a tactical error, few will dare voice it now.\n\n\"General Dawson reportedly declared his staunch opposition to the President's decision during a meeting and she immediately relieved him of duty. The public is just beginning to learn that Steve isn't the only Hammer forged from steel.\" \n\nOn screen, viewers could see angry faced politicians filing past the reporters with tight, silent glares. They were constantly asked questions, which they ignored. Not one stopped for an interview as they huffed past the cameras.\n\n\"It appears that we will not be getting any interviews this afternoon,\" observed Amber wryly. \"I do however, have former Senator Chatham in the studio with me. Senator, in your three terms in the senate, have you ever seen a president berate Congress the way President Hammer just did?\"\n\n\"She not only berated them, she challenged and defied them,\" responded Senator Chatham. \"Congress is completely flummoxed by President Hammer's lack of concern for their sensitivities. I am unable to recall any occasion in this nation's history when a sitting president has defied Congress in such forceful terms. This is new territory for these legislators.\"\n\n\"That begs the question. Why is President Hammer so unconcerned about the opinions of the Senate and the House?\" quizzed Amber. \n\n\"I think it's quite simple. I've known President Hammer for years now. She and her husband do not tolerate fools or cowards. Nor do they put any effort into schmoozing politicians. They have spent years building their power base from the grassroots of America. I would be quite surprised if the average American wasn't still chuckling in admiration at the dressing down she administered to the country's elected representatives. \n\n\"When members of Congress tried to exert force on her, she pushed back, and hard. It's my belief that if Congress tries to take on Gwen and Steve Hammer, it will turn out badly for Congress, or at least for many of its members. Recent polls have shown that this couple is admired and respected by an unprecedented 92% of Americans. Congress certainly can't make that claim.\"\n\nSteve and Naomi were in Berlin at the time Gwen was addressing Congress. They had spent several hours earlier that afternoon trying to convince Chancellor Braun to agree to step down Germany's military placements. Thus far, she remained unconvinced. That evening Naomi, Steve, Hans, Claude, and James sat in amazement as they watched Gwen express her disgust for Congress. \n\n\"My God! Gwen really did a number on them,\" observed Naomi as the broadcast ended. \"How will this affect our chances of getting our allies to join us in this effort?\"\n\n\"Chancellor Braun was concerned about the American Congress countering, or at least weakening President Hammer's position. That was one of the reasons she dared not go along with the American proposal. We cannot afford an ally that waffles on such important matters,\" pointed out Hans. \"I have no idea how this challenge to Congress will affect Chancellor Braun's thinking.\"\n\n\"Maybe Britain's reaction to Gwen's speech will help,\" suggested James Hawthorne. \"I just spoke with Prime Minister Blake. He was extremely impressed with the President's decisive speech to Congress. He told me that Britain will agree to the withdrawal if Germany and France also agree.\"\n\n\"I am certain that France will be willing to do the same,\" added Claude D'Anjou. \"You only have to gain Germany's participation and this part of your mission will be a success.\"\n\nSteve had been silent during the discussions after Gwen's speech. He nodded approvingly to James and Claude, but seemed detached. After some thought, he picked up his personal phone and keyed a number.\n\n\"Tyler? Sorry to bother you. I imagine you can guess why I'm calling. I want you to increase the efforts to investigate the background of every member of Congress. Spend however much you need, but get the goods. I want every bit of information possible. Yeah, I'll probably be weighing in when I get back, especially if they're foolish enough to pursue this. Thanks, Tyler.\" \n\n\"Uh, oh. Steve, you're going to go after members of Congress, aren't you?\" asked Naomi. \"Gwen gave them fair warning, but they'll still be surprised when Hell rains down on them.\"\n\n\"If they back off right now, I'll probably let it go,\" admitted Steve. \"However, I've always found it best to be prepared. A few of them may be foolish enough to pursue this, and I'll squash them when they do. Gwen doesn't deserve this type of treatment, and I'll see that they come to regret it.\"\n\nHans and James exchanged knowing looks as they considered Steve's words. It was obvious that America now had a strong but compassionate leader, with an extremely powerful and dedicated partner. They had no doubt that Steve would take on anyone or anything that threatened Gwen.\n\nMeanwhile, Gwen had declined to take a limousine back to the White House. She insisted on walking. Secret service agents tried to talk her out of it, worried about her safety along the two and a half miles between the Capitol and the White House. \n\nWith Kate and Lisa at her side and an alert security team all around, Gwen began the trek. She hadn't gone a hundred yards before she saw a young Marine with a woman and a small baby sitting on a bench. As she approached them, the young woman quickly dropped to one knee as the Marine snapped to attention.\n\n\"Thank you, Marine. Is this beautiful baby yours? Would it be okay if I held her? Stand at ease, Marine.\" added Gwen since the Marine had remained at attention.\n\nThe young mother stood and proudly passed her infant to Gwen. \"She's eight months old. Her father and I were married shortly before he was deployed to the Mideast. She came along before he got back. Jim, my husband, is scheduled to ship out to South Korea next week. Now we're hoping that he won't have to go,\" revealed the young mother.\n\n\"We pray that you and your husband will bring a lasting peace to the world,\" continued the woman as Gwen held the baby and gently rocked her in her arms. \"You've given us hope. I want my baby to have her daddy around to help me raise her, along with a couple of brothers and sisters.\"\n\n\"It's families like yours that make this all worthwhile,\" replied Gwen as she returned the child to her mother before hugging the surprised Marine. \"Thank you both for all that you've sacrificed for your country!\"\n\nThe young Marine was at a loss as to how to behave since he'd never been hugged by the commander in chief, or even a superior officer before. He carefully held Gwen's shoulders as she embraced him. Gwen released him and gave the mother a light hug on the side away from the infant on her hip.\n\nAlthough they had less than three miles to cover, Gwen and her sisters spent almost five hours making their way back to the White House. Early on they would stop and speak to tourists and locals as they moved along the sidewalk. Nearly everyone they met would first kneel or curtsy before crowding around the sisters, as much as they were allowed by Secret Service, to take pictures and ask questions.\n\nNews traveled rapidly and soon there were far too many spectators and well-wishers along the route for Gwen to be able to spend much time with hardly any of them. The sidewalks became lined with people, often ten or twelve deep, waiting to see President Hammer and her beautiful sisters walk by. As Gwen passed them, most people dropped to one knee and quietly spoke.\n\nThe expression \"Madam President\" was uttered often. Others simply said \"My Queen\". Before long those that kneeled combined the two terms into \"Madam President, My Queen\" as Gwen slowly walked past them.\n\nGwen smiled and responded to the adoring public with words like \"Thank you\", or \"I feel so humbled\", and \"God Bless America!\" Most of the people that gathered along the sidewalks were well mannered and the Secret Service agents had little trouble maintaining a modicum of order. \n\nGwen knew that Congress would be smarting from her verbal beating and would be considering all sorts of retaliation. She decided to remain in the public eye as much as possible while the nation withdrew its military forces from various locations around the globe. She felt the need to reassure Americans as their country backed away from superior military positions in an attempt to gain a lasting peace.\n\nSeveral cable news channels soon placed cameramen and reporters along the route. They sent constant feeds back to the studios where 'panels of experts' discussed Gwen's speech to Congress and the various scenarios that yielding ground to Russia, China, and North Korea might create. They also discussed the phenomenon of Gwen being referred to and treated like a Queen even as she held the position of President of the United States.\n\nMuch discussed by the media was the contrast in President Hammer's demeanor between her address to Congress earlier in the day and the kindness and respect she demonstrated for her constituents, the everyday Americans to whom she so often referred. \n\nWithout exception, whenever the news programs features the 'man in the street' interview, citizens strongly supported Gwen's assessment of Congress. One man, a mechanic on vacation from Idaho, stated quite well what everyone was thinking.\n\n\"It's really something that the first president we've ever had with the balls to tell Congress to go to hell is a woman,\" chuckled the man. \"We elect these clowns that make all sorts of promises that they never even try to keep. President Hammer ascended to the presidency because of an appointment and a death and she delivered the goods immediately. She never made any promises, but she's already done more for this country than all of the Washington politicians put together. I think America lucked out when she agreed to accept the vice presidency!\"\n\nSeveral Congressmen and a Senator eventually made appearances in the studios, mostly to explain how President Hammer had misinterpreted their reasonable concern as fear. There was no move underway to begin impeachment proceedings and Congress was backing the President's military and diplomatic decision one hundred percent. When they were shown video clips with many members of Congress suggesting the possibly of removing Gwen from office, they called it a misunderstanding. Not one member interviewed demonstrated the slightest interest in drawing Steve Hammer's ire, at least not publicly. \n\nThis turn of events did not go unnoticed in Europe. Steve and his group arrived at Chancellor Braun's office at ten the next morning. Steve was caught by surprise at Braun's change in attitude.\n\n\"Mr. Hammer, you may report to your wife that Germany has decided to follow America's lead and back away from our heightened alerts. I have already given the appropriate instructions to our military.\n\n\"I see by your expression that you didn't anticipate this happening. You were very persuasive yesterday, but the determining factor was President Hammer's speech to your Congress. That woman has my respect! She convinced me that she is strong enough to resist pressure from politicians and keep her word to America's allies. She most certainly is nothing like your late President Crawford\"\n\n\"I will relay this information to President Hammer immediately,\" promised Steve. \"I know she'll be extremely pleased to learn of your decision.\"\n\n\"There will be one further requirement, should we manage to avoid war,\" responded Braun. \"While I am not a fan of North Korea's dictator, I have to admire his negotiating skills. I respectfully request that your group perform for the people of Germany in an outdoor concert here in Berlin. We have never had that honor and I hope to correct that oversight as soon as possible. Is this something with which you can persuade your wife to agree?\"\n\n\"I'm certain Gwen will go along with that!\" enthused Steve. \"We want to build stronger relationships with our allies, as well as a better understanding with those who have been considered enemies for far too long. It will give you an opportunity to meet and speak with her on a personal level, as well. I believe you and Gwen will become great friends.\" \n\nAfter again expressing gratitude to the Chancellor, the group continued its mission by flying to Paris. Steve soon confirmed that France and Britain were willing to go along with Germany and back the United States. Steve was mildly surprised that both nations also requested that Lady in Red perform concerts in their capital cities. Steve was confident that Gwen would agree with the importance of building relationships with America's allies and schedule performances as soon as possible.\n\nBack in Washington, Gwen asked her closest friends and advisors to meet with her after dinner. \"I spoke with Steve. NATO will pull back immediately! Once Germany, France, and Britain agreed, the rest of them felt it was in their best interests as well. As soon as the Russians are convinced that we, along with the rest of NATO, are backing off, they will be obligated to do the same.\n\n\"To ensure that this happens, Steve and Naomi are flying back to Moscow in the morning. Steve is prepared to twist arms if it becomes necessary. We need this to happen. The reason I wanted to meet with all of you is because something rather unusual has come up.\n\n\"Steve was asked directly by North Korea, Germany, France, and Britain that we perform concerts in their capital cities. Steve agreed to this unusual request. He and I both feel that we need to start building better relationships with all nations around the globe. The previous administration was pretty inept at international diplomacy. Steve, in my opinion, is a master at it. My question is this? How will the American people accept having their President singing and dancing, especially to entertain people of other nations? Do we need to plan a strategy to explain why we're doing it?\"\n\n\"That's a tough one,\" acknowledged Jeff Wilson. \"Nothing like that has ever been done before. That doesn't necessarily mean that it's wrong. Some folks might think it's embarrassing or demeaning, especially Congress. Maybe you should tone down the dancing and revealing costumes?\"\n\n\"Honestly? I think you guys need to do this right!\" insisted Kate. \"You can't go to these cities and insult the people, as well as their leaders by performing a half-assed effort. They've all seen videos and TV broadcasts of the great shows you guys have put on over the years. I think you need to make these shows bigger and better than anything you've ever done before. You'll be representing the United States of America!\"\n\n\"Not only do I agree, but I think you should perform in more capital cities,\" stated Lisa. \"You may be the President of the United States, but you and Jordan are the two best performers on the planet. Talk about opportunities to meet world leaders under optimum conditions! Imagine spending three days in each capital where you attend a state dinner one night and rock the hell out of the town the next night. No president has ever done it before, because there's never been a president that could!\" \n\n\"I think Lisa's right,\" added Jason. \"It could be called the 'Peace Tour' or something like that. You'd be building better relations with a lot of countries.\"\n\n\"How about the 'We Come in Peace World Capital Tour?' I think that sounds really good,\" suggested Ashley.\n\n\"I like it, Ash!\" complimented Kate. \"That has a great ring to it. Make it known that this is a tour for world peace!\"\n\n\"So you're advising that we not only do these concerts, but set up a bunch more?\" marveled Gwen. \"We have to have a limit or we'll never get back home. How long can I be gone from Washington?\"\n\n\"I think that with roughly three day intervals between concerts, you should cover about fifteen cities in less than two months,\" calculated Lisa quickly. \"Presidents have gone on vacation for a month or longer at a time. You'd be working, not vacationing. What countries should we focus on for this first tour?\"\n\n\"I'll talk to Steve about that, but I would include all of the countries, friend or foe, involved in the current tension, if they want us to perform. I can see where some nations may not be too keen on western culture being forced upon them,\" considered Gwen.\n\n\"How have people taken the announcement that we've agreed to perform in Pyongyang? Have any of you heard any negative feedback?\" asked Gwen\n\n\"Yeah, the usual suspects in Congress felt it was unbecoming for the leader of the free world to perform for the unwashed masses,\" replied Lisa. \"You've already pretty well let them know how much you value their opinions.\"",
        "\"I've read some nice things about it on the internet,\" ventured Paula, who had been silent during the conversation. \"I hope I'm not speaking out of turn. I'm not really qualified to be advising you.\"\n\n\"You're my mom! That makes you very qualified,\" insisted Gwen. \"You've gotten me this far with your sage advice. Never think your opinions aren't wanted or appreciated.\"\n\n\"This is going to take some getting used to,\" admitted Paula. \"I can't tell you how proud I am of the three of you. You're pretty much running the country. I never dreamed anything like this would ever happen.\"\n\n\"Any success we've had is to the credit of you and Dad,\" replied Gwen. \"You laid the foundation for all of this during our youth.\"\n\n\"Yeah, and then Steve laid Gwen and now we're sitting in the White House,\" joked Kate.\n\n\"I've mentioned to you that I record all meetings, haven't I?\" quizzed Gwen.\n\n\"Not meetings like this! That's just wrong,\" protested Kate.\n\n\"We are recording all meetings were policy is discussed, so don't be making jokes about the Commander-in-Chief getting laid,\" chided Gwen as she broke into a big grin. \"However, historians will love the human element, so don't worry this time.\"\n\n\"That reminds me. We're going to release the video of our first meeting in Valhalla recorded immediately after you were sworn in. If you want to change your mind or edit it, now's the time,\" stated Lisa.\n\n\"I don't want any videos edited unless it's for national security. Otherwise, the press gets the entire meeting, not just what we want them to see. Once we release a few, people in my meetings will realize that they need to act and speak accordingly. New people coming into my cabinet won't be blindsided. They'll know what they're getting into,\" predicted Gwen before adding with a smile, \"Release the Kraken!\"\n\n\"When do we announce that President Hammer is going on a world tour?\" asked Ashley. \"That'll be an interesting question and answer session.\"\n\n\"We need to be certain that Russia, China, and North Korea are pulling back before we look like we're celebrating,\" pointed out Lisa. \"We'd lose credibility if we were premature in assuming success, plus it could muddy the waters for Steve.\"\n\n\"That's why you're my top advisor,\" beamed Gwen as she gave Lisa a quick hug. \"You're so logical and you're never afraid to tell me what I need to hear, and not what I want to hear. I really have some wonderful friends and relatives.\n\n\"I'll let Steve know that we'll definitely do the concerts and any others he can set up. Maybe he can use it as an extra incentive or something.\"\n\nNaomi, Steve, and the representatives from Britain, France, and Germany met with Russian President Kozlov the next afternoon. It turned out to be even more contentious than Steve had feared.\n\n\"NATO has begun pulling back,\" stated Steve. \"I respectfully request that Russia begin doing the same.\"\n\n\"Russia is in no hurry to weaken its position,\" stated Kozlov flatly. \"We will wait to see if the withdrawal is complete and if China and North Korea do the same. You are in no position to dictate the movements of the Russian military.\"\n\n\"President Kozlov, I am not dictating anything. I am simply reminding you of our agreement. I expect Russia to live up to its end,\" replied Steve more calmly than he felt.\n\n\"As I have stated, Russia will wait to see if NATO adheres to its part of the agreement as well as China and North Korea. Russia now holds the superior position in this issue. Do not attempt to push me or I will simply ignore our little agreement,\" sneered Kozlov.\n\n\"President Kozlov, we will travel to Beijing and Pyongyang and make the same demand. Be aware that failure to adhere to the simple terms of our agreement may be considered an act of war by the United States. Since we now have weakened our defenses by trusting your word, we would be forced to look at alternatives that are much more drastic, at best,\" responded Steve.\n\nThe Russian's eyes narrowed as he stared at Steve. \"Are you suggesting the use of nuclear weapons?\"\n\n\"I am simply telling you that the United States will take any and all measures necessary to protect our nation, as well as our allies. Nothing is off the table if any country reneges on this agreement,\" warned Steve firmly. \n\n\"Your Congress would never go along with it,\" scoffed Kozlov. \"It is no secret that it is a sad collection of career politicians, afraid of their own shadows.\"\n\n\"President Kozlov, do not make the mistake of believing that the weakness of our Congress lessens the determination of President Hammer. Congress will come to fear her far more than Russia if this comes down to a decision on going to war. I promise you that!\" guaranteed Steve with passion.\n\n\"We'll discuss this with China and North Korea and return. I will be telling them that Russia will begin pulling back when they do. Will that be an accurate statement?\" demanded Steve as he stared hard at President Kozlov.\n\nKozlov quickly considered Steve's question. He was well aware of Steve's reputation for nerve as well as speaking the truth. He had seen the videos where Steve had killed the giant pirate with his bare hands and how he had fought to save former President Novokov's son when attacked at his wedding reception. He studied the man across from him and came to the conclusion that he could, and would, take whatever steps were necessary to keep America safe. Congress would never stand up to him or his wife if Steve pressed them as only he could.\n\n\"Yes, Russia always lives up to its agreements, as long as other nations do the same. If China and North Korea follow the terms we agreed upon, so will Russia,\" responded Kozlov as indignantly as he could, ignoring the fact that a few minutes prior he had threatened to not honor the agreement.\n\n\"Thank you, President Kozlov,\" responded Steve graciously. \"I'm glad we agree on this. President Hammer has asked me to relay to you that once this issue is resolved and all parties have pulled back from the brink of war, she would like to visit Moscow and discuss future policy with you. She would even be willing to perform a concert in Red Square as an indication of her desire to improve relations between our two nations.\"\n\nKozlov suddenly smiled. His surprise was evident. \"President Hammer has told you this? She will visit Moscow and discuss the situation in person? And perform for us? Tell her that she will be warmly received and I accept her generous offer on behalf of the Russian people!\"\n\n\"We'll have our people contact yours to make the arrangements. I want you to know that she will be doing the same thing with other nations. It is her intention to establish better communications and find common ground with all nations of the world,\" revealed Steve. \"Certainly Russia is at the top of the list of countries with which she wants to improve relations.\"\n\nHans, Claude, and James finally began to relax once they were in the air and headed for Beijing, \"I can't believe you looked Kozlov in the eye and pretty much told him that America would nuke Russia if he reneged on the agreement,\" stated James with obvious admiration.\n\n\"He thought about it for a little while and decided that you would act on your threat,\" added Hans. \"He wasn't willing to gamble on Congress having the will to prevent you from going to war.\"\n\n\"I simply stated that not following the terms we'd previously agreed on could be considered an act of war, and that we would have to consider our options,\" replied Steve. \"He connected the dots and realized our options were quite limited and very drastic.\"\n\nSteve found that China was also reluctant to withdraw its forces, even when it was obvious that the United States was in the process of moving back. He knew that he had to get China to live up to the terms of the agreement. Otherwise, the entire agreement would unravel, leaving the United States and its allies in a weakened position.\n\n\"Mr. President, Russia is very concerned about China's position in this situation. If China forces Russia and the United States to join together to push back, I am concerned that war would be difficult to prevent. The United States does not have any wish to ally itself with Russia in any military action, but it is a distinct possibility. It can be avoided if China simply adheres to our agreement.\" \n\nPresident Xi's eyes widened slightly when the interpreter mentioned Russia joining with the United States. Steve decided it was time to play his last card, although he wondered if it had much value.\n\n\"President Hammer asked me to tell you that she'd very much like to visit China once this issue is settled. We will be traveling to numerous capital cities, and even performing in many of them. I wouldn't presume that China would have much interest in a concert here in Beijing, but she feels that a meeting with you could benefit both nations\"\n\nThis time the President of the Peoples' Republic responded immediately after the interpreter finished. Soon the interpreter turned his focus to Steve. \"President Xi asks if your president is actually going to perform in other cities.\"\n\n\"Tell him that we already have plans for Paris, London, Berlin, Pyongyang, and Moscow. President Hammer feels it would be a great honor to perform a concert in Tiananmen Square, or any place of President Xi's choosing. Once the military issue is resolved, President Hammer would like to reach a more sweeping and inclusive agreement with the People's Republic.\"\n\nAfter a short back and forth, the interpreter once again spoke to Steve. \"China will live up to its side of the agreement. Once America has completed its pullback, notify President Xi and China will start withdrawing, provided Russia does the same. North Korea will not refuse to pull its forces away from the border with the South.\"\n\nSteve thanked President Xi and left a short time later. Within two hours, Steve and his entourage were back on the Red Lady with Pyongyang the destination. Once again, his friends were commenting on his tactics.\n\n\"I can't believe this, even after seeing it with my own eyes,\" chuckled James. \"You made it sound like Russia and the United States would join forces to battle China if war broke out. How could Xi ever believe that story?\"\n\n\"He probably knew that Russia has never indicated that it would agree to anything like that, but the suggestion took root. He knows that it's a possibility, as unlikely as many may believe it to be. What he really took from my comments was that I was considering the possibility of persuading Russia to join us in a united front against China. The mere possibility was enough to cause Xi to fall in line. He likes the balance of power as it is,\" explained Steve.\n\n\"Why are we going to North Korea after China guaranteed they would go along with the program?\" asked Hans. \n\n\"A couple of reasons,\" responded Steve. Jong's a very insecure, paranoid individual. If we were to assume he was going to move troops away from the DMZ without speaking to him, he might just start a war out of pique.\n\n\"The other reason is that he has a thing for Naomi. You saw how he reacted to her when we spoke with him a couple of days ago. He'll be quite personable when she explains how Russia and China are pulling back. Then she'll blink her eyes a couple of times and remind him that he promised to do the same and how she knows what a fine, honorable man he is. Dare she assume that he's on board with everything?\"\n\n\"Hey! What can I say? I'm hoping to be the next Secretary of State, so I need to contribute at least something to this diplomatic mission,\" insisted Naomi. \"I can't help it if the guy likes me. Steve won't be laughing so hard when Jong meets Gwen. He's always asking about her. He'll forget about me when he sees Gwen in person.\"\n\n\"Naomi, no man that has seen you could ever forget you,\" assured James. \"However, I agree that it will be a very interesting meeting and I am going to do everything possible to be there when Jong meets President Hammer.\"\n\n\"That's good to hear,\" chimed in Steve. \"I'm going to ask Prime Minister Blake to have you and Stephanie accompany us on the 'World Capital Tour'. I also hope to have Hans and Nadiya, as well as Claude and Colette join us.\" \n\n\"Collette has been having some health issues, but I am certain that Michelle would love to accompany me,\" stated Claude D'Anjou. \"Would that be acceptable?\"\n\n\"Ha!\" exclaimed James. \"I'm sure Steve won't be turning that offer down. Michelle is a very attractive woman and I hear she's being noticed in political circles in France. Does she have political ambitions?\"\n\n\"Please keep this among us. Michelle is going to run for Mayor of Paris next year. An international trip with her good friend, President Hammer and her husband could only improve her chances of getting elected,\" predicted Claude.\n\nWhile Steve was in the air on his way to North Korea, Gwen was meeting with her inner circle in the oval office. \"I spoke with Steve a little while ago. He's confident that Russia and China will be pulling back once our forces have returned to our previous positions. He didn't say too much about it, but I had the impression that he did some arm twisting on this. They're headed to North Korea to make certain that Chairman Jong is still with the program.\" \n\n\"It can't happen soon enough to suit me,\" admitted Lisa. \"Congress is starting to whine and whimper again about your decision regarding withdrawal. They won't even consider your nominees for any Cabinet positions until this all shakes out. If it doesn't work out like we hope, getting anything through Congress will be difficult, at best.\" \n\n\"Steve is doing his best and I have no reason to doubt he'll make it work. We need to plan on pressuring the Senate to confirm my appointments as soon as Russia, China, and North Korea begin to comply with our agreement,\" stated Gwen.\n\n\"When are you going to announce that Vince Rosen has agreed to accept the vice presidency?\" asked Kate. \"Will you make the announcement, or leave it up to Ashley?\"\n\n\"I think I need to make the announcement. I'll make it clear that he's doing this as a service to his country and only because I asked him personally. He's still grieving over Cynthia's death, but he agrees that he'll heal faster if has something else to concentrate on. Steve thought it was a great idea to ask both Vince and Meredith Chatham to join my administration. They're two individuals with proven track records and shouldn't have any obstacles to their approval.\"\n\n\"Not to be negative,\" began Jason, \"but the Senate isn't always logical. They're pissed at you and aren't likely to make anything easy for your administration.\"\n\n\"I realize it may not be easy, but it will be done,\" insisted Gwen. \"When Steve gets back, things will start happening. Between the two of us, we can exert a lot of pressure on the Senate, especially if his mission is as successful as I hope.\"\n\n\"I think that you should have a news conference soon,\" suggested Lisa. \"Present your case to the American public and chide the Senate for its inaction. You're nominating a former president to assume the position of vice president and a three term former senator for secretary of defense. Let the press hound the Senate about their inaction. I'll bet they'll hear from their constituents, too.\" \n\n\"That's a good idea,\" agreed Gwen. \"Ashley, let's set this up for tomorrow evening. The last of the NATO forces will be back in their prior positions by midnight tonight, so by tomorrow evening China, Russia, and North Korea should have begun their withdrawal. Whether they have or not, I'll need to report the status to the American people.\"\n\n\"Isn't there an inherent risk in setting up the news conference before we know if those countries will adhere to the agreement?\" asked Jason. \"You could wait and schedule once we're certain that they're living up to the terms.\"\n\n\"That would be safer, but pretty obvious,\" observed Jeff Wilson. \"I think Gwen's right. Schedule it now and let Steve and Naomi know that you're addressing the country tomorrow evening and that we need to have some good faith action from those nations by then.\"\n\n\"That's what I was thinking, too,\" agreed Gwen. \"I know I keep putting pressure on Steve and Naomi, but they've been producing results so far. I really lucked out when those two agreed to undertake this task.\"\n\n\"When's the last time Steve refused you anything?\" grinned Lisa. \"Now, about those concerts. We really need to start the ball rolling on them. You'll need a huge crew to set up and tear down all of the equipment and props. You'll want some jumbotrons shipped, set up, and tested before each show. We need to make arrangements with all of the governments involved. This is going to be big!\n\n\"We've been contacted by over twenty five nations asking that you consider their capital city for a performance. The press is getting wind of this and asking questions. You'll have to announce that Steve, Jordan, Charlie, and you will be making a world tour to promote better relations with the nations of the world.\n\n\"We had to begin refusing after sixteen cities were placed on the schedule. The list of approved cities will include Pyongyang, Seoul, Tokyo, Beijing, Sydney, Rome, Kiev, Budapest, Moscow, Madrid, Paris, Berlin, London, Mexico City, Havana, and Ottawa.\"\n\n\"Sixteen cities in sixty days?\" worried Gwen. \"We've never tried anything of that magnitude before. That's pushing pretty hard.\"\n\n\"It won't just be concerts, either. You'll be a guest at state dinners, probably in every city you visit. We'll spend some time visiting places of interest in each city. We'll be exhausted. We're all going along so we can help you out anyway possible. Mom, Dad, Kate, Chip, Jason, Jeff and Julie, Billy and Charlotte, Jared and Naomi, and Ashley and Richard will all be with you on this history making tour. \n\n\"We're using Ashley's idea and calling it the 'We Come in Peace World Tour'. I'll tell the nations involved that they can announce that you'll be visiting their capital and performing a concert there as soon as you finish your press conference tomorrow evening. There's been increased grumbling in Congress about your plans to perform in Pyongyang. Wait until our nation's esteemed representatives hear that you've added fifteen more cities to the tour. This is going to get interesting,\" predicted Lisa wryly.\n\nThe following day saw Gwen in frequent contact with Steve as she pressed him about Russia, China, and North Korea's timetable for pulling back. Steve in turn, made numerous calls to the leaders of all three nations from the Red Lady. He explained the deadline Gwen was facing and very firmly insisted that some visible indication of a military pullout become evident. \n\nAn hour before the conference, Gwen was informed that North Korean forces were backing off from the DMZ. A short time later, Admiral Duval reported that Chinese war ships were moving away from the coast of Japan and Southeast Asia. Seconds before she was scheduled to make her opening statement, Lisa rushed to her side and whispered in her ear that Russian troops were beginning to withdraw from NATO borders on several fronts. \n\n\"My fellow Americans,\" began Gwen with a brilliant smile. \"I have been informed that Russia, China, and North Korea are beginning to back away from the threatening positions they have held since this escalation began. The significance of this withdrawal cannot be overstated. The world is moving away from war, even as I speak to you this evening. \n\n\"The United States thanks its allies for their support in a very difficult situation. They displayed great courage and commitment to peace. I would like to add my personal appreciation for the faith displayed by these good friends of America.\n\n\"I am grateful to Russia, China, and North Korea for agreeing to pull back, as well as adhering to their verbal commitments so honorably. It's in the spirit of the recent positive developments and with the desire to open better communication with these nations that Jordan and Charlie Burns have agreed to join Steve and me on a world tour.\"",
        "At this point, the members of the press began whispering and mumbling so loudly that Gwen chose to simply, and quite obviously, wait for quiet. The press corps soon realized they were holding up the President's announcement and went silent again.\n\n\"This will be named the 'We Come in Peace World Tour'. I realize that this has never been done before, but the world has just narrowly avoided war. It's my intention to prevent this sort of situation from developing again, at least on my watch. We will appear in concerts in sixteen world capitals over a two month span. While visiting these nations, I will have a frank and open dialogue with the leaders of each nation, if they are willing. The world is becoming a small place. Countries need to find ways to work together peacefully toward common goals.\n\n\"In accordance with the twenty fifth amendment, I would like to announce my selection for vice president at this time. I have asked former President Vincent Rosen to serve in that capacity in my administration and he has graciously agreed. As you all know, he didn't seek re-election when his beloved wife, Cynthia, was diagnosed with ovarian cancer. He spent the last year of her life at her side, assisting her any way possible. He has proven his ability to govern, but more importantly to me, he has demonstrated his humanity. I expect his nomination to sail through the Senate and House.\n\n\"I have also managed to persuade former Senator Chatham to accept the position of Secretary of Defense. I have no need to discuss her qualifications. She has had a long and honorable career in government. Again, I fully expect the Senate to approve her nomination quickly. I will now entertain questions.\" \n\nOnce again, Amber Stahl was chosen to pose the first question. \"Madam President, you ascended to the Presidency one week ago. In that period of time you have managed to rebuke Congress, as well as resolve an international situation that many believed would escalate to war. Do you feel vindicated by the success of your husband and best friend in these negotiations?\"\n\n\"That's a good question,\" granted Gwen as she considered her response. \"When I, along with my advisors, heard what Steve and Naomi proposed, I am ashamed to say that I considered the option not heeding their advice. There were experienced military and political people in the room, and they all felt it was a bad idea. After some back and forth, I came to realize that of all of those speaking, Steve and Naomi were the ones I needed to trust. Others may have had more experience, but no one has a better understanding of the dynamics of the nations involved than my husband. This country is blessed to have a person like Steve willing and able to state our case to world leaders. \n\n\"Do not make the mistake of thinking I wasn't worried. Do not think that Steve and Naomi did not have to work extremely hard and even twist some arms to accomplish what they did. To answer your question, I did very little in the scheme of things. Steve and Naomi pulled this off. If anyone had any doubts about Naomi's qualifications and ability to perform at a very high level as Secretary of State prior to this week, those doubts should be now be eliminated. I urge the Senate to quickly approve her nomination.\"\n\nGwen then pointed to a representative from a New York paper. \"Are we to understand that you will be performing in concerts for a period of two months? Are you concerned about being away from Washington for such a long span?\"\n\n\"I swore to defend, protect, and preserve the constitution of the United States. I intend to do exactly that. I will faithfully execute the office of President of the United States to the absolute best of my ability. I have been in office about a week and tensions have been reduced considerably around the globe, mostly through the tireless efforts of Naomi Wilson-White and my husband.\"\n\nGwen pointed to another reporter who quickly asked, \"What about domestic policy? What about getting your nominees pushed through the senate? How will you accomplish that while you are off performing in foreign lands?\"\n\nGwen surprised the reporter by smiling at his question. \"Your very question indicates that you don't believe that the Senate will approve my nominees without my exerting considerable pressure on them. You and many other citizens have come to expect little or nothing from your elected representatives. You seem certain that they lack the simple skills required to do their jobs properly.\n\n\"My job description does not include babysitting Congress. These people have been elected to perform certain tasks. One of those tasks is to approve the nominations the president makes for the cabinet. I expect them to do exactly that. If they do not, I ask that the American public voice their displeasure in any and all legal avenues.\n\n\"I'll be building stronger relationships with nations across the globe for two months. When I return to Washington with my husband, he and I will determine why some nominations were not approved and we will proceed accordingly.\"\n\n\"Madam President, are you threatening Congress again with that last statement? Your husband has no official position in Washington. Why would you include him in your statement?\" asked a cable news reporter.\n\n\"Really?\" chuckled Gwen. \"Steve has just brought the world back from the brink of war, with the able assistance of Naomi White. That's merely the latest of his accomplishments. Perhaps you can name a senator or congressman that wields as much power and influence as Steve?\"\n\n\"No, I can't, Madam President, but is it proper to bully and threaten elected officials this way?\" persisted the reporter.\n\n\"I don't agree with your choice of words,\" stated Gwen flatly. \"The Senate will have two months to review and pass my nominations before I return to Washington. Personally, I believe any nominee I place before the senate will be a highly qualified individual. If they cannot act in that period of time, I will have to use whatever legal means are at my disposal to encourage the Senate to simply perform the job that they were elected to do. It happens that my husband is at my disposal, and will be an extremely effective champion for my nominees. There are no threats, just promises.\" \n\n\"How do you respond to critics that claim that the President of the United States should not be singing and dancing provocatively, especially for the entertainment of citizens of other nations?\" asked a female reporter from a major network.\n\n\"The President of the United States will be working for world peace, and will be seen by as many citizens of the world as possible. I serve at the will of the people, not the media, or elected officials. The citizens of this country want peace and prosperity, and I will be working for exactly that. \n\n\"All lives matter to me, whether they are in North Korea, Siberia, Manchuria, Canada, or Beverly Hills, but no life is more important than any other life. I will take that belief to my grave,\" responded Gwen with passion. \"Quite frankly, I don't give a tinker's damn what elitists think. I care about the men and women of America that work hard and expect their president to do the same. I care about all people. If I can make their lives better in any way, I'll do my best to make that happen.\"\n\n\"Madam President, The United States has no diplomatic relations with North Korea. Are you considering reversing decades old policy? Will you meet with Jong while you are in Korea?\" asked another network reporter.\n\n\"It is entirely possible. That will be a decision for Chairman Jong to make. He has been informed that I am quite willing to discuss a wide range of issues important to both nations,\" replied Gwen calmly.\n\n\"What about the many civil rights violations his regime has committed over the years?\" asked the reporter, following up on his first question.\n\n\"It's certainly worthy of dialogue, as are many other subjects. What has the United States gained from its lack of diplomatic relations? What has North Korea gained? To be quite honest, a better understanding and open discussion are far more likely to help resolve these issues than embargoes, sanctions, and threats,\" stated Gwen. \"Please identify where the absence of diplomatic relations has improved anything for either Americans, or North Koreans.\"\n\n\"We have to accept that other nations do things differently, and not always to our liking,\" added Gwen. \"History has shown us time and time again, that trade and the free exchange of ideas do far more to improve lives than sanctions ever have.\"\n\n\"Will you be giving a somewhat watered-down version of your concerts now that you are President of the United States?\" asked the AP reporter.\n\n\"My friends and I have never given less than our best in any performance,\" replied Gwen quickly. \"That certainly will not change. We expect to improve and enhance our production, not diminish it.\" \n\nGwen once again pointed to Amber Stahl. \"Madam President, how do you think Congress will react to the President of the United States appearing in concerts, especially in other countries?\"\n\n\"Your guess is as good as mine, Amber. The truth is, it really doesn't matter much to me. I have a clear vision of what I intend to accomplish on this world tour. Congress will be back from vacation before I return to Washington. It has responsibilities and obligations to the people of America. It's my hope that, with the encouragement of the American people, Congress will move away from politics as usual and concentrate on improving the lives of our citizens,\" responded Gwen thoughtfully.\n\nThe following afternoon, Gwen was casually dressed as she stood waiting as a helicopter landed on the south lawn of the White House. Dozens of cameras were in place as reporters positioned themselves not far from President Hammer. They watched as Naomi and Steve stepped from the aircraft.\n\nNaomi walked quickly up to Gwen and the two friends embraced warmly and exchanged pleasantries as Steve hung back. After a minute or so, Naomi stepped away from Gwen and Steve came forward. He was wearing cargo pants and a tight Navy camo t-shirt. \n\nThe cameras recorded the surprise on Gwen's face when Steve suddenly dropped to one knee before her. \"My Queen,\" was all he said as he bowed his head. \n\nGwen was unable to totally stifle her smile a small giggle as she looked down at her amazing husband. He had bowed to her as the world watched, leaving no room for doubt that his love and dedication to his wife were total and absolute.\n\nGwen allowed him to remain kneeling for several more seconds before speaking. \"Rise Warrior,\" was all she said.\n\nGwen waited patiently as Steve slowly rose to stand before her. She stared into his eyes as she moved close, wrapped her arms around his neck, and kissed him long and hard while reporters watched in surprised silence.\n\nAcross America, citizens watched the reunion with a great deal of pride. A man reunites with his wife, who just happens to be President of the United States, after a week's separation. The absolute love the couple shared was obvious to all. Smiles turned to laughter when Steve swept his wife off her feet and into his arms before she had finished her kiss. He started toward the White House as Gwen was seen speaking quietly in his ear. He nodded and turned to face the media, but refused to allow his squirming wife to leave his arms for several long seconds.\n\nGwen was giggling like a school girl when Steve finally placed her feet gently back on the ground. Her relief at having her husband back at her side was obvious to all. \n\n\"We'll answer a few questions before we go inside to enjoy a quiet meal with the family,\" stated Gwen with a smile. \n\n\"Steve, ah, Mr. Hammer, how difficult was it to reach the agreement with Russia and China and did you think that they would abide by it?\" asked a network reporter.\n\n\"Just call me Steve. It was a process. Naomi and I remained patient and appealed to everyone's desire for a peaceful solution. I will tell you this. The turning point for getting NATO to go along with the withdrawal was the fearless way Gwen faced Congress. Once our allies were convinced that she was willing and able to take on the legislative branch of government to keep America's promises, our allies quickly bought into the withdrawal.\"\n\n\"President Hammer has been telling us that you and Ms. Wilson-White were responsible for the success of your mission. Are you telling us that it was her actions that made the difference?\" asked another reporter.\n\n\"What I'm telling you is this. The United States is extremely fortunate to have a leader with the vision, integrity, strength, and humility she possesses,\" replied Steve as he pulled Gwen's shoulders closer to his chest. \"Other nations' leaders are very much looking forward to meeting her and discussing a wide range of topics. She has the respect of the world. She's earned it, and it will serve America well.\" \n\n\"This is the first evening you two have been together since you took office, Madam President,\" began Martha Raster, the elder spokeswoman of the press corps. \"You have recently taken up residence in the White House. Do you have plans to 'christen' every room?\"\n\nGwen and Steve laughed as hard as the other members of the press at the older woman's question. \"My goodness, Martha! There are an awfully lot of rooms in the White House,\" observed Gwen with a chuckle. \"Would you recommend such plans?\"\n\n\"Madam President, considering how great your husband looks and how well he defends and loves you, I most certainly would!\" responded the older woman with surprising passion.\n\nOnce again, everyone broke into gales of laughter. As soon as it abated, the older lady felt the need to defend her statement. \"Well, just look at him!\" was all she said as yet again, laughter erupted. \n\n\"We'll take your suggestion under advisement,\" replied Gwen with a broad smile. \"He does look good, doesn't he?\"\n\n\"Steve, Mr. Hammer, how do you feel about the prevailing opinion in Congress that it's undignified and demeaning for the President of the United States to appear in concert, especially in less than friendly nations?\" asked a reporter from a Washington paper.\n\n\"I think Gwen expressed our feelings on deferring to Congress the other day. However, in the interest of fairness, I'll be glad to stop in and discuss the reasoning behind her decision, if any members of Congress would care to meet with me,\" replied Steve evenly.\n\n\"Do you think anyone will take you up on that offer?\" asked another reporter. \"Many members seem to be less than keen to be in the same room with you.\"\n\n\"Anyone treating my wife with the respect she deserves will have no problem with me,\" responded Steve calmly. \"By the same token, those that demonstrate a personal agenda against my wife will definitely be dealing with me. Criticism is an acceptable and important part of a democracy. Personal insults, lies, or any sort of cowardly attacks are not.\"\n\n\"Just now, you knelt before your wife and referred to her as your queen,\" began another reporter. \"Do you feel your wife is the queen of this country?\"\n\n\"That's a loaded question,\" chuckled Steve. \"My wife is my queen. It's just that simple.\"\n\n\"And Steve is my warrior husband,\" added Gwen quickly. \"It's not hype. I honestly think of him that way. Now you'll have to excuse us. I want to enjoy a meal with my friends and family. Martha, I'll get a list of the rooms in the White House, so we'll know just how sizeable an effort your suggestion would require.\"\n\nThe press corps broke into loud laughter as Gwen took Steve's hand and led him into the White House. Naomi was standing with Jared and her two boys when Steve and Gwen entered the building.\n\n\"I watched that on the monitors,\" began Naomi. \"You guys are a delight. The press loves the way you interact with each other, as well as with the public.\"\n\n\"Gwen's the most photogenic, articulate president we've ever had,\" boasted Lisa. \"Having Steve stand at her side makes it even better. In the first week of her presidency, she's brought the U.S. back from the edge of war. Crawford had struggled with it for weeks with no results. It'll be interesting to see if Congress tries to buck the obvious approval America has for her by denying appointments, or creating trouble over the 'World Tour' we'll be embarking on within the week.\"\n\n\"I'm hearing that it's going to be the main topic of discussion for Congress,\" advised William Patterson. \"A lot will depend on how it all shakes out in the end, but rest assured that Congress will be hoping for failure, embarrassing situations, or any other reason to find fault with Gwen's activities.\n\n\"She's thrown down the gauntlet and Congress is still smarting. They're gradually gathering their nerve and formulating plans to weaken Gwen's influence. They seem to keep forgetting about Steve and the Hell he's capable of raining down on them,\" said Steve's grandfather as he slowly shook his head.\n\n\"Dinner is ready, so let's eat,\" interjected Paula. \"The children will be eating with us, so let's discuss pleasant topics. They understand more then we realize.\" \n\nGwen and Steve had big smiles on their faces as they listened to their friends and relatives talk about how amazing it was to be dining in the White House. The kids joined in, asking many questions and making surprising observations. The happy chatter coming from the dining room caused those who had worked in the kitchen under President Crawford to smile. The White House now had a First Family that was representative of America and its values!\n\nThe next morning saw Charlie, Jordan, and Steve setting up instruments in the South Court Auditorium. Before noon, various musicians began arriving with more instruments. The original members of Charlie's band had long ago left to pursue individual careers, but Charlie had greatly increased his contacts with musicians over the years. He now produced numerous successful acts and often needed superior musicians to fill in during recording sessions.\n\nCharlie was delighted to see Jodie Lane stroll through the door carrying her sax. She had forged a very successful recording career and was always in demand to play in recording sessions for other artists.\n\n\"Thanks for coming, Jodie!\" welcomed Charlie as he gave the woman a warm hug. \"I know you had to rearrange your busy schedule to help us for the next two months.\"\n\n\"Yeah, going on a world tour with the President of the United States to play in the best group ever is a real sacrifice for me,\" chuckled the vivacious woman. \"Thanks for thinking of me. I still get goose bumps when I think about that gig in Paris. That really started my career and was my personal highlight, at least so far. I expect we're going to eclipse that show quite a few times on this tour. This is really exciting for me.\"\n\nOnce all of the musicians were assembled, Charlie introduced them to each other and to Steve, who gave a short speech. \"Gwen and I thank all of you for your willingness to give up two months of your busy lives to help us give the best performance we possibly can. This trip is far more than a concert tour. We'll be representing the United States of America. I hope that means as much do you as it does to me.\n\n\"We'll always give our best. We'll be polite and helpful. We'll avoid drugs of any kind and only use alcohol in moderation. We will do nothing to embarrass the president. If you can't abide by these conditions, leave right now. Be assured that if you do something to embarrass Gwen on this tour, I'll kick your ass and toss you out so fast your head will spin. If you perform like Charlie knows that you can and make us look good, you'll receive a healthy bonus at the end of the tour. This is the chance of a lifetime, so please take advantage of it.\n\n\"Once we're set up and ready, Gwen will head over to work with us. Don't let her title affect your performance. We only have time for a few rehearsals, so bring your A-game right from the start. The only other thing I want to tell you is that Gwen and Jordan are the stars and the rest of us will be doing all we can to make them look as good as possible. We have no egos. We all do our best and follow Charlie's directions. He's a genius with music, so don't question him. Just do what he says.\" ",
        "People were standing in line for the White House tour when many of them recognized Paula Anderson, President Hammer's mother, as she approached them. \"I want to thank everyone for your interest in seeing the White House. It's an amazing place. That's for sure.\n\n\"The reason I'm here is to ask you if you'd like to come with me to the Eisenhower Building auditorium to watch my daughter and her friends rehearse for their upcoming world tour. We'd like some people in the seats to give the muscians an idea of how they're doing. If you'd like to come, please follow me.\" \n\nNaturally, no one declined the opportunity to see President and Steve Hammer perform. Paula led the group through a security check and then to the auditorium. They'd barely found their seats when a curtain went up and the music began. \n\nWhat the audience had not been told was that some of the top acts in the music world were also on stage to perform. The rehearsal was needed for Gwen, Jordan, Steve, and Charlie to become comfortable with some very successful musicians. After two hours, the performers took a break and those allowed in to watch were escorted back to the staging area in front of the White House, where several reporters were waiting.\n\n\"Can you tell us anything about the rehearsal you just watched?\" asked a network reporter of a young woman standing next to a man in Army fatigues.\n\n\"I can't believe what I just saw and heard!\" exclaimed the woman. \"My husband is on leave, so we came to Washington for a short vacation. We'd hoped to catch a glimpse of President Hammer, but we got so much more. For two hours she and some of the best musicians in the world performed for us. Jordan and Charlie Burns were amazing! Jack Timberline was great!\n\n\"Jodie Lane played the sax like nothing I've ever heard before! Kathy Perrine sang a duet with President Hammer and another with Steve Hammer. Tom McGregor sang with Jordan and Charlie! They were unbelievably good. I'm here to tell the world that they're going to put on a better concert than anyone has ever even dreamed possible. My husband and I have already decided that we're going to catch a flight to one of the cities they'll be playing in. Their world tour's going to be historic, and a major rush!\"\n\nOver the next several days, a few hundred fortunate people were privileged to watch the rehearsals each afternoon. When questioned about what they had seen, words like incredible, amazing, and the absolute best were often used.\n\nAs usual in Washington, the better the 'world tour' was accepted by the public, the more upset Congress became. Members of the House and Senate began appearing on news programs and talk shows decrying Gwen's actions and the ramifications of the President of the United States stooping to perform abroad, especially in nations considered to be enemies by many Americans. More than a few times, Gwen was likened to a traveling minstrel.\n\nOn Friday, Senate Majority Leader Lancer was interviewed on a morning news program. He was asked his opinion of the 'We Come in Peace World Tour'.\n\n\"Truthfully, I think it's a huge mistake. This isn't how diplomacy is done. Other nations will lose any respect they may have for our country and especially for the office of President. By the time this tour is over, President Hammer will be the laughing stock of the world and our standing will plummet around the globe.\"\n\nWhen asked about her chiding the Senate to approve her nominations for the cabinet, Lancer launched into another attack.\n\n\"President Hammer has resorted to issuing threats to the Senate to gain approval for her nominations. This country has never seen attempted nepotism of this magnitude in its long and storied history. She's trying to appoint her two sisters as well as her brother-in-law to cabinet, or near cabinet level posts. That would defeat the basic purpose of having a cabinet. She should be receiving diverse opinions from advisors, and not allow a privileged few to be in a position to have more influence with the President than experts from various fields and disciplines. The Presidency requires a measured and cautious approach to very real issues.\"\n\nSteve and Gwen watched the interview from the White House with their guest, Vince Rosen. \"Listen to the hypocrite,\" marveled Rosen. \"He's the one that forced a law through in the first year of my administration that repealed US Code 3110. It had been enacted during Lyndon Johnson's administration because Johnson wanted to stop Bobby Kennedy from appointing his brother, Ted, to the cabinet if Bobby was elected President of the United States. Johnson hated that Bobby had been allowed to be Attorney General in JFK's administration and moved to make certain that Bobby would never be able to the same with his own younger brother.\n\n\"If Lancer hadn't rammed it through with the Veteran's Aid Bill, you'd never be able to nominate Kate, Lisa, or Jason to these positions. Lancer plans on running for president next election. He's got a very wealthy half brother that can pretty much bankroll his campaign. Rumor has it that the brother wants to be either Secretary of the Treasury or head up the Fed. Did I mention the brother owns Stafford and Brown Investments, Inc? \n\n\"Essentially, Lancer's being hoisted on his own petard,\" observed Gwen, appreciating the irony. \"This nepotism thing is annoying. I want people I know and trust closest to me. Why does that seem wrong to anyone?\"\n\n\"Because nepotism is normally used for personal gain,\" replied Rosen. \"Plus, you can imagine the power you and your family will possess if you manage to get Lisa, Kate, and Jason approved. Historically, when a family attains the kind of power we're talking about, they often become despots, dictators, or possibly self-proclaimed royalty.\"\n\n\"Am I wrong to want Kate, Lisa, and Jason working with me to make this country better?\"\n\n\"Not in this case, but I can say that because I know you. You're not obsessed with power and you're already extremely wealthy. I think having people in your corner that you can absolutely trust is a tremendous asset. I'm speaking from experience here,\" added Rosen.\n\n\"When Harvey Miller, my Secretary of the Treasury, was indicted, I was blindsided. I had no idea what he was up to and had no reason to suspect anything. Obviously, I hadn't been 'vetting' my selections well enough. That was a real low point for me.\" \n\n\"Would you advise me to nominate someone else for those positions, rather than family?\" asked a troubled Gwen.\n\n\"No,\" responded Rosen immediately. \"For one thing, you've already placed their names up for considerationand to change now would indicate that you fear the Senate. Secondly, you've thrown down the gauntlet to Congress. You've got to carry through now. Otherwise, they'll be like sharks smelling blood. \n\n\"And most importantly, you'll never find anyone else that you can depend on and trust as much. Gwen, you've gained lot of political capital over the years with the many good deeds you, Steve, and your company have accomplished. Just last week you prevented a possible world war. Remain open and determined. The public responds to that and whether members of Congress like it or not, they still must answer to their constituents or be voted out of office. Just keep doing the right thing and don't worry about the rest. Every day Americans are behind their 'Queen'.\n\n\"I still have quite a few contacts here in Washington,\" continued Rosen. \"I'll keep an eye on things here while you're abroad. If anything comes up that you need to know about, I'll contact you immediately. Just have a successful mission, or should I call it a gig?\" teased Vince Rosen with a grin.\n\nSaturday evening saw President Hammer and her large entourage climb aboard Air Force One for the flight to Pyongyang, North Korea. The trip was heavily covered by news outlets around the globe. It was noted that there was no room for the press on the flight as Gwen's family and friends, along with all of their children, essentially filled all of the seats.\n\nTo accommodate the press, Lady in Red Productions made the \"Red Lady\" available. It was made known to the public that Lady in Red was paying all expenses involved with the 'Red Lady' and it would cost tax payers nothing. \n\nJong was present to welcome President and Steve Hammer when they deplaned Air Force One in Pyongyang. The historic meeting between the sitting a sitting U.S. President and Chairman Jong was broadcast around the world. Jong grinned from ear to ear as he shook Gwen's hand in greeting. Gwen smiled and graciously made a brief statement to the press while still on the tarmac.\n\nOnce the greetings were concluded, the President's entourage was whisked to a modern hotel in the center of Pyongyang. A state dinner was scheduled in two days and the first concert of the tour was slated for the following evening. That allowed Gwen a day to rest as well as acclimate to the time change. \n\nNorth Korea insisted on limiting what sites could be visited by the American delegation on their day off. \"When we made the movie here, they did the same thing,\" remarked Steve as he went over the destinations Jong's government recommended for their off day. \"The beaches are really beautiful and we're allowed to visit them. In fact, I think Jong's trying to steer us that way from the looks of the possibilities we were given.\"\n\n\"The kids would love a day at the beach. Let's tell their government that we'll be taking advantage of their offer to enjoy one of their beautiful beaches,\" decided Gwen. \"I'll let everyone know while you advise our hosts of our decision.\"\n\nLate the next morning, Gwen and Steve, along with family and friends, found themselves on a beautiful beach on the Yellow Sea. Reporters and their cameras were asked to remain in a cordoned off area as the President of the United States enjoyed the sun and surf with her family.\n\nSteve and Chip spent time with the older kids on surf boards. Not surprisingly, Saint picked up the sport quickly and was seen riding some medium sized waves after an hour on the board. Ruth and Theresa did almost as well, while Ashley's stepdaughter, Ingrid struggled a little even though she was five years older than the other girls. Stephanie's brother, Billy, was now almost sixteen and really took to the water. Steve cautioned him a couple of times about moving too far from the group. Everyone else played near the shore with the younger children.\n\nEventually, the surfing ended and Steve found himself alone with Gwen. The couple swam and body surfed as they enjoyed their time together, as others watched over their children. \n\n\"We really have to speak to the press at some point,\" said Gwen as Steve swept her into his arms. \"It's only polite after they've waited a couple of hours for the opportunity.\"\n\nSoon Steve and Gwen were seen walking out of the water and along the beach toward the large press gathering. Gwen took Steve's hand and smiled happily as they approached the newscasters. \n\n\"Madam President! Can you tell us your impressions of North Korea so far?\" asked a North Korean in perfect English.\n\n\"As you know, we've been here less than a day, but everything has been very nice so far,\" replied Gwen. \"The beach is beautiful and the water is perfect. I can easily see why this is a popular destination for locals and tourists.\"\n\nGwen spent twenty minutes speaking with reporters. She took every opportunity to praise her host country for its hospitality. Finally Gwen excused herself to return to her family as they prepared to gather their belongings for the trip back to the hotel.\n\n\"That seemed to go fairly well,\" observed Gwen as she and Steve rejoined their group. \"I think Jong should be pleased with my compliments.\"\n\n\"Yeah, he'll be pleased alright,\" quipped Kate. \"You just did a question and answer session with the world press while wearing a bikini. I think there'll be several hundred million very pleased guys watching that.\n\n\"It's the beach!\" exclaimed Gwen. \"It's normal attire for the situation. I think you're overstating the reaction. Besides, I'm wearing one of my more sedate suits. I left my thongs at home.\"\n\n\"Good thing,\" laughed Naomi. \"I don't think Congress is ready for a president in a thong, especially with that big butt of yours.\"\n\n\"To think that I was the one that wanted you for Secretary of State,\" lamented Gwen as she suppressed a smile. \"You still haven't learned that kissing the President's butt is the way to get ahead.\"\n\n\"I'll leave that to Steve,\" responded Naomi. \"He sure has a big target to work with.\"\n\n\"Kate, would you look through your law books to see if Naomi is guilty of treason or some other high crime? Her lack of respect is appalling,\" complained Gwen.\n\n\"Actually, Sis, I don't think you want to go there. Steve would have to testify under oath about kissing your butt and discuss how big a target it is.\"\n\n\"You're right, Kate,\" conceded Gwen. \"My hips and boobs have gained an inch after having the kids. I had to work like crazy to get my waist back to where it was. Maybe I'm getting too fat for a bikini.\"\n\n\"I can honestly state that the guys in our circle of friends don't think you're getting too fat,\" observed Charlotte as she joined the conversation. \"They can't seem to pry their eyes off you. Everyone always thinks Billy is a perv, and they're right of course, but all of these red blooded males seem to be pretty happy with the way we all look, but especially you, Gwen. You've got that classic hour-glass figure that men appreciate.\"\n\nWashington was twelve and a half hours behind Pyongyang, so Gwen's meeting with the press on the beach was in the early morning hours back in D.C. It was only after everyone had put their kids to bed and gathered in Gwen's suite that information from Washington began filtering in.\n\n\"Lancer is having a field day criticizing you, Gwen. Your attire was provocative. The President of the United States should always be dressed in a dignified fashion, according to that jackass,\" fumed Lisa. \"He's appearing on several morning news shows and he's telling the world that you've embarrassed yourself, your family, and your country.\"\n\n\"That's not what I'm getting off the internet,\" reported Stephanie. \"I'm so glad James and I had the chance to come on this tour. There's pictures of all of us in swim suits and we look pretty damn good, especially Gwen.\n\n\"There are photos of Gwen walking out of the waves and she's a definite ten! The one of Gwen and Naomi standing together is amazing. Lisa and Kate are pictured together. Most of the comments are about how good we all look and how proud Americans are to be represented by us, although I have dual citizenship now.\" \n\n\"The picture of Gwen and Steve standing together as Gwen speaks to the press is really hot!\" exclaimed Kate as she passed her iPad around the room. \"That's our president and her husband. They look better than any models I've ever seen. But it's still a good thing Gwen didn't wear a thong. I don't think the older guys in the press corps could have handled that without defibrillators.\"\n\n\"We discussed this the day I took the oath of office,\" recalled Gwen. \"We agreed that we weren't going to change the way we did things now that I'm president. I was interviewed a few times on the beach while I was a senator and not much was made of it. We're going to continue to try to do the right thing for the United States and improve conditions around the world. I can't be worried about Lancer and his cronies.\"\n\n\"Maybe not, but Steve appears to feel differently. Look at how he's scowling as he watches Lancer attacking you,\" pointed out Paula. \"I have a feeling that Senator Lancer may soon be wishing he had been a bit more circumspect in stating his opinions.\"\n\n\"I found a web site dedicated to Asgard,\" revealed Ashley. \"It's being compared quite favorably to Camelot. It seems that Gwen's term in office is going to be the known as the Age of Asgard, or so this site claims. She's referred to as both the Queen of Asgard and President of the United States. This site is really quite well done, very extensive, and shows a lot of time and effort.\"\n\nThe next evening was the state dinner. It was scheduled for seven PM, Pyongyang time, which was six-thirty in the morning in Washington. Some news programs carried the event live while many other broadcasts showed the highlights.\n\nAmerica saw President Hammer looking radiant in a red gown. Her hair and makeup were done perfectly. Escorting her in a tuxedo was her exceptionally handsome husband. Many viewers remarked to themselves as well as to others that it was almost like watching a movie. Never in real life, not even with Camelot, had a nation been represented by such an attractive, charismatic couple. It was obvious that Steve was completely at ease in the formal attire, but Gwen was the focus of the event. Her beauty, poise, and intelligence played to the cameras. Viewers were spellbound as they watched and listened to President Hammer speak to the North Korean leader and his delegation.\n\nWhile touching on civil rights, hunger, poverty, and inadequate healthcare, Gwen did not belabor the issues. She did pledge that America would work with North Korea to improve relations and possibly open an embassy in Pyongyang. Jong was delighted with what he heard. He promised to work toward better conditions for his people and welcomed improved relations with the United States. \n\nOnce again, Senator Lancer and Congressional leaders from both parties immediately questioned Gwen's decisions. How could she even suggest establishing diplomatic relations with North Korea without meeting with Congress and getting its approval? International diplomacy required a great deal more experience and knowledge than she and her advisors could possibly possess. \n\nGwen's critics added that the next day's concert was going to totally embarrass the United States in front of North Korea and the world. They strongly urged President Hammer to forsake the ill-conceived fiasco. Washington wasn't anything like Hollywood and the sooner she realized it, the better off she and the United States would be! \n\nGwen was well aware of the criticism coming from the politicians in Washington. She discussed it at length with family and friends as she prepared for her concert. The plan was for Gwen to be presented to the crowd before the other musicians so that she would have the opportunity to speak through an interpreter to the North Koreans in attendance. After Gwen's short speech, Charlie would count off the first song and the concert would begin in earnest. \n\nGwen and her entourage had had almost no opportunity to meet with the citizens of North Korea. Steve had explained that Jong was a control freak and would allow no opportunity for anyone to insult or demean his government in any way. Thus, they had no way of gauging what her reception would be at the concert. \n\nJong had a special viewing tower constructed in Kim II-Sung Square, where the concert was to be performed. He was surrounded by very thick bullet proof glass. Jung trusted no one. He was to take his seat shortly before the show was scheduled to begin. \n\nKi-Woo was a fifty year old mechanic in Pyongyang. He had a daughter still living at home and two sons in the military. It was not uncommon for young men to be 'persuaded' to enlist in the North Korean Army. \n\nHis sons had managed to inform him of the impending war and he had been very concerned. He knew North Koreans lacked the modern technology to battle the world's super powers on an even footing. Many North Koreans would die if war came to the peninsula. \n\nBecause of his sons' information, Ki-Woo had been secretly visiting a neighbor that was able to access the internet without the filters North Korea had installed. He closely followed the escalation of the world's armed forces as well as the death of American President Crawford. He was stunned when the woman the world knew as The Lady in Red became the new president! ",
        "He cried for the first time in years when he learned that war had been averted by the daring actions of President Hammer and her warrior husband. Even in a heavily censored North Korea, people were very familiar with the exploits of this famous couple. \n\nWhen it was announced that President Hammer was going to visit Pyongyang and perform in concert, he promised himself that he would be take his wife and daughter to see the beautiful American leader, the woman known to many as 'Queen'.\n\nKi-Woo, along with his wife and teenage daughter, had waited with stoic patience for several hours for the concert to begin. He stared in wonder at the beautiful woman as she was introduced to the North Koreans. Without conscious thought, Ki-Woo went to one knee and bowed his head in appreciation for the peace she had secured for his people. Not wanting to do the wrong thing, his wife and daughter followed his example. Those nearby quickly did the same.\n\nAs he knelt, a very emotional Ki-Woo managed to croak out \"long live our queen\" under his breath, but loud enough for his daughter and wife to hear. Again, they repeated his actions. Others immediately picked up on the short chant.\n\n\"Gwen, I know you're a little concerned about what those pompous asses in Washington are saying,\" began Steve as he took his wife into his arms just seconds before the start of the concert. \"You're doing the right thing. If anyone in Congress knew as much as you, they'd be president and we'd be watching them. Trust your instincts, and your friends.\"\n\n\"What they lack, and what I have, is you,\" whispered Gwen. \"As long as I have your love and support, I'll never worry about anything. I love you more than ever!\"\n\nThe performers were given the signal to take their positions. Cheers boomed and echoed around the square as the band appeared on the elevated stage. Gwen waved as she stepped to the front, close to the bullet proof glass that surrounded the stage. A voice came over the sound system speaking in Korean and introducing Gwen as the President of the United States. Gwen's smile only became larger as she strode along the front of the stage while waving to the crowd. Over a hundred thousand voices cheered her arrival in their homeland. \n\nGwen was wearing a long cape that was fastened around her throat and held together by several felt straps down the front. Only after a full minute, did the cheering die down enough for Gwen to finally speak. What happened next came as a complete surprise to the Americans, and especially to President Hammer.\n\nAt first a couple of hundred people directly in front of Gwen had dropped to one knee. As she watched in awe, wave after wave of humanity dropped to one knee. In less than a minute, every person in the square, an estimated crowd of well over a hundred thousand, was kneeling before Gwen.\n\nThe huge jumbotrons clearly showed the tears that ran down Gwen's cheeks as she held her hand to her mouth in amazement. A barely audible chant began but it quickly rose to a crescendo. Gwen looked to her interpreter, who was standing off to the side in apparent paralysis. The woman finally read the confusion in Gwen's face and moved quickly to her side. \n\n\"They are chanting 'Long Live Our Queen'. This has never happened before,\" assured the female interpreter. Tears also streaked her cheeks as she, too, went to one knee and bowed.\n\nGwen turned back to the crowd and stood calmly and smiled with tears still falling, as the chant continued. Gwen bowed several times to different sections of the crowd before going to one knee in a gesture of humble respect for the people of North Korea. She remained in that position for a full minute before standing upright and moving both of her hands upward in a gesture for the crowd to rise.\n\nIt took some time, but eventually everyone was standing. Gradually, the chanting quieted down. \"My friends, I am so honored! As long as I live, I shall never forget this moment. I had prepared a short speech, but it seems so inadequate after this incredible reception you have given me.\" \n\nAs Gwen spoke, Ki-Woo was certain that she was looking directly at him. He offered a weak smile and to his surprise, President Hammer nodded and smiled as her eyes remained on his.\n\n\"We come in peace! We want only the best for each and every one of you. May you prosper, enjoy good health, and live long lives. May all nations begin to work toward that common goal. Thank you for being so gracious to me, my family, and my friends. We dedicate this concert to the good people of North Korea!\"\n\nThe female interpreter quickly repeated Gwen's words. There was a huge roar when she finished speaking.\n\nAre you ready for some music?\" shouted Gwen.\n\nThe crowd needed no translation to understand what Gwen was saying. Cheers, whistles and applause rang out as Gwen reached up and pulled her cloak from her shoulders and tossed it aside. The din only increased as the audience saw Gwen was wearing a red leather bustier and leather shorts with heeled leather boots. It took a few beats of the drums before those in attendance realized that the concert was beginning, and the din lowered to a dull roar.\n\nThe band had relied completely on Charlie to plan out the concert. When asked about the opening number, Charlie had left little room for doubt.\n\n\"Everyone around the world has seen us perform, either in person, on television, or on the internet. They expect us to open with 'We Will Rock You' and they'll settle for nothing less. We'll be doing exceptionally long concerts, so we'll work in all of our hits, but Lady in Red opens with our Queen singing 'Queen'!\" \n\nSo it came that the President of the United States began her world tour in a country that had no diplomatic relations with the United States. She pranced across the stage as she engaged her audience and encouraged everyone to join in, and join in they did. Steve and Charlie exchanged nods as it became obvious that their world tour was destined to make both musical and diplomatic history. \n\nGwen had been inspired by the incredible reception. Steve had never seen her perform with as much vigor and intensity. She gave the audience all that she had and they loved her for it. With just two short breaks, the concert lasted six hours. In each set, several guests performed individually as well as with Gwen, Steve, Jordan, and Charlie.\n\nSteve and Gwen performed several of their more popular dance numbers for the enthralled audience. Their 'Dirty Dancing' performance delighted the crowd, but for an encore at the end of the show, they gave the North Korean fans the opportunity to see them perform their dance from 'Billie Jean' live! There were probably fewer than a few hundred people on the entire planet that had not seen their iconic movie performance on the big screen, television, or over the internet. The crowd loudly roared its approval as Steve lowered Gwen to his chest at the end of the dance while the lights dimmed for the last time that evening.\n\nThe stars that had volunteered to appear in the concert were effusive in their praise once the show finally ended.\n\n\"I used to think that I'd put on some good concerts over the years, but I realize now that I was just coasting. That was the most remarkable concert I've ever been involved in,\" exulted Jack Timberline. \"The energy level was incredible and the individual performances were unbelievable. Thank God you guys decided to help me straighten my life out. What an honor it is to be here with Lady in Red!\"\n\n\"Can you believe that all of those people knelt down in honor of President Hammer?\" marveled Jodie Lane. \"What were they chanting?\"\n\n\"It was kind of embarrassing,\" admitted Gwen. \"Those wonderful people were saying 'long live our queen'. Can you believe that could happen in North Korea?\"\n\n\"I probably wouldn't, if I hadn't seen it,\" agreed Steve. \"I'm beginning to think that this 'I Come in Peace World Tour' is going to be even more than we'd hoped. You're not just improving relations with heads of state. You're reaching out to the everyday citizens, and they're responding. While some governments may want war, all people want peace.\"\n\nPresident Hammer and her entourage were packed and traveling back to the airport by nine the next morning. Surprising everyone, Jong had made a brief appearance as the group was having breakfast in a private room. He thanked Gwen, Jordan, Steve, Charlie, and the others for the great concert. He then reminded President Hammer that North Korea would be interested in initiating trade with the Unites States. Next he made a pitch for more movies to be filmed in North Korea. The movie Steve and friends had made years earlier had increased tourism somewhat and he wished to see that trend continue.\n\n\"You're going to have to allow more freedom for visitors to travel in your country if you truly want more tourism,\" pointed out Gwen. \"We'll certainly consider making another movie here, but we'll need to see some progress toward more basic freedoms for your citizens. You have a wonderful culture, some beautiful beaches, and amazing architecture that will attract visitors. They'll need to know that they'll have the freedom to enjoy them.\"\n\nJong listened closely to the interpreter and then nodded to Gwen. He shook hands once more and was smiling as he left the room. Shortly after the brief meeting with Jong, the Americans were boarding the flight to Seoul, South Korea.\n\nAs soon as they were in the air, Lisa came to sit close to Gwen and Steve. \"The South Korean government is in crisis mode today! The President has apologized to the nation for her role in a huge scandal. She's been taking advice from some lady associated with a cult, if you can imagine that.\n\n\"Now her political advisors are insisting that she come down hard on you for being so friendly with their sworn enemy. I've already been told that a lower tier government official will be meeting you when you arrive in Seoul. They're insisting on a formal apology from you before they'll even attend the state dinner. They're also threatening to cancel your concert. All of this is supposed to restore her credibility as a strong, independent minded leader. It looks like it's going to be a diplomatic fiasco,\" warned Lisa. \"I'll bet that Lancer will be delighted.\""
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "washington",
        "pyongyang",
        "north korea",
        "senate",
        "queen",
        "world tour",
        "concert",
        "president"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-03-ch-02"
}