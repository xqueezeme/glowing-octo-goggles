{
    "title": "Lumberyard Miracle",
    "pages": [
        "Lumberyard Miracle - A tale of improbable love \n\nINTRODUCTION / IS THIS STORY FOR YOU? \u2014 This is a love story, and like many love stories it is about the unlikely odds of two people finding one another in such a huge world made up of seemingly random events and billions of people. It is a story that I hope explores deeper than the flesh and bodies of the characters, and thus it is my humble attempt to uncover the souls, desires and hopes of individuals who happen to be part of humanity whose gender identity and attractions may not conform to society's rules. One of the main characters is on the knife edge that separates he/she from being transgender or a feminine man. The other main character is a bisexual-man. If descriptions of male/male or trans/male sex aren't your cup of tea, you probably need to back out now. It is a medium length tale of about 8 Literotica Screen pages \u2014 yes, I've written another Romance. But, I hope you can find time to read it. I have labored over this story for over a year and almost gave up. A complete rewrite with a change in point-of-view and style has saved it \u2014 I hope. As always, your vote and comments at the end are welcome and appreciated. You're also welcome to send me private feedback if you prefer. ~ yukonnights \n\nAll copyrights reserved by the author, yukonnights and published solely on Literotica.com\n\n*****\n\nI can't help glancing at the guy beside me. He's pretty much everything the perfect man in my day dreams would look like. He's obviously a working man, the hands picking through the stacked lumber are strong and calloused ... and his discerning eye is quick in choosing the boards he'll accept. I'm not such a man, and it is pretty obvious. But I need to find a few boards to patch my fence so here I am, way out of my element.\n\n\"What'cha building?\" he asks, in the way of casual friendliness.\n\n\"Oh, nothing really, I just need to replace three boards in my fence,\" I tell him. It gives me an excuse to really look at him for the first time without it seeming weird and the first thing I notice is his honest friendly smile.\n\n\"I don't think those are what you want. I assume you have a cedar fence?\"\n\n\"Yeah, I'm pretty sure it is cedar. We had one like it back home and my folks always called it a cedar fence.\"\n\n\"The cedar is down there near the end of the isle, these are just cheap common whitewood. They won't last long in the weather. Follow me, I'll help you find what you need.\"\n\nI follow him and from the backside, he is indeed a perfect model for my imagined love making sessions. As he bends over to push his lumber cart, his faded jeans are obviously filled with muscle instead of fat. Plus, he's really nice. I've pretty much given up on the man of my dreams being a reality. After trying all the usual ways to meet a man that might be something more than a hook-up ... it's hopeless. That was true even back home. Now, out here in Flagstaff, I don't even know where to start. After so many years of searching for a man with a heart as well as a decent body, I so empathize with women and what they have to endure in the search for a guy who isn't afraid or incapable of tenderness. And now, I can't remember the last time I even tried to find such an elusive being. Yep, that's the sum of it \u2014 stranded high and dry and all alone.\n\nLost in my thoughts, I almost run into the stranger when he stops to shuffle through the pile of cedar fence boards. He quickly sets aside the three I need. \"Thank you for helping me find the right boards. I guess it's pretty obvious I'm no carpenter.\"\n\n\"You know, I might also be able to help you with that other thing.\"\n\nConfused and honestly not knowing what he means, I guess it's the look on my face that prompts him to help me understand by adding, \"You're right, the nail polish makes me think you don't normally do this kind of work.\"\n\nNail polish! I cleaned it off last night! That I instantly look down at my hands pretty much busts me and I feel the panic coming on.\n\n\"You missed a little on your left hand. Nice color though.\"\n\nI'm totally flustered now, I can feel that my face is red and since my mind just went blank, I don't have any reply.\n\n\"Hey, it's okay. I like it. I'm sorry I took you off guard like that. Here, take my card and If you need some help fixing that fence just give me a call ... no charge.\"\n\nFinally getting my wits back in control, I take the card from his hand, and mumble a quiet, \"Thanks.\" I look up into his eyes and feel a sense of relief when I see his smile. It's a kind smile, not some lecherous creepy one that's, in my experience, more common. In response, my own smile comes naturally and unbidden.\n\nAs we stand there, both knowing it's time to go our separate way, he says in a soft way, \"I could help you with the other thing too, if you need someone to do that.\"\n\n\"What other thing?\"\n\n\"The other thing about you being more feminine, unless you already have someone,\" he says softly and in a kind way.\n\n\"I'm not sure I know what you mean.\" It's a lie ... and it doesn't even sound very convincing to me.\n\n\"It's not my way to be pushy. I just want you to know before we leave that I find you interesting ... and, someone like you doesn't come into my life everyday. So, just thought I'd take a chance and be a little forward. Think about it, maybe we can just go out to dinner one night and talk or something.\"\n\n\"Oh ... okay, thank you for the help. Let me think about it, okay?\"\n\n\"Of course. Actually you passed the first test,\" he replies.\n\n\"What test?\" \n\n\"The slut test. If you had been all ready to go right now, I would have lost interest,\" he tells me and smiles again.\n\n\"Uh ... thank you, I guess that makes me feel a lot better about your offer...\" I pause to look down at his card \u2014 \"Daniel.\"\n\n\"Do you trust me with your name?\"\n\n\"Oh, duh! I'm Erik, Erik Taylor,\" I take the offered hand that swallows up my own. As we shake, I'm surprised by his gentle touch, so unlike many men who try to see who can crush the other's hand first.\n\n\"It's been nice meeting you Erik, and I hope you'll give me a chance to prove my words.\"\n\n\"I just need to think about it. I'll call you though ... to let you know. I mean like, either way.\"\n\n\"I couldn't ask for more than that Erik. Until later,\" he says and pushes his cart in the opposite direction that I'm going.\n\nI think this is the first time a man has ever approached me so honestly and confidently. I know I'm becoming more feminine on the inside, even with just my efforts toward being more passable in the privacy of home. But now that it's over, I'm surprised and a little flattered that he noticed me at all. Since giving up on men, I've pretty much accepted that I'll be alone in this part of my life ... actually, pretty much alone in all of life. Do I really want to try and take this out of my own bedroom again? I've dreamed of a man holding me, it feels scary now when it gets close to being real.\n\nWhen I get home I put my three boards in the garage, and Daniel's card under a magnet on the fridge. First things first, get out of this disguise I'm wearing! As I slip into Erika's clothes I feel a calming sense of myself coming back into view. When I'm honest with myself, I'm really starting to be concerned about my cross-dressing. It had started ... oh it had started so long ago I can't even say \u2014 it's almost easier to say I've always been like this. But it's getting harder to pretend \u2014 harder to wear the disguise of my man clothes. I mean, I can pull it off okay at work and family, even if it is so draining. At times I feel like I'm not really living, just going through the motions that are scary. My eyes fall on the pile of books and snippets of articles on the shelf. These have been the only council I've relied on ... it's all I've got. They seem to tell me that I don't fit into the technical description of transgender \u2014 but where is the line drawn? I still wonder about that. It's being stuck out in limbo that keeps me so unsure of who I am ... of what I am. The only comfort to be found is to just be alone so Erika can come out and enjoy life ... and I can get some peace.\n\nI sit on the sofa sipping a glass of wine, looking at Daniel's card in my hand. I smell it, and think I can detect some faint scent, or maybe I'm just imagining the smell of man and sawdust? Daniel Espenoza, Custom Home Builder. I thought maybe he was Native American at first. He's beautiful \u2014 I bet he doesn't even know it. Am I even ready for this? I've dreamed of laying open and vulnerable under a man so many times ... under someone who understands me and loves me anyway. But dreams are safe. Maybe that's enough. Why rock the boat with some stranger?\n\nOnce I've talked myself out of it, I pick up my phone to tell him I'm just too busy. I enter the number ... then delete it and set the phone back on the coffee table. No need to be hasty. Just sleep on it maybe. Life is pretty lonely all alone, and my only so called friends would die laughing if they saw me right now in these lacy things. I'm living a lie, sneaking around just waiting to be found out. Frustrated, I refill my glass and turn on the television, searching for something to distract me from this seemingly never ending conversation I have with myself. After less than an hour, the wine and the TV are putting me to sleep. So, I've succeeded in finishing off another day and head off to bed.\n\nAfter my shower, I'm wide awake again and snuggle under the covers \u2014 playing with myself as thoughts of him drift back in unbidden. I imagine his strong hands rubbing my nipples, not my own hands. His hand runs across my panties and the small lump hidden in them, not mine. Frustrated, I get up and take one of my vibrators out of the bottom drawer of the bedside table. I grab a towel and spread it over the bed, then I do what I always do ... I make love to a man in my imagination. But this time he has a face and a name. As he fills me and pleasures me, I whisper his name, Daniel ... before I want it to end, I come on my belly and finally lay exhausted and relieved. I switch the vibrator off, leaving it in me as I come back down from the heights of my orgasm. \n\nAfter the cleanup, sweet sleep visits and the anxious thoughts dissolve as I drift away.\n\n*****\n\nAfter three days and three nights of the same ritual, I'm ready to throw in the towel. This time when I pick up his phone and enter the number, I don't hang up. I'm as nervous as a virgin on her wedding night, waiting for Daniel to answer. A mechanical sounding voice comes on the line, \"We're sorry we missed your call, please leave your name and number so we can call you back during business hours.\"\n\nI hang up without leaving a message, and laugh out loud. \"How stupid is that! It's a business card dummy \u2014 and way past normal business hours \u2014 duh!\"\n\nBut at least I called. I'll try again tomorrow morning.\n\nOddly, I don't recall falling asleep \u2014 just that I was thinking about what I should say to Daniel tomorrow.\n\n*****\n\nJust before leaving for work, I make the call. It's only a little after seven and I'm not sure of when his office might open. Just before ending the call after a lot of rings, a man's voice says, \"This is Dan, how can I help you?\"\n\nNow my nerves remind me they want to be in charge, but pressing through them I say, \"Hi Daniel. It's Erik from the lumber store ... you helped me find the fence boards the other day.\"\n\nDaniel replies in a delighted voice, \"Well, I was really hoping you'd call Erik. I've been thinking about you. What's on your mind?\"\n\n\"I've been thinking about all you said the other day ... and I ... I thought maybe I'd like to get to know you better and was wondering if you'd like to come over for dinner or something one of these days when you have time. I was thinking maybe Saturday if you're not busy,\" I say it all in one nervous rush of words and scold myself to calm down.\n\n\"Yes, this Saturday would be perfect, what time were you thinking?\"\n\n\"I hadn't really thought about the details, I'm free all day ... so when do you think would be good?\"\n\n\"How about in the morning? It might be fun to take a drive if you like to explore the country around here. Does that work for you?\" Daniel asked.\n\n\"Sure, I'm free all day and getting out into the desert is actually one of my favorite things to do. I'll pack us something to eat and drink. Do you have any requests?\"\n\n\"Oh, I'm easy to please, just keep it simple. I'm more interested in getting to know you than eating. But who knows how long we'll be out, so that's a good idea,\" Daniel replies.\n\n\"I guess I feel the same about you, and I'll keep it simple on the food. I'll see you Saturday then.\"\n\n\"Not if you don't tell me where to find you,\" Daniel says, with humor tinging his voice.\n\n\"You must think I'm a nit wit, it's just that this is all pretty new to me. I live at 320 Bern Street. Does my phone number show up on your phone?\"\n\n\"Yeah, I got it. I'll see you Saturday. And Erik, I'm glad you called.\"\n\n\"Thanks for everything Daniel, I've been thinking about you a lot.\"\n\n\"I've been thinking about you too, and I really am glad you called.\"\n\n\"Okay, see you soon, bye Daniel.\"\n\nThe last thing I want to do now is to get my butt in gear and get to work. But like the rest of the world, I have no choice. The traffic seems pretty light today. I wonder what Daniel's days are like? Probably better than mine \u2014 it'd be nice to be my own boss. I wonder where this will all go with him? He seems nice, but he is a guy \u2014 they can fake nice pretty good. I'm happy I called him, just have to wait and see.\n\n*****\n\nThe week drags on and on, even more than usual. I like Flagstaff, it's a nice change after college ... but I miss my friends. Being a loner doesn't help much in finding new ones either. At least I get to discover the wide open desert and the many places I've found on my weekend wanderings. Really, it's the time I get to spend in these canyons and deserts that keep me going \u2014 and now there's Daniel. I won't get my hopes up too high, maybe just let them run a little ... maybe someday I'll find my place in it all.\n\n\"Okay, I've got to just make a decision.\" I've been changing my mind about what to wear and what to pack for lunch all week. Time's up. The menu is the easy part. What to wear is the hard part. If I just knew what Daniel will be expecting, it'd be easier. Does he expect me to be dressed as a man or as Erika? Well, since I can't call him up and ask ... I'll just fall back to my safe place \u2014 go for my androgynous look.\n\nAt least I have a direction now, even if it is falling back to my coming of age, all the way back to 1999. Good times, I meshed perfectly into emo culture, wish it could have lasted. And now Obama's the new president \u2014 where'd the years go? I'll always love the music that fueled our passion \u2014 especially the softer, more broken hearted style. It was those songs of love and it's disappointments that helped me dig deeper into my own soul \u2014 to dig down and to find what I need in life \u2014 and what's just missing altogether. I guess nobody ever fully answers those questions, I'm still learning. At least I'm still asking and looking. I was lucky, it was the best time to be alive and I took full advantage of the freedom. It was what let me explore my feminine side, able to do it without it being too far out of the mainstream \u2014 at least not too far out for my circle of friends. I'll just fall back on that look and see how Daniel responds ... I don't really look twenty-six, it should look okay. Wonder what he was doing five years ago?\n\nHaving a week to get ready for the outing, affords me plenty of time to obsess over looking my best. My hair doesn't quite fit the look I'm after. I'll sacrifice my usual pulled back ponytail and get it cut a little shorter.\n\n\"I'd like to shape it into a more androgynous style,\" I tell the guy who always cuts my hair.\n\n\"I think that would look great on you Erik. Do you want me to straighten the curls out a little too?\"\n\n\"Why not \u2014 and for the fun of it, maybe darken it too. What do you think Johnny?\"\"I think so. Do you want any highlights?\"\n\n\"No, I don't want to overdo it. I'm a little old for that I think, and I don't want to shock my date too much. It'll be the first time he sees me like this and the whole idea is to show some femininity without being too over the top. Plus, I don't want to freak out my coworkers next Monday.\"\n\n\"Gotcha, I know just what you're looking for Erik.\"\n\nWhen the work is done, Johnny turns the chair toward the mirror. I'm actually thrilled to see an image of my old self looking back at me! It's perfect, not too fem ... and certainly not a boring masculine cut. I'll defiantly leave it this way for a while. \n\n\"You're a magician Johnny, I think this is perfect!\"\n\n\"It looks good on you Erik, so greet him with confidence sweetie.\"\n\n*****\n\nI'm just putting the last touches on the clothes I'm going to wear tomorrow when Daniel calls.\n\n\"Hi Erik. You still up for a little drive tomorrow?\"\n\n\"Yes, in fact it seems like it's been the longest week ever waiting for the weekend to come. How long do you think we'll be out so I can get an idea of food and drinks for us?\"\n\n\"I usually get up early, how about you?\"\n\n\"Yeh, I'm up by five almost every day Daniel.\"\n\n\"Good, mornings in the desert are a special time. I'll pick you up around six, okay?\"\n\n\"I'll be ready ... I can make a thermos of coffee if you like?\"\n\n\"Black works for me. And I'd suggest some hiking boots if you have them, I have some places in mind I'd like to show you and they are all a bit of a hike to get to.\"\n\n\"I was already planning on wearing hiking clothes, and I'm really excited to see your secret places.\"\n\n\"I just thought I'd mention one other thing. You can feel free to wear your nail polish if you want to, I doubt we'll see anyone where we're going. It's up to you, just thought I'd let you know.\"\n\n\"Thank you Daniel, I didn't know and wasn't going to but now I will ... just for you.\"\n\n\"Do it for both of us Erik, I want you to feel safe being yourself with me.\"\n\n\"Thank you, that means more to me than you can imagine.\"\n\n\"Then I'm glad I said it, and it's true. So I'll see you in the morning.\"\n\n\"Bye, and sweet dreams. I'll be up and ready to go when you get here.\"\n\nFinishing up my clothes, my mind drifts to what this might all lead to ... what it might all mean? Dating just never panned out after college and these seven years seem a lifetime. Even in college, I didn't really date \u2014 just Kim and Sandra as real friends \u2014 they taught me some of the joys of being a woman, and how to start dressing properly ... Just one I'd call a boyfriend \u2014 my first kiss and learning how to suck him off ... so much for dating.\n\nAnd now it's been seven lonely years without either. I know it's mostly my own insecurity that keeps me all alone. Can I help it if I crave a deeper connection than most people I've met? It finally dawned on me several years ago that I frighten most people away with my intensity to draw closer. I won't do that with Daniel, just keep it casual. Maybe I should accept casual sex? The idea is such a turn off \u2014 so empty. Just keep an open mind maybe?\n\nI finally decide on the pale pink color for my fingernails and a brighter red for my toes. As I concentrate on guiding the brush, it's easy to get lost in a cloud thinking about what casual sex might be like. Maybe it won't be as fulfilling as something more meaningful, but it can't be any worse than jacking off or using a vibrator. Well, it could be worse, but maybe not always. Finally frustrated with the debate inside my head, \"No way to know, just go see ... maybe he's not even all that interested in me and this is all for nothing. Just go for a drive dummy!\"\n\nI'm up at five, as usual, and take a quick shower before working on my makeup. Being careful to not overdo it, I only go for a hint of eyeliner and mascara, a light brush of powder and some light pink lip gloss. My clothes are hiking gear designed for a woman, so they fit nice \u2014 at least I think they look nice. I don't think Daniel will even notice, not that it matters so much \u2014 this is the most logical outdoor gear I have. They'll be fine, and they're comfortable and practical. The tan cargo pants have slim cut tapered legs and several pockets. Since it's a warm day, the snug fitting pinkish beige tee shirt, with a tan hiking vest with more pockets, should do. I grab my favorite straw hat, setting it aside in case the sun forces a need for it later. Taking one last look in the mirror, I'm satisfied with my look \u2014 clearly a feminine man, but not quite a woman.",
        "With the coffee made, the lunch and drinks in a cooler, and my day pack by the door, I wait for Daniel to arrive.\n\n*****\n\nWhen the door opens, I barely recognize the person standing and asking me to come in! Certainly not the same Erik I met at the lumberyard. \"You're beautiful.\"\n\nI instantly feel stupid and feel a hot flush on my cheeks. I step over the threshold into the living-room.\n\n\"Thank you, I just thought it'd be best if you saw the real me and get it over with Daniel. Hope it's okay.\"\n\n\"The change is amazing, I don't know if I should call you Erik or Erika. Either way, I'm certainly glad you wanted to let me see the real you. You did something with your hair, didn't you?\"\n\n\"Yeah, I was letting it get a little ratty. I used to wear it similar to this in high school and college, I gave it up when it came time to go job hunting. Then got lazy and let it grow too long. I'll probably get a lot of looks at work next week, but I wanted to try to look a little better than the last time you saw me. And, you can call me either Erik or Erika, I sorta go by both depending on the situation.\"\n\n\"Do you have a preference?\"\n\n\"For you, I think Erika is the most appropriate ... if it's what you want.\"\n\n\"I agree with you Erika, that's a very pretty and appropriate name for someone as lovely as you. And you can drop the Daniel stuff, Dan is what most people call me.\"\n\nDan's words send a tingle racing through my body that settles on both nipples and in my tummy just below my belly button. I had been so nervous over nothing, and now the weight of doubt lifts from my shoulders. That weight has come and gone for more than ten years. Even in high school there were unsettled feelings, and finally in college I had to embrace them more fully. I didn't even know back then, that it would always be this way ... it's hard being different. Sometimes I wonder, was the whole Emo thing just a disguise that drew any attention away from the deeper questions?\n\nI watch Erika, lost in her own thoughts. Was it something I said? \"I meant that as a compliment, I hope I didn't say the wrong thing.\"\n\nDan's words pull me back, I realize that I had let the conversation lapse, \"Oh, no you didn't say anything wrong ... in fact, you said the perfect words. No one has every said I was lovely before. Cute is about the best I got in college.\" I force a smile, hoping to bring things back down to casual conversation.\n\n\"Well Erika, I often say, some of those college boys sure didn't appear to have gotten their money's worth in the smarts department.\"\n\nI laugh at his joke, and feel the vibe settle. \"I think I'm going to have to agree with you on that, sir.\"\n\n\"Before we load up and hit the road, did you get your fence fixed?\"\n\n\"No, when I got home I realized I didn't get any nails. Duh.\"\n\n\"Good. I was afraid you would break one of those pretty nails, I'll grab my hammer and nail bag and we can fix them before we go,\"\n\nIn less than thirty minutes Dan has the new boards in place and the cooler in the back seat of the pickup.\n\n\"Mind if I hit your restroom before we go? I hate just getting going and have to stop again.\"\n\n\"Sure, good idea. I should do the same.\" Like so often happens, I can hear the bubbling sound as he pees. I smile, wondering how long it's been since I peed standing up ... only outdoors or in a public restroom, that's for sure. When Daniel comes out, I take my turn and idly wonder if he's curious as to why no bubbles. I wipe the drop off the end and pull my plain cotton panties up. Since this is just a hike, I'll save my sexier ones ... hopefully for another day.\n\n*****\n\nIn the time I've lived in Flagstaff after college, I've tried to get out and explore the surrounding area. It's my first time being in the western deserts and from the beginning I felt a certain closeness to it all \u2014 it's like life itself is hiding here for me to find. I discovered solitude here, and for the first time felt the need to be naked in nature \u2014 seeking to somehow touch the earth even more closely. I didn't know who or what I craved to find, but I sensed a new spiritual awakening and the search itself has been life changing. I found several small red rock canyons that are far off the beaten track, and it's to these I often went and camped overnight all alone. Never had I known there were so many stars in the sky ... I found a silence so still I could hear the bees humming in the brush ... living their lives in the same way as it's been since the dawn of time, totally uninterested in me or in the concerns of mankind. It's really different being out here with him ... I like it.\n\n\"You seem to know the area really well Daniel. I'm still learning my way around.\"\n\n\"Dan, all my friends call me Dan, remember? But yeah, I was born and raised in this country, and this truck is set up to take me pretty deep into the wild spaces. My father is an archeologist, he does consulting work for the various governmental agencies and the local indigenous nations. I've been tagging along with him since I was just a boy. He's been down in southern Mexico for over a year now, sounds like they've discovered some important new sites. It's always been that way, chasing the diggings ... but he lives for it.\"\n\n\"That sounds like the job I should have worked toward. What does his work entail?\"\n\n\"Mostly, he get's hired to locate and document the locations of heritage sites. Then coordinate the dig ... basically, you could say he's the manager of the dig and a contact point for whatever group or tribe that's in charge. It's become quite a problem with all the newcomers moving in who think they should have the right to dig up and plunder such places. There's lot's of effort to try and beat them to important pieces of history.\"\n\n\"Who would do something so stupid?\"\n\n\"It's an ongoing battle, but ass holes are gonna be ass holes I guess. The way it should be done is with a light step and respect. Everyone tries to educate the jerks and I'm sure it does some good, they still do a lot of damage though. Unfortunately, their ignorance often wipes out the record of such places and that's why there's a big push to beat the looters to them. Some think, and I tend to agree, it's somewhat organized. They loot the site, then next thing you know it get's sold online in some dark corner of the internet. Seems too organized for just everyday jerks \u2014 but, I think there's quite a few of those too. A deputy sheriff was shot last year when he came up on a couple of guys looting a site \u2014 lucky he wasn't killed, but they left him out here wounded. Hadn't been for a local rancher looking for some lost horses, he might have died. But I didn't mean to go all negative, especially today here with you. We'll go see some of these places. All of the local people know my dad, and know what he's trying to do, so we're welcome to visit their lands.\"\n\nAfter a pause to navigate through a rough washout in the road, he adds, \"The dig my dad's on now is a little different from the norm though. He's part of a team working on a new discovery in the rain forests near the border of Guatemala.\"\n\n\"And I thought I had found some out of the way places. I'm sure glad you noticed me at the hardware store, I'd really like to learn more about all of this.\"\n\n\"I think I'm the lucky one to have found such a sweet ... and pretty, person to spend time with. So do you go camping, or just day trips?\"\n\n\"Oh no, I go camping as much as I can. I know a few private places I like to go to. But I'm sure you know a ton more than me.\"\n\n\"Good, that'll give us another thing we both enjoy. You'd be surprised at how many women don't really enjoy getting out like this. I think that's changing though, with the younger generations.\"\n\n\"I agree. It seems that a lot of people are breaking down the old walls and rules.\"\n\n\"How about you? You sure must have had to kick down a few doors and walls, being a man who has a softer side. Do you consider yourself a transgender? I'm sure you know the indigenous peoples around here have always held trans folk in high regard.\"\n\n\"Yeh, when I first read some about that it made me feel so much better \u2014 less of a freak. I think it's so cool that the ancient people were smarter than most modern folks. It's an ugly mess now, people won't even believe medical doctors who try to explain how all this works. And yes, I have given all of this more thought than you can imagine, but I really don't feel alienated towards my body. You know, how some people just feel they are in the wrong body? Some people disdain any labels, but I think they are just words that describe a fact or a thing. So I describe myself to myself as a man with a very strong feminine soul ... a blend of both, if that makes any sense?\"\n\n\"It makes sense, yes. I can't say I can fully understand it, but I understand what you mean. The ancient people must have too \u2014 the concept of 'two spirits' is pretty clear to grasp.\" \n\n\"Does any of that make you uncomfortable Dan? I mean, some men don't want to think about that thingy between my legs.\" I immediately wish I hadn't said that and rush to make it better! \"I mean, I should clarify that I feel very feminine inside. It's hard to explain \u2014 like I don't mind being a softer kind of man who likes being treated and seen as a lady and, I know that's why so many people think we're nuts, and I can understand that because sometimes it feels nuts ... and it's almost impossible to explain.\"\n\n\"Shush, don't worry Erika, I understand and I'm coming at it from the other side. I am more attracted to guys like you than to those born female. I don't know why. I have zero attraction to a big muscular guy, and to be honest, I love that you have something special between your legs. So if your crazy, then I'm crazy and that's starting to sound more like a party than a problem.\"\n\nHis laugh is infectious, I once again breathe normally, \"So here's to crazy!\"The always dreaded talk had gone pretty good \u2014 I think. The day is more wonderful than I've spent in a long time and we visit as many sacred sites as the daylight allows. When the afternoon draws toward the time to turn back home, Daniel stops at one last site. We walk along the sandy dry wash hand in hand, and soon Daniel points out an overhang with ancient paintings on the red rock wall. \"My father interpreted that kind of marking as a giving of thankfulness for the gift of the animals depicted. Since there are fish drawn there, this now dry sandy riverbed must have at one time been filled with water such that fish could find a home in it. The other animals would have found water to drink, and the predators could find their food as well. It is said that the first white men who came into this country wrote of grass up to their horses belly, and of a land abundant in life. That wasn't all that long ago in the big picture.\"\n\n\"What happened Dan, why did it all change?\"\n\n\"No one knows why for certain, as far I know. My father told me that the Anasazi people were the earliest known to be here on a permanent basis. They seem to have been here all the way back to two hundred BC. The most agreed on timeline indicates they were forced out by drought and failing crops between thirteen hundred to fifteen hundred AD. Obviously, the droughts also dried up this steam and the animals too were forced to move on. Just a cascading turn of events beyond anyone's control, I guess.\"\n\n\"That's so sad.\"\n\n\"Growing up with an archeologist, I learned earlier than most that the history of this old world is a pretty sad tale. That's why it's important to grab happiness where ever we can find it Erika.\" With my heart in my throat, I step closer to Erika and draw her into my arms. She looks up, closes her eyes and accepts my lips and the kiss I offer. I pull back a few inches and look into the clear brown eyes looking back at me ... they say yes, I pull her close again for a longer kiss. With the passion of our first kiss satisfied, she lays her head on my chest and it's so wonderful to hold her close. We stand there for a long time just gently rocking as we soak in some small portion of the happiness this world has to offer.\n\nPulling away just enough to see her face, \"You up for another mile or so up this little canyon?\"\n\n\"Sure, I could do this all day every day I think.\"\n\nWe again walk hand in hand until the dry sandy bed of the dry creek becomes too narrow and we have to go single file through a section where the rock walls tower over us. Finally we come to what once must have been an impressive waterfall, and probably still can be in the rainy season when these washes become raging torrents.\n\n\"Ladies first, I'll follow you in case you slip.\" \n\nIt's tumbled rock we'll use as a stairway. Dan sweeps his arm toward it like something out of an old movie about princes and fair maidens. No one has ever treated me like this, it feels so wonderful to be treated normal.\n\nI know it hadn't been intentional, but with him following me as I climb, I know Dan has a perfect view of my backside. I feel a bit naughty, hoping he is checking me out and it feels good to think he might be. I know my bottom is clearly defined in these hiking pants. When I slip, his hand is right there on my butt to keep me from sliding! Is it only me who feels this sexual energy?\n\nOnce we make it to the top, I'm surprised to see a good sized pond of water. Daniel holds my hand as he helps me up onto a boulder, and then on around the pond to its source \u2014 a small steady spring of crystal clear water bubbles through a crack in the rocks and cascades down into the pond. \"It's beautiful Dan!\"\n\n\"There's still life hidden in these seemingly barren places Erika.\" \n\nWe sit close, side by side, near the spring \u2014 listening to the song it plays as the water explores the new freedom to roam above ground again.\n\n\"It's just perfect Dan, I wish I never had to leave this place,\"\n\nHe starts pulling his boots off and says, \"I always cool my feet off when I'm here. Come on, we can get down over there and walk in the cool sand.\"\n\nI don't need to be asked twice and quickly shed my hiking boots and socks. Dan is once again waiting to offer a hand to get back down, now at the upper end of the pond. He notices my manicured and painted toenails.\n\n\"That color looks amazing on you Erika. Did you have them done or did you do the artwork too?\"\n\n\"I do it all, I painted the little flowers on just for you. Since it was my polish that made you notice me at the store, I thought I should let you see I'm not always so sloppy.\"\n\n\"To be honest, I don't always notice things like that ... truth is, you had already caught my attention and I just blurted out about the polish without thinking.\"\n\n\"I'm glad you did, or we wouldn't be here right now, would we?\"\n\n\"I'm glad I did too, and I'm really glad to be here right now,\" Dan says and draws me close.\n\nHis hug lingers and the kiss feels natural \u2014 I've never felt anything like this. As our lips become reacquainted, I think we both feel the power of attraction wash over us. Dan gently guides us both to our knees in the soft warm sand, even as our lips continue exploring together. Finally breaking away, he kisses me on my forehead and eases me onto my back, nestled into the warm sand.\n\nOn his knees, looking down into my eyes he says, \"I'm so glad you missed that polish ... you're beautiful Erika and I'm just thankful we met in this huge world.\"\n\n\"I don't even want to remember how sad and lonely I have been since I moved here Dan. All I want to do is soak up everything I can about this place and this moment ... and you.\" I put both hands behind his neck and pull him down for another kiss, and then whisper, \"Thank you for everything.\"\n\nWe lay there together trying to soak it all up. The warm sand, the bubbling spring singing its ancient song for us, the almost sacred experience of even being in this place that's witnessed life coming and going for untold millennia. Finally it's Daniel who says, \"Unless we plan on sleeping out here, I better get you back home.\"\n\n\"I would rather sleep out here, maybe next time we should bring a tent?\"\n\nHer voice is soft, she too understands about this place. \"I was thinking the same thing.\" I'm still holding her, but she snuggles closer and lays her head against my body.\n\nHe makes me feel safe, not like some prize for the taking ... it's a nice feeling ... one I've never really known. \"This has been the best day I can remember in a long, long time Daniel, and I can't thank you enough for bringing me out here.\"\n\n\"I'm not just saying this, it's been a long time for me too. I love these places, but it's you that made it special for me today ... and you can just call me Dan, remember?\"\n\n\"Okay, Dan ... but kiss me again before we go.\"\n\nThis time our kiss is more urgent \u2014 past fear of rejection. The door has been opened a crack, and now I think both of us want more. How long has it been since I've been touched by another person? Everything within me wants him to devour me, if that were possible. He eases his body on top of me, pressing me deeper into the warm sand and it feels as if I'm being embraced by two warm lovers ... one of flesh and bone on top \u2014 the other; the warmth of life itself radiating up from the earth we lay on. Even though I've never been into casual sex, I'll willingly give him my body if he wants it! I've never felt such a need \u2014 such a desire for a man to take me as I surrender under him!\n\n\"Baby ... Erika, we have to stop. I promised myself I wouldn't. I don't want to blow this for either of us. This is my first time too, I mean with a woman like you. Do you want to go farther?\"\n\nHis words make me want to go on even more! He actually cares about me \u2014 about my feelings. But he's right. We barely know each other \u2014 it could ruin everything and I can't endure that. \"I think you're right Dan. I want it too, but you're right, let's give it awhile longer. I've waited this long, I don't want to ruin us before we get started. And it is getting late.\"\n\n\"You're so tempting Erika. But I don't want to rush this. I want to wait and let what we have grow until the perfect time, and you're right, it is getting late.\" \n\nWe linger there for several minutes longer, trying to get our fill of one another's kisses. But as all things end, so too this moment ends while leaving our deeper hunger unsatisfied.\n\n*****\n\nOur weekend trips become something we both look forward to, and with each trip we find more in common with each other. Neither of us enjoy parties or the usual nightlife activities, much preferring the quiet solitude of nature. With each trip, I'm feeling more secure with him. I feel myself hoping for something I'm too afraid to even say out loud lest I jinx everything.\n\nOur trips also bring meaning to Daniel's stories about the looters of antiquities. The reality of the damage is made clear after hiking for more than an hour to visit an area of several small cliff-dwelling structures. At the first one, deep trenches had been recently dug, clearly in search of old pottery or other relics. There are off-road vehicle tracks everywhere, and much of the vegetation is mashed and broken.\n\nBut the real eye-opener comes later that day when a jacked-up four-wheel drive Ford crew-cab pickup literally runs us off the dirt road we're traveling!\n\n\"This is the third time I've seen that truck,\" Daniel says in a tone way more calm that I could.\n\n\"You think they're the looters?\"\n\n\"I don't have any proof, but it does seem to be a coincidence that I run into them so much in areas that have been hit.\"\n\n\"Maybe we should notify the police Daniel.\"\n\n\"I don't have any hard evidence on them Baby, and I've never been able to get a good look at the license plate. They could just be out here drinking and being rude on the roads. The Sheriff knows this stuff is happening, he just doesn't have the manpower to cover so much country. If we see them again, lets try to get a license number. I'll recognize the truck if I see it again. Someone's spent some money on chrome wheels, high-rise springs and off-road lights. Plus, bright red is pretty hard to hide...pretty stupid too, if you're breaking the law.\"",
        "This common interest in both, love for the desert and the preservation of it's cultural treasures, makes it easy and natural to build a close connection of friendship. A friendship built on mutual interests and similar pleasures, and for me a growing attraction to the kindest and most beautiful man I had ever met. On the drive home from this, our fifth, weekend day-trip, I invite Daniel to stay for supper with me.\n\n\"Only if you keep it simple, the lunch you made could have fed us for a couple of days I think,\" he teases.\n\n\"I've already got a big pot of spaghetti, and I'm sure you know that's always better the second day,\" I assure him.\n\n\"Even without supper, I'd love to spend more time with you Erika.\"\n\nAs we sit on the sofa remembering the day's discoveries, he asks, \"I've been thinking, what do you think about an overnight camping trip next time?\"\n\n\"I think that's a great idea, I'm off next Monday for the Easter holiday, are you closing Monday?\"\n\n\"Yep, I'm giving everyone Monday off too. It's starting to warm up more at night now, and there's a place I've been wanting to take you but it's a little too far for a day trip. So lets plan on leaving early Saturday morning, okay?\"\n\n\"I'll be ready Dan. Any advice on what I should bring ... and what about food and stuff?\"\n\n\"I've got all the gear and sleeping bags and everything like that. I'll drop off my Yeti cooler later this week and you can organize the food for Saturday, Sunday and Monday. I'm not sure you want me doing that as it might be pretty basic eating,\" he says with a grin.\n\nI scoot closer on the sofa and then get on his lap, straddling my legs over his. Wrapping my arms around his neck I say, \"Thank you.\"\n\n\"For what?\"\n\n\"For coming into my life silly,\" I say and kiss his lips.\n\nThe time we've spent together this past month has broken down the uncertainties and I instinctively pull her close and hold her tight. I'm always amazed at how tiny she feels as my arms encircle her waist. With her head on my shoulder I tell her softly, \"It's me who should thank you. You've given me a whole new reason for living ... and I've never had anything like this in my life. It's so good, I'm kind of afraid.\"\n\nI lift my head from his shoulder and kiss the side of his neck, then whisper close to his ear, \"What are you afraid of Daniel?\"\n\n\"I'm afraid I might be dreaming ... or maybe you'll get tired of me.\"\n\nI sit back on his lap and look into his eyes, then lean forward to kiss his lips. Our kiss lingers, both of us urgent to show the depth of love and desire we each hold inside. Dan cups my bottom in both hands, I relax as he explore the contours and secret cleft of this unexplored flesh. I push back against his hand, signaling my approval ... or perhaps, it is my urgent need that longs to be sated?\n\nWith my head on his shoulder, enjoying the feeling of his finger as it lightly traces up and down my butt crack through the lightweight cotton fabric of my pants, I whisper, \"You're not dreaming Dan, and I'm probably more afraid of you getting tired of me than any risk of me getting tired of you. I want to tell you something ... but I'm afraid.\"\n\n\"No secrets baby, I don't know much, but that's one thing I've learned, secrets create their own kind of poison. You can trust me to be honest with you too.\"\n\nI know he's right and steel myself to just tell him and let things turn out as they will, so sitting back to look at him, \"You know I've been on this journey into finding myself for quiet awhile ... honestly, I feel with you that I have finally found a good place for me to be. It's this \u2014 the way you've treated me as a woman. Dan, this short time together has felt so natural for me. But I guess because I was always pretty shy ... it was all kinda awkward ... I've never actually had sex. I mean, of course I know how it's done and stuff, I just hope I'm what you want and all and it makes me afraid you won't be satisfied \u2014 'cause I don't really know. Does any of that ...\"\n\nHis gentle shushing finally ends my rushed words that are building into a panic. The strong arms holding me close and the hand gently stroking my hair brings me back from my imagined fears and into this shared moment.\n\n\"Okay, now let me tell you something Erika. I've sucked one guy in my life. I had just turned twenty and he was an older guy who was sort of in charge of my apprenticeship work experience. I liked it a lot at the time. After my apprenticeship ended and I got older I wasn't really attracted to masculine men. I've dated some women off and on over the years, just never really clicked with any of them. I had sex with a few of them, and it was okay, then we just drifted apart. Truth is, I don't think any of them were all that impressed with me either. Then the business became my life, and one thing led to another and now I've been alone for too many years. About two years ago I realized that I am really attracted to people like you more than anyone else. Hey, I'm a guy and I admit my first introduction to trans girls and feminine men was porn. But that's not unusual, my first introduction to women was the same way. I've just never had the chance to know anyone like you until we met. I guess what I'm getting at is that; I'm as inexperienced as you. All that aside though, what we have is starting to feel like more than sex \u2014 at least it is for me. I enjoy your company and your friendship. I also think we'll figure all the other stuff out when the time comes. There, are you still interested in me?\"\n\nI'm more than just a little surprised that such a handsome man hasn't had a whole string of conquests to his credit. But, it's a happy surprise. I hug him, \"Thank you for telling me all of that. I was afraid you would find me bland compared to some past lovers. And actually, I'm relieved you've been with women and didn't find in them what you need, you can imagine how someone like me must feel inadequate compared to a real woman \u2014 I guess that is some of my insecurity. And I've never not been interested in you mister!\"\n\nI smile at her, \"See, honesty is always the best course. I guess my biggest fear is I'll fall in love with you and you aren't really looking for that, or something.\"\n\n\"I think I may have already taken the first tumble in that direction myself Dan, and isn't it always the girl who gets her heart broken?\"\n\n\"I don't think so. When it comes to the things of the heart, we're all weak and vulnerable. It's good we talked, I feel better knowing we're both thinking the same things.\"\n\n\"Me too. It's hard and scary and you're right \u2014 honesty is the best course. Let's make a pact that we'll always feel safe to be honest, okay?\"\n\n\"I'd say let's shake on it ... I'd rather kiss on it.\" \n\nHis lips possess mine one more time and it's the best kiss so far. It's odd how walls can sometimes fall so suddenly. After several minutes of just quietly holding each other \u2014 thinking about all that had been shared and basking in the warm glow of blossoming love \u2014 I finally whisper in his ear, \"Didn't you say supper sounded pretty good, or did I dream that up?\"\n\n\"You didn't dream it up, but I don't want to let go of you either.\" I mean it, and pull her even closer.\n\nI rest against him \u2014 we rest against each other. It was a good talk. Why does it always have to be so hard to just be honest and let him inside my head? No more. This is the way to make this real. The only way to make it work.\n\n\"Well, being honest again, I don't want you to die of starvation. So let go of my butt mister and let me fix us something to eat.\"\n\n*****\n\nI've been douching before our trips since the second weekend. I've never been fucked by a man, just years of experience with my dildos, plugs and vibrators and I want to be ready if he ever decides he wants more. I'm glad that Daniel hadn't rushed into things, but now it's getting harder for us both. I'm both excited and nervous about spending the night together this time. As I bathe and get ready to go, I look at my naked body in the mirror. Thankfully I had never developed much body hair, but what there was I had permanently removed years ago. Everything except for a small triangle above my dick. I still like my dick, it's small and unimpressive and I'm thankful for that \u2014 it fits me and makes me feel more feminine. \n\n\"Hmm, is it a dick or clitty?\" I ask the reflection in the mirror. Turning, I look at my backside and ask, \"What about that, is it my ass or my pussy?\" With Daniel I think of all of me in the more feminine way. With him, it all feels more real than ever \u2014 I feel more real than ever. Again asking the mirror, \"Should I use a butt plug just in case?\" It sounds fun, but the day will be too long just driving to get to where he's going to take me. I'll put the plug and some lubricant in the backpack along with my douche bag \u2014 just in case it's needed.\n\nAs usual, Daniel arrives early and we're on the road in no time. When he takes highway 89 north out of town, I say, \"This is a different direction than we usually go.\"\n\n\"Yeah, since we have more time, I thought I'd show you a place in the upper desert that is pretty special. It'll be about three hours to get there.\"\n\nAfter a little over two hours, Dan turns west on highway 89A at Bitter Springs and in a short while we cross the Colorado River at Marble Canyon. It's a good place to take a break, top off the gas tank and look around. Continuing on, the road stays heading west and skirts along the base of the Vermilion Cliffs. The scenery almost demands that we stop time and again so we can take photos of the wonderland we're seeing. Then, at the small town of Jacob Lake we finally leave the paved road and drive about thirty miles southwest through empty desert country without seeing another soul. Finally, Dan stops the truck on a high bluff and says, \"This is home for a few days.\"\n\nAs we walk around Dan points and tells me, \"The Grand Canyon Park boundary is just about a mile that way. That water down there is Kiabab Creek and about thirty miles back upriver is the Kiabab Paiute Indian Reservation.\"\n\nOf all the places I've been, and all the places Dan has taken me, I instinctively know this place is special. As far as I can see in any direction there is no sign of man except for the small two track dirt road we came in on. It's almost like being transported back in time, and it's wonderful.\n\nDan has his tent set up in hardly no time and says, \"There's a trail down off this bluff over this way, lets go down to the creek.\"\n\nGoing to the truck, he digs out two hiking staffs and giving me one says, \"It's time you had a staff, it'll come in handy on this trail.\" Then, off we go and I follow as Daniel leads the way, and in the rough places I'm happy to have the staff as a third leg. The trail winds it's way down and around at a pretty steep grade and sooner than I would have guessed, we're at the bottom.\n\n\"Keep your eyes moving as you walk,\" he coaches me. \"Try to not stare at the trail, just glance down enough to find your next step and also to keep an eye out for rattlesnakes. They'll be coming out now that it's getting warmer. When you step over a rock or log, use your staff first to poke around to clear the way ... if one's down there he'll let you know and you can go around him. When it get's warm out, take care walking near the shade of a bush or rock because they'll be trying to get out of the sun. Don't just stare down at the ground though, keep your eyes up as much as possible. You'll get used to it, and then you can keep your bearings and maybe see some wildlife.\"\n\n\"You should have been a park ranger,\" I tease.\n\n\"I'd like that, but there's no money in it Erika. Wouldn't it be fun though?\"\n\nOnce we make it down to the creek, there's a trail worn in the dirt from eons of animals as they go about their daily routines. Turning left Daniel says, \"This is south and the park boundary is just down that way, but it's too far for today.\"\n\nAs we follow the animal tracks south, winding under and around Cottonwood trees and brush, Daniel says, \"Remember when we talked about how the indigenous people who lived here before us accepted people like you as part of normal life?\"\n\n\"Yes, seems like a lot of early civilizations realized people were all different, and were okay with it, and not only here.\" I reply. It feels good that he wants to remind me that lots of people accept people like me. That he understands, and cares, means a lot to me \u2014 especially when I glance up at his broad strong back and for the umpteenth time feel thankful for this miracle. From my place behind him, he could easily be one of those First People. No doubt some of his ancestors probably were. His thick black hair pulled back in a ponytail sure fits such an image. That and his dark brown skin \u2014 skin no doubt made darker by the hours he spends in the sunshine building his houses.\n\n\"Sometimes I wish I could go back in time,\" Dan confides as we walk.\n\n\"I've wished the same thing more than once, but who really knows how it would all turn out?\"\n\n\"Yeah, that's the main reason I haven't pushed the start button on the machine I invented,\" Dan teases.\n\nAfter another twenty minutes Dan stops and points up to the cliff above, \"Okay, see that little cave looking overhang up there?\"\n\nI look to where he's pointing, \"Yes, I see it.\"\n\n\"If you're up for a little climb and some rock scrambling, there's a really good view from up there ... wanna give it a try?\"\n\n\"Sure, I'm game for whatever you say Dan. You're the boss.\"\n\n\"Okay, you go first ... just up that little trail there,\" he says while pointing at the faintest of tracks.\n\nThe scramble up is steep, but not technically difficult, and soon we're standing under a red rock overhang on a flat surface about fifteen feet wide and thirty feet along the face of the cliff. There are more of the ancient drawings of animals and fish, and one big one of what looks like the sun.\n\n\"What is this place Dan?\"\n\n\"I'm not certain, to be honest. When I come across these I think of how it's often hard to really know what any artist is trying to say in their painting. It's even harder for us to truly know what someone from a different culture over five hundred years ago was thinking. I described it once to my dad and he thought since there are those birds shown there flying, that it might be a place of prayer and visions. I'm sure the local people know, they have to trust you before saying much though.\"\n\n\"But, look at the view,\" he says sweeping his arm to the Southeast.\n\nI follow his hand with my gaze into the vast space before us and experience one of those awakening moments when it seems the Universe has just revealed a secret intended just for you and maybe the person you love. \"I don't want to ever leave here Dan \u2014 I'm serious, I need to stay here forever!\"\n\nHe closes the two steps separating us and hugs me back tight against his body, holding me gently we both stand as one looking out over the land as the silence and peace washes over us. The new spring leaves on the Cottonwood trees along the creek all dance in the sunlight ... a quiet dance with only the hidden birds and the softly singing water adding music to this moment in time.\n\nI turn around to face him, and looking up into his eyes I know my unspoken words cry out, 'kiss me'. Dan, hearing my silent plea, bends to taste my lips once again.\n\nBut now, this time \u2014 here in this place \u2014 our love finally collides and there is no half measure possible! Dan frees himself of the day pack carrying our lunch and water \u2014 and the blanket to sit on. He turns back to me and, starting from the top button, slowly unbuttons the very practical shirt I had selected to wear this morning.\n\nI can smell the mixture of her perfume mingled with her sweat ... the most perfect blend I have ever known. Erika surrenders her nudity to me, and stands passive as I strip her completely naked except for her panties. On my knees, looking again into her eyes, \"You're beautiful.\" I offer my kiss on tummy \u2014 standing, I offer a kiss on her lips as proof of my words.\n\nHolding me close once again, I feel a shiver of excitement run through my body as Daniel soothes me with his rough hands on my naked back \u2014 I close my eyes as they slide down and cup my butt cheeks, clad now in only this shear, almost nonexistent, fabric. \n\nAny doubt I may have had of the love I feel for her no longer questions me. There is no longer any reason to hold back, my hand moves to the front of her secret places now covered only in soft silky cloth. She softly moans her approval when I take her into my hand. The small handful feels so different than mine, the silky material makes it feel special and valuable, so petite and delicate.\n\nMy legs open for him, giving my permission for him to explore this most vulnerable part of my body. It's hard and alive with my desire \u2014 he takes it all into his hand and gently squeezes me. Suddenly, it dawns on me the this is the moment I've dreamed of! But even in this perfect moment of arousal, in this moment as my dream comes true an old voice awakens ... he might decide this isn't for him after all.\n\nDan pulls me close again, and with one hand on my back and the other laced through hair at the back of my head, he cradles me and whispers, \"I love you Erika \u2014 I love you more than you can imagine.\"\n\nI wrap both arms around his muscled body and whisper back, \"I love you too, I think I've loved you for a while \u2014 now I know it \u2014 I love you.\"\n\nWhen she pulls back to look up at me, I see tiny tear drops of emotion in her eyes and bend to taste them with my kisses. That one kiss leads to another and soon I'm further down with a small hard nipple in my mouth.\n\nHow long have I dreamed of a man sucking my nipples? It is so much more than I had dreamed \u2014 I feel real, my dreams have come true ... better than any dream. His hand is so big and strong, I'm going to come if he doesn't stop rubbing me down there!\n\nAs if reading my mind, he's come back up to kiss my throat and once again finds my lips \u2014 his kiss signals his love, even while his hands signal his desire for my body!\n\nFinally, with a small part of my love expressed, I step back from her and drop to my knees. Looking up I smile and say, \"Trust me.\"\n\nWhen he lowers my panties, I'm not sure if I should be ashamed or proud that my clit is stiff for him. Thankfully, it doesn't take long for me to get the answer \u2014 his lips begin to suckle me, while strong rough hands explore my backside. As he sucks me, he also spreads my cheeks apart and finds my pussy. I instinctively push back into his hand as he lightly teases the puckered flesh of my opening. I've waited so long for such a touch \u2014 a touch that could never be known, because I had never known the touch of love ... with trust and love secured, I close my eyes and surrender as all hesitations and doubts fade away in this sacred place alone with the man I love!\n\nI would have been happy to suck her to completion right here and now, but Erika steps back.\n\nI need this to be our special memory \u2014 our special time and our special place, \"Dan, make love to me. Please let's go all the way. I want this to be the place.\"\n\nI instantly know she's right, and pulling her close again move my mouth up to her tummy, kissing my way up. Looking up I tell her, \"There's a blanket in my pack.\"\n\nWhen she turns to get the blanket, I'm just as thrilled looking at her beauty as I had been kissing it! She's toned and fit, with a perfect little round butt and delicate waist broadening out to perfectly proportioned shoulders. There has never been anyone as perfect in my life. When she bends over to get the blanket, her cheeks open, revealing her pussy to my eyes for the first time. The little extra she carries between her legs just adds to her exotic perfection!\n\nGoing to my own discarded pants, I dig into one of the large pockets and pull out a small bottle of lubricant. Turning, I smile and say, \"A girl must always plan ahead you know.\"",
        "The mere fact that she prepared for this gives me all the incentive I need to not let her down. I start to undress, but she says,\"No, it's my turn to explore now. You stripped me, and now I'll return the favor.\"\n\nFinishing the buttons he had started on his shirt, and slipping it over his shoulders, I lean in to kiss and suck each nipple. They are large, dark and swollen hard \u2014 his brown skin is hot under my hands and they look small and so pale on his body. I wonder if anyone has ever done this for him? I let my tongue play with his nipple again, Dan's moan tells me of his approval.\n\nI breathe deeply of his scent, the musky smell of man that makes my clit tingle. My hands run over the hair on his chest and follow the trail of black hair down to his belt. Unbuckling it, I open the buttons of his pants, then going to my knees on the blanket, I unlace his shoes and help him out of them and his socks. I want us both to be as naked as Adam and Eve in this garden. Finally my man stands before me with only one last barrier keeping his power contained \u2014 the barrier is prettier than I imagined, a nylon/micro fiber blend of colorful greens that fit skin tight, leaving little to my imagination of what lays underneath. As erotic and arousing as this is, I need to see it completely uncovered! See it and smell it and taste it! With both hands, I boldly unveil what I had longed to see for so long laying all alone on my bed these many nights since we first met.\n\nDan's eagerness snaps free of the confining cloth and stands hard and full, curving upward toward his belly! His cock is all natural, the foreskin noticeable but the dark swollen cock head has grown out of it's covering. I put both hands on it holding it like a prize long sought after, then stroke the length of it several times before moving my hands down to cup the big heavy balls that hang low and loose between his powerful thighs. My first instinct is to press my face there and smell him \u2014 smell his manliness ... then kiss everything! Finally, looking up into his eyes watching my every move, I open my mouth and put him in as far as it can go until I gag. Back and forth, up and down his shaft I go \u2014 trying my best to give him the pleasure I know he craves and needs. I want nothing more than to service him, to suck his cock to completion ... to drink the nectar of my man for the first time!\n\nMy eyes finally close, I drift in this dream \u2014 in the darkness there's nothing but his hot man-flesh and my eager mouth. That and the smell of man driving me wild with desire \u2014 crazed with lust!\n\nToo soon! Too soon \u2014 I can tell he's getting close. No wonder. This whole experience is more arousing than anything I could have ever imagined. He tries to pull away \u2014 I make it clear that I want it all ... he surrenders to my desire. After that, my mouth and his cock are the only two things in the world that exist in this moment.\n\nIt may have struck as quickly and as inevitably as thunder after a lighting bolt, but it's still the best orgasm I've ever experienced \u2014 a complete release that not only empties my seed, but also affirms my growing love and renews my hopes for a life I had only dreamed of before this moment. Erika, clearly in her own bliss doesn't stop sucking until I'm completely spent. My cock spasms again, she takes me deep into her mouth. Finally, I stop her before I crumble to the floor of this hallowed chapel.\n\nWe do sink down \u2014 the blanket an almost meaningless barrier between us and the rock floor of this special place. How many have walked here throughout the ages? How many have made love here? I pull her tighter, tip her face and kiss her lips. Her breath is labored, her body hot under my hand. I kiss her again and push my tongue between her yielding lips \u2014 her tongue dancing with mine. I taste myself \u2014 I feel like I'm floating on clouds. Never has anyone offered such a gift to me as she has just given. She gave herself \u2014 she gave her love.\n\nWith her body close to mine, I try to step back in my mind \u2014 try to take in this whole scene unfolding here in this moment. With my eyes closed I see two lovers in a wild raw place of rock cliffs and desert brush. But there is a softness too \u2014 a clear stream with cottonwood trees dancing in the breeze that makes it desirable, safe \u2014 not wild, not raw at all. The maiden there lays with her man, she has given him everything \u2014 she has surrendered her body to him. That she labored to please him so much, only makes the man love her all the more! They lay together, her head cradled in his arm, no words are spoken now. Words would only be a distraction in this bliss with the sounds of life singing all around them. Indeed this is a sacred place \u2014 the place where love was consummated.\n\nFinally I rouse myself from my daydream and the stupor of my orgasm, roll up on one elbow and look down on the delicate creature looking up to me, \"I love you. I love you. I love you. I can't think of any other words to express how I feel right now.\"\n\n\"I know, it's so amazing Dan! I have never even imagined it could be like this ... I don't want it to ever end. Let's just run away and be wild creatures alone and hidden and free!\" I try in vain to express to him the expanse of feelings that are exploding inside my heart.\n\n\"We don't have to run any more Erika, we just need to live every moment together forever.\"\n\n\"Do you really mean ... you want to be with me forever?\" I feel like a boulder just buried me and like a butterfly floating in the breeze \u2014 all at the same time! He said forever! My hands shake with an emotion I've never experienced, and tears fill my eyes.\n\n\"If you'll have me, yes. I want this to be forever Erika.\"\n\nI've only fantasized about a man asking me to be his wife, but this is real. Dan is real \u2014 this place is real. \n\n\"Are you having doubts?\"\n\nPressing his lips to mine once again, I answer him. To make sure he heard me, I whisper, \"No doubts ... no doubts at all.\"\n\nWe lay there quietly basking in the afterglow of this once in a lifetime moment. It's Erika who first speaks again, \"We never got to use the lube I brought.\"\n\n\"I can do that for you now, if you're ready Erika; or we can wait until later in bed.\"\n\n\"I'm still high from this time, so long as you promise to fuck me later ... we can wait if that's what you want.\"\n\nI'm not sure she even knows she has such a cute impish grin. \"I don't know, you're so tempting I'm starting to think spreading you open right now sounds really good.\"\n\n\"I could try to fight you off, or maybe scream for help \u2014 or maybe I should just surrender,\" I tease back at him, each moment I'm growing more aroused and hungry to feel him inside of me.\n\nGetting up onto his knees, he puts his cock inches from my face. He's still full and the thick veiny member seems to scream for attention.\n\n\"I know you want it, would you like to stiffen this up first?\"\n\nI glance up into his eyes and see his rekindled desire \u2014 the fire of my own desires never slowed down! It's obvious what I need to do, take this lovely cock into my mouth and pleasure my man. The lingering traces of cum and the few new drops my tongue finds only make me want more. Soon my lips are once again stretched wide around the hard proof of his masculine power \u2014 my tongue is again playing with the smooth flesh of the swollen cock-head, searching out the slit where the treasure comes out.\n\nI locate the bottle of lubricant. While still on my knees, I lean over her as she lays on her side sucking me. Reaching, I pull her leg up and with the other hand I spread what smells like coconut oil in the crack of her butt. Erika moans her approval around the hard shaft that fills her mouth \u2014 then abandons my cock so she can roll onto her back. With my knees beside her now, my cock juts up toward my belly ready for more. Erika lifts her legs, spreading wide in response to my fingers \u2014 fingers that are now exploring the virginal cave of her femininity. I liberally spread more oil.\n\nSetting the bottle down, I use one arm to hold her legs pressed almost to her chest, my slickened finger opens her and slides easily up into her body. Slowly and gently I finger her until she's squirming, whimpering and humping up for more \u2014 I ease a second finger in and gently open her wider by scissoring and swirling inside of her. She holds her own legs wider with both hands now, helping me to get her ready. By the time I have the tip of a third finger inside her, her body is begging to be fucked. I watch enthralled as she humps her pussy up to my fingers!\n\nShe's lost the ability to suck my cock \u2014 lost the ability to do anything but focus on my fingers in her cunt \u2014 her eyes closed \u2014 her head tipped back, resting on the floor of the cave. Yes, we're both more than ready to truly consummate this love we've found together! I take my place between her spread legs, one final squirt of lubricant for good measure \u2014 position myself at her opening and rub the oil slickened head in small circles over her opening \u2014 her pussy \u2014 and tell her, \"I don't think I'm going to fuck you.\"\n\nWhen her look of confusion becomes pitiable, I tell her in almost a whisper, \"I'm not going to fuck you Erika Taylor ... I'm going to make love to the person I want to spend my life with.\"\n\nI'm way beyond need already and Dan's words push me over the last rail. I'm beyond screaming for it and with eyes closed I can only beg in a soft moan \u2014 \"You know I love you ... make love to me ... need you so much ... so many ways ... please put it in ... fuck me ...please.\"\n\nWhen he finally slides it inside of me, groans of satisfaction can't be held in \u2014 I feel I might orgasm with his first plunge! His strength pierces and stretches me every inch of the way as he opens me up, taking the virginity I freely offer him. Finally I've found the one who will love me and can take my body \u2014 my soul \u2014 to places I've only dreamed of for so long.\n\nAfraid of hurting her, I try to take it slow and easy, letting her get used to this new experience. Her body signals when she's ready for the real thing \u2014 I feel her relax \u2014 I allow my cock to slide in to the hilt. Had we not spent our first passion before moving to this, I know I couldn't hold my orgasm \u2014 not with everything so new \u2014 so taboo \u2014 so exotic \u2014 so wonderful! I've never fucked again this soon after coming \u2014 I'm still as hard as the first time! I want more than anything right now to give us both our first climax \u2014 a union \u2014 a joining \u2014 a shared gift from my cock and from her sweet surrender of her body to me. Just the thought sends chills down my spine \u2014 I'm her first man \u2014 and she's more wonderful than anyone I've ever known.\n\nHe's touching all those wonderful places I've found with my dildos, but it's a hundred times better ... both hard and soft ... warm and hot! But it's real. I feel his body on mine ... hear his breath ... smell our sex! \n\nMy body tenses with each of his plunges into me. I try to relax under him, no longer just wondering what this moment would be like \u2014 he's fucking harder now \u2014 my whole body shakes with his every thrust \u2014 I feel him piercing the core of my being! For the first time, I feel the feminine vulnerability of being under my man! My man is fucking me! I can't grasp it tight enough \u2014 can't believe it's finally happening. Knowing he won't stop until he seeds me, my surrender is intoxicating ... complete.\n\nLaying under him is addictive \u2014 paralyzing \u2014 I can never go back. I hear my own groan escape as the curve of his cock caresses all the right places over and over ... I have to let go. Limp, I embrace this sweet surrender \u2014 limp and passive to his power. It's so much more than I ever imagined \u2014 I couldn't stop him now if I wanted to \u2014 I'm helpless \u2014 I'm going to be fucked until he's finished! Chills course over my skin! This is what it feels like \u2014 a woman under a man!\n\nBut inside ... inside I feel more powerful and alive than I've ever been. It's here, this moment I've needed for so long to finally make it clear who I am \u2014 who I must be \u2014 finally I really understand! \n\nI feel the old doubts and fears slink away! I'm set free by my man's cock \u2014 free to finally surrender \u2014 free to be me!\n\nMy own orgasm empties into the space where his muscled abdomen presses against my tummy \u2014 \"ahhh, Dan ...\" I hear the weak whimper of my pleasure but can do no more.\n\nSpent, I lay passive under him, my mind numb \u2014 my body tingling from head to toe. My pussy is quivering as Dan continues to make love to me. Feeling his body rub my clit in the wet warmth of my own cum, it spasms again in another small orgasm. His hard thrusts scream of his passion and need \u2014 another wonderful feeling of weakness washes over me. This weakness is all mixed up with thoughts of strength in knowing that he needs me like I need him. Is this what a woman feels? \n\nSuddenly he tenses up \u2014 I feel him empty himself inside of me! This is what it's like \u2014 this is what it feels like to satisfy a man.\n\nWe lay quiet and still, our breathing ragged and short. I slowly hump into her as we remain one flesh. Still lingering in our afterglow, the words I must say come to me, \"I love you \u2014 that was the most amazing thing I've ever experienced \u2014 you're the most amazing thing I've ever experienced.\"\n\nI hear his words of love. Too drained to say anything, I hug him tight hoping it tells him all I feel. We lay there entwined for several minutes. His cock, spent but still full, is inside of me \u2014 my muscles squeeze it in rapid contractions of pleasure.\n\nThe afternoon has grown towards sundown while we made love. Realizing the time, we have to force ourselves to break short our quiet cuddling. It's time to make our way back to our camp.\n\nAs we hike, I smile to myself when his cum leaks out of my pussy and the slippery feeling between my butt cheeks gives me another new thrill of sensation I've never experienced. I want to cherish this moment always \u2014 the moment that for years was only a dream has finally come true! It's so much more wonderful than I ever imagined.\n\nThankfully, Dan's experience in the back country and the headlamp he brought along brings us safely to the final steps back up the winding trail and our home for the next couple of nights. And all I have to do is just follow him and let my mind replay what had just happened.\n\nWe make it back to camp just as the sun dips below the horizon. Dan had set wood for a fire before leaving and in no time we have cheerful flames dancing in celebration of our special day. Supper consists of a simple but hearty stew and store bought sourdough bread, quickly warmed over Dan's small camp stove. We sit close together in two small collapsible chairs, watching the fire and eating our supper. The lingering treat of my wet panties and a sore tingling pussy are lovely reminders of the gift Dan gave me this day.\n\nAfter washing up the few dishes, Dan says, \"Come with me, I want to show you something.\" He takes my hand and we walk into the dark away from camp, \"Look up there Erika.\"\n\nI look up, instantly amazed at the clarity of the night sky. Never have I seen so many stars! \"It's beautiful. I've never seen anything like it.\" I realize I'm speaking almost in a whisper, the whole world seems to have gone quiet around us.\n\n\"We're in the higher desert, the air is clearer up here . It'll get even better in a while, especially as your eyes get used to being away from the firelight.\"\n\nI snuggle into his arms, lean back against him and gaze upward. I feel so small under this sky and in his arms, but so alive at the same time. It's in this stillness that I hear my first coyote pack sing their nightly songs. \"They sound so close, will they bother us?\"\n\n\"They're probably a lot farther than they sound, but no, they won't bother us. They're just going about the job of surviving, all we need to do is not leave any food out to tempt them into camp. We'll be fine, and just to make you feel better, I have some bear spray in the tent. Let's go warm some water and get cleaned up before bed. We'll come back out here before we turn in when it's even darker.\"\n\nI sit and watch the fire as he puts a small pot of water on the camp stove to warm, \"Why don't you just use the fire?\"\n\n\"Sometimes I do, I've found this is faster and the pans don't get all black and sooty \u2014 it just makes less cleanup in the long run.\"\n\n\"That makes sense, can I help?\"\n\n\"No, it's about ready. I'll get one of the floor mats from the truck to stand on and you can go first.\"\n\nI stare into the fire as he walks over to get the mat, I still can't believe this is real \u2014 that he is so beautiful and he's really here ... we're really here.\n\nWhen the water's hot, Dan pours some into a wash basin then adds a little cold water until it's perfect to bathe with. \"Okay E-T, come stand here and strip.\"\n\n\"Oh? That sounds like fun. I kind'a like my new nickname.\"\n\n\"Did I do that? It's just a habit I've had since high school, I'm lazy I think and use initials for nick-names. I'll try to not do that to you.\"\n\n\"No, I like it. Has a nice sound.\"\n\n\"Okay E-T, get over here and strip like I told you.\"\n\n\"Eww, I like the sound of that even more.\"\n\nI watch by the light of the flickering flames as she removes her dirty clothes. I pull one of the chairs closer, kneel down before her with the washcloth and basin of warm water. Dipping the cloth in the hot water, I wring it out and hand it to her. \"Wash your face first ... feet last. This is all the water you've got.\"\n\nI see the perfect logic of that and scrub my face with the warm cloth \u2014 I never thought such a simple thing as a clean warm washcloth could feel like such a luxury!\n\nWhen she's done with her face, I rinse out the cloth and tell her, \"I'll take care of the rest.\"\n\nStarting on her shoulders I slowly work the warm cloth over every square inch of her body, every once in awhile rinsing the cloth with more warm water and using the towel to dry her. The cool night air has her nipples hard, and I take extra time there to make sure they're nice and clean. When I get to her butt, I spread her with one hand and tenderly wipe away all trace of our lovemaking. In a way, I hate to wash the traces of our first time away. But it has to be ... there'll be a lot more messes to clean up in our future.\n\nAs the warm cloth caresses me back there, I feel the feminine pleasure of being tender and raw ... the cause is a sweet memory. When he washes the front, I can't stop the erection, Dan doesn't say a word and spends plenty of time making certain it's all squeaky clean! Finally, my legs have been washed and he points to the chair he had moved close earlier.\n\n\"Sit here and I'll clean your feet.\"\n\nI've never taken a bath with anyone, much less had every inch of my body cared for like this. I hand the towel into his outstretched hand and sigh as he massages my feet, then kisses the top of each one.\n\n\"I pronounce you ready for bed E-T.\"\n\n\"I feel like a queen.\"\n\n\"Hopefully, this is only the first of many times I can make you feel that way. I just knew it'd be easier for me to help clean up the mess I made ... I wanted to do it. I'll probably want to do it again, maybe a lot.\"\n\nI stand on the mat again to get closer to the warmth of the fire. It feels really good to be naked out here under the stars and in front of Dan. Suddenly I realize I'm not ashamed to be naked in front of him. It's the first time I feel pretty to someone. But, I really do need to pee. \"I need to go pee, could you bring my backpack from the back of the truck?\"\n\nOnce I'm dressed, Dan says, \"You don't need to go far, no reason to go traipsing through the brush.\"\n\nIt's now his turn at the warm water, and while I'm out taking care of my needs, he rinses the wash bowl and pours more warm water for himself. He's just getting his boots undone when I come back to the fire. \"What do you think you're doing mister?\"\n\n\"I'm just gonna do a quick rinse off, won't take long.\"",
        "\"Nope. I get to take care of you now.\" \n\nI can't really think of a reason to say no to her, \"Okay, now you're in charge.\"\n\nStarting with his shirt, I work the buttons loose and slip it off his shoulders. His nipples are large and hard in the cool night air \u2014 they're also at the same level as my lips, I kiss the one on my right \u2014 his hand on the back of my head gently pulls me tighter. I've never sucked a man's nipple, I'll be doing a lot more this. Leaving this one, I take the other one as I softly run the tips of my fingers over the abandoned one. My free hand finds and cups his manhood through his pants, it's a nice full handful, his soft moan makes me warm.\n\nLooking up to his face, he surprises me with a kiss on my lips. But I'm on a mission, and pull back as far as his arms around me allows. \"You need to behave if I'm going to bathe you mister.\"\n\n\"You're the boss E-T.\"\n\nWe both know those words are a lie, but it's fun to see our walls falling away. I kneel to finish getting his boots and socks off \u2014 with a little help from him when one gets stuck. Just as he did for me, I turn my attention to his pants \u2014 to the buttons so close to my face. Like a slow dance, I unbutton each one until I reach the end. A hand to either side of his hips, the pants slide down \u2014 I help as he steps out of them. Now it's only his underwear, but with a hand under the band on either side they too slide down and he steps free of them. Now it's free \u2014 I can't resist. I hear him, something about waiting after the bath \u2014 I taste him, I can smell the scent of man so strong and taste the cum from earlier. It's wild and nasty \u2014 I love being here on my knees \u2014 I love tasting him \u2014 there's no place I want to be except right here on my knees before him. His hand on the back of my head assures me that I'm right where I belong. Suddenly, I remember why I'm down here \u2014 I pull back, \"We better get you cleaned up now.\"\n\nWith as much detail and care as he gave me, I do the same for him. From head to toe I bathe him in both warm water and my love. When I spread his butt cheeks he tries to stop me.\n\n\"I can do that part.\"\n\n\"No, you did me and I get to do you. You said I'm the boss.\"\n\nHe doesn't reply, but I feel his agreement \u2014 probably reluctant agreement. I don't care, I want to see it \u2014 and kiss it. I rinse the cloth and with fresh warm water and soap scrub his crack from his balls up to his back. Again and again I let the soothing warm cloth caress him. When he's rinsed and clean, I spread him wide enough to kiss him there where he kissed me. I feel him tense up \u2014 when my tongue tickles his rosebud he instinctively pushes back to the source of pleasure. I tongue him again, deeper and longer \u2014 it's something I want to give him in return for all he has given me. I want us to be free to love every part of each other \u2014 I feel my erection pressing against my pants. I reach around to check \u2014 he's hard too, that's all I need to know.\n\n\"Okay, you better sit down and let me do your feet Dan.\" When he turns around, I look up from my place before him, \"You're beautiful. This is the best day of my life.\"\n\n\"It's the same for me E-T , and I want a lot more days like this; a lot more.\"\n\n\"There will be, I know there will be. Sit, I'll do your feet.\"\n\nWith that last chore of love complete, I ask, \"Where are your clean clothes, I'll get them for you.\"\n\n\"They'll be in the duffel bag in the camper shell, should be towards the back on the driver's side.\"\n\nWith a bath and clean clothes we feel like new, and with his boots on once again, Dan builds up the fire and arranges the chairs so we can sit, stare at the flames and talk.\n\n\"I packed some wine in the cooler with the food, would you like some?\"\n\n\"Yes, that sounds nice E-T. I never think about the details like that.\"\n\n\"That's why we need each other. I'm learning new stuff from you every time we come out.\"\n\nSitting back in the camp chair, I stretch out my legs. My thoughts wander as I sip the glass of wine she had given me. Relaxing quietly together staring at the fire, my thoughts drifting; it suddenly comes to me, \"This sure beats being out here all alone, or with some other guy. It's been a long time coming, but this feels like the way it's supposed to be.\"\n\n\"What do you mean Dan? I mean, how it's supposed to be?\"\n\n\"I mean with you, I'm not all alone. All this means so much more with you instead of a bunch of guys. That's comforting to me because it's true.\"\n\n\"It's amazing for me too Dan. But me just being me, I always worry about what if \u2014 what will your folks think, for example. What happens when your friends find out about me. I know I don't pass as a real woman.\"\n\n\"I'll love whoever I want to. But honestly , I don't think they will care. They're both educated and you know my father already knows all about how past cultures viewed duel sexed people \u2014 and how some speak of two spirited people. Even still today many cultures understand about normal humans \u2014 he knows we're not all cut out of a mold. I'll choose you if it ever comes to it. But you shouldn't worry, I really think it won't be a big deal for them. What about your folks, you've never said anything about your parents. I don't even know where they live. Will they accept us?\"\n\n\"They're still in Boston, actually it's a small town about thirty miles outside of Boston ... it's sorta all the same.\"\n\n\"How did they take the fact of you being trans?\"\n\n\"I know they felt it would be easier if I could just get over it. They're pretty well educated on the whole human sexuality and gender issues. Basically, they gave me the options and any help I wanted and then just loved me the way I was. I was lucky when it came to parents.\"\n\n\"To be honest, my folks never said much about the subject, except for my father in speaking of the ancient cultures. I hope they understand us, but if they don't or can't I'll have to leave them to their opinion. I want you to believe that I'm not going to let anyone come between us, and honestly I don't think they will. I'm a grown man and they pretty much treat me as one. Erika, today shows me how much I've been missing, and I'm not willing to go back. So long as you'll have me, I'll choose you over anyone.\"\n\nI reach across the small space separating our chairs and take his hand, \"I guess we're both a notch or three off the normal point on the scale, eh?\"\n\nHe sits up and pokes the fire with a stick, settles back and says, \"Maybe, but I've hung out on some online chat forums enough to know that a lot of the men and women out there that appear to be what's considered normal, are really just afraid to risk being honest about their hidden true selves. They let the truth out when it's safe, and have to hide it when they are with those who know them but won't try to understand. I've even been that guy, pretending to be a straight shooter while really dreaming of someone just like you. So maybe there's more of the pure heterosexuals in the world, maybe not ... if the truth could ever actually be determined. Frankly, I think everyone's a few points off the mean on the scale in some way or another. But that's me , what do I know \u2014 except what I can see sitting right here next to me?\"\n\n\"Thank you for talking about it Dan. You make me feel more sure of it all \u2014 I get a little weird in the head sometimes worrying about what others think. More wine?\"\n\n\"Sure, just half full.\"\n\n\"You know E-T, you've lived this life way more than me, but I say we should just be ourselves. I truly believe \u2014 No, I know, you have made me more alive in the short time we've been together than I can ever remember. I don't want to go back to that life, and I really don't need a lot of other people's approval about the way I choose to live my life. I don't think anyone's really gonna care too much personally. You sorta gave me the impression you aren't too happy at your job, any plans on that?\"\n\n\"Not too happy is being too kind. My job sucks. I haven't made any plans to quit, just lot''s of daydreams about it.\"\n\n\"Just a thought; What do you think about maybe joining me in my business E-T?\"\n\n\"What do you have in mind?\"\n\n\"I would like to find someone who could manage the office so I can concentrate on getting the work and making sure it's done to my standards. I've grown quite a bit since I started and it's getting a little hectic. I have a secretary, but she's not up to what is needed to manage the business part of the operation \u2014 things like the bank, and contracts and things like that. I know you have a business degree.\"\n\n\"I never thought about it Dan. I've heard it said that couples shouldn't work together, what do you think?\"\n\n\"I think it depends on the couple. My grandparents on my father's side ran a grocery store together for their entire married life. They were a team, and I never heard a cross word exchanged between them. My mother takes care of a lot of my father's business issues, actually she does most of the nitty-gritty of the money side, and he does the field work. So I know it can work, just depends on the people I guess.\"\n\n\"Those are beautiful role models Dan. And when you mention it like that, hasn't that been more of the norm in so much of man's history \u2014 two people working together to build a life. The more I think about it, the more it makes sense. Although, those are more about people being together as man and wife.\"\n\n\"I guess I'm already thinking in those terms, maybe I'm moving too fast though. I meant every word I said to you today though. You are the best thing that's ever come into my life Erika. I don't want to be pushy, or silly \u2014 I just want to be sure we give ourselves every chance at finding a lasting relationship.\"\n\n\"I know, and I feel the same way. I want the same thing ... I think maybe we were destined for each other. I'll just let you decide what you think is best. My job sucks, and it can be replaced with another one just like it most any day of the week. I've just been holding out wanting to keep my job history clean, I've worked there long enough for that.\"\n\n\"Okay, enough talk about the world outside. We came out here to get away from all of that. You ready to go check out the Milky Way?\"\n\n\"That sounds like a pick-up line if I ever heard one!\"\"Did it work?\"\n\n\"Yep, lead me into the dark dear man \u2014 just please promise you will respect my honor.\"\n\n\"No promises, my lady.\" \n\nHe offers me his hand, and pulls me up from my chair.\n\n\"Grab your chair, I'll get a blanket and the light.\"\n\nWith our fire dwindling to coals and the last afterglow of the sunset long gone, the desert is almost blacked out. Once our eyes readjust after the headlamp is off, the stars seem to have multiplied by the millions since early evening. We sit close, sharing the blanket, and watch for shooting stars and passing satellites. It's so easy to forget about the world outside of this place, and just be one with the Universe and wonder the same questions as men and women have wondered since the first person looked up at this very same sight. What is life, except to live it in joy with someone to love? Despite all of the knowledge mankind has amassed, the big questions remain the same.\n\n\"You know why I like to look up there like this?\" Dan asks.\n\n\"Tell me.\"\n\n\"When I look up there, all the things like we've been talking about just look so irrelevant and small. I only need you here with me to be happy. I just want us to always remember this day ... the way it felt up in that little cave when we looked out on the same things the one's who painted those symbols saw. The moment we became one flesh for the first time. That's the stuff that really matters. Erika, I need you to help me always remember what's important and to keep a tight hold on it.\"\n\n\"I know, and before I met you I had only the barest glimpse of all of that. I think a lot of people sense something's not right, but we're so far removed from our roots we don't have a clue about the way home. I think you and I have a chance at that Dan, I really do. And I need you just as much as you need me. I was a sinking ship that day we met at the lumberyard ... you saved me Dan, I will always believe that.\"\n\n\"I guess it was just our time to find each other. Life's so weird and wonderful at the same time, at least it seems that way to me. I wonder what the odds are that we would have ever even met, and yet because your fence needed three new boards, and I noticed your fingernail polish that you had intended to be cleaned away ... we're here tonight together sitting under a billion stars. Is it really just all chance, or is there something deeper at work in all of this?\"\n\nI reach over and take his hand in mine, \"Who would have thought my strong construction worker would be such a philosopher? But I hear you and for me, I believe there is some directing hand in all of this. I don't have a clue what that hand might be, it's just comforting to know it's there. All I know is that we were both like tilled soil, all prepared and just waiting for the seed to be dropped and now here we are.\"\n\n\"I agree Erika, factor in the fact that we're both way off the norm in our sexuality and it becomes almost mind numbing to think of the odds of us meeting at all. Our lives are so far removed from boy meets girl, it makes this even more special to me when I think of all that \u2014 we're each other's miracle. You're my lumberyard miracle E-T.\" \n\nI roll myself out of my chair and onto my knees, crawl the short distance separating us and kneel between his legs. \"Hold me.\"\n\nShe lays her head on my chest \u2014 her warmth is like a blanket, I run my hand along her back and lace my fingers in her hair with the other hand. The warmth of her body against mine is a treasure more valuable than gold, and reminds me how long I'd ignored and gone without the most precious of life's purpose. \"I love you Erika Taylor \u2014 I love you E-T.\"\n\n\"I know. I feel it filling every part of me ... feels so good. Let's go to bed so I can show you how much I love you.\"\n\nOur eyes have adjusted and the starlight alone lights the short way back to camp. We pee one last time, this time standing together. \"I'll tell you a secret, I always pee sitting down at home. It's only out here I pee like a guy.\"\n\n\"Why?\"\n\n\"It's just easier when you're as small down there as I am \u2014 it just feels more natural too, I guess. Since I can't use the ladies room, I also pee standing up in public restrooms \u2014 men's toilets are just so icky!\"\n\nI laugh at her take on public toilets. \"I have to agree with you on that. I'd rather pee outdoors than have to use one of those. You should experience a construction site outhouse someday!\"\n\n\"I'll pass on that, I can only imagine!\"\n\nWith everything put away, we're finally able to retire to the comfort of our tent and the bed already laid out waiting for us. Dan puts the two sleeping mats together and tucks a sheet on top, with an opened up down filled sleeping bag for our top blanket. Two small pillows make it almost as comfortable as a regular bed, and for us it's more than enough. The night is beginning to turn cool, it being early spring in this high desert country. He lays the other down filled bag to the side of our bed for later when it will get even colder.\n\nKneeling, Dan lights a small pine scented candle lamp that provides both a soft light and some warmth inside the tent. I crouch and step the rest of the way inside to join him, the place I will sleep with him for the first time is more perfect than the finest hotel to my eyes. This is who we are, two people who share a reverence and awe of nature. Just simple folk who don't need much to be happy and content.\n\nFollowing his lead, I kneel down next to him. We had stepped out of our boots just as we entered to keep the sand from following us in, and Dan reaches through the tent door to bring them inside. \n\n\"You'll have to ignore my stinky boots E-T. I left a pair outside one night a long time ago. One boot was gone the next morning and there were coyote tracks showing where it had gone. Luckily, I found it not to far from camp. I guess it stunk too bad even for a coyote.\"\n\n\"They don't stink. But I'll remember that Dan, actually it could've been really bad if you were way out someplace.\"\n\n\"You're not kidding. In fact, it would have been a long walk back to my truck barefoot had he carried it off. I was just lucky, or maybe he was just giving me a lesson. The original people revere the coyote, but also call him the Trickster. Anyway, I've learned in a lot of ways to not take chances out here.\"\n\n\"I've never had anyone to camp with, and it was always scary at night for me. I just had to do it though, that was pretty much all I had and probably what kept me going. It's really so much more fun not being alone.\"\n\nDan eases me back onto the bed and covers my lips with his. I feel his weight on me and realize that I've never imagined the man's weight pressing down on me in all the fantasies I've woven over the years. I love this feeling. I feel small and protected. His lips leave mine and trace down my neck to my collar bone, his hand works the buttons of my shirt open. The cool night air feels good on bare flesh, now revealed in the shadows of the flickering flame of a candle. His lips continue their caresses, and quickly find my nipples \u2014 they are drawn tight against the chill of the night air \u2014 his kisses make them even harder \u2014 my soft moan of pleasure tells of my approval. He kisses and nibbles one and then the other as his hand now explores further down my tummy and sneaks under the waistband of my pants.\n\nThey're too tight for his wrist to find entry and he retreats, but only to quickly unbutton me \u2014 I lift my hips and he pushes the unwanted covering away \u2014 I'm exposed to him again \u2014 I feel small and vulnerable, but safe and without fear.\n\nI'm hard again, sticking straight up into the cool night air. Dan's hand claims my sex, covering it all and softly begins to explore the details. I squeeze my legs together and push my hips up to the warmth caressing me. With lips on my nipple and his hand on my clit I squirm in pleasure under him \u2014 then my faltering whisper; \"Stop ... you'll make me come ... wait baby let me pleasure you too ...\"\n\nI heed her plea and return my lips to hers. Sitting up again, I look down on her \u2014 she is the most beautiful site I've ever seen. She's here, open and willing \u2014 she wants me as much as I want her. My hand reaches again for the smooth flat chest so beautifully highlighted by two aroused nipples \u2014 like two peaked hills on a plain covered in new snow. My fingers trace her ribs and circle each of the dark pink areola encircling the hard nubs of my woman's breasts. Her skin is smooth and creamy and she smells clean from her bath, but still alluringly musky from being active all day.\n\nI feel my cock complaining in the cramped confines of my pants. Kneeling upright again, with a knee on each side of her head, I open the buttons and let my cock free. Working the pants down, then one at a time over each knee and finally I am free. For good measure, I remove my lightweight jacket and shirt as well.\n\nI have a unique view laying on my back looking up as Dan undresses. My eyes are drawn to the heavy man-sex hanging mere inches from my face \u2014 I breathe deep taking in his scent, the unmistakable smell of male virility! I reach my hands up and fondle all of it, feeling my way over the hard cock with its many veins bulging and the moist smooth end slick with a thin drool of pre-cum. I wipe him clean and touch my finger to my lips to taste him again \u2014 all the while, he watches me. Lifting my head off the bed, I lick his balls and bury my nose into him.\n\nI spread my legs wider, lower myself to her \u2014 she begins to service me in earnest with kisses and swipes of her tongue on everything she can reach. Wanting more, I place both hands around her waist and scoot her lower on the bed so I can lay down beside her with my face even with her clit. She understands and turns onto her side facing me, and with only some minor readjustment of bodies, we both find wonderful things to put into our mouths!",
        "We suck each other slow and sensually, kissing and licking in eager exploration. I want to give her the same gift she had given me at our sacred cave \u2014 I suck her swollen flesh with that goal in mind. Sooner than I would have thought, she's squirming and trying to stop me \u2014 she's close! I stop just long enough to lick her pussy and wet my middle finger, then my mouth reclaims possession of her clit at the same moment I gently and lightly begin to finger into her \u2014 easy and mindful of what she had taken from my cock earlier.\n\nI quit the struggle to put off my orgasm and give myself over to pure enjoyment as he skillfully pleasures me in ways I've never known. Soon, I'm humping into his mouth and back down on his finger \u2014 a finger that he has slowly worked deep to find that tender source of pleasure inside of me! I'm still sore from the hard fucking he gave me earlier, a tender reminder that takes me back to our cave \u2014 back to that moment \u2014 my arousal pushing ever higher! The tingling starts in my nipples and radiates down to the base of my clit and flows outward from my pussy where his finger is \u2014 racing and flowing down my inner thighs. All I can do is squirm in exquisite agony \u2014 hanging in the balance until the explosion of joy cannot be denied any longer \u2014 my cum squirts into Dan's mouth! I hear my moans, my legs quiver \u2014 I'm undone, completely undone. He slows the pace of his attentions to spare me more agony, but milks out every wave of pleasure until I am limp ... totally spent.\n\nI've tasted the cum of exactly two people in my life \u2014 three counting my own. I remember the taste from the older man, Jack, who first taught me about man sex. It was bitter, and had a hint of the tobacco he chain smoked and chewed. Erika's tastes clean and sweet, like some pure nectar from a rare flower. Her purity reassures my feelings about her sweet innocence and I know I'll enjoy doing this for her anytime she wants.\n\nUntangling myself from her limp body, I stand back up to get in the right position to get settled into bed. Laying facing her, I snuggle her close and flip part of the down bag over us both. I watch her as she lays there recovering, a small contented smile making her look even more angelic. With one finger, I gently move the mussed hair back from her face, then kiss her forehead.\n\nI open my eyes again, and seek out the lips I need to kiss. My tongue searches for his, and I now get my turn tasting my own cum on the lips of my lover. It feels so intimate, so special to know that another person desires me this much. As much as I want to make love to his cock again, he has drained the last of my strength. I smile, all my energy has been spent on the best day of my life ... not one moment wasted. Wishing it would never end is the last thing I remember thinking as I succumb to the safe secure feeling of laying close to him \u2014 a feeling never fully known before this moment.\n\nI watch as she drifts to sleep, and smile at the irony of life. The Jokester comes to my thoughts \u2014 that invisible power that sometimes blesses, and other times, curses us. I thank whatever power that brought her to me. She's not only beautiful, but a real trooper too. Jokester knew I need someone like her, she kept pace with me and all my traipsing around the desert. Her breathing is slow and steady, I very gently ease her onto her side of our bed. Laying down next to her again, I pull the covers up over us both and lay thinking and listening to the night sounds outside. The last thing remembered is that this has easily been the very best day of my life so far.\n\n*****\n\nWe wake up the next morning snuggled together. What a wonderful difference from waking up alone, and we'll face the new day together too \u2014 so many changes for the better. \"Good morning,\" I whisper, kissing her on the forehead.\n\nShe snuggles into me. \"Brrr, it feels cold out there.\"\n\n\"It'll warm up in a couple of hours. You stay here where it's warm, I'll go get the fire going.\"\n\n\"Oh, don't go, stay here a little longer. I don't even remember falling asleep last night ... but I remember everything else. I had no idea you were such a lover.\"\n\n\"Coming from a girl who never had another lover, I'm not so sure I can put that title on my business card just yet.\" I tickle her ribs and kiss her on the nose.\n\n\"You better not put it on your card and hand it out to every pretty girl you run into at the lumberyard.\"\n\nI assure her that's the farthest thing from my mind with a real kiss.\n\n\"I'm sorry I fell asleep so early ... I really did plan on laying under you again last night.\"\n\n\"Don't feel sorry, you gave me the best day of my life \u2014 it was actually pretty special watching you be so satisfied you couldn't go any more. Laying there watching you I was thinking, maybe something on my card that says, 'World's Best Lover', or something catchy, you know what I mean?\"\n\nReaching deeper under the covers, I quickly find his hard flesh I'm searching for. \"Do you want your punishment for that remark now \u2014 or later?\"\n\n\"Better make it later, I'm about to pee the bed.\" I say it as a joke, but it's true.\n\n\"I'm sorta in the same boat, I guess we should just get up and get it over with.\" I fling the warm sleeping bag off both of us!\n\n\"Brrr! That was cruel E-T,\" I tell her, pulling the warmth back on top of us.\n\n\"Hmmm, and I thought you were a mountain man.\"\n\n\"I am, but I usually wear a diaper to bed so I don't have to get out in the cold.\"\n\n\"Hmmm, that sounds interesting ... any other kinks I should know about before we get married?\"\n\n\"No ma'am, I'm not gonna spill all my secrets until we're hitched, then you'll find out what you're in for!\"\n\n\"You may be just as surprised mister. After all, I'm not just any old girl, you know?\"\n\n\"Oh I found that out yesterday \u2014 I kinda like it.\" I bend over and kiss her cheek.\n\n\"Snuggle a little more Dan. Please, just a little and then we can go pee.\"\n\nWho could resist? I snuggle close to the warm soft creature that shares my bed. I check between her legs to find she's hard ... just like I am. The hand on her clit wanders up and over her hip in search of her pussy. I run one finger down her crack from the very top and stop on the sensitive puckered flesh I'm starting to fall in love with. Erika presses her body into my hard cock and puts her leg over my legs, opening herself for me. Laying under the warm bag we comfort one another, offering a renewal of love for a new day ... hopefully one of many days to come.\n\nWe lay there quietly for a few minutes letting our wandering hands do the talking, until the call of nature is insistent and we both brave the cold until we can get dressed. Erika teases, \"Your nipples are bigger than mine.\"\n\n\"Is that jealousy I hear?\"\n\n\"No, yours are all hairy and I like mine just fine.\"\n\n\"I kinda like them too E-T.\"\n\nDan finishes dressing first and starts to leave when I say, \"Wait for me, I want to watch you pee.\"\n\n\"Okay, but you better hurry.\" He sets his boots out the door and steps into them.\n\nI'm right behind him, and we walk a ways out of camp. We stop facing a clump of brush. Dan opens his pants and pulls his cock free, as I watch. \"I want to hold it.\"\n\n\"Be my guest.\" I smile, wondering at her kinky side coming out. She stands to one side behind me, reaches around my waist taking my cock into her small hand. \n\n\"It feels so heavy \u2014 and fat. Okay, you can pee now.\"\n\nI laugh. \"It feels weird, shake it a bit to wake him up.\" She does what I told her \u2014 but not what I expected! \"Whoa, not that hard. Just a little, like waking a baby or something.\"\n\nNow I laugh at him. \"I didn't know it was so fussy.\" But, I do as he said and I'm rewarded with what I had wanted. I've wanted to hold a real cock for a long time, always wondering how it felt when a guy peed with a big one. It's different than mine for sure, I can put my entire hand around it and it just feels more powerful or something. I don't really want or wish for one like this \u2014 I'm too far down my own road now. Holding a man as he pees is just an old wish I'd wanted to make real \u2014 mostly curious. It's kind of erotic though, and maybe we'll want to do it again someday?\n\nWhen my flow ends I tell her, \"Now you have to shake it a little to get it all out and get the drops off.\" Again, her lack of experience causes more mistakes, \"Not that hard, you shook it all over my shirt!\"\n\nWe both laugh and I take over. \"You better stick with the one God gave you, you're too dangerous for anything bigger.\" Getting my pants closed back up, it comes to me. \"Okay, now it's my turn.\"\n\n\"I guess fair is fair.\" He did it for me, I'll do it for him. Unbuttoning my pants, I push them down out of the way. \n\nHolding her between my thumb and finger I tell her, \"Fire away.\" When nothing happens, I ask her, \"Now what?\"\n\n\"You have to gently pull on it a little and rub the rim of the head with your thumb.\"\n\nI follow her instructions and the extra sensation gets her flow going. I'm amazed at how different it feels \u2014 so small and delicate. When she's finished I gently milk any drops out and wipe them away with my finger. It was fun though. \"This was a good idea Erika. It's really intimate and lets me understand you even more.\"\n\n\"You know it's more natural for me to sit and pee. But I liked doing that too, and you're right about understanding, it makes me feel even less a man and more Erika. It may sound funny, but I think if I instantly had yours it would feel really out of place. I can't imagine all that stuffed in my pants all day!\"\n\n\"Now that you've put it in my head, I'm thinking how that would feel for me.\" I stand silent for awhile trying to picture it. \"You're right, it would be crazy weird \u2014 like loosing an arm maybe. Come hug, me! You're the most interesting person I have ever known Erika Taylor. Let's go make some breakfast.\"\n\n*****\n\nSitting near the fire with our hunger satisfied and drinking the last of the coffee, Dan says, \"We have a couple of choices for today. We can either hike back down Kiabab Creek a few miles and go into the edge of the park. However, the Colorado River is a lot farther, about ten miles from here as the crow flies. To hike there along the creek you can probably double that. So, that's a forty mile hike round trip. Or, we can pack up everything and back track a way and drive down to the park.The down side of driving to the rim is more than likely we'll be stuck in a campground full of tourists. It's still early in the season, the past few years though this place has gotten really popular. Or, we could just sit tight here, and explore up and down the creek and little canyons around here today and maybe tomorrow drive to the rim for a quick peek on our way home.\"\n\n\"I'd like to go down the creek to the Colorado, but that sounds like a long trek for one day Dan. And I'm not at all keen on being surrounded by a bunch of other people. I kinda like the idea of just a lazy day with you, and exploring the creek more sounds the best for that.\"\n\n\"That's what I thought too E-T. We should save that longer hike for a week long adventure I think. And yeah, the crowds kind of spoil it for me too.\"\n\n\"Sounds perfect. Since we don't have to rush, do you want to fuck me now or later?\"\n\n\"What if I said both, beautiful?\"\n\n\"What choice would I have? All alone out here, you could have your way with me and no one could hear my scream for help.\"\n\nHer smile disarms me. \"So far, I've only heard you scream for more.\"\n\n\"I have not! Maybe a moan or two of encouragement, I'm certain I never screamed for more though.\" I put on my best offended lady voice and he laughs.\n\n\"Maybe it was just a loud moan then.\" Best to let the lady have the last word probably.\n\n\"That, I'll admit to.\" As we banter in play, it's beginning to feel like we're old friends. It's a comfortable feeling, being close and intimate enough to let the other see the real person \u2014 and knowing they like what they see.\n\nI stand got up and stretch. \"Since we're gonna be here today and part of tomorrow, I'm going to dig a latrine for us someplace private. You want to come along or pack up some lunch and stuff for later?\"\n\n\"I'll put some stuff together for later. By the time you're finished, I'll probably need to use the latrine too.\"\n\n\"Easier to take care of business here than on the trail.\"\n\nDan grabbed the shovel and a roll of toilet paper, then heads off down a little wash away from camp.Cleaning up after breakfast and straightening things out in the tent keeps me busy. My thoughts of packing some sandwiches and filling the water bottles are interrupted by the sound of engines. I step around the back of the truck and see a dust cloud coming our way on the road we came in on yesterday. \"Great, just what we need.\" Dan will be so disappointed \u2014 probably have to move camp.\n\nWhen they get closer, I can make out several four-wheeler ATV's roaring toward us. Clearly they can see our truck but they show no sign of turning back or even slowing down. I look back the way Dan had gone but there's no sight of him. My instincts tell me to go find him, another part tells me there's nothing to worry about, just folks out having some fun. He probably can't hear them yet, no telling how far he went around the bend down there.\n\nWhen they're within fifty feet or so, they start driving in large circles churning up the dust and acting crazy. Maybe now is the time to get out of here?\n\nI make my way quickly toward the wash Dan had gone down. Don't run, just get away from these three men. Suddenly, one of them spots me and turns his machine to cut me off, there's no way to out run a four-wheeler in this open terrain! I turn back, running to the truck. I'll be safer locked in the cab until Dan comes back. Glancing over my shoulder as I run, I see that my antagonist has turned and is speeding toward me! He passes me going at high speed and circles our camp, filling the area with thick dust. I turn again to try and get to Dan, but the crazy man just sees it as a game and speeds by me again! Now I'm really afraid! I glance toward the other two, they've stopped a short distance from camp and seem to be talking. As I watch them, wondering what to do, the crazy one skids to a stop almost running me down. He jumps off the machine and staggers toward me! He's both drunk and crazy!\n\n\"Get back!\" I scream, \"I have a gun!\" In my panic, it's the first thing that I can think of to try and scare him off.\n\n\"Me too!\" he shouts and pulls a pistol from under his coat.\"Come on baby, you show me yours and I'll show you mine.\"\n\n\"Just leave, please just go and I won't say anything to the police.\" I use all my will to stay calm and sound stronger than I feel.\n\n\"Cops, I don't see any cops around here sweetheart.\"\n\n\"Just go, we aren't looking for trouble.\"\n\n\"I'm not looking for trouble ... just a little love'n ... you wanna little love'n baby?\"\n\n\"Hey! Get the fuck out'a here!\" Dan's yell seems to reverberate in its urgency as he comes into view of what's happening.\n\nI shout, \"Dan, he has a gun!\"\n\nThe drunk turns toward Dan and shouts, \"Yeah Dan, I gotta gun!\"\n\nI scream as I watch the idiot point his gun at Dan! Before I can try to stop him, the pistol roars and I see Dan spin from the impact! \n\n\"DAN!\" Ignoring everything else, I run to where he lays wounded. The sand is already wet with his blood when I get there! I kneel beside him and thank God he's still alive. I ease his jacket open to see the wound is on his left side at the bottom of his ribs. I have to get the first aid kit and try to stop the bleeding!\n\nRunning back to the truck, I see that the two other men have finally stepped in. They're all shouting and I see one of the men grab the gun and the other man shaking the drunk by his coat yelling, \"Wilfred, we gotta get outa here!\"\n\nThe drunk is arguing just as loud, \"We gotta kill 'em both!\"\n\nFinally, one of the men tackles the drunk Wilfred to the ground, holding him down until he calms down. Then, without a word offered in help, they all mount up and roar back the way they came, leaving me and Dan here alone. The whole fiasco happened so fast \u2014 it seems like hours to me. I take note of the color of Wilfred's machine, it's a bright yellow and has the words Canada on it, then they're all too far away to see anything more.\n\nI unlatch the first-aid box from the back of the truck cab and run back to Dan as fast as I can. If we just weren't so far out I could call for help \u2014 Dan joked just yesterday about being off the grid and how good it felt.\n\nHe hasn't moved at all from where I left him. Taking the scissors from the kit, I cut away the bloody shirt, then ease him over and see that the bullet has blown a hole all the way through his body. Not knowing if that's good or bad, the one thing I do know is that I have to stop the bleeding ... it's a thick ooze, unlike a cut finger! Putting sterile gloves on my hands, I wash the open wounds and the surrounding flesh with a wad of gauze and alcohol. The only thing I can think to do in order to slow down the bleeding is to pack the wound with as much of the gauze as I can. Seeing that this helps, I clean the wounds again and use two self adhering pads to cover the openings.\n\nNow, how to get him in the truck? No way to move him \u2014 I have to drive the truck down here to him. But how will I get him into it? First things first, I run back to the truck and find the keys where Dan always leaves them when we go for a hike. The truck's so huge! I start it up and engage the four-wheel drive and slip in into gear. Very carefully I wind my way down to where Dan is and turn the machine around facing the same path out. I stop as near to him as I can and hop down to the ground.\n\nRunning around to the passenger side where he lays, I'm elated to find him awake and looking at me. \"I've been shot,\" he whispers in a hoarse moan.\n\n\"I know baby, We gotta get you out of here.\"\n\n\"Water.\" The word is more of an exhale of breath, but I understand and hurry to get a bottle of water from the cooler in the back seat.\n\nHolding him up so he can swallow, I help him drink as much as he will. It seems to at least help him speak and the first words he utters are, \"I'm sorry ... they hurt you?\"\n\n\"No, I'm fine. They ran away. Can you help me get you into the truck?\"\n\n\"I'll try.\"\n\n\"Here, just lay back and rest a second. I'm gonna put you in the back seat so you can lay down.\"\n\nI feel more assured now and quickly clean out the back seat of the truck and piled up anything soft as a pillow. Then, with Dan's help I'm able to get him settled for the drive out of here toward help. \n\nI creep the truck back up the ravine toward the road, getting stuck will probably mean Dan will die out here. Finally, I'm on the two track road and I drive by our tent that such a short time ago had been our bed of love. \"Motherfucker, I'll kill you if I ever find you,\" I say in anger and frustration over the stupidity of the whole thing.\n\nI disengage the four-wheel-drive and drive way faster than I normally would, knowing time is not on our side. To add to the worry, it's Easter Sunday and the nearest town is Jacob Lake \u2014 a good hour drive away and probably closed up tight for the holiday. At this speed, it'll take even longer \u2014 I notch it up a little more. Thankfully Dan had tied the red flagging on all the turns we had taken coming in yesterday \u2014 without these, it's very likely I'd get turned around out here. He's resting quietly, I have the rear-view mirror angled so I can keep an eye on him and still stay on the road.\n\nI see his labored breathing, and that's enough for now \u2014 just keep breathing baby. After forty-five minutes, I turn left on the blacktop and a few more miles into Jacob Lake. As I had feared, the town seems to be locked up for the day. Driving through I notice a church that looks to be packed with everyone in the area! I pull close to the front door and rush in \u2014 the services are in progress. A man comes to greet me and I tell him, \"My friend has been shot. Is there a police station here? He needs a doctor \u2014 he's bleeding real bad!\"",
        "\"Wait here,\" he says and turning hurries down toward the front and leaning toward someone, motions for them to follow him.\n\nHe comes hurrying back with a big strapping man close on his heels, \"This is Deputy Sheriff Evans. Tell him what happened.\"\n\nI again explain the situation and half way through my story, the Sheriff takes my arm and says, \"Show me.\"\n\nWhen he looks at Dan, his look tells me he knows I'm not exaggerating, then he turns and runs toward his patrol car. I watch as he speaks on the radio for less than a minute, and then he hurries back to me. \"I called the State Troopers to send out a helicopter. I'm gonna make a call, sit tight.\"\n\nI watch as he walks a short distance and uses his cell phone, talking to someone. Putting his phone away, he hurries back to where I'm waiting and says, \"Follow me ... I'm sorry I didn't ask your name.\"\n\n\"Eri ... Erik Taylor, and thank you so much for helping.\" I stutter as I make the shift back to Erik for appearances sake. I know they'll probably want to see my ID and hope there won't be problems because of the way I look. In my camping clothes, it'll probably be fine \u2014 whatever, let's get going!\n\nThe Deputy looks a little surprised at the name, and says, \"Helping is what we do Erik. Looks like you saved his life up to this point, lets see if we can get you a little help. We're gonna drive to Marble canyon, you have gas in the truck?\"\n\n\"Yeah, it's got two tanks and Dan keeps them topped off when we're out like this.\"\n\n\"Okay, we're gonna break the speed limit \u2014 you okay driving? I hate to move him again.\"\n\n\"I'll be fine.\"\n\n\"Okay, let's go.\" \n\nI climb back up into the truck and the Deputy gets in his car, he turns on the emergency lights and pulls out at high speed with me and Dan following. Soon we're retracing the road Dan and I had driven along at the base of the Vermillion Cliffs. Seeing the places we had stopped for pictures is bitter sweet as I keep an eye on Dan in the back seat. He hasn't said a word since he drank the water over an hour ago. The road is good and mostly straight, and the Deputy isn't wasting any time, I glance at the speedometer and am surprised we're going close to eighty-five miles an hour. The big truck makes it seem slower, I redouble my attention. Have I ever driven this fast in my life? In a little over half an hour we pull into the small Marble Canyon Airport. I follow the Deputy right out onto the tarmac and see the helicopter already there waiting for us. I can't hold it together any longer and the tears flow freely down my face as we stop near the waiting helicopter.\n\nThe two medics come running with a gurney and I jump out to open the truck doors for them. They take several minutes assessing Dan and checking the wound, leaving my bandages in place. I step closer, and say over the noise, \"I didn't know what to do. I pushed some gauze inside the holes on both sides.\"\n\nThe medic gives me a thumbs up and shouts, \"You probably saved his life. Do you have his ID?\"\n\n\"It's in the truck, I'll get it.\"\n\nHe snaps a picture of Dan's diver's license and hands it back to me.\n\nWith that they push the gurney to the waiting aircraft and in less than five minutes the only man I've ever loved in my life is whisked into the sky \u2014 I don't even know where they're taking him. I climb back into the truck, lay my head on the steering wheel and finally break. I cry the tears of a broken heart, mixed with anger over such a stupid waste. I cry out of self pity, fearing that which I had finally held in my hand might slip away.\n\nI didn't even know that Deputy Evans was standing next to me until I feel a hand on my back and soft words saying, \"He''s already half way to Flagstaff and the doctors are waiting for him.\"\n\nI want to hug him, but can only try to say thank you \u2014 even at that, I can't get the words out before the sobs take control again.\n\n\"The medics said he's stable, I think you got him here in time Erik. I know you need to get back home and check in on him. Can we go inside and talk a little first? I really need to find out about the ones who shot him.\"\n\nThat gives me all I need to steel myself. If it's the last thing I ever do, I want to see Mr. Wilfred what's his name behind bars. Wiping away the tears and pushing my fear as far away as possible, I take a deep breath and say, \"I hope I can give you enough to catch him, lead the way.\"\n\n\"Follow me, let's get off the tarmac and park out front. There's a private room where we can talk inside.\"\n\nSitting in the office is not what I really want to do. It's a dreary, tired and worn county airstrip, the room looks like some unused space with a worn desk and a couple of chairs that had seen better times. Making it even worse, the flickering fluorescent light buzzes overhead, grating on my already frayed nerves. However, I know it's important and I have hours to drive before I'll know anything about Dan anyway.\n\nDeputy Evans comes in with two bottles of cold water. Handing me one he says, \"You did good out there Erik. Now tell me what went down.\"\n\nHe takes careful notes as I explain what had happened. The deputy is obviously pleased that I had a first name and a rough description of his machine. \"So you heard the two with him call him Wilber?\"\n\n\"No, I'm sure it was Wilfred, they kept shouting at him to give up the gun,\" I correct him.\n\n\"And the machine was bright yellow with the name Canada?\"\n\n\"I'm sure I read Can Ada on it ... but it was spelled funny ... broken up into two words.\" Taking a piece of paper I write the words Can Ada on it. \"Does that sound like any four-wheeler you've heard of?\"\n\n\"Yep, it sure does. Sit tight just a while longer, I'm going to call this information in.\n\n\"I can just make out Deputy Evan's words as he stands outside the door talking on his phone.\n\n\"Okay, I need a title search run, it'll be an atv, make is Can Am, color yellow, owner first name only Wilfred..W I L F R E D. No license plate info. Okay call me back asap, possible attempted murder suspect, seen with two other men on atv's, armed with a pistol and suspected of attempted murder, approach with caution.\"\n\nComing back into the office he tells me, \"Erik, I think we're done. I have all the information, and I'll be in touch. Since you and Dan both live in Flagstaff, you may be contacted by someone from down there. We need to talk to Dan as soon as he's able, and the doctors will let us know when it's safe to visit with him. You've been a big help. I'm going to drive out to where you camped and have a look around. If you have the time, I wouldn't mind if you could come along to make sure I find it. I'd like to go over the crime scene before it gets contaminated.\"\n\n\"As much as I'd like to head home and check on Dan, I think doing all I can to help you is more important. He's in good hands \u2014 plus, I can get his tent and camping gear we left behind. Should I follow you, or what?\"\n\n\"If it's the place I'm thinking, we won't need four-wheel drive to get in, right?\"\n\n\"No, the only time I used it was to go down the wash so I could get Dan in the truck.\"\n\n\"Why don't you just leave your truck here and ride with me then? I can get us there and back faster that way.\"\n\n\"That would be a relief. I'm drained and that's Dan's truck which is a lot bigger than I'm used to.\"\n\n\"You were doing pretty good back there by the cliffs,\" he says with a smile.\n\n\"Yeah, that was kinda fun,\" I reply \u2014 just a hint of a smile and a lighter mood now that Dan is on his way to help.\n\n\"Okay, let's go see what we can find,\" the deputy says.\n\n\"I really appreciate you going out there all alone to investigate this mess, Deputy Evens. I don't think they'll be around, they took off in a big hurry when the other two got Wilfred settled down.\"\n\n\"We don't have the kind of back-up out here that you see in the movies Erik. It's a big piece of ground to keep a handle on. If we knew, or even thought, the shooter would still be in the area \u2014 then we'd call in some help. From what you described, they're probably more shook-up than you are.\"\n\nDeputy Evens is as good as his word and he pulls out of Marble Canyon with the lights on and cruises over ninety miles an hour in the flats along the cliff wall.\n\n\"I'm starting to recognize where I'm at along here. A couple of days ago Dan and I were stopping to take pictures \u2014 who'd have thought it would turn out like this?\"\n\n\"Fifteen years ago it wouldn't have happened. Lots of new folks moving out here to live the free life. Trouble is they run their damn four-wheelers over everything, leave their trash behind and they all think they need a big gun to tame the wild west,\" the deputy says with disdain.\n\n\"Dan and I were just talking about that the other day. His father is an archeologist and I guess he's pretty well known among the native folks. Dan said it's changed a lot since he was a kid growing up around Flagstaff.\" \n\n\"Do you know his father's name?\"\n\n\"Dan never said his dad's first name, his last name is the same as Dan's ... Espenosa. He's down in southern Mexico now on some important dig in the jungle.\"\n\n\"I know him. He's the real deal all right. The locals trust him and that says a lot, more than most people realize. Well, it's a small world isn't it Erik?\"\n\n\"It seems to be, despite it seeming so big out here.\"\n\nWe're at the cut off onto dirt in half the time it had taken Dan and me the first time. I point out the red flags Dan had put up on the way in. \"I'm pretty sure he knew where he was going and how to get out. I think he did it to both teach me, and in case I needed to get out alone for some reason. All I know is those red flags saved us today. He always takes them down on the way out, I just didn't have time today.\"\n\n\"Don't worry about them, we can get 'em when we go out,\" the deputy says. \"By the way, my name's Ron, my friends call me Ron, so you can drop the Deputy Evans if you want.\"\n\n\"Thanks Ron, it is kind of a mouthful, isn't it?\"\n\n\"I guess I'm used to it, but it does get old,\" he says glancing at me with a small friendly grin softening his official pose.\n\n\"Okay, that's Dan's tent there, see it?\"\n\n\"Yeah, I'm gonna stop here. Let's go in on foot first.\"\n\nDeputy Ron gets a bag out of his trunk and opening it grabs a camera bag and slings it over his shoulder. Taking another bag from the trunk, he leads the way \u2014 walking along the very edge of the road. He takes numerous photos of the tire tracks pressed into the dirt road, each photo has a small numbered flag stuck next to as a record and Ron's taking notes each time he stops. \n\nStanding a short distance from our camp, I describe what had happened and all of the tire tracks fall into place in the my mind.\n\n\"Erik, I'm really glad you came out here. I've got a good picture now of how it played out. So far, it looks like every word you told me was accurate. You'd be surprised how many people get something like this all mixed up. Show me where Dan was shot.\"\n\nFollowing Deputy Ron's example, I skirt the camp and its evidence and walk the short way through the brush to the place Dan's blood had soaked the earth. Again, deputy Ron takes a bunch of photos and makes notes in his pad. It's clear to see where I had driven down the dry creek bed, and even where Dan had stepped into the truck. Even the big sweeping turn that I made to get lined up and back to the road is plain to see.\n\n\"Okay, let's ease back up to where you think Wilfred took the shot.\"\n\nWalking slow and easy, I point to the place Wilfred had gotten off and started his tirade.\n\n\"Stay here,\" he tells me and continues to slowly ease forward. Stopping and turning back he says, \"I don't think I asked you earlier if you saw the gun. Was it a revolver or an automatic?\"\n\nI feel sort of helpless, \"I saw it, he pointed it at me. Sorry, I don't know much about guns.\"\n\n\"That's okay.\" Pulling his service pistol he holds it up so I can see it. \"This is a revolver, see the round cylinder here and the holes where the bullets go?\"\n\n\"Okay, I see it.\"\n\n\"Did the gun he pointed at you have these holes, or was it smooth and flat sided?\"\n\n\"I think I'd remember the holes, and I don't recall his having those,\" I answer to the best of my ability.\n\nRon smiles and nods his head then bends over as he scours the ground, taking photos and notes as he slowly works his way around the perimeter in a spiral toward the presumed center where the shot was fired. \"I can see where the other two wrestled him to the ground,\" Ron calls back, then takes more photos and notes.\n\nWhen Ron works himself back out of the main area, he says,\"Wait here, I need to get something out of the car.\"\n\nI watch him trot back and open the trunk. When he gets close enough, I see that he has retrieved a metal detector. It dawns on me then that Ron is looking for a shell casing!\n\nIt takes less than five minutes before the device gives it's alert, and Ron bends down with a small brush and slowly clears the disturbed earth away from the spot. When I see Ron take a baggie from his pocket, I know our time coming here isn't wasted! Ever the professional, Ron picks the shell up with the tip of his pen and drops it into a small bag. He notes the details on an evidence tag and puts it all into his shirt pocket and buttons down the flap. He then continues sweeping the area. After about thirty minutes and no further finds, he again eases away from the crime scene.\n\n\"We may have caught a break Eric,\" Ron says as he brings out the bag with the spent shell. \"It's a 45 caliber round and see how shiny it is? That means it hasn't been out here long. There's not much of a chance of finding the slug since it went clean through, but if you've got the time we can give it shot.\"\n\n\"I've got all the time you need Ron, just tell me how I can help you.\"\n\nTaking me by the arm he leads me near the place he thinks Wilfred had stood when he shot. \"You stand here like the shooter was, and I'm going back where Dan fell. I can get a rough idea of the bullet's trajectory and use the metal detector to see if we can find where it ended up. There's a lot of variables here, so don't get your hopes up too high.\" Ron turns back to where Dan's blood marks the spot he fell.\n\nTaking his shoulder bag off, Ron sets it down near to where Dan fell, then walks farther out in a line connecting me and his shoulder bag. I stand watching, giving him a point of reference where the shooter stood \u2014 waiting to be told what to do next.\n\nAs Ron sweeps the metal detector, I know any number of things could have deflected the path of the bullet, anything from a rib bone to a rock in the sand where it finally hit ... just glad that since we're here, Deputy Ron thinks it's worth a try. He said if he didn't find anything, he'd request a more advanced search. He said something about the fact the shooter was up-slope from the impact that suggests a longer trajectory, but that sand bank there would shorten it. I didn't quite follow Ron's point, but he sounded like he knew what he was talking about. I'm just glad he cares enough to try.\n\nRon continues to slowly sweep in ever wider arcs, trying his best to cover all the ground. Finally, I can tell he's found something.\n\n\"I saw the impact point just before the detector confirmed it!\" he shouts back up to me.\n\nI watch as he very carefully sweeps away the sand with the small brush ... and then he shouts to me, \"I got it! It's almost as pristine as when it left the barrel!\" He steps back and takes numerous photos, circling wide around the impact point. Apparently satisfied, Ron kneels with a small open baggie and gently scoops the slug out of the sand.\n\nRon writes something on the bag and unbuttoning his shirt pocket, puts it in with the other one. He waves at me to come down, pointing for me to go around through the brush and not near where Dan had fallen.\n\n\"We caught another break Eric,\" Ron says as he takes the bag out and holds it up. \"This is the slug that tore through Dan, and I have no doubt his blood is on it.\"\n\nFinally, with my help Ron takes numerous measurements and compass readings and geo-location points to draw a sketch of the shooting and where the evidence had been located. I want to hug him in gratitude, knowing that would never do I can only say, \"Good work Ron. I've only seen that on TV, and I'm impressed with what you've done here. To be honest, I figured there was no way to ever find out who shot him.\"\n\n\"If the guy is halfway honest, we have a good shot at getting an ID from a title search on his four wheeler. We have the shell casing and the slug, I have photos of all the boot tracks and those can be matched with the exact boots they were wearing. We know the make of his atv, and the color, and photos of all the tire tracks. The name Wilfred is not all that common, so that narrows it down quite a bit if he's the owner. If his friends are smart, they'll turn him in. If they don't, they'll be charged as well \u2014 probably still be charged as accessories to the crime.\"\n\n\"Impressive, I hope you get them all. Especially Wilfred. I forgot to mention it before, but the Wilfred was attacking me when Dan came back to camp. Dan had gone to dig us a latrine and they came riding in while he was gone. You can see they all circled our tent and they were shouting and laughing. Dan came up the wash in the middle of it. When he saw Wilfred threatening me, he shouted at the guy and told him to leave me alone. The guy was too out of it I guess. I tried to warn Dan that he had a gun, and that seemed to really get Wilfred riled up and he forgot about me and turned on Dan saying crazy stuff about how he had a gun, then he just raised it up and fired. As drunk as he was, I'm surprised he didn't shoot himself in the foot.\"\n\nRon was jotting notes as I talked. \"Dan sounds like a good friend. I'm pretty sure he'll make it, no small thanks to you. I saw the shovel back there near where Dan fell. I'll help you gather up your gear. I can drive the car in a little closer now, and I'm going to put some barricade tape up in case we need to come back out here for some reason.\"\n\nI start putting away our gear and break the tent down. Ron helps me and soon we're on our way back to Marble Canyon Airport. Ron stops at each red flag along the way and lets me take the makers down \u2014 each retrieved flag drives home the memory of how happy we had been such a short time ago. Once back on the pavement, Ron puts the lights on and makes short time of getting me back to Dan's truck so I can head home.\n\nBefore I leave, Ron says, \"Let me make a call and see how he's doing.\"\n\nI wait, barely able to control myself as Ron talks to the hospital. All I hear is a bunch of yep, umm, I see, along with some head nodding. When the call ends, Ron says, \"He's still in surgery Erik. He's at Flagstaff Medical Center. I told them you were close to the family so they should let you see him when he's able.\"\n\nI feel a sinking sensation at the news, I had hoped to hear that Dan was awake and would be fine. The tears come unbidden and unknowingly\n\n\"Hey, don't assume the worst Erik. It's Easter Sunday and if I hadn't been in that church you would have had a long drive to find help out here. That was a miracle in itself. I've seen a lot of miracles in my life, so don't give up on him.\"\n\n\"Thanks Ron, thank you for everything. I was just hoping he would be awake by now, I better get going.\"I shake Ron's hand and thank him again, then get into Dan's truck for long lonely drive home.\n\n***** \n\nFrom the window, I watch the cars following a hearse as they all slowly drive down the road down below. I really don't need to see this right now and turn away. \"Why are they always black Cadillacs?\" I ask the quiet room.\n\nI look at Dan sleeping in the hospital bed. The doctor had been honest, and said that he had lost a lot of blood and suffered severe trauma and internal bruising, including one of his kidneys. That he's young and strong saved his life, given the long delay in getting into surgery. They had him awake after the three hour surgery to clean things up and repair the damaged artery the bullet had nicked. The doctor told me that was a good sign.",
        "They have him sedated now because rest is what he needs so his own body can do the rest of the healing. The good news is; he should be able to go home in a few more days \u2014 maybe a week. That was two days ago. Obviously he'll need to take it easy for some time while his body heals even when he gets out of here.I don't have any way to contact his parents, and no one at Dan's office had known either. I talked with Dan's lead foreman and took it upon myself to ask him to step into Dan's shoes for the time being. He isn't just an employee, he's also a good friend of Dan's and he's eager to do anything he can to help out.\n\nAll I feel is useless, despite trying to do what I think is needed.\n\nEven the phone call from Deputy Evans telling me they had Wilfred in custody was a short lived lift to my spirits. He told me it was Wilfred's two buddies that had decided to come forward once word got around about the three men wanted for attempted murder. They may all still face charges, that will be up to the District Attorney.\n\nBut Wilfred is going down. Attempted murder. That's what Ron said. He also said the DA talked some about adding charges for what he did to me, but the other charge is pretty much iron clad and will put him away for a long time. I smile, remembering how pleased Deputy Ron sounded telling me that. I'd just as soon not have to go to court for what he did to me, but I'm looking forward to testifying about what he did to Dan. Deputy Evan's didn't even know if I'd need to testify since the other two are signing so loud.\n\nMostly I'm just weary. Going from the heights of love down into the gutter with the worst of mankind has taken the wind out of my sail. I need Dan to hold me and put all of this behind us ... deep down I know that will happen. I just want it to happen faster. The nurse interrupts my pity party when she comes in with a small covered tray. I assume it's food for Dan, instead she says cheerfully, \"It's time to remove the catheter.\"\n\nI don't want to see him like that and walk back to the window. In only minutes, the nurse is done and says, \"Don't worry sweetie, he's doing good. Most of what you're seeing here is just the drugs keeping him quiet and comfortable. By tomorrow, you'll have him back.\"\n\nI turn to the only person so far who seems willing to tell me very much and ask, \"How long do you think before he can come home?\"\n\n\"They're looking at day after tomorrow at the earliest, but it could be a little longer. Just be patient, he's over the rough part. But, he'll need several weeks at home before getting back to limited activity,\" she tells me.\n\nI let out a big sigh of relief at finally hearing some good news \u2014 news that points toward the end of all of this. The nurse interrupts my thoughts asking, \"I'm assuming you're Erika?\"\n\nWhen I nod yes, the nurse adds, \"I thought so, it's the only word he's said since he's been here. Don't worry, he'll be fine.\"\n\n\"Thank you. It seems like nobody wants to tell me anything, and I just assume the worst.\"\n\nThe nurse put her finger to her mouth indicating not to tell anyone and in a low voice said, \"Sometimes the doctors should just stay in the surgery ... they can seem uninterested, but they're not.\"\n\n*****\n\nIt happens just like the doctors and nurses had said, and finally I'm driving Dan home to his house. We already agreed that I'll move in for a while to help until he gets his strength back. I wish I was moving in because of more romantic reasons, but on the bright side we are finally turning the page on putting all of this behind us. Dan's actually more optimistic than me, and that alone helps me to be stronger too.\n\n*****\n\n\"No, I'd really prefer that you sleep in my bed E-T.\"\n\n\"It just seems you might sleep better without me disturbing you.\"\n\n\"I keep telling you, I'm fine. They just want to play it safe for a while so I don't overdo and tear something they worked so hard to patch together \u2014 I sleep better with you.\"\n\nIn the end he has his way, and I move the things I brought over into his bedroom. There's plenty of room in the closet for the things I brought, I'll leave the drawer items in my suitcase on a chair in the corner of the room. Dan built this house the first year he opened his business. It's a small two bedroom, he had obviously spent a little more time and money on the details. It's a cozy home and I love being here with him.\n\nDespite his bravado, Dan sleeps a lot during the daytime. I know that when he no longer needs these naps, he'll really be getting back to his old self. Taking care of him and cooking good food fulfills my need to do something to help. The only drag, my boss keeps nagging me about coming back to work \u2014 despite the circumstances and the fact I have a week of vacation time left! Fuck him! Dan doesn't need to hear about it, there's nothing he can do about it. I've been wanting to get a new job for a while anyway.\n\n*****\n\nA full week after being released from the hospital, Dan snuggles close and pulls me tight as we lay in bed. Not knowing what I should wear to bed while he recovers, I'd decided the first night to wear the one pair of pajamas I own. I only have the one pair, I hate the way they always seem to wrap me up as if they want to strangle me in my sleep! Dan sleeps in underwear, but I know that before all of this he slept nude just like me. Now, finally I see him being more like his old self.\"\n\nI never pictured you as a pajama kind of girl,\" he says softly and kisses my shoulder.\n\n\"I'm not, actually I hate them. It just felt weird to be naked when you were still trying to get well.\"\n\n\"What if I told you I'm well?\"\n\n\"I'd remind you that you have a doctor's appointment day after tomorrow.\"\n\n\"He told me last time it's okay if I get out of bed and move around.\"\n\n\"Notice that he said move around out of bed?\"\n\n\"No, he said it was okay to get out of bed and move around. I think he knows that moving around in bed is fine. I wouldn't have to move around much to free you from these pajamas you hate so much.\"\n\nTo make my point, I undo the buttons on her pj's, starting from the top and working down. When I slip my hand in the open shirt and caress the soft skin of her chest, I know the discussion is over. Her nipples harden under my tender touch until they swell enough for me to roll them between my fingers. I've learned that she enjoys a little pain there, and I enjoy bringing her this pleasure. She allows a soft contented moan to show her approval \u2014 I must be well enough. I'm becoming fluent in her subtle body language and I'm not surprised when I feel her squeeze her legs tight as the signals from her nipples wake up the nerves between her legs. I pinch and pull each nipple in turn until they are both elongated and hard. Even without seeing them, I know they are now bright and flushed in her arousal.\n\n\"Pull your pants off,\" I tell her \u2014 this time she obeys without argument and quickly returns to my warm body. She immediately discovers that I took my underwear off while she was removing hers.\n\n\"No rough stuff Dan, I'm serious.\"\n\n\"Yes, nurse.\"\n\nThe fact that his cock is poking perfectly in the crack of my butt as I snuggle closer seems to defeat my warning! When I try to move away, I realize his strength really has improved \u2014 he's pinned me tight with just one hand ... his cock does feel really good there where it belongs. I surrender and snuggle back into him. I know he's horny. But he can't overdo it and pay the price later. Like most women who desire to do whatever they can for their man, the best thing I can think to do is to suck him off to relieve his pent up need.\n\nTaking matters into my own hands, I get up on my knees and gently encourage him onto his back \u2014 his glorious cock is here, ready to be adored. In fact, it's in need of my attention right now and I bend forward, take his warm flesh into my mouth and start sucking. He's still big for me, but each time I've serviced him like this I've learned better how to please him. I take him in until I gag and ease off, then a little farther the next time. I studied advice online about how to pleasure a man's cock, I'm determine to deep-throat him and master this for him. I've practiced with my dildos, and it's getting easier. Lot's of saliva, messy but so worth it to me!\n\nI'm determined. After several attempts, it scares me the first time it goes so deep! Even so, after I pull away, I instantly want to do it again, and this time it's easier.\n\nMore confident now, I use my hand to smooth slick saliva over the full length of his shaft \u2014 then go down on it again. This time I feel his hair tickle my nose \u2014 the swollen head of his cock is in my throat and Dan gently humps me \u2014 I stay down on him as long as I can, lack of breath is all that makes me back off!\n\nI can feel that he's close to coming \u2014 after a brief rest for breath, I go back down until the hair is tickling my nose again, then a full mouth and a stuffed throat once again tell me I've swallowed him! I have a deeper breath this time and Dan gently eases in and out as he fucks my throat and mouth. My emotions run wild \u2014 I feel used ... I love the naughty feeling! Too soon I feel him swell, and I ease back just enough for a quick breath. This time he slides in easily \u2014 I let him fuck my mouth until he empties himself. He pretty much takes care of himself, I'm just the vessel he needs right now. When he comes, his seed goes straight down my throat! Once he's mostly done, I grab a breath then gently suck him until he's finally spent and sighs his contentment as his body relaxes.We lay there, both worn out. I feel like I'm floating I'm so happy \u2014 I'm so horny for his cock to be in my body ... I did it for him. I'll get mine when he's well. I ease off the bed and go to the bathroom for a warm washcloth \u2014 he lays watching me while I lovingly bathe his spent cock. I love the way it looks and feels both hard and soft. A warm sense of purpose washes over me as I take care of him like this. That he's still weak from his wound is obvious in the way he's so relaxed and worn out from this small effort. Normally, he would already be eager to satisfy my needs \u2014 the truth is; I'm already satisfied just in pleasuring him. And I know he'll gain strength every day and soon our life will return to normal.\n\nThe biggest question left to answer is: What is our normal? Our relationship has been growing and developing in the same ways of most young couples. The shooting has derailed us from the normal path of love. I'm now in his house caring for him as a wife, yet I've not even met his parents. Watching him sleep again so soon after having sex, I take a few deep breaths and relax. I know that I'm prone to worry, and it's Dan who gives me the security to stay calm. In my mind, I hear him saying, 'It'll all work out, just relax.' I pull the covers back up over us both, and snuggle under them trying to be careful and not disturb him. I listen to his breathing for a while to assure myself he's okay, then close my eyes and drift.\n\n*****\n\nEPILOGUE\n\nIn time, it became clear that Dan had been right about everything turning out fine. Despite his assurances that he was doing fine, his parents flew home to check on him. Just as I had imagined, they were both gracious and interesting people. They couldn't thank me enough for taking care of their son and they never said a word or gave any indication they might be concerned about our relationship. In fact, it turned out to be just the opposite. Dan's mother treated me like part of the family and shared all the embarrassing things about her son that mother's seem to have a need to do. We all discussed the idea Dan had of growing his business, and his parents supported him and me in doing that together. \n\nDan told me after they flew back to their project in Mexico, that his mother had taken him aside in private and had the mother to son talk about doing the right thing regarding his relationship with me. He told me that her advice was for us to get married. He said that his mom had talked about doing the honorable thing \u2014 how, for many women, the desire for stability and for building trust with the man they love is important. She told him; 'If you love her, you need to do the right thing for her.'\n\nAll I know is that by the time it came for them to return to Mexico, I felt like I was already a part of the family.\n\nFinally alone again, Dan and I are able to resume our weekend trips into the secret and sacred places we love. We talk of the mysteries of life, and of love \u2014 we have become almost as one in both body and soul. Truly everything worked out just as Dan had assured me it would.\n\n*****\n\nThe End\n\nIf you read this far, I'd like to thank you. My wish is this hopeful little tale lifted your spirits and added a little hope to your day. Your rating and comments are always appreciated ~ yukonnights"
    ],
    "authorname": "yukonnights",
    "tags": [
        "arizona",
        "crossdresser",
        "fem-male",
        "hispanic",
        "love",
        "outdoors sex",
        "romance",
        "trans",
        "transvestite",
        "ts"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/lumberyard-miracle"
}