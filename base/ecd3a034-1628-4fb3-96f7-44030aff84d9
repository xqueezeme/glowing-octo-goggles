{
    "title": "Outback",
    "pages": [
        "A/N -- Hello. I originally had this planned as a romance, but the more I wrote, the more I was left wondering if it was still technically a romance but... Honestly, I'm not sure. Anyway, I hope you enjoy the story. Trying to keep it all realistic was difficult at times!\n\n*****\n\nMark\n\nI had the window of my ute down, radio on, happily listening to some old tunes as I made my way back home. It had been another long week on site as we continued to improve the highway north to the NSW / Queensland border. Laying bitumen and tarmac is one thing. It's the digging of tunnels and building of bridges that are the real test. I had started out as one of those men in a hi-vis jacket, hard at work in the middle of the highway, laying all that tar on the road. Now I was the man in a hard-hat and short-sleeved shirt, still in a hi-vis jacket, but also with a clipboard in hand as he oversaw the operation.\n\nI was only twenty minutes from home, eager to see my daughter, at least. The fianc\u00e9e? Perhaps not as much as my daughter, but I knew the weeks away were tough on her. Tough on us, to be honest. But it came with the job I did. Most of the time, I would be working jobs around the city that mean I would be home every night. But there were times, two or three times a year, I was sent further afield to oversee a project. It's what all those nights studying had meant. I'd graduated high school and headed straight into the workforce. University never appealed, much to the chagrin of nearly the entire family, but while working, I studied part-time as well, eventually graduating in civil engineering.\n\nPulling my ute into the car park of the apartment block, nothing seemed untoward. Grabbing my bag, I headed around the communal swinging pool to the apartment. Opening the door, the fact I was greeted with silence was a surprise. Usually my daughter, Katie, a bundle of energy at five years old, would immediately start running towards me. My fianc\u00e9e, Sally, would at least call out hello from the living room or kitchen.\n\n\"Hello, I'm home,\" I called out.\n\nI walked into the living room. No sign of anyone there. I walked into the kitchen. No sign of anyone. No food cooking on the stove or in the oven. I walked into our bedroom, and that's when my stomach started to flip. Hurrying to Katie's room, there were a few of her things on the floor but I threw open her closet and drawers to see them empty.\n\n\"No, no, no,\" I muttered to myself, \"Where is she?\"\n\nSally's things were also gone. All her clothes, jewellery, mementoes. I immediately had my phone out to call her. It didn't connect at all, stating the number was out of service. I walked around the apartment again, and that's when I found the letter on the fridge. Feeling my hand shaking, I pulled it off and read the contents.\n\nMark,\n\nIf you've walked around the apartment by now, I'm sure it's obvious to you that I've left and have taken Katie with me.\n\nDon't bother trying to track us down. We've been preparing this for months. Your departure for a week simply gave us time to bring it all together. By the time you read this, we will be well out of reach.\n\nKatie will have a new family with a new father. He is more than capable of providing us with everything we need and deserve.\n\nSally\n\nKatie had a phone. It wasn't technically hers, but it was so I could call her at night before she went to sleep. Sally had given it to her, one of the few bright ideas she had. I tried that number. It was also out of service. I'd called Wednesday. Thursday, no pick up. Sally too...\n\nShit.\n\nI looked at the letter. \"Who is we? Who is us?\" I wondered, \"Was she having an affair?\"\n\nStupid question considering it bloody sounded like it. Looking in the fridge, I was surprised to see things still in there. I checked all my things around the apartment. Nothing was missing. I checked online at the joint account. No money had moved, so I at least moved all the money across to my personal, immediately cancelled her credit card, and then grabbed a beer to sit down and just think. I called my best mate, Mick. \"Hello, Mark. How's it going?\"\n\n\"Mate, have you seen or heard from Sally lately?\" His silence told me everything. \"Mick?\"\n\n\"She called on Monday to say she was leaving you.\"\n\n\"And you didn't think you'd call me up and tell me?\"\n\n\"She asked us not to call you.\"\n\n\"Why?\" I growled.\n\n\"Said she was leaving you for good reason.\"\n\n\"And?\"\n\n\"And what?\"\n\n\"Did she give any reason why? Did she say I was violent? Abusive? I frightened her?\"\n\n\"No, none of that, mate. Not a bad word that way. Said she found a guy who could provide more for her and Katie.\"\n\n\"And you didn't think this would be worth picking up the phone and giving your good mate a warning?\"\n\n\"Me and Simone... We agreed with her.\"\n\n\"Some fuckin' friend you are!\" I shouted, hanging up immediately. \"Who is us?\" I asked myself.\n\nI tried two other mates and I got the same spiel. My god, I thought I had friends who would have my back. No accusations were raised against me, it was just a case of 'She said she was leaving you and not to let you know'. Mick tried calling back half a dozen times before I answered. \"What?\" I spat.\n\n\"Look, mate...\"\n\n\"Fuck off and fuck you,\" I growled, \"Some fuckin' mate you turned out to be.\"\n\n\"Don't go off the deep end, mate. It's for the best.\"\n\n\"I'm not your mate, you worthless cunt. Fuck off.\"\n\nI hung up again. He tried half a dozen times again before finally giving up.\n\nI called 000 and reported my daughter as a missing person. Couldn't give a shit about Sally but I wasn't going to lose my daughter without a fight. They asked me a series of questions over the phone before asking me to pop in the next day. I figured a Saturday was unusual but I said I'd be there at the appointed time. I sat on the couch and thought some more. If my friends already knew, surely... I almost growled with rage as I knew, just knew, my family was somehow involved in this. They'd never approved of anything I'd done in life. Rugby league as a sport over whatever they wanted me to do. Manual work compared to sitting in an air-conditioned office. Wanting to live my own life instead of suckling at the family teat. Let's just say my family and I don't really get along. They're arrogant, pompous tossers while they have no problem expressing their disappointment in what I've chosen to do. Apparently anything except for lawyer, doctor or being some sort of financial whizz is beneath the family.\n\nGetting in my ute, I caught the highway heading to the eastern suburbs, where the rich loved to flaunt their wealth. Most of them are stuck up cunts and I was glad to move out as soon as I could. I'd been sent to schools nearby, full of pretentious little fuckwits. My siblings were the same as them. Little wonder I practically despised the lot of them. How I ended up in that family beggared belief.\n\nThe knot in my stomach only increased the longer I drove. By the time I was parked up outside their house, I was full of nervous adrenaline. I'm not sure if it was a sixth sense, or just knowing what my family was like, but that bad feeling was crawling up my spine as I passed through the gate and up the long drive to the house. I heard conversation and laughter from the rear. No doubt another one of their garden parties. I was rarely invited nowadays. My face didn't fit with all their wanker friends. At least the front door was open, so I just strolled on in. The house had barely changed, at least in the past couple of years. Two living rooms, enormous kitchen and dining room, study downstairs. Four bedrooms upstairs. Bathrooms on both levels.\n\nWalking out the back, the conversation ceased immediately as a few faces stared in my direction. My mother immediately looked concerned. My older brother gawped at me. My younger sister looked frightened. \"To what do we owe the pleasure?\" my father asked, sneering down his nose at me. Given I hadn't changed; I was out of place in his eyes.\n\n\"Where's my daughter?\"\n\n\"Somewhere better.\"\n\n\"What do you mean 'somewhere better'? Enlighten me, oh wise one?\"\n\n\"No needs for sarcasm, Mark,\" my mother stated. God, I hated her pretentious tone.\n\nI glared daggers at her and she wisely shut up, looking away. \"Where is my daughter? Where is my fianc\u00e9e?\"\n\n\"Your fianc\u00e9e is with a better man. Therefore, your daughter is with someone who can provide her with a better life.\"\n\n\"So... you know what's happened?\" I asked carefully, enunciating each word slowly.\n\n\"Of course, we do. We introduced her to him a year ago. They left today for somewhere far away, as in no longer in this country. I would suggest you just forget about them. It would be the best for everyone concerned. If you have nothing else on your mind, we're done here. You can run along now.\"\n\nI'll admit, I lost it. I strode forward and landed a punch straight in his jaw. Fucker went down like a sack of spuds. Consternation immediately as mother went to his side, yelling something I couldn't understand with all the screeching. My sister wisely backed away. Brother stepped forward, squaring up. I had two inches of height and ten kilos of muscle on him. I figured I had a murderous look in my eyes and he wisely backed away, hands up to placate me. Leaning down, I grabbed my father by the hair and dragged him up and into a seat. Making sure I kept everyone else in view, I asked, \"Where is my daughter?\"\n\n\"Out of your miserable, pathetic life. We've ensured she'll have the best of everything. Better than whatever sort of lifestyle you could provide.\"\n\nI took a couple of steps back and looked over all of them. In that instant, I saw them all in a new light. I'd always known but now this... \"I would say I don't believe it,\" I whispered, \"But...\" I shuddered as the truth hit home. \"Who the fuck are you people?\" I asked softly, \"To do this to your own... No, not son. I refuse to believe I come from the same blood as you lot.\" I looked at the woman standing next to him. \"I refuse to believe any mother would do this to their own child, to rip his own child away like this.\" I looked down at the man. \"And as for father, you've barely been one my entire life. All you've ever cared about is money and status, and while you might have poisoned their minds,\" I gestured towards the man and woman who were apparently my siblings, \"You never managed to convince me. There's more to life than all this bullshit. I'd found it too.\" I grabbed him by the collar. \"But you, you piece of shit, got your claws into the woman I loved and now I've lost the only gift that ever actually mattered to me.\"\n\nI put my fist into his gut, bending him over. \"Mark, please,\" Cheryl stated, the woman I once called 'Mum'.\n\n\"You knew all about this, bitch,\" I growled, glaring in her direction, \"So please kindly shut the fuck up.\"\n\n\"I'm your mother! You will not...\"\n\nI glared at her again as I pushed John back into the chair. \"No, you're not. You might have given birth to me, but that's where your motherhood ended. You're no better than this piece of shit. The only reason I don't slap the shit out of you is that you're a woman, and I do have some sort of moral fibre within.\" I put my hand to his throat. \"The only reason I don't squeeze harder, John, is that I will see my daughter again one day, but it won't be from behind bars. And you're not worth the prison sentence.\" I let him go as he gasped for air, turning around to look over the party. \"You,\" I said, pointing at Brian, \"Are not better than this cunt here. I ever see you again, it'll be too fucking soon. You want to go toe to toe, though, be my guest. I'll put you in the fucking ground. And you, Kelly... Well, less said about you, the better. Worthless fucking whore is the one phrase that springs to mind though.\" I sighed with relief. \"Well, I'm not sure about you, but this has been grand. Now, don't mind me, I've got a daughter to find. So, I'll give you this as a parting gift,\" I flipped them the bird, \"And let us hope we'll never meet again.\"\n\n\"I'm going to have the book thrown at you,\" John threatened.\n\nI leaned over him, glaring into his eyes, amused that he shrunk back in the chair. \"Honestly, John, I really don't care right now. Do what you want. But I promise you this. The day I get out of prison, the next day I will kill you.\" I patted his cheek, his eyes wide with fear. He knew the hate I held for him, now come to fruition. \"You took my daughter from me. The one thing in my life I cherished above all else. The fact you did that to me speaks volumes of you as a man. Not as a father, you lost that title a long fucking time ago. And I have no doubt the bitch behind you was as involved, and those two worthless shits over there probably knew all about. So, you really think I'll be concerned about taking your life in return? I'll probably have a fucking hard on while I do it.\"\n\nI hit him again, knocking him unconscious. Without a backwards glance, I strode out of the house, vowing to never return in my lifetime. Getting into my ute, I was ravenous so stopped off for a takeaway on the way home. By the time I pulled into the car park outside my apartment, it was dark and I noticed the police car waiting for me. I wasn't going to go on the run so I hopped out and strolled to my front door. They were busy knocking so I introduced myself. \"Mark Samuels, officers. Is there a problem?\"\n\n\"We've been notified of an incident occurring at the residence of John and Cheryl Samuels. We were hoping to ask you a few questions.\"\n\n\"Here or at the station? Am I under arrest?\"\n\n\"If you come to the station with us now, we won't cuff you, at least.\"\n\n\"Very well, lead the way.\"\n\nI'd never been in the back of a police car before so that was an experience. I didn't make chit-chat with them, glancing out the window. In the silence, I knew everything I recognised had collapsed. No partner. No daughter. No family. Hell, no friends if they'd all known about it and not told me. It was while riding along that I felt completely and utterly alone. Once at the cop shop, they escorted me in, took my details, then led me to a cell, stating I'd be interviewed in the morning. I felt rather drained after everything, but I found sleep hard to find. My mind whirled as I wondered where my daughter was. Was she safe? Who else was she with? And the overriding question was... Why? I'd been fed bullshit about 'a better life', but Katie had been nothing but happy. I doted on that child like nothing else. Apple of my fucking eye. I'd have moved heaven and earth for her, just to hear one of her giggles.\n\nThat's when the tears came. Because I knew they hadn't been lying. And I knew the chances were simply slim to none if she was beyond the borders.\n\nShe was gone.\n\nThe interview the next morning, after being given a brew, was when reality had set in. I felt... empty. I went over in detail everything that happened since arriving back home the previous evening, all the conversations I'd had, the letter I'd found, then the confrontation with John and the others. They knew I'd logged my daughter as a missing person, but apparently that was already settled. John and Cheryl had already been in, stating they had left the country and were not missing. No missing people. No kidnapping, insinuating, well, I could understand considering I'd knocked the fucker out.\n\n\"Surely it's illegal to take my child out of the country without my permission?\" I wondered.\n\n\"It is but... let's say guards are more eagle eyed upon those entering rather than leaving the country,\" one of the cops said, \"If your child was with a man and woman who looked like her parents, particularly if she's with her mother, it wouldn't raise many eyebrows.\"\n\nI sat in the cell most of the day before it opened, I assumed late afternoon. \"You're free to go,\" the cop said.\n\n\"I am?\" I asked, surprised to hear those four words. I was expecting to face a day in court, charges read, a bail hearing... A massive fine or at least a few weeks in the slammer.\n\n\"John Samuels isn't going to press any charges. Good thing for you that's how it is here.\"\n\n\"Huh. Wonder why?\" I muttered, but I didn't care. They were no longer my problem. I grabbed my things, signed a few forms, and after a rather stern talking to about staying out of trouble, I headed outside.\n\nWalking into my empty, quiet apartment, I knew I couldn't stay there. Far too memories of my daughter. As for Sally, I just burned with anger regarding her. When I'd met her, she'd been a sweet, young thing, and we'd fallen in love quickly. We'd been planning to get married, but she knew my work kept me occupied, and she was apparently meant to be studying while working part time. I was left thinking it was all a charade. Checking my phone, there were plenty of missed calls and messages. I just deleted everything. I no longer cared what people thought.\n\nMonday morning, I handed in my notice into work. My boss was surprised, but after explaining what happened, he understood why. I thought about hiring some sort of PI, but this isn't the movies, and I don't think John had lied. Katie had been taken far away. Where? It would take searching data at the airport and... I didn't even know where they could have possibly headed. I spoke to an estate agent and put the apartment up for a quick sale. I was on eBay ready to sell anything not bolted down after that. Over the next month, I emptied the apartment of everything until I only had a sleeping bag, my phone, a bag of clothes and a small box of mementoes left. Photos of my child, photos of me and my child. Anything with Sally was cut up. She was persona non grata with me now. I changed my surname as I wanted nothing to do with the so-called family I once had. People had come to view the apartment and the estate agent was confident of a quick sale, and that she'd keep in contract regarding it.\n\nHanding in my stuff at work, my boss admitted he was sad to see me go. I said goodbye to some of my colleagues, made a post on social media about the fact I was leaving, never to return, then I headed west.\n\nIt wasn't going to be an exciting adventure. Numbness had set in during the month. More than one so-called 'friend' called, tried visiting, but if I did answer, I gave them short shrift. They were all full of excuses that I was tired of hearing. I eventually cancelled the contract and picked up a new number. At least it stopped the calls. Didn't stop one last visit.\n\nOpening the door, it was my former best friend, Mick. Next to him was his fianc\u00e9e, Simone. He stepped back at the look in my eyes before he loosened up, ready to defend himself. \"We need to talk,\" he said.\n\n\"No, we don't,\" I said, unable to summon the rage any longer, the only remaining feeling being one of emptiness, \"Instead, you're going to listen to a simple tale, then you're going to turn around and fuck out of my life forever. Willing to listen or you just want to put your tail between your legs and go now? Either way suits me just fine.\"\n\nHe shared a glance with his fianc\u00e9e. To my surprise, she nodded. \"We'll hear whatever you have to say, Mark.\"\n\n\"Some would believe my life should have been easy. I know I was born with a potential silver spoon. But I learned very quickly what my parents were like, what the people around me were like. I knew early on I wanted nothing to do with it. The sort of wankers that peer down their noses at the 'lesser beings'.\n\nI've earned every cent to my name through hard work and dedication. I thought I had a woman who appreciated that fact and loved me for it. More fool fucking me there. Lesson learned. But I did have a daughter who I doted on, loved more than life itself. Just coming home to her made each day worthwhile, each day of backbreaking work and struggle. To walk in, hear her cute voice shout 'Daddy!' before she'd raise her arms so I could pick her up and cuddle her. And I worked all day just to tickle her and hear that giggle.",
        "All of you. Everyone I thought I could trust. Everyone I loved. You've all betrayed me. You haven't done just that, you've broken me. There's nothing left here for me now. I have no family. Not after what they did. And I have no friends. Not after what you helped happen. If I was a religious man, I'd pray and ask God 'What did I do wrong?' Maybe He could answer me. Never lifted a finger at Sally. Never raised my voice. Rarely showed a temper. She wasn't a DV victim. And my daughter? She walked all over me. I would have died for her.\n\nYou took it all. All of you. So you don't get to stand there now and say 'We need to talk'. There is nothing you can ever say to justify helping destroy my life.\" I took a step forward. \"Lucky for you, I'm just about done. Feeling quite suicidal. The only thing that's going to keep me going, each day from now on, is the thought of seeing my daughter again. You've done this to your apparent best mate. Driven him into depression. Dark thoughts of suicide. Doubt you really fucking care.\"\n\nI took a step forward until I was within inches of him. \"Leave now, Michael. Leave. Now. Before I do something I won't regret but will do time for, that will end with you in a hospital bed or in the fucking ground. Because, right now, I really wouldn't care either way. Forget I exist. Because after this, I will forget you, all my supposed friends, my family, none of you will exist in my mind. I'm just going to disappear.\" I gestured away. \"Fuck. Off.\"\n\nHe took a step back before he turned away, Simone following him. Before he disappeared, he did stop and turned back. \"I'm sorry.\"\n\n\"No, you're not. Another lie on top of all the others.\"\n\nThat was the last time I heard from anyone there.\n\nWhat I said had me down the cop shop the next day, almost pleading for help to find my daughter. I eventually sat in front of another officer to explain everything. I was pretty much told there was nothing they could do. They suggested I could speak to a lawyer, but if Sally and Katie were out of the country, they were beyond reach and a court wouldn't be able to do a thing. However, seeing I was pretty desperate, they did open a case file and suggested they would do some investigating, letting me know they'd contact if they found anything. I suggested in return they speak to John and the others, giving them a list of names. They might or even would know where she was.\n\nI left the station with no real hope they'd find anything, left believing they didn't really care.\n\nI had no real idea where I was going the day I drove out of Sydney for the final time, eventually crossing the Great Dividing Range and just heading... wherever I wanted. I drove aimlessly for a few days, turning north as the climate grew rather arid, before finally pulling into a place called Longreach.\n\nKnowing I couldn't just keep travelling forever, though I knew I'd get money from the apartment sale within a couple of weeks, I found a hotel to lay my head and wandered to a nearby pub. Standing at the bar, sipping a beer, I certainly looked out of place, though the lady behind the bar gave me the once over. \"New in town?\"\n\n\"Sort of. I'm not really sure what I'm doing.\"\n\n\"Looking for work?\"\n\n\"Guess so.\" I sighed. \"I really don't know. No plan up here,\" I added, tapping my temple.\n\n\"Like hard work?\"\n\n\"Yeah. Worked as an engineer. Started out doing manual labour.\"\n\n\"Plenty of farms about, but I know the Macarthur family are looking for a permanent hand or two. If you're willing to work hard, they'll probably take you on.\"\n\n\"Better than wandering aimlessly,\" I muttered, finishing the beer, \"Got directions?\"\n\n\"Sure, sweetie. Got a sat nav?\" Nodding, she wrote down an address for me, sliding over the piece of paper. \"Around a half hour drive from here. I'll let them know you're coming so someone is there to meet you.\"\n\n\"Thanks. Appreciate it.\"\n\n\"Before you go, what's your name?\"\n\n\"Mark. Mark Smith.\"\n\n\"Okay. I'll give them a call now. I'm Dottie, hope you'll become a regular. And that man you want to speak to is Bill Macarthur. He's a good sort.\"\n\n\"Thanks.\"\n\nI managed a tight grin before I turned and walked out. The hotel was only a short walk away. My ute was a furnace already, so I lowered the windows, put the address into the sat nav, and began the drive to a possible new life.\n\n*****\n\nAs she watched the young man walk out of the bar, she couldn't help but sigh. She'd never heard a more monotone voice in her life. He tried to walk upright, shoulders back, but the shoulders suggested the weight of the world on his shoulders. But it was the blue eyes... there was nothing there. No life at all. Just... existence.\n\nPicking up her phone, she dialled the number for the Macarthur resident. \"Hello,\" a male voice answered.\n\n\"Hello Bill, it's Dottie.\"\n\n\"Hello, Dottie! How are things?\"\n\n\"I've just had a young man in here looking for work. I've pointed him in your direction.\"\n\n\"Excellent. We could use another hand or two.\"\n\n\"Just... be careful with this one, Bill. We only had a brief conversation but... I've seen the sort of look in the eyes, on the face of a man. Know what I mean? Lost more than one in the past decade. Good friends. Good men.\"\n\nShe heard the sound of acknowledgement. They'd both lost good friends. \"Know much about him?\" he finally asked.\n\n\"Nothing at all. Just his name. Mark Smith.\"\n\n*****\n\nWilliam (Bill)\n\n\"Young man is on his way, Ely,\" Bill called out to his wife, Eleanor, though everyone called her Ely.\n\n\"New hire?\" she called back.\n\n\"Might be. Might be. Dottie just called. Said he was in the hotel, looking for work.\"\n\n\"She has a good eye for people,\" she replied, walking out of the kitchen towards where he stood by the open front door. He glanced to see her wiping her hands on a tea towel, \"She tell you much?\"\n\n\"Just his name and that he... well... I guess we'll find out soon enough.\"\n\nA ute appeared in the distance a few minutes later, the dust billowing behind it. Another hot, clear day. That was what everyone saw nearly every day in this part of Australia. Rain would sometimes appear, a deluge or two, then months with nary a drop. Still, at least the recent rains had given the countryside some colour. Trees with plenty of green. Lots of grass for the sheep and cattle to feed on. But it was the constant maintenance that Bill would admit he needed help with. His son had left the farm as soon as he could, never wanting to inherit the place. He was now in the city, doing something or other with his life. At least their daughter was doing a university degree that would help them. Bill and Ely would admit running the farm was exhausting, even with the extra help. Their daughter went to university specifically so she was prepared to run it when her parents retired, at least from full-time work.\n\nThe ute pulled through the open gate and stopped in front of the house. A man stepped out. He was at least six-two, broad and strong, close to 100kgs if he guessed correctly. Short brown hair. Walking towards them, his blue eyes glanced over them and Bill knew what Dottie meant immediately.\n\n\"Mark Smith?\"\n\nHe nodded. \"Yes. You're Bill Macarthur?\"\n\nBill offered his hand, Mark grasping it immediately. \"You're right. I'm Bill. This is my wife, Eleanor. Everyone calls her Ely.\"\n\nMark offered his hand to her. \"Pleasure,\" he said. Ely took his hand, nodding her head.\n\n\"So what brings you all the way out here, Mark?\"\n\n\"I'm honestly not sure. Looking for a new start, I suppose.\"\n\n\"Where are you from?\"\n\n\"Sydney.\"\n\n\"And now you're here?\"\n\n\"It's...\" He looked away, glancing into the distance. \"It's a long story,\" he muttered.\n\n\"Ever worked on a farm?\"\n\n\"No. But I have experience in civil engineering. Mostly road-building, that sort of thing. Got a few certificates. Was leading the last project up on the Pacific Highway.\"\n\nBill felt his eyebrows raise. \"Yet now you're here wanting to work on a farm?\"\n\n\"Long story,\" he replied evenly. In fact, there was barely anything to his tone.\n\nBill shared a glance with Ely. He completely understood what Dottie was saying. \"You interested in hearing what the job here involves? See if it interests you?\"\n\n\"I'll be honest, Bill, I'm probably going to take it regardless. I've been... drifting for a few days. But I've always found that keeping myself occupied with work means I don't have to think. And if I don't have to think, then... well, I'd rather you kept me as busy as possible.\"\n\nBill nodded, jerking his head. \"Follow me, I'll show you around and explain a few things.\"\n\nHe explained the daily routine of farm work but admitted he was looking for someone to carry out maintenance, whether it be on machinery, buildings, fences or anything else that might need fixing or a little TLC. Mark asked him a few questions at least, which suggested interest, though it was hard to tell if there was any enthusiasm. He explained there were a couple of other enormous farms around, and that Longreach was the only main settlement within an hour of the farm.\n\nOther than that, he gave him the basic salary, which he admitted wasn't great, but that there were small cabins on the farm that he offered to his workers if they didn't have a home close by. He wasn't surprised when Mark asked, if hired, for a cabin, preferably isolated. Bill led him back to his homestead. \"When can you start?\"\n\n\"Monday morning. I've booked a hotel in Longreach for a couple of nights. I can drive up here first light, dump my things, then get started.\"\n\nBill nodded. \"Very well. Sounds good.\" He offered his hand, Mark accepting it. \"I'll see you Monday morning, say around 9am. Days will usually start earlier than that, but it'll give you time to get here, drop your things...\"\n\n\"See you then.\"\n\nHe watched the young man walk back to his ute, perform a three-point turn, before he drove south back to Longreach. Walking inside, removing his hat as always, he found his wife in the living room. Taking a seat in his favourite chair, Ely asked, \"So?\"\n\n\"He's interested, starts on Monday. But... Ely...\" Her eyes met his. \"I've seen this before.\"\n\n\"So we can keep an eye on him.\"\n\nHe sighed. \"He's come here to die.\"\n\nHis wife smiled at him. \"So we keep an eye on him, Bill. He's not the first young man who's come out this way, looking for answers. Probably won't be the last. Did he give anything away about what happened?\"\n\n\"No, he was silent except for when answering questions. He was polite. Looks strong so I don't think the work will bother him. But there's a way a man walks, and that short walk back to his ute, just before leaving...\"\n\n\"Whatever you do, Bill, don't push it. If he doesn't want to talk, let him be. He might need time to open up to us.\"\n\n\"Or we're going to find him dead in the cabin one morning,\" Bill muttered.\n\n\"Have faith, Bill. He's come here looking for work. It would suggest he hasn't given up yet. So we keep him busy, hopefully free from any dark thoughts. If need be, we keep him here, treat him as one of our own. We'd done that enough times as it is.\"\n\nMark arrived a little before 9am on Monday, so that was a good sign at least. He didn't have much with him. Just a large backpack full of clothes and a small box. Getting into the passenger seat, he directed Mark to one of the more isolated cabins. It had electricity and running water, but it was rather small otherwise. Just a living room and kitchen area, with a bedroom and small bathroom adjoining.\n\n\"I know it's small but...\"\n\n\"It's perfect for what I need. Thanks.\"\n\n\"Why don't you take a little time to settle in. There are sheets in the cupboard to make the bed. There's already things in the fridge that Ely put in yesterday. You're free to join us for meals, though we understand you might want privacy. Why don't you meet us at the homestead at noon?\"\n\n\"I will. Thanks.\"\n\nMark drove him back to the homestead, though it was only a kilometre or so. Not a long walk, but he thanked Mark for the lift. Watching the ute turn around and head off, he was left wondering what was in the box.\n\n*****\n\nMark\n\nIt was nowhere near as big as the apartment, but it would do. I didn't need much space. I made the bed first before emptying my backpack. I didn't have much with me. I figured quite a few of my clothes would rarely be worn, assuming I was going to need more pairs of jeans, more flannel shirts, and a good pair of boots. And a proper hat.\n\nThen it was the box. A photo frame of Katie and I took pride of place on the mantelpiece. More photos were dotted around both rooms. I took out my laptop and placed that on the small table. I'd have to ask about wireless internet, get that set up. I hadn't given up on finding my daughter, I simply didn't know where to start. I'd think of something, but the globe was a big place. It was a needle in a haystack.\n\nI then sat in silence on the lone couch. There was a small flatscreen television, and a set top box that suggested that I'd get cable television. A couple of shelves where I could put other knick-knacks. Kitchen had everything I needed if I wanted to cook. I'd put toiletries in the small bathroom, hoping the shower was at least half decent.\n\nBut all I did was close my eyes, concentrating on my breathing, emptying myself again of any emotion. I was tired of being angry. It got me nowhere and made me feel worse. Same with being upset, in pain, feeling sorry for myself. I'd rather feel nothing than those feelings. So I emptied myself until I felt numb again. I probably verged on looking like a sociopath... or suicidal. Better than the alternative.\n\nThat last thing I took from the box was a pistol. I'd bought it one of the rougher areas of the city. One of the guys I'd worked with knew a guy, who had a cousin, who knew a guy, and I met his friend. We did an exchange in the car park of a tavern on the edge of the city, far from prying eyes. I'd watched enough movies and TV shows to know how a pistol operated, able to eject the clip, check it was full, before making sure it was a safe.\n\n\"Better not come back on me,\" he warned. No names had been exchanged, just a location to buy.\n\n\"It won't.\"\n\n\"What do you want it for?\"\n\n\"Putting a bullet in my head.\"\n\nHe met my eyes and slowly nodded. \"Well, there are worse ways to go. But... mate, surely...\"\n\nI gave him the money, put the pistol in my jacket, and simply walked to my ute. I was partly surprised he didn't call it in, but I'd left within a week anyway.\n\nPlacing it on the table, the only reason I hadn't yet was my daughter. But with every day that passed, I was left wondering what was the point of going on if she was... wherever she was. Maybe she was better off with me. Maybe it would just do everyone a favour if I put the barrel in my mouth and pulled the trigger. Clearly no-one was going to miss me. Sure, I'd feel sorry for Bill and Ely having to find me, but as long as I didn't feel the pain, I could go on.\n\nI stood up and put the pistol in the small chest of drawers next to the bed. Out of sight. Out of mind.\n\nBut always there, just in case I had enough and wanted to end it.\n\nDriving back to the homestead at noon, I knocked on the front door, Ely opening it with a smile. \"Come on in, Mark,\" she said, giving me a quick tour before leading me to the kitchen, Bill already tucking into a couple of chicken sandwiches. Greeting me with a nod, I sat opposite and was offered a couple of the same sandwiches. Thanking Ely when the plate was placed in front of me, we ate in comfortable silence. I knew I wasn't going to be the most talkative of people, but Ely eventually tempted me.\n\n\"So you're from Sydney?\" I nodded as I had my mouth full. \"You're a long way from home.\"\n\n\"I don't really have a home anymore,\" I muttered. I noticed the glance between the pair. \"Part of that long story. I'll be honest, I'm not really up for sharing it so soon. Give me some time and... maybe... I don't know...\"\n\nEly patted my forearm. \"Whenever you're ready, Mark. Just... don't bottle it all up.\" I nodded again. \"So how did you end up here?\"\n\nShrugging, I admitted, \"I was just driving around. Left Sydney a few days ago. Was driving aimlessly west, then found a road that told me it went on for a couple of thousand kilometres. So I turned north, ended up here. Felt tired of travelling so figured I could do something useful. Money would come in useful, though I haven't really dipped into savings. Or anything else.\"\n\nWe finished our sandwiches, Bill gesturing with his head to follow him outside. Thanking Ely for the sandwiches, he led me to the barn where he had me do some simple tasks. Asking if I'd ridden a horse before, I said only the once and that I hadn't particularly like it. But, being on a farm, I figured I'd be in a vehicle or on horseback. I didn't mind which.\n\nI had three meals each day with the married couple as I didn't really have a choice. Got to know the others that worked on the farm. No doubt they found me quiet as I didn't offer much information about myself, avoiding any questions about my past. I don't think any of them were suspicious, no doubt believing something bad had happened.\n\nOn Saturday, I headed into Longreach to do some shopping. There was one of those discount clothing stores where I could pick up jeans, shirts, boots and other small necessities. Next was a grocery store. Though I appreciated Ely feeding me, my cabin did have a kitchen I could use, and the whole point was solitude. They might think me a little rude, but I was sure the pair would understand I would rather time to myself.\n\nSettling into the daily routine wasn't too difficult. I had breakfast and dinner at my cabin and either had lunch with Ely and Bill or out in the field, depending on where I was working and what I was doing. If I was with the married couple, Ely filled the air with conversation, Bill generally grunting his agreement. She managed to raise a tight grin from me occasionally, but after only a couple of weeks, I was heading back to my cabin for the weekend when she stopped and hugged me.\n\n\"You'll find a reason to smile again, Mark,\" she whispered, looking up from her short stature. She looked sad for me, which then made me feel guilty. I quickly eliminated that feeling too. \"Whenever you're ready to talk, Bill and I will be ready for whatever it is.\"\n\nShe let me go and walked back to the kitchen. \"You have a family? Sons and daughters?\" I asked.\n\nShe stopped and turned around. \"We do. One son, one daughter.\"\n\n\"See them often?\"\n\n\"Our son, not so much. The farm was never going to be his life. He was glad to leave. We still love him, he still loves us, but his life was never here and we accept that. He's happy where he is, and still calls us often. As for our daughter, she's completing her studies and should be returning home in a few months. She'll help us run the farm.\"\n\n\"But you love your children?\"\n\n\"Of course, Mark. Unconditionally and without any expectations on them.\"\n\n\"So you'd never do something so heinous, so diabolically evil, that it would tear their heart out and ruin whatever life they were trying to build for themselves?\"\n\nShe walked back towards me, meeting my eyes. \"Never,\" she said softly, \"We love our children and only want to see them happy.\"\n\nI had to leave otherwise it was all going to come spilling out, and I wasn't ready for that. Not sure if I'd ever be ready. I simply nodded, turned around and marched to my ute. Left a skid mark in the dirt as I floored the accelerator. Probably got back to the cabin quicker than I'd ever done before. Wouldn't do the ute any good but I knew how to fix the thing anyway.\n\nThe cabin was dark, switching on the main light, closing and locking the door behind me. Dumping my pack, the first thing I needed was a hot shower. Hearing Ely's words in my ears again, I didn't know whether to be upset, get angry or simply grieve a life that I could have had. After drying myself off, wrapping a towel around my waist, I grabbed the bottle of bourbon, having picked up a few during grocery shopping, taking a seat on the couch. I turned on the television for background noise as I switched on my laptop. The wireless internet was garbage but good enough.",
        "I finally hired a private investigator. I knew Katie had been taken out of the country, I simply wanted to know where. I had no idea how I'd get her back otherwise. I had no doubt John and whoever was with Sally had pulled some stunt. I was told he'd see what he could find out, but I figured being a PI was more about following a cheating spouse rather than breaking into databanks to figure out where someone was. At least he did offer sensible advice. He would send the picture of my daughter to any police or investigative unit possible and see if he got any hits.\n\n\"Fuck it,\" I'd said, \"Do it. See what happens.\" I had no expectations, but I still had hope. She could disappear, but not forever. But he suggested tracking John and Cheryl, watching their movements, and he might go asking some questions of ex-friends. He admitted to not being hopeful but understood my desperation. Plus, I was paying him.\n\nThe only social media I'd kept was Facebook under my old name, simply intrigued as to who would keep in contact. No surprise my disappearance had been noted, more than one concerned message from so-called friends. The same friends that didn't tell me that Sally was planning to leave with my daughter. Surprisingly, there was a message from Kelly, asking where I was and that she wanted to talk. She'd left that only a few days before. The fact she was still thinking about me, that she loved and missed me...\n\nI felt... nothing. Absolutely nothing. She meant nothing to me anymore. None of them did. I had no doubt she'd known about everything. No doubt my older brother did. He'd always disliked me. You love family, don't have to like them. I'd always thought he was a fucking clown. Soon as I was bigger than him, I'd put him in his place. He'd never liked that. He was smarter, I'd give him that, but he'd always been a conniving fucker. No doubt he'd helped destroy my life and would have enjoyed every second of it.\n\nShould have hit him again when I had the chance. I'd left him with more than one split lip and black eye when attempting to take the title I'd earned when putting him on his arse when I was only twelve. But I knew if I'd started pounding him after knocking out John, I might have finished the job completely.\n\nThis makes me sound violent. I don't feel I am. I put down beating up my brother every so often to typical sibling rivalry. He loved pushing my buttons and I reacted, because I loved knocking him down a peg or two each time. He was smart, I was strong. But once I was out of the house, I barely gave him a thought. Kelly? Our relationship was good, or so I thought. And I know she loved me. Or at least she had. Sally? Never raised my voice. Not once. I never wanted her to feel afraid in my presence as I knew I was a big guy. Never intimidated her. We argued, sure, but it ended with agreement or at least agreement to continue discussing it. As for Katie, she'd walked all over me. I picked her up from school and her teacher had called me 'her gentle giant'. Her friends had adored me, loving to ride on my shoulders as I ran around. All the mothers had trusted me like I was a favourite uncle. I was propositioned more than once when at the playground...\n\nWish I'd taken up more than one of their offers now.\n\n\"Fuck,\" I muttered, knocking back a shot. I grabbed the photo frame of my daughter and I, relaxing back on the couch, just drinking from the bottle, clutching the picture to my chest. I buried everything down. I really tried. But I couldn't. Not when it came to my little one. I kissed the picture. \"I'll see you again, munchkin. One day, I'll find you and it'll be just daddy and daughter time.\"\n\nI knew that was a promise I probably couldn't keep. I didn't know what to do. This is real life, not the movies, not a novel. There isn't always an easy answer, and I'd done what I thought was best. Police. Private Investigator. Maybe use the internet or social media somehow.\n\nI finished the bottle before finally passing out.\n\nWaking with a horrific hangover the next morning, I grimaced at the empty bottle on the ground. I knew finding solace at the bottom of a bottle was one step on the road to full blown alcoholism, but I wasn't all that bothered. Placing the photo frame back on the oak mantelpiece, I wiped my eyes before having some toast with butter for breakfast with a very strong black coffee.\n\nStill felt woozy, so I walked to the homestead to find Ely out on the veranda, sweeping the never ending dust and dirt. She took one look at me and smiled. \"You look like hell, Mark.\"\n\n\"Feel it too. Bill need any help today?\"\n\n\"He's up at the third barn. He appreciates anyone pitching in a weekend.\"\n\nThe farm had a few methods of transportation. A couple of utes, tractors, a combine harvester for the crop season, and three off-road motorbikes. I had experience with those, remembering the days of hooning around with my friends on small trailbikes, running amok and skirting the edge of the law. So riding a motorbike came naturally, making sure I put on a helmet before taking off towards the barn.\n\nHe was hard at work fixing some of the wooden plans. He heard me coming, so it gave him a chance to take a break, wiping his forehead with his sleeve. Taking the hammer and nails from him, I got to work hammering away.\n\n\"Got some news for you, Mark?\"\n\n\"Yeah?\" I managed to reply, considering the nails in my mouth.\n\n\"My daughter should be here within the fortnight. We'd normally go get her from the airport, but she's decided to drive home this time, considering she'd coming back permanently this time.\"\n\n\"Think I've seen her picture about in the house.\"\n\n\"Her name's Catherine, though she prefers Cathy. Not sure if I've mentioned that.\"\n\nI shrugged as I wasn't either. \"Looking forward to it?\"\n\n\"Of course. House feels empty without my kids.\"\n\n\"Know that feeling,\" I muttered. Then I sighed. \"Shit...\"\n\n\"Don't worry about it, Mark. Plenty of time.\" He cleared his throat. \"Ely told me about... your questions... I don't know what happened, but I'm sorry. I'm not particularly smart, good with or reading emotions, but Ely's got it figured out. Or, I think she does.\" I sighed again. \"We're not going to push you, Mark. Trust me on that one.\"\n\n\"Trust... there's a belief I thought was dead,\" I muttered, \"Thanks, Bill. For not pushing.\"\n\n\"You're a good kid, Mark. Elly and I can see that. Part of us just wants to help at the same time.\"\n\nI stepped down from the ladder and gazed into the distance, heat haze on the horizon. Still wasn't summer but it was already warm. No doubt another hot summer. This part of the country, it was just heat. I could handle that. Summers in Sydney suck with the added humidity. \"I do like it out here, Bill. It's peaceful. Don't want to sound all zen, but I might be able to find my centre here, maybe a little inner peace with everything. That was sort of the hope anyway. It was either that or... well...\"\n\nI felt a hand on my shoulder. \"Inner peace sounds good, son,\" he said softly.\n\nWe finished up for the day and returned to the homestead. Offering me a beer, my stomach was still doing flips at times, but it would have been rude. Sitting on the veranda, I took a chair as Ely walked out with a glass of wine, joining her husband on the couch. The sun slowly started to set, the sky a beautiful mixture of red, orange, yellow, purple and blue. It was enough to bring a tear to the eye. I couldn't help but sigh contentedly.\n\n\"I won't say I'm happy,\" I finally said, \"I'm not sure I'm ever going to feel that emotion again. But I can say the decision to come out here was correct. It's not going to be easy. Far too much in here,\" I tapped a finger against my temple, \"But... I'll make one promise I know I can keep. I'll tell you everything when I'm ready.\"\n\n\"Whenever you are, Mark, we'll be ready too,\" Ely said.\n\n******\n\nCathy\n\nI had no problem singing along to the radio considering I was the only car on the road. It had been a hell of a drive from Brisbane, but I'd been smart enough to cut it into two, leaving mid-morning on the Saturday with a plan to arrive mid-afternoon. Entering the town of Longreach, I felt the smile form as I knew home was now only half an hour away, still singing along to the radio. Glad no-one was with me. I knew I couldn't sing to save my life. But it was a long car journey and it kept me entertained.\n\nThe farm was enormous, following the perimeter fence for at least twenty minutes before arriving at the entrance. The homestead hadn't changed, Dad's ute parked nearby. Driving by the homestead, I beeped the horn a couple of times before stopping, climbing out to be greeted by Mum running towards me. \"Cathy!\" she cried, practically leaping into me. My face was soon covered with kisses before I found myself in a great big daddy bear hug. He didn't have to say anything. I knew his body language after all these years. His gestures meant more than any words could say.\n\nAfter grabbing my things from the boot, we carried it inside and upstairs to my old room. It had changed over the years. Most of the posters had now disappeared. The walls had been painted more neutral colours. The furniture had improved over the years. Dumping my things on the bed, I looked around and felt the smile form, happy with life again. It was good to be home.\n\n\"Mum, going to have a shower first! I definitely need one!\"\n\n\"Everything is where you remember\" she called back.\n\nMum had insisted on a nice bathroom and definitely a good shower. Before stepping under the water, I took a look at herself in the mirror. Shoulder length brunette. Brown eyes. Slight freckling over my little nose. Full lips. I hadn't been blessed with a big bust, just like mother, nothing more than a B-cup. At least it meant guys didn't stare at my chest all the time. But I kept myself fit, a toned arse and good pair of legs.\n\nBut I was single for a reason. Very few men would be interested in joining me out at an isolated farm. Sure, I'd lost my virginity during my time at university, as pickings were rather slim during my years at school in Longreach, but apart from one steady boyfriend that lasted around six months, I spent most of my three years away from home alone.\n\nThe shower was invigorating after over twelve hours of driving over two days. New underwear always felt great, a clean pair of jeans, cami then a long sleeve flannel shirt over it, finally some clean socks and my boots. Heading downstairs, Dad whistled, Mum turning to laugh at him. \"Dinner will be at the usual time,\" she said.\n\n\"Good. I'm already starving. Haven't really eaten since breakfast,\" I explained, sitting opposite Dad. He was busy sipping at a beer, reading the paper. Probably the second or third time he'd read it during the day. \"Anything new here?\"\n\nI noticed the glance between Mum and Dad. The latter finally cleared his throat. \"Yeah, new guy working for us. Been here a few months now. Hard working. Polite. A good man.\"\n\nStarting to rise, I said, \"I should introduce myself. Is he on site? One of the cabins?\"\n\n\"Wait, sweetie,\" Mum said, sitting next to me, \"It's not that simple.\"\n\n\"What?\"\n\n\"He's... wounded,\" Mum replied, \"He's barely opened up to us. He gave away something the other week to Bill. Just a glimpse at what might have happened. He also asked me a couple of questions that suggest... I'm really not sure. But...\"\n\n\"But what? Is he okay?\"\n\n\"I think something happened with his family,\" Mum replied, \"And from what Bill heard, it might have also involved a child too. That's simply guess work, trying to piece together his life.\"\n\n\"Whatever it is, it led to him leaving Sydney to end up here. And I get the feeling he's got no-one else,\" Dad added.\n\n\"Why don't I grab him for dinner then?\"\n\n\"He prefers solitude,\" Dad replied, \"Although that's probably not all that healthy considering.\"\n\nI stood up. \"Then I'm going to introduce myself and invite him to dinner. I'll have to get to know him anyway as we'll be working together. I can tell you everything I've been up to at the same time.\" Mum and Dad shared another glance. \"Is he dangerous?\"\n\n\"To you? No, not a chance. Don't think he'd harm a fly. To himself?\" Dad shrugged.\n\n\"Which cabin, Dad?\"\n\n\"Number two,\" he replied with a sigh.\n\nGetting in my car, I followed the pathway towards the cabin. It had been empty for a couple of years after the last stockman had left to pursue other opportunities. Pulling up behind another ute, I got out and slowly walked to the door. The light was on inside, at least, so I knocked gently on the door.\n\nThe door was answered by a handsome young man. Would have put him a couple of years older than myself. Six foot something. Broad and he looked strong. But when I met his eyes, what should have been a pair of beautiful blue eyes, I felt a shiver down my spine. It wasn't from fear. It was... I'm not sure. But I'd never seen anything like them. No life in them whatsoever. It felt like he stared right through me, though he also saw me at the same time. I coughed nervously. \"Hello, I'm Cathy,\" I finally said, holding out a hand.\n\nHe looked at it a moment before grasping it. \"Mark,\" he said. The voice matched the eyes.\n\n\"I've just got home from university and we're having dinner. I was wondering if you'd like to join us?\"\n\nHe scratched his stubbled cheek, which in my eyes, only made him even more handsome. He glanced back into the cabin and sighed. But he surprised me when he said, \"Sure, give me a moment to put on some boots.\"\n\n\"I'll wait out here.\"\n\nHe nodded and I noticed that he shut the door. I guess he just wanted privacy. He appeared within a couple of minutes wearing a long sleeved flannel shirt and a pair of boots. Gesturing to my car, he slid into the passenger seat as I drove us back to the homestead. I glanced at him and he just stared out the window.\n\nI knew Mum and Dad were right. I'd seen similar things before. He was hurting. Big time.\n\nPulling up outside the homestead, I got out and led him inside, Mum having set the table. She smiled at me before looking at Mark, the smile not faltering though I noticed Mum's eyes. The flicker of sadness crossing them. I knew Mum well. She wore her heart on her sleeve. \"Thank you for coming, Mark.\"\n\n\"You're welcome. Celebrating Cathy coming home?\"\n\n\"Something like that. None of the other farmhands live here so it's usually just three or four of us, depending if her brother is here. Why don't you take a seat? Dinner will be ready soon. Bill?\"\n\n\"Yeah?\" he called from the kitchen.\n\n\"Get Cathy and Mark a beer, will you? Still drink beer, girlie? Or have you moved onto city fruity tooty drinks?\"\n\nI snorted and laughed. \"Fruity tooty? Where the hell did you learn that one?\"\n\n\"I've heard about all those cocktails they serve in city bars. What happened to simple beer, spirits and wine?\"\n\nI glanced at Mark, his face blank, though he nodded at my father when he appeared with a cold beer. \"Thanks, Bill.\"\n\n\"You're welcome, son.\"\n\nMy head jerked at the use of that word. Dad didn't look at me before he turned back to the kitchen. Sipping at the cold beer, I relaxed into the chair and looked at Mark. He picked at the label of the beer bottle, his mind obviously a million miles away. Or he wasn't thinking at all. I was left believing there was no middle ground.\n\n\"Are you enjoying life here, Mark?\" I finally asked. The silence wasn't uncomfortable, but I had a feeling he would have remained silent throughout the meal without being prompted.\n\n\"It's different,\" he replied without expanding.\n\n\"Different to Sydney?\"\n\n\"It's quiet here. I like the quiet.\"\n\n\"How did you end up here then?\"\n\n\"Left Sydney heading west. Eventually turned north. Couple of days driving, I ended up in Longreach. Seemed like a good place to stop. Then I was pointed here.\" He finally looked up, meeting my eyes. Still nothing at all in them. \"Your parents are good folk.\"\n\n\"They are.\"\n\nHe nodded before looking away again. The renewed silence was broken by Mum and Dad bringing in a couple of plates each. Roast chicken. Roast potatoes. Roast vegetables. Mum adding there would be dessert at the same time. I noticed Mark wait for everyone to serve themselves first before he loaded up his plate. He certainly had an appetite, practically wolfing down his meal, Mum laughing as he went back for seconds. \"It would only go to waste if not eaten,\" she said. Mark heard the humour, the slightest, tightest of grins appearing. Mum smiled at him before she glanced at me.\n\nI was asked about my time at university, going over what I'd learned and what I'd graduated with, I think more for his benefit than anyone else. I glanced at Mark from time to time, and though busy eating, he did seem to be listening, at least. I wasn't upset that my parents hadn't gone to my graduation. They ran a busy farm and a day off in the middle of the week simply wasn't possible. It wasn't a big deal anyway. It was more important that I came home and got to work.\n\n\"Still interested in some manual labour though?\" Dad asked.\n\n\"I'll get my hands dirty, Dad. You know I enjoy it.\"\n\n\"I'll ease you back into it. Need to get some muscles back on those arms.\"\n\n\"I kept fit at the gym.\"\n\nMum made a cheesecake. Glancing at Mark again, it was perhaps the first time anyone saw a flicker of emotion on his face. \"This is fantastic,\" he said. There was just a hint, the slightest hint, of something in his tone.\n\nI glanced at Mum to see her blinking rapidly. \"Thank you, Mark,\" she whispered.\n\nWe retired to the living room for a drink, Mum and Dad on the couch, Mark in a chair, while I took the one opposite. The three of us talked about life in general, Mark not really participating, but he seemed content enough to be in our company. But I already knew what Mum and Dad were talking about. We can all read people, one way or another. There was absolutely no joy in the young man sitting in that room with us. He was existing, not living. Going through the motions. I picked that up within a few hours. Mum and Dad had been living with it for months...\n\nHe eventually left, politely wishing us all goodnight. I offered to drive him back, but he declined, stating the night air would do him some good, and it wasn't a long walk. Once he disappeared, I rested my elbows on my knees. \"My god,\" I muttered, \"I don't think I've ever met anyone more broken in my life. His... aura...\"\n\n\"Don't pressure him,\" Mum said gently, \"I think if we do, he'll blow his top or clam up completely. He's ever so slowly opening up. I think he needs to. Whatever he's carrying on his soul, it's a burden that's... that has destroyed him. Once he's free of that burden, maybe life will return.\"\n\nI lay back in bed that night, wondering about the young man living with us on the farm. He could have lived in the house, but Mum and Dad figured an offer would be turned down. They admitted to worry about him being alone but they couldn't force him to live with them. They knew he drank as the evidence was in the bottles left in the recycling, but he always started on time, never complained and performed the job well.\n\nDad had him out around the farm that week, taking one of the utes with supplies to mend the perimeter fence where required. He'd taken camping supplies as he'd likely be gone a couple of days, at least. Mum had looked after the financials, which would be my primary responsibility, while I would also be looking to secure better deals for the farm, basically to get paid more for what we produce. Suppliers are constantly trying to squeeze us, so we push back as hard as we can.\n\nAt the end of a long week, Dad and I would always sit on the veranda to enjoy a drink before dinner. We'd barely seen Mark since he left, but I thought he might have just returned and headed back to his cabin. Walking there, his ute was parked up so I figured he'd returned. Knocking on the door, there was no response so I tried the doorknob. No surprise it was unlocked, poking my head in. \"Mark, are you here?\"",
        "Then I noticed all pictures. Opening the door, I walked in to see the pictures on each wall, the small pictures on the table, and then the one on the mantelpiece. Picking it up, it was him and a cute little blonde girl. I would have guessed she was five years old at the time and she was utterly adorable. His face was lit up with a grin. The life and joy in his eyes evident to see. The man in the photo was nothing like the man living with us now.\n\n\"What are you doing?\" a voice boomed.\n\nI whirled around to see Mark in the doorway. It was the first time I'd seen anything from him and he was... furious. My hand started to shake as I looked at the picture. \"Is this your daughter, Mark?\"\n\n\"What. Are. You. Doing?\" he growled, \"Why are you in my cabin? Why are you holding that picture?\" He strode slowly towards me before he stopped barely a pace away. He towered over me. Broad shoulders. His biceps flexed in his tight shirt. He held out his hand. My hand shook as I placed the frame in his hand. When he looked at the picture, his face softened immediately. His eyes shimmered. He ran his fingers down the glass front. What I didn't expect were the tears that fell down his cheeks before he kissed the picture, clutching it to his chest as he turned away from me.\n\nWithout thinking, I rested a hand on his shoulder. \"Mark...\"\n\nI was surprised he didn't shake me off. Instead, he just sagged. \"Sorry for yelling at you,\" he whispered, \"Please just go.\"\n\nI ran past him and out the door, all the way back home. But I now understood everything. Bounding inside, Mum appeared in the doorway to the kitchen. \"Cathy?\" I stopped and burst into tears. I barely knew the man at all but... seeing that change when he held the picture. Mum embraced me, holding me tightly. \"You went snooping, didn't you?\"\n\n\"I... didn't mean to. I was going to ask him for a drink with Dad and I.\" I sniffed. \"His door was unlocked, I thought he might have been taking a nap. That's when I saw all the...\"\n\nShe shushed me. \"I don't want to know. It must come from him.\"\n\n\"I ruined it, Mum.\"\n\nMum sighed. \"So leave him alone,\" she said softly, \"We can't force this. We're not psychiatrists, but he was making slow progress. We'll just have to wait a bit longer before that slight bit of trust is restored.\"\n\n\"I'm sorry.\"\n\n\"I think you need to apologise to him rather than me, Cathy. Go see him in the morning, invite him for breakfast.\"\n\n*****\n\nMark\n\nI woke up with a stonking hangover, clutching the photo frame, the empty bottle on the floor. I had vague memories of what happened the day before, but as I sat up, I had more important matters, like hailing the porcelain god. It was while doing that I remembered finding Cathy in my cabin. Wiping my mouth after washing it clean, I glanced into the mirror. \"Shit,\" I muttered, \"Shit, shit, fuck, shit.\"\n\nI had two choices. I'd either just pack my shit and go or... I finally tell someone what happened. I liked Bill and Ely. And, at heart, I could understand Cathy's curiosity. And I hadn't been blind. She was a pretty young woman. Probably scared the shit out of her the previous afternoon. It was just the shock of finding her in my cabin, holding that picture, then figuring it out rather easily. I'm sure my cabin looked like a shrine to my daughter. In a way, it was. She'd never be dead to me, but... I might be dead to her in return.\n\nThere was a light knock at the door that broke my reverie, opening it to see Cathy standing there. Her eyes widened as I realised I stood in nothing but my underwear. \"Um... er....\" I almost smiled at the way her tongue was tied. I could only assume that she approved of what she saw as her cheeks turned a glorious red, though she didn't look away. Guess that made me feel better. \"Mark, I'm sorry,\" she said, \"And do you want to come for breakfast?\"\n\n\"You're sorry?\"\n\n\"For invading your personal space. And asking questions I don't need to know the answers to. I shouldn't have entered. I'm sorry.\"\n\nI almost smiled at the how she seemed almost desperate to apologise. \"Give me five minutes. Okay?\"\n\nI noticed the slight smile. \"Okay.\"\n\nThrowing on some clothes, I stood in the living room and looked at the photo frame. Cathy had figured it out. I hadn't confirmed it, but it was obvious the photo was of myself and my daughter. Sighing again, I grabbed the photo, keeping it hidden at my back as I joined Cathy outside. We walked back to the farm in silence before I stopped her a short distance away.\n\n\"You don't need to apologise,\" I said.\n\n\"I do. I shouldn't...\"\n\nI held up a hand. \"I know your parents are curious. They've been patient with me. But I'm not sure how to tell everything.\" I met her eyes. \"Cathy, they destroyed my life. All of them.\"\n\nShe took my hand, giving it a squeeze. \"Will you feel better getting it all of your chest?\"\n\n\"I don't know. I'm embarrassed. I'm angry. I'm in... agony. I don't want to feel anything anymore. I just...\" I sighed. Admitting that I spent half of each day wanting to die probably wasn't a good idea. The fact the only thing that kept me going was somehow seeing my daughter again was keeping me alive.\n\nShe squeezed my hand again and led me to the farmstead. Ely was pleased to see me, giving me a hug. I'll admit, I'd grown to like receiving a hug from her. Couldn't remember the last time Cheryl, the woman who birthed me, had shown an ounce of affection to me. I could count on one hand how many times John had shown me anything. Shit, I think Kelly was the one who I was closest to, and she was the only thing I regretted from that day, if only slightly, was what I called her. She'd simply been in my firing line at the time.\n\nWe took a seat at the kitchen table, Ely serving up some bacon, sausages, eggs and hash browns. We ate in silence, washing it all down with coffee or tea, before I asked the three to meet me in the living room. As they disappeared, I took a few minutes to gather my thoughts before heading out to join them.\n\nSitting down in the spare chair, I took the photo frame from my back and looked at it. With a sigh, I turned it and offered it to Bill and Ely. She took it and, within seconds, I could see her tears. \"You do smile,\" she whispered.\n\n\"Katherine 'Katie' Sally Samuels was born... five years, nine months and twenty-three days ago. She is my daughter. The last time I saw her was the Sunday night before I headed north from Sydney. I worked as a civil engineer, focusing primarily on building or fixing roads. When I returned home on the Friday night, I walked into an empty house with no fianc\u00e9e, no daughter and a note from the fianc\u00e9e stating she'd left with my daughter and that I'd never find her. She insinuated that she'd been having an affair.\n\nBefore I continue, I guess I'll have to explain my background. The people I once called my parents are well to do. In fact, they're obscenely rich. Arrogant, pompous arseholes. Pardon my French.\"\n\n\"Swear all you want, son,\" Bill said.\n\nI managed a smirk. Probably the closest to a full blown grin in months. \"So, anyway, arseholes. John, the man who was my father, made his money as the partner at a law firm. Made big bikkies doing whatever the hell he did. Never cared. Cheryl, the women who pushed me out of her... er... Anyway, she's a doctor. Successful practice. Makes tonnes of money herself. So myself and the two so-called siblings grew up in luxury in the eastern suburbs of Sydney, surrounded by the sort of wankers who believe their shit doesn't stink.\n\nI'm sure John, if we lived in the UK, would no doubt hope for some sort of peerage, call himself Lord John Samuels. Arrogant wanker. Then there's my one-time brother, Brian. He's just a massive prick. Never liked him. That feeling was returned. The only person in that household growing up I could tolerate was my sister, Kelly. No, tolerate is wrong. I liked my sister. And despite everything, I think she liked me in return.\n\nI grew up surrounded by pretentious tossers my entire life. School? God, it was awful. Hated every minute of it. They tried to force me into activities that 'rich people' do. Me? Rugby league, all the way. My father threw a shit fit when I told him I wanted to play that. 'No son of mine will play a working man's game'. As I said, absolute tosser. Never supported me, but a friend of mine did help me out, so I still played.\n\nThat was just the start. Expectations was to get great grades then head to university to become a lawyer, a doctor, someone in finance that makes millions. I don't know, it never interested me. I've always been good with my hands. I excelled at the technical subjects at school. Working with tools. Wood. Metal. Technical drawing. Nailed them the entire way through. Took up a college course or two in addition to that. I knew I wanted to get into engineering, and you don't always need a university degree. Or, at least, you can do it part-time while working.\n\nAgain, John and Cheryl didn't approve of that at all. If I didn't do what they approved, they'd basically cut me off. So I left home at the first opportunity. Graduated high school, with good grades, and got myself a job. Started out at the very bottom, worked my arse off, but slowly made my way up the chain while studying.\n\nAt the same time, I met Sally. We met at a pub one night. Hit it off immediately. By the time I was 20, I owned our little apartment and Sally had given birth to Katie. Everything seemed rosy. We were making our way in life but it was on our terms. Always believed we were a team.\n\nJohn and Cheryl hated that. Slowly but surely, they wormed their way into our lives. I knew Sally was going to have her head turned but...\" I sighed and shook my head. \"Never to the extent of what happened.\"\n\nI took a couple of minutes to get further thoughts in order. I glanced to see Ely clutching the photo to her chest. \"She slowly started to change as I knew John and Cheryl were in her ear. Led to a few arguments, but in the end, I thought she loved me and that she could see we didn't need all the bling and bullshit. John and Cheryl? Hardly a happy marriage. Fairly sure Cheryl was and probably still is having an affair or affairs. Brian was already divorced. Kelly... who fucking knows, to be honest. New boyfriend every six months. It's why I called her what I did.\n\nSo, anyway, back to what I was saying. I get home to find an empty apartment, no daughter. After reading the letter, I didn't give a shit about Sally. I'd had an inkling she was doing me dirty, but I was working hard to support the family, so just put it down to a bit of unwarranted suspicion.\" I trailed off and shook my head. \"What I learned in the next few hours though...\"\n\nBill stood up and disappeared for a minute, returning with an open beer. I thanked him, sucking down at least half the bottle. Putting it down, I looked at my hands to see they were shaking. I curled them into fists and took a deep breath.\n\n\"I called some of my old friends. They were all told what she was doing. None of them had the guts to inform me what was going on. She didn't tell them I was abusive or threatening her. She was simply leaving with my daughter. I couldn't believe what I heard. Told them all to fuck off in the end. Some friends.\n\nI then went to see the family. I honestly still can't believe what I was told. John and Cheryl had introduced her to who she fled with a year earlier. A fucking year! Said I was an unfit provider, that this new fellow could provide Sally and Katie with the life they deserved. I knew what they meant. He was some rich cocksucker they'd met, and I just knew they did all this as some sort of sick payback for not following their whims.\n\nJohn never told me his name nor where they'd gone. By the time I was done with him, he was unconscious and I told the immediate family exactly what I thought of them. Haven't seen nor heard from them since. I did spend a night in the cells as the coppers were waiting for me at home. I was rather surprised that I wasn't charged. Would have happily spent some time in the slammer. I'd been waiting to clock that son of a bitch for years.\n\nAnyway, after that, I had to get out of Sydney. I had no partner. No daughter. No family. No friends. So I sold my apartment, sold anything that I didn't need, quit my job then hit the road as soon as I was able to. And that's how I ended up here.\"\n\nI finally looked up. Ely was in tears. Cathy was practically sobbing. Even Bill didn't have dry eyes. \"I'm still looking for her. Police have been pretty much useless. Call them every week to be told no news. I'm left thinking they just don't care or that I'm responsible for what happened. I hired a PI to at least do some digging for me, but so far, not a peep. He's not hopeful. I'm not either. But I won't give up. My daughter is out there somewhere. She was five years old at the time. She's old enough to remember me when she grows up. But I have no doubt that bitch is in her ear. 'Daddy didn't love you'. All that sort of manipulation. I know my little girl, though. She knew daddy loved her. Would always and will always love her. No matter the distance.\"\n\nI sipped at the beer.\n\n\"I spend each day going between two major thoughts. The first is that I just want to die and end the pain. What's the point in going on? I've lost absolutely everything, though the only thing that actually mattered was my daughter. For my own flesh and blood to rip that from me... Evil doesn't even really begin to describe it. The second is that there is always hope, no matter what. It's only that hope which stops me from topping myself.\"\n\n\"If you die, you'll never see her again,\" Cathy whispered.\n\n\"I'm hopeful but a realist, Cathy. The world is a big place. Where could they have gone? Anywhere, to be honest. I think it's a reasonable assumption they'd likely go to an English speaking country, but that still leaves a lot of the world to go.\"\n\nWe sat in silence for a few minutes. \"Your own parents,\" Bill finally muttered, shaking his head.\n\n\"Never fit their plans. Thing is, I was a good kid growing up. Mostly. Good grades. Rarely in trouble at school despite the fact I hated where they sent me. Showed my older brother who was boss a few times, but other than that, I did what I wanted and never expected much from them except the sort of parental support and guidance one would expect when pursuing their own dreams. But because I refused to go along with their plan.\" I chuckled bitterly. \"I know for a fact they never actually approved of Sally. So getting her out of my life is almost like a two for one deal. I won't say they doted on Katie but... It makes sense to me but it doesn't. I'm not really sure. Whatever the case, John and Cheryl mean nothing to me now. I consider myself a twenty-five-year-old orphan.\" I stood up and sighed. \"I need some air.\"\n\nI stood alone on the veranda and took in the view. Sun was already over the horizon. It was going to be another stinking hot day. Not a cloud in the sky. The insects were already chirping, but apart from that, there was near silence. I'd grown to enjoy it. Far different to the city where there was always something going on.\n\nFeeling a presence next to me, I glanced to see Cathy. She glanced at me in return and turned me to face her before she hugged me, resting her head against my chest. Guess she was five-five at best. And, as I already knew, rather cute. No, I can be honest, she was gorgeous. Figured she was twenty or twenty-one at most. I hugged her tightly in return, closing my eyes and just enjoying the feeling of being held again.\n\n\"Want to cry?\" she asked softly.\n\n\"I'm all cried out, Cathy. Now I'm just... empty. Can't even make myself angry. Sorry I yelled at you yesterday. It was just... I didn't feel ready to share...\"\n\n\"But this morning?\"\n\n\"You figured it out. I don't take you for a gossip, but I knew it would probably slip out. So I had to just bite the bullet.\"\n\n\"How do you feel?\"\n\n\"Like complete and utter shit. But... It's better than feeling nothing.\" I leaned back. \"So... what do you think?\"\n\n\"I know you have endless love for your daughter, and that's the only thing that matters. All those other people? Not worth your time.\" She took my hand in hers, giving it a squeeze. \"You now have us, Mark, if you're willing to stay a while longer.\"\n\n\"Just shared all of that. I'm not going to do that to then just piss off somewhere else. As I said, your parents are good folk. Remind me of the parents of some friends I had. Sort of parents that actually love and care for their kids instead of using them as some sort of fuck trophies.\" She giggled at that term. \"Actually, I should say thank you.\"\n\n\"For what?\"\n\n\"Wasn't the right way to do it, but it was the kick up the arse I needed. I've been wallowing in self-pity for months.\"\n\n\"Understandable considering the circumstances.\"\n\n\"I want nothing more than to see my daughter again. But... while I'll live in hope, and hope something does come up, there's that part of my brain that says not to forget her, but just somehow get on with life. So I'll live, I won't forget, but... I need to somehow pick up the pieces and just carry on.\"\n\nEly and Bill appeared. Ely also gave me a long hug. \"You're a good man, and I know you would have been a wonderful father,\" she whispered.\n\nThat got to me, and I released a few more tears. \"You've hugged me more since I arrived than a lifetime from...\" She shushed me and hugged me tighter. \"Thanks,\" I finally said.\n\nI'd carried that around for months. Finally getting it off my chest was liberating in one way. Bill, Ely and Cathy had only heard my side, but I like to think they believed me. Considering I'd been nothing more than a zombie since I arrived, it was obvious the kicking I'd taken. But I felt better. At least a little better, about life after that.\n\nThe next couple of weeks, I noticed a few differences in myself but also the others. While I wouldn't say I smiled, I felt lighter. Still couldn't bring myself to laugh. I couldn't remember the last time that sound escaped me. What I did notice was Cathy coming to collect me for breakfast every morning. I was looking at her in a new light. She seemed to give a shit about me for some reason. After everything I'd been through, I was finding it difficult to take her at face value. Ely greeted me every morning with a hug. The time I hugged her back and gently squeezed, she started to cry. When I asked why, she told me not to worry.\n\nBill and I sweltered in the summer heat. I'd missed shearing season, Bill explaining it only happened once a year, in the spring, but if I was up to it, I could give it a go the next season. So it was moving the cattle and sheep around from paddock to paddock and general maintenance. I'd find myself away from the farm from time to time, quite happy to camp away. Cathy had given me a few horseback lessons, and to be honest, I felt like a real cowboy as I headed a few kilometres away to assess the fences and general conditions.\n\n\"Mark, in all the time you've been here, have you gone out into town? Apart from shopping, that is?\" Cathy asked one Friday night over dinner. I shook my head. \"Would you like to join some friends and I at the RSL on Saturday?\"\n\nI met her eyes and the hopeful look in hers surprised me. \"I guess I've barely left the farm at all, to be honest. Sure, I'd love to.\"\n\n\"Good! It's a date!\" Ely burst into laughter as Cathy started to blush, looking away. I chuckled, which caught everyone by surprise. Cathy stared at me before I looked at her and smiled. Hurt my cheeks. Couldn't remember the last time I smiled.\n\nI was quickly hugged by mother and daughter. \"He smiles,\" Ely whispered.\n\n\"And laughs,\" Cathy added softly.\n\nI'll admit, I was feeling a little nervous the next afternoon. Missed plenty of nails hammering away, enough that Bill took the hammer from me and told me to bugger off back to my cabin, otherwise I'd end up hurting myself, him or both of us. \"Get ready for your date!\" he called out as I walked to my ute, before hearing him laugh away to himself.",
        "I showered first before looking over what to wear. Clean jeans and a nice short-sleeved shirt. I was under the impression Cathy liked stubble, so used an electric razor, keeping it nice and short. Bit of cologne, deodorant, boots and light jacket, as even in the middle of summer, the evenings could get chilly in this part of the world.\n\nWalking towards the homestead, Ely had me wait in the living room, Bill giving me a beer as I waited for Cathy. She didn't make me wait too long. She appeared at the bottom of the stairs in a gorgeous red summer dress, thin straps over her shoulders, tight to her petite body, stopping just above her knees, showing off her legs. Sensible shoes on her feet. She was well tanned from life on the farm. Only light make up though she'd done her hair.\n\nI stood there like a statue, which made her giggle. \"Ready, Mark?\"\n\n\"Um, yeah... yeah...\"\n\n\"You okay to drive us, Dad?\"\n\n\"And pick you up. Don't want you driving home after drinking. Call us whatever time.\"\n\n\"Thanks, Bill.\"\n\n\"Thanks, Dad.\"\n\nBill turned on the air-con as we got into his ute. It was only a single cab, so I sat on the left, Cathy in the middle, Bill on a separate seat behind the wheel. As we drove along, I felt Cathy leaning against me, glancing at her more than once. All she did was stare out the windscreen. I lifted my right arm, which resulted in her leaning in more. I glanced at Bill, who looked at me and nodded.\n\nThe RSL wasn't the largest I'd ever been in. I was quickly introduced to Cathy's friends, four couples. When asked who I was, before I could get a word out, she replied, \"Mark is my date for the evening.\"\n\nWe enjoyed a meal before heading to the bar. Food was pretty good for a country RSL. Simple food but it was cooked well and tasty. That's all that mattered. Offering to pay for Cathy earned me a smile, though when she left a soft kiss on my cheek, I'm fairly sure I blushed. Last time I'd felt soft lips on my cheek was... too long ago...\n\nIn the bar for drinks later, Cathy made sure her seat was alongside mine, lifting my arm so she could lean against me. I met the eyes of her friends and saw curiosity but also approval. I returned a slight shrug. She was an attractive young woman but also the daughter of my employer. I thought I was playing with fire. Add to that, I was still a broken man. What could she possibly see in me?\n\nConversation was flowing and then one of the guys told a long story of something that happened on his farm. It was a cracking yarn with a great punchline. I laughed. My god, I laughed. It was such a relief, I felt all eyes on me. And laughing opened the lid on everything else I'd kept down. Before I knew it, I felt Cathy's arms around me, stroking my back, her soft lips on my cheek again. No idea how long I wept in silence.\n\n\"Sorry,\" I murmured.\n\nShe shushed me. \"After everything you've gone through, it's got to come out eventually,\" she said softly.\n\nClearing my throat, I dried my eyes with a napkin before I looked around the table. \"Great first impression, right?\" That raised a few awkward smiles. \"Okay, let me get a round of drinks, then I think I need to explain the breakdown.\"\n\n\"Mark, you don't...\"\n\n\"It'll be cathartic, Cathy,\" I said, squeezing her hand, \"Plus I guess I do owe them an explanation why the six foot something, hundred-kilogram farmer is weeping like a baby.\"\n\nAfter buying and returning with a round of drinks, I took a seat next to Cathy. Taking out my wallet, I took a photo from it and handed it to Emily across from me. She looked at it and grinned. \"That's my daughter, Katie.\"\n\nAnd then I retold the same story I'd shared with Cathy and her parents, though in shorter format. Just the basics. Cathy held my hand the entire time, practically snuggling into me. I received a few questions about what happened, just to expand on certain details, before I was finally asked by Ben, \"So do you know where she is?\"\n\n\"No. Not a clue. The police were useless. No sign of her or my daughter. Can't tell me if they're in the country or not. They're of the opinion they're not, but I'm basically on my own. I think they just don't care. Part of me thinks they blame me for it. I called off the PI a couple of weeks ago. I was spending a lot of money for just no results. Not his fault at all as he had next to nothing to work with. He said he'd feedback anything he might receive from overseas, but it's a needle in a haystack, and I don't know enough about the law or anything like that. I don't know my options. I don't know if I have any. All I have left is hope.\"\n\nThankfully, my story didn't put a dampener on things, and when the RSL was getting ready to close up, we gave Bill a call to come pick us up. There were handshakes from the men, and all her female friends hugged me tightly, wishing me the best. We were the last left when Bill arrived.\n\nArriving back at the farm, he drove me all the way to my cabin. \"Thanks, Bill.\" Clearing my throat, I asked, \"Cathy, want a nightcap? I'll walk you home afterwards.\"\n\nShe kissed her father's cheek. \"Night, Dad,\" she said before sliding out of the cab.\n\n\"Have fun, kids,\" he said before reversing away. I scratched my head as I'm fairly sure he winked, though I'm not sure who at.\n\nOpening the cabin, I switched on the light, holding the door open for Cathy as she stepped in. I took her hand as she looked nervous. \"Invited this time,\" I whispered, giving it a squeeze, \"Come. I'll show you some photos.\"\n\nThey were a mix but those on show were most important to me. Every birthday, either hers or mine. First day a pre-school. First day a primary school. Never missed a big day. And I made sure to develop some of the photo's I'd kept on my phone. The fact I could recall the day, what we were doing, everything about each photo seemed to impress Cathy. \"She's my daughter,\" I said, \"I remember every little thing. Probably to the cost of other things. Five years of memories are locked away in here,\" I finished, tapping at my head. Then I needed to clear my throat. \"Er, drink...\"\n\nCathy didn't let go of my hand, instead turning me to face her. A smile started to form as I met her eyes. \"You are rather handsome, Mark. Glad you kept the stubble.\"\n\nI sighed. \"Cathy...\"\n\nShe hugged me tightly. \"I'm here because I want to be, Mark. Isn't that what matters?\"\n\n\"I just... I just don't know anymore...\"\n\nShe lifted her head, resting her chin on my chest. \"All I know is that the next woman you love, if you love her even half as much as you love your daughter, that she is going to be the most loved woman in the land.\" Raising a hand to my chest, she continued. \"All I know is that... you are a good man, Mark. Everyone could see how much you love your daughter. You work hard on the farm every day. It's backbreaking work, but you never complain. You're more thoughtful than you give yourself credit for.\"\n\nI kissed her. To hell with it, I liked the woman, found her attractive, and if...\n\nAll thoughts ended when she kissed me back, wrapping my arms around her, pulling her tight to me. She smelled wonderful, mixture of perfume, shampoo, natural scent. Her body felt delicate against mine. When we finally leaned back, I whispered, \"Stay the night. Just to sleep. Can get you one of my shirts.\"\n\n\"I wasn't planning on leaving until tomorrow morning, one way or the other, Mark.\"\n\nI chuckled, hugging her tightly towards me. \"I wasn't planning on letting you leave until then either,\" I admitted to her giggle.\n\nI found a large shirt she could wear, watching her disappear into the small bathroom, while I quickly stripped to my underwear and slid under the blankets. She appeared after a couple of minutes, having washed her face. The shirt was just long enough to cover her arse, but showed off her toned legs. She was gorgeous. Her eyes sparkled in the low light of the lamp as she joined me in bed, immediately spooning back against me.\n\nShe giggled. \"Happy to see me, Mark?\"\n\n\"I am now.\"\n\nShe noticed the picture on the side table. \"How old is she there?\"\n\n\"Four,\" I said, wrapping an arm around her waist, pulling her tighter, feeling her head nestle under my chin. \"Last thing I see before going to sleep, first thing I see when I wake up in the morning.\" I swallowed before needing to admit. \"It's a reminder that I don't want to die today.\"\n\nShe gently took the picture and held it up for me. \"Kiss her goodnight, Mark.\" I did so before Cathy did the same thing. \"Goodnight, Katie. Daddy still loves you,\" she whispered, before placing the picture back where it was.\n\nCathy needed to turn around to hug me for a few minutes. She was far too good a woman for me. Why the hell was she in bed with someone who had just admitted to wanting to die nearly every day? \"Mark, listen to me,\" she whispered, \"You have plenty to live for. You have my Mum and Dad. They love you to bits. I can see it. And you have me. I'm not going anywhere. And all I want to do is take the gentle giant in this bed, hold him in my arms, and protect him like I'd know he'd do the same for me, and his daughter.\"\n\nI kissed her deeply, feeling her leg lift up onto my waist as I pulled her close. Her tongue gently played with mine, exploring my mouth, mine then doing the same in return. I felt her warmth behind the thin fabric of her panties. I was harder than I'd been in... months. Leaning back again, I was a little speechless. She smiled and said, \"About damn time you kissed me like that. I've seen how you look at me, Mark.\"\n\n\"It's awkward.\"\n\n\"Dad adores you, Mark. And Mum just flat out loves you.\"\n\n\"Better parents than mine,\" I whispered.\n\n\"So we'll be your family,\" she whispered back. \"Or at least... parents-in-law.\"\n\n\"And you?\" I asked, meeting her eyes.\n\n\"Girlfriend,\" she said simply. She stroked my cheek. \"I can see a little life in them, Mark. In those blue eyes. I've been waiting to see it. Slowly, I know it will be slow, I'm going to see the same man I've seen in those photos. Maybe he'll look at me the same way one day soon?\"\n\nShe cuddled into me as I leaned across to switch off the lamp. Gently holding her against me, she barely moved a muscle before I felt her breathing change and she was asleep.\n\nI felt a broad grin form on my face in the darkness. The laughing. The smiling. But also the tears. The anger. The pain of everything. I was allowing myself to feel again. That conversation with her parents meant I couldn't hide anymore. I had to face everything. And that meant I could admit something else.\n\nI was falling in love with her already. She was attractive. Smart. Good sense of humour. And seemed to like me in return. In fact, I think her feelings were deeper than just liking me. I wasn't quite ready for that yet. But I liked her. And I trusted her. And she accepted me, many faults and all.\n\nNo idea how long until I fell asleep, but I woke up the next morning feeling soft fingers running down my cheek, opening my eyes to see her smiling at me. I kissed her immediately and there was no holding back that morning. The shirt she was wearing disappeared rather quickly, no surprise she hadn't worn a bra, her panties and my underwear joining the shirt on the floor.\n\nJust as I was about to move down her body, she sat up and pulled me back up. \"Mark, I only want one thing this morning.\" She looked down and grinned. \"And seeing that big thing between your legs, I have a feeling your body is of the same mind. Trust me,\" she reached down and returned her fingers, glistening in the morning light, \"I'm already wet.\"\n\nI groaned as I gently slid my cock inside her, watching her face light up as I was soon buried, our groins touching. Then we made love. It was wonderful. I thought I'd felt a connection with Sally. Cathy was something else entirely. I barely took my eyes away from hers, only looking down to see my cock disappear inside her, patch of dark hair above her pussy.\n\n\"You feel wonderful,\" I murmured.\n\n\"Mark, I've been waiting for this since the first week I came home.\"\n\nI stopped a moment. \"You have?\"\n\n\"Instant physical attraction.\"\n\n\"I thought you were bloody gorgeous in return.\"\n\n\"I should hope so!\"\n\nI lasted longer than I thought I would, but when I did finally orgasm, it was like Vesuvius after a long, dormant period. Groaned so loudly, Cathy had to cover my mouth though she understood it had been a while for me. As it had been a while for her too, I pulled out and used my fingers to get her off. She couldn't stop kissing me as I gently fondled her clit, making these adorable little noises before she enjoyed an orgasm.\n\n\"Months for me too,\" she admitted.\n\n\"Shower?\" I asked.\n\n\"Then breakfast. Prepare yourself for either questions or teasing.\"\n\nWe walked hand in hand towards back towards the farmstead. Ely and Bill were already at the breakfast table. They took one look at us and shared what I'd called a knowing glance. After plates were placed in front of us, Ely sat down, Bill clearing his throat. \"Move in, Mark,\" he said.\n\n\"Huh?\"\n\n\"We're not blind, and we don't want to make either of you uncomfortable. But it's obvious you like each other. We understand you want your privacy but... Aren't you tired of being alone?\"\n\nI looked at Cathy, who met my eyes and smiled. When I returned the smile, she took my hand and squeezed it. I enjoyed her soft hand holding mine in return. \"Yeah, guess I am,\" I said softly.\n\n\"Cathy?\" her mother asked.\n\n\"I'm tired of sleeping alone. Would be nice to have a big teddy bear with me.\"\n\nI looked at her parents. \"Sure you're okay with this?\"\n\nEly laughed to herself first. \"Mark, you're twenty-five, correct?\" I nodded. \"My daughter is twenty-one. You're adults. More importantly, you make my daughter happy. If making her happy is you living under this roof, then good. More importantly, we also want you here with us.\"\n\nI glanced at Bill first, who grinned, before looking back at Ely. \"Wish my parents...\"\n\nShe leaned across and kissed my cheek. \"Let me mother you then,\" she whispered, \"Been doing it since you arrived. Now we can just admit it and I can continue to show you the love... I want to give you.\"\n\n\"I'll move my things after breakfast.\"\n\nPacking up my cabin barely took half an hour. I made sure I took everything. Moving my things into Cathy's room, her room wasn't as full of junk as I expected, but as there was a spare room, her brother's old room, it was suggested I put my clothes in there so at least there was space. As for my photo's, Cathy took the one of my daughter and I that had sat on the mantelpiece in the cabin, stating it would go downstairs. Once the box was nearly empty, I asked her to meet me downstairs with her parents. Before she left, I said one thing.\n\n\"I'm going to upset you. But you also already know.\"\n\nI took the bag out of my backpack, untying it to reveal the pistol. I'd learned how to take it apart and put it back together. It was a rather simple thing. Very few moving parts. Once I'd done that, I took a deep breath and headed downstairs. The three were waiting at the dining table, Cathy looking nervous, the parents curious. I took each piece out of the bag. It was easy to figure out what it was. They said nothing, simply waiting for me to explain.\n\n\"I left Sydney because my life there was over. I came all this way to die. I bought this illegally. You'll probably want me out of the house now, but I have to confess this. I came here to die.\"\n\nCathy took my right hand; Ely took my left hand. \"The first couple of months were the worst. I had two thoughts in my head. I want to die. But I want to see my daughter again. Every evening once back in that cabin, I'd sit on the couch with three things on the table. A picture of my daughter. A bottle of liquor. And the pistol. I could probably put this together blindfolded now. I didn't want it to jam when I swallowed a bullet. Chewed on the barrel more times than I'd care to admit in that first month. Only thing that got me through it was... If I die, my daughter has no daddy. The only thought that got me through it.\"\n\nI looked up, Cathy releasing my hand briefly so I could wipe my cheeks. \"Then after a couple of months here, there were three thoughts. I still want to die. I still want to see my daughter. But I don't want Ely or Bill to find my body with the back of my head blown off. I can't do it to them. They've accepted me into their family, treated me like one of their own. Bill is the father I wish I had growing up. Ely is the mother I wish I had, who has hugged me more in the short time I've known her than Cheryl ever did. Killing myself and leaving them to find me would be unfair on them.\"\n\nI moved my eyes so I looked at Cathy. \"Then you came home, Cathy. And after barely a couple of weeks knowing you, there were now four thoughts, and the third one is what pushed away the will to die completely. I don't want to die anymore. I want to see my daughter. I want to stay here with Ely and Bill. And I want to see if Cathy would... like to spend her life with me once she got to know the real me, not the shell of a man she met when she first got here. When I had that thought, I took the gun apart and hid it a final time. But I couldn't leave it there. I had to be honest with you three.\"\n\n\"I knew what you might have had planned, son. Told Ely that the day you arrived. I'm not angry, nor is Ely. We didn't know what you were going through, but it was obvious that it was something horrible. You gave enough suggestions that it was unbearable grief. What you told us that night simply confirmed what we thought.\"\n\nCathy stood up, gesturing for me to move my seat back, immediately sitting sideways on my lap before kissing me. Once she settled down, the final confession I had to give resting her head against my chest, I met Bill's eyes. \"Please bury this somewhere I can't find it, Bill. I don't want it anymore. I don't want to die anymore. Everything I need is here. I have you two, and I hope I have Cathy.\"\n\n\"You do,\" she whispered.\n\n\"Then there is only one thing missing. We know what that is. I'm a patient man. It will happen one day. I won't give up, but with no news...\" I sighed. \"I'm just not sure I have any other options.\"\n\n\"I'll have one of the others take it away and bury it deep.\"\n\n\"Thank you. And I'm sorry.\"\n\n\"Not necessary,\" Ely said, \"What you just told us was a brave thing, Mark. You could have just hidden it and said nothing. To admit something like that...\"\n\n\"Took guts, son. Thank you for showing us that level of trust.\"\n\n\"I thought I'd never trust anyone again after what happened. Coming here was the best decision I could have made. Thank you, because you three saved me. Not just for me, but for my daughter.\"\n\n\"All I can ask is you look after mine in return, Mark.\"\n\n\"I'll spend my life doing it, Bill.\"\n\nCathy met my eyes and smiled. \"Sounds serious, Mark.\"\n\n\"I am, because I love you.\"\n\nThe smile that lit up her face made her as beautiful as I could imagine. \"I love you.\"\n\nWe kissed, and it was long enough that, by the time we broke apart, her parents had disappeared. She led me upstairs, closing the door behind her, leading back towards the bed, making sure I was on my back before she straddled my lap. Leaning down, she cuddled into my chest, wrapping my arms around her, giving her the occasional gentle squeeze. I sighed, feeling content.\n\n\"I feel... good...\" I took another deep breath. \"Admitting that felt good. I knew the possible consequences, but once you kissed me, it felt like that last bit of weight left me. The one last feeling I have is hope, Cathy. I hope to see her again.\"\n\n\"You will, Mark. Somehow, some way, you'll find each other.\"\n\n*****\n\nFive years later...\n\nCathy\n\nMark never checked his social media. The only reason he'd kept it around was for... well, he told me that he had faint hope that his daughter would one day find him through there. I knew everything about him now, of course. He was my husband; I was his wife. There were no secrets between us. He still had his bad days, but I didn't blame him, nor did our parents. After everything that happened, there were still wounds on his soul that would always remain for the rest of his life. All I'd done, since the day I'd confessed my love for him, and his for me, and doubled down on since the celebrant announced us as husband and wife, was that I would love and cherish him till death do us part.",
        "We still worked the farm together. Mark was happy working alongside my father and the others. He thoroughly enjoyed shearing season, as he made plenty of cash going around to all the farms to help get the little buggers sheared. He generally disappeared for a month, though he called me every single night. Sometimes just to talk. Sometimes just to hear my voice. Occasionally so I could talk dirty to him.\n\nHe also spoke to our two-year-old son. I reckon I would have fallen pregnant within the first year if not for the pill. Once he rediscovered that fire, that spirit he no doubt had before, he was... something else entirely. And when life returned to those blue eyes, and I saw him look at me the same way, I loved him even more. And wanted him all the time. When we were not at work, we were at it like rabbits. Thankfully, our parents never caught us though... they knew. Always had that look in their eyes, though with my rosy cheeks and Mark looking content with life, I guess it was obvious.\n\nAs I thought of that, I caressed my belly. We already knew we were having a daughter. He almost fell apart when we were told. He felt guilty about being excited that he was having another daughter. I told him our daughter wasn't a replacement. Katie was still out there, still his daughter. Through it all, he never lost hope. Nothing had ever come of his search. He hoped for a miracle but still hadn't given up.\n\nMum and Dad doted on their grandson. Bill and Mark were now... more than family. Mark called him Dad. Ely was Mum. When he called her that the first time, she must have hugged him for half an hour. They both cried, Mum sobbing when he said he loved her more than he'd ever loved his own. We knew he had no love left for anyone there.\n\nExcept one. Maybe just one. I didn't push the matter, at least not at first, but I'd been dropping hints since the birth of our son. Mark stayed quiet. He was more thoughtful than he gave himself credit for. He always thought before opening his mouth. And I knew he didn't want to upset me either.\n\nMark wasn't interested in social media, as I said. But I kept an eye on it for him because, he would admit, that was perhaps the avenue Katie would one day get in touch with him. But every week since he'd disappeared, his sister had left a message for him. And I knew it was genuine as it was a different one, each and every time. I could feel the sorrow that came through the words on the screen. And she always ended it by saying how much she loved and missed him, and hoped that one day, he would reach out to contact her.\n\nAs for the rest of the family, not a word. They were not on any of his lists. Other friends left the occasional message, wondering where he was, if he was even still alive. He asked me not to put anything on the site except he was alive. Not where he lived. Not that he was married. He didn't even have his new name on there. On the website, he was still 'Mark Samuels', a name I knew he despised nowadays.\n\nKelly had left another message just the day before. I clicked on her profile again. She was quite a pretty young thing, only a couple of years older than me. No kids, from what I could see. Didn't look like her parents were on the site. Her brother was, but I wouldn't dare open that can of worms. Mark said he had no brother, and he had new parents. I remembered what he said being a twenty-five-year-old orphan. My heart had broken for him hearing that, the fact he had felt so alone.\n\nI wouldn't contact her without letting Mark know. He knew Kelly left messages. He said little to that. He was never rude to me. Man didn't have a bad bone in his body. But I also knew he felt guilt about what he'd said all those years ago now. His sister had just been in the firing line as he let rip on everyone. He admitted, at least a year after we were official, that the only regret he had leaving was what he'd called his sister. It was in the heat of the moment, designed to hurt.\n\nOver dinner that night, I waited until we were finished before I turned to him. He was now thirty years old, still built like a brick shithouse, hair a little longer, tanned more than ever from working in the sun, and those blue eyes now sparkled more than ever. When he looked at me at times, I'll be honest, just a simple glance had my panties rather wet.\n\n\"Mark, can we discuss something.\"\n\n\"Sure.\"\n\n\"It's about....\"\n\nI took a deep breath. When he noticed my hand was shaking, he gently took it in his hand. \"Sweetheart, I hate it when you get nervous around me,\" he said softly.\n\nI'd seen Mark angry, of course. Nothing wrong with emotions, positive or negative. It's how you deal with them that's the problem sometimes. Angry at me, though? The only time was when he found me in the cabin. Work pissed him off from time to time, but we realised coming home to a happy wife put the grin straight back on his face. I only got nervous from time to time because of the subject matter, whenever it came to something from his past. It was still the only thing that could possibly make him blow his top. But he'd never shout, yell, curse in front of me. He'd politely excuse himself, go outside for a few minutes. I'd watch him from the window. He's simply stroll around, kick at the dirt, loosening himself up and relaxing. He'd see me watching and smile.\n\nHe was my gentle giant.\n\n\"It's about your sister. Kelly.\" I watched his face for any sort of reaction. He kept his face blank. He was good at that. \"She's still leaving a message every week. Five years now. Every single week, a new message.\" I took another deep breath. \"I think I should get in touch on your behalf.\"\n\nI looked at Mum and Dad, watching Mark in return. He slowly stood up. \"Please excuse me for a moment,\" he said softly.\n\n\"Mark?\" I asked.\n\nHe leaned down and kissed me. \"I'm not angry, sweetheart. I'm past anger. Well past it. I just want to think about it. Just give me a few minutes.\"\n\n\"Okay.\"\n\n\"I love you.\"\n\n\"I love you.\"\n\nHe never left the room without saying he loves me. Once he was out the back door, Mum glanced at me, keeping her opinion to herself but she knew this could be opening up old wounds, or even be dangerous to him. But I was left thinking things had changed, at least with Kelly. And maybe it would be a chance for them to talk and perhaps even find out what happened.\n\nHe returned with a bottle of beer for himself and Dad, a bottle of wine already open for Mum and I. Resuming his seat, he took a swig of beer, staring off into the distance for another couple of minutes. None of us pushed him for a response. Then... he nodded. \"Okay, send her a brief message. Let her know who you are. Ask what she wants.\"\n\n\"I'll start a conversation with her once I see her online. Anything you want to know?\"\n\n\"Not particularly. But if she's serious, then I can only suggest a face to face. Not here. Not Sydney. No way in hell I'm going back there.\"\n\n\"Brisbane?\"\n\n\"Works for me. But that's later. First, see how serious she is. You're a good judge of character. I... I just can't do it myself.\"\n\n\"Is it okay if I get in touch soon?\"\n\n\"Like a Band-Aid. Nice and quick.\"\n\nI waited until the next evening to see if she would appear online. When the little symbol turned green. I opened up a chat window and stared to type.\n\nMarkS: Hello, Kelly.\n\nKelSam: Mark! Oh my god, I never thought...\n\nM: It's not Mark, Kelly. This is Catherine, Cathy. I'm his wife.\n\nK: Mark's married? Oh... Hello, Cathy. So I can only assume you know who I am then?\n\nM: I know you're his sister. Mark doesn't really do social media, but he left this page so people could contact him. I've watched and let him now every so often how often you message him. He finally agreed to make contact as he's wondering why you keep messaging. He assumes he made his feelings clear.\n\nHe'd gone into minute detail about exactly what happened that day at the house, what he'd said, what he'd done, what was said to him in return. He admitted, the more time passed, the regret about what he said to his sister did bother him. He still had no feelings at all about the others, but had hinted that maybe, one day, he'd contact his sister.\n\nM: Before I continue, Kelly, I must know one thing. It will be the thing that will result in this continuing or not. So you need to be honest. How much did you know about what happened?\n\nK: Honestly, not a lot. But there's a caveat to that. I could never tell him because my parents threatened to completely cut me off if I did. But, please, I wanted to tell him. I never approved of what happened. And after he disappeared, things fell apart. I hate my parents for what they did to him. I always loved him the most.\n\nM: Do you know where his daughter is?\n\nK: If I did, it would definitely have gone on his wall, Cathy. But they never told me all the details and I've never been able to really figure it out since.\n\nI sat back and it sounded sincere, but the written word is different to hearing the tone of a voice. But what she was saying matched what she'd been leaving on his wall for the past five years.\n\nM: Kelly, I've got to be honest. What your family did, what his friends did, it destroyed him as a man, a father, a human being. He was damned near suicidal for months. The only thing that got him through it was the hope of seeing his daughter, my parents, and then me.\n\nK: Suicidal?\n\nShe added a crying emoji. In fact, all different sorts of crying emoji's. I could certainly understand the impact hearing that.\n\nM: Yes, that's what everyone there drove him to. So while I'm sitting here wanting to believe you, I need to really be convinced of your sorrow but also your love. So we need to talk. I need to hear it in your voice. Mark won't want to talk yet. Not a chance. Getting him to agree to me messaging you was a big deal.\n\nK: But he did agree! So that means there's a chance, right?\n\nM: There is a chance but my parents and I fiercely protect him. He's been through enough as it is. What I'm going to do is leave my phone number here. Please call me tomorrow night. As I said, Mark won't want to talk yet but I'm willing to listen, offer an olive branch. Convince me, and I'll ask my husband if he's willing to talk.\n\nK: I'm glad he's found happiness, Cathy. Thank you for looking after him. And loving him.\n\nM: Your brother is a good man, and he loves me just as much in return. Here's my number - ********** - Please call around 7pm and we'll have a chat about things.\n\nK: Of course I'll call. I really want to hear his voice again. And seeing him... I've thought about it for five years. But thank you, Cathy, for giving me a chance. I've just put the number in my phone. I'll call tomorrow night. I'll log off now, otherwise I'm just going to ask endless questions. One thing though. Please tell him I still love him. I miss my brother.\n\nM: I'll let him know, Kelly. Speak to you tomorrow.\n\nIn bed that night, Mark was happily lying back while I was riding his lovely thick cock. He definitely enjoyed it when I was pregnant as my usual B-cup breasts got larger. Not to say he didn't love my petite body. His pet name for me was usually 'sweetheart, 'sweet petite' or, if he was in a particular mood, 'sweetie petitiee'. My husband could be rather silly at times, but once he'd come out of his shell, he proved to have a daft but sweet sense of humour.\n\nFor me, he would always be 'gentle giant', simply 'gg', or 'honeybun'. The first time I called him 'honey' while making love, he damn near froze up on me. I knew why without him having to say a word. I recovered quickly and whispered 'Fuck me, honeybun' into his ear. It eased the tension as he laughed before he carried on making love to his fianc\u00e9e.\n\nBut he loved running hands over my curves as I carried our children. Definitely focused attention on my breasts. Missionary was already difficult. I'd loved riding him from the first time, particularly as I enjoyed some rather powerful orgasms. The further along the pregnancy, doggy style was the best. That just gave him a chance to fuck me nice and hard while grabbing my larger breasts at the same time. Considering I was beyond horny half the time, we certainly made plenty of noise.\n\nOnce we'd both enjoyed an orgasm, I spooned back against him as always, his hand on my belly, my hand resting on his. \"Your sister is going to call me tomorrow night,\" I said.\n\n\"No worries,\" he said, sounding rather relaxed. Best time to mention anything like this is after he'd cum in me. He's much more agreeable. He knew, of course. After a blowjob and swallowed? I could ask for a diamond ring and he'd probably agree. Though I'd blow him and swallow just to see him smile down at me. I'm still absolutely smitten by my husband.\n\nI could see it was on his mind at breakfast the next morning. Parents knew it too but they didn't ask. Before he left with my father, he kissed me, said that he loved me, and assured me all was okay. He wouldn't listen in, but he'd be interested to hear about it afterwards. Whatever I said, he'd believe and we'd go from there.\n\nI'll admit to some nerves the closer the time approached. I hoped I wasn't opening Pandora's box. Mark admitted he was as happy as he could reminder despite the fact someone was still missing, but he'd parked that fact in his mind somewhere else. He focused on the here and now, and hoped for the future. Nothing could be done about the past now.\n\nAt 7pm on the dot, my phone rang. I didn't recognise the number but I knew who it would be. Answering the call, I wasn't surprised to hear a nervous hello. When she heard my voice in return, she started to cry. In that moment, I felt sympathy for her because I just had a feeling she wasn't lying. She loved her brother. Missed her brother. And felt guilty about what happened. I waited for her to calm down before asking some general questions about life, letting her just get used to talking to me before I got down to business.\n\n\"Tell me about that day, Kelly. The day he came to the house.\"\n\nI heard her take a deep breath. \"I'd never seen Mark so angry before. The fury in his eyes as he walked into the backyard to face down my parents.\"\n\n\"My parents? Interesting term.\"\n\n\"Oh, they are no longer his, Cathy. I know he would feel nothing for them now. And his picture is no longer in the house. Dad still regrets not going through with his threat to charge him. But... well, the threat that lingered. Mark scared the shit out of him. You know about that?\"\n\n\"I do. Mark is a gentle man, but there seems to be one or two people that rile him so he just explodes.\"\n\nShe cleared her throat. \"We all knew about it, Cathy. He was a regular visitor. His name was Tony. Never learned his last name. Sally and him were having an affair from pretty much the moment they met. Parents organised it all. And because Mark had little to do with my parents, generally staying at home with Katie while Sally visited, he simply didn't have a clue. Whenever Mark did come along, Tony was a visitor but was wise enough to keep his distance.\n\nAnyway, the day in question. Mark came strolling in but he was like a coiled spring. And when Dad confirmed what happened, Mark just lost it. Dropped Dad with a cracking hook. I'll be honest, it wasn't a surprise. I think Mark had been looking to smack around his old man for years by then. The only reason Mum didn't get a slap is that he'd never raise a hand in the direction of a woman. I knew he'd have decked Brian if given the chance, but my oldest brother is a pussy. Add to that, Mark had smacked him around often enough that Brian was just scared of him.\n\nBut it all came out that night. Mark saw the family for what they are. And... he called me a worthless whore...\"\n\n\"He regrets that, Kelly. Hand on heart, he does.\"\n\n\"But I deserved it. I was involved. Unwillingly, but I was involved. I never told him, too worried about being cut off, having everything handed to me in my life taken away. I had my part to play in watching my brother's life destroyed by vindictive parents, a cruel fianc\u00e9e, and a horrible man that she took off with. I never would have believed she'd take Katie, but I knew my parents never really approved of Sally. This was their way of getting rid of her, they never really bothered with Katie, and then it was almost like... I don't know, getting even with Mark for doing what he wanted with his life.\"\n\n\"Jesus, your parents sound horrible, Kelly.\"\n\n\"I hate them now,\" she whispered, \"They drove him away. And I helped...\"\n\nKelly started to weep again. I gave her a few minutes to calm down. \"What happened afterwards?\"\n\n\"Word slowly but surely got out about what happened. Took a while, but I helped with that, to ease a guilty conscience. Spread rumours about what they did to my brother. Once it was noticed that Mark had just plain disappeared, people put two and two together. No Mark. No Sally. No Katie. Dad barely held onto his job once his firm heard about what they did. Mum's practice is teetering on bankruptcy as all her old patients refused to be treated by a woman who'd treat her son like that. Brian's gone through three divorces now. We make sure each wife hears the truth about the sort of man they are with.\"\n\n\"And you, Kelly? How are you?\"\n\n\"I've lived with the guilt for five years, Cathy. Every day, I wish I could go back and warn him what was going on. But I was too selfish, too self-involved. We had been close when growing up. I knew what he thought but I felt he never judged me, accepted me for who I was. But when he glared at me with such hate in his eyes and called me a worthless whore. I didn't hate him for it. I should have done, but after what he'd just heard, I never blamed him. I looked at myself in the mirror and hated my reflection. Slowly but surely, I pulled away from the family.\"\n\n\"When did you last see them?\"\n\n\"I haven't seen my parents in two years. I haven't seen Brian in longer than that. Dad's parents actually fucking approved of what they did! Haven't seen them since that evening. Mum's parents? Different story... at least when they were alive.\"\n\n\"They're dead?\"\n\n\"They watched from a distance as their family was torn apart. I doubt Mark would know they both passed within a year of each other, three years ago now. Nanna always hoped she'd see him one last time, but always understood why he just left. All they wanted to know is that he was happy.\"\n\n\"He's happy, Kelly. I make sure of that, as do his children, whether born or not.\"\n\n\"You're... pregnant?\" she whispered.\n\n\"Six months. We have a two-year-old son, and expect a daughter.\" She started to cry again. I couldn't blame her. She'd missed out on a lot of his life. \"Kelly,\" I said softly, \"This is going to take time. I'm not sure Mark will want to talk over the phone. He's already said, if he were to ever agree, it would be face to face.\"\n\n\"Where are you living?\"\n\n\"He doesn't want that information divulged. But obviously not in Sydney. He hasn't been back since the day he left.\"\n\n\"I get the occasional message from old friends, asking if I've heard from him. I always say no.\"\n\n\"Keep saying that. He wants nothing to do with them.\"\n\n\"I heard his closest friends were all aware. Let's just say the guys he used to play rugby league with got wind of what happened to him and the betrayal. Fists might have been thrown on a night out more than once. They just want to know he's safe and sound.\""
    ],
    "authorname": "UltimateSin",
    "tags": [
        "romance",
        "outback",
        "farm"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/outback-2"
}