{
    "title": "Confirming Carter Bk. 02 Daedalus Ch. 07",
    "pages": [
        "Caldwell leads the Atlantian fleet on mission against the Wraith, with devastating results. The Atlantian's get an unexpected visit from the Traveler's, and Tammy takes on a new role...\n\n(-)\n\nConfirming Carter Book Two Daedalus\n\nChapter Seven\n\nInterior-Living Room\n\n0645 Hours\n\nCaldwell came out of the elevator and went into the kitchen, finding it empty. He went back down the hall, and found Tammy lying on the living room floor with Geraan, showing him a math game on a tablet.\n\n\"Is the colonel up?\" He asked, looking around and nodding at Ronin.\n\n\"She should be out in a minute.\" Tammy said. \"Our little friend here was up at six. Sleep wasn't an option after that.\" She smiled up at him. \"Congratulations, Steven. You did well yesterday, both in what you accomplished, and your restraint.\"\n\n\"Thank you.\" He said, looking toward the door of the bedroom as Carter came out, buttoning her vest.\n\n\"Good morning, Steven.\" She smiled. \"I didn't think I'd see you till later.\" She said as she came over and sat on the couch.\n\n\"I didn't want to wait till our meeting. I have...\"\n\n\"Ronin, would you take Geraan and get him something to eat please?\" She said as she held up her hand, silencing him. \n\nRonin nodded, scooping the boy up and holding him at arms length as he squirmed and kicked at him. They were both laughing as they went into the kitchen.\n\n\"What's on your mind, Steven? You look...out with it. What's wrong?\" She asked.\n\nTammy came over and sat next to her, and Caldwell looked at her, then back at Carter.\n\n\"What you say to me, is if you said it to both of us. So speak your mind, Steven.\" She said, glancing over at Tammy.\n\nCaldwell nodded, then dropped to one knee, bowing his head in front of them.\n\n\"Steven...\"\n\n\"I come to ask a boon, my queens.\"\n\n\"What do you wish, Steven? We will grant whatever is in our power.\"\n\nTammy gripped her hand, and shook her head when Sam looked at her. Caldwell still had his head bowed, and Tammy held up her hand, the back to Sam, wiggling her ring finger, then tapped her fingers on her wrist. \n\n\"What is this boon, Steven?\" She asked again. \"It must be of great importance for you to hold your tongue so long.\"\n\n\"I wish to marry, my queens. But I cannot, without your permission...and your blessing.\" He said, looking up at her.\n\n\"We give our blessing freely, Steven, but cannot give our permission. We do not yet have the right.\" She said, looking him in the eye.\n\nCaldwell sagged slightly, then drew himself up. \"I understand. I had hoped...but other affairs must be attended to.\" He started to rise, but stopped when she kept looking at him.\n\n\"We think it will be a good union. And will allow it at the first opportunity. You have our word.\" She said as she took his hand. \"Aside from our own affairs, we must seek the permission of the Athosians, and see that a proper dowry is offered. Our Lord of the Admiralty is not someone to be passed off lightly, neither is a lady of her station. These things cannot be rushed into.\"\n\n\"I...\"\n\n\"The ambassador knows these things. Does she know that you are here?\" Carter asked.\n\n\"I told her that I would speak with you.\" He said. \"I didn't wake her before I left.\"\n\n\"Have you asked for her hand?\" Tammy asked.\n\n\"No, my lady. I was told that I must have the queen's consent.\"\n\n\"I'm sorry to pry, Steven. But I must know how this idea got into your head. For the sake of the realm, not my own curiosity.\"\n\n\"I decided the night I surrendered my ship, at the party.\" He told her. \"But last night, Teyla welcomed me home. She said that wives and mistresses welcomed warriors home, but that she was only a lover.\"\n\n\"And then?\"\n\n\"I told her that it would not befit a woman of her position to be anyone's mistress. And she told me that I would need your permission to marry. That my office may require me to marry for political purposes.\"\n\n\"Thank you, Steven. Rise.\" Carter said as she stood up. \"I'll see you at the meeting. In the meantime, would you tell the ambassador that I would like to speak to her as soon as she can drag her ass out of your bed?\" She spun on her heel and went into her bedroom.\n\nCaldwell stared after her. Tammy took his arm and led him to the elevator. \"Tell Teyla that she should get here soon.\"\n\nInterior-Office\n\n0730 Hours\n\n\"What the hell were you thinking Teyla?\" Carter shouted as Teyla came in the door. Tammy closed it behind her, and took a seat, motioning for her to sit next to her. \"Do you have any idea what you've done by putting these ideas in his head? You couldn't have waited a few weeks, let us get settled? You knew I was going to give him to you! Why, Teyla? Why would you do this to us?\"\n\n\"I meant no harm, Samantha.\" Teyla said. \"I welcomed him home, as you consented to. I wished only to...\"\n\n\"I gave you my consent to sleep with him, to reward him for his deeds, not position yourself as his wife!\" Carter said, standing over her, glaring down at her angrily. \"I had to say no, Teyla! He was here less than an hour ago, asking my permission to marry, and I had to say no!\"\n\nTeyla and Tammy watched as she paced angrily back and forth in front of her desk. \n\n\"You're going to help me fix this, Teyla. I'm not leaving that man hanging, and letting this get to him. We can't let this turn him against us, either of us. It's always the little slights that cause the most harm.\" She said as she turned to face her. \"I need him on top of his game, and now I can't send him out to do something we both want, and know needs to be done, because his mind isn't going to be where it belongs!\"\n\n\"Steven will do as he is asked. You know this Samantha.\" Teyla said, looking up at her. \"He will do this thing for you. And for me.\"\n\n\"But his heart won't be in it, Teyla.\" Carter said softly as she dropped to her knees in front of her. \"He'll be thinking that we have something, someone, else in mind, and it may poison him towards us. He knew nothing of how things...\"\n\nShe laid her head on Teyla's knees, shaking it slowly. \"I know you didn't mean to do this, Teyla. You spoke to him with your heart. I can't fault you for that.\" She looked up at her. \"But we may have damaged him, and we have to find a way to fix that. Do you understand what I'm saying.\"\n\n\"I will talk to him, and explain...\"\n\n\"No, we need to talk to him. Together.\" Carter said. \"I need to apologize, I said something nasty before he left, and that was uncalled for. Then we'll tell him what we're going to do.\"\n\n\"What are you going to do if he says he doesn't like our plans?\" Tammy asked.\n\n\"What else can I do? I'm going to fire him, give him his ship back, and wish him luck as a pirate.\"\n\n\"Samantha! You would not do such a thing!\" Teyla said, gripping her arms and shaking her. \"Do not say that, even in jest! He is an honorable man, and will do the right thing!\"\n\nCarter looked down at her hand gripping her arm, and Teyla released her. \"Is that what you want Teyla, for him to do the right thing? Or do you want him because he loves you. And he does love you. I hurt him when I said no, and it tore my heart out to have to do it.\"\n\n\"I wish for him to do both, but I desire his love more.\" Teyla smiled.\n\n\"Then call him. And hope that we can save it.\"\n\n* * * * *\n\nCaldwell came in a few minutes later, and stood quietly, waiting for her to speak.\n\n\"Steven, I want to tell you that I'm sorry.\" Carter said as she stepped in front of him. \"What I said as I left the room earlier was uncalled for, and rude. I had no right to say that about my friend, and the woman you love. I hope that you can forgive me.\"\n\n\"I understood, colonel. I didn't realize what was involved, or at stake.\" Caldwell said, looking her in the eye. \"I thought I could ask, have you say yes, and have you marry us after the coron...\"\n\n\"You were going to wait? This isn't something you were going to want to do quickly?\" She asked.\n\n\"No, of course not.\" He said, looking back and forth between Carter and Teyla. \"I still need to meet Teyla's people, and you're right, I need their consent too. But I couldn't think of any one else that I'd want to marry us, a loyal member of the court and a trusted friend being joined? That just screams for the queen herself to perform the ceremony.\"\n\n\"And just when were you going to spring that on me?\" Carter laughed. She looked at Teyla. \"Did you know anything about this?\"\n\n\"I had no idea.\" Teyla said, looking at him in wonder. \"He continues to surprise me. Much to my delight.\"\n\n\"Would one of you tell me what's going on please?\" Caldwell said. \"I'm starting to get nervous, because there's something else going on that I don't know about.\"\n\n\"No, if you're happy waiting till after the coronation, it would be my pleasure to marry you.\" Carter said, taking his hands. \"Teyla told me of your feelings for her, not that I didn't see them, and hers for you. You just took me by surprise this morning, and I handled it badly.\"\n\n\"It didn't seem that way to me.\" Caldwell said. \"You gave me your blessing, and explained why you couldn't give your consent, and when I thought about it, it made perfect sense.\" He looked at her, his eyes narrowing. \"You thought I would take it as a slight, and let it fester. That's why we're all here now.\"\n\n\"Yes, I wanted you both to know that I want you to be together, and hope you share a long happy life. But this is not the right time and I...\"\n\n\"May I, Samantha?\" Teyla said as she stood up and took his hand. \"I misspoke when we were speaking of wives and mistresses, and when you said would speak to her, I was so filled with joy, I never thought of the consequences, and how they may affect you. Samantha was correct in what she said to me, her only thought was that we not cause you harm. I am glad to hear that you, at least, have given this thought. We must speak of plans, together, so we do not stumble like this again.\"\n\nHe nodded\n\n\"Well?\" Tammy said, looking up at him.\n\n\"Excuse me?\" Caldwell asked.\n\n\"Are you going to ask her or not?\" Tammy said with a grin.\n\n\"Don't you think they might want some privacy for that?\" Sam said, trying not to smile.\n\n\"He has not said the words, which I do not need.\" Teyla said. \"He speaks his love in other ways, that are much more meaningful and satisfying. And I accept eagerly, everytime he asks.\"\n\nTammy opened her mouth, then closed it when Sam arched an eyebrow and shook her head. \n\nCaldwell colored slightly, and nodded to her. \"Will you?\" He said simply\n\n\"Yes.\" Teyla smiled. \"Provided of course, that my family approves of you.\"\n\nInterior-Conference Room, North Tower\n\n0930 Hours\n\n\"Before we begin, I'd like to make an announcement.\" Carter said, looking over at Caldwell. \n\nHe nodded, looking down at his tablet.\n\n\"Our Lord Caldwell is betrothed, He has asked for Ambassador Emmagan's hand, and she has graciously said yes.\" She told them. \"I have given my blessing and consent to their union, and will perform the ceremony after our coronation.\" She got to her feet, looking down the table at him. \"Well done, Steven. May you have many joyful years together.\"\n\nSheppard, O'Neill, Bra'tac and Samuels, got to their feet, applauding politely, and Caldwell blushed, waving them to their seats.\n\n\"Now. Steven, if you would tell us what you saw, and your thoughts. We've reviewed the data, but I want to hear what you have to say.\"\n\n\"I've never seen anything like it. We counted forty-one hives, and stopped counting the cruisers after we hit a two hundred. That's over a third of the hives that we know about. We had two close calls, when darts almost collided with us.\" Caldwell grinned \n\n\"You're sure you weren't detected?\" O'Neill asked. \n\n\"One of those darts went by so close to the bridge windows, I could see the Wraith inside it. He had no idea we were there.\" Caldwell told him. \"We sat on top of the Primary's hive, and scanned the length of it twice, at low power, and they didn't give any indication that they knew anything was going on. We scanned more than half those hives, mostly on the perimeter, and they went on like business as usual.\"\n\n\"There's alot of traffic between those ships. Half the hives had cruisers docked, and shuttles were leaving alot of them every few minutes.\" He said, bringing up a video on the monitors around the room.\n\n\"Jezzus, you flew through that?\" Sheppard said softly as he stared at the ever shifting cluster of ships.\n\n\"Half a dozen times.\" He turned to Carter. \"I'd like to promote Marks. He's early, but the man is a genius at the helm.\"\n\n\"You haven't told me what your structure is going to be yet.\" Carter said. \"So I think we should wait on promoting anyone until we know what kind of system we're going to use. How would you feel about a knighthood? Much more prestigious, and it gives us some other options.\"\n\nCaldwell nodded. \"John and I haven't talked about it, but I'm in favor of keeping the current system in place across all branches. And I think he'd make a good knight of the realm. I'm just not sure he'd accept it. He's doesn't take praise easily, or lightly. Does a place in the court come with the title, or are there other duties? I don't know much about royalty.\"\n\n\"We can have something ready in case he declines. We're not adding to the court right now, not below the command level, so we'll assign other duties as the need arises, but for now, his place is at the helm of the Daedalus. We still have to crew up the Apollo, I'd like your backup helmsman for that.\" \n\nShe looked up at O'Neill. \"Feeling lively, Jack? Do you think you'd like to command the Apollo, in addition to your duties as an advisor?\"\n\nO'Neill shook his head. \"No, I will if I have to, but this is a younger man's game now. I think Lorne is the best choice to put in that chair. He has command experience, he's smart, and he's loyal.\"\n\n\"I agree.\" Caldwell said. \"He took a damaged ancient ship, still under repair, into battle. When they couldn't get the weapons systems up, he set it on a collision course for a hive, and beamed off at the last minute.\"\n\n\"I don't like giving him up.\" Sheppard said. \"But he is the best choice. He'll take good care of the Apollo.\"\n\n\"I agree too.\" Carter said. She looked down the table at Samuels. \"Andi, your thoughts?\"\n\n\"He's the best man for the job, and we owe him.\" Samuels said. \"Let him take some of his people with him, so he'll still be in his comfort zone.\"\n\nShe looked around the table. \"John should tell him, with you there Sam. That way he'll know that he has the support of both of you. We can transition him over to the navy gradually, so we don't rattle him.\"\n\n\"That makes sense.\" Carter said. \"But are you okay, Andi? You've been quiet today.\"\n\n\"I'm not used to sitting on a war council, and I feel out of place.\" Samuels said. \"I can tell you about the people, but I can't guide you in this. I lack the skills you need.\" \n\n\"I understand, we have experienced people here to advise on the military matters, but I'd still like you to sit in. You may have an insight like what you said about Lorne. I need what you have to say about dealing with people.\"\n\nShe turned to Caldwell. \"What would you do, based on what you saw in that cluster? Can we drop nukes on some those hives, and be able to get to a safe distance before they go off?\"\n\nCaldwell brought up a graphic on the monitors. \"This is a basic hive ship, we made up this composite based on the scans we took. Most of them are laid out roughly the same.\" He highlighted an area on the picture. \"These look like holds, and the same spaces are on every ship. They're not living areas, or sleep cells, and there is almost no movement in these spaces. That's where we drop our nukes.\"\n\nShe turned to Sheppard. \"How many have we got on hand, John? Are we going to be able to cover all that?\"\n\n\"We'll only need twenty or so colonel.\" Caldwell said, bringing up another graphic. \"With the way they're sitting, we space our nukes out, every third ship around the perimeter, one in the middle, on the Primary's hive, and a few in this inner ring. With the secondary's we'll get off the cruisers, that whole thing is going to go up like a supernova.\"\n\n\"We've seen what happens when a hive ship goes up, it takes everything close with it.\" Sheppard said. \"Most of these are sitting less than a hundred miles apart, so I think Steven is right. We're not just going to get secondary's off the cruisers, but off the nearby hives as well. We've got close to eighty nukes on hand, so I think we should send forty nukes, and go every second ship. We spend a little, to get alot.\"\n\n\"That makes sense.\" O'Neill said. \"It won't be a deathblow, but it will knock the wind out of them for a long time, and give the people of this galaxy time to regroup, and get ready to fight back when the next round of cullings comes.\"\n\n\"My concern is that these Wraith will know who has done this, even if you are unseen committing the act.\" Bra'tac said as he looked at the images on the monitor. \"They will respond in kind, attacking Atlantis with the full might of the forces they have remaining.\"\n\n\"All the better.\" Carter told him. \"This city has shields for the three outer piers, and a main shield that covers the whole city that can be used independently, or together. It also has a stardrive, and a chair weapons platform. And six fully charged ZPM's. Anchorage has the same. With Anchorage up and running, I have no qualms about taking the fight to them with Atlantis. We're not going to just defend anymore.\" \n\nShe looked down the table at Samuels. \"Do you have a drone count, Andi?\"\n\nSamuels opened a file on her tablet, and brought up a chart on the monitor. \"We're fully stocked with drones, and we're shipping what we're making now to Anchorage to bring it's stores up. They're at a little over forty percent capacity right now. We need another week to get them maxed out.\"\n\n\"So we're better armed and equipped than anyone in Pegasus has been since the Ancients first went to war with the Wraith.\" Carter told them. \"I'm not interested in committing genocide, but the Wraith are a threat to everyone in this galaxy, and if I can't eliminate them, then culling them for a change is just as good.\"\n\nShe looked at Sheppard. \"We'll talk to Lorne when we're done here. I want minimum crews on both ships, we don't want to send people who aren't needed, and put them at risk.\"\n\n\"When do you want us to go?\" Caldwell asked, typing on his tablet.\n\n\"You're going to have to tell me that.\" Carter answered. \"Get the Apollo crewed, and both ships loaded. Take twenty-five nukes each. Use what you have to, but make them count. I want a realistic estimate of when you think you can go. I won't be disappointed if it's not today. Apollo's crew will need to be briefed on the mission, so take your time, and do it right. Review your final plan with me when you think you're ready.\"\n\n\"Apollo is crewed, and they've been doing shakedowns with the cloaking systems. We just need to put Lorne, his people and the helmsman on her, and they can go.\" Sheppard said.\n\n\"Like I said, tell me when you're ready, but keep it realistic.\" Carter said. \"Let's go talk to Lorne. We'll do it in the conference room in the Central Tower, unless you think your office would be better.\"\n\nInterior-Col. Carter's Office, Central Tower\n\n1100 Hours\n\n\"Come in Evan.\" Carter said, holding out her hand as he stepped into her office. \"It's good to see you. I hope we're not keeping you too busy?\"\n\n\"No ma'am, we're getting things together, and the different units are starting to mesh.\" He smiled. \"It's taking the military longer to adjust to having civilians on their teams, but they're all learning from each other. To be honest, I wasn't sure it was going to work, but we're seeing good results.\"\n\n\"Good, have a seat, we'd like to talk to you.\" She said as she sat down.\n\n\"Evan, we'd like you to take command of the Apollo.\" Sheppard said as he leaned against the desk. \"Col. Carter, Gen. O'Neill, and Col. Caldwell all agree that you're the best man for the job. We're prepping her for a mission, and need you to take command immediately.\"",
        "\"Jezzus, you're not even gonna butter him up first? Just wham! Here's a job, do it?\" Carter laughed. She looked at Lorne. \"Is he always this abrupt?\"\n\n\"No ma'am, I think the colonel might be a little nervous with you here.\" Lorne laughed. \"But I can step up. I think Gen. O'Neill would be a better choice though, given his experience.\"\n\n\"Gen. O'Neill suggested you, Evan.\" Sheppard told him. \"I'm not happy about giving you up, but it's what's best for the city, so I'm not going to stand in your way. This is going to be a good move for you, and Col. Carter and I both know you can handle it.\"\n\n\"Col. Caldwell did a recon mission on a gathering of Wraith hives yesterday, and we're going to hit them, Evan.\" Carter told him. \"He'll brief you in a little while, but I want to tell you the same thing I've told him. If you can't get it done without risking your ship, get out. If you're detected, get out. Under no circumstances are you to engage any Wraith ships other than to deliver your payload. Is that clearly understood?\"\n\n\"Yes, ma'am. This is a step up for me. The last ship I commanded barely had anything working on it. I'm not going to risk the Apollo before I get to know her.\" Lorne said. \"Can I ask what the payload is?\"\n\n\"You're going to be delivering nukes. Caldwell with explain what you'll need to do. We've already got you a helmsman, but you can pick two officers to take with you. I want to leave the current XO in place, he already knows the ship, and can help you get situated.\"\n\n\"I'm sorry, but I have to go.\" She said to Lorne. She looked over at Sheppard. \"Status me as you need to John, and let me know when Caldwell and Lorne say they're ready. Good luck.\"\n\nInterior-Gym\n\n1130 Hours\n\nShe got off the elevator and went into the kitchen. No one was there, so she made herself something to drink, and went back down the hall into the living room. The marine standing next to the porter saw her and came to attention.\n\n\"Lady Tammy, Ronin and the boy are in the gym, ma'am.\" He said.\n\n\"Thank you.\" She smiled, and went back through the kitchen and up the stairs to the gym. \n\nTammy was naked, lying across a float, holding Geraan in her arms as he flailed his arms and legs in the water, turning them in circles.\n\n\"Slow down, Geraan, save your strength, smooth steady strokes. You were doing it before.\" Tammy was saying. She looked up and saw Sam standing by the side of the pool. She dropped Geraan, then grabbed him as he bobbed to the surface, sputtering.\n\n\"Give us a minute.\" Tammy said as she kicked her feet and came over to the side.\n\nShe lifted him, and Sam leaned down and took him, sitting him on his feet. Tammy rolled off the side of the float and came out a moment later, sitting on the side of the pool.\n\n\"Where's Ronin?\" Carter asked. \"The marine downstairs said he was up here with you.\"\n\nTammy jerked her thumb back over her shoulder. \"Sparring with Amelia. They were going through a group of candidates for the house guard. They found three they both liked.\"\n\n\"Good, I was going to ask him about that. What were you two doing?\"\n\n\"Swimming lessons. Our little warrior didn't know how to swim.\" She laughed. \"We're correcting that.\"\n\n\"What do you expect? He's only five, for god's sake.\" Carter laughed.\n\n\"That's no excuse. He lives on a water planet now. Time for him to learn.\" Tammy said, then looked over her shoulder at him. \"Geraan, show the queen what you learned today.\"\n\nGeraan stepped up to the side of the pool and bent over at the waist, his arms back at his sides. He looked over at her, and Tammy said, \"Go!\"\n\nHe launched powerfully from the side of the pool, belly flopping into the water. He dog paddled quickly across, stopped at the far wall, pushed off, and dog paddled back.\n\nTammy hauled him out of the water, and held him in her lap. \"Good job.\" She said quietly, and he beamed as he looked up at Sam.\n\n\"Very good, Geraan.\" Sam smiled. \"You just learned that today?\"\n\nHe nodded, and Tammy hugged him to her. \"He sank like a stone the first time I threw him in. Didn't you my little warrior?\" She laughed. \"Now he can keep his head above water. I'm going to take him to the mainland in a few weeks and teach him how to surf.\"\n\n\"If you can find the time, it's okay with me. Master Bra'tac may have something to say.\" Carter said. \"How are you feeling today? Any problems?\"\n\n\"No, I haven't spazzed out once. Jenn poked and prodded me for an hour. And Bra'tac just left. He doesn't swim either, but he had a good time hanging on the side of the wall watching us. I hope I look as good as he does when I hit one forty.\"\n\n\"Have you eaten? I'm starved.\" Carter said. \"Has Andi done anything on that staff she was talking about?\"\n\nTammy nodded. \"They're set up downstairs. Just hit RS on the comm, and tell them what you want. I already ordered dinner for nineteen hundred. Fried chicken with the fixin's. That okay with you?\"\n\n\"That sounds great. Will you talk to her about getting someone to screen who comes in here?\" Carter asked. \"I keep missing meals because people just walk in whenever they feel like it.\"\n\n\"We already talked about that. She was there when Jenn was going over me.\" Tammy told her. She looked down at Geraan. \"Are you hungry little man? You've been working hard this morning.\" She hugged him, making him giggle as he squirmed in her arms. \"I'm so proud of you!\"\n\nHe stood up as she released him, nodding as he looked at her. \"Cheebugga.\"\n\n\"He had cereal at seven, bacon and eggs with hashbrowns at nine, and a bacon cheeseburger with fries at a little after ten.\" She said as she got to her feet. \"But a bacon cheeseburger does sound good.\" She looked over at Carter.\n\n\"I was thinking a salad, maybe some pasta...\" Carter said.\n\n\"Excellent! Three bacon cheeseburgers with fries, coming up. I'll call it in.\" She pushed Geraan ahead of her. \"Hold onto the rail junior, just like we showed you.\"\n\nInterior-Kitchen\n\n1230 Hours\n\n\"Geraan.\" Tammy said, turning his head toward her. \"Chew your food, like this.\" She took a small bite and chewed slowly. \"Now you.\"\n\nGeraan crammed his sandwich into his mouth, and Tammy grabbed his hand, pulling it out. She tore a small piece off of hers and put it in his mouth, then worked his jaw, setting the pace for him as he chewed.\n\n\"Try again.\" She said, holding onto his wrist.\n\nHe took a smaller bite, and chewed, his face lighting up with a big smile.\n\n\"It's a lot better when you take the time to taste it, isn't it?\" She laughed.\n\nGeraan nodded, and took another, bigger bite, but chewed it slowly before he swallowed.\n\n\"You're going to make a great mom.\" Sam said as she watched them.\n\n\"We both will. We're going to keep the nannies to a minimum. I want to raise them as much as we can ourselves.\"\n\n\"I like that idea. After my mom died, I saw a succession of babysitters, maiden aunts, and nannies. I hated it.\" Sam said. \"I want our kids to know us, and be real people. Or as real as they can be.\"\n\n\"Oh, I had Jenn test Geraan while we were down there. He has the gene, so I asked Bra'tac if we could give him the treatment. He thought it was a great idea, so we did it. It took, so I hit him with the teacher too, just basic Ancient. I found some kids games in the database, math, science, stuff like that. I'm gonna start him on them.\"\n\n\"What did Bra'tac think about that?\"\n\n\"He said that a warrior's mind must be developed along with his body.\" Tammy smiled. \"He suggested that I find something for O'Neill while I was at it. Something about young minds needing new ideas.\"\n\n\"O'Neill is half his age, less in fa...damn.\" She said as she reached in her pocket and pulled out her comm.\"\n\n\"Carter.\" She said as she put the headset on. She listened for a moment. \"I think you're rushing it, but I'll listen to what you have to say. Let's meet in thirty minutes, and you can review your plans.\"\n\nShe tapped the comm off and put it back in her pocket. \"Sheppard. He says they're ready to go.\" She shook her head. \"I don't want them running off, and not being ready when they get there.\"\n\n\"You're being a mother hen.\" Tammy said. \"They know what they're doing, and they're not going to risk those ships if they don't have too. If Caldwell says he's ready, that means his fleet is ready. Trust him...them.\"\n\n\"I know, I just can't help it. All I can do is listen to what they have to say.\"\n\nInterior-Conference Room, North Tower\n\n1330 Hours\n\nCaldwell waited while everyone took their seats. Carter sat at the head of the table, with Teyla and Tammy flanking her. Geraan was sitting on Tammy's lap, playing a game on a tablet. Bra'tac looked at him, and Tammy smiled as she leaned down and whispered to Geraan. He shook his head, and continued playing his game.\n\nLorne sat next to Caldwell, while Sheppard, O'Neill and Bra'tac sat at the far end of the table.\n\n\"Major?\" Caldwell said, and Lorne brought up a graphic on the monitors. Caldwell highlighted an area on the star chart. \"This is the location of the Wraith gathering. We will drop out of hyperspace here, thirty minutes out. That's inside their sensor range, but there will only be one window, and we'll be well away before they can get anything there. We'll be cloaked when we come out anyway, so even if they have someone sitting there, it should just look like an anomaly.\"\n\nLorne enlarged the image showing the area inside the zone they would be jumping into.\n\n\"We'll separate, taking an arcing course toward the cluster. Actual travel time is going to be close to an hour, based on the path we'll take.\" Lines appeared on the chart indicating their routes, then the image changed again, this time showing the cluster as they had last seen it. \"We'll take up positions at six and twelve o'clock, then move counter clockwise around the perimeter. Package placement will be at commander's discretion, based on density of the ships in the area.\"\n\n\"Once we have the perimeter covered, we'll move into the inner ring, and proceed in the same fashion. Daedalus will move in to drop the package for the Primary's hive, since we've already been there, while Apollo withdraws to the three o'clock side of the cluster, ready to jump if anything goes wrong.\"\n\nHe looked around the room. \"Questions so far?\" He asked.\n\n\"Why do you want to come in so close? Why not take your time, and come out of hyperspace where you dropped out yesterday?\" O'Neill asked, looking back through the charts on his laptop.\n\n\"We don't want to use the same jump point twice, in case they did notice us, and with all the traffic in there, coming in close reduces our chances of being noticed.\" Caldwell said. \"Four hives dropped in yesterday while we were there, at about the same distance, none came in closer. If they do notice, they should just think it's one of theirs coming in.\"\n\n\"It sounds like you've thought this through, Steven.\" Carter said. \"Now give me the downside.\"\n\n\"The downside is we get in there, everything is shielded, and we have to back off and try again later.\" He said calmly. \"In that scenario, we regroup, wait six hours, then go back in for another look. We're prepared to repeat that up to three times. After twenty-four hours, we call no joy, and come home.\"\n\n\"Worst case scenario, one of us is detected, at which point, we break radio silence, call no joy, and Apollo jumps out immediately. Daedalus remote detonates any packages we have in place already, and jumps in another direction. We regroup, wait six hours, and Daedalus goes back in for BDA.\"\n\n\"What's your window in the drop zone?\" Tammy asked, pointing at Geraan's tablet, showing him a question he had missed.\n\n\"Timers on the nukes will be set for sixty minutes. We start moving away no later than fifty minutes, five minutes at full sublight, five at military thrust. That should take us well out of the blast zone.\" Caldwell said, bringing up a graphic showing their exit routes. \"We should have all the nukes set within thirty minutes, so we back off to at least ten minutes out, and Daedalus remote detonates the packages.\"\n\n\"You say you will put these weapons into the holds of these ships.\" Bra'tac said slowly. \"Yesterday you spoke of cruisers docked with these hives, and transports moving between them, which indicates that they are moving materials.\"\n\nCaldwell nodded, then glanced at Carter. \"We took the liberty of beaming some materials out of the holds of several of the hives yesterday. Our nukes will be camouflaged as their own goods when we beam them in.\"\n\n\"For crissake, Caldwell, you could have mentioned that yesterday.\" O'Neill said. \"Of all the bo...\"\n\n\"Good thinking, Steven.\" Carter said. \"A little more risk than I would have preferred, but it's done, and it reduces the chances of someone stumbling across our nukes.\"\n\n\"Yes ma'am, it was a last minute decision. Marks wanted to see if they'd notice us beaming our nukes in, and the best way to test that was to beam something out.\" Caldwell told her. \"We took containers from four of them, and sat waiting on each for a reaction. There was none, so they're not scanning within the cluster. They feel safe in there.\"\n\n\"Jack? Go or no go?\" Carter asked.\n\n\"Go.\"\n\n\"Bra'tac?\"\n\nBra'tac nodded. \"Should Lord Caldwell, decide to leave your service, he would be most welcome to lead a Jaffa battle fleet. Proceed.\"\n\n\"Don't get your hopes up old friend.\" Carter laughed. \"Tammy?\"\n\n\"Go.\" She said, looking at Caldwell and Lorne. \"Get it done, and get your asses home in one piece. Both of you.\"\n\nCaldwell nodded as she stared at him, then looked across the table at Teyla.\n\n\"Teyla?\"\n\n\"They will makes us proud this day, Samantha.\" Teyla said. \"Major Lorne, I ask that you bring Sir Steven home safely. He has obligations that he must fulfill.\"\n\n\"Yes, ma'am.\" Lorne smiled. \"We'll keep an eye on him for you.\"\n\n\"Then we go. Be ready to jump at sixteen hundred.\" Carter said. \n\n\"Fifteen hundred.\" Caldwell said. \"We're ready, and the longer we wait, the higher the odds of something going wrong get. I don't want to put this off. We have a good plan, and should go.\"\n\n\"Fifteen hundred then.\" Carter said as she looked at Caldwell and Lorne. \"Go with our blessings and hopes, gentlemen. And come home safe.\"\n\nInterior-Daedalus Bridge\n\n1610 Hours\n\n\"Hail the Apollo, Marks.\" Caldwell said.\n\n\"Apollo online sir.\" Marks said a moment later.\n\n\"Lorne, we'll be dropping out of hyperspace in two minutes. Are you good to go?\" Caldwell asked.\n\n\"Ready, sir.\" Lorne replied.\n\n\"Very good, Evan. Radio silence until your packages are delivered, and you are outbound.\" Caldwell said. \"If they have shields up, we break off and go to the rendezvous point. If you need to break radio silence, keep traffic to encrypted microbursts.\"\n\n\"Confirm.\" Lorne replied. \"Good hunting, sir.\"\n\n\"You too, Evan. Exiting hyperspace in sixty seconds.\" Caldwell said. \"Good luck.\"\n\nInterior-Apollo Bridge, Sector 347C3\n\n1655 Hours\n\n\"Jezzus, will you look at that mess?\" Lorne said softly as he looked out the bridge windows, then glanced down at his display. \"How long till we hit the perimeter, Wilkes?\"\n\n\"Six minutes before we're in position to start dropping our packages, sir.\" Wilkes said from the helm. \"I'm not detecting shields on passive scans, and there are no scans coming from the cluster.\"\n\n\"Good, take us in, half sublight, then one quarter when we start delivering our presents.\" He opened a channel on his comm. \"Weapons room, status on the nukes?\" He asked.\n\n\"Twenty nukes armed and ready, sir.\" Came the reply. \"Timers are set, we just have to disengage the safeties.\"\n\n\"Confirm. Five minutes to first targets. Lorne out.\"\n\nInterior-Daedalus Bridge, Sector 347C3\n\n1700 Hours\n\n\"First target is in range, colonel.\" Marks said, then a moment later, \"Weapon away, no change in the target.\"\n\n\"Take us around the rim, Marks. Low and slow.\" Caldwell said. \"Get us a count. Hives, then cruisers. Don't worry about the little stuff.\"\n\n\"Aye, sir. There's fifty-seven hives, and it looks like more than three hundred cruisers.\" Marks said. \"I can't get a good count. The damned things are all over the place, and moving at a good clip between the hives.\"\n\n\"Get me the best count you can, Marks. We want to be able to count the meat when we're done.\"\n\nInterior-Apollo Bridge, Sector 347C3\n\n1705 Hours\n\n\"Major, we've got a dart on a collision course to starboard. Forty seconds to impact.\" Wilkes said, his hands working over the controls. \"Shields up. Package away. Increasing speed to military thrust.\"\n\nLorne pressed the shipwide on his comm. \"All hands, brace for impact! Prepare for hyperspace jump.\"\n\n\"Dart impacted aft quarter, starboard side, sir.\" Wilkes said as he scanned his console. \"No damage, no explosion from the dart. It looks like he bounced off the shields, sir.\"\n\n\"Where is he?\" Lorne asked, checking his own screens.\n\n\"The dart broke up on impact, sir.\" Wilkes said. \"It looks like we got lucky. No change in upcoming target. Dropping to quarter sublight, next target in eighty seconds.\"\n\n\"How many more do we have on the perimeter, Wilkes? We close to done?\" Lorne asked, reaching for his comm again.\n\n\"Six more targets on the perimeter, sir. I have the next four tagged, and if I get between them, we can drop two at a time.\" Wilkes said. \"I've already done it once, and we can move to the inner ring in fourteen minutes of we go two at a time.\"\n\n\"Do it. It looks like the dart traffic is picking up out here.\" Lorne said. He hit the comm. \"Weapons room, we're going to be dropping doubles, be ready to pick up the pace.\"\n\n\"Aye sir, we have thirteen nukes ready. Just tell us when.\"\n\n\"Helm will advise. Bridge out.\" Changing channels, he went on shipwide. \"Stand down hyperspace jump. We just took a dart strike to the shields. We've been blooded, but not bloodied. Resume normal stations.\"\n\nInterior-Daedalus Bridge, Sector 347C3\n\n1715 Hours\n\n\"Colonel, shields are going up on the Primary's hive, we have increased...wait one.\" Marks said as he leaned over his controls. \"Shields dropping on the Primary.\" Marks said a minute later. \"There was a hyperspace window near where we came out. Half a dozen ships hit it with scans, and we were right in the path.\"\n\n\"Jezzus, Marks! Don't do that to me.\" Caldwell laughed. \"Get us out of here. Take us to the next target.\"\n\n\"Already moving to the inner ring, sir.\" Marks replied. \"We're ahead of schedule. Wait one...package away, moving to next target.\"\n\n\"How many is that, Marks?\" Caldwell asked, checking their position on his screens.\n\n\"Fourteen, sir. Five more on the inner ring, then the Primary.\" Marks said.\n\n\"Take us to the Primary next, we can come back here.\" Caldwell said. \"I want to make sure that bitch gets our queen's little present.\"\n\n\"Yes, sir.\" Marks grinned, looking back at him. \"Should I make it a double, colonel?\"\n\n\"No need to waste ordinance. One will be fine.\" Caldwell said. \"Just tell weapons control that if nothing else works, that one damned well better go off!\"\n\n\"Aye, sir.\"\n\nInterior-Apollo Bridge, Sector 347C3\n\n1720 Hours\n\n\"Last package away, major.\" Wilkes said. \"We still have six nukes left, do we want to use them?\"\n\n\"Negative, Wilkes. The lady said to use what we had to, so let's take some home with us.\" Lorne said. \"Get us out of here. When we get outside the perimeter, send a microburst to Daedalus advising of our status. Full sublight when we clear the perimeter.\" \n\n\"Yes, sir. Three minutes.\"\n\nInterior-Daedalus Bridge, Sector 347C3\n\n1725 Hours\n\n\"Inbound traffic from Apollo, sir.\" Marks said. \"They report nineteen packages away, and are clear of the perimeter. Moving away at full sublight.\" Marks paused, then turned and looked back at Caldwell. \"They took a dart strike on the way in, sir. No damage, they say they weren't detected. It looks like the dart broke up, but didn't explode.\"\n\n\"Lucky bastard!\" Caldwell laughed, shaking is head. \"Get us the hell out of here, Marks. Lorne used up all our luck, and I don't want to push it. Tell weapons to store whatever's left, and prepare to detonate on my command.\"",
        "\"Aye sir. Breaking off, perimeter in four minutes.\"\n\nInterior-Daedalus Bridge, Sector 347C3\n\n1740 Hours\n\n\"Contact the Apollo, tell them we're clear, and confirm their status, Marks.\" Caldwell said, He hit the comm on his armrest. \"Weapons, bridge. Standby, we'll be detonating in sixty seconds.\"\n\n\"Aye, sir. Message away. Receiving reply.\" Marks said. \"Message reads, 'Clear. Light 'em up.'\"\n\n\"You gotta love that guy!\" Caldwell said, hitting his comm again. \"Weapons, bridge. Apollo requests we light 'em up. Would you do the honors please?\"\n\n\"Gladly sir.\" There was a pause, and Caldwell heard the weapons tech say. \"This is for you, Tommy.\" A moment later, the bridge was filled with a blinding white light.\n\nInterior-Apollo Bridge, Sector 347C3\n\n1741 Hours\n\n\"Jezzus! Back us away, Wilkes! Turn us into the wave, we need to take it on the bow, and reduce our profile.\" Lorne said as he stared at the growing orange glow coming at them. \"Full military thrust! Now!\"\n\n\"Aye sir, full military thrust.\"\n\n\"All hands, brace for impact! Repeat, Brace for impact!\" Lorne said over the shipwide, trying to keep his voice calm. His fingers flew over the console on his arm rest, transferring power for the shields to the bow\n\nThey watched as the glow grew steadily, finally overtaking them. The shockwave tossed them about like a leaf in a rapids, and Wilkes fought his controls as alarms went off all over the ship. \n\n\"Get us out of here. Wilkes.\" Lorne said. \"That was the energy wave. We may not be outside the range of debris.\"\n\n\"Aye sir, sublight coming online now.\" Wilkes said. \"Military thrust not available. Moving at max sublight.\" Wilkes looked over his console. \"Damage reports coming in. We're okay sir. Hyperdrive online and shields at eighty-five percent. Request permission to go to hyperspace, that second wave is closing fast.\"\n\n\"Do it. Contact Daedalus when we drop out.\"\n\nInterior-Daedalus Bridge, \n\n1743 Hours\n\n\"Message from Apollo, colonel. They got hit by the shock wave too, but report no major damage.\" Marks said. \"They jumped to hyperspace to avoid the debris wave. They're requesting our status, and coordinates for a rendezvous.\"\n\n\"Give them our status, and tell them to come to us.\" Caldwell said as he checked the readouts on his display. \"How long on the hyperdrive?\"\n\n\"At least ten minutes, probably closer to thirty.\" Marks said as he worked his controls. \"We took that hit broadside. Half the ships systems are down, including life support. Shields are at thirty percent, cloak is down. Damage control parties are on it.\" \n\n\"Tell Apollo to get here as fast as they can then. We're going to need cover.\" Caldwell said. He stood up and walked to the bridge windows. \"Do you think anything lived through that?\" He asked as he watched the glow in the distance start to darken and contract.\n\n\"Doubtful, sir. Given the radiation readings I'm getting, its going to be a couple of hours before we can send jumpers in to do a BDA. Maybe longer.\" Marks said. \"We're just outside the lethal zone, but it's dropping fast out here.\"\n\nMarks paused, then spoke softly on his comm. \"We'll have hyperdrive in two minutes sir, and Apollo reports that they'll be on station in eight.\"\n\n\"Very good. Contact Atlantis. Tell then we're coming home.\" Caldwell said as he took his seat again. \"Send the video and telemetry. We can come back, or have the Travelers do a BDA later.\"\n\nInterior-Kitchen\n\n1800 hours\n\n\"Col. Carter, we have an incoming message from Daedalus.\" The Ops tech said as he opened a channel.\n\n\"Understood.\" she said. \"Have the staff meet me in the north tower conference room, we'll take it there.\" She paused, then asked, \"Are they alright?\"\n\n\"Yes, ma'am. They're on the way home, Apollo suffered minor damage, but Daedalus took a beating. They were hit by shockwaves. It looks like the blast was bigger than they were expecting. They included a databurst.\"\n\n\"Thank you. We're on our way.\"\n\nShe turned to Tammy. \"Would you call Teyla? Our boys are on the way home. They're safe, but Daedalus suffered damage from a shockwave. We're going over to the north tower. They sent a databurst when they checked in.\"\n\nInterior-Conference room, North Tower\n\n1810 hours\n\nThey watched the video of the explosion in stunned silence. \n\n\"Thoughts? Anyone?\" Carter asked quietly.\n\n\"Nothing lived through that.\" Tammy said as Samuels played the video from Apollo's perspective.\n\n\"Now I am created death, the destroyer, the shatterer of worlds.\" O'Neill said softly.\n\n\"Jack...\"\n\n\"No, it's appropriate.\" He said. \"Oppenheimer said the same thing at Trinity Site in 1945, when they set off the first atom bomb.\"\n\n\"Actually, the full quote is, 'If the radiance of a thousand suns, were to burst at once into the sky, that would be like the splendor of the Mighty one...I am become Death, The shatterer of Worlds.' It's from the Hindu scripture, Bhagavad-Gita.\" Samuels said. \"That is much more fitting.\"\n\n\"Caldwell's preliminary reports says that there were fifty-seven hives, and over three hundred cruisers.\" Carter said. She reached out and hit the comm. \"Ops, do you have an ETA on Daedalus and Apollo?\"\n\n\"Forty minutes, colonel.\"\n\n\"Thank you.\" She said, then closed channel. \n\n\"Caldwell says that they couldn't get a BDA. It was going to be several hours before the radiation dropped to safe levels at the site.\" Carter said. \"We need to have med teams waiting to check the Daedalus crew. They may have gotten some exposure from the energy wave.\"\n\n\"I'm not going to ask if we did the right thing, because I know we did. The Wraith have been preying on this galaxy for more than ten thousand years.\" Carter said. \"Hell, it's been longer than that, The Ancients left ten thousand years ago, when they couldn't fight anymore. They left this galaxy open for the Wraith to plunder. Well, we just took the first step in putting a stop to that. And we're not going to back off.\"\n\n\"So we're declaring war on the Wraith.\" Tammy said, looking at Carter\n\nSam opened her mouth to speak, but Samuels spoke first.\n\n\"No. We don't have to. Not formally anyway. The Wraith are already a hostile force, not just to us, but to everyone in the Pegasus galaxy.\" Andi said. \"And just to remind you, let me read from our declaration of independence.\"\n\n\"We have no history of oppression or mistreatment, but vow to aid others that find themselves oppressed or mistreated. We take this action because others have failed to, and we will no longer stand by as our neighbors and brothers suffer without relief. We will come to their assistance, and bring down furious vengeance upon those that bring them harm.\"\n\nShe replayed the video of the explosion. \"This is the furious vengeance we spoke of.\" She said after letting it play to the end. \"You may want to think about Pearl Harbor, or other attacks on unsuspecting nations. This is not what we did. We planned and executed an attack on an already hostile power, reducing their ability to bring harm to us, and to others.\"\n\n\"I'm not upset about what we did.\" Tammy said, looking at Sam. \"Part of me wants to do cartwheels and scream from the rooftops. Hell, I think we should throw those guys a party like this city's never seen when they get home. But part of me is asking god to have mercy on our souls for what we've done today.\"\n\n\"It is good that you ask forgiveness for your deeds.\" Master Bra'tac said to her. \"I was raised to be a warrior, and rose quickly through the ranks of the Jaffa because of my skill. As First Prime of the false god, Apophis, I committed many atrocities in his name. I knew them to be so, but weighed the cost against the greater good for my people. What was done today was an atrocity that makes my own actions pale in comparison, and my heart swells with pride. You did not do this deed for yourselves, but your people, and for all the peoples of this galaxy.\"\n\nHe paused and looked at Geraan, who was struggling to stay awake in Tammy's lap. \"I look at you with my beautiful trankalmah, and see the love you both show for him. It is the same for all the kalmah of this galaxy, you reach out to them with your hearts, to save them from the fate that has befallen their ancestors. This is a good thing, and with all my heart, pray you continue.\"\n\n\"Can I keep him?\" Tammy asked as she turned Geraan, laying his head on her shoulder. He put his arms around her as she leaned back, finally surrendering to sleep.\n\n\"He is not mine to give, but as long as I am in your service, I wish for him to stay under your tutelage. When he returns to the Jaffa, after studying at the feet of the warrior queens of Atlantis, he shall be a worthy leader indeed.\"\n\n\"I'm not a warrior queen.\" Carter said softly\n\n\"She's the queen, I'm just the consort.\" Tammy said.\n\n\"In my youth, two terms were used to describe a coward, or a warrior unworthy of the name, Ta'Ree and woman. This Ta'Ree female, this woman, is one of the finest warriors it has been my honor to stand beside in battle, as O'Neill will attest.\" He said with a smile as he looked around the table. \"Her name is known throughout the Free Jaffa Nation. Her friends among the Jaffa respect her, and her enemies fear her. Now she stands as queen of Atlantis, chosen by her people.\"\n\nHe looked at down the table at Carter. \"You do not wear armor, or carry a staff, but in your heart, you are indeed a warrior queen. And you must accept this, if you are to serve your people.\"\n\n\"We may need to change our plans for the coronation Tammy. I don't think it would be appropriate for you to read the vows to Sam.\" Samuels said. She turned and looked at Carter. \"She should be standing beside you, taking them with you. You've told us outright that Tammy is your co-queen. Well, if you're going to give her the work, you should give her the recognition. The people that elected you will support you.\"\n\n\"We're being railroaded again.\" Carter said as she looked at Tammy.\n\n\"I don't mind, if it will keep him, and the other kalmah of the galaxy safe.\" Tammy said as she rocked Geraan slowly. She lifted him and laid him gently on the table in front of her. \"It's worth the price.\"\n\n\"Col. Carter, Apollo and Daedalus just came out of hyperspace. They're requesting permission to land on the east pier. Daedalus is requesting we have medical personnel standing by.\" The Ops tech said.\n\n\"Bring them down. Call Dr. Keller and have her get her teams moving.\" She said. \"Ask Col. Caldwell and Maj. Lorne to beam down so we can congratulate them.\"\n\nThe Ops tech came on a moment later. \"They both say negative, colonel. They insist that they have to get their crews taken care of, and will brief you as soon as possible.\"\n\n\"Understood. Carter out.\"\n\n\"Do we go down there, or wait?\" She asked Tammy.\n\n\"Wait.\" O'Neill said. \"Let them take care of their people. Once they know they're safe, they'll be with us.\"\n\nInterior-Kitchen\n\n1930 hours\n\n\"Attention all Atlantis personnel. Assemble in the Auditorium at 2130 hours. All Atlantis personnel. Assemble in the Auditorium at 2130 hours.\"\n\n\"I just came from checking on Caldwell and his crew.\" Sheppard said as he cut up a chicken breast. \"He has eleven people showing signs of radiation sickness, mostly from engineering and weapons control.\"\n\n\"And Steven?\" Teyla asked.\n\n\"I'm sorry, Teyla. He's fine.\" He laughed as he put a piece of chicken in his mouth. \"I'm not sorry he's fine, I'm sorry I didn't say anything. The bridge was shielded by the ship. If they took that wave head on like the Apollo did, they'd all be dead. We got lucky that it caught them broadside like it did. The exposure the crew got was minimal.\"\n\nTeyla put her head down, her lips moving in a silent prayer.\n\nGeraan slid down off Tammy's lap and went to stand by Sheppard's chair. He looked up at him as he put another forkful of chicken in his mouth.\n\n\"You want some of this?\" Sheppard asked. Geraan nodded. Sheppard speared a chunk and held it out to him. The boy took the morsel into his mouth, chewed, then smiled broadly up at him, and ran back around the table.\n\n\"What do we say, Geraan?\" Sam asked him as he reached Tammy's chair.\n\nGeraan looked at her, then ran back to Sheppard's seat. \"Dang-gu.\" He said, then held his mouth open again. Sheppard fed him another bite, and he ran back, climbing up on Tammy's lap.\n\n\"What's wrong with yours? Don't you like dark meat?\" Tammy asked him as she cut strips off the leg on his plate. Geraan nodded, picking up the pieces as she cut them, putting them in his mouth. \"So you just wanted to taste his?\" Geraan nodded again as he looked at Sam's plate.\n\n\"Don't even think about it buster.\" Carter said as she moved her plate away from him, holding her hand over it. Geraan frowned, and Tammy laughed as she reached over and broke off a piece of cornbread, popping it in his mouth.\n\n\"What's Caldwell's mood, Sheppard?\" O'Neill asked. \n\nHe pushed his plate away, then looked over at Geraan. He pushed the plate closer, and the boy pulled it over in front of him and looked up at Tammy. She looked at him, and he turned back and said, \"Dang-gu.\" \n\n\"He was kicking himself for underestimating the blast, and because so many of his crew were injured, when I was over there.\" John said. \"A ten gigaton warhead makes a pretty big bang in space, and we know a hive going up does too. But Daedalus and Apollo were more than a billion miles out, and that first shock wave went over them and just kept going. There was no way we could have expected that.\"\n\n\"I agree.\" Carter said. \"How's Lorne holding up? Apollo had ten injuries too. Are those radiation sickness?\"\n\nSheppard shook his head. \"One broken ankle, one wrist, two arms, and six concussions.\" He looked at Carter before he continued. \"Lorne is kicking himself too, but his helmsman, Wilkes, said Lorne was telling him to turn the ship into the wave and back away before he even saw it coming, and that he moved the shields full forward himself. He saved that ship, colonel, the logs back up Wilkes' version.\"\n\n\"I know. They were closer to the blast, and took less damage.\" She said turned and looked at Tammy.\n\n\"It's in my pocket.\" She said as she took a bite of coleslaw, then offered Geraan some. He scowled, and shook his head. \"Taste it before you say no.\" She told him. He opened his mouth and took a small bite. His eyes lit up, and he opened his mouth wide for more.\n\n\"You're going to spoil that kid.\" O'Neill said as he looked at Bra'tac, then down at the pile of bones on his plate. He looked back at Tammy. \"What's in your pocket?\"\n\n\"My spoon.\" Sam said.\n\n\"And what is up with tha...\"\n\n\"General.\" Sheppard said quietly. \"I was the first one knighted with that spoon, and at first, it was all in fun. I offered my sword and fealty when the royalty talk was just that, talk, an inside joke.\" He looked at O'Neill. \"It's not just a spoon, it's a symbol. One that I live for, and would proudly die for.\" He looked at Carter as she started to speak. \"I said proudly, not gladly. If I give my life in your service, it will be with pride, not glee.\"\n\n\"Well said.\" Bra'tac said as he picked up another chicken wing. \"A warrior's life is not something to be thrown away lightly.\"\n\nCarter and O'Neill stared at him, then started to laugh\n\nBra'tac looked back and forth at them. \"I do not see what you find amusing.\" He said as he tore the wing apart.\n\n\"Nothing old friend.\" Carter said, then looked at O'Neill. \"John made that pledge the day I resigned, and the next day, secured Atlantis for us. Tammy had the good sense to hold onto it. I know it's the same one, because the lip of the bowl is bent on one side. It's my most precious possession, because of what it stands for.\"\n\n\"All joking aside, just what does it stand for?\" O'Neill asked.\n\n\"Loyalty, duty, honor, friendship. All the words we want to live by.\" She told him solemnly. \"I'm going to add two more knights to my table tonight. Men worthy of the reward.\"\n\n\"We need to start getting ready.\" Tammy said.\n\n\"John, would you go get Steven and tell him what's going to happen? I'd like each of you to stand as second's for your man. Dress is formal, so get with Andi and tell her you need suits for you, Steven, Jack and Bra'tac, unless he prefers his robes. I guarantee, she knows your sizes.\"\n\nShe turned to Teyla. \"Your finest please, something befitting your station. I wouldn't want your fianc\u00e9e to out shine you.\"\n\nSheppard tapped his comm and stood up, then stepped out into the hall. He was back a moment later. \"We just got a message from the Travelers. Their scouts report that the blast zone is still too hot to get into, and the three more hives and their escorts have jumped into the area. They want to talk, and want to send a delegation.\"\n\n\"When?\" Carter asked as she pushed her plate away and stood up.\n\n\"Now. They're holding the gate open.\"\n\n\"Go meet them at the gate, and bring them to the north tower.\" She told him. She looked around the table. \"Jack, call the Infirmary, have them send Caldwell and Lorne over. Get Andi too. I know how she'll want this to go. Do not bring them in until our people are in place.\"\n\n\"Yes, ma'am. I'll call Samuels. As foreign minister, she should meet them with me.\"\n\n\"Even better.\" She grinned. \"We're learning fast.\"\n\nInterior-Conference Room, North Tower\n\n2050 Hours\n\n\"Sheppard, what the hell did you do?\" Larrin asked when she came through the gate.\n\n\"It's nice to see you too, Larrin.\" Sheppard said. \"We'll explain everything in a few minutes. In the meantime, may I introduce Dr. Andi Samuels, Foreign Minister of the City of Atlantis.\"\n\nLarrin ignored her as she stared at Sheppard.\n\n\"We were told that there was a delegation.\" Sheppard said lightly, looking past her at the event horizon behind her. \"Are you it, or do you have others with you?\"\n\n\"The other members of the ruling council are with me.\" She said. \"They'll come through when I tell them that it's safe. Now answer my question.\"\n\n\"Please invite them through.\" Samuels said. \"Col. Carter will brief you all as a group, if you'll bear with us.\"\n\n\"No, you'll...\"\n\n\"Thank you for dropping by.\" Samuels said, turning to the Ops tech. \"Raise the shield, and close the gate, plea...\"\n\n\"Wait!\" Larrin said, then spoke softly into a small radio clipped to her collar. \"We'll do it your way.\" She said. A moment later three people stepped through the gate, and the wormhole closed behind them.\n\n\"Greetings. If you wouldn't mind, I think we should wait and make introductions when we have everyone together.\" Samuels said. \"John, if you'll lead the way please?\"\n\nThe senior staff and Lorne were seated along one side of the table when they stepped into the room. The Atlantian's rose, and Samuels led the Travelers to seats on the other side, then went with Sheppard to the far end of the table and stood at their places. A moment later, Ronin stepped into the room.\n\n\"Ladies and gentlemen, the queens of Atlantis, Col. Samantha Carter, and Lady Tammy Ford.\" He paused, then added, \"Accompanied by Geraan, of the Free Jaffa Nation.\"\n\nSam and Tammy entered with Geraan between them. Tammy looked at Ronin, and he came over, took Geraan's hand and led him to a chair. He lifted him up, speaking softly to him, then returned to his place at the door.\n\n\"Larrin, it's good to see you again.\" Sam said as they stepped over to the Traveler's. \"Allow me to introduce Lady Tammy Ford, my sister queen. If you would introduce our guests?\"\n\nLarrin introduced her fellow council members, Waleen, Pharris, and Arrin, then Carter introduced her court. Sam and Tammy moved to their seats, and everyone sat with them.\n\nPharris turned to Sam. \"We do not know the Free Jaffa Nation. Does this child represent them?\"\n\n\"No.\" Carter smiled, not rising to the jibe. She motioned down the table to Bra'tac. \"Geraan is the grandson of Master Bra'tac, and has been placed in our care while Bra'tac serves as senior advisor. He wishes Geraan to be tutored in statecraft, and other skills, so when he returns to the Milky Way galaxy, he will be a leader worthy of the name.\"",
        "The Travelers looked down the table at Bra'tac, then at Geraan, who was sitting quietly, watching them.\n\n\"Most wise. I too have a grandson, perhaps he may be granted the same privilege when we formalize our relations.\" Pharris said. \"His name is Phinnar, and he is very bright.\"\n\n\"We would be happy to discuss it with you.\" Tammy said. \"Regardless of our relations. A companion for Geraan would be most welcome.\"\n\n\"What did you do? And how did you do it?\" Larrin said, looking down the table at Sheppard, then at Carter. \n\n\"Patience, Larrin. Col. Carter will share that information when she is ready.\" Waleen said. \"Allow us a moment for pleasantries, and to come to know one another. We are in Atlantis, the city of the Ancients.\"\n\n\"Actually, we have a ceremony to attend shortly, which we'd like to invite you to.\" Carter said lightly. \"But to answer Larrin's question.\" She motioned to Samuels, and the lights dimmed as a large screen dropped from the ceiling. A moment later, a video began playing.\n\n\"Yesterday, Col. Caldwell took the Daedalus into the Wraith cluster in Sector 347C3 on a reconnaissance mission. That mission was also to test the effectiveness of newly installed cloaking technology. They spent three hours there, undetected, and scanned more than a third of the hives present, allowing us to make up a composite of a basic hive ship. They also beamed materials off of several hives without detection.\"\n\nShe let the video play for a minute longer, then changed it.\n\n\"Today, The Daedalus and the Apollo returned to the cluster, and placed nuclear warheads on thirty-nine of them, including the Primary's hive, then detonated them.\"\n\nThe Travelers were staring at the screen, unable to believe what they were seeing. Samuels change videos again.\n\n\"This was the result.\"\n\nThe room was filled with the glare of the explosion, then the view changed, and they watched the bridge view as the blast wave came at, then hit the Apollo. The video from the Daedalus bridge played immediately after.\n\nSamuels stopped the video, and brought up the lights. Larrin looked over at Caldwell and Lorne. \"You got lucky. That blast wave should have killed you.\"\n\n\"We counted fifty-seven hives, and more than three hundred cruisers just before they went up.\" Caldwell said. \"And I agree, we got lucky. We underestimated the size of the blast. We won't do that again.\"\n\n\"There will be no need.\" Waleen said quietly. \"You have destroyed more than half the Wraith in the galaxy in one engagement. Another such gathering will never occur. You are to be congratulated.\"\n\n\"Our scouts report three more hives jumped in after the blast.\" Larrin said. \"With the radiation in the area, nothing aboard them will survive. Depending on if their shields hold, the hives themselves may be damaged. We won't know till we board them.\"\n\n\"We'll be claiming any surviving hives and their escorts as plunder in the name of Atlantis.\" Carter said. \"We killed them, we're going to keep them.\"\n\nLarrin opened her mouth to object, but Waleen silenced her with a wave. \"You are due the spoils, and we will assist in anyway we can in your recovery efforts. Your announcement that Atlantis would now be acting as an independent state was met by skepticism in the council, myself included.\" He looked at Carter and Tammy. \"It is obvious to us now that you spoke the truth. Your former masters on your homeworld would never have allowed this. We come to offer our friendship, and to open relations with you.\"\n\n\"We welcome the friendship of the Travelers, and have long sought it.\" Carter said. \"We knew that there was distrust of our leaders on Earth, and we understood, you did not know them. We are here, the people at this table lead the city of Atlantis, so you now know who you will be dealing with.\"\n\nShe paused, looking at each of the Travelers.\n\n\"We have only sought good relations with the Travelers.\" Tammy said, looking at Teyla, then back at the Travelers. \"We wish to deal with you directly, not bypassing our friends the Athosians, but in conjunction with them, because they shall always be the first among friends. We do, however, have a request to make that will benefit both our peoples, and all the peoples of the Pegasus galaxy.\" She looked down the table at Andi.\n\nA video of Atlantis from a jumper view started on the screen as the lights dimmed again. \n\n\"This is Atlantis.\" She said as the jumper did a slow orbit of the city. The image changed to a land based city. \"And this is our sister city, Anchorage, which we recently acquired at the request of the local inhabitants. We will be manning and restoring Anchorage in the coming months, and your knowledge of ancient systems would be of immense benefit in those efforts.\"\n\n\"We also need workers for both cities to operate their production and manufacturing facilities, and ships to delivers the goods we produce through out the galaxy.\" Carter said as the lights came up. \"You have both. We offer not only diplomatic relations, but a partnership, for the benefit of all.\"\n\nThe Travelers sat silent. \"How many of our people will you require?\" Pharris asked softly.\n\n\"None.\" Carter said looking at her. \"We are already taking in refugees from planets decimated by the Wraith, and will welcome all that seek the safety of our cities. We are offering your people safe havens. They are free to come and go as they wish. In exchange for their efforts, we will share whatever they help produce.\"\n\n\"You misunderstand, colonel. I did not think you were requiring hostages.\" Pharris said. \"We cannot support our population, and are forced to leave many planet bound. I should have said, how many can you take.\"\n\n\"To fully staff both cities would require two hundred thousand people.\" Samuels said. \"That's roughly fifty thousand for unskilled labor, ninety thousand for skilled labor, which requires the ancient gene, and seventy thousand for support and management, which also requires the ancient gene.\"\n\nShe paused, then added, \"We have a therapy that activates the dormant ancient gene, as well as teaching machines for immediate training on ancient equipment, including ships. In addition, many of the production facilities in both cities can produce replacement parts for the vessels you already possess.\"\n\n\"Do it. We can't afford not to have them as friends.\" Larrin said, looking at her fellow Travelers. \"They could be dictating terms, but instead, they lay out a banquet before us. We'd be fools to let this slip through our fingers.\"\n\n\"I agree. We can haggle over numbers later.\" Waleen said, looking down the table at Samuels. \"Those details will be worked out with you, Dr. Samuels?\"\n\n\"Andi, if you wouldn't mind, Waleen.\" She said. \"We can put people together to work out an equitable agreement. But keep in mind, it will take several months to get both cities up to full production. Testing and training people, acquiring resources...\"\n\n\"Can all be dealt with later.\" Carter said as she rose to her feet, holding out her hand. \"For now, we offer our hands in friendship. Which I assure you, is better that any treaties or contracts we will ever sign.\"\n\nShe moved among the Travelers with Tammy, shaking hands and hugging them all. Andi gave them a few minutes. \"We need to go, or we're going to be late. Waleen, if you and the other council members will join us, we have a ceremony to attend to, then a reception following it. We can talk more then.\"\n\nInterior-Auditorium\n\n2140 hours\n\nSamuels gave the assemblage a few minutes to get seated, then stepped to the front. She looked around the room, then began to speak.\n\n\"Today, at 1740 hours, the Atlantian Warships Apollo and Daedalus, acting under orders of the queens, engaged and destroyed a major Wraith fleet. We can confirm that fifty-seven hives, and in excess of three hundred cruisers were destroyed. The Atlantian navy suffered no losses.\"\n\nThe crowd erupted in applause, and Samuels let them go on for several minutes, then raised her hands for quiet. \n\n\"We come together to honor them, and offer our thanks. Their selfless devotion to duty gives us all hope for the future of our city. Two men, however, are deserving of special attention. Maj. Evan Lorne, and Maj. Kevin Marks, stand forward.\"\n\nThe doors at the back of the room opened, and Loren and Marks, flanked by Sheppard and Caldwell, entered and strode up the aisle. They made their way to the front where Carter and Tammy waited.\n\nTammy looked at both men, then said, \"Evan Lorne, step forward.\"\n\nSheppard and Lorne stepped in front of them, then Sheppard stepped back, and to one side.\n\n\"In recognition of your service to us, we wish to reward you with honors befitting your loyalty and your deeds. Do you accept this honor, and pledge to serve us faithfully and well?\"\n\n\"I do.\" Lorne said.\n\n\"Please kneel.\"\n\nLorne dropped to one knee, his head bowed. Carter reached out with her spoon, and laid it gently on each of his shoulders.\n\n\"Rise, Sir Evan, Commander of the Atlantian Warship, Apollo.\" Tammy said. \"Welcome to the Knighthood of Atlantis. May we serve each other well.\"\n\nSheppard stepped over and came to attention as Lorne turned to face him. Sheppard saluted smartly, then held out his hand. Lorne took it, and Sheppard smiled as he said, \"Congratulations Evan. You deserve it.\"\n\n\"Thank you, colonel. I'll try to live up to it.\"\n\nSheppard led him off to the side\n\n\"Kevin Marks, step forward.\"\n\nCaldwell and Marks stepped in front of them, then Caldwell stepped back, and to one side.\n\n\"In recognition of your service to us, we wish to reward you with honors befitting your loyalty and your deeds. Do you accept this honor, and pledge to serve us faithfully and well?\"\n\nMarks took a step back, bowing his head. \"I offer my service freely, but cannot accept this honor. I do not believe I am worthy of it.\"\n\nSam smiled at him, then looked at Tammy and nodded. Tammy looked at Caldwell as she said, \"Col. Caldwell, would you read the specifications please?\"\n\n\"Major Kevin Marks, the queens, the people, and the city of Atlantis wish to recognize you for your service on our behalf in the action against the Wraith this day, and in the days preceding. We have testimony that you have twice piloted the Atlantian Warship Daedalus into hostile space, both times returning her safely to our shores. We have further evidence, that without your knowledge and insight, the planning and execution of this operation would not have been possible. In addition, your skill and cunning were instrumental in the capture of the Warship Apollo from the forces of the IOA, with no losses, or injuries to either side.\"\n\nCaldwell turned to Marks, and came rigidly to attention. \"My queens, as commander of the Daedalus, I will attest to Major Marks worthiness for this honor and position. I stand before you today because to the skill, cunning, and courage of the major, as does my crew.\"\n\nThe crew of the Daedalus stood as Caldwell mentioned them.\n\n\"So say you all?\" Tammy asked.\n\n\"So say we all.\" They said as a group. They remained standing until Tammy waved them down.\n\nCarter stepped forward. \"Kevin, we ask you again to allow us to bestow this honor, and welcome you into our service, as befits you. Will you accept?\"\n\n\"Yes, my queen.\" Marks whispered.\n\n\"Kneel with me.\" She said as she laid her hands on his shoulders. \n\nTammy held out her spoon, but Sam shook her head and nodded at his shoulder. Tammy stepped forward and laid the spoon on each of his shoulders, then stepped back.\n\n\"Rise, Sir Kevin.\" Carter said. \"Welcome to the Knighthood of Atlantis. May we serve each other well.\" She smiled at him as she held out her hand. \"Now, if you would be so kind as to help me up?\"\n\nMarks helped her to her feet, then turned to face Caldwell, returning his salute, and his handshake.\n\nSheppard and Lorne stepped back up beside Caldwell and Marks.\n\n\"Ladies and gentlemen of Atlantis, our queens wish to present the newest Knights to the Knighthood of Atlantis, Sir Evan Lorne, and Sir Kevin Marks!\" Samuels said from the rear.\n\nLorne and Marks bowed, and were escorted to seats by their commanders as the crowd gave them a standing ovation. Samuels waited for them to be seated, then said, \"Two weeks ago, we voted to install Col. Samantha Carter as queen of Atlantis.\" She paused letting them get ready for what she had to say next. \"Since her election as queen, her consort, Tammy Ford, has been assisting and advising her in all matters pertaining to the safety, management and well being of the realm. She has, in truth, been acting as defacto co-queen.\"\n\nThe audience began talking and whispering, and Samuels paused again to let the furor die down. \"Because of her importance to the queen, the city, and our people, Col. Carter has decided to elevate her to the role she already fills so well, as official, and recognized co-queen. We ask that you approve her selection by acclimation. From your seats, if you would be so kind.\"\n\nCarter stepped forward, looking around the room. \"How say you?\" She asked.\n\n\"Aye.\" The crowd roared.\n\n\"Opposed?\"\n\nA smattering of no's came from around the room, and Carter smiled.\n\n\"The ayes have it.\" \n\nShe turned to Tammy, holding out her hand.\n\nTammy stepped forward, taking her hand.\n\n\"Lady Tammy Ford, do you accept this terrible burden we place upon you?\"\n\nTammy looked at her for a long moment, then looked at the crowd.\n\n\"I will do as my queen and our people ask. I will serve our city humbly, with the fullness of my heart, and will act as the conscience of our fair city in all things.\"\n\nThe crowd came to their feet, applauding wildly.\n\nGeraan came running over, throwing his arms around Tammy's leg as Sam raised her hand in the air. \"Gentle people of Atlantis, I give to you, my Sister Queen, the Lady Tammy Ford.\" She looked at Tammy, then down at Geraan. They reached down together and took his hands, then bowed before their audience. \n\n\"Ladies and gentlemen, We will be having an official celebration in three days time.\" Samuels said over the loudspeakers as the applause began to die down. \"Tonight, we have guests from our friends the Travelers, and must conclude this gathering so we may attend to matters of state. There are refreshments is the mess hall for any who wish to attend. Feel free to indulge, tomorrow is a holiday, but in coming years, will be celebrated on this date. Goodnight.\"\n\nInterior-Dining Room, East Tower\n\n2230 hours\n\nSamuels led the way into the formal dining room on the east pier. Carter looked around at the splendor, then looked at Samuels in amazement.\n\n\"Andi. How? I mean this is...\" She said. \"I never imagined. How did you do this?\"\n\n\"It was easier that you'd think.\" Andi laughed. \"We had an empty city to take whatever we wanted from. It was just a matter of moving things around.\"\n\n\"I'm sorry, are you saying that you've never been here before?\" Waleen asked.\n\n\"Yes.\" Tammy smiled, looking around the room. \"Please forgive us Waleen, we're a young nation, still getting used to the trappings of state. Not to mention being trapped by them.\"\n\n\"You're our first guests, so if you don't mind us practicing on you.\" Sam laughed. \"We'll do our best to behave.\"\n\n\"You have nothing to fear colonel, you haven't seen Larrin eat yet.\" Waleen laughed.\n\n\"Please, there are no titles tonight, so make it Sam or Samantha, and Tammy. We should dine as friends.\"\n\n\"This Knighthood of Atlantis, you seem to hold it dear, Samantha.\" Pharris said as she came over. \"Your Maj. Marks did not feel himself worthy of the honor, which speaks highly of it, and of him.\"\n\n\"Long ago on our homeworld, in a country called England, men of quality, men of strong moral fiber and sense of honor were made knights of the realm. They were expected to defend the weak, and take the lead in times of war. They were a standard for other men to rise to for the good of all.\"\n\nShe watched as Sheppard spoke to Caldwell, then waved Ronin over. They conferred briefly, then went over to Marks and Lorne who were talking to Arrin.\n\n\"I've always been a supporter of knights, it's the only royal tradition I have any use for actually. I intend on making it difficult to make anyone a knight following our deaths. Because in later years, it became common for kings to sell knighthoods to men not worthy of the title. We won't allow that to happen.\"\n\nPharris looked at Waleen, and he nodded. \"We have much to learn from, and about each other it seems.\" She said. \"You are in a unique position. You are able to make your own laws and rules, which your people will live by in the years to come.\"\n\nCarter turned and watched as Larrin came across the room. She was followed by the five men of the knighthood.\n\n\"I have been instructed to ask a boon of the queens.\" She said, a confused look on her face. \"I do not know what this boon is, but I will ask you for it.\"\n\nCarter turned to Sheppard. \"What is it you seek, gentlemen?\" She asked with a smile.\n\n\"We've each only been knighted by one queen.\" Sheppard said solemnly. \"We humbly beg that we be allowed the blessing of both our queens.\"\n\nTammy reached in her pocket and pulled out their spoon, handing it to Sam. \"Start with Kevin. He's the only one you're missing.\"\n\nShe turned and faced them. \"Sir Kevin, stand forward and kneel.\"\n\nMarks knelt and Carter stepped over and touched each of his shoulders with her spoon, then stepped back. She handed the spoon to Tammy as she said, \"Rise Sir Kevin.\" She offered him her arm, then stepped to the side.\n\n\"Knights of the realm, stand forward and kneel.\" Carter said, smiling as they moved as one, taking a step forward, and dropping to one knee. \"How long did they practice that?\" She whispered to Marks.\n\n\"Three times, it only took a few minutes.\" He said softly. \n\nTammy glared at them, then turned to Lorne, kneeling in front of her.\n\n\"Sir Evan, Commander of the Warship Apollo.\" She said, laying her spoon on each shoulder.\n\n\"Sir Ronin, Guardian of the Realm, and my protector in all things.\" She said, laying her spoon on each shoulder, then leaning down to kiss him lightly on the forehead.\n\n\"Sir Steven, our Lord of the Admiralty, and Commander of the Warship Daedalus.\" She said, laying her spoon on each shoulder, and holding it for a long moment.\n\n\"Sir John Sheppard, First Knight of the Realm, and Commander of the Royal Forces. Who came to us offering his sword and fealty, then freed our city with us.\" Tears rolled down her cheeks as she knelt before him. She touched his shoulder lightly, then hugged him. \"None of this without you. Always remember that.\" She said softly, then stood and stepped back.\n\n\"Rise Knights of the City of Atlantis.\" Carter said solemnly, stepping over to take Tammy's hand. Marks rejoined the group, and the queens bowed to them. \n\n\"If you'll excuse me, my queens.\" Sheppard said, then moved to the door.\n\n\"I'm going with him.\" Ronin said, then hurried after Sheppard.\n\nTeyla took Caldwell by the hand and led him off to the side of the room.\n\n\"My queens.\" Lorne and Marks said, then moved over by the windows.\n\n\"What was that?\" Larrin asked as she watched Sheppard and Ronin hurry from the room. She looked back at Sam and Tammy, smiling now, but both crying unashamedly.\n\n\"A lesson we have yet to learn, but would do well to.\" Waleen said. \"Perhaps we should give Samantha and Tammy a moments privacy. I could do with something to drink I believe.\" He took Larrin's arm, leading her over to the bar at the side of the room.\n\nPharris stood quietly, then stepped aside as Geraan ran by her, followed by Bra'tac and O'Neill.\n\n\"My apologies.\" Bra'tac said. \"I could not restrain him any longer. When he saw you in distress...\"\n\n\"Not distress.\" Carter smiled, wiping her cheeks. \"Joy.\"\n\n\"Geraan my little warrior! Where were you?\" Tammy said as she picked him up and hugged him.\n\nGeraan held out his arm, and Sam stepped closer, letting him hug her too.",
        "\"Lady Tammy, I mentioned my grandson Phinnar.\" Pharris said, then she looked at Bra'tac. \"Master Bra'tac, my grandson is five, and in need of guidance. His mother died in child birth, and his father is away much of the time.\"\n\n\"Then they have much in common.\" Bra'tac said. \"Geraan comes from similar circumstance. The lady Tammy offered to care for and tutor him, and his love for them grows by the hour.\"\n\n\"What did you learn today, Geraan?\" Tammy asked, holding him so Pharris could see him.\n\n\"Dog paddle! Keep head out of water!\" He laughed, making swimming motions.\n\n\"What else?\" Sam asked.\n\n\"Dang-gu.\" He said, with much less enthusiasm.\n\n\"Two excellent lessons for one day.\" Pharris laughed. \"Very good, Geraan.\"\n\nTammy and Sam both looked at Geraan. After a moment, he said, \"Dang-gu.\"\n\n\"You're welcome.\" Pharris said. She looked at Tammy.\n\n\"We can talk later.\" Tammy said.\n\n\"Ladies and gentlemen, dinner is available on the buffets.\" Samuels said as she stood at the head of the table. \"We have Athosian, and a variety of foods from the nations Earth, so please, try some of each, and save room for dessert!\"\n\nInterior-Kitchen\n\n0110 hours\n\n\"I have to put him down, I'll be right with you.\" Tammy said as she moved toward the bedroom. \"Kitchen?\"\n\n\"Yeah, that's fine.\" Sam said as she took Pharris' hand and led her down the hall to the kitchen.\n\nShe took three glasses from the cabinet, filling one with water, and sitting it at Tammy's place. Opening the fridge, she held out a glass to Pharris, then grabbed two cokes and filled her glass with ice.\n\n\"We're kind of self service.\" She said as she waved at the fridge. \"We have a selection of juices and soft drinks, or alcohol and spirits in the other fridge. Ice is in the dispenser.\"\n\n\"What was that you took?\" Pharris asked.\n\n\"Coke. A sweet, carbonated beverage from my home country. It has bubbles in it.\" Sam laughed. She leaned closer to Pharris. \"It's one of my vices.\"\n\n\"I'll try that then.\" Pharris laughed as she took a coke and moved to the table.\n\n\"You'll want ice.\" Sam said, taking her glass and filling it from the dispenser, then sitting it on the table in front of her.\n\n\"Her other vice is ice cream.\" Tammy said as she came in and opened the freezer. She tossed Sam a carton of chocolate ripple, took a rocky road for herself, and held out a carton to Pharris. \"We'll start you off on french vanilla. A good choice for beginners.\" She said as she got spoons from a drawer.\n\nTammy slid spoons across the table to the other two women as she sat down. Sam picked up her coke, turning toward Pharris as she popped the tab to open it, then poured it slowly down the side of the glass. Pharris imitated her, then took a tentative sip. Her eyes lit up at the first taste, and she took a bigger drink, then finished filling her glass.\n\n\"I'll send a few cases with you when you go.\" Sam laughed. \"But don't tell anyone when you get home, or you won't have any left.\" \n\nPharris was watching as Tammy dipped ice cream out of her carton. She took the lid off her own and dipped out a small spoonful. She broke into a broad smile as she got a bigger bite.\n\n\"Try this.\" Sam said as she held out a spoonful. Pharris tasted it, then shook her head. \n\n\"That's bitter. This is smooth and sweet. I like this.\" She said. \"But your Earth foods were all so delicious! I especially liked the meats with the thick yellow sauce on bread. I had two of that.\"\n\n\"Bacon cheeseburgers. They appear to be an intergalactic favorite.\" Sam laughed.\n\n\"You surprised us.\" Pharris said as she scooped up ice cream, and held the spoon in front of her mouth. \"Our scouts reported seeing the explosion, and identified your ship. We did not know that there were two.\"\n\n\"Daedalus' cloak was damaged when the blast wave hit them.\" Tammy said. \"Apollo came in and was flying cover until they could go to hyperspace.\"\n\n\"We had expected you to ask for our assistance, as you did with the Replicators.\" Pharris said, looking between them.\n\n\"We discussed it.\" Carter said. \"But we decided that it would be safer for us to do this alone. We didn't know how long that gathering was going to last, and I wouldn't have allowed you to go without cloaks anyway. There just wasn't time.\"\n\n\"We also thought to minimize the risk by doing it alone.\" Tammy said. \"If our ships had been discovered, we would be the only ones blamed. \"We're better equipped to defend ourselves. There was no reason to have the Wraith come after all of us.\"\n\n\"I came to speak of Phinnar, my grandson.\" Pharris said. \"I spoke to Bra'tac, and he tells me that you are long time friends.\"\n\n\"Almost ten years, yes.\" Carter said. \"He's only known Tammy a few days.\"\n\n\"So he said. But he trusts her implicitly, and he looks on her with a fondness it takes most people ages to achieve.\" Pharris said. \"But I feel the same thing, after only hours. The way your men asked for the blessing of both their queens. That was not for Waleen and I. That was for you, and to make them feel complete.\"\n\n\"We take it seriously, as do they.\" Carter said. \"Each of our knights was rewarded for specific deeds in our service, even though each had performed many worthwhile deeds before entering our service.\"\n\n\"My son was not meant to be a father. A breeder, yes, but not a father.\" Pharris said. \"You may not know that because of our population problems, not all of our people are allowed children.\"\n\n\"We didn't know that. But not everyone that can produce a child can raise one.\" Tammy said.\n\n\"Do you have children of your own?\" Pharris asked. \n\n\"No. Neither of us, not until after the coronation. We've already selected the father, and have his contribution.\" Tammy told her. \"I want several. Sam's not sure yet, but has to have at least one.\"\n\n\"I keep trying to ask...\"\n\n\"Bring him. Or send for him, it's late, and I was going to suggest you spend the night.\" Sam said. \"We'll care for him, and teach him as we are Geraan. Geraan is with one of us every moment he is awake. He's teaching us how to be mothers. Phinnar can help him.\"\n\n\"He's teaching you how to be a mother. I'm a natural.\" Tammy said.\n\n(-)\n\nThat's all for Chapter Seven. Please read Chapter Eight for more of this story.\n\nI hope you liked this episode. Please post a comment so I know if I'm the right track with this..."
    ],
    "authorname": "RibaldWriter",
    "tags": [
        "romance",
        "intercourse",
        "lesbian",
        "intrigue",
        "sex",
        "love",
        "oral sex",
        "relationship",
        "love",
        "fun sex"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/confirming-carter-bk-02-daedalus-ch-07"
}