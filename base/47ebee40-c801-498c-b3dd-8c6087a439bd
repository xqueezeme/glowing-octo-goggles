{
    "title": "Teaching Chantelle Ch. 02",
    "pages": [
        "[MF, Toys and Masturbation, Anal]\n\nTag: Chantelle's vibrator play turns anal... with a twist\n\nThis is Chapter 2 of \"Teaching Chantelle.\" It picks up right where Chapter 1 left off, so if you're interested in the story, you should probably read the previous chapter.\n\n***********************\n\nHaving just helped her come with a vibrator for the first time ever, I lay on the bed next to Chantelle for a bit, relaxing while she was still catching her breath. My shorts were still on, and she was completely naked. After a minute, I reached out and started playing with her breasts again. \"Hey,\" she said, \"hands off!\" But she didn't move my hands away.\n\n\"I was just wondering what else I needed to teach you.\" I said. \"You've done a pretty good job so far, but what else do you want to know? Or are you ready to practice again?\"\n\n\"Thanks, not quite yet,\" she said. \"I still need to recover.\" She looked down, reached out and gently grabbed my package through my shorts. \"I was thinking you might need some help yourself, though. You've been a very good teacher. But I see the educational process has gotten you a bit excited.\"\n\nLooking down, I saw that I actually had a small wet spot that had made it through my shorts.\n\nOops. \"Wow, that doesn't usually happen.\" I said.\n\n\"Something about an hour of foreplay while you are still partly dressed?\" she grinned at me.\n\n\"Maybe.\" I remarked. \"But remember, this is all about helping you.\" I turned mock-serious. \"Ms. Jones, as your teacher I want to be sure you have learned everything you want to about your new toys. As a teacher, it's my responsibility to ensure your education. And as an educated professional, I know how to take care of this other problem along the way. So before turning to that, what else would you like to know about? Remember, there is no question too dumb, or scenario too kinky, to ask about. This is a professional, student-oriented program.\"\n\n\"Hmm,\" she said, \"such the dedicated educator.\" Her eyes roamed around, taking in the vibrator on the bed between us, the obvious bulge in my shorts, the bottle of lube on the side table, and the other vibrator. When she looked at it, she paused.  \n\n\"You know, I was wondering a little about the other one. How does it feel?\"\n\nI picked it up. \"Well, it probably feels like the first one, but it's a little smaller. Maybe the vibration is a little more concentrated, but you know, well, it's smaller, so it's probably just not as filling...\"\n\nChantelle was shaking her head. \"That's not what I meant. What I want to know is, what does it feel like on you? What if I want to use it on a guy? I mean, you were talking about it being, you know, in you? I want to know about that.\" She was shooting me little glances as she said this. But as she did, I could see a blush creeping up her face. Even after all this, she didn't want to come out and say it.\n\n\"So, you want to talk about using it anally?\"\n\nShe took a deep breath, and this time she looked me square in the eye as she said \"Yes, I do.\"\n\nMaybe I could turn this into something good for me too. \"Sounds like another lesson. I'm happy to help. Let me think.\" I reached over and picked up the smaller vibrator, and turned it on. Its buzzing filled the air as I turned it over in my hand. \"Hmm, well, let me tell you a little more.\" I ran it down over my chest, and actually over my hard on inside my shorts, and then I handed it to her. She repeated the motions, running it over my chest and down. She actually teased me by reaching it around and pushing it against my butt. She brought it back around and held it against the front of my shorts while I talked.\n\n\"I don't remember the first time my girlfriend used it on me. The sensations are kind of nice inside, the key is just to use lots of lube. And I've never been able to get off just from the vibrator alone. But as part of playing, it's really good. There just needs to be some warm-up. And go slow. Just like anal sex with you.\" I told her a little more about how my girlfriend had given me a blow job while sliding a vibrator into my ass, and about how good it felt.\n\nWe lay there together for a minute, Chantelle thinking about it, and looking down at me while she ran the vibrator over my shorts. Then she spoke quietly. \"Can you show me?\"\n\nNow it was time for my face to turn red. I pretended I had to think about it. \"Um, OK. It's just a different lesson, right?\" She nodded. \"I think I can. But, I need to get naked.\"\n\n\"That's OK, I showed you mine, so now you show me yours.\"\n\n\"Just like 4 year olds playing doctor?\"\n\nShe laughed. \"Yes, just like that. Here, let me help you off with that.\" She reached to my waist with two hands and unbuttoned my shorts. She began to push them down, and I raised my hips to help her slide them off. After all the ups and downs of the past hour, my cock was tangled up in my briefs, and I had to reach down and free it. But in a second, my shorts lay on the floor, and I was lying next to Chantelle, my erection sticking up against my belly.\n\nI put one hand on Chantelle's hip. Now that we were lying there naked, I was almost overcome with the urge to just roll her over and climb on. But that wasn't part of the deal. Chantelle looked down at me, though, and brought her hand to grasp my cock. She slid her hand up the length of my shaft, squeezing, and then she then ran her fingertip over the head of my cock, collecting the pre-cum she had squeezed out of it. She locked eyes with me as she brought her finger to her lips and sucked it into her mouth. \"Mm, tastes good too.\"\n\nShe then sat up, and moved to the edge of the bed. \"OK, my turn to ask the questions. Lie down on your back.\" I did as asked, and she moved to sit almost like I had, on the edge of the bed, at my waist. \"So, Mr. Jackson, you've used a vibrator like this one before?\" She held up the smaller vibrator.\n\n\"Yes, a lot like that.\"\n\n\"Have you used one like the other one, or is it too big?\"\n\n\"Well, sometimes, maybe, but the smaller one is a little easier.\"\n\n\"OK, and is it good when I do this?\" She ran it over my nipples.\n\n\"Well, it's OK, but boy nipples just aren't the same as girl nipples. At least, mine aren't.\"\n\n\"Hmm. Well, how about this.\" And she moved the vibrator down to my cock, running the vibrating end over the shaft of my cock, then holding it against the head.\n\n\"Ah!\" I said, jumping a little. \"It's OK, but a little intense just on that spot.\"\n\n\"Sorry,\" she said, running it back up and down my cock, and down over my balls. I just lay there and let her have her way. She watched the vibrator, occasionally glancing at my face. After a minute, she asked \"Am I doing it right? This doesn't seem to be doing much for you.\"\n\n\"Well, like I said, it's different. Think about the shape, it's really meant to be inside something.\"\n\n\"Yes, I guess you're right.\" She looked at me. \"So, like I said, can you show me?\"\n\n\"Well, I can probably only show you so much, without help, but I can get you started here.\" I thought for a second. \"I think there are probably 3 positions I've done this in. Do you really want to see this?\"\n\n\"Oh, yea,\" said Chantelle quietly.\n\n\"OK, this is your lesson. I suppose the first way you could do it is lying on your side.\" I rolled over so I was on my left side, with my back to Chantelle. I slid over more on the bed to make room. \"Here, lay down behind me, and give me your hand.\" She lay down, almost like we were spooning. I reached back over and took her hand holding the vibrator, and guided it down until the vibrator was at the bottom of my ass, just behind my balls. \"You need to get the spot and the angle right, but you could then just kind of slide it in.\" She pushed up with the vibrator. \"Wait, wait, not now! It only works if the vibrator and everything is ready, remember?\"\n\n\"Sorry.\" she said. \"You know, holding it like this, I almost feel like I'm fucking you from behind.\"\n\nI laughed. \"Well, what do you think you're doing? That's exactly what you are doing. If you had those strap-ons we saw, that's exactly it even more!\"\n\n\"Oh, OK. So, you said this was the first way?\"\n\n\"Yup. I've probably done it this other way more often. \" I moved away from her, and lay on my back. I rotated so she was down towards my feet, and then I spread my legs, and pulled my knees up a bit. Chantelle was now sitting between my legs, I imagine with a pretty good view. Well, I'd seen every inch of her too. \"If you take the vibrator and put it under,\" she brought her hand with the vibrator down to position it underneath me, \"you can put it in this way too. My one girlfriend really liked it this way while she was going down on me. And you can kind of work up to the vibrator this way - start with some oral, use your fingers, then add the vibrator. Might be a good way to start. Just watch the angle, if you go in wrong and it hits something, it can be a little uncomfortable. So go slow, and let him adjust if he needs to.\"\n\n\"I still can't really see what I'm doing.\"\n\n\"Here, try a couple of things. One way is to do it by feel. Just go a little farther than you did before.\" With that, Chantelle reached down and ran her hand over my balls, down under to where her hand was touching my ass. She felt around, sliding her finger up the crack of my ass, stopping when she put her finger on my anus. I jumped.\n\n\"Oh!\" I said. \"Just like that. With some lube, we'd be good to go. But also, this might help you see a little more if you want to.\" I pulled my legs up farther, almost pulling them off the bed, exposing my ass more. She stared down at me, and I could imagine she could almost see underneath. Her finger was still on my anus, and I felt her rub around it. \"OK, good, after you get the hang of it, you can just do it by feel.\"\n\n\"Got it.\" She said. \"Slippery, oral, good to go!\"\n\n\"There's one more way you could do it. It's the most basic, but also the most, um, exposing? So I don't know that it's how you'd do it the first time, it depends on the guy. That's doing it doggie-style. Just picture it. You can imagine.\"\n\nChantelle took a deep breath, and took her hand from underneath my ass. \"No, it's my lesson. Show me. Please. I want to see it.\" Chantelle's voice dropped, and something in it was almost pleading when she said this.\n\n\"Are you sure? This is pretty, um, well, you're definitely going to see a lot.\" She nodded, flushed, shifting her eyes on my face now. \"OK, I need to move one more time.\"\n\nChantelle scooted back. With that, I rolled over onto my stomach, then slowly got on my hands and knees, with my ass pointing towards her. I heard her catch her breath, and felt her shift on the bed. Not sure what was going on - this was just a demo, after all - I just stayed still. I swear I could feel her eyes on my backside, then felt the bed shift again as she moved closer. I felt her hand on the top of my ass, and then I felt her pull my cheeks open. Then she was still again. I knew she was looking at places that no one had ever looked at for that long. \"Hey, you OK back there?\"\n\n\"Yes.\" she almost sputtered. \"It's just... I've never been able to just look like this.\"\n\nPutting my head on the bed for balance, I reached back with one hand and pulled open the other butt cheek. I was totally exposed, and I had no doubt she could see everything there was to see. She made a small sound. \"It's OK, dirty girl, look all you want. It's your lesson, it's all yours.\"\n\nI heard her breathing heavily as she stared. She shifted on the bed, putting her left hand underneath me, grasping my very hard cock, then slid her right hand back up over my balls and onto my ass. She stroked along the sides of my crack, avoiding my anus until she got close and finally slid her finger over it. She traced the crack of my ass up to the top, then back down over my anus, all the way over the ridge between my balls and asshole. Her other hand was motionless on my cock as she rubbed all over my ass. Eventually I felt her finger back on my anus, pushing tentatively. I murmured, \"Chantelle, you really need some lube if you want to play. Go ahead.\"\n\nGlancing back, I saw that she was flushed again. \"I... I... really want to do you like this.\"\n\n\"It's OK, I'm not going anywhere.\" With that, she reached over for the bottle of lube and squeezed some out onto her finger. She brought it back up to my ass and began to rub it into my anus. \"Mmm,\" I moaned a little to encourage her.\n\nShe squeezed a little more lube out, and continued rubbing. Now that she had the lube, she definitely knew how to get it ready. She circled my asshole, and slowly began pushing her finger in, very tentatively. \"Is this OK?\"\n\n\"More than OK, go ahead.\" I was almost panting with excitement, and I could feel the pre-cum dripping out of my cock. I pushed back a little, feeling her respond by pushing a little more, and then I had to consciously relax to let her in. I could feel her finger penetrate me, first to one knuckle, then on until I felt her hand on my butt. I assumed her whole index finger was in now. \"Oh, God, that does feel good.\" I gasped.\n\nShe pulled out some, and then pushed back in. \"Maybe a little more lube.\" This time, she squirted it right on my ass where her finger was going in, and worked the lube around as she was working my ass.\n\n\"Better?\" she said.\n\n\"Ooh, mmm, just take your time, I'm in no rush to go anywhere.\"\n\nChantelle started wiggling her finger, moving it all around inside me. I could sense her watching as I pushed back against her, trying to get her deeper in. My cock was dangling underneath me, rock hard. After a minute, with her finger still playing in my ass, she reached under me and rubbed my cock a few times. She ran her fingers over my head, and then brought her hand around to my mouth. She fed me two fingers, and I sucked them in, tasting myself.\n\nI can't believe this is happening. Here I was, with two of Chantelle's fingers in my mouth and one in my ass, after all this time. I swirled my tongue all around her fingers, then she withdrew and moved back down towards my cock again. She continued to finger me, and reached under to continue stroking my cock and balls. I kept pushing back, trying to get more until she finally pushed back with both hands and said, \"You know, I can't go in any further!\"\n\nWith that, I sensed her reach down and pick up the vibrator. She brought it under me and held it against my cock, still keeping her finger in my ass. \"But maybe that means you're ready?\"\n\n\"Mmm, I think so.\"\n\nChantelle pulled her finger from my bottom. After what felt like it must have been 10 minutes with her finger in me, I felt empty. Glancing back, I could see Chantelle pick up the lube in one hand and squirt it over the vibrator in the other. She spread it around with one finger, then she glanced up at me.\n\n\"So are you really, really, ready?\" She asked, smiling.\n\n\"Yes, damnit!\" I replied. \"I'm ready! Go ahead! Please!\"\n\nI felt her place the vibrator by my anus. I felt more lube squirt on my ass, I could feel more of it drip down my crack. My legs were trembling. Then I felt the end of the vibrator start to push in. It was a bit bigger than her finger, and she asked \"What do I need to do, oh mighty teacher?\"\n\n\"Just - push - gently... Oh! Move it around... Now let me... push back...\"\n\nShe pulled out, letting some more lube drip onto my anus, and then put a little more pressure. I felt my ass starting to open, and I started to push back. \"Just hold it - there,\" I tried to relax, and pushed back. Suddenly I felt the first two inches slide in. \"UH,\" I moaned, and was very still for a few seconds while my body adjusted to the intrusion. Chantelle moved the vibrator around, very slowly, then pulled it out a little, and resumed her inward push.\n\n\"God, this is so hot,\" she whispered. \"Watching it go in.\"\n\n\"Unh huh.\" I gasped, still pushing back and trying to relax. There were a few inches in. Then it hit something. \"Ooh, you need to angle it differently.\" I reached back and took her hand, moving it up to aim the vibrator in my ass so it wouldn't bottom out. Slowly, slowly, we worked it in, me pushing back, Chantelle sliding it out, then back in, until I felt the base of the vibrator touch my ass.\n\n\"It's in all the way,\" she whispered.\n\n\"I know. I can feel it.\"\n\n\"How does it feel?\"\n\n\"It's... I'm full.\"\n\nChantelle slid it out some, then back in quickly. \"No,\" I muttered. \"Oh... just keep it in.\" She started playing with the speed of the vibration, and pushing and wiggling the vibrator in my ass. \"Oh, that's it, that's it.\"\n\nHolding the vibrator in one hand, Chantelle slipped one hand underneath me to my erection. She clearly had gotten a lot of lube on her hand, as her hand just slid along my shaft as she started to stroke me. \"How's that?\"\n\n\"Oh, God, even better.\" She continued to stroke me as she played with the vibrator in my ass. As I loosened up, she was able to more easily slide the vibrator in and out of me. She began timing its penetration to her strokes up and down my penis. And when she was in all the way, she'd kind of wiggle it around. \"Oh, yah, like that,\" I panted.\n\nAfter only a minute or two, the sensations were getting intense, and I could feel my orgasm almost overtake me. I almost fell over doing it, but I had to reach down and grab her wrist. \"No, stop, wait, please, slow down, slow down.\" She got the hint and just held my penis still.\n\nIt still felt incredibly good, but I wanted this to last. And I wanted to touch her again too. \"Wait, let me lie down.\" She took her hand off my cock, and I rolled to my side, then onto my back, being sure the vibrator didn't fall out. I reached out and could reach her thigh, but no farther. \"Here, move up a little.\"\n\nChantelle shifted so that she was lying on her side, kind of across my leg so she could reach the vibrator and my cock again. She put a little more lube on her hand and returned it to my shaft, taking the vibrator with her other hand. She ran her hand down over my balls, and back up. Closing my eyes, I could imagine that all she could see now would be a little bit of the vibrator emerging from my ass.\n\nChantelle was close enough now that I could reach out and run my hand up her thigh to her pussy. She propped one leg up, and I was amazed to find that she opened easily to my touch. She was warm, and wet, her juices running freely again.\n\n\"God, you are wet again.\" She shivered as I ran a finger through her lips, dipping a little into her.\n\n\"Mmm. I'm not surprised. It's the lesson.\"\n\nWe lay like this for a few minutes, my hand playing in her pussy, while she stroked my penis and played with the vibrator inside me. She found she was able to take both hands off the vibrator, keeping it pushed against the bed, and use two hands on me, sometimes both on my shaft, sometimes one on my balls. I alternated between looking at her very wet pussy and down at her, where she seemed to be focused on my cock, and looking at the vibrator where it was inside me. She gripped it and slid a little bit in and out, but couldn't get much motion because I was lying on it.\n\n\"I can't really slide it in and out in this position.\" She told me.\n\n\"Uh... It's OK. Really. Just like that is good, just keep it in.\" The vibrator was pushed all the way in, vibrating against me inside, and it felt great. Chantelle returned her attention to my cock and balls.\n\nI knew I wasn't going to be able to last much longer. \"Oh, I'm so close,\" I muttered. \"Just a little more.\"\n\n\"I want to watch you come.\" Chantelle said. I lifted my hips a little, thrusting through her hand, and she grabbed the vibrator, sliding it out a bit and back in. She began stroking my cock faster.\n\n\"Ohh!\" I said, and she pulled the vibrator out further before pushing it fast back in. I pushed down on the bed, then lifted myself back up again for her to slide it out a little. \"Ah.. Noo... Mm. Yes!\" I pushed back down on the bed one final time, forcing the vibrator back as deep as it would go while she stroked me, and then I erupted. Jet after jet of come shot from my cock as I wriggled on the vibrator trapped inside me. Chantelle had me pointed upward, and my come splashed down on my belly and chest, and on her hand as she milked me. My hips bucked, my ass trying to push the vibrator out, my hips simultaneously pushing down on it to keep it in. I don't know how many times I squirted, the spurts getting smaller, as Chantelle continued to forcefully stroke my cock until I couldn't take it.",
        "\"Oh, god... Oh, stop, stop,\" I reached down and grabbed her hand. \"No more, please!\" I rolled to my side, almost in a fetal position, and held her hand and moved it up very slowly one more time, squeezing the last little bit of come out of me. I collapsed back to the bed. She had let go of the vibrator as I rolled around, but now reached around me to grasp it from behind. Feeling her take hold of it, I reached back to grab her hand on the vibrator. \"Oo, need to.. Oh.. take it out.\" Together we pulled it out, dropping it to the bed behind me. \"Ah!\" I murmured as it exited my ass, leaving me empty, but I had tightened up and couldn't keep it in any longer.\n\nRolling onto my back, I tried to catch my breath. Chantelle still had her hand lightly on my cock, and I pulled it off with one final stroke up. She brought her hand to my belly and ran her finger through a patch of come. \"Mmm,\" she said, bringing her finger to her lips. She then leaned over me and ran her tongue through first one of the puddles of come on my chest, then through another on my belly, getting a good taste. She moved down and put the head of my softening penis in her mouth, giving it just one small swirl and running her tongue over the head. Then she jumped up and went to the bathroom, returning shortly with a couple of wet washcloths.\n\n\"You need a little help here.\" She proceeded to wipe all the come off my belly, then wiped off my penis. She finished by reaching under me and wiping off my ass. I pushed up a little to give her access to get to my now-sensitive asshole. Dropping the washcloths to the floor, Chantelle lay back down next to me, propped up on one arm and looking at me.\n\n\"Nice job learning the lesson,\" I said.\n\n\"Do I get an A?\" she teased.\n\n\"What do YOU think?\" I reached out and put my hand on her hip while we talked.\n\n\"You seemed to like it. You looked pretty amazing.\"\n\n\"That was really good. I can't do it that way every time, but that was awesome.\"\n\n\"I loved watching your face. And I loved watching the vibrator too. I can't believe how hot it was to see!\"\n\n\"Glad you liked it, happy to oblige. Now you know even more that you like to watch.\"\n\n\"The playing helped, too.\"\n\nAs we were talking and I caught my breath, I ran my hand up her body to her breast, and caressed it. Her nipple, which was not totally soft to begin with, hardened further. I gave it a tweak. \"Mmm.\" She said. \"I did get hot.\"\n\n\"I know. We'll take care of that, don't worry.\"\n\n\"But that won't be fair, I've already come a couple of times, and you only did once!\"\n\n\"That's because I'm the teacher. And you can have a lot, I can't. Don't worry about me. Right now, I'm in no shape for a little bit.\" I glanced pointedly down at my softened penis. She looked too, and laughed.\n\n\"Oh, does the little one need a little nappy-poo?\"\n\n\"Shut up!\" I said in mock anger, and tweaked her nipple again.\n\n\"Ooh!\" she squealed, laughing. I kind of tackled her, kind of pulled her, towards me, reaching down and grabbing her hip and pulling her close to me. She threw her leg over me, pressing up against my thigh. \"OOooh\" she squealed again, but softer, as her pussy came into contact with my leg. I could feel wetness on my leg where she was pressed against me.\n\n\"Mm, I forgot how wet you were,\" I whispered, and started moving my leg against her, or maybe it was her moving against my leg. Either way, the mock argument was forgotten, and the expression on her face changed as she started to rock her pussy against my leg. I rolled back over so that she was on top of me, straddling one leg and with her head on my shoulder. I kissed her forehead, and we continued to talk as she rubbed. I put my hand on her ass, helping her press against me. \"So is there anything else you want to know?\"\n\nShe thought, trying to keep some concentration as she moved slowly. \"Is that a good size vibrator? For you, I mean?\"\n\n\"Yea, it was. Why, were you thinking of something bigger? Smaller?\"\n\n\"Just wondering if that's all I need when I get home.\"\n\n\"You're probably OK, just use your fingers first.\" I slid my hand down the crack of her ass. I hadn't touched her ass before, but now I let my fingers do the walking as part of the conversation. \"Remember, this,\" I touched her rosebud \"has no lube of its own.\" She jumped when I touched her. I moved my hand back up. \"Did you want to use the bigger one?\"\n\n\"You said you can take it?\"\n\n\"Maybe sometimes, but not today, dear.\"\n\n\"Are you sure? That would be even more, um, interesting. Mm, this feels nice.\" She was continuing to rock against me.\n\nI could tell the idea of a bigger vibrator in my ass was something intriguing to her. \"You really seemed to like looking and watching it.\"\n\n\"Mm, hmm. I don't know why, it was just so hot! But you like to watch too, so you should understand.\"\n\n\"Yes, I guess, I do.\" Chantelle was starting to press against me a little harder. I didn't want this to end, though.\n\n\"Actually, you know, I was wondering something. Can I ask a favor?\" I asked. \"I know I'm here to be the teacher, but along those lines, um, you know how you liked to look, I was wondering if, um, could I look too?\" I gave her ass a squeeze and ran my fingers down her crack so she'd get the idea of what I wanted to look at.\n\n\"Oh, is this the ass-man coming out?\"\n\n\"The female buttocks are a work of art,\" I intoned. \"Lovely, like a pretty flower. No class would be complete without an artistic impression of them.\" Chantelle looked at me like I was nuts. \"Ok, well, actually, it's just that I love your butt too.\"\n\n\"Hmm, I think one good turn deserves another. You showed me yours, so...\" Chantelle pushed up on her hands and knees over me, then swung off and around so her ass was pointing in my direction. \"Like that?\"\n\nI took a deep breath, staring at her from behind. I slid back so that my head and shoulders were raised on the pillows at the head of the bed. \"Scoot back.\" She slid back some towards me. \"Closer.\" Her ass was just a couple of inches away, and I could almost see what I wanted. I reached out and caressed her butt check, then pulled it to one side.\n\n\"Ooh, now who's dirty!\" Chantelle said. But I heard her take a deep breath, and she lowered her head further, arching her back so that her ass was completely displayed. Now I could see her fully, her asshole just above her glistening slit. It was pink, and puckered, and beautiful. Her whole vulva was slick from rubbing against me, and I could see her clit protruding at the bottom. \"God, every part of you is beautiful, Chantelle.\" She was glistening, and I swear I could see her becoming wetter as I stared into the crack of her ass.\n\nI just stared, mesmerized, trying to memorize every detail of Chantelle as she was open to my gaze.\n\n\"Do you like looking?\" she said quietly.\n\n\"Oh, God, yes.\" I whispered.\n\n\"At my ass?\" she whispered, holding very still.\n\n\"At your ass. Oh, just let me look.\" I hadn't really been able to just stare this up-close-and-personal for so long. I swear that I just looked for 5 minutes, although I'm sure it was much less.\n\nChantelle was mainly just staying still, letting me look. At one point, she reached back with one hand and ran it down the crack of her ass and over her asshole in passing, as if verifying what I was really looking at. After a couple of minutes, Chantelle murmured \"I need to do something.\" She pressed her head to my legs to take the weight off her right hand, which she brought back under her between her legs. She ran her index finger along her slit and at the entrance to her vagina, then pulled it out and began rubbing her clit. \"Keep looking.\"\n\nI watched, mesmerized. She began to alternately push 1, then 2, fingers into her pussy, then pulled them out to rub her clit. I caught my breath when she slid her middle finger as deep as it would go into her, and she moaned. I could see her lips clenching around her finger, her asshole clenching too.\n\n\"God, it's beautiful.\" I murmured again. I could smell her. \"Chantelle, please, I want to taste you.\" She pushed her finger back into her pussy, then stuck it out towards me. I sucked it into my mouth, swirling my tongue around before she pulled it back to her pussy.\n\nChantelle's pretty asshole was calling me as she masturbated right in front of me. Still watching her ass, I knew I had one last opportunity I couldn't pass up.\n\n\"Slide back over me more.\" I pulled her body back toward me, and she moved her leg across me. She got the idea, and got on top of me like we were going to get into a 69. \"Keep going.\" Chantelle's pussy and ass were now even closer to my face, and my penis (now fully erect again) was right by her head as well. I watched her pull her finger out of her pussy to move to her clit, and I leaned in, pressing my tongue in where her finger had been. She gave a moan as I pushed my tongue as deep into her as I could, then pulled it out and licked down to her clit and her fingers. I stuck my tongue back in her as deep as I could, and pulled it out, but this time I began to lick up towards her ass.\n\nI licked from her pussy up the side, past her anus, around the top, then back down the other side. I circled her asshole again with my tongue, then dipped it back in her pussy and down to her clit. I moved back up, and circled her small, pink anus again. Chantelle had gone nearly rigid above me, as if she was anticipating -- something. Her hand was now very still, just holding her pussy; she seemed to have forgotten about rubbing her clit. I circled her asshole with my tongue once more, then finally licked her very lightly right on her anus. She gave out a little explosive breath, and then I started to go to town on her. I licked over her asshole, making my tongue flat and giving the whole area a bath. I licked down and over her pussy, then back up, running my tongue over and over her ass, making everything I could see as wet as I could get it.\n\nDipping down, I slid my tongue deep into her pussy, savoring the warmth, and wetness, and flavor, and then I moved my tongue back to her ass. I made it as small and hard as I could, and started to try to press into her tight ring. Her ass had a slightly musky flavor as I got the tip in, a contrast to the tang of her other juices.\n\nChantelle's hand, which had been playing with her pussy earlier, had gone down to the bed to support her. Since the job was clearly now mine, I continued to go to work on her beautiful pussy and asshole. I licked all the way down to her clit, then gave her a long lick back to her asshole. She began pressing back against me when I licked her ass. I kept my tongue as hard as I could, and began trying to force it in when she pushed back against me. I could occasionally feel her ass clench as I licked, and although I couldn't get as deep as a finger, her ass did open up enough that I felt like I was in at least a little. I'd never had a girlfriend let me do this before, let alone enjoy it, and Chantelle was clearly trying to get more.\n\nAs I was doing this, I felt something warm and wet envelop my cock, which was ready, hard from watching, and from Chantelle's scents and tastes. Now, a 69 sometimes doesn't work if people are the wrong height, but Chantelle was shorter than me so she could take me in her mouth while her ass was just at the right spot for me to have access. I don't know how she managed to keep any focus on me while I was doing her, but she did. She swirled her tongue around my head, and sucked me deep in. I don't know if it was deep-throating, but I felt her mouth all the way at the base of my penis before she pulled up again. She managed to get one hand around my leg and under to my balls, which she fondled as she sucked on my cock.\n\nReaching under Chantelle, I rubbed her breasts as I continued to eat her. The angle wasn't very good for this, although her nipples were rock hard, so I gave that up in favor of pulling up a hand to her pussy. As I kept my tongue on her asshole, I used my hand to massage her clit, and slid one finger, then two, into her pussy. Chantelle moaned as I added the second finger. She was tight, and I decided not to go for three. Then I switched, licking down to her clit while I brought my fingers up to her ass. I rubbed around her asshole, then started to slide a finger in.\n\n\"Mmph!\" she said around my dick.\n\n\"Just relax,\" I whispered.\n\nShe released my penis from her mouth long enough to murmur \"It's OK, just a surprise.\"\n\n\"Lots of surprises today,\" I said. She took me back into her mouth, and I continued pressing into her ass while licking around my finger. She was so wet from my tongue, and my finger was so wet from her juices, that it slid in easily. Almost instantly I was up to the second knuckle. I began wiggling my finger around, like she had done to me, while I put my tongue in her pussy. It was a tight squeeze to fit my tongue, fingers, and face all there, but I managed. Chantelle was pushing back harder against my finger every time I pulled out, so I decided to try two. I pulled all the way out, then slowly pushed my index and middle fingers together into her.\n\n\"Oh, yesss...\" she whispered, pushing back. It was a tight fight, just like her pussy, but there was no strong resistance. She was completely relaxed and receptive. I moved my fingers in and out of her ass, continuing to lick her pussy and clit. She was making little noises deep in her throat, and her mouth was moving only slowly on my cock. That was good, because I could have come with just a few more good strokes.\n\nI could sense Chantelle's orgasm building. She was pushing back hard onto my fingers, and her breaths were becoming faster. I wanted her to come with my tongue on her ass, and I gave a final thrust and then took out my fingers from her hole, replacing them immediately with my tongue. I almost came from the sensation of soft skin on my tongue, the feeling of actually being in her. I brought my other hand up to her clit and rubbed as fast as I could.\n\nChantelle went wild, pushing back on my hands and tongue, and at the same time sucked my cock deep into her throat. It was too much for me, and I exploded into her mouth. With that, she came too, moaning and thrashing as I tried to keep my tongue in her ass. She clenched around me, but somehow kept my cock in her mouth. It was a good thing I'd come earlier, or I would have choked her, because I came hard. As it was some come leaked out of her mouth as she moaned and swallowed and wiggled. I didn't mind -- this was mostly about her and her beautiful ass -- but after she came down from her high, I could feel her tongue licking to try to get the last drops.\n\nI took a last few licks up Chantelle's slit from clit to asshole, then rolled her off of me and switched around. I couldn't help it -- I kissed her hard, for the first time, and I could taste my come in her mouth. She was clearly tasting herself on me too, and she licked around my mouth, cleaning me up there, too.\n\nWe lay there, catching our breath. \"Well, that wasn't about learning to use your vibrator, but I'd still call it educational.\"\n\n\"God yes. I think maybe I'll try it again sometime.\"\n\n\"Great idea. And thanks for letting me look.\"\n\n\"If it leads to something like that, anytime, baby. No one's ever done that to me before.\"\n\n\"Mm, I'll do it again, anytime. You just let me know if you need it. Another special fantasy, I guess.\"\n\n\"Not bad, though.\"\n\n\"Glad you liked it. And thank you!\"\n\n\"No problem, that good turn definitely deserved another.\"\n\nCuddled up, we started to drift off for a short nap. Just before I went dead to the world, I heard Chantelle murmur \"Now, I wonder what else we might need lessons on?\"\n\n***********************\n\nThanks for reading. This is my first posted story on LIterotica, and I'd love any feedback you have to offer. I had help with this from Anne and Andrea, two very helpful volunteer editors, and I'd like to thank them both for their time. Any remaining mistakes are all mine. I have two other chapters in mind that I hope to add to this.\n\nAnd if you enjoyed the story, please leave a vote."
    ],
    "authorname": "BlueTang",
    "tags": [
        "vibrator",
        "anal",
        "anal play",
        "analingus",
        "anal vibrator"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/teaching-chantelle-ch-02"
}