{
    "title": "A Shepherd in France Ch. 02",
    "pages": [
        "Author's Notes:\n\n'A Shepherd in France -- Ch. 1 and 2' is a continuation of 'The Shepherd of Ashburn Court -- Parts 1 through 5'. Minimal effort is made in this tale to explain the backstory so please read the other stories first.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nA Shepherd in France -- Ch. 2\n\n********\n\nChapter 9\n\nBen stood next to the vehicle he'd be driving on the next part of their vacation and felt a shiver trickle down his spine. Words to describe it? Brown...ish? Oddly shaped? A metal box with too much glass. Wait! He had it! A fish tank on wheels.\n\nHe never really pictured himself as a van person. Kidding aside, he liked the idea of ferrying kids to baseball games or even soccer but really saw himself doing that in a SUV.\n\nHe turned to look at Gabriella who was looking far too pleased with her selection. She looked at Ben and saw his dismay.\n\n\"Oh really Ben! It's just a car! A very practical car for the next section of our trip!\"\n\n\"I think you'd call this a van, not a car. At least I think it's a van,\" he finished in a mumble as he looked once more at the hideous thing.\n\n\"It will hold most of the luggage plus four people while we drive to our destinations and once we're there we can all fit in it to do our day trips,\" she explained. When his expression didn't change she snorted and patted him on the arm. \"Just wait! You'll fall in love with this car by the end of the trip.\" She walked back to the second vehicle they'd rented, a sporty little sedan, to speak with Catherine who would be driving that car with her daughters.\n\nBen walked over to the van and looked for the door handle. He located a recessed spot and discovered it was the handle. He sat in the driver's seat, which was pretty comfortable he had to admit, and made himself familiar with the controls. He spotted a few small differences but they'd be easy to get used to. It had a manual transmission which he had no issue with once he figured out where they hid the reverse gear.\n\nAs he waited for Gabriella to finish giving Catherine and Sophia directions to their first destination he sat back and wondered if Tina and Lucy were already on the plane. They'd almost been late as something had delayed Gabriella from joining them on the curb outside the hotel this morning. When he asked she just shook her head at him with a frustrated look so he let it go.\n\nTina had been good when they parted at customs. He'd been worried that she would have a relapse of her anxiety but she kissed him sweetly, told him to enjoy himself, and told him to be careful.\n\nLucy pressed her body against his and also gave him a sweet kiss. Then she walked with Tina into the security zone.\n\nGabriella pulled him back to the present as she hopped into the front passenger seat.\n\n\"OK, we're clear on our directions. We can keep in touch with our cell phones but if we get separated they know where we will meet up with them. Let's go!\" She smiled a Ben. He looked back to the middle seat and saw big grins on the faces of Miriam and Daniel.\n\nBen got them out of the rental lot and away from the airport. Soon they were on the A series highways and made their way around Paris to the A6 south as their final stop of the day would be Beaune. For the first little while Daniel kept tabs on Catherine's car but she proved that she could easily keep the fish tank, as Ben had dubbed their van, in her sights.\n\nAs much as it pained him to admit it, the van drove really well. It was responsive and had power. It was a smooth and quiet ride. If only he didn't feel so much like a goldfish in it. He glanced over at Gabriella and she had a small satisfied smile on her lips.\n\nHer phone chirped and she glanced at it. \"Sophia is asking us to stop at the next gas station for a bathroom break,\" she said. Ben nodded.\n\nTwenty minutes later he pulled off and guided the van into a mostly empty parking lot. He turned off the engine and got out to stretch. Three spots away was a very nice black SUV. He looked back at the fish tank with a frown then heard a bark of laughter.\n\n\"Yo! What the fuck is that?\"\n\nHe looked over and saw a young man, maybe mid-twenties, dressed in the latest trendy casual wear with a big, expensive gold watch on his wrist. From the accent Ben pegged him as a New Yorker. He was standing, hands on hips next to the SUV staring back at the van with a huge grin on his face. He gestured to the others in the black vehicle to come out to take a look at the van. Three other similarly dressed men opened their doors and started to laugh. Loudly.\n\nThey saw Ben standing next to it and the first one held up his hands in surrender. \"Sorry Bro but that's one butt-ugly car!\" His friends all laughed harder and Ben just frowned. He couldn't argue with them but felt an odd compulsion to defend the van.\n\nGabriella walked around to his side and gave him a hug and pulled his face down to give him a kiss. That made him feel better. He smiled at her twinkling eyes and she walked away towards the building passing the SUV without so much as a glance in their direction. The men watched her pass and the laughter dimmed to chuckles. Miriam and Daniel raced by after her.\n\nCatherine had parked on the far side of the van and walked around the front to stand by Ben. She gave him a deep kiss which lingered just a little. She grinned at him and followed Gabriella. The laughter stopped as the men watched the tall, beautiful blond walk past. Ben smiled as he watched the sway of her hips. She was putting on a little show for him.\n\nHe felt fingers gently turning his chin as Sophia leaned against him to give him a kiss. Short and sweet as was her smile and she followed her mother.\n\nThe bros gaped as Sophia elegantly walked past in silence.\n\nRachel stood before Ben looking at his lips hungrily. He smiled and leaned down to give her the sensual kiss she'd come to crave. She pulled back with eyes closed biting her lip and gave his chest a couple of gentle pats as tingles raced through her body. She turned and rushed after Sophia to catch up to her.\n\nMegan gave Ben a kiss on the cheek and ran after her sisters.\n\nThe young men looked at Ben in silence as he leaned back against the van and gave it a happy little pat.\n\nThey all took a second look then climbed back into their big black SUV. They left the parking lot quietly.\n\nA few minutes later Daniel raced back to Ben's side and handed him a bottle of cold water. He had one too.\n\n\"Thanks!\" Ben said.\n\n\"So did Mom and the others put them in their place?\" Daniel asked.\n\nBen grinned figuring it had to be something like that. \"Yes, she sank their Battle Ships.\"\n\nDaniel laughed and climbed back into the van.\n\nBen leaned back against the van with his eyes closed and let the morning rays of the sun sink into his skin to warm his body. He felt someone leaning against him and opened his eyes. Happy green eyes looked up at him. Gabriella felt good against him. \"Hey,\" he said.\n\n\"Hey,\" she responded.\n\n\"Ready to go?\"\n\n\"Get a room you two!\" Catherine quipped as she walked by with her smiling daughters.\n\nBen kissed Gabriella's forehead as she pushed up from his chest. She smiled and went to her side of the van.\n\nHe got them back out onto the highway and they made their way towards the first stop on the journey, Fontenay Abbey which was near a town called Montbard. Daniel had his guide book out and read aloud that it was the oldest preserved Cistercian abbey in Europe. He gave them a history lesson on it. The drive was long so they made a stop in Auxerre for lunch and Daniel took some pictures of a huge church rising up above the roof tops of the surrounding village. He informed them it was named Abbey of Saint-Germain d'Auxerre. They still had a little more than an hour to drive to get to Fontenay Abbey so they had to skip going inside the huge building much to Daniel's disappointment.\n\nOnce they pulled into the parking lot of Fontenay Abbey Daniel's enthusiasm was back. They took a guided tour and Daniel captured some amazing images. He took a series of portraits of Catherine and her daughters individually and as a group standing by one of the beautiful window wells. The ornate glass made a lovely backdrop and the soft light coming through lit them beautifully. The architecture was also delightful and he got many shots of the unique touches in the buildings as well.\n\nTheir next stop was just half an hour away. The small village of Flavigny-sur-Ozerain was featured in the movie Chocolat and the McGovern sisters were adamant that they visit the place where one of their favorite Hollywood hunks once roamed. It was a very pretty old village and Ben enjoyed walking its streets but there wasn't much to see and the sisters had to squint to see its resemblance to the movie. Hollywood magic had done its work very well. Maybe too well. The ladies felt vaguely disappointed.\n\nMiriam found a store that sold anise flavored candies which were once made by the monks who lived there. They all tried one and Ben was surprised to find a tiny anise seed in the center.\n\nThe day was getting away from them and they still had another hour to drive to get to the chateau they were staying in just outside of the small town of Beaune. They piled back into their vehicles and moved on.\n\nTheir accommodations for the night was a fully refurbished chateau. They had four rooms on the top floor. Gabriella would share a room with Ben for the night and the others would double up though Miriam and Daniel had a room with two single beds.\n\nOnce they got the bags loaded into the rooms they all got into the van and drove into Beaune to have dinner. They had reservations at a restaurant which used a beautifully converted wine cellar as its dining area. The atmosphere was lovely and the food was top notch. Ben and Daniel were the only ones who didn't partake of the wine and once dinner was over the group went for a little walk through the town. The road and sidewalks were smoothly polished stone so the rubber tires of passing cars squeaked and squealed. Daniel discovered he could make his running shoes squeak as well and teased his sister by making the noise around her. Gabriella finally had to intervene.\n\nThey went back to the chateau and then their rooms after the ladies got their kisses from Ben.\n\nHe and Gabriella retired to their lovely room and Ben dropped his weary bones back on the large bed. The driving took a lot out of him and it had been a long day.\n\nGabriella took her dress off and climbed up Ben's body as he grinned at her. She undid the buttons on his shirt and pulled it open. She smiled hungrily as she looked down at his broad chest. Then she leaned down to kiss his nipples. He jumped and gave her a hot look. She pushed back and undid his belt and pants, tugging them down as he lifted his hips. While she backed off the bed to pull off his pants and underwear Ben took his shirt the rest of the way off. Gabriella stood at the end of the bed looking at his naked body. She reached back and undid her bra and slipped it off. Ben's eyes were immediately drawn to her full breasts. Her nipples were stiff and standing at attention. She slid her panties down slowly keeping her eyes on him and his cock began to stiffen and grow. Her smile widened at her effect on him.\n\nShe crawled back onto the bed and slowly kissed her way up his legs. Each time she pressed her lips to his skin his cock surged. Ben was breathing heavy by the time she reached the top of this legs and he was fully erect. Gabriella marvelled at how big he was and how hard she'd made him. A thrill ran down her spine knowing this was for her.\n\nShe reached forward and lifted his heavy balls in her hand and Ben moaned. She dipped her head and kissed them, feeling the heat of him, feeling them move in her hand. She ran the tip of her tongue over them and Ben sucked in his breath. She felt his cock jump in reaction becoming harder still. Her face was flushing with her need for him. She sucked one of his balls into her mouth and Ben moaned once more and she ran her tongue across it. She switched to the other ball and Ben's hips lifted slightly as he whispered her name.\n\nGod, she wanted him so much right now. She could feel her wetness dripping down her inner thighs. Releasing his ball she ran her tongue up the underside of his cock and Ben gasped. She lifted his cock and pressed her lips to the thick head. She tasted his precum and felt the heat against her soft lips. Gabriella slipped her tongue out and ran it over the head. Ben's hands slid into her hair and she took him into her mouth as far as she could.\n\n\"AAAAAAHHH! Fuck! Oh my god, Gabriella!\" Ben gasped.\n\nShe pumped him into her mouth a few more times running her tongue all over his hot skin. Ben was moaning her name over and over.\n\nGabriella only had one more condom left as she hadn't had a chance to pick up more or replace the ones she'd 'borrowed' from Rachel. She rolled it over the head of Ben's cock and used both hands to roll it down over his shaft.\n\nShe stretched her body over Ben's and looked up into his fevered eyes. \"Fuck me, Ben! Fuck me hard!\" His eyes instantly sharpened and he grinned fiercely. He rolled them over so he was on top and kissed her deeply. She sucked desperately at his tongue as she felt the pressure of his cock aligning with the entrance of her pussy. He pushed forward, sliding deep into her, making her cry out in pleasure. The sensations exploding through her body were intense and uncontrolled. He pulled back and thrust forward once more reaching her depths. Gabriella's eyes rolled back as her senses started to slip away from her. She clung to his back and Ben pulled back and rammed forward faster and faster, his pelvis slapping her clit again and again. Gabriella crested and squeezed her eyes shut, gasping as the wave of intense pleasure coursed through her nerves. Ben continued to drive himself into her. Her orgasm went on and on, growing in magnitude, and she lost muscle coordination. Ben finally reached his climax and drove himself deep one last time, grinding against her. Her body convulsed through one final enormous surge and she sank back to the mattress.\n\nBen's mind was spinning from the intensity of his own release. He gently pulled himself out of Gabriella and she moaned in protest as spikes of pleasure shot through her trembling pussy. When he was clear he carefully moved her outstretched arm and dropped down on the bed next to her.\n\nThey rested quietly, letting the glow slowly fade.\n\n\"Oh my god Ben! What you do to me!\" Gabriella finally managed to say breathily.\n\n\"It's what you do to me as well!\" he smiled.\n\nShe rolled her head over to look at him and saw his smiling face. \"I must have done something right in my life to be so blessed,\" she sighed happily.\n\nBen rolled up on one elbow and looked down at her satiated expression. She looked truly lovely and he leaned down to gently kiss her full, plump lips. \"I can't imagine how I ever deserved to be this happy.\"\n\nHer smile was brilliant and tears beaded up in her eyes.\n\n\"Hey, no tears!\" he gently scolded her with an exaggerated scowl.\n\n\"I love you so much!\" she whispered.\n\nThe heartfelt confession knocked Ben off his emotional equilibrium and tears came to his eyes as well.\n\n\"I can't express how much I love you. There just aren't words,\" he said, his voice rough with emotion.\n\nHe kissed her and she kissed him in return until they were gasping. He saw she was exhausted so he pulled her against him and shut off the lights. He relaxed as he felt her soft breasts pressing against him. He was a lucky man and his inner voice could go fuck itself.\n\nChapter 10\n\nThe chateau served breakfast in a beautiful room on the main floor or you could have it outside at tables in the courtyard. Ben and Gabriella were the last ones to arrive from their group and found the others in a cluster of tables outside. Gabriella was moving a little gingerly this morning and Catherine struggled to keep the grin from her face. Ben quickly did the rounds then went inside to get some food for them both.\n\nCatherine moved to sit next to her friend and leaned in. \"You're glowing extra bright this morning but moving a little slow!\"\n\nGabriella looked around embarrassed and shushed the blond. \"We were a little too energetic and I'm just a little tender.\"\n\n\"Worth it?\" Cat asked.\n\n\"GOD YES!\" Gabriella gushed then went crimson as her outburst was much louder than intended. Sophia and Rachel looked over curiously and caught the meaning pretty quickly. Their grins were wide.\n\nCat stood up as Ben had returned with a tray. She helped place the contents on the table and then leaned in and gave him a sensual kiss. A few other guests looked at them curiously.\n\n\"Good morning!\" he smiled as she took the tray from him. She smiled and walked back into the chateau.\n\nGabriella and Ben had their breakfast and everyone went back to their rooms to brush their teeth and bring the suitcases back to the cars. They checked out and were on the road early. They had a two and a half hour drive to get to Annecy to visit the Gorges du Fier which was reported to be stunning.\n\nThe drive was pleasant and Gabriella dozed as they drove.\n\nBen woke her as they pulled into the parking lot. Catherine drove in a minute later and they gathered at the entrance. Gabriella was smiling as Daniel was so excited and Miriam picked up on his excitement. Ben and the rest had no clue what to expect. They paid the entrance fee and made their way out onto a walkway bolted to the wall of a deep gorge. Water had carved its way between the stones and the platform they were viewing it from was high above the river below.\n\nDaniel was in awe of the beautiful scenery and took shot after shot. He also got some pictures of the others cautiously making their way along the path. Miriam walked hand in hand with her mother as both were a little nervous of the height. Catherine, Rachel and Megan had no issues with the height but Sophia was in a bad way. She was not keen on heights and felt the platform bounced just a little too much. Ben held her hand and that seemed to calm her down.\n\nThey saw evidence of just how high the water reached in the gorge and that was a little frightening.\n\nDaniel was gushing with excitement when they reached the end and asked if they could go through again. Sophia's face showed how little she thought of that idea. She thanked Ben for coming to her 'rescue' and kissed his cheek.\n\nTheir next stop was Chamonix which was in the French Alps and was only a little more than an hour away. The scenery was amazing and made the trip feel much shorter. They parked and discussed what they would like to do. From the parking lot they could see a cable car going up the mountain. Gabriella spoke with the woman selling tickets for the cable car and discovered the temperature up on the Aiguille du Midi, a multi terraced building at close to 4,000 metres high was pretty chilly and she recommended they wear long pants and fleece which could be purchased in the village.\n\nThey wandered into town and made their way into a few shops. Everyone got a fleece jacket or sweater and a nylon shell to keep the wind out. They carried their finds over to a restaurant and had lunch.\n\nBen noticed Sophia was quieter than usual and kept glancing up at the mountain as the cable cars made their way up and down.\n\n\"You don't have to do this if it makes you nervous,\" he said.\n\n\"No! I want to do this! I want to!\" she said firmly and forced a smile on her face.\n\nHe looked at her seriously and she patted his hand. \"Thank you Ben. I'll be fine.\"\n\nAfter lunch they walked back to the cable car station and bought tickets. The cable car in the station was full but they were first in line for the next which they were told would be in twenty minutes. Ben kept his eye on Sophia and she seemed to be relaxing so he felt better about that.",
        "Once the next one arrived they were ushered into the large car and moved to the back of it by the windows. This would give them the best view of the valley as they climbed. Daniel got up by the glass to take photos. Ben noticed Sophia was looking at her feet and he asked her again if she was ok. She nodded without looking at him. He glanced over at Rachel and she looked concerned.\n\nSophia squeaked when the car began to move but clamped down on her fear.\n\nThe car began to move quicker and settled into a steady pace which would take them to the top in twenty minutes. The car swayed gently as they passed the support columns and Sophia squeaked each time. The valley dropped away below them and the view was spectacular! Daniel was excitedly describing the heights and Ben caught a shudder passing through Sophia's frame.\n\nCatherine leaned closer to her daughter and whispered something to her. Sophia shook her head tightly and continued to tremble with her eyes closed. Cat looked at Ben with a worried look.\n\nBen stepped closer to Sophia and suddenly she was clinging to his chest. His jacket and fleece were open and her hands were inside both and digging into his back. He glanced at Catherine in surprise and she gave him a nod after a pause. He wrapped his arms around the young woman and held her tightly.\n\nSophia's trembling began to slow and she tucked her face into his neck. Ben felt her breath on his skin and her soft lips pressed against him. Then he became conscious of her ever so slowly grinding against him. He cast Catherine another concerned look and she gave him a sympathetic smile and nod. She mouthed 'distract her' to him and he gently nodded.\n\nCatherine leaned in and whispered in Gabriella's ear. She looked over at Sophia in sympathy then nodded to her friend. She positioned herself at Ben's back between him and her kids who only had eyes for the view out the window anyway. Catherine, Rachel and Megan took positions facing outwards at Sophia's back.\n\nHe was starting to get hard as she ground her pelvis against him. He felt her hot breath gusting out against his skin in little bursts as she began to pant quietly.\n\n\"Shhh... slow down, make it last,\" he whispered to her as he moved his hands down to her hips and controlled her movements.\n\nSophia made a noise somewhere between a moan and squeak when she felt his strong hands gripping her body. She listened to his advice and let him set the pace. That was hard to do as she was getting close to a release.\n\nThe car went past another support pillar and made its bumping noises and swayed. Sophia clung tighter to Ben.\n\n\"That was the last support pillar! From this point to the top we are completely supported by the connection at the top!\" Daniel blurted excitedly to his mother.\n\nBen felt Sophia lock up so he tilted his face down to whisper to her that they would be alright. Suddenly her mouth was on his kissing him desperately. Once more he slowed her down. They still had a ways to go. He gently and sensually caressed her lips with his and felt her body relaxing. Her kisses lost their desperate intensity and became slow but passionate. She ground against him harder and gasped into his mouth as she felt the bulge of his thick hard cock pressing against her mound. Ben's hands moved once more and gripped her ass. He controlled her motions, slowing them but keeping the pressure on.\n\nBen paid close attention to her responses to keep her distracted as the car smoothly made its slow approach up to the terminus at the top. Each time she began to tense up he'd gently push her back to let the pressure wane. Then he'd begin again. Slowly.\n\nSophia was going insane. She'd never felt like this before. Ben had taken her to the edge so many times only to back away that she couldn't take any more. The incredible build-up had been stretched out to almost fifteen minutes and she was beginning to shake with the need for release. Her kisses became desperate once more. Ben realized he couldn't make her wait any longer and a quick glance up confirmed he didn't need to. He kissed her deeply and ground her hard against him as he squeezed her ass in his big hands. Her orgasm was immediate and explosive and he was only partially successful in muffling her cries. She pulled back from his kiss and buried her face in his shoulder as her nerves erupted again and again when he rocked her body tightly against his.\n\nThe car gently bumped against the terminus as it came to a stop. Ben slid his hands up to her back to continue to support her as her legs had turned to jelly. The other passengers slowly disembarked and he waited for her to get her equilibrium back. Once she nodded he carefully walked her off the car with Gabriella and her kids close behind. With the firm floor of the building under her feet Sophia felt less shaky. Ben kept his arm around her and walked her along with the group until they exited out onto an open terrace. They found themselves standing in a mist which suddenly cleared and there was the peak of Mont Blanc before them. Sophia whipped her head around and saw the retreating cloud they had been standing in moments before.\n\n\"Oh my god! We're standing in the sky!\" she gasped in awe.\n\nBen smiled at her as she'd summed up his own impression. The view was incredible! They could see to the horizon and the mountain continued to rise up in front of them. They walked over to the railing and looked down at the glacier. Sophia didn't seem to be having any issues with the height.\n\nThere was a distant crack and boom and the group looked at each other.\n\n\"What was that?\" Catherine asked.\n\n\"The glacier,\" Daniel said.\n\nThey all looked at him.\n\n\"It's really big, it's moving slowly, and it's made of ice. Sometimes it cracks and makes those noises,\" he explained.\n\nThey all looked back at the glacier. The idea that the enormous field of ice clinging to the side of the mountain was moving was a little unsettling.\n\nThe group split up to explore the different levels and take in the views.\n\nSophia looked up at Ben with a shy smile. \"Thank you for distracting me from the cable car ride.\"\n\nHe smiled tenderly at her. \"You seem a little better with heights up here which is surprising.\"\n\n\"We're standing in a building which is built into the mountain so we're on a solid base. We may be very high but it's like we're still standing on the ground. I don't feel it moving at all unlike the walkway over the gorge or the cable car.\" She shuddered and closed her eyes.\n\nWhen she reopened her eyes they were a little troubled. \"How am I going to get back down?\"\n\n\"We don't have to think about that now. Let's just enjoy the view while we are here. Do you find the air a little thin?\" Ben asked as he found himself taking deeper and deeper breaths.\n\n\"Yes, it is,\" she smiled as she caught him distracting her again. They joined Catherine and her sisters on one of the upper terraces. Rachel was fidgeting and staring at her older sister so the two of them casually broke away to check out a different view. Megan went in a different direction leaving Ben with Catherine.\n\n\"Thank you, Ben. I was really worried she was going to have a panic attack,\" Cat said to him quietly.\n\n\"Has she always had a fear of falling?\" he asked.\n\n\"Since she was a little girl. She and Rachel were climbing the trees behind the house and she fell. The wind picked up and the tree started to sway and she lost her grip. She broke her arm and the fall scared her terribly. It's been years since we've been in a situations where she's been exposed to those feelings of uncontrolled movement. Except for flying but she takes tranquilizers to keep her calm. She doesn't have any on her. Are you ok with distracting her on the way back down if the need arises?\" Catherine asked with a coy smile.\n\n\"It's a little public to be doing that but if there's no other option,\" he shrugged with a frown. They moved off to find a better view.\n\nRachel was so envious of Sophia. She didn't begrudge her the opportunity to get close to Ben like she had and understood the circumstances that led to it were less than optimal. She'd carried the guilt of Sophia's accident since she'd challenged her to a climbing race when they were just kids. While she hadn't pushed her sister out of the tree she still felt responsible for it and Sophia's subsequent fears. She hadn't even thought that the cable car ride might be frightening for her. When she heard Sophia having trouble breathing she drew her mother's attention to it immediately. Thank god Ben was there for her. He was the one thing solid enough to take her mind away from the fact that they were in a box dangling from a wire going up the side of a mountain.\n\n\"Are you ok?\" she asked her sister.\n\nSophia nodded and looked down. \"I feel better now that we are on the mountain itself.\"\n\n\"Good! So?\"\n\nSophia looked at her and paused as she connected the dots in her scattered mind. \"OH! It started off just as a panicked attempt to feel safe and being in his big arms is amazingly calming. But when we bumped past that last support, I lost it. I kissed him and started grinding on him in a panic trying to get my mind off the drop. He took control immediately and slowed it down, stretched it out. Oh my god! It was so intense! He kept me on the edge for the entire trip up to the summit! I thought I'd go out of my mind! Just when I couldn't take it any longer he took me forcefully and...\" Sophia's eyes glazed over as she relived the moment. She lost her words for a bit then noticed Rachel's wide eyes. \"It's never felt that good before. It went on and on and I was floating out of my body. I can't imagine how much better it must be to actually have sex with him!\"\n\n\"Oh my god!\" Rachel gasped.\n\n\"I wasn't too loud was I?\" Sophia glanced around embarrassed but she hadn't paid any attention to the other passengers in the car so she couldn't recognize anyone.\n\n\"Well, there were some sounds that leaked out but most people weren't paying attention what with the incredible scenery. Listen are you going to be ok going back down?\" Rachel said.\n\nSophia shook her head frantically and looked up at the mountain to distract herself. \"I'm not thinking of that right now!\"\n\n\"I'm sorry. I shouldn't have mentioned it. Ben will be there for you, you know that, right?\" Rachel asked.\n\nSophia's expression relaxed and softened. She smiled dreamily at her sister and nodded.\n\nRachel snorted. \"Now I wish I'd fallen out of that stupid tree.\"\n\nBen and Catherine found Gabriella and her kids on the highest terrace. \"Have you guys gotten your fill of walking in the clouds?\" he asked.\n\nGabriella smiled and got nods from her kids.\n\n\"What's our next stop again?\" he asked.\n\n\"Saint Pierre d'Albigny, a little mountainside village an hour's drive from here. We're staying at a B&amp;B in a renovated chateau owned by my cousins, Stephanie and Alexis Murino and Alexis' wife B\u00e9atrice Renard. I attended their wedding six years ago and back then they were just talking about buying a place and setting up a business, catering to artists mostly. Stephanie is an amazing sculptor and B\u00e9atrice paints beautifully. Alexis is the business mind. I can't wait to see them again!\" She grinned at her friends.\n\n\"Let's go then!\" Ben grinned.\n\nDaniel and Miriam led the way with Catherine right behind them keeping an eye out for her daughters. Ben felt a hand on his arm and saw Gabriella looking up at him.\n\n\"Sophia's going to have trouble getting back on that cable car. Can you take care of her again?\" she asked.\n\n\"Maybe if I carried her she wouldn't feel the movement of the car and that might lessen her anxiety,\" he suggested.\n\n\"It's worth a try but can you hold her up for twenty minutes?\" she asked.\n\n\"No, probably not. I'll suggest to her that I carry her on and we'll see how it goes,\" he admitted.\n\nThe group gathered once more and Ben gave Sophia his suggestion and she nodded nervously. They got in line and she clung to his arm as they waited. As they approached the empty car Ben scooped her into his arms and carried her forward. The operator held up his hand to stop them and said something in French but Ben glared at the man causing the scar to stand out in stark relief. The operator had a sudden change of heart and let them pass.\n\n\"This scar comes in handy sometimes,\" he whispered playfully to Sophia who grinned up at him.\n\n\"When we get moving I'm going to set you on my feet, like how you teach someone how to move their feet when they dance. Not that you need any lessons on how to dance!\" he corrected with an exaggerated expression and she grinned at him again. \"We'll dance a slow number all the way, alright?\"\n\n\"That sounds wonderful!\" she whispered to him. \"Rachel, can you slip my shoes off?\" she asked.\n\nRachel's eyes widened then she took her shoes.\n\nThe doors closed with a thump and Sophia tensed and squeaked when the car began to descend. When she nodded he moved her in his arms to set her down on his feet. She unzipped his jacket and fleece to slip her arms inside and around his back as she squeezed herself against him. She was trembling once more so he began to hum a tune as he swayed with her in his arms. She looked up and smiled when she recognized the tune. 'Only You' by the Platters. She snuggled into his arms and listened to him hum to her as they danced slowly. Catherine and Gabriella picked up the tune and began to hum along with him. Soon Megan and Rachel joined in and Gabriella's kids were grinning madly as Ben began to sing the words as the rest provided the musical accompaniment. Sophia was blushing madly and squeezed her face against his chest as Ben's singing became just a little more exaggerated. He wasn't half bad but he wasn't great either. As he reached the end of the song he glanced over at Gabriella and caught her attention. She stopped the others and Ben immediately segued into 'Teach Me Tonight'. Catherine and Gabriella began to laugh then they immediately started humming the tune for Ben. Megan and Rachel weren't familiar with this song so they could only grin and watch their sister dancing in Ben's arms. They saw the flush on Sophia's cheeks and they grinned harder.\n\nBen segued in 'Unforgettable' making Gabriella and Catherine clap and grin as his deep voice was a fair approximation of Nat King Cole's, though he wasn't quite as smooth.\n\nWhen the car bumped to a stop at the ground terminus Sophia pulled back in surprise and saw they were down. She looked up at Ben with grateful tears in her eyes and kissed him.\n\n\"Thank you Ben!\"\n\nThe other passengers were clapping and Rachel helped Sophia get her shoes on as Ben bowed to his fans. They left the cable car and terminus and made their way back to their cars.\n\n\"I didn't know you were such a crooner Ben!\" Gabriella teased.\n\n\"I typically only sing in the shower but today I felt inspired by my muse,\" he grinned as he looked over at Sophia who blushed again but smiled back at him.\n\nChapter 11\n\nThe drive to Saint Pierre d'Albigny was beautiful and soon they were driving up the mountainside past lovely homes with breathtaking views of the valley below and the Alps beyond.\n\nGabriella was reading off directions and Ben guided the fish tank nimbly through the narrow roads until they made a final left and rolled into a wide gravel parking lot. Ben noticed the sign for the chateau was resting on the ground under the signpost where it should have been hanging. Two other cars were in the lot and the building was huge. He grinned at Gabriella and shut off the car. They stepped outside and heard angry yelling. One of the voices was deep, guttural and Ben couldn't tell what he was saying but it sounded nasty. Two other voices were female and both were angry but there was an undercurrent of fear.\n\n\"That sounds like Alexis and B\u00e9atrice. I don't recognize the male voice but he's making threats.\" Gabriella said looking at Ben.\n\nHe took off at a run and went around the side of the house to the front where he saw a large heavyset man with a large walking stick advancing on two women holding gardening clippers.\n\n\"HEY, FAT MAN! BACK OFF!\" Ben yelled and the three froze.\n\nThe man's sunken eyes narrowed as he took in Ben's size and the nasty scar crossing his face. He snorted and turned to hobble away, as quickly as he could. He leaned heavily on the stick and once he reached the bottom of the property he went through the gate but left it open. The two women turned to Ben cautiously.\n\n\"Hi, I'm Ben Shepherd. Your Cousin Gabriella's neighbor?\" he said with a smile. Their faces lit up with smiles and they relaxed.\n\nJust then Gabriella turned the corner of the building and came rushing over to hug her cousin and her wife. \"Are you two alright?\" she asked. \"We heard the yelling when we got here.\"\n\n\"It was that pig Arsene Dumond! He lives in the property down the hill and he is an evil man!\" B\u00e9atrice snapped looking down the hill. She had a beautiful accent even though her words were sharp. Ben was entranced by how dark her skin was. She was almost ebony. She was maybe 5' 5\" and if she topped 115 pounds he'd be amazed, she was so slim! She had a very expressive face, beautiful full lips and she wore her hair very short. He looked to Alexis as Gabriella did the introductions. Alexis had one of those faces that seemed to be meant for serene smiles. Long sandy blond hair currently tied back in a ponytail. Pale blue eyes and a light dusting of freckles across her slim nose. A wide mouth that seemed to have a quirk of a smile on it. She was at least three inches taller than her partner and had a stockier build with wider shoulders and hips. Her button down plaid shirt was having some trouble containing her heavy breasts.\n\n\"Ben, this is my cousin Alexis Murino and her beautiful wife B\u00e9atrice Renard.\"\n\n\"This is why Gabriella is my favorite of your cousins!\" B\u00e9atrice gushed with a huge smile and hugged Gabriella.\n\nBen leaned forward and pressed his cheek to Alexis's and B\u00e9atrice's as he shook their hands.\n\nMiriam and Daniel had been waiting by the entrance to the parking lot to flag down Catherine should she not notice the sign that was on the ground. Once Catherine was in the lot the kids came racing around the corner to see their aunt.\n\n\"Auntie Alexis!\" Miriam squealed as she ran up to her and was enveloped in a hug. Daniel got one too and pulled back to stare at B\u00e9atrice. \"Gosh, you're pretty!\" he blurted and his face went red as he realized he'd said it out loud. Chuckles went through the group and B\u00e9atrice turned to Alexis.\n\n\"This is another reason why Gabriella is my favorite of your cousins!\" she laughed and hugged Daniel much to his secret delight. She gave Miriam a hug as well and the young woman grinned widely.\n\nCatherine and her daughters made their way around the corner of the house and introductions were made, cheeks kissed, and hands were shook.\n\nGabriella looked over to a lovely gazebo and noticed it was empty. She looked at Alexis. \"Where is Stephanie? She's not in her favorite spot,\" she said with a smile which fell away when she saw a pained looked cross the faces of her cousin and her wife.\n\n\"Stephanie is in her room. She rarely comes out any more and she's been like this for over a month. It's terrible! She's lost her interest in her art!\" Alexis said and looked to B\u00e9atrice who nodded. \"She won't tell us what happened but we think Arsene may have molested her when she was outside by herself.\" Gabriella cried out in shock and dismay.\n\nBen's head snapped back and his eyes went cold. He started for the gate at the bottom of the property but stopped when Catherine and her daughters rushed forward and grabbed his arms. Catherine got in front of him and pulled his head down so he was looking in her eyes.\n\n\"Ben, it's ok. Come back to us. We'll take care of it. You just come back,\" she said softly. Rachel and Sophia leaned their faces against his arms and they clung to him and Megan hugged his back. Ben's eyes softened and he looked at the women surrounding him. \"What...\" he said quietly.",
        "Alexis and B\u00e9atrice were looking at Ben with nervous expressions again.\n\nGabriella needed to put them at ease so she pulled them aside. \"Ben had a rough time growing up and we don't really know the full extent of it yet. There must have been some abuse but it's locked deep in his mind. We shouldn't talk about that around him because he becomes extremely protective.\"\n\n\"So, he's not a danger to us?\" Alexis whispered.\n\n\"God no! The man will walk through fire to protect a woman. His mind takes him someplace dark when he sees a woman being hurt or abused in any way. It's frightening and brutal what he's capable of but it's always in the defense of someone in danger. When he comes out of it he can't recall what happened. That's disturbing for him. He's seeing a doctor back home but he needs more treatment. We're recording the blackouts for his doctor.\n\n\"Would he have killed Arsene just on our say so?\" B\u00e9atrice gasped.\n\n\"Killed him? No. Beaten him unconscious? Definitely. That's why we have to be careful what we say around him,\" Gabriella explained as she saw the appraising looked they were now giving the big man.\n\nHe walked back to them with the ladies accompanying him.\n\n\"Sorry about that,\" he mumbled looking at their hosts.\n\n\"It's quite alright,\" Alexis said with a smile and looked over to Gabriella.\n\n\"Can I go see Stephanie?\" Gabriella asked.\n\n\"Why don't we get you and your friends situated in your rooms then I'll take you to see her.\" She paused for a second with a thoughtful expression. \"I think you should bring Ben with you when you see her. Tell her he frightened away Arsene. That might help her,\" Alexis suggested.\n\nGabriella nodded and smiled at Ben. They went back to the vehicles and everyone grabbed their luggage. Ben was once more given the largest and most luxurious room on the top floor. The view from its windows was spectacular as it faced the valley below. The massive bed looked inviting and the private bath was nicely appointed. He immediately noted some beautiful sculptures of dancers. There was also a bright and colourful impressionistic painting of a dance studio on the wall.\n\n\"The room is gorgeous and these pieces are lovely!\" Ben enthused gesturing to the art.\n\nB\u00e9atrice beamed at him. \"Thank you. It is one of my favourites as well. Stephanie did the sculptures and I did that painting about two years ago.\"\n\nBen moved closer to the painting. \"I'm no expert but I love this! I can almost hear the music they are dancing to!\" B\u00e9atrice smiled broadly at Gabriella.\n\nThey moved to the next room which had a more feminine feel to it. It had softer colors and lots of colourful throw pillows. This would be Catherine's room which she'd share with Sophia. Next was the flower room which Rachel and Megan would share. Gabriella and Miriam's room was furnished with French antiquities much like they saw in Versailles. The last and smallest room painted in oranges and yellows with rich, dark wood furniture went to Daniel and he was delighted.\n\n\"Are we the only guests? Gabriella asked her cousin.\n\nAlexis looked a little embarrassed. \"For now. We've been having trouble getting local tradesmen to come to the property to finish off the renovations. I think Arsene is frightening them off.\"\n\n\"What exactly is his problem with you?\" Ben asked.\n\n\"We're gay. He's homophobic and has a particular hate for Lesbians,\" B\u00e9atrice growled. \"He's also made a nuisance of himself to the owners of another chateau in town. Richard and Henry run a beautiful B&amp;B not far from here and they've told us he's also shot holes in their sign.\"\n\n\"Is that why your sign isn't up? Did Arsene shoot your last sign?\" Ben exclaimed.\n\n\"We can't prove it was him as he does it at night but we heard a loud boom and in the morning we saw our sign had a huge hole in the center. It happened the same way with Richard's sign.\"\n\n\"Have you reported him to the police?\" Gabriella asked.\n\n\"The man in charge of this area is Arsene's cousin. He won't do anything to stop him. Arsene is a bully and has no friends in town but no one stands up to him,\" Alexis said.\n\nBen was getting that grim look in his eyes again so Gabriella hugged his arm and that distracted him. \"You know, Ben is a master at renovations. Maybe he could take a look at what's left to do?\" Gabriella suggested and Ben's eyes lit up.\n\n\"I wouldn't want to impose on you during your vacation!\" Alexis protested.\n\nGabriella and Catherine snorted in unison as they saw Ben's eager expression then started to laugh. \"Ben is something of a reno junkie. It's something he loves to do,\" Catherine explained to their puzzled hosts.\n\n\"Let's visit Stephanie first though,\" Gabriella insisted and Ben nodded.\n\n\"If you don't mind I will just bring in Gabriella and then Ben if she is up to it,\" Alexis said. They nodded and followed the cousin down to the main floor and through a door with a 'Private' sign on it. At the end of the hall was a door and Alexis gently knocked. She announced herself and entered. Moments later she brought both Gabriella and Ben into the room.\n\nStephanie sat in a chair by the window with her hands in her lap. She shared a lot of features with her older sister. She wasn't as stocky though and her chest was more modest than her sisters. She had long sandy blond hair worn loose and pale blue eyes which Ben immediately saw weren't tracking their movement in the room. He glanced at Alexis who nodded at him. Stephanie was blind.\n\n\"Stephanie? It's Gabriella!\" she said as she took her cousin's hands and held them up to her face. She released them and Stephanie ever so gently ran her fingertips over the contours of Gabriella's features.\n\n\"Hello Gabriella. Beautiful as ever!\" Stephanie said with a gentle but sad smile.\n\n\"I'd like to introduce you to my good friend and neighbour Ben Shepherd,\" Gabriella said and gestured for Ben to step forward.\n\n\"Hello,\" Ben said taking her delicate long fingered hands in his thick ones.\n\n\"Hell- oh! You're big!\" the woman said in surprise as she ran her fingers over his hands and up his arms.\n\n\"Yes, he certainly is! He just scared Arsene into running away!\" Alexis said.\n\nStephanie's hands froze when her sister mentioned Arsene and Ben felt her panic. \"I don't like that man. I'm going to have to do something about him,\" Ben growled deep in his chest.\n\nThe blind woman's hands went immediately to his face and Ben held still while she mapped him in her mind. She gasped when she found the scar across his face and the small bandage on his chin. Her hands finished with his face and moved down his thick neck. Her brows furrowed and she concentrated hard as her mouth hung open as he grew in scale in her mind.\n\n\"Ben, take your shirt off. Let her feel what you've experienced,\" Gabriella said gently.\n\nHe looked at her questioningly then pulled off his shirt. Alexis gasped as she saw the scars over his chest. He reached for Stephanie's hands which were held out before her and guided them up to his shoulders as he knelt before her.\n\n\"Big,\" the woman breathed as she felt how wide he was. When she moved her hands down over his pecs she encountered a large scar. She traced it with her fingers then moved on and found the next one. She found each with her gentle fingers. She was careful with his stitches on the few she encountered.\n\nWhen she felt the bullet hole scars she looked puzzled as their shape was different than the others. \"Those are the oldest ones. Three bullets,\" he said gently.\n\n\"I have to sculpt you!\" Stephanie suddenly blurted, her face was flush and she was wearing a huge grin.\n\nBen looked at her in surprise and looked over to Alexis who had tears in her eyes and was clutching her hands together by her mouth. She looked at Ben with profound gratitude.\n\n\"Uh, I've never been a model before,\" he mumbled, embarrassed. He stood up.\n\n\"Alexis! I need new clay! Lots of it! This will be the largest piece I've done. I need you to contact Richard and ask him to make me a wire armature based on male proportions but one hundred and twenty centimeters tall,\" Stephanie blurted excitedly\n\n\"One hundred and twenty! That's not going to fit in our kiln!\" Alexis cried.\n\n\"It's not going into the kiln. I'll explain later! When can I start?\" Stephanie asked.\n\n\"Can we at least feed them dinner first?\" Alexis chuckled, wiping tears from her eyes.\n\n\"Yes, yes! Of course! Where are my manners! Ben, will you pose for me after dinner?\" she asked.\n\n\"OK, sure. I'd be honoured,\" he replied.\n\nShe suddenly stood and stepped forward colliding with Ben who was looking at Gabriella in surprise at the time. He quickly caught Stephanie as she bounced back from his bare chest. Her hands went back to his skin and she smiled. \"You are big!\"\n\n\"Yes,\" he smiled.\n\n\"Excuse me,\" she said and Ben moved aside. She unerringly found the phone on her desk. \"I'll call Richard myself. I need him to get started on it right away.\"\n\n\"See you at dinner Stephanie!\" Gabriella said.\n\nStephanie immediately stopped and turned with open arms. Gabriella stepped into them and was given a firm hug. She whispered something in Gabriella's ear who chuckled and whispered back. Stephanie blushed and grinned for her cousin. Ben raised an eyebrow at the whispering as they left the room but she just shook her head at him with a mischievous smile. He tugged his shirt back on.\n\nOnce they were out in the vestibule of the chateau Catherine and the rest of the group descended the stairs and everyone moved into a large sitting area.\n\nAlexis crushed herself against Ben's chest and gave him a firm hug. \"Thank you so much for drawing her out of her shell! I haven't seen her this passionate about her work in years!\"\n\n\"I didn't do anything!\" Ben asserted.\n\n\"What didn't he do?\" B\u00e9atrice asked as she came into the sitting room.\n\nAlexis spun to see her partner. \"Stephanie is out of her shell! She's going to make a sculpture of Ben. One hundred and twenty centimetres tall!\"\n\n\"We need to get more clay!\" B\u00e9atrice said excitedly with a brilliant smile.\n\n\"I'll go out tomorrow to get it,\" Alexis said.\n\n\"I was hoping to go into town\" B\u00e9atrice said with a cute pout.\n\n\"Why don't you both go?\" Ben asked.\n\nThey looked at him with a troubled look in their eyes. \"We haven't done that since Stephanie was attacked.\"\n\n\"So he knew you were both out of the house when he... did that?\" Ben said struggling with his rage.\n\nAlexis nodded as she looked at Ben with wide eyes. \"We have to drive past his house to get to town,\" B\u00e9atrice said.\n\n\"You should both go to town tomorrow. I'll stay behind to greet any unwanted visitors,\" Ben finished with a growl.\n\n\"We were planning on driving to Turin, Italy tomorrow,\" Gabriella said.\n\n\"I'll sit this one out if you don't mind,\" he said and she nodded. \"I can do some of those renovations you've hinted at.\"\n\nAlexis' eyes lit up again. \"What can you do?\"\n\n\"Framing, insulating, plumbing, electrical, drywall, tile work, painting... pretty much anything but don't ask me to wall paper. I hate that,\" he grinned.\n\nAlexis' answering grin was wide. \"Tomorrow morning we will do an inventory and we'll pick up whatever you need.\"\n\n\"Sounds good!\" he replied.\n\n\"Speaking of good, our cook Marie would like to let you know we are having authentic Coq au Vin tonight with fresh baked bread,\" B\u00e9atrice informed them. \"The vegetables are from our garden and the chicken was locally raised as well. Dessert is a wild berry medley and/or ice cream, also locally sourced.\"\n\nThe group made appreciative sounds.\n\n\"Dinner will be served in a little under an hour in the dining room which is just through that door,\" B\u00e9atrice said with a smile as she headed back to the kitchen.\n\nAlexis turned to Gabriella. \"We just got some mountain bikes and there are good trails nearby. Helmets are included and have those little movie cameras attached so you can film your ride. You have to offer those little perks to keep the tourists happy. Richard has horses and offers horseback riding. We can see if there is availability if you like.\"\n\n\"Actually I don't think we'll have time. I've packed our itinerary pretty full,\" Gabriella said. \"We're only here for three nights and have two day trips, tomorrow to Turin and the day after to Lyon. Then we head for Cannes. We head out each day after breakfast and come back before dinner so we can spend the evenings with you. I'm imagining Ben will skip both day excursions since he has renovations to do,\" she said with a grin and he nodded.\n\n\"Ah Gabriella! Always the planner! You never change!\" Alexis smiled fondly at her cousin. \"Did she tell you the story of her Day of the Week panties yet?\"\n\n\"Alexis! Don't you dare!\" Gabriella shrieked.\n\nBen and Catherine perked up but Alexis just laughed at her cousin's flustered expression.\n\n\"We're going to look around the grounds,\" Rachel said with a grin and left with her sisters, Miriam and Daniel.\n\n\"Since we have time maybe you could show me what needs to be done, renovations wise?\" Ben asked.\n\n\"Ah, we've lost him,\" Catherine quipped and Gabriella shared her grin.\n\n\"Would it be ok for me to steal him away for a second?\" Alexis asked looking at the two friends. They raised their hands in surrender and Ben grinned eagerly as he followed Alexis from the room.\n\nStephanie entered from the opposite door using her white cane. \"I heard voices so I followed them here.\"\n\nGabriella and Catherine stood up. \"Stephanie, I'd like you to meet my best friend Catherine.\"\n\nThe two women shook hands then they all took seats.\n\n\"So you are neighbors... with Ben as well?\" Stephanie asked.\n\n\"Yes. I live on Ben's north side and Gabriella lives on his south side. We've both known the man for years.\"\n\nStephanie tilted her head and a confused expression came over her face.\n\n\"What's wrong?\" Gabriella asked.\n\n\"I'm not sure if I should say. I don't want to cause conflict between you two,\" Stephanie said quietly.\n\nThe two friends looked at each other in surprise. \"Please tell me,\" Gabriella said.\n\nShe hesitated then spoke. \"When you spoke of Ben earlier I could hear the love in your voice. Catherine has the same love in hers when she speaks of him,\" she said with a worried tone.\n\n\"Ah, that's all. It's true. I love Ben. So does Catherine. So does Tina and Trish,\" Gabriella said. \"In fact, Tina lives with him, is having his child, and at our suggestion will be marrying him when we get back. Trish is another of our neighbors.\"\n\n\"Don't forget Lucy. I seriously believe the girl is infatuated with him!\" Catherine added in.\n\n\"Yes, I think you're right,\" Gabriella nodded.\n\nStephanie's confusion just increased. \"...but Tina's the one who's having sex with him?\"\n\n\"No, we all are,\" Catherine said.\n\n\"Ben's a special case. Despite the damage done in his childhood he has a tremendous capacity for love. We're in love with him and he's in love with us. We share his time and sometimes his bed. He's not promiscuous. He needs an emotional context for sex. He's... a very physical man,\" Gabriella explained.\n\n\"Incredibly physical!\" Catherine blurted.\n\nStephanie smiled at her outburst. \"So, no jealousy?\"\n\n\"No. There can't be. That's torture for Ben. A woman's emotional pain is something Ben can't endure, particularly when he's the cause. Besides, we know his love is genuine and he'd never hurt us so there's no need to be jealous.\"\n\nStephanie looked thoughtful.\n\n\"Did you arrange to get the armature made?\" Gabriella changed the subject as she heard approaching footsteps.\n\n\"Yes, I convinced Richard that I needed it for tomorrow morning. He'll deliver it then,\" Stephanie said as Alexis rushed into the living room to hug Gabriella.\n\n\"What?\" Gabriella said with a grin.\n\n\"Ben said he's going to be able to complete the work in the next two days so we'll just need to do the painting and decorating afterwards,\" Alexis gushed.\n\nBen followed her into the room and smiled at the grinning women. \"Just a little plumbing, then some drywall with taping and mudding, and some tiling. No biggie.\"\n\n\"Five rooms! He says he can finish five rooms in the two days!\" Alexis exclaimed as B\u00e9atrice rushed in to find out what the fuss was about. She looked at Ben in surprise.\n\n\"Well you still have to get me the supplies I listed so that's going to eat into the time. You've got some decent tools and there is stuff I can do tomorrow until you get back but I'll make real progress when you get back with the stuff. I'll need an assistant.\"\n\n\"Me!\" Alexis yelped. \"I want to learn how to do this kind of work so I can do my own repairs.\"\n\nBen grinned and nodded. B\u00e9atrice rushed over and gave him a big hug. He hugged her back with a smile.\n\nShe turned to her partner. \"We'll be able to paint next week then get the furniture in and have the rooms decorated and ready for the beginning of the following week! I can update our website to list the new rooms and post some photos. So much to do!\" She was grinning.\n\nA short, plump woman wearing an apron over a flowered dress entered the sitting room and nodded to B\u00e9atrice.\n\n\"Ah! Dinner is ready! Everyone, this is Marie who is a master in the kitchen!\" B\u00e9atrice said with a flourish and Marie smiled with a deep blush.\n\n\"Ben, could you look outside and see if the ladies are on their way back?\" Catherine asked. He nodded and headed for the front door. Daniel was entering as he stepped outside.\n\nDusk was approaching and he noticed the gazebo was lit up with tiny white lights. The ornate structure was very large and was obviously designed after the famous one in the Sound of Music. He wandered over and spotted Sophia dancing in its center with her sisters and Miriam sitting on the benches watching with rapt attention.\n\nHe stopped at the open double doors to watch her graceful moves. He didn't want to break the magic of the moment but she noticed him standing there and paused her dance.\n\n\"Have you come to dance with me?\" she said with hope in her voice.\n\n\"As delightful as that would be our dance will have to wait as our hosts have called us to dinner,\" Ben said. He held out his elbow and Sophia gracefully flowed over to him and took his arm. \"Your dancing is exquisitely graceful!\" he said.\n\n\"Thank you kind sir. I will hold you to your promise of a dance,\" Sophia said, keeping the spirit of the scene alive.\n\nThey elegantly walked back to the entrance of the main building with the others following with silly grins on their faces. When they got to the dining room they were shown to their chairs. Alexis was at the head of the table with B\u00e9atrice to her right and Stephanie to her left. Daniel looked very pleased to be seated next to B\u00e9atrice and Miriam sat next to him. Gabriella sat next to Stephanie and Ben sat between her and Catherine. Sophia was next to her mother and Rachel sat across from her. The end of the table opposite Alexis was for Marie who would join them once she and Alexis had delivered all of the food to the table.\n\nMiriam grinned with pleasure at being seated across from Ben and he shared her joy. He pretended to fire something across the table at her with his spoon and Gabriella took it from his hand and put it back on the table as he stuck his bottom lip out in a big pout. Miriam giggled and Daniel joined in. When Ben sneakily reached for the spoon again Gabriella rolled her eyes and took it and Ben pouted once more causing more giggles from across the table.\n\nAlexis and B\u00e9atrice watched the exchange with a twinkle in their eyes.\n\nMarie came out of the kitchen carrying a huge antique serving tureen and set it in the table near Alexis. She left and returned with several baskets of cut bread still hot from the oven. There was fresh butter on the table and a huge bowl of garden salad tossed in a vinaigrette dressing.\n\nAlexis lifted the lid of the tureen and the amazing scent of the coq au vin reached the noses of the hungry guests. Everyone smiled and made appreciative comments. Marie smiled shyly. Alexis began ladling servings onto plates and handed them around the table. Soon everyone was reaching for bread and salad and a look of bliss came over their faces as the tender coq au vin melted over their tongues.",
        "Daniel buttered his bread but Ben used it to soak up the delicious sauces. He was assured that the alcohol was long evaporated in the coq au vin as it had been prepared the day before and slowly reheated over the afternoon to be prepared for dinner.\n\nConversation centered on their time in Paris, the things they saw and what shopping they did. B\u00e9atrice asked about the beautiful rings she saw the two women wearing and Gabriella asked Daniel to get his camera to play the movie of the ring ceremony for them. Ben made to protest but was overruled by everyone else. Daniel dashed upstairs and returned quickly with his tablet which he'd loaded the movie files onto. He queued it up and handed it to Alexis. B\u00e9atrice got up and went to Alexis' side to watch with her. Stephanie listened in as did everyone else at the table. Ben ate quietly trying to avoid the admiring eyes watching him.\n\nWhen it finished playing Alexis and B\u00e9atrice were both in tears but were confused by his admission of love to three separate women. Especially since he asked one to marry him!\n\nStephanie was smiling as tears ran down her cheeks. \"That was one of the most beautiful things I have ever heard,\" she said softly and Gabriella leaned over and kissed her cheek.\n\n\"Stephanie can explain it to you later,\" Gabriella said to Alexis as she looked questioningly at her cousin.\n\n\"Show them the dance!\" Sophia called to Daniel. He grinned and took back the tablet to queue the file. He handed it back and the women watched Sophia and Ben glide effortlessly around the beautiful ballroom in Versailles.\n\n\"He does renovations and dances like this?\" Alexis gasped incredulously. \"Ben! You're staying with us in France!\"\n\nProtests immediately erupted from the group and everyone ended up laughing. Ben blushed in embarrassment.\n\nThey finished their meal and Marie brought out the dessert.\n\nFinally Ben pushed back well satisfied. He turned to the cook. \"Marie that was an absolutely fabulous meal! You are indeed a master chef!\" There was a round of applause and the woman grinned and blushed.\n\nAlexis and B\u00e9atrice helped Marie clean up and they shooed their guests out into the sitting room.\n\n\"Ben, will you pose for me now?\" Stephanie asked shyly.\n\n\"Oh! Ok. Don't you need that armature thing and the clay?\" he asked.\n\n\"For when I begin to work on the actual sculpture yes but right now I need to determine the pose I want to do,\" she explained.\n\n\"Alright. How do we do that?\" he asked.\n\n\"We'll need privacy. I suggest we use your room.\"\n\nBen walked over to her side and placed her hand on his arm and led her to the stairs. They went up to the third floor and down the hall to his room. Once inside Ben dropped his hands to his side and looked at her helplessly. \"I have no idea how this works.\"\n\nShe smiled. \"First off you should just relax. This isn't difficult at all. I just need to map you in my mind so I can form a complete image. Then we will select a pose that you can hold comfortably for when I begin the final mapping. When I have an accurate image in my mind I can do the work without your involvement... aside from the occasional remapping should I need to refresh it.\"\n\n\"How do you do the mapping?\" he asked curiously.\n\n\"By touch like I did with your face, shoulders and chest earlier,\" she said.\n\n\"Ah.\"\n\n\"You should get undressed.\"\n\n\"What?\" he jolted.\n\n\"I can't map you through your clothes,\" she said reasonably.\n\n\"I have to be naked?\" he asked uneasily.\n\n\"I'm making art. This isn't porn,\" she said frankly.\n\n\"Right. Uh, ok,\" Ben said and began to undress. It was a little unnerving as she was looking right at him. While he knew she couldn't see him that didn't detract from the odd sensation of getting naked in front of a woman he'd just met. He looked over at the beautiful figurines of the dancers she'd made and took strength from the example of her skill. Plus the faces of the dancers were minimal so it was going to be somewhat abstract. He was fine with that.\n\nOnce he was undressed he stood before her with his hands clasped before him. Then he realized that was dumb so he dropped his hands.\n\n\"Are you ready?\" she asked.\n\n\"Oh, sorry, yes,\" Ben froze as he realized he was somehow expecting her to know he was naked.\n\n\"Relax. I have done this before. All you need to do is stand still,\" she said with a smile as she stepped forward with her hands outstretched. They landed on his chest so she moved them up. \"I'm going to begin at the top and work my way down.\"\n\nBen held still and watched the intense look of concentration on her face as she gently ran her slender fingers over his scalp, around his ears, and onto his face. He closed his eyes for this part as she spent more time on his face than he expected. She seemed particularly interested with mapping out the extent of his scar.\n\nWhen her fingertips reached his lips he opened his eyes and saw a wistfulness pass over her face so he playfully stuck his lips out in an exaggerated kissed. She smiled and moved on to discover the shape of his jaw. The intense concentration returned.\n\nOnce more she read the surface of his chest and memorized each scar, its shape and location. She stepped around him and moved her hands to the top of his shoulders and ran them over the muscles of his back.\n\n\"No scars here,\" she murmured.\n\n\"I've always faced my attackers,\" he responded and her hands paused then moved on.\n\nShe moved to his left side and ran her fingertips down his arm pausing at the scars and being careful of the stitches. She did his right arm then moved to kneel in front of him. She placed her fingers on his stomach and paused.\n\n\"Relax,\" she said and he realized he had been tensing up so he closed his eyes and willed his muscles to unclench.\n\nHe understood this was for art and wasn't supposed to be sexy but his body wasn't so cultured. It was only aware that a pretty woman was touching him very intimately. A specific part of him began to wake up.\n\n\"I'd prefer to map this area while it's at rest,\" she said with a grin as she touched his thick cock. Her expression changed as she realized his size.\n\n\"You're big!\" she gasped.\n\n\"You say that a lot,\" he joked, trying to deflect his embarrassment.\n\nShe snorted and started to giggle. She covered her mouth with her hand to stifle the sound. \"I suppose I do,\" she replied when she got control of herself.\n\nBy this point Ben's cock was reaching full rigidity so she moved her hands down and discovered the contours of his balls. Ben gasped.\n\n\"Sorry,\" she said and slid her hands over his thighs.\n\nWhen she slid them around to his ass and lightly mapped out the musculature there she was leaning in so he felt her breath on his cock. It throbbed in reaction and he bit his lip to keep from moaning.\n\nHer hands moved down his legs and she eventually played them over his feet. She sat back on her heels and he watched her forming the image in her mind.\n\n\"Ok, I'm done so I'm going to go back to my room and work on the design. Tomorrow morning I will need to get you to do the pose I choose and I'll do my final mapping to ensure it matches the image I have. Then I can begin,\" she explained.\n\n\"So I can get dressed now?\" he asked.\n\nShe smiled. \"Yes, for now.\"\n\nHe helped her stand and she made her way to his door. \"Good night,\" she said.\n\n\"Good night.\"\n\nShe opened the door and stepped out. Ben realized he was standing in plain view of the doorway completely naked and Rachel was just coming out of her room with a sweater in her hand. Her eyes locked on his then dropped to his erection and widened in shock. Ben jumped forward and closed his door, cursing at himself for his carelessness. He pulled his clothes on and opened his door again but Rachel was gone. He went downstairs and followed the sound of voices until he found the group outside sitting in comfortable looking chairs positioned in a circle around a beautiful fire pit out on the lawn in front of the house. There was one open chair between Rachel and Sophia and both women were looking at him with knowing smiles.\n\nThe darkness hid Ben's deep blush as he took his seat. The chairs were close enough to each other that the armrests touched so when Ben sat down he was surprised to feel hands taking a gentle hold of his. He looked at Sophia who had a coy smile on her lips then over to Rachel who was looking back at him while she ran the tip of her tongue across her lower lip. He felt a spark shoot from her hand through his arm directly to his cock which hadn't calmed down yet. She smiled as she felt his involuntary twitch.\n\n\"How did the posing go?\" Alexis said with a grin.\n\n\"What? Oh, ok I guess. It wasn't what I was expecting,\" Ben mumbled.\n\n\"But you rose to the challenge, right?\" Rachel said with a sly grin.\n\nSophia snorted and looked away.\n\nBen blushed harder and was grateful for the firelight painting everything deep yellow and orange.\n\n\"I understand you will be gracing our gazebo with another dance with Sophia,\" B\u00e9atrice said with a smile.\n\nBen was grateful for the change of subject. \"Yes, I'm looking forward to it. The gazebo is beautiful!\"\n\n\"We built it for Stephanie. Sound of Music was her favorite movie. She knows all the songs and she used to dance...\" Alexis began enthusiastically but ended with a sad look. Ben looked at Gabriella.\n\n\"Stephanie was an artist and a dancer when she was a child but by the time she reached her mid-teens she began to lose her sight. Retinitis Pigmentosa. She was completely blind by age twenty. She's thirty five now and seems very well adapted to her new life,\" she explained.\n\nThe group was quiet and Sophia broke the sad reflection when she stood up and reached her hand out to Ben. He smiled and took it as he stood up. Gabriella whispered to Alexis who looked surprised then nodded and moved off into the house. Daniel raced into the house ahead of her. The rest followed Sophia and Ben to the gazebo and sat on the benches at the edges while the two moved to the center of the floor.\n\nDaniel ran up to the gazebo with his camera in his hand and began to record them. Rachel used her phone to queue up a music track, something classical. Sophia moved and he moved with her. She instantly smiled as she realized he was in perfect sync with her. The space for dancing in the gazebo wasn't close to the space they'd had at Versailles so they had to constrain their movements. Even so, it was still beautiful to see them step and spin to the music.\n\nSophia had a natural grace and Ben moved with a smooth power that made the watching ladies smile and squirm.\n\nWhen the piece ended Ben bowed to Sophia and she curtseyed.\n\nThe rest applauded as Alexis arrived with Stephanie on her arm. Alexis was all smiles having seen the last minute or so of the dance but Stephanie looked tense. Ben walked over to her and took her hand.\n\n\"I understand the gazebo is yours. I think it's time you took it back. Will you dance with me?\" he asked gently.\n\nA look of surprise played over her face then a smile stretched across her mouth. She nodded and he led her to the middle of the floor. She leaned in and whispered to him and he made an agreeable sound. He held her close and they began to move. The movements were bold and sinuous, flowing around the limited space they had. He controlled their position in the space and she their moves. Ben wasn't familiar with the dance Stephanie was performing but his body reacted to her movements automatically and naturally. He had the oddest sensation of being detached from his body, like he was standing back and watching somebody else moving him.\n\nThen he saw himself as an eleven year old dancing with a petite older woman who moved like smoke. Her motions were mesmerizing and her smile was a picture of bliss. They flowed together and swept around the room faster and faster as this was what she was meant for. Not to be the housewife of some crude machinist. She was meant for the stage!\n\n\"Ben?\"\n\n\"BEN!\"\n\n\"Huh? What?\" He blinked and saw he was leaning over Stephanie in a deep dip. She was breathing fast and her eyes were wide. He lifted her back to her feet and she clung to his chest as she panted. He was surrounded by the others and Daniel was still filming.\n\nThey were standing on the grass on the front lawn, well outside of the gazebo.\n\n\"How did we get here?\" he asked quietly.\n\nGabriella and Catherine shared a worried look. Stephanie leaned her forehead against Ben's chest and reached her arms around him to give him a big hug. He looked down and hugged her in return.\n\nWhen she pulled back her face was glowing! \"That was WONDERFUL!\" she cried. \"I haven't danced like that in years! It was so freeing! It felt like we were flying! Oh Ben, I'm going to sculpt the hell out of you!\" she giggled, drunk on adrenaline.\n\nAlexis and B\u00e9atrice looked at Gabriella and collected Stephanie from Ben. They walked her back to the house.\n\n\"Who taught you to dance, Ben?\" Gabriella asked gently.\n\n\"Mrs. Cosburn.\"\n\n\"BEN!\"\n\nHe looked up from his seated position on the grass at the frightened expressions of the women kneeling next to him.\n\n\"What happened?\" he moaned as he held his head. He had a thumping headache.\n\n\"Does your head hurt?\" Catherine asked.\n\n\"Yeah, a lot.\"\n\n\"I think that's enough excitement for tonight. Time for bed everyone,\" Gabriella said. She and Catherine helped Ben to his feet and held his arms as they led him back into the building and up to his floor. They took him into his room and closed the door. He brushed his teeth, took off this clothes and climbed into bed while they watched. He was still a bit dazed. Gabriella leaned over him and gave him a kiss then Catherine did the same. He closed his eyes and seemed to drift off.\n\nThe two friends stepped out into the hall. Daniel was standing there. \"I got the entire thing on film mom. Maybe his doctor should see it.\"\n\n\"Good thinking! Can you send it to her somehow?\" Gabriella asked.\n\n\"Yeah, I can render a smaller version then upload it to my cloud account and send her a link,\" he said then grinned at his mother's blank look. \"Yes, if you give me her email address.\"\n\n\"You could have started with that,\" she scowled. \"I'll send you her address.\" She looked at Catherine. \"I think I'm going to give Hannah a call. She's probably still at her office. Let's go down to the living room to make the call.\" Catherine nodded and the others went to their rooms to prepare for bed.\n\nAlexis and B\u00e9atrice met them at the base of the stairs. \"Is Ben ok?\" Alexis asked with a worried expression.\n\n\"He should be fine in the morning. He has some repressed memories which surfaced a few months back and they seemed to submerge again after he was stabbed. They seem to be leaking out again. We're going to call a friend of ours, another neighbor who is also the hospital administrator where Ben's doctor works,\" Gabriella said and they all walked into the living room.\n\nGabriella dialed the number and listened for Hannah to pick up.\n\n\"Hannah Cooper.\"\n\n\"Hannah? It's Gabriella. Can I put you on speaker?\"\n\n\"Gabriella! Sure, wait! Aren't you still on vacation? Has there been some trouble?\" Hannah blurted.\n\nPutting the phone on the coffee table Gabriella turned on the speaker phone. \"Can you hear me clearly?\"\n\n\"Yes, now what's wrong? Is Ben ok?\" Hannah insisted.\n\nAlexis and B\u00e9atrice smiled hearing the concern in her voice and Catherine nodded.\n\n\"I have Catherine with me as well as my cousin Alexis and her wife B\u00e9atrice. Ben is fine but his repressed memories are beginning to resurface again,\" Gabriella explained.\n\n\"Hello everyone! How did it happen this time?\" Hannah asked.\n\n\"He was dancing. He dances beautifully but he couldn't recall who taught him. Tonight he was dancing with my cousin Stephanie and his face went blank and he began to dance faster and faster and left the gazebo entirely to dance outside. We had to chase after them. When he surfaced from the trance he didn't know how he'd gotten outside and when I asked him again who taught him he said Mrs. Cosburn and dropped to the ground like a stone. Scared the hell out of us. He surfaced immediately with a bad headache so we brought him inside and put him to bed. He went out like a light. I'll get Daniel to send you and his doctor a link to the video he took of the event.\"\n\n\"You got it on video? Excellent!\" Hannah said. \"Any chance you can bring him back early?\"\n\n\"I seriously doubt Ben would agree to that. We still have a week to go but he's going to stick close to the chateau for the next two days doing renovations and you know how therapeutic that is for him,\" Gabriella said and Alexis looked pleased.\n\n\"Yes, that will do him a world of good,\" Hannah agreed and Alexis' smile just got bigger and B\u00e9atrice held her hand.\n\n\"Please let Ben know that Trish picked up Tina and Lucy at the airport yesterday and all are good. We all met them at Ben's place last night. That's when she told us the news about their baby and getting engaged. The ring is stunning! Shocked the hell out of Trish! I've never seen her so stunned. Tina had a talk with her and afterwards there was a lot of happy tears. Rochelle also seemed a little upset but Tina set her straight as well. For a submissive she certainly can be a force to reckon with!\"\n\n\"She's protecting Ben's heart. No one is as fierce as Tina when it comes to protecting Ben,\" Gabriella said with a smile.\n\n\"Listen, thanks for giving me a call. You know I was one of the people trying to get Ben to postpone the trip. I know he needs the distraction and relaxation but I'm still worried about his state of mind,\" Hannah said.\n\n\"We're keeping a close eye on him Hannah. We'll keep you in the loop if there are any other changes,\" Gabriella said and everyone said their goodbyes.\n\n\"I'm a little too wired to go to bed now,\" Catherine said.\n\n\"How about a drink? I have a delightful red wine that serves well as a nightcap,\" B\u00e9atrice suggested.\n\nShe got three smiles as her answer.\n\nChapter 12\n\nRachel was tossing in her bed. She was worried about Ben. As amazing as he looked naked, and erect, all she could think about was how the guy was being tormented by his childhood memories. His doctor had some ideas of what they were and maybe Hannah knew but they hadn't shared that with them so she felt powerless to help him.\n\nShe needed to talk to someone. She looked over at Megan who was snoring softly. Maybe Sophia was up. Rachel slipped out of bed and left her room, closing the door silently behind her. She padded down the hall and stopped when she heard something. Someone just cried out in fear. She moved forward and realized it came from Ben's room. She opened the door and stepped inside. He was sitting up in bed wide eyed, gasping for breath and shaking. Her heart went out to him.\n\n\"You ok, Ben?\" she said gently. His head turned in her direction but he didn't say anything. She got closer to the bed and in the dim light saw his eyes were casting around like he was looking for the danger that awoke him. Then she noticed that he'd kicked his sheets down and he was naked again. Pulling her eyes away from that she moved closer and reached out to place her palm on his cheek. He immediately leaned against it and began to relax. Before she could move his arm swept out and pulled her onto the bed and tucked her up against the side of his body.\n\nRachel gasped as the heat of his body pressed against her. God he felt good! She looked up and his eyes were closed. She felt his trembling stop as his body relaxed.\n\nShe tried to extricate herself but his arm just tightened when she moved away. She glanced down and saw she'd left the door open. Hopefully her mom and Gabriella would be back soon and would look in on him. Then they could help her get loose.\n\nShe relaxed against him as she really had no other choice at the moment. He felt so good. She'd just rest her eyes until her mom found her. Sleep dragged her under quickly.",
        "An hour later Gabriella and Catherine came upstairs feeling a little tipsy. The wine had been very good indeed. Gabriella kissed Catherine's cheek then wobbled off to her room and went to bed. Catherine headed for her room and noticed Ben's door was open. They must have forgotten to close it properly. She quietly pulled it closed then went to bed.\n\nRachel woke in the darkness with the most exquisite feeling of a tongue lovingly caressing her pussy lips. She couldn't feel her panties and her nightie was pushed up. The tongue dipped deeply into her and she slapped her hands over her mouth so she couldn't give her identity away. She didn't want Ben to stop what he was doing... ever. She writhed as he sent shocks of pleasure through her tender flesh. He thrust a thick finger inside her as he sucked on her clit and she trembled through a series of small orgasms. She was dripping with excitement and she heard him growl with need. She almost squeaked with excitement. He wanted to fuck!\n\nBen moved up on the bed and kissed her deeply. His tongue was so demanding.\n\nThen she felt it. Thick, hot, and incredibly hard. His cock was pushing against her wet opening and her mouth opened in a silent scream as it forced its way inside her. He was SO FUCKING BIG! She'd had sex with a few boyfriends in the past but none had a cock like this. It stretched her wide and she almost fainted. It was on the borderline of pain but the tingling was so intense it blotted out all other sensations.\n\nHe finally reached bottom and bumped his pelvis against her clit with an explosion of sparks. He held himself there getting accustomed to her tightness and heat, grinding against her with delicious pressure. Then he pulled back and slammed it home slapping her clit. This time she couldn't stop the squeak. She heard an answering growl of satisfaction as he pulled back and thrust forward again. Slap! Pull. Slap!\n\nBen began to move faster and faster until he was pounding Rachel's pussy into the mattress. All she could do was hang on for dear life. Her orgasm started after the seventh impact and climbed higher and higher wiping her mind clear of everything outside of the sensation of his hard thick cock driving into her. He curled over her body and brought his mouth down beside her ear. He was growling constantly now and hammering away at her.\n\nHis body stiffened and Rachel had a moment of clarity as she realized he wasn't wearing a condom. Just as he pulled back for his last thrust she pulled her hips up then arched her ass down causing his cock to ride up and over her clit between their bellies. Ben's orgasm struck and his cum sprayed up between them. He groaned and kissed her neck sending a huge arc of electricity between there and her pussy. He ground against her and she rocked through aftershocks each time he slid his cock against her clit.\n\nWhen their breathing returned to normal he kissed her tenderly. \"Goodnight Catherine,\" he whispered and rolled over onto his back beside her.\n\nRachel lay on the bed feeling lightning race up and down her nerves as her pussy recovered from the intense pounding it had just received. She listened to Ben's breathing as it settled into a steady rhythm indicating he was asleep again.\n\nIt took her three attempts to be able to move to the edge of the bed. She gently slid off the bed onto her feet only to discover her legs were like jelly. She clung to the sheets until her legs returned to her. She couldn't see her panties anywhere and she had to hold her nightie up above her tits so it wouldn't touch the cum Ben splashed on her.\n\nRachel tiptoed out of Ben's room and snuck back into hers. As she headed for the bathroom the end table light went on next to Megan's bed. She looked at her sister.\n\n\"Why are you naked? What's that on your stomach?\" Megan asked. Then her eyes went wide as Rachel's eyes held guilt in them. \"What did you do?!?\"\n\n\"Let me get cleaned up first,\" Rachel mumbled and rushed into the washroom. She cleaned her stomach with a damp facecloth then dried herself. She dropped the nightie into place and walked back out to face her younger sister.\n\n\"Spill it!\"\n\nRachel looked at her stern expression and sighed. She knew this was going to complicate things.\n\nBen woke up feeling refreshed and stretched mightily on the bed. He felt an odd sensation on his stomach and looked down to see dried cum on his skin. He frowned then a hazy memory of his romp with Catherine came back to him. He looked over at the other side of the bed but she wasn't there which was a little odd. Maybe he slept in? Nope. The clock showed it was still early.\n\nSomething was tangled around his foot. He brought it up and discovered it was a pair of panties. Very feminine. He put them on the end table and walked into the washroom to have his shower. Luckily the cum didn't get on the sheets. That spared him a little embarrassment.\n\nCatherine heard a knock on her door as she and Sophia were just waking up. \"Who is it?\"\n\n\"Megan and Rachel.\"\n\n\"Come in.\"\n\nThe two daughters entered and Catherine saw a guilty look on Rachel's face and a grim look on Megan's. \"What's wrong?\"\n\nMegan just looked at Rachel with a raised eyebrow. She nodded and stepped forward. Carefully. Catherine knew that walk. Her eyes widened and her jaw dropped. Rachel held up her hand.\n\n\"It wasn't intentional.\"\n\n\"What the hell does that even mean?\" Cat squeaked.\n\n\"I was going to speak with Sophia last night and I heard Ben scream in his sleep. I went into his room to see if he was ok. He looked frightened and his eyes were wide open but I don't think he was awake. He was sitting up and trembling so I touched his cheek. He pulled me onto the bed against him and went back to sleep. I couldn't free myself from his grip but I'd left the door open so I hoped you or Gabriella would notice and come help me. I guess I fell asleep.\" Then she blushed crimson.\n\n\"What happened?\" Sophia asked.\n\n\"I woke up in the middle of the night feeling a mouth on me... down there. It was so good I didn't want to stop him. I know I should have but... it was so good! I had these wonderful orgasms and was coming down from that when he was on me... and in me. He's so big and he was so... aggressive!\" Rachel gushed.\n\n\"You didn't have a condom!\" Sophia gasped.\n\n\"I know so I made him pull out before he came. Considering his count the chances of getting pregnant are pretty much nil,\" Rachel explained. She looked at her mother. \"He thought I was you. Afterwards he kissed me and said 'goodnight Catherine' so he didn't know, but my panties are still in his room.\"\n\nCatherine looked at her guilty daughter with a conflicted expression. A small part of her wanted to screech 'MINE!' but she knew that wasn't the direction to go. She and Gabriella had already talked about this possibility. Still, Ben was a little fragile at the moment so springing this on him may not be the best thing. She needed to speak with Gabriella.\n\n\"Ok, this is what we are going to do for now. For today we let Ben think it was me. We won't lie to him but we will play along with his assumption. I will speak with Gabriella and we will work out when to tell him. Rachel, if you had told him it was you and he went ahead there would be no trouble. But in his current state we have to be careful of the shocks we give him,\" she scolded her daughter gently.\n\n\"I'm sorry mom!\" Rachel looked miserable.\n\n\"Come here sweet pea!\" she said opening her arms.\n\nShe hugged her daughter and wiped the tears from her eyes when she held her back. \"A little sore?\"\n\n\"God, yes!\" Rachel winced.\n\n\"Worth it?\" Sophia asked.\n\n\"God, yes!\" Rachel smiled.\n\n\"Ok, everyone get showered and dressed. We have an early start and a two and a half hour drive to get to Turin. Let's get cracking!\" Cat rallied her daughters. She looked at them fondly as they got moving. She pulled on her dressing gown, walked over to Ben's bedroom and knocked gently. She heard him call out to enter. She opened the door and stepped inside.\n\n\"Good morning Ben!\" She saw he'd already showered and dressed in shorts and a t-shirt. Ready to renovate!\n\n\"Ah there you are! You left something behind,\" he said lifting the panties from the table.\n\nShe walked up and plucked them from his fingers and kissed him as she tucked the panties into her dressing gown pocket.\n\n\"We're all getting an early start today because we have a long drive. Why are you up so early?\" she asked.\n\n\"Eager to get started. There are only two days and I have a lot of rooms to finish. They did the top floor first and got much of the second done before the workers were too intimidated. They're just older local tradesmen and that asshole down there made some pretty bad threats to them if they help the evil lesbians. I don't understand tiny little minds like his.\"\n\n\"Well, you keep an eye out for that asshole. He has a gun and I don't want any more bullet holes in you,\" she said as she rubbed herself against his chest and slipped her hand under his t-shirt to rub his bullet scars.\n\nHe growled his approval of her hand on his skin but she pushed herself away. He grabbed her hand and pulled her back. His mouth was on hers and he kissed her deeply as she moaned and whimpered. Finally she pushed her face back from him.\n\n\"Wait! I can't... I have to get moving! If we keep this up I'll hold up the group!\" she gasped as she ground herself against his bulge.\n\n\"Fine, but I want you in my bed again tonight!\" he said with a growl and a hot look.\n\n\"Yes!\" she gasped and he released her. She staggered to the door and closed it behind her as she leaned against the door jamb, panting. Gabriella was standing in the hall looking at her with a wide smile.\n\n\"Had a good night?\" she asked the blond.\n\n\"Actually, I need to talk to you about that. Follow me,\" Cat said and went into her room. Once Gabriella closed the door she explained what happened with Rachel.\n\n\"I didn't even see his door was open, I was so tipsy,\" Gabriella said with a frown.\n\n\"And I closed it. I should have looked in.\" Cat agreed.\n\n\"You're right, let's hold off on filling him in. How is Rachel?\"\n\n\"Sore but dreamy eyed about her night just the same,\" Catherine smiled.\n\n\"Weren't we exactly the same?\" Gabriella asked with a smirk.\n\nCat thought about that. \"Yes, I guess we were.\"\n\nSophia came out of the bathroom with her towel wrapped around herself.\n\n\"When are you planning on making your move?\" Catherine asked.\n\nSophia was wide eyed as she looked at her mother.\n\nGabriella just laughed. \"I'll see you at breakfast.\"\n\nCat grabbed some new underwear, dropping Rachel's off on her bed with a raised eyebrow at Sophia, then went in to take her shower.\n\nGabriella met Alexis downstairs and gave her a hug and kiss.\n\n\"Sleep well?\" Alexis asked as B\u00e9atrice walked up to join them and got her own hug from Gabriella.\n\n\"Yes, especially after that nightcap. Delicious but potent!\" Gabriella smiled.\n\n\"When are you going out to get the clay?\" Stephanie said as she pushed through the private door into the hallway.\n\nAlexis rolled her eyes. \"Now I remember what a nag you can be when your creativity is upon you!\"\n\n\"Nag?!?\" Stephanie squeaked. \"I'll have you know I am the soul of patience... when I'm not under the control of my muse,\" she finished in a haughty tone.\n\nThe others chuckled. \"Come on Artiste! Get some breakfast. Feed your body before you feed your soul,\" Alexis barked.\n\nDaniel was already at the table with Miriam eating their breakfast. The others grabbed a plate and filled them from the heating trays on the sideboard. They took their seats and dug in. Ben came in and said his good mornings to everyone. He then kissed Gabriella, Catherine and Miriam, on the cheek.\n\nHe made his way to the sideboard but Marie intercepted him and directed him to sit. He raised his eyebrows but did as he was told. She went into the kitchen and returned with a large plate with steak and eggs on it. There was also some toasted baguette and little baby potatoes. Ben's grin was all the praise Marie needed but he kissed her hand before she could get away. She blushed and rushed back to the kitchen.\n\n\"Hey! No stealing our chef!\" B\u00e9atrice grinned.\n\nBen breathed in the scent of his breakfast. \"No promises!\"\n\n\"Due to the amount of work we'll have you doing over the next days the least we can do is give you enough food to charge your batteries,\" Alexis explained.\n\n\"Much appreciated!\" he grinned and started to eat. His look of bliss said it all.\n\nSophia arrived and went directly to Ben who dabbed his mouth with his napkin then leaned back to give her a kiss. Megan arrived and Ben kissed her cheek and Rachel was last and moving slowly. Ben frowned as he saw her wince.\n\n\"Are you ok Rachel?\" he asked.\n\n\"Yeah, just slept... funny. Pulled something.\"\n\nSophia was at the sideboard with her back to the group but she snorted then apologized for the noise.\n\nRachel was heading in her direction but veered over to Ben and got a kiss first. Then she walked over and swatted her sister's arm behind Ben's back.\n\nHe ate for a bit then watched Rachel settle herself into her chair. \"You know, if it's a pulled muscle I could massage it for you. Work out the kink.\"\n\nSophia was trying desperately to keep from laughing and doing a poor job of it. Ben glanced her way with a confused look and she pointedly looked away.\n\n\"No Ben. It's ok. I'll rest in the car and I'm sure it will go away. Thanks though,\" Rachel smiled.\n\n\"OW!\" Sophia yelped and reached for her shin.\n\n\"Girls!\" Catherine scolded and the two settled down to eat their breakfast.\n\nOnce breakfast was done Gabriella and Catherine loaded their kids in the van and with a wave they set off for Turin.\n\nAlexis and B\u00e9atrice were right behind them. They were headed in the opposite direction and had the list of items Ben had written down for them. They were also driving a van but it was definitely more for cargo than passengers. Perfect for this trip.\n\nMarie passed them with a smile as she headed out to do the grocery shopping. Then it was just Ben and Stephanie.\n\nHe walked back into the chateau with her. \"When is that fellow Richard going to be here?\" he asked.\n\n\"He said sometime this morning. Hopefully soon.\" She looked nervous. \"Would you mind keeping me company? I don't like being alone. Now.\"\n\n\"Certainly.\"\n\nThey walked back to her room and took seats. Ben looked around the room at the sculptures lining the shelves. Dozens of dancers in a row in various poses. Obviously her love of dance had fed her art.\n\n\"Your sculptures are beautiful!\"\n\n\"Thank you.\"\n\n\"Are they all dancers?\"\n\n\"Most. Occasionally I try my hand at other subjects but they lack the passion,\" she frowned.\n\n\"But you're going to sculpt me?\" he asked cautiously.\n\nHer smile came back. \"There is no lack of passion in you! I felt it in your body as I mapped you. The scars you carry both outside and in. Your love for the women in your life. So much passion! I'm vibrating with the energy I picked up from you and I must pass that into the sculpture as soon as possible. That's why it needs to be so much larger than my previous work. I can't contain this in a tiny figure!\"\n\nBen smiled at her enthusiasm.\n\nThere was a gentle chime and he looked up. \"What was that?\"\n\n\"That's someone driving into our lane. It may be Richard or a potential new guest,\" she said.\n\nBen walked out to the front door with her and stood next to her. He saw a distinguished looking man carefully extracting a four foot tall wire figure from the back of his SUV and turn towards them. He spotted Stephanie and smiled then he looked at Ben and his smile froze. He looked back at the wire armature and Ben saw something pass across his face. He closed the car door and walked towards them.\n\n\"Good morning Stephanie! I have the armature you requested,\" he said, his voice was deep and hinted at his British origin.\n\n\"Good morning Richard! Thank you so much for making it so quickly and on such short notice! May I introduce my cousin's good friend and neighbor Ben Shepherd? Ben, this is my good friend and fellow sculptor Richard Garrison. Richard is a master with bronze and will be working with me on this piece. He and his partner Henry Desjardins own the B&amp;B a short distance from ours further up the mountain.\"\n\nBen shook Richard's hand with a smile. His grip was firm and there was strength in his arm. The man had a close shaved beard and warm brown eyes. His neat brown hair was just starting to show some grey at the temples and Ben thought the man might be a little older than him. He looked fit and dressed impeccably which made Ben feel terribly underdressed in his shorts, t-shirt, and sandals.\n\n\"A collaboration? You're not making a clay sculpture?\" he asked Stephanie.\n\n\"It starts with my clay sculpture but then we'll make a mold of that and Richard will make a bronze sculpture from that,\" she explained.\n\n\"Are you a model?\" Richard asked carefully.\n\nBen snorted. \"Sorry. No, I'm a semi-retired Mechanical Engineer.\"\n\n\"Semi-retired?\" the man repeated.\n\n\"I like to keep my finger in the game so I do piece work now and then,\" he explained.\n\n\"If you don't mind me saying so I can see why Stephanie was so enthusiastic to sculpt you,\" Richard said with a smile and Ben blushed.\n\n\"Oh Richard! You have no idea!\" Stephanie reached out and tapped at Ben's chest. \"Ben, show him your chest.\"\n\n\"No that's quite alright,\" Richard began and Ben looked at the woman in surprise.\n\n\"Please Ben!\" she begged.\n\nHis blush heating up his face Ben tugged his t-shirt up and off.\n\n\"Oh my lord!\" Richard said as he took in the solid muscles... and the scars. \"What- what happened to you? Are those stitches? Some of these are fresh?!?\" His voice was starting to sound strained.\n\n\"A few months back I was stabbed repeatedly by...\" His head began to hurt. \"...an abusive husband after I stopped him from killing his wife. The fresh ones were from a fight I got into while we were in Paris. Turned out to be a serial killer. Ca- The police shot him before he got me.\" Ben massaged his temple to get the thumping to settle.\n\nRichard was looking down at the three bullet scars. He pointed with wide eyes.\n\n\"Oh, yeah. A pedophile shot me as he tried to abduct Gabriella's daughter. I killed him,\" Ben said with a grim look and his facial scar flared.\n\nRichard felt a chill run through him and suddenly he understood Stephanie's compulsion to begin. He reached out and took Stephanie's hand and she smiled broadly as she felt his hand trembling. She could tell he understood.\n\nThere was a sudden sharp sound of glass breaking behind them in the chateau. Ben's eyes went cold. He pulled his phone from his pocket and started the video app. He handed it to Richard.\n\n\"I thought he might do this. Please follow me and record this. Stephanie, please go back to your bedroom and lock the door. Call the police,\" Ben said with a cold voice and handed her his t-shirt.\n\nHe turned and walked back through the house quietly, Richard at his back holding the phone out in front of him.\n\nBen pushed into the hall leading up to the front door of the chateau. Standing in the vestibule was Arsene Dumond. He'd broken a pane of glass on the door and reached in to unlock it.\n\nThe man focused his deep set eyes on Ben and glanced at Richard behind him. Seeing Ben topless with the homosexual following him led him to believe Ben was gay as well. Equally deserving of his wrath. He felt sickened by the abominations before him.\n\n\"Arsene Dumond! You are guilty of breaking and entering. Were you coming back to sexually assault Stephanie again?\" Ben called out clearly. He smelled the reek of body odor and alcohol pouring off the man.\n\nRichard gasped behind him. Ben guessed that Alexis hadn't shared that particular detail with him.\n\nSuddenly Arsene swung his heavy walking stick at Ben's head. For all his fat the man had muscle underneath. Ben ducked but the stick got a glancing blow off the side of his head.",
        "But before Arsene could swing it again Ben leapt forward and plowed his fist into the man's bulbous nose. The impact took the heavy man right off his feet and he fell onto his back with a loud thump. Ben staggered and went down on one knee as reaction set in from the blow to his head. Arsene rolled over and scrambled out the door on hands and knees cutting himself on the broken glass in his haste. Blood was gushing from his flattened nose. He pushed himself up and hobbled away as quickly as he could.\n\nBen watched him go. He pushed himself to his feet then turned to Richard. \"Did you get that?\"\n\nThe man with the phone was wide eyed and shaking. He nodded and handed the phone back to Ben who saved the movie. He sent a copy to his online storage immediately.\n\nWhile he was working on the phone Richard stepped closer. \"You're bleeding!\"\n\n\"What?\" Ben asked.\n\n\"Your scalp. It's bleeding!\" he explained.\n\n\"Badly?\"\n\nRichard looked closer. He pulled his phone from his pocket and made a quick call. He spoke rapid French to someone and hung up. \"Henry is on his way with his suture kit. He was a doctor before he retired. Let's get that cleaned up.\"\n\n\"We have to let Stephanie know we're ok,\" Ben said.\n\n\"Right. You go sit in the kitchen while I get Stephanie,\" Richard instructed and Ben did as he was told. There was a small table for three against one wall and he pulled out a chair and noticed he had blood dripping down his chest. Probably from his scalp wound.\n\nHe heard an odd warbling sound and realized it was probably the police. Faster than he expected but that was a good thing.\n\nRichard stepped back into the kitchen with Stephanie holding his arm.\n\n\"Ben?\" she called out.\n\n\"Here.\"\n\nShe turned towards the sound of his voice and approached.\n\n\"Careful, I'm kinda covered in blood,\" he warned. She stopped and gasped.\n\n\"Arsene's?\" she asked.\n\n\"No, mine. He clocked me on the head with his walking stick and cut me. Scalp wounds tend to bleed a lot,\" he explained calmly.\n\n\"Arsene's blood is all over your front hallway. Ben crushed the man's nose. I swear there was nothing left of it! I've never seen anyone get hit that hard!\" Richard gushed.\n\n\"POLICE!\" shouted a voice from the back door.\n\n\"In the kitchen to your left!\" Stephanie called out.\n\nThe door opened and two men in uniforms came in and took one look at Ben and started shouting at him in French. Richard started barking back at them and they stopped to look at the man. The kitchen door pushed open once more and another well-dressed man carrying a doctor's bag stepped in.\n\n\"Ah! Henry, your patient is here!\" Richard said pointing to Ben. Richard then spoke to the police in French and gave them his statement.\n\nBen looked up at the man standing before him. He looked like a blond version of Richard. Maybe just a little older. \"Hello.\"\n\nThe man nodded and went into doctor mode. He moved to the sink and got some clean dishcloths. He filled a large bowl with water and brought it back to the kitchen table. He cleaned the wound and pursed his lips.\n\n\"Monsieur, you will need four stitches. I do not have any pain killers,\" Henry said apologetically.\n\n\"It's ok, go ahead,\" Ben said wearily.\n\nHenry nodded briskly and efficiently began to stitch the wound closed. Ben gritted his teeth as the needle passed through his flesh but Henry was quick and it was soon over. He patted Ben's shoulder with a smile to indicate he was done.\n\n\"Thank you,\" Ben said.\n\n\"The police would like your statement,\" Richard said.\n\nInstead Ben queued the video on his phone and played it for the police who watched wide eyed. When it was over one of the officers left to see the scene and returned with the walking stick in his hand. They spoke to Richard and Henry and the former looked over at Ben.\n\n\"They would like to take your phone as evidence. I told them this was not possible. Will you send them the file?\" he asked.\n\n\"Of course. Just get the address and I'll send it,\" Ben said.\n\nHenry wrote it down on a notepad he found on the counter. The police said something about 'Dumond' then left.\n\n\"They will now go to arrest Arsene. There is a clear case of break and entering as well as assault. The video is very convincing.\" Henry showed Ben the address and he emailed a link to the online version of the file to it.\n\nBen sat back and rested his throbbing head against the wall. Henry finally got a good look at his chest.\n\n\"You have been a soldier?\" he asked Ben.\n\nBen looked at him in surprise and chuckled. He shook his head no. He looked to Richard to explain and the man did in French. Henry's eyes widened in surprise.\n\n\"He is a hero!\" Henry said and Ben glared sharply at him then calmed himself.\n\n\"I see you do not like to be called that,\" Henry said quietly.\n\n\"My apologies but no,\" Ben replied.\n\nHenry looked at Richard with raised eyebrows.\n\n\"He is the subject of your next piece?\" he asked. Richard nodded quickly. \"Good,\" he said and Richard smiled and gave him a kiss. They glanced nervously at Ben but he didn't react negatively so they relaxed.\n\nStephanie made her way over to Ben and reached out to feel his face. She leaned down and kissed his forehead. \"Thank you for protecting me against Arsene. He is a monster! We may finally be free of him!\"\n\n\"I hope so because he packs a mean wallop!\" Ben said, wincing as he gingerly touched his scalp.\n\n\"Do not touch your stitches!\" Henry scolded.\n\n\"Sorry Doc!\" Ben said. Henry had the most surprised and genuinely pleased look on his face. Richard started to laugh with delight.\n\nBen looked at him curiously.\n\n\"Henry has waited his whole life for someone to call him that! Especially with an American accent!\" the man chuckled and hugged his partner who blushed but still looked very satisfied.\n\nMarie returned with her groceries and said hello to the two men. Then she took in the doctor's bag and the bowl and blood stained towels. She finally saw Ben sitting shirtless at the table with the stitched gash on his scalp. She squeaked in surprise and began to speak in very rapid French. Henry responded and afterwards she rushed over and gave Ben a kiss on his forehead. He grinned and thanked her.\n\n\"Where is my t-shirt?\" he asked Stephanie.\n\n\"It is in my room,\" she said with a blush. \"I'm afraid I may have gotten it wet with my tears as I was crying a bit.\"\n\n\"Oh, that's ok. I'll go upstairs and get a new t-shirt. I want to clean up that broken glass and maybe patch that door. You wouldn't happen to know of any good local glaziers would you?\" he said to Richard and Henry.\n\n\"I'll make a call,\" Richard said with a smile.\n\n\"Thanks! Are you sticking around for a while?\"\n\n\"No, we have to get back to our business. New guests are arriving this afternoon. It was very nice to meet you!\" Richard said.\n\nBen shook his hand and Henry's.\n\n\"Thanks again Doc!\" Ben said with a smile and Henry's face blossomed into a wide grin.\n\nRichard rolled his eyes and ushered his partner outside.\n\nWith a nod at Marie, Ben headed up stairs and got himself a new shirt then went back to ask Stephanie where they kept the brooms, dustpans, mops and buckets.\n\nHe took some pictures of the damage before he began then he cleaned up the mess. The carpet would need to be washed as there was a significant amount of blood on it.\n\nHe was outside in the gravel parking lot hosing down the carpet when a small pickup rolled into the lot. A tiny, old gentleman stepped out of the car and walked over to Ben and started to speak to him in French. Ben held up his hand and shook his head then walked over to the back door and called for Marie. She came and spoke to the man then looked at Ben.\n\n\"He is here to fix the glass?\" she said to Ben.\n\n\"Ah! Could you show him the front door? That's where the damage is,\" Ben replied.\n\nShe nodded and spoke to the man who smiled and waved at Ben. They walked away and Ben went back to the carpet.\n\nMoments later Alexis and B\u00e9atrice drove in the parking lot and brought their van close to the back door. They got out and walked over to Ben who shut off the hose.\n\nB\u00e9atrice looked down at the pink water and grinned at Ben. \"That better not be my favorite wine you're washing out of our carpet.\"\n\n\"No, that's blood.\"\n\n\"WHAT!?!\" both women yelped.\n\n\"Arsene's blood,\" he clarified taking his phone out of his pocket. He queued the video and played it for them.\n\nThey watched with shock as Ben confronted the big man and screamed when he hit Ben with his walking stick and again when Ben knocked him down. Once it was over they both tugged at his shoulders so he would bend down to show them where he'd been hit. They saw the four stitches and cried out again.\n\n\"Wait! Who was shooting the video? Not Stephanie!\" Alexis barked.\n\n\"No, it was Richard. Stephanie was safe in her room calling the police. They've been here, saw the video and got the walking stick. Then they went to pick up Arsene,\" Ben explained.\n\n\"Oh my god Ben! I never thought you'd get hurt! I never would have agreed to go out today otherwise!\" Alexis said.\n\n\"Hey! It's no big deal if it gets that creep out of your hair. Besides I've had bigger injuries than this little scratch. Let's see what you've brought me!\" he said with a smile rubbing his hands together.\n\n\"You're still planning on doing the renovations?\" Alexis gasped.\n\nBen blinked at her completely puzzled. \"Why wouldn't I?\"\n\nAlexis blinked back at him and looked at B\u00e9atrice incredulously. The two women grabbed Ben in a tight hug which he returned as best he could from inside their grip. When they were slow in releasing him he pretended to try to escape their arms. \"Must... get... to... renovation... supplies...\" he gasped. They giggled and released him.\n\nAlexis turned to go into the house. \"I'm going to call the police to see if they have Arsene in custody. I'm going to insist they charge him with everything they can.\"\n\nBen and B\u00e9atrice nodded and she opened the back of the van for him. He started gathering up the bags and began moving everything into the house and up to a room on the second floor he was using as his staging area. Soon he had the van empty except for four large rectangular boxes.\n\n\"What's this?\" he asked.\n\n\"Stephanie's clay. Would you carry it in for her?\" B\u00e9atrice asked.\n\n\"Sure.\"\n\nThey were surprisingly heavy so Ben could only carry two at a time. He knocked on Stephanie's door and she opened it.\n\n\"Clay delivery for a Stephanie Murino?\" he said in his best delivery person impression.\n\nShe clapped her hands together in delight and stepped back. \"Please place it on the floor by the desk.\"\n\n\"There are two more to come,\" he continued in his silly voice as he set them down. He hustled outside and returned with the packages. \"That's the last of them!\"\n\n\"Thank you so much!\" she cheered.\n\n\"What? No tip?\" he sounded playfully outraged.\n\nShe reached up and touched his face. Then she pulled it down and gave him a peck on the lips.\n\n\"Wow! Wait 'til the boys back in the shop here about this delivery!\" he gushed and she giggled. Stephanie immediately turned to her clay and began carefully opening one of the packages.\n\nHaving been dismissed Ben left and went upstairs. He began organizing the purchases based on the rooms he was to complete. He saw he had everything he needed to get started and smiled at B\u00e9atrice who stood in the doorway watching him get organized. His stomach chose that moment to rumble loudly. She giggled and walked over to tug him to his feet and down into the kitchen. She pushed him into a chair and turned to the cook.\n\n\"Marie, we have a hungry man who needs to be refueled,\" she said with a smile.\n\nMarie raised her finger and went to the fridge. She brought out a plate with a large kaiser bun filled with chicken, tomato, lettuce and mustard. There was a side salad with a vinaigrette dressing and pickles. He had a glass of lemonade to go with it.\n\nBen thanked Marie and tucked into his meal. He made happy noises which made Marie smile as she turned back to preparing the evening meal.\n\n\"So you have everything you need?\" B\u00e9atrice asked and he nodded. \"Do you still think you'll be able to finish all of the work by tomorrow night?\"\n\n\"Not a problem,\" he said between bites.\n\nB\u00e9atrice's face lit up with a smile and she giggled with glee which made Ben smile. She said something about a website and rushed off after kissing Ben's cheek.\n\nAs soon as he was finished he swooped over to Marie and gave her a kiss on the cheek which made her squeak. He thanked her for the meal with a smile and she blushed furiously but she was smiling when he left to go upstairs.\n\nStephanie was waiting for him by the Private door. When she heard him she called out to him.\n\n\"Yes?\" he answered.\n\n\"It's time.\"\n\nHe looked upstairs where the renovation work waited for him and sighed. He'd promised.\n\n\"How long will the posing take?\"\n\n\"No more than fifteen to twenty minutes tops. I pose you. I map you in my mind. Then you are free. I may call on you for a few refreshers which would only take a minute.\"\n\n\"Ok, let's go.\"\n\nBen followed Stephanie back to her room. He entered and noticed her window blinds were drawn. She closed the door behind him.\n\n\"Ok, please take off your clothes,\" she said.\n\nHe grimaced and once more got naked in front of her. This time he knew what to do. \"I'm ready,\" he said.\n\n\"Do you see the two boxes on the desk? Place one on the floor before your left foot. I know the pose I am going to sculpt you in but I need to figure out how high your left foot should be,\" she explained.\n\nBen moved the larger of the two boxes to the floor and put his left foot up on it. \"Ok, my foot is on the higher one.\"\n\n\"I'd like you to stand comfortably. Hands at your sides relaxed. Look straight out and raise your right hand like you are going to shake someone's hand in a relaxed way.\"\n\n\"Done.\"\n\nShe moved forward and quickly ran her fingertips over his body then stood back. \"Your leg is too high.\"\n\nBen switched the two boxes and put his foot on the shorter one. The position was more comfortable. He moved back into the pose. \"Ready.\"\n\nOnce more Stephanie ran her fingers down his body but this time she smiled. \"Yes. This feels right. I'm going to do the mapping now. Relax into the pose and hold it. Keep your eyes open this time. I promise not to poke you in the eye.\"\n\nBen took some deep breaths and allowed his muscles to relax. \"Ready.\"\n\nStephanie reached up and ran her fingers over his forehead and he watched her fingers moved closer to his eyes. True to her word, her fingers passed around his eyes but did not enter them. He was fascinated by her process so this time he didn't get stimulated and remained relaxed. She reached his neck and he saw her intense concentration. Her fingertips played over his shoulders and she moved to the side to map out his right arm then she did his left. She moved to his back and ran her hands over his shoulders and down his back to just above his ass. She moved back to his front and felt his chest and paid especially close attention to each scar which made him wonder at the level of detail she needed for this sculpture.\n\nHe looked again at the shelf of dancers and took comfort in their grace and faceless anonymity.\n\nStephanie reached his pelvis but again, he wasn't thinking sexually so he remained relaxed. Once more her expression intensified and she spent considerable time mapping this area. She moved around to his back once more and began at his ass. She ran her fingers down over his right leg to his heel. She then did his left leg and moved around to do the fronts and map his feet. She sat back on her heels and remained quiet for a couple of minutes while he watched. She nodded.\n\n\"I'm ready. Please put the box back and dress. Close the door on your way out,\" she said, the intense look on her face never diminishing.\n\nFor some reason Ben felt an urgency to leave. He put the box back, tugged on his shorts and carried his other clothes out with him as he closed the door. He finished dressing in the hall then rushed upstairs.\n\nHe began the renovations with the largest room at the end of the hall and Alexis came to watch and help. He started with the plumbing and showed her how to install the sink and taps. While they worked he could see she wanted to ask something but seemed uncomfortable.\n\n\"You know if you want to ask me something you should just come out and say it. I promise not to let my sensitive male pride be offended,\" he grinned to take the bite out of his words.\n\n\"This morning at the breakfast table you kissed each of the women and aside from the two youngest those kisses were... intimate. From speaking with Gabriella I know she is more than just fond of you. But then Catherine behaves the same way and now Sophia and Rachel are kissing you like... lovers.\" She saw Ben was looking a little uncomfortable. \"I'm sorry to pry.\"\n\n\"No it's ok. I'm in love with both Gabriella and Catherine as well as Tina and Trish back home. I love them all with every fiber of my being. It's only been since we arrived in Paris that Sophia and Rachel started to insist on being kissed on the lips. I was used to kissing them on the cheek like Megan. She, thankfully, is keeping our relationship simple. I love all of Catherine's girls but I think Sophia and Rachel might be after something more... physical.\"\n\n\"Would that be bad?\"\n\nBen frowned. \"I used to see them as the little girls I watched grow up but I can't see them like that anymore. They're adults now capable of making those decisions for themselves. What I just can't understand is why they'd want to be intimate with someone so much older. They have so much potential and so much time ahead of them. They should be out there finding someone their own age. Someone with so much more to offer than me!\"\n\nAlexis looked at Ben with surprise at his outburst. She hadn't realized he had such a low opinion of himself. \"But Gabriella and Catherine and these other women love you. Doesn't that say you are worthy of love?\"\n\nBen looked away for a minute. \"Yes. You're right... it should.\" He gave himself a shake. \"We'd better pick up the pace or we may not be done in time for my departure.\"\n\nAlexis heard the request to change the subject quite clearly. She'd have to bring this up with Gabriella when they got back.\n\nThey turned their attention to the task at hand and quickly completed the plumbing work. They tested the water tightness of the system and moved on to the next room. Within a couple of hours they stood in the last room feeling a sense of accomplishment. The plumbing in every washroom on the second floor was operational. Sinks, toilets, showers, and tubs all functional and dry where they needed to be dry. The drains all drained quickly indicating good airflow which was a relief to Ben as fixing that could be costly and time consuming.\n\nThe electrical work had thankfully been completed and inspected and the wall insulation installed before Arsene scared off all the tradespeople. All Ben needed to do now was put up the drywall, tape it, mud it, install the ceramic tiles in each bathroom, and prep the walls for painting. Lastly some trim work to finish it off. So much for his sense of accomplishment.\n\nHe pulled Alexis with him to show her the magic of installing drywall. One room had sheets and sheets of the stuff stacked against the wall. He showed her how to measure, mark, score, and break the sheets as required. She caught on pretty quickly and they worked well as a team. They powered through the work, room after room, until hours later they plopped down on the floor of the last room looking up at the last wall they did, exhausted but happy.\n\n\"Taping and mudding is easy. We can finish that quickly once we get into a rhythm. Once we catch our wind,\" Ben breathed.\n\nAlexis had a huge grin on her face. She leaned over and bumped shoulders with Ben who smiled back."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "harem",
        "romance",
        "threesome",
        "lesbian",
        "oral",
        "anal",
        "group sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-shepherd-in-france-ch-02"
}