{
    "title": "Bibliophilia",
    "pages": [
        "What better place for a date than The Tattered Cover? It's only one of the most beautiful bookstores I've ever been to, and he pays attention enough to know that this is the way to my heart. I love books. And he knows. He really gets me. He arranged to meet me here and check at the front desk for a package for me. When I get there and tell them my name, they pull out an envelope for me. I thank the woman at the desk, and I'm intrigued as I open the expensive, thick bond paper. It feels like linen in my fingers and I can't help but linger over the richness of the creamy envelope. I open it carefully, making sure not to tear it and pull out a sheet of equally luxurious paper. \n\nI open the sheet and relish the sight of the handwriting. It's not calligraphy, but it's real handwriting and it's beautiful. I read...\n\n\"Babe;\n\nHere are a number of clues that will bring you to your eventual goal, which is two-fold. Collect your prizes along the way and use the enclosed card as a way to pay. If you manage to find them all, in my arms I'll allow you to fall.\"\n\nI look inside the envelope again and see that there's a gift card. I smile, thinking about how thoughtful he is. I turn my attention back to the letter and the first clue.\n\n\"#1: Although it's far too late for another, consider what baby would be conceived if we married our two favorite interests. Fiction is the truth in the lie, but non-fiction is where you'll find this guy.\"\n\nOur interests? I know what his is. Movies. But I like movies too. I start to head back to the movie section, but then I realize that if it was a non-fiction movie, he would have called it a documentary. What's my passion? Well, books, obviously, but I need to get more specific. I'm already in the best bookstore in Colorado. Music? Movie Music! I head to the information desk and ask where I could find a book on movie soundtracks. She points me in the right direction. I scan the shelves and pull out several books. I don't see anything that would be quite right. Finally, I see what it must be. A History of Film Music I pull it out and there's a little tag in the top. I found it! I open it to pull the slip of paper out. It's the same fine linen paper as the letter in my hand. I read excitedly, but then I begin to frown as I read what's written there. \n\n\"You're close my lady, but not close enough. I know this clue seems easy but finding it might be tough. But since you've made the wrong choice, I'll need to hear your voice. Head to the ladies' room and in the final stall you'll find a little box and I'll wait for your call.\"\n\nI put the book back on the shelf and head into the ladies' room. In the end stall I find a gift-wrapped box sitting on the baby changing station. I lock the door behind me and I'm pretty sure I know what's in the box. I open the package and see that I'm right. I see the package was opened and the remote control for this little vibrator has already been removed. There's a note in the box. \n\n\"I had hoped you'd make an incorrect choice. I cannot wait to hear your voice. Put this inside and you'll go for a ride. Call me when it's in and then I will begin.\"\n\nThere's a PS at the bottom that reads \n\n\"Take off your panties. I want you wet.\"\n\nI smile and remove my panties. He had instructed me to wear a skirt so when they're gone the only thing between me, and the world will be this fabulous little vibrator. I'm tingling with excitement. I'm really glad I made the wrong choice. I stuff my panties into my bag and slip the vibrator inside. It's easy because I'm already wet with anticipation and excitement of what is to come. I dial his number on my phone. It rings twice and then goes to voicemail. Before I get through the message, a warm sensation begins inside me, slowly increasing in intensity. I have to brace my hand against the wall because my knees threaten to buckle as the feeling starts to overwhelm me. Suddenly it cuts off and my phone beeps. I catch my breath and look at the text message I just received. \"Hint: Your favorite author.\"\n\nOkay, that's easy! I leave the bathroom and head directly to the Stephen King section. When I get there, another vibration races through my lower regions and then cuts off as quickly as it started. My phone beeps again. \"Is that really non-fiction?\" No, I guess monsters and alternate worlds aren't non-fiction. At least, not that we've ever been able to prove. I head over to the Non-Fiction biography section, though I can't imagine how this has anything to do with his interests. Another jolt races through my midsection and my phone goes off again. \"When you get closer, your pleasure increases.\"\n\nI walk down the aisle and the pulses get closer and stronger. Finally, I'm pretty sure I've found what I'm looking for. Stephen King at the Movies: A Complete History of the Film and Television Adaptations My breath catches as the vibrator nestled inside me rocks my world. I hold my breath and the bookshelf as pleasure courses through my whole body and I squeeze my eyes shut, waiting for the orgasm that I'm certain is about to rock me off my feet. I stand there with the wetness covering my thighs and cum silently, breathing heavy like I'm practically in labor. The phone goes off again and I open my eyes. \n\n\"Good girl. On to the next one.\" \n\nI squeeze my thighs together, relishing the delicious feeling of my fading orgasm, noticing the wetness as my thighs massage my quivering lips.\n\nI tuck the book under my arm and stash my phone back in my bag. I read the next clue in the letter.\n\n#2 \"You were running with a bag of rocks. You wrecked your hip but not your box. When you've done fixing your break, here's some more trails you can take.\"\n\nOkay, I think this one will be easier. Trail running. Guidebooks. I head over to the map section and begin to scan the shelves for something on mountain trails. A nice long vibration tells me I'm on the right path. I gasp out loud, unable to help myself. I look around quickly as it slowly fades away and see that a couple of people have looked at me with curiosity, but no one looks alarmed and I'm fairly certain my face doesn't betray what's going on inside me. My thighs are slick with the honey of my pleasure. I walk down the shelf, fingers trailing over the titles, wishing I could touch the secret place between my legs and relish the feeling of my excitement. \n\nIt seems like there must be a thousand trail guides. If I make the wrong choice, I know I will be given another jolt and it almost makes me want to choose wrong. I choose the first one I come to and I don't see a slip of paper inside. I brace my hand on the shelf for what's coming and I'm disappointed that nothing does. My phone vibrates I pull it out. \n\n\"You won't get another until you find it.\" \n\nI frown in frustration. I have so many more to check before I get there, if I'm even in the right place. I assume I am since I haven't been told otherwise. \n\nI pull out three more books until I find the one, I'm looking for. Hiking Colorado A guide to the State's Greatest Hiking Adventures I open the front cover and I'm greeted with a scrap of that same rich linen paper. Suddenly my body is engulfed in an electric shiver of pleasure as the vibrator cranks up to an almost alarming rate. I have, apparently, chosen wisely. I lean back against the shelves and close my eyes as the pleasure sensations rip through me. I have to bend over at the waist with my hands clamped between my thighs, breathing steadily to keep from making any noise. The vibrations fade away slowly and I stand back up when I can and wipe the sweat off my forehead. \n\nI collect myself and then pull the slip of paper out of the book. \n\n\"Good girl. I hope you enjoyed your reward for a job well done. Are you ready for another one? Grab your tent and head out west. Experience the redwood forest.\"\n\nOkay. Tents. Redwoods. Camping! I think that section is around the corner from where I am, so I turn in that direction. The phone buzzes again so I read the text message. \n\n\"You're getting close already. By the time you get there, you'll be on the verge.\"\n\nI take a step and the vibrations begin, but very faint. As I walk down the aisle, they get stronger and stronger, but only distracting-not the full hurricane force as it was a few moments ago. I get to the end and turn right. The feeling is immediately gone. Did I make the right choice or the wrong one? It said that by the time I get there I'd be on the verge. I'm guessing that means that a right turn is the wrong way. I turn back in the opposite direction and the vibration returns. It's distracting to me now and making it difficult for me to think. But it's delicious all the same. And the fact that someone is controlling this makes me feel heavy with lust and excitement. \n\nThe next aisle is more guidebooks. I begin to walk down looking at the spines and am rewarded with a much stronger jolt. I know I'm on the right track. There's a full shelf of green Camping Destination books. I look at the titles and see the one I think I want on the bottom shelf. I get down to reach for it and suddenly my mind disappears as the silent orgasm blows through me. I drop to my knees and hold onto the bookshelf for dear life, as if I'm in danger of being blown away with it. My thighs are shaking under my skirt and I'm breathing like I'm in labor. I'm screaming silently inside my head, and still the vibrations haven't stopped. I realize I haven't selected a book yet. I reach out with trembling fingers to pull Guide to Campgrounds of the Pacific Northwest-Pacific Northwest Camping Destinations off the shelf. I open the book to find a slip of paper inside and the sensations diminish slowly. \n\nI read what's written on the slip of paper. \n\n\"To you, wrong word choice makes you boil. This guy could have helped but now he's making oil. I'm a fossil. I'm your fuel. To you this book is a precious jewel.\"\n\nI'm completely stumped by this. I haven't got a clue. My phone buzzes in my hand. I look at the text. \n\nIt's a picture of Barney the Horrible Dinosaur. Dinosaur. I snap my head up, an idea forming in my head, but it's too vague and I'm still basking in the afterglow of the orgasm I just had on the floor of a bookstore. I shake my head trying to clear my thoughts. The phone vibrates in my hand and I let out a little squeak and drop it on the floor, juggling the books in my hands as I do. I pick the phone up and look at the screen. \n\n\"Synonyms, not cinnamons. Antonyms, not Auntie Em's. You'll find both at minimum.\"\n\nA tiny buzz runs through me and I jerk. I almost have it, but my mind is so distracted. \n\nThe phone buzzes again. \"Jesus woman. It's the dinosaur with a good vocabulary.\"\n\nOhhhh. I've got it now. I walk quickly to the reference and writing books. I don't know when the next thrill is going to come, and I hope it doesn't happen on my way there. Dictionaries, APA format books, and there it is. The thesaurus. There are at least a dozen, but Roget's is the best and I'm sure he researched enough to find that out. There's three copies. I pull out the middle one and am rewarded with a short jolt which is, by all accounts, absolutely wet and ready for it. This is the one. I open it but there's no slip of paper. I pull the one on the left and the sensation begins, slow and low, increasing and increasing. Then it's pulsing deep inside me and I close my eyes with a little smile on my face, allowing myself to enjoy this. I lean against the shelf and some of the books topple off onto the floor. \n\nThe sensation stops abruptly, no slow, gradual decrease. My eyes snap open and I try to bend down and pick up the books that fell. I'm juggling everything, and very badly. I stuff my phone in my bag and balance the increasing stack of books on my hip as I get the fallen heroes back where they belong. I pull the slip of paper out of the thesaurus. \n\n\"Here's your last one. It's been your dream. Though the trail and mountain are pretty mean. It's the last place on earth that many hikers have ever seen. If you finish it, you'll be really lean.\"\n\nThere's a PS at the bottom.\n\n\"P.S.-I'm not trying to say you're in any way imperfect in your physical form. To me, you are perfect.\"\n\n\"P.P.S.-See I finished with a quote from your favorite Christmas movie\"\n\nWhat's my dream hike? The Appalachian Trail is something I've always wanted to do, and the Colroado Trail, but I wouldn't say they are my dream. A tiny buzz gets me moving back to the trail guides. A longer buzz is followed by a text message.\n\n\"In addition to the climb, you're going to have to climb to find it.\"\n\nClimb what? The stairs? I wander through the trail guides and a tiny buzz fires off. Another text message.\n\n\"Hurry up. I'll reward you with hours of this when you find it.\"\n\nOkay. So it's not with the travel guides. Mountaineering, then? I walk over to that section and see that there's a rolling ladder. I climib up three rungs and look at what's in front of me. Whatever it is, I'm guessing it's here when I'm rewarded with a long, slow vibration. Mmmm...I can't wait to find this. I'm anticipating what I'm hoping will come. In fact, I can't wait because I know I'll be CUMMING. I laugh to myself. I see the book in front of me and I am certain this is the one. \"Trekking Annapurna 14 Treks Including The Annapurna Circuit\"\n\nI pull it off the shelf and what I'm expecting doesn't come. Instead, I feel a hand sliding up my thigh which is slick now, especially since I followed the instructions and stuck my panties in my bag. I look down and it's him. My date. Smiling at me and looking like a little boy stealing cookies from the top shelf cookie jar. I climb down, book on top of the stack. \n\n\"I thought you'd never...come\", he says. I smile and lean back against the shelves. My cheeks are flushed with the excitement I feel and the crazed anticipation of wanting his touch all over my body. \"Are you ready for dinner?\"\n\nMy face contorts. There's no way I can sit through a dinner this way. \"Let's skip dinner and go home. You can have me for dessert.\""
    ],
    "authorname": "ElizabethBrody",
    "tags": [
        "control",
        "public sex",
        "remote control",
        "vibrator",
        "public"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/bibliophilia"
}