{
    "title": "Mage, Man",
    "pages": [
        "CHAPTER 1: CAGE\n\n I live in a town that hates magic. In truth, I may live in a world that hates magic. You could be thinking \"It's not the magic you hate, but rather the fear of what it can do.\" Well, you would be partially correct in making that distinction. We hate the casters of magic. We hate that they use their magic to terrify and enslave us, but it is law that we never say so. \n\n My name is Lawrence and I am what you might call mana-deficient. That is to say, like all humans, I have no ability to use magic whatsoever. Oh we certainly know of its existence and many of us have felt the effects of it first hand, but we remain incapable of creating or controlling spells. However, there are others in this world who live, learn, and breathe magically. We call them mages, and they are decidedly inhuman. Humankind's history, as it has been passed down in the village where I live, does not tell us how the two races evolved and grew alongside one another. Some popular theories are that mages simply appeared when the world became so filled with war and rancor that the only things that could be born were monstrous, evil magic-wielders. On the other side of the spectrum are people who think that mages are immortal and created humans as a slave race to perform labor, construction, all of the menial, laborious tasks they are too proud or lazy to perform. It is a popular debate in any alehouse or place where humans are allowed to congregate.\n\n The mages themselves aren't so dissimilar from us, I suppose, if only in appearance. They all seem to be very tall, I have never seen a short one. They stand seven feet high or more. Their skin is usually unnaturally light, most often a light grey or even white, like the color of slush mixed with ice in winter. I have even seen some of the older mages with skin as white as chalk, white as the face of death. Their hair is similar, always light colors normally associated with advanced age. They wear long flowing robes, sometimes hats and scarves or cowls. The one attribute that takes the most getting used to are their eyes. They glow. It might remind you of steam rising. It's very unnerving... unnatural. The pupils aren't so different from ours but if you were to meet a mage on a dark street some night you would see those eyes and feel nothing but dread in the pit of your stomach. \n\n Each town or city is ruled by a mage as they see fit. They are mayor, king, emperor, whatever they wish to be called by their human subjects. Subjects is a more apt word than I even care to admit. Humans for the most part go about their daily lives: working, eating, being social, making little humans. But all of that could be changed in a heartbeat if the mage decides to have a bit of fun that day and rain fire over a healer's dwelling or turn half of the humans into lions and the rest into pigs. We've all heard the stories, though I haven't seen spells like this for myself before. This towns has an enormous, bronze-colored wall extending all the way around. The mages would have us believe that the walls exist for our own protection, but we aren't quite as naive as they might think. We live in cages, and if we try to leave, the mages will execute us. The wall encircles our entire life and tiny world and is much too high to see over. The wall extends just far enough outward in my village that we have fields, a few forests and a small lake so we can still grow crops, harvest trees for building, hunt game, fish, and farm. I have lived here my whole life of thirty years. I've never been outside my enclosure and I've never seen more than the same couple hundred human faces. If I could escape, I would. I hate being forced to live like a pet.\n\n The only thing that we can see beyond the extensive barrier is actually directly above, sitting on top of the wall at its highest point. We are told to call it the magedom. It's where the mage who rules over us resides. He calls himself August, if you can believe that, and from what I've heard, all mages have similarly odd names. I have been told of one named Void and another called Bringer. We rarely see him, perhaps once or twice in a month but his presence is still felt nearly every day. Sometimes there will be terrible lightning storms that suddenly appear above our town and begin to scorch the ground as they strike. It is disturbingly common to have snow flurries at any time during the year, along with rain, mudslides, droughts... think of a disaster and trust that we've endured them all. Even during times when we aren't being visited by unnatural disasters, we are always braced, ever wary of an impending attack.\n\n August even has a monster under his control that heralds his arrival to us. It is a hideous creature called Sarthis. it is part lion, part bat, and something else I don't know. It is quite large, with a wide, black wingspan and some sort of long, prehensile tail with a cruel-looking stinger at the tip. It will land in the town square, usually an hour before August appears to ensure that we all gather to hear what announcements the old sorcerer might make. \n\n Today started off like any other. The sun rose and we began to wake up and head out to our jobs and lives, such as they were. I began the day happy, for I got fishing duty today. It was likely one of the easier assignments, but it was being out on the lake on a warm day like this one that was most enjoyable to me. In our small, enclosed world it proved to be one of the few places where I could really be alone with my thoughts. Despite being by myself, it also proved to be one of the few times I wasn't consumed with boredom.\n\n I sank my feet into the cool waters and leaned forward to look myself over. At just over thirty years of age I consider myself a good-looking fellow. I have a strong build, well, I'm no adonis, but years of some amount of physical labor have helped. My hair is dirty blond, a bit shaggy and comes down just over my ears. I have a short yellow goatee and decent jawline. If I'm being honest, I haven't really seen my jawline or chin very well as I've kept some amount of facial hair since it began to take shape over my face some years back. My eyes are blue as the sky. I'm quite tall, at a few inches over six feet. It's likely not terribly important what I look like, but in case you were curious, these are the facts. \n\n Unfortunately for me on this particular day, I had only been sitting at the end of the dock, my fishing line and bare feet dangling in the water, for an hour or so, catching nothing, when I was interrupted by my friend Thomas. He was nearly out of breath as he ran to the end of the dock and doubled over behind me, catching his breath. Thomas was slight in build with reddish brown hair covering much of his face. He could be painfully shy though had always been comfortable with me.\n\n\"What's going on, Thomas?\" I inquired.\n\nThomas stood back up and finished catching his breath. Presently he said, \"Sarthis landed a little while ago, Law. Everyone needs to gather, August will be here within the hour!\"\n\n\"Dammit.\" I spat. \"I swear if he doesn't only visit on days when I sit down to fish.\"\n\n\"You know he doesn't.\" Mumbled Thomas. \n\n\"Last two times.\" I responded. \"At least! Now let's go see what the old lunatic wants.\"\n\nThomas gave me a frown and said, \"Please don't say things like that. You know he could be listening, he could be anywhere.\"\n\nI waved his suggestion away with my hand. \"That's nonsense. He's up in his tower, devising new ways to torture us, just like he always is, and today, we get to hear what they are!\" I said bitingly.\n\n\"Jenna says he can turn invisible, that's all I'm saying.\" Thomas remarked in his defense.\n\n\"Well Jenna says a lot of things and I'd be amazed if half of them turned out to be the truth.\" I said.\n\n I put away the bait and pole I had been using in the small shed near the docks, then Thomas and I made our way back into town.\n\nHe seemed nervous, which was probably just the right way to feel. Thomas was a nice enough fellow, several years younger than myself and one of only a few in the town I'd consider a close friend. He looked up to me, maybe even idolized me a little too. I had saved him during a mudslide many years before. I was in just the right place at the right time as he was being pulled under a house as it sank into deep mud to pull him to safety.\n\n\"What do you think he'll have to say?\" Asked Thomas in an anxious voice.\n\n\"I have no idea.\" I answered, as I always did when he would ask this same question.\n\n\"Last time he said we needed to build a mine remember?\" Thomas asked.\n\nI nodded. \"I remember.\"\n\nBut the clay and granite under the town is proving really hard to dig through...\" Thomas trailed off, lost in thought. \"Do you think he'll be mad?\"\n\n\"I honestly don't know. Probably. It's not like any of us have ever been miners before, he can't really expect us to pick it up immediately.\" I tried to sound reasonable.\n\n\"Okay, maybe it's okay.\" Said Thomas. He seemed to perk up a little, and then we reached the crowd in the center of town. Thomas and I appeared to be about the last to arrive. \n\n Anders, a tall man in his forties, well-liked, was standing in the center of the town square, answering questions and doing his best to keep people calm. He had a strong chin and an easy way about him. While we were forbidden from having an appointed leader, he was about the closest thing we did have. While many of the villagers moaned and fretted, he rubbed his thick black moustache thoughtfully and kept their concerns to a minimum. I liked Anders very much myself. He was another friend I considered close.\n\n Most folks continued to shift about, wearing frightened looks on their faces. They crowded around Anders, as if he could somehow alleviate all of their anxiety. Fortunately for them, they wouldn't have long to worry and wring their hands.\n\n The harsh sound of leathery wings cut through the air high above our heads and we looked upwards in unison. Sarthis, the black-winged demon was descending rapidly from above, appearing suddenly through low-hanging clouds. The townspeople directly under him quickly covered their heads with their hands and scattered out of the way. One man let out a surprised yelp.\n\nSarthis hit the ground with a loud thump on all fours and a low, terrible snarl hissed out of him, pushing the crowd back further still. Sitting atop his black mane, between his enormous wings was the mage himself. He sat upright, holding a long gnarled wooden staff. His grey hair and beard swirled about his head as Sarthis beat his wings a few final times. His eyes glowed hotly and reminded me of tales of demons my mother would tell me as a child, when she was still alive. August slid over the side of the great beast and landed nimbly on his feet. He stepped toward the group of huddled humans in front of him and cast a slow glance around, meeting each of us in the eyes. His severe expression was enough to quiet even the bravest among us. Anders held out his arms in front of the villagers, ushering them back.\n\nThe old mage never minced words, but his directness never failed to catch us off-guard.\n\n\"My last servant has died.\" August said in a loud, dispassionate voice for us all to hear. \"I shall be requiring another.\"\n\nSome murmurs swiftly moved through the townsfolk. \"How did they die? Who was it? I can't remember either.\" Were some of the brief whispers I could overhear.\n\n\"I need someone who can clean, cook and perform various tasks about my home.\" August continued, silencing the group again. \"The remainder of your days will be in my tower, or until you become useless, which amounts to the same.\" He finished coldly.\n\nHe looked around again, perhaps gauging our expressions. \n\nHe let out a short huff before saying, \"Volunteers! Step lively! If no one comes forward I shall pick for myself!\"\n\nAgain there were murmurs, frightened people talking quickly amongst themselves. It became abundantly clear in short order that no one would willingly play the role of sacrifice.\n\nAugust began pacing in front of the crowd, clearly agitated, his long dark robes billowing out behind him as he moved. He began by pointing a long finger into the crowd.\n\n\"You, there, girl!\" He darted to another huddled pack of humans and pointed again. \"You, boy, come up here!\" He snapped.\n\nHe continued in this way and singled out a handful of other candidates until at last his baleful gaze met mine. \"You, the tall one, up here.\" \n\nMy heart sank. It felt like I had just been punched in the stomach as the breath left me and I walked unconsciously to stand in front of the mage where six other selected individuals had formed a line. I glanced down to my right. Among the others unfortunate enough to have been chosen were my friends Thomas and Jenna. I could see that Jenna was shaking and had become an unnatural shade of white, almost the color of a mage herself.\n\nWasting no time, August started at the opposite end of the line with his interrogation.\n\n\"Boy, you look strong enough, Can you cook?\" He inquired with a gruff tone.\n\nThe boy shook his head, keeping his eyes on the ground.\n\n\"And why not?\" Snapped the mage.\n\n\"My-my mum does all the cooking.\" The boy nearly whimpered.\n\nThe mage sneered, \"Get out of line.\" He spat.\n\nJenna was next. She looked like her knees might give way underneath her at any moment.\n\n\"Girl, can you clean? Can you cook?\" He moved his face close to hers. \"I can tell if you lie to me.\"\n\n\"I-I can.\" She stammered. \"But I have a sickness.\"\n\nAugust recoiled suddenly. \"What?\" He snarled.\n\n\"Sometimes I am laid up for weeks at a time. We don't know why it happens. My whole family has to dote on me. I'm afraid I might not be much use to you.\"\n\nI gritted my teeth. It was a lie, but a believable one. Even in her terrified state she had given the mage a reasonable doubt. \n\n\"Bah!\" Exclaimed the mage. He impatiently waved her out of line.\n\nI allowed myself a grim smile. Good girl, Jenna, I thought. Apparently the mage couldn't actually tell when we lowly humans deceived him. It was something worth remembering.\n\nThe magic-wielder continued down the line, bellowing at and threatening the next two in line, a young man and woman who both were able to cleverly con their way out of slavery. Only three of us remained and it was clear that August's patience was quickly nearing its limit. Up next was Thomas who was visibly shaking. He was bright, but useless under pressure. He would not be able to lie his way out of this.\n\nAugust stood before him, towering over Thomas. \"Boy, can you keep a clean home? Cook? Take care of my daily affairs?\" Barked the tall, pale man.\n\nThomas nodded his head, refusing to look at the mage.\n\nI could see August relax somewhat. \"You're not going to try to lie to me?\" He asked suspiciously.\n\nThomas shook his head, eyes still glued to the ground.\n\nWhat the hell was Thomas doing? Say something! Do something! The idea of Thomas spending the rest of his days as a slave to this monster lit a fire in my belly. He was my dearest friend and too scared to last a week up there in that tower. \n\nMy mouth was speaking for me before I fully grasped what I was saying. \"He can't cook for shit.\" I said, just loud enough for the old mage to hear.\n\nAugust whirled his head around to look at me. He took two long paces and was standing directly in front of me. He loomed over me, his eyebrows knit together in a deep scowl. He stood a full head taller than me.\n\n\"What did you say?\" He asked in a disquieting voice.\n\nI lifted my head so I could look into his cold, glowing grey eyes. \"I've had his cooking and it tastes like pig shit covered in mud.\" I said defiantly. \n\nFrom the corner of my eye I could see Thomas shaking his head at me. He mouthed the word \"Don't!\" \n\nAugust leaned over me until his face was quite near to mine. I could feel my sudden surge of courage begin to drain away.\n\n\"But you can cook? Well enough to save your friend?\" The mage asked. He stared at me, unblinking. \n\nI still refused to look away. If this was the last time my friends and family would see me, let me appear tall, unyielding. Let them remember how I stared the bastard in the eye.\n\n\"Obviously I can.\" I replied and then, to everyone's surprise, including my own added, \"Now if we're done here, let's allow these people to get back to their lives.\"\n\n\"Aren't we brave.\" August said, narrowing his gaze at me. \n\n\"You look fit, in good health.\" He muttered to himself, prodding me with the end of his staff in my chest and shoulder.\n\nHe then touched the staff to the stone under our feet and sent a shower of sparks and smoke sputtering over the crowd. \n\n\"I have what I came for. We're done here.\" He said, turning away. \n\nThe crowd yelled and ran for cover. Moments later the square was completely empty except for the mage, the beast, and the new servant. \n\n\n\n\n\nCHAPTER 2: TOWER\n\n August pushed me atop the great winged monster, Sarthis, who let out a menacing snarl as I finally sat straddling his impressive shoulders and mane. The hair under my hands was long and coarse and black as pitch. I recoiled slightly at the feel and had to force myself to breathe normally. August climbed up behind me and I was revolted to feel him lean his body against mine. He tucked his staff into his robes behind him.\n\n\"Don't lean against me.\" I managed, trying to sound threatening.\n\nThe mage gave a low chuckle. \"I have the reins, and this is the only place to sit while riding a manticore. If you'd like to try riding anywhere else, that's your decision. Just know it's little bother to me. I could replace you with one of your friends before you even splatter the ground.\" \n\nMy mouth went dry. I decided I wouldn't say anything else for the duration of the journey.\n\n August jerked back on the reins and cried, \"Sarthis, home!\" \n\nAs the beast leapt into the air I instinctively flattened myself against the monster's broad neck and gripped the creature's mane for all I was worth. Sarthis bellowed a loud, guttural, awful noise as he left the ground. Part of me wanted to shut my eyes tightly but another part needed to see clearly. Up we rose, little by little with each leathery flap of the enormous black bat wings. I looked out over my small town as we made our way skyward. There was nowhere in or around the village where one could view the entirety of it like this. I swallowed hard as I became flooded with emotion. I had no great love for my home, it was a mage's dollhouse after all, but I would miss Thomas, and Jenna, and Anders. I would miss the occasional lazy day of fishing, helping to build additions to homes where they had just welcomed a new baby, telling stories at the pub over drinks... \n\nAs I gazed longingly out over my tiny town, I became aware of August watching me carefully. I quickly gulped down my despair and glanced over my shoulder, giving the old mage a scowl. He said nothing, and looked away from me. \n\n The village faded from sight into clouds as we continued our flight toward the sorcerer's home, the magedom. As we neared it I was overcome with awe. Though we could see the great tower above the wall from the village, I had never fully realized its sheer size and presence. Now as we approached I was agape. To look at it up close like this it was clear it had not been constructed by human hands. Indeed, it almost appeared to be alive, the architecture was full of strange designs and textures, almost akin to a wasp's nest. It loomed ahead of us now. I guessed it to be over a thousand feet tall, and that was already built onto a wall which was several hundred feet in height. My body began to tremble all over. This hideous nightmarish place was where I would spend the rest of my days, according to the mage. Any good times I may have experienced in my life before this were over. I felt real fear begin to settle into my stomach.",
        "August shocked me by placing an arm firmly around my middle. \"Stop shaking so much, boy.\" He said. \"You don't want to throw off the landing.\"\n\n Sarthis glided and flapped toward a large balcony-like platform about midway up the outside of the magedom. We seemed to be coming in so fast that I held my breath and finally allowed myself to shut my eyes. There was a sickening lurch as Sarthis rose just above the platform and then tucked his wings in as he dropped the final distance onto the balcony. I stifled a retch as my insides hadn't handled the flight or landing very well.\n\n August slipped out from against my back and carefully slid over the manticore's side to the platform. He reached up to help me down but I gave him a snort and attempted the dismount on my own. Sarthis bucked as I guess I grabbed him by a patch of fur that caused him discomfort. I was knocked away from the beast's body and sprawled to the floor on my face and hands. I looked up to see the mage shaking his head.\n\n\"Foolish boy.\" He said, glowering down at me. \"Get up. Come with me.\" \n\n Sarthis remained out on the platform. As I watched him he lay down, gave an enormous yawn and set to licking his paws. He folded his wings neatly about him and the long dangerous tail switched back and forth. When he wasn't snarling and being all around terrifying, he truly resembled an oversized housecat. \n\n Before us stood an immense black iron gate comprised of two doors. August hauled one of the doors open and motioned me inside. As I have said, the mage was a fair bit taller than me, by about a foot, so it was no easy task to match his pace as he showed me around the tower. The inside of the place was less menacing than its exterior perhaps, but no less impressive. It made me feel very small. The ceilings stretched high above my head, dark arches of the same alien-looking stone as the outside and the floor seemed to be the same material, only completely shiny and smooth, almost reflective. Every fifty feet or so, high above my head along the walls were peculiar glass globes, each containing a blue flame. They seemed to be torches of some variety, to illuminate the cavernous magedom but I couldn't tell what they were burning, if anything. \n\n August stopped in front of a large room and motioned for me to step inside. \"Hurry up, boy.\" He said impatiently.\n\nInside was a long table surrounded by many high-backed chairs. The front of the chamber was clearly a dining room with ornate tapestries on the walls and an iron chandelier overhead. In the far back were some cabinets with a large kitchen beyond. There was a hearth in the corner, cabinets, and all along the back walls were pots, pans, cooking implements, a large stone sink and some dried sausages and fruits. Doors were opposite the hearth, I guessed the pantry would lie behind them.\n\n\"Dining room, kitchen.\" August said flatly. \"This is where you'll prepare my meals. Breakfast you'll bring me every morning in my study, dinner I will take here in the evenings, or my study if I prefer.\"\n\nI expected him to give more instruction than this but he whisked out of the room a moment later and I had to hustle to catch up to him.\n\nWe ducked down another corridor and came to two large, solid, metal-framed doors at the end. \"These are my chambers.\" He explained. \"You will not bother me here if you value your life.\" \n\nHe gave me a stern look, as if requiring a response, so I said, \"A man's room is his business.\"\n\nHe gave a small nod then hurried further down the hallway.\n\nThe next set of doors ended up leading into a vast network of rooms into which August now motioned me. \n\n\"This is my study.\" He said. I couldn't be sure but I thought I detected a hint of pride in his voice.\n\nAn immense wooden desk sat in the center of the inter-connected rooms, nearly covered in books, papers, ink and other items I didn't recognize. I noticed bottles and strange, perhaps alchemical ingredients in a large adjoining room. \n\n\"You can bring breakfast to me there.\" He indicated toward the enormous desk.\n\nI nodded my understanding and scanned the room. There were books everywhere. I had never seen so many books, not by half, not by half that half. The books we had in town were storybooks for children, or farming manuals. I honestly didn't know there were enough subjects in the world to warrant this much reading. I wondered what secrets the old wizard's study held.\n\nHe was again measuring my reaction. \"Can you read?\" He asked.\n\n\"I can read.\" I said, slightly perturbed. \n\n\"Hmh.\" He said with a raised eyebrow. Had he been impressed? Surprised? Arrogant bastard, assuming we were a town full of nitwits.\n\n In the next corridor he showed me an impressive bathroom. A low stone tub was set into the floor in the middle, I wouldn't have recognized it for what it was had he not told me. Around it on low counters I could see soap, small bottles of oil and a scrub brush. There were a handful of globes containing the blue flames flickering on the walls in here too, apparently they were what lit this entire place, perhaps even keeping it heated.\n\n\"You will fill the tub using this faucet here.\" He turned a small metal wheel and water began to pour from a spout underneath into the bath. \"I like my baths hot, but not so hot that they scald me. You turn this lever here, halfway for the temperature I want.\" He finished.\n\nI was confused. \"But where does the water come from?\" I asked. I was familiar with bathing of course but we had to bring buckets of water from the well or lake and warm them over coals. This was some sort of magic, to be sure.\n\nHe gave a sigh. \"It's called plumbing. Water is pumped through pipes out of a large cistern underneath us and--\" He stopped abruptly. \"It doesn't matter where it comes from, boy, you couldn't grasp the science anyway.\" He snapped. \"All that matters is it does, and this is what you need to handle.\"\n\nHe pointed out the toilet which was also a marvel of plumbing as it turned out, instantly removing the waste when you were finished. It was a damn sight better than our village outhouses at any rate.\n\n\"You should keep clean as well, I don't want you stinking up the place. You can use the bath after I am finished each day.\" He informed me. I frowned at the implication.\n\n Next to the bathroom was the laundry, here more plumbing sorcery was used to bring hot water into another, smaller tub set against the back wall. There was a triangular-shaped balcony off of the laundry room through a set of doors where I spotted a clothesline.\n\n\"Every two weeks I will need you to wash my robes and bed linens.\" He explained. \"Soap is in this cupboard. This is also where you can find a broom and mop for when the floors start to look dusty.\"\n\n The final room he led me to was all the way at the end of a fourth corridor.\n\n\"This is your chamber.\" He said as he opened the door for me.\n\nIt wasn't much to behold. It was certainly the smallest of the rooms I had been shown thus far. There was a narrow bed inside and a rickety-looking shelf affixed to the opposite wall. On the bed were two sets of very simple, shapeless clothing, apparently meant to be my work clothes while I lived here. Another of the blue-flamed torches was set into the middle of the ceiling. There were no windows, no rug, no books, not even a table. The only other item to be found was a large wooden clock, high on the wall over the foot of the bed.\n\n\"There's not much here.\" I said sullenly.\n\nAugust shot me a look. \"Are you here to work? Or here to complain?\" He asked bitterly. \"Speak up, boy!\"\n\nI returned his burning gaze. \"I'm here to work, but I don't think it's too much to ask for a decent bed.\" I said hotly.\n\n\"You're lucky to even have that. Ungrateful...\" He began muttering obscenities under his breath.\n\n\"And my name, is Lawrence!\" I spat.\n\n\"What?\" The mage asked incredulously.\n\n\"Don't call me boy, I'm not a boy. My name is Lawrence Macguire.\" I folded my arms and puffed my chest out a bit.\n\nThe mage laughed in my face. \"You've got some nerve, boy, I'll give you that!\" He said. \n\nI let my arms fall to my sides and felt my shoulders slump.\n\n\"It's nearly time for my supper.\" August said. He then pointed to the clock on the wall. \"I will take it in the kitchen at eight o'clock, sharp.\" He turned to leave.\n\n\"Well what do you want?\" I called after him, exasperated. \n\nHe stopped and turned back toward me. \"Whatever you can make that doesn't taste like pig shit covered in mud.\" He retorted.\n\n I had about an hour to prepare the mage's evening meal so I headed to the kitchen. Already August was gone from view. I suspected he would be in his study since according to him that was the other place he might take his dinner in the future. Now that I was unescorted, I had time to think and take stock of my surroundings. The magedom felt needlessly big. There was so much open space and as near as I could glean, the old mage, his pet and myself were the only three in residence.\n\nI entered the kitchen and headed to the doors at the back I had seen earlier. I pulled them open and found a good-sized pantry inside. I grimaced as I noticed it wasn't very well stocked. Despite what I had indicated earlier in the day, I wasn't a very strong cook and in fact Thomas would have been the better candidate because of this one simple fact. Still, I could make a passable stew so I set about getting what scant few ingredients I could find together and began preparations.\n\nTrue to his word, eight o'clock rolled around and August strode into the room and took a seat at the long table in one of the tall chairs.\n\n\"It's eight.\" He said simply. \"Is my food ready or not?\"\n\nI spooned up a bowl, trying to hold my temper in check and set it in front of the mage. \"It's ready.\" I told him. \"Not only can I read, I can tell time too.\" I narrowed my eyes at him.\n\nHe glared at me but said nothing. He took a spoonful of the stew and tilted his head to the side, thinking.\n\n\"It's not very good.\" He said, finally. \"In fact it might be terrible.\"\n\n\"Well you don't have much in your pantry.\" I said through gritted teeth. \"And I told you I can cook, not that I'm especially good at it.\"\n\nAugust made sort of a pouty face, like a child might. \"Well I'm not due to pick up supplies from the town for another week so you'll have to make do. And add some flavor next time.\"\n\nI could feel the heat of my anger in my cheeks and ears. I said nothing more. Though I wanted to throw the hot soup into the jackass's face I knew that acting out against a strong magic-user like him would likely mean my own demise, or worse.\n\nHe finished eating shortly thereafter and informed me that I could have some of the remaining stew for my own dinner, if I could handle the taste. He dabbed his grey beard with a cloth napkin and rose to leave.\n\n\"So now what?\" I asked.\n\n\"So now what, what?\" He echoed with a question of his own.\n\n\"You're done eating supper, I'll have mine, and then what?\" I asked, making my question more plain.\n\nHe shrugged. \"I don't care, you're of no more interest to me tonight. Stay in your room, don't cause me any trouble.\" He flashed me a grin. \"Or go play with Sarthis on the balcony, he's probably lonely.\"\n\nWas that a joke? The man had a disturbed sense of humor. \n\n\"I can't just stay in my room. There's nothing to do.\" I said unhappily.\n\n\"It makes no difference to me.\" The mage said as he began to head for the kitchen door.\n\n\"Please!\" I pleaded.\n\nHe actually stopped to look at me. I wondered if he cared at all about my earnest request.\n\nAugust looked me over for a time. \"You said you read.\" He commented at last.\n\nI nodded in affirmation.\n\n\"What do you like to read?\" He asked. His usual venom was decidedly absent from his tone.\n\nI shrugged. \"I... don't really know. We don't have many books in town.\"\n\nHe rolled his eyes. \"Well that's not very helpful, as expected.\" He scoffed.\n\n\"Maybe a book about plumbing?\" I offered.\n\nHe gave me a stunned look, but recovered quickly. \"Why would you want to read about that?\" He asked with a note of suspicion creeping into his voice.\n\n\"It seems interesting.\" I said with a shrug. \"I don't know anything about it.\"\n\n\"Go to your room.\" He instructed.\n\n\"But I--\" I began, but he cut me off by raising his hand.\n\n\"Go to your room.\" He said again. His tone was firm and his piercing stare made me decide to follow his wishes.\n\n I sat down on the small bed in my windowless chamber and let a deep sigh escape me. The clock informed me that it was not quite half past eight. I was going to go mad with nothing to occupy my time every day and night except for washing clothes, cleaning, preparing meals and sleeping. I listened to the ticking clock and thought again about home. It was small consolation knowing it was just outside and at the bottom of the wall. It may as well have been on the moon for the distance I felt between us.\n\nA loud knock at the door brought me immediately back to my current situation. Before I could even say anything in response the door opened inward and August stood before me. He brought up his hands to show me a small leatherbound book.\n\nI stood and walked over to him.\n\n\"It's a compendium of the most recent advances in the field of plumbing.\" He said matter-of-factly. \"I doubt you'll understand much of what you read, but I suppose if you're in here reading I don't have to worry about you stupidly poking your nose into my affairs.\"\n\nI went to take the book but he pulled it away from me.\n\n\"Don't damage it, you don't want to anger me.\" He gave me a serious look. \"When you finish with it, return it to me in my study and perhaps we can get you something else to read.\"\n\nHe pressed the book into my hands and was turning on his heel to leave when I said, \"Thank you.\"\n\nHe gave me a sideways glance, nodded once, and left the room.\n\n I opened the book, careful not to damage the pages and began to read. Much to my chagrin, August was right. It was difficult reading as I had no basis for any of the science or even many of the basic principles involved. But this was also the first book I had ever seen from the outside world, even if it belonged to a cantankerous old mage. My mind swam with new words and ideas and in spite of everything that had happened today I was able to focus my attention on something else and briefly forget about my loneliness and exile.\n\n\n\n\n\nCHAPTER 3: LEARNING\n\n I awoke with a start, my eyes wide and my heart pounding through my chest. I had no idea where I was, orange flames licked and flickered all around me. Rising to my feet I realized I was still in the small bed chamber in August's tower. I could see the door was opened partway and dived from the bed through the flames into the hallway. I tried to roll as I landed, patting out the fire on my clothes. I gasped for breath as I realized the flames had dissipated. \n\n\"My goodness, are you alright?\" A voice asked.\n\nI whirled my head around and found August leaning against the wall outside the room holding his staff in one hand and the other tucked behind his back. He wore a bemused expression on his pale face. \n\n\"Th-there was a fire in the room...\" I said between heaving breaths. \"I had to get out.\" \n\n\"Oh my, that sounds dangerous.\" The mage said in response. There was something about his voice I didn't like. \"But you know... \" He stroked his beard thoughtfully before continuing, \"If you had prepared my breakfast on time instead of sleeping in I wouldn't have had to cast flashfire on you, you lazy brat!!\" He bellowed and gave me the most menacing look I had ever seen. The glow from his eyes was much more intense than before.\n\nI leapt to my feet in realization at what he had just said, and paused. I was still in shock.\n\n\"Don't just stand there, boy!\" He roared. \"Breakfast! Now!\"\n\nI scrambled down the hall as fast as my legs would carry me. Behind me I could hear the old geezer howling with laughter.\n\n I whipped up two eggs, some cured meats and heated some toast with butter. My mind was racing as I worked. I had been late with August's breakfast and he had responded by nearly burning me to death. I couldn't mess up again, I finally understood what was at stake here. To anger the mage again would certainly mean my death.\n\n August entered the kitchen and sat at the same chair as the night before. He still wore a satisfied smirk on his face. Bastard. A few minutes later when I had finished his breakfast I set it on the table in front of him, my hands still shaking, causing the plate to clatter. He blinked in surprise.\n\nHe took a bite and gave a thoughtful look. \"It tastes better than yesterday at any rate. Still not very good though.\"\n\nI nodded my head in understanding.\n\nHe ate more of the food and glanced around the kitchen. \"You didn't make anything for yourself?\" He asked.\n\nI shook my head no. \n\n\"What's wrong with you, boy? You've gone quiet for a change?\" He inquired with a smirk.\n\n\"I d-didn't know when you wanted breakfast, I'm sorry.\" I stammered. I hated myself for sounding weak, scared.\n\n\"I mentioned it last night.\" He said.\n\nI shook my head. \"You just said supper at eight, I didn't know what time you wanted your breakfast.\" I said.\n\nAugust looked me over for a long time. \"Come over here.\" He said at last, pointing to the chair opposite him at the table. \n\nI cautiously approached the table and remained standing.\n\n\"Have a seat.\" He offered. I sat down, still shaking slightly.\n\nHe took a long inhalation and I could see his face soften slightly. \"You might be right.\" He started, \"Maybe I didn't tell you when I take my breakfast. My fault. I like my breakfast on my desk at nine every morning.\" \n\nI remained silent, listening to his words.\n\n\"But anyone knows breakfast is the start of the day, you didn't need to sleep so late.\" He concluded.\n\n\"I'm really sorry.\" I said. \"I stayed up reading most of the night, the time got away from me, it won't happen again!\" I spouted.\n\n\"You read that book all night?\" He asked.\n\n\"I-I actually finished it.\" I replied.\n\nHis eyebrows rose on his forehead. \"You, finished the book? I'm... impressed.\" \n\nI dared to look up at him. Impressed? I thought.\n\n\"Listen boy, about before. It's a spell that resembles fire, it might look and smell like the real thing but you weren't actually in any danger.\" He said. His voice had softened somewhat, he almost sounded human.\n\nI stopped shaking. Was that an apology? Had he felt guilty about setting me on fire earlier?\n\n\"It... tends to get lonely around here.\" He said slowly. \"I thought it would be funny. Maybe my sense of humor could use some... discretion. I didn't mean to scare you.\" He finished.\n\nAs I looked at him I could see he was being genuine. It was unexpected, to say the least. At last I felt the fear leave me and in its place I could feel my face begin to burn with anger.\n\n\"Don't ever do that again.\" I said with a stiff tone. \"You need me to do something, you can damn well ask me.\" I snatched the plate from in front of him and headed back to the counter.\n\n\"Hey! I wasn't done eating that!\" He called in alarm.\n\n\"Oh yes you were.\" I said as I dropped the plate and half-eaten breakfast into a washbasin on the counter.\n\nAugust rose angrily to his feet. \"I apologized!\" He griped. \n\n\"You will never cast another spell on me.\" I said defiantly. \"I will cook for you, clean for you, wash your blasted underwear without complaint but you will never attack me like that again.\" I stared at him, openly furious.\n\nHe looked away. \"It was just a damned joke.\" He said quietly.\n\n\"Are we clear?!\" I demanded.\n\nAugust let out a sigh. \"Yes, boy, we're clear. I promise I won't.\"\n\nI sighed with relief. We both knew that he didn't have to take any of my lip, and I was taking a risk by making demands of him. My mother had often warned me when I was young that my smart mouth would get me into trouble. For as much as the mage made me nervous, it was turning out he was at least capable of being reasonable.",
        "\"I'll take dinner in my study later.\" He said as he swept out of the kitchen.\n\n I spent my day cleaning up the kitchen, and familiarizing myself a bit more with the labyrinthine corridors. I thought about having a bath but by now the water in the tub was quite cold and I wasn't sure if August would appreciate me refilling it with hot water just for my benefit. I returned to my room and despite what the wizard had told me was surprised to see no signs of fire. My own clothes, the bed sheets and wall looked exactly as expected. I re-read some of the book I had borrowed but felt like I now wanted a different subject. I would return it later when I brought the old coot his supper. \n\n I reheated the stew from the night before but made sure to add salt and pepper and also stirred in an egg to try to add some flavor. I tasted it and grimaced. It was passable, it tasted mildly better than the previous evening's attempt.\n\n As expected, August was in his study when I arrived at eight with his meal. He barely gave me more than a glance as he poured over a heavy book. He had on a pair of large, rounded glasses and appeared very involved with his reading. He actually could have passed for a wise grandfatherly type if I didn't know any better.\n\nI moved to the edge of the wide desk and set the food there. \"What are you reading?\"\n\nHe didn't look up. \"I'm committing a new spell to memory. It's not easy, it requires concentration.\" He said brusquely.\n\n\"What does the spell do?\" I asked, interest creeping into my voice.\n\n\"What do you care?\" He inquired, still feverishly reading the current page.\n\nI shrugged. \"Just curious, I'm returning the book I borrowed.\" I said as I placed it on the edge of the desk.\n\nAugust turned his attention to the small book I had set down, inspecting it to ensure I hadn't somehow damaged it over the course of the single day in which it was in my possession.\n\n\"Fine.\" He said. \"But it doesn't go here. Put it back over there.\" He gestured vaguely behind him to where more than a dozen shelves overflowed with books.\n\n\"Umm...\" I started. \n\nI guessed my face must have shown my uncertainty because August let out a huff and turned to face the bookshelves in his chair. \n\n\"I keep them in more or less alphabetical order after classification.\" He explained. \"Plumbing, P, would be over there, under 'Sciences of Men.'\"\n\n\"Sciences of Men?\" I wondered aloud.\n\n\"Nevermind, it goes over there.\" He repeated and swiveled his chair back around to face his desk.\n\n I took the book over to the section as instructed and pushed it back into place among similar titles. I glanced back and saw August still absorbed in his studies, absently running a hand through his short grey hair. I decided to find a book to borrow on my own. It would likely be best if I didn't disturb the mage again. I scanned through many titles across a myriad of subjects. There was so much here, it was intimidating. Everything from mythical beasts and races, to science, philosophy, poetry and even a section with fairy tales and children's books. I carefully took many from the shelves, skimmed through some pages and gently returned them. I happened to be flipping through a tome about agriculture when August surprised me by sneaking up quietly.\n\n\"You miss your farming days?\" He asked.\n\nI jumped and bobbled the book in my hands, lucky to catch it before it could become damaged.\n\n\"Good lord! Don't sneak up on me like that!\" I exclaimed.\n\n\"Hm. I expected you to grab a book and be done with it.\" He mused. \"You really do have a curious nature don't you?\" He eyed me with somewhat of a grin under his moustache. \n\nI felt a flush of embarrassment and my face reddened. \"I didn't know there was so much I didn't know.\" I expressed truthfully. \"I want to learn more. There's just so much beyond my small town.\"\n\nHe gave me something of a smile. \"Don't ever be embarrassed about admitting you don't know something. These are the first steps to learning anything.\" He emphasized. \"Here, we need to find you somewhere to start.\"\n\n\"I don't mean to distract you.\" I said. I felt vaguely uncomfortable at his perceived compliment. .\n\n\"Nonsense! I told you, if it helps keep you occupied and out of my hair, it's to my advantage to keep you reading.\" \n\n August found me a thick book on the subject of biology. Biology, as it turned out would provide me the base understanding for all living things in the world. It was hard to believe, but everything living in this world was connected by very similar, tiny things inside of them. It was much more difficult to comprehend some of the ideas in this book compared to the one about plumbing but I read and re-read most chapters. Still, by the end I believe I understood much of what I read and found it absolutely fascinating. It took me a little over a week to finish. During that time I made sure each meal was on time and made to the best of my limited skill. The corridors took forever to sweep and clean, but I certainly had the time. I washed the old man's clothes, drew his baths and basically stayed out of his way. It wasn't a life I would have chosen, but the knowledge I was slowly gaining was rewarding in its own right. I gave up friendship and a life of working outdoors for a mostly solitary existence where I could focus on expanding my mind. It didn't seem to be an entirely fair exchange, but at least I was able to find something positive in my predicament.\n\n The next day I was returning the biology book with August's breakfast to his study. I found him, not at his desk but a smaller, low table in an out-of-the-way corner. There was some sort of game spread out before him that he was focused on intently.\n\n\"Where do you want your food?\" I asked.\n\n\"Hm?\" He looked up at me. \"Oh, over here is fine.\"\n\n\"I finished that biology book. It was... really interesting.\" I said as I approached.\n\n\"Well, about time.\" He replied without looking up from his game.\n\nI walked the plate over to him and set it on the table next to the game. In front of him was a board covered in small squares, making some sort of pattern of blue and red. There were small, expertly carved figures sitting around the board on several of the squares. Some looked like humans, I thought, as well as mages and still other beings I could not place. \n\nAugust caught me scanning the board game and said, \"It's called Conquest. It's a strategy game.\"\n\n\"Is it fun to play?\" I asked idly.\n\n\"I wouldn't call it fun, exactly.\" Replied the mage. \"It takes foresight and prediction to be any good.\"\n\n\"Are you playing against yourself?\" I asked, as it appeared that he was.\n\n\"Well naturally.\" Said August. \"It's somewhat exhilarating, trying to outsmart myself. I haven't succeeded yet though!\" He chuckled, amused by his own cleverness.\n\nI gave him a dubious look. \"No wonder you aren't having fun.\" I remarked.\n\nHe furrowed his brow at me. \"What's that?\" He asked in an unfriendly tone.\n\n\"You can't beat yourself in a game where you know what moves you're going to make. That's... ridiculous.\" I said.\n\nAugust leaned back in his chair and folded his arms tightly across his chest. \"Well what would you suggest?\" He asked petulantly.\n\n\"Teach me.\" I offered simply.\n\nThe old bastard broke out laughing. He laughed until he had tears in his eyes. I clenched my jaw tightly. \n\n\"Fine. Play with yourself you wretched old shit!\" I shouted at him. \n\nI was about to leave when he held up his hands in protest. \"Okay, very well, calm down. Let's see how much you can grasp.\" He said. There was still laughter in his voice. I wanted to punch him in the teeth.\n\n We spent the next hour sitting in chairs facing one another, the man and the mage. He explained the basic rules, how each piece moved across the board, their advantages, disadvantages and the object of the game. The idea was to conquer your opponent's castle but in order to do so you needed to deploy units carefully over the board while still maintaining enough defense in front of your own castle. It didn't seem overly difficult, just a lot of rules to remember.\n\n The game began and with each move made I watched August carefully. As expected he was a tricky opponent. It became clear in a hurry that this was a game he knew well. As I made my own moves, some of them must have appeared amateurish to him as I would see a sly smile curve the sides of his mouth. The game only lasted for perhaps an hour and in the end I was soundly defeated. I slumped in my chair.\n\n\"You win.\" I conceded. \n\nI waited for him to laugh again, or gloat outright but instead he said, \"That was closer than I expected. Would you like to play again?\"\n\nWe played close to a dozen games that morning and afternoon and I began to see strategies unfold before me and also get a better feel for August's playstyle. He was covert in his movements, he never overextended and rarely allowed more than half of his units to go on the offensive. What I started to discover though was if I could also force myself to be patient he would eventually grow bold and send more units away from his castle. It took three more games to use this information to my advantage but in our fourteenth game I had enough room to skirt around behind his last line of defense and capture his castle.\n\nAugust was stunned. His eyes were huge behind his glasses as he replayed in his head what had just transpired. He stroked his long grey beard thoughtfully. I sat back in my chair with my hands behind my head, a hard-earned grin on my face. The mage looked up and surprised me with a smile of his own. \n\n\"Well done.\" He admitted.\n\n We were about to start another game when it suddenly occurred to me to check the time. There was an ornate standing clock on the far side of the study and I balked when I saw the hour. \n\n\"Damn! I'm sorry!\" I cried out as I jumped to my feet.\n\nAugust stared at me in alarm. \"What, boy? What is it?!\"\n\n\"It's late, I haven't made dinner, I'll go make it immediately!\" I shouted, about to sprint from the room.\n\n\"Oh that.\" Said the mage as he sat forward again in his seat. \"You can make it later. Let's have another game first.\"\n\n We wouldn't always play Conquest together, it usually ended up being a couple of nights a week, but it was what I looked forward to the most. It was a chance for me to prove my worth to the man, a chance for me to prove my ability to myself, and ultimately, a lot of fun to play. I enjoyed matching wits against the mage and I could tell he relished the same chance. I still wouldn't beat him often, but it did happen every now and again, and when it did, I was always rewarded with a kind word and smile from him.\n\n It was out of nowhere while I was cleaning breakfast dishes late one morning that August suddenly appeared in front of me and I nearly dropped the dish I had been cleaning. I had never seen him in the kitchen before so his sudden presence caught me completely off-guard. I backed away slightly and he cocked his head at me.\n\n\"Don't sneak up on me!\" I blurted out. \"I'm not doing anything I shouldn't.\"\n\nAugust gave a quizzical expression. \"What? No, I didn't think you were. I wanted to... educate you.\"\n\n\"For some reason when you say those words I worry to their true meaning.\" I said, making a sour face.\n\n\"Oh hush, it's nothing bad.\" He said dismissively. \"But if I'm, I mean we're going to keep eating your cooking for the foreseeable future, it needs to get better.\"\n\nI turned my palms out and raised my arms. \"Well, you're nothing if not direct.\" I said, insulted.\n\n\"I am that.\" He agreed. \"Now, watch me, and ask questions.\"\n\nHe began to show me where everything was laid out in the kitchen, which of course I already knew in the weeks I had spent here. But he went on to show me what all of the odd tools could be used for. Measuring of course, but some kneaded dough, certain knives were better for meat, some bowls were made for beating eggs and others were especially for cakes. I don't know how much I retained, but I liked finding out the purpose for things I had dismissed out of hand. He then had me taste each of a couple dozen dried herbs and spices. He told me I should also taste them again after they had been cooked or soaked. \n\n\"Don't be afraid to try new things.\" He suggested. \"They won't all work, but some will, and remember how those came to be.\" \n\n\"You clearly know your way around food.\" I stated as he bustled around the kitchen. \"What do you need me for? You can obviously make better dishes.\"\n\nHe stopped what he was doing, folding some herb leaves into bread batter, and gave me a funny look.\n\n\"Well, I do like cooking, I just find there's never enough time.\" He said after some consideration.\n\nI scratched my head. \"Except, you do have time. I mean, you don't have to just read all the time. Do other stuff you enjoy.\" I suggested. \n\nHe tugged his beard thoughtfully. \"I'm not always reading.\" He decided. \"I play Conquest with you. I rather enjoy that.\"\n\n\"Well of course you do. But I should really stop letting you win so much, see how you enjoy it then.\" I mumbled, just loud enough for him to hear.\n\nHe cackled. \"HA! Haha!\" I let out a small laugh in response. I hadn't expected him to find my aside quite so amusing.\n\n\"You can be quite witty, boy.\" He admitted, giving me another warm smile.\n\n\"Yes well, I certainly try.\" I replied, and then, to my original point added, \"But what else is there to do around here? I'm interested on my own behalf too.\" I added.\n\n\"Well, I'm sorry that your life here is so mind-numbingly tedious for you.\" August quipped.\n\nI rolled my eyes. \"I will admit that life in the magedom isn't quite the misery I had anticipated.\" I said. \"But I live here now too, and I can't just read books in my room. Humans need to stretch their legs, see new things, see the sky sometimes.\" \n\nI gave a deep sigh. I knew that by being here I was sparing my friends the lonely life of servitude that I had gained with my arrival. I knew that if I continued to help August with his daily tasks and life, he wasn't sending fire and storms down below, at least, I didn't think he was. Even so, if I could improve my time here, I would do whatever was in my power to make it happen. \n\nI must have looked pretty pathetic because August's voice became quite gentle, almost concerned.\n\n\"Tomorrow then. I can show you a special place in the tower I think you might like.\" He looked around the kitchen and added. \"Don't forget some of the lessons I showed you today. My tongue might very well depend upon it.\" He cackled again, to himself, and strolled out of the kitchen.\n\nI shook my head, but realized I was actually appreciative of his advice in the kitchen today. I wasn't sure what he had in mind for tomorrow, but I was grateful for that too. \n\n\n\n\n\nCHAPTER 4: EXPLORATION\n\n After the morning bath and meal, I was leaning against the outside of my chamber door waiting somewhat anxiously when August came ambling down the hall to meet me.\n\n\"See?\" He said as he neared where I was standing. \"Not reading or playing a game.\"\n\n\"I wouldn't have believed it save for my own eyes.\" I stated.\n\nAugust led me down the nearby hall which terminated near the laundry. I gave a frustrated snort.\n\n\"I swear if you brought me down here to show me the laundry room...\" I began with a frustrated tone.\n\nHe gave me a sideways glare. \"Would you like to see what I want to show you or not?\" He snapped.\n\n\"By all means.\" I said dryly.\n\n\"Give me your hand.\" He said.\n\n\"What?\" I asked.\n\n\"Give me your hand, boy!\" He demanded and stuck his own large hand out in front of me.\n\nI had never touched the mage before and the prospect suddenly filled me with a peculiar feeling in my stomach. I reached out, almost timidly, though I couldn't explain why. He grasped my hand in his which was surprisingly warm. I suspect, due to his pale white skin I had assumed he would be cold or clammy. \n\nHe turned my hand until my palm faced the wall. \"Do you feel that?\" He asked.\n\nIn fact there was an odd sort of buzzing emanating from the wall, or more accurately, from within the wall. \n\n\"Yes, like a sort of buzz?\" I asked in wonder.\n\n\"Very good. I didn't bother to hide this passage overly well so if you feel around you'll know it by the energy of the spell concealing it.\" August said. \"Now, feel through until you sense a switch.\"\n\nHe guided my hand with his into the invisible void where moments before I could sense only stone wall. With August's help I felt a solid-feeling lever on the other side of the wall and pulled it back. I realized I could hear and feel a small door opening inward.\n\n\"Is it a door?\" I asked. August gave me a shove in the small of the back and I went stumbling forward.\n\nI braced for hitting a wall and instinctively closed my eyes. A moment later, when there was no impact, I opened them again. We were in a smaller hallway leading forward to where a brilliant light flooded the far end. I looked over my shoulder at August and was also amazed to see behind him it appeared that there was no wall, no illusion, just the far side of the hallway from which we entered.\n\n\"What kind of magic is this?\" I wondered aloud.\n\n\"Simple illusory magics. One of the easiest spells to learn in fact. Deceiving only one sense is child's play.\" He boasted. He ushered me forward.\n\nWhen we reached the end of the short passage I stepped out into broad daylight. There were plants surrounding us, many of them colorful greens and exotic looking. I could see tall trees and lush, climbing vines. Further away were bright flowers and shrubs. A large stone fountain was set in the middle of the circular room and enormous panes of glass formed a dome for the ceiling. Beyond the glass roof I could see clouds and sky trailing lazily overhead. As I stepped fully into the room, I was staggered by its sheer size and beauty.\n\n\"It's a greenhouse.\" I said as I began to poke through some nearby foliage.\n\n\"Indeed it is.\" August agreed. \"This is where I grow herbs for the kitchen and certain plants for alchemy.\" He stepped up beside me and placed his hands on his hips. He looked quite proud of this place. \"I like to come here during the day sometimes to read, enjoy a cup of wine. I rather think I did a good job, don't you?\" He inquired.\n\nI could tell he was fishing, not subtly for a kind word, but I had to admit it was quite beautiful. \"It's amazing what you've created here, old man.\" I declared, nodding as I did.\n\n\"Old man!\" He barked. \"I'm not so old! Why, I'm in my prime! I've lived half a dozen of your lifetimes and plan on several more!\" He said with more than a note of indignation.\n\nI raised an eyebrow. \"No need to be so defensive. But that's an awful lot of grey beard and not so much grey hair is all.\" I said casually.\n\nHe puffed and crossed his arms tightly to his chest. \"I share something nice with you and you insult me!\" He said crossly.\n\nI absently put my hand to his robed shoulder and gave him a reassuring pat. \"Wasn't my intention, I promise.\" I stifled a smile, knowing he wouldn't receive that well. \"You are older than me at least, but I won't call you old again, at least when you're around.\" I finished.\n\nHe visibly relaxed a little. \"It catches up with you.\" He said quietly.\n\n\"What does?\" I asked.\n\nHe gave a small sigh. \"Age, growing older. You're right of course, I'm not quite the young hellion I used to be, but I don't feel like I'm even close to being done.\" \n\nHis abrupt candor made me forget he wasn't human in that moment. \n\nWe reached the round fountain where water spilled from many tiers of heavy stone, and sat on the wide edge, next to one another.\n\n\"What do you still need to do?\" I asked.\n\n\"You and your curiosity.\" He shook his head. \"The truest sign of youth.\"\n\nI gave a short laugh. \"I'm a grown man, yet you call me boy, and speak of youth! That's just as insulting to me!\" I assured him.",
        "He gave me a kind look. \"I don't mean it to be. I think being young is the greatest gift of all. There's so much you will do in your life, it's just beginning.\" He got sort of a faraway look in his eyes, like he was remembering something important from long ago. \n\nI rubbed my knees with my hands at hearing his words. \"Does that mean I won't be here forever?\"\n\nHe looked at me and then away again. \"No, you won't be. You're not my slave. I...\" His voice became fainter. \"You're my servant true, but I value your companionship.\" He refused to look at me as he said this final part. \n\nI felt genuinely stunned. Was it possible I had misjudged the man? I puzzled over how the mage could be both towering and terrifying in the square, showering the crowd with magic, and also a lonely, sensitive old hermit. It was difficult to consolidate the two in my head.\n\nI said nothing, I really had no response prepared. I suppose I felt some gladness that he enjoyed my company. I had grown over time to look forward to our game days, talks about books I had finished reading and the exceedingly rare kind word about one of my dishes. If I really stopped to consider, the best parts of my days were times spent with August.\n\n We spent the entire afternoon in the greenhouse. It was warm, and relaxing. The mage showed me around, what plants I shouldn't touch, which ones were edible, what I could pick to use in the kitchen and how much I would want to take. We returned to the kitchen late where he helped with dinner. It was the best day for me in quite some time.\n\n I woke up the following morning, allowing myself enough time to dress and head to the kitchen. After I brought August his morning meal he invited me to a game of Conquest. I had brought my own breakfast and so we ate in silence and employed our strategies against one another. \n\nAbout halfway through the game he said, \"Tomorrow's laundry day. I'll leave my clothes and linens outside my chamber door. Make sure to clean yours too.\"\n\nMy mind was focused entirely on the task at hand so I replied with, \"Mmhmm.\"\n\n Normally I would wash all of the laundry the night before and then hang it out to dry overnight, letting the morning sun finish the task the next day. I would wake up early and place the cleaned clothing and blankets back outside his door in a basket from the laundry room. This time however I had been distracted by our game and had also been excited to get back to a book about a thing called space and its explanation of stars and large round orbs called planets. When I awoke I began reading my book, knowing there would be time before I had to prepare breakfast. As I casually left my room, I still had the book in hand, learning about asteroid belts and comets. It wasn't until I was passing August's chamber that I stopped when I noticed the high pile of clothes sitting on the floor. My eyes grew wide.\n\n\"Oh fuck!\" I exclaimed into the silent corridor, causing a faint echo. My heart began beating faster. I had completely forgotten, these were supposed to be washed and dried by now.\n\nI grabbed up the heavy load of wash and ran hard back down the corridor to the laundry room. I frantically began running hot water into the washtub and added soap. I started scrubbing some of the old mage's robes, tossed them aside, grabbed a pair of his underwear and scrubbed those too. There was no way I had time to finish. I had about thirty minutes until I would have to serve his breakfast and there was no way any of the laundry would even have started drying in that time. I cursed again under my breath, prioritizing in my head. Breakfast would be most important, the laundry could wait. I would have to apologize, profusely, and finish the cleaning and drying later.\n\n As I reached August's study, half an hour later, with a plated omelette in my hands, I already had an apology on my lips as I shouldered my way into the room. When I entered however I suddenly found myself at a loss for words. I had expected that August may have noticed this morning that the dirty clothes heap was still outside his door, and not the expected basket of clean laundry, at best I considered he might not care too much and likely still had something clean to wear. Instead I became aware of the stark reality straight away. \n\nThe mage was at his desk, as usual, but instead of sitting behind it, he was standing in front of it, completely nude. He had his back to me and was leaned forward, apparently reading a book.\n\nI stuttered. \"Uh, I uh, have your breakfast here.\" I said awkwardly.\n\nAugust stayed turned away. \"Oh you can just set that on the desk.\" He said casually.\n\nI didn't mean to gape but this was also the first time I had ever seen the mage dressed down, let alone fully naked. He was in better shape than I would have guessed, maybe younger too. He was quite fit, not terribly muscular, but in good shape, and not just for a man of his age... whatever that might be. I nervously approached the naked man with his breakfast, glancing down at his ass as I did. It was plump, round. I surprised myself again by how my eyes lingered there, but it was also the first time I had seen anyone else naked in a couple months, I couldn't help but have a look.\n\nWhen I reached the desk I set down the plate at the mage's side and decided to beat a hasty retreat. Instead August turned fully around to face me, book now in hand.\n\n\"Breakfast looks good.\" He remarked.\n\n\"Uhh, thanks.\" I replied, red-faced.\n\n\"What's wrong, boy?\" He asked.\n\nMy eyes darted to his crotch, then to the books over his shoulder, back to his crotch and then up to his face. I really had no idea where to look. I felt sweat beading my forehead. \"I didn't expect you to be in a state of undress.\"\n\n\"Oh is that so?\" He asked. \"Well what should I wear when all of my clothes are in the laundry?\"\n\nI let out a sigh. \"I'm sorry, it won't happen again. I understand I messed up.\" I said.\n\n\"I see.\" Replied August. He leaned back with his hands on the edge of the desk and crossed his legs in front of him. The new position of his thighs forced his flaccid cock and low-hanging sack to push up and outward, almost pointing the thing at me. He was a good size I couldn't help but notice, his groin topped by soft-looking silver pubic hair. His prick differed from mine somewhat I could tell, he had some extra flesh hanging over the head, hiding it from view. His stomach had a bit of a paunch and a trail of grey hair dusting it which exploded outward as it reached his chest. His chest was broad with some roundness from age. It appeared strong, with a bit of softness on top, like the rest of him. \n\nI found myself at a loss for words. I was uncomfortable with his nakedness, my furtive glances, and his nonchalance at my discomfort. He had promised not to light me on fire anymore, but I had a strong suspicion that it might be preferable to this new punishment.\n\n\"Look, you win. I'll go finish your laundry.\" I said as I put my hand to my forehead, shielding my eyes.\n\n\"Well what's the hurry? Clearly it can wait. Why not have a game with me?\" August asked coyly. He was relishing how uncomfortable he was making me, with minimal effort on his part.\n\n\"A game? Now?\" I sighed. I shifted my weight anxiously.\n\n\"Yes, I would think now is a fine time.\" He said and moved over to the small gaming table.\n\nHe sat and gestured for me to join him. I sat opposite and tried to focus on the board. Unfortunately the table only came up to our knees, meaning that just behind the board were the mage's genitals, invading my view. \n\n\"Blue or red?\" August asked. He absently scratched the side of his nose.\n\n\"Don't care.\" I responded.\n\n\"Oh come now, boy, don't you usually play red? It would certainly be a fitting color choice for you at the moment.\" He flashed me a devilish grin.\n\nI blushed even more deeply. \n\n The game was excruciating. August purposefully took his time for every move, chuckling to himself if it made me squirm. As for me, I gradually began to relax a little. August had a good body and seemed to be proud of himself. I shouldn't be so uncomfortable, we were both men after all. Aside from the almost white flesh, he looked very similar in build to any human male of comparable age. The bigger problem, which shocked me to discover, was the longer I allowed my eyes to settle on his naked body, I could feel the beginnings of arousal between my legs. I chalked my condition up to the strange stress of the situation. I focused intently on the rest of the game until my erection subsided. When we were done I got quickly to my feet.\n\n\"I'm sorry about the laundry.\" I said firmly. \"You are a strange man who teaches lasting, if uncomfortable lessons.\" \n\nHe laughed, resigned. \"Well if you're done eyeing me then, I guess you can go finish your chores.\"\n\nI gave the slightest of bows then hurried from the room, grateful at last to be free of the hairy naked fellow.\n\n Over the next week and a half it was business as usual in August's tower. I wasn't late on meals and I didn't forget the laundry again. However, if I'm being entirely honest I thought about that day in his study frequently. I was reminded of when I was living in town and had fooled around with Anders. We had gotten pretty drunk, done some night fishing and started talking about our sexual exploits with some of the girls in the town. All the talk had aroused us enough to where we soon found our hands down the other's pants. It felt better than my own hand if nothing else. We had brought each other to orgasm, had a good laugh about it the next day and gotten together a few more times. I wondered if it was something the old mage might entertain, not that I would ever broach the subject. Though he and I were now getting along, I still had to remind myself of the destruction he could bring to my town below, or the pain he could inflict on me personally.\n\n A few days later we were in a tense game of Conquest. August had begun a rather offensive campaign from the start which was somewhat surprising compared to his usual wait and see approach.\n\n\"There's going to be a gathering at my home in the next week.\" He said as he moved one of his gargoyle pieces diagonally across the board.\n\nI gave him a questioning look. \"What does 'a gathering' mean?\" I asked.\n\n\"Several mages. We try to meet once a year or so and this year happens to be my turn to host.\" He added.\n\n\"What does this mean to me?\" I asked as I shifted one of my own pieces onto a defensive square.\n\n\"You'll need to cook for six of us, as well as yourself for a few days.\" He informed me. \"Try to prepare your good meals, if you would.\"\n\nI stifled my initial haughty retort and instead asked, \"What are my good meals then?\" \n\n\"Your omelettes are quite good. For dinner, you made a spiced ham once that I rather enjoyed.\" He said as he made another move.\n\n\"I didn't know you ever enjoyed my food.\" I said with some brightness in my voice. \"You've become quite the flatterer.\"\n\nHe shook his head. \"This is why I try to never pay you any compliments, boy. They go straight to your head.\" He gave a small chuckle, which in turn made me smile.\n\nHis voice turned more serious then as he said, \"You will put food on the table at breakfast and dinner for the mages, but I want you to keep yourself scarce otherwise.\"\n\n\"Why?\" I asked.\n\nAugust paused, halfway through making his next move. \"There will be a mage here, named Fraust. I don't much like him and he doesn't really care for me either.\" He said with a frown.\n\n\"I don't really understand why--?\" I began but August cut off my response.\n\n\"If he knows I have a fondness for my servant he may... harass you. I'd prefer he didn't.\" He asserted.\n\nI gave the mage a sideways smile. \"First you tell me you like my cooking and now you have a fondness for me? Who knew what a softie you were becoming.\" I teased.\n\n\"Oh shut up.\" He growled. \"First off, I said you once made a ham that was not immediately nauseating, and second I was merely implying you aren't the absolute worst servant I've employed.\" Behind his mock insults I could see a smile hiding at the corner of his mouth. \n\n\"I'm still taking both of those as signs of adoration.\" I said, beaming.\n\nHe laughed at my attempts at humor and I laughed with him. I couldn't help but like it when he laughed. It was the closest I could come to feeling like I had a friend in this place.\n\n For the next several days leading up to the gathering of mages, August was in his study, absorbing thick spellbooks and tomes from morning to night. In fact it was beginning to make me mildly worry about him. He took every meal at his desk and only left it to relieve himself. I wasn't even sure if he was sleeping in his bed at night or just passing out where he sat.\n\nIt was now the day before the mages were due to start arriving at the tower. I had just set down some eggs and bacon for August on the desk near his elbow when I looked him over to make a full assessment. His hair was greasy and matted to his forehead. His long grey beard was unkempt with whiskers pointing in all directions. His face and hands appeared grubby, I could only speculate on the conditions beneath his heavy robes. I dared to take a sniff near him and almost coughed. The smell of unwashed man was thick in the air around the mage.\n\n\"When are your mage friends arriving again?\" I inquired.\n\n\"Please boy, don't bother me, I still have much I need to memorize and prepare before their arrival.\" He said dismissively.\n\n\"When are they arriving?\" I asked again a little louder than before, lowering my face near his.\n\nHe gave me an annoyed look. \"Any day, could be today, probably tomorrow, they'll arrive as they each make the journey, it won't be all at once.\"\n\n\"Well then,\" I began. \"You're taking a bath, right now, you stink.\"\n\nHe scowled up at me. \"Later, that's not important.\" He said and peered back into his book.\n\n\"I assure you, it is. I'm not letting you meet with your fellows looking and smelling like you do. Get up.\" I ordered him. When he didn't budge I slammed his book shut.\n\n\"Hey! Boy! Enough!\" August shouted.\n\nHe made a move to reopen the book but I snatched it away from his grasp and tucked it under an arm. With the other I grabbed him bodily by the armpit of his robe and lifted him to his feet and out of his chair.\n\n\"If you won't listen, then I have no choice.\" I said, as one might instruct a disobedient child.\n\nHe groused and swore but ultimately he allowed me to walk him down the hall to the bathroom. I left him in the doorway long enough to start the hot water filling the large tub. When I looked up a moment later he had opened the book again and was reading where he stood.\n\n\"Are you kidding me?\" I asked incredulously. \"Strip and get in the tub!\" I ordered.\n\nHe pretended to ignore me.\n\n\"August! Get out of those disgusting robes and get in the damned water!\" I yelled at him.\n\nHe gave me a startled look. At first I figured it was the tone of my voice but I quickly realized it was the first time I had ever called him by his name.\n\n\"No need to shout at me.\" He said after a few moments. He walked slowly to the edge of the tub where he set his book down on one of the small counters. He began to untie the thick sash at his waist and I looked away to give him some privacy while he finished shedding the rest of his clothing. He gingerly stepped into the steaming bath. \n\n\"Oh, that's too hot!\" He exclaimed and tugged his foot back.\n\n\"No it's not.\" I assured him, I stuck my arm in to make sure. \"And besides, it's going to need to be hot enough to wash the filth from you. You look like you haven't washed in days.\" I glanced over his grubby nude body. Once again I could feel a tinge of arousal, especially with him standing so close, and me on my knees at the edge of the bath.\n\n\"It has been several days I think.\" He admitted sheepishly.\n\nAugust slipped into the bathwater to his knees slowly as I turned the faucet off. The tub was now full and let off a constant steam into the large room. He was lowering himself into the water the rest of the way when he unexpectedly gave a sharp yelp. \n\n\"What's wrong?\" I asked in a panicked voice.\n\nHe looked at me shyly. \"Oh nothing, just, I might've burned my berries a bit.\"\n\nI couldn't help but laugh at the older man. \"You call them berries?\" \n\n\"I don't think it's very funny.\" He muttered indignantly. \n\n\"You're right, and I'm sorry.\" I conceded. I'm not laughing at your... berries getting scalded. Just your name for them. I didn't mean to laugh at you.\" I assured him.\n\nHe finished submerging himself and sat on the step inside the spacious tub with the water to his waist before reaching out and grabbing up his book.\n\n\"What are you doing?\" I asked, shaking my head.\n\nAugust still had on his reading glasses so when he turned to look at me he tilted his head down to fix me with a stare. The glow from his eyes looked not unlike the steam rising from the water.\n\n\"I told you I need to finish some studies before the others arrive. I allowed you to drag me in here. If I need a scrub so badly, you do it!\" He snarled and turned back to his book, clearly still upset over me laughing and wounding his pride.\n\n\"This was not part of our arrangement.\" I said rigidly. August said nothing in reply. \"Really?\" I asked aloud. \"It's not enough that I did you the favor of forcing you in here so you aren't a stinking mess when your fellows arrive? You expect me to bathe you?\" The mage still refused to respond.\n\n\"Stubborn ass.\" I said, resigned. \"Lift your arm.\"\n\nAugust held one of his arms straight out from his side while I found a washcloth and bar of soap on the counter next to me. I dunked the cloth into the warm water and began to clean the man's arm. I spent extra time on his hand and under his nails where he was dirtiest. His long arm was more muscular than I might have guessed and the forearm dusted with fine silver hair. \n\n\"I'll leave your other arm to the end so you can continue your reading.\" I offered.\n\n\"Thank you.\" He said simply. \n\nI didn't have any experience bathing someone else, but I determined it was basically the same as when washing myself: start at the top and work your way down. \n\n\"Lean back a little.\" I said, and he did. \n\nI wrung out the cloth over the mage's head and then applied some soap to it and began to clean his short grey hair. It felt somewhat odd, washing another man's head. I washed and rinsed and felt the soft short hairs between my fingers. I continued down to his neck. As I scrubbed here he leaned forward and let out a small sigh. I supposed it must feel good, relieving some of his obvious stress over the other mages arriving. I tried to massage his neck and shoulders as I washed them. He actually set his book down to focus on my ministrations. \n\n\"That feels incredibly good.\" He informed me. \n\nI said nothing but moved to his other side and washed and cleaned his other arm since it was now available. With that finished I rolled up my pant legs and stepped into the bath beside him. I needed to wash his front and I couldn't do that easily from where I had been kneeling behind him. \n\n\"Close your eyes.\" I said softly.\n\nHe did and I carefully removed his spectacles, setting them aside next to his book. I again applied warm water to his head, over his face, letting it course down his cheeks and sharp nose, through his long silver beard. I lathered up the soap and gently began to wash his face, around his eyes, the deep creases across his forehead and into the tangle of facial hair that was his moustache and beard. With his eyes shut and a completely serene look over his face I noticed for the first time he might actually be a handsome man. My hands found their way beneath the flowing scruff and delicately washed his throat. I felt him swallow gently under the cloth. I then carefully washed his beard which came down to the middle of his chest. The stray whiskers began to fall into place as I worked. Seeing as how the beard ended in his hairy chest, I decided to continue washing him here as well. I was enjoying this part the most, feeling each manly breast in turn, gently massaging them with the washcloth as I did so. His nipples were a pale pink and I attended to these too, carefully encircling each one with the cloth and sliding my fingers over them. ",
        "\"Ohh.\" August uttered softly. \n\nHe seemed to still be enjoying his bath and so I continued to wash him. Every now and again my eyes would drift down his body to his crotch, just under the warm water. I cleaned his furry armpits and began to descend further down his front. I should have stopped by now, I reasoned. I likely should have stopped with his face and beard. The rest he should have no problem doing himself, so why did I feel compelled to continue? Not for the first time I looked into the clear water under his belly at his groin. As I had been tending to his chest I could see his manhood had begun to stir. I appreciated his length and girth as he reached his full size after another minute of washing his nipples and chest. The head of it, though mostly hidden by skin pushed out of the water against his belly. \n\nI continued down past his chest to his slightly rounded stomach. I wetted and washed him gently, poking into his navel and rubbing along his sides. I gulped as I allowed my hand to move still lower on the man's front, almost of its own accord. I was distantly aware of my own erection tenting my soft pants outward in front of me. The cloth in my fingers slid into his soft mass of pubic hair and I felt the heat from his maleness as it nudged against the back of my hand. I continued to rub gently around in the patch of dense hair, enjoying the feel of his hardness against my skin. \n\nTo hell with it, I thought. I lightly grabbed his cock around the base through the washcloth and gently moved up its length to the skin-covered flare of the head when August suddenly grabbed my wrist in his hand. I froze in place and looked to his face.\n\nHis eyes were a mixture of emotions. He appeared to be lost somewhere between his better judgement and lust. I waited for him to say something. I expected him to tell me to stop, but then I also expected him to tell me to keep going. We stared at each other in this way for what felt like an eternity until at last he released my wrist from his grasp. I considered that he had in fact grabbed me to stop what I was doing, but he hadn't been explicit about it, and I was still too aroused to read further into his actions.\n\nSo I resumed stroking the old mage's plump cock. I let the washcloth float away and reveled in the feel of his hot flesh pressed into my palm and fingers under the water. I was bent over, and reached my other hand between his legs to gently rub and massage his testicles. In the warm water the skin of his sack felt so soft and good in my hand. I watched with fascination as I stroked back down the length of his shaft as the skin over his cockhead pulled back down, revealing a light purplish mushroom. His slit, just above the water oozed clear fluid. I glanced back at August's face. He watched me through half-lidded eyes as his chest rose and fell in deep breaths. I began to pick up the pace of his masturbation, licking my lips as he began to thrust into my hand. I kneaded his balls as I jerked his fat member ever faster. \n\nAfter a handful of minutes his breathing became irregular and his thrusts were wild. \n\n\"Oh, ohhh, I'm about to... I'm cumming!\" August shouted as his manhood spasmed and spat out several thick blasts of semen over his stomach and beard. I had leaned in close to his face as I had been jerking him and only now was aware that our faces were mere inches from one another's. I looked down as his prick finished ejaculating, but continued to gently bob in my hand. There was a large glob of his essence dripping over two of my knuckles which I brought to my lips and sucked into my mouth. August met my eyes with his as I did so. His taste was not at all bitter, but it was salty and something else, tangy perhaps. His breathing was still quite ragged as he remained slumped against the back of the tub. He raised an arm and placed a firm hand at the back of my neck. My eyes widened with surprise. He pulled my head down, closer to his. My lips were so close now to his own, I could feel his breath against my skin and I trembled with anticipation.\n\n The blue fire light of the everburning torches in the room flickered suddenly, then dimmed, then became bright again, in a very deliberate way. We both regarded them, when August suddenly jumped to his feet in the bath, a look of recognition spreading over his face.\n\n\"One of the mages has arrived!\" He sputtered. \"I, I need to get ready! Dammit!\" \n\nHe rushed out of the room, dripping wet and naked. I could hear his footsteps disappear down the hallway toward his chamber. I sat down on the edge of the bath and let out a heavy sigh. What had just happened here? What began as a servant washing his master had taken a turn, a turn down a road on which I couldn't see anything in my path. I was at a loss. He had wanted to kiss me at the end there, hadn't he? Was that something I also wanted? Would this be something we could talk about, or was this a one time mistake that had been fortuitously interrupted? \n\nI sighed again as I stood and collected the mage's book. I'm sure he hadn't meant to leave it in the bathroom. I decided to head to my room for now and reflect on what had transpired. The gathering of mages was now officially underway. I already wasn't sure how the next few days were going to play out but I had begun to develop a feeling of dread in the pit of my stomach.\n\n\n\n\n\nCHAPTER 5: GATHERING\n\n I stayed in my room for the next few hours. I wouldn't leave it again until it was time to make dinner for the mages, as August had instructed. The everburning torch in my room had dimmed only once more, meaning another mage had arrived since the first. I had opened the book August left in the washroom across my lap as I waited for the hours to pass. It was nothing like any of the others I had borrowed in my time here. This one was full of strange symbols and much of the book was in a language I had never seen. Mostly I flipped through the old yellowed pages and scratched my goatee warily. This was a true spellbook, I reasoned. It was written in the language of the mages and not likely something August would ever knowingly let me peruse. Not that it mattered, it made as much sense to me as wings on a fish. I was about ready to close the thing and stuff it under the bed when I turned another page and saw a peculiar symbol there. It was like a spiral with five rays underneath. The spiral took up most of the page and had six smaller symbols written below. To this day I can't explain what it was that drew me to the image, but the longer I stared at the page the more sense it made. It was a foolish move on my part and honestly just dumb luck that I moved my hand over the symbol and pressed my fingers to each of the five rays. A word came to my lips and the symbols under my wrist shifted into letters I knew.\n\n\"Vortex.\" I said quietly, almost subconsciously.\n\nThere was a sting, no, more like burning as the page glowed around my hand. I tried to tug it back in fright but the book held me firmly. If it had lasted any longer I may have cried out for August but instead the glow subsided and the burning cooled and then was gone. My hand came suddenly and easily away from the page and I flipped it over to see the damage to my palm. There was nothing, just normal creases in the skin. \n\nI shook my head. Stupid! I thought. I shut the book and stuffed it under my bed. What the hell was that? Had I cast a spell? No, that wasn't it, more likely it was some sort of trap the mage had left there for me to stumble into and I would be punished somehow for it later. I shuddered at the thought. Perhaps I could just come clean before he learned of my interloping.\n\n I arrived in the kitchen and began to prepare some fresh game birds for the night's dinner. Sarthis had arrived the previous day with a crate of supplies from the village. The ham that August had specifically requested would have to wait until tomorrow as it needed to slow roast for much of the day. \n\nThe meal was nearly ready when the three mages began to enter the room. I watched them closely, but made an effort to mask my glances. August led them over to his dining table where he sat in his usual place and they found chairs for themselves. It was another man and a woman. He was very tall, easily half a head taller than August. He was bald-headed with a bluish white stubble beard. He was very solidly built, especially for a mage. In fact he was a very intimidating specimen to my eye. The color of his skin was as white as winter itself.\n\nShe on the other hand was shorter, perhaps only a little taller than myself. I could hear her laugh from where I was in the kitchen and even from this vantage point could see she was quite beautiful. Her hair was loose and an absolute mess of long, springy curls falling midway down her back. The woman's hair had the faintest hint of green but otherwise might be considered white. Her flesh appeared a light grey, perhaps a shade darker than August.\n\n As I finished dinner preparations, I loaded my arms up with three plates and approached the long table. Each of the mages watched me intently as I reached the table and began setting their food in front of them. I suspected I should remain silent, and so I was. It was the woman who spoke first.\n\n\"And what's your name?\" She asked with a kind smile. \n\nI was about to give my answer when August cut in and said. \"It's boy. Just call him boy.\"\n\nI felt my anger flash behind my eyes but knew I wasn't to correct him, not in front of his guests.\n\n\"Oh you're terrible, August.\" The woman said with a slight look of disgust. \"You know they have names. Humans are proud of their names, aren't you?\" She smiled at me warmly again and I returned the smile.\n\n\"I'll fetch some drink.\" I said and left the table.\n\n\"Wine!\" Called August after me.\n\nI returned with a wineskin and a few glasses. As I distributed them I could feel the other mage watching me. I didn't care for the way he looked me over. Cold smoke rose from his eyes.\n\n\"He's quite nice looking.\" Said the bald man in a low voice. \"Tell me August, do you have a thing for male humans then?\"\n\nAugust sighed in response. \"No, Fraust, he's just the servant that the town offered.\" \n\nI would be lying if I said his admission didn't sting a little.\n\n\"Pity.\" Said Fraust, leaning back in his chair. \"I bet you could have some fun with this one.\"\n\nI suspect I blushed slightly, thinking about the 'fun' I had enjoyed with August just hours ago. I think I even noticed August himself shift uncomfortably at the mention.\n\n\"Don't be so vulgar.\" Said the lady mage. \"At least wait until the young man isn't standing here.\"\n\nFraust laughed. The sound of it was dark and cold and sent a literal shiver down my spine. I recalled that this was the man August had warned me about. \"Oh Lyfa,\" He said. \"Humans were made to hunt, kill and mate. They don't have our sensibilities. I only seek to enjoy the latter with them occasionally.\" He gave me a smile. I quickly looked away as I poured the wine.\n\nLyfa shook her head and folded her arms. \"There's more to them, quite a lot more. You could learn much about that from the humans within my walls.\"\n\nWithin her walls? So each mage controlled their own town? Some of us had speculated that this might be so but this was the first confirmation of it I had heard.\n\n\"You're too gentle with them. They need to be commanded, controlled, to reach their true potential.\" Fraust returned sharply. He turned to August then and gestured between himself and Lyfa. \"Which of us is right here? How do you manage your humans?\"\n\nAugust looked at Fraust carefully, then shot me a glance. \"They need to know who's in charge, to see the power we wield. Otherwise they might prove too difficult to control.\" \n\nI couldn't keep silent any longer. \"If there's nothing else?\" I said tersely. \n\nIt looked like August might say something more, then thought better of it and waved me away. I left the room taking long, angry strides. Behind me I could hear Fraust's chilling laugh again. I headed back to my small room and slammed the door. \n\n Lord but I could be stupid. What did I think was going on here? I knew the nature of mages, the way they worked, hell, even the way they viewed us humans. We were just something to control through fear and use for their own selfish gains. August may have started to tolerate my company but it was obviously just a way for him to relieve his boredom. A bored man will talk to his dog, but he is still the master after all, I thought bitingly. Ugh, why did I have to get him off in the bath? Well, actually that made some sense at least, I was looking forward to reciprocation, that was all. \n\n I rolled onto my side and pulled the blankets up around me. No matter how I tried to make the best of my situation, no matter how many games I played with August or how many meals I prepared, this place was a prison, and he the jailer. It was high time I thought about escape, though I was not yet sure where to start.\n\n The next day I made breakfast and poured cider for four guests as the torch in my room had informed me of their arrival. I started the ham roasting in a large covered pan in the large stone oven for dinner later. I decided not to stay for the breakfast conversation or Fraust's lecherous stares. Instead I left the cups and plates of food around the table and returned to my room. If I was desperately needed, let August fetch me himself. \n\n Some hours passed and I read, not from the spellbook hidden beneath my bed but the bestiary of mythical monsters I had borrowed two days ago. There was a sharp knock at my door in the afternoon and I was in mid response as it opened and August entered. His expression surprised me as I had expected a lecture for not sticking around to serve breakfast. Instead his face was almost sorrowful.\n\n\"What do you want? I wish you would wait for my reply before always barging in.\" I snarled.\n\n\"Can... can we speak?\" His tone was unfamiliar to me.\n\n\"What about?\" I asked bitterly.\n\n\"Well, plenty, yesterday for starters.\" He scratched the back of his hand. It appeared he might be nervous, something I had never seen from him. \"May I sit?\" He moved to the edge of the bed beside me but I stopped him.\n\n\"No you may not sit. This is my room, my bed, my one refuge in this place. You can keep standing by the door.\" I informed him.\n\n\"Alright.\" He said, resigned. \n\n\"What about yesterday? About dinner?\" I asked.\n\nHe shifted uncomfortably. \"No, well, yes that, but I meant in the bath.\"\n\nI leaned back against my elbows and considered my response. \"You needed a washing, so I washed you. I suspected you might need to shoot, to relieve some stress, so I helped with that too.\"\n\nAugust stopped fidgeting and simply looked at me. \"You just... thought you'd bring me to orgasm, as a favor?\" His tone was something of disbelief.\n\n\"Yeah, so what? Humans are good at mating I hear.\" I spat.\n\n\"Don't be angry, I warned you about Fraust.\"\n\n\"I'm not angry at Fraust!\" I exclaimed. I didn't like being so much smaller than August in this moment so I stood at the side of my bed. \"I could give a shit what that freak says about humans.\"\n\n\"You're mad at me then.\" August said. \"Because of what I said at dinner.\"\n\nI threw my hands up and paced in front of the mage. \"Well yes, obviously, but, I thought maybe in the bath too...\" I trailed off, I wasn't sure what I was trying to say. I rarely get out what I mean when I'm upset.\n\n\"What about the bath?\" He pressed.\n\n\"You just, jumped up and ran out. I thought maybe... ugh. Damn, I don't know.\" I sputtered.\n\nHe moved closer to me, it almost looked like he was reaching out to me but he pulled his hands back. \"I'm sorry, I can be terribly inconsiderate, I got distracted.\" He sounded uneasy.\n\nThe conversation felt like it was going nowhere in a hurry and I was about at my limit for the awkward way the mage was acting suddenly.\n\n\"Can we be done here?\" I shouted. \"I get it. I made a mistake, again. Obviously you aren't interested in your fucking servant, why would you be? I do the laundry, I'm from a town without books behind a wall you built! You talk with your friends about me like I don't exist and for some stupid reason I liked you!\" Good lord, where was this all coming from? Why couldn't I stop myself from letting the words spill out of me? I was shocked to realize that my eyes were hot with tears and one had spilled down my cheek. \"Oh what the fuck?\" I said, so angry with myself for showing him my weakness.\n\n\"Lawrence, I--\" August began and reached for me. He placed his hands on my shoulders and gently pulled me into his chest. I was angry, and confused, but I sure as hell did not want to be held like some sniveling child. I shoved him away hard and he struck against the wall heavier than I expected.\n\n\"Shit, I'm sorry!\" I exclaimed, still upset, but also upset that I might have hurt him.\n\nAugust regained his composure and said. \"Please don't apologize to me, if anything, I'm the sorry one. Please don't cry.\"\n\nI was still crying in front of him? I had no idea about what could be going on with me, but I knew he couldn't stay here. This was my room, where I could be alone when I wanted. I deserved that.\n\n\"The ham is in the oven, it will be done by dinner.\" I said, as I wiped the tears from my face with the back of my arm and sniffed to stop any further crying. \"Please don't make me serve it tonight.\" I pleaded quietly.\n\n\"No, that's fine, I--\" August began.\n\n\"Please just go. Do me this favor and get out. I don't want to talk to you anymore.\" I looked absently at the floor between us.\n\nAugust shifted, like he wouldn't comply with my request but then he gave a slow nod and shuffled out of the room, closing the door behind him.\n\n I allowed myself to fall back onto the small bed which groaned from the weight. A thought occurred to me as I lay there, staring up at the ceiling: It could be the book, that spell I had touched, making me act like a jackass. It was some sort of mind charm. Now there was a scary thought. And yet, what if it wasn't? What crazy words had I just spouted? I had admitted I liked him. I did like him, well, had liked him. We were becoming friends. There wasn't anything more to our relationship than that. Right? \n\n He had called me Lawrence, for the first time. I felt warm wetness filling my eyes again. Damn.\n\n\n\n\n\nCHAPTER 6: CONSEQUENCE\n\n After I awoke the next morning, I decided to act like nothing had happened the previous afternoon. That spellbook had bewitched my good sense, August was the same craggy old coot he had always been, and his guests, who had all arrived by this time were not worth my energies or attention. I would still have to prepare them breakfast in an hour or so, but beyond serving their meals, no energies or attention. I let out a breath and went to wash up in the bathroom and then headed to the kitchen. \n\n Scrambled eggs, toast with butter and jam, a pork hash and cider should suffice. I was cooking for seven now, including myself, so I adjusted the quantities as I best saw fit. I worried in the end I may not have made enough. Hopefully no one wanted seconds. Everything was more or less ready on time as the mages flooded into the room. They made quite the group, the six of them, ranging in height from tall to towering with their light hair, skin and glowing eyes. They spoke quickly and somewhat nervously with one another as they took their seats around August's dining table. Their serious tones informed me they were discussing something of importance, though I couldn't quite hear what. Each seat became filled and I realized that the number of high-backed wooden chairs around the large table was not arbitrary.\n\n I added food to each plate and briskly walked them over to the table, setting them down in front of each mage. As I worked I could see August out of the corner of my eye, watching me with a note of concern on his brow. If the two of us were alone I would tell him to shove off and mind his damn business. As it was I tolerated him worrying after me and set to passing out cups for cider.",
        "Fraust also watched me, though his look was not one of concern but rather an amused smirk. He also watched August carefully. As I passed him a cup he deliberately placed his hand over mine. His touch was cold, literally. I felt a chill run through the flesh of my arm.\n\n\"Thank you, boy.\" He said simply. August clenched his jaw over the exchange, but said nothing.\n\n The other three mages included a man named Bringer, a portly fellow with a bushy, slate grey beard and short thinning hair on top. Void was what they called the other female mage. She was so slight in build and had skin so pale it was almost translucent. Lastly was the tallest, and also thinnest of the group, a man called Chronassus, who also appeared rickety with age.\n\nThey spoke of 'the seed at the zenith' and 'remaking the wall'. The wall I thought might mean the one around my village, or perhaps just one of the many walls found here in the magedom. I couldn't make out much of what they were saying, and, to my dismay they used hushed tones while I was hovering about, removing plates or freshening drinks.\n\nBringer cleared his throat loudly. \"Is it wise to keep this human around? I'm not entirely comfortable speaking about our business in front of him.\"\n\n\"Oh he's harmless.\" Fraust replied with a sly grin. \"He's just curious. Maybe he should join us?\"\n\n\"Don't be a fool!\" August snorted in reply. Then, giving me a serious expression said, \"That will be all boy, see you at supper.\"\n\nMy interest had been piqued enough to want to stay, but it was obvious by now that the mages were not going to speak candidly in my presence. I nodded to the table, gave a tiny bow and headed out into the hallway. I paused just outside the door. It was no good, where they sat at the dining table was just far enough away that I couldn't make anything out clearly. Disappointed, I retreated to my chamber. \n\n There was next to nothing to do in my room and I rapidly became bored. I wanted to head to the garden, or play a game of Conquer, or borrow a new book from August's study, but I knew it was likely in my best interest to stay put. August would be displeased if he caught me roaming the hallways with his guests here and I couldn't be sure how they might react if they saw I had the run of the place, particularly Fraust. There was something about that man. His advances were off-putting, and the smile was obviously just for show, but there was something more sinister beneath, something he kept concealed.\n\nAt last I couldn't stand the idleness anymore and decided it might be alright if I just quickly grabbed a new book to read from the old man's study. I would duck in, grab something, and dart back to my room, no one would be the wiser. I knew they were likely finished eating, but I could check by the study with an excuse. If August was in, well, I would only ask for a book if he was alone. If it was deserted as I assumed, there was nothing to worry about. I poked my head out the door into the hallway, which was empty. I quickly padded down the corridor to the fork which led to the study. I couldn't see anyone or hear voices. I dashed to the study door and knocked. No answer, so I knocked again. When there still came no reply I opened the heavy wooden door and slipped inside.\n\nI quickly headed to the nearest shelf and began scanning book titles. I was about at the end of the first row, crouched low to read the titles on the bottom shelves when I became aware of someone standing over me.\n\n\"Well hello again, boy.\" It was Fraust. He broke into a slow grin.\n\nI quickly rose to my feet. \"Uh, sir mage.\" I began, my mind racing. I became instantly uncomfortable in his presence. \"I was just borrowing a book.\"\n\n\"Were you?\" He asked, his eyes narrowing. \"August lets you steal into his study to pilfer books while he's out does he?\" \n\nMy face reddened. \"Well, again, he lets me borrow them if I take care of them.\" I tried to make it sound like this happened regularly. His look was dubious at best.\n\nHe moved closer to me, nearly pinning my back against a bookcase. I tried to slide along the shelf past him but he then placed his arm in my way. He tipped his head, considering me.\n\n\"What was it you were hoping to steal, hm? Spells? A talisman? Something to sell in your little town?\" He asked.\n\n\"A book.\" I repeated. \"A book to read, out of boredom, nothing more.\" \n\nI am a good-sized fellow but Fraust loomed over me, if this became a physical altercation, I wasn't sure what I could do, if this became magical... well, I was done for.\n\nHe removed his arm from against the shelf. \"I'll make sure August knows you found a book, then?\" He asked. \n\nIt appeared like he believed me after all, and I remarked, \"You do that, and I'll let him know you must have also wanted to do some light reading as you were skulking about in here with me.\" I finished.\n\nMaking caustic remarks to a mage who has a good two feet in height on you is a fool's errand I quickly learned. Fraust grabbed me by the throat in one hand and hoisted me off my feet against the shelf, knocking books to the floor. His eyes billowed with the sudden anger welling up inside of him. I coughed and clawed at his arm, to no avail.\n\n\"You little insect.\" He hissed. \"You may be August's only pet, but I suspect he's been sparing you the lash. Look how defiant and disobedient you've grown.\" He displayed a wide grin. \"But those days are over. I'm all too happy to teach you a lesson. A lesson about what happens to handsome young men who deceive their betters.\" \n\nI kicked at him as hard as I could and connected with his stomach. It surprised him enough that he staggered backward and dropped me to the floor. As soon as I landed I sprang sideways and sprinted for the door. I didn't know where to head beyond it, but if I could put enough distance between us...\n\nMy legs stopped moving suddenly and felt numb in the next moment. I had just enough time to look down to where my calves appeared to be encased in... ice? I sprawled hard against the smooth stone floor and bounced bodily against the heavy desk near the middle of the study. I tried to pull myself to my feet using the desk but the ice was heavy and kept me weighed mostly to the floor. Behind me I could hear Fraust chuckling as he sauntered over to where I lay.\n\n\"Well, that didn't quite work out the way you wanted.\" He said in a mocking tone. \"Honestly, I'm an ice mage, what were you hoping for?\" \n\nHe knelt down and grabbed my arms, hauling me up and then slamming me over the desk. My face and chest connected hard as my legs remained in ice and over the side. Paper and books scattered and pelted the floor as my body was used to shove them aside.\n\n\"Ready to take your medicine, boy?\" He had leaned over the desk to hiss in my ear. \n\nI growled at him and tried to swing at his face but he held both of my arms firmly in place.\n\n\"Mmm,\" He grunted. \"I rather like that August keeps his men spirited and feisty. Mine have a tendency to break and bore me.\"\n\nHe still held one of my arms against my side but now reached under the waistband of my clothes and tugged my pants and undergarments down with one easy motion, exposing my bare ass.\n\n\"Quite nice. I'm a little surprised August hasn't taken a piece of this yet. You know you're just his type don't you?\" He teased.\n\nOh lord, help me! I thought. I was useless in this state, against this monster. What could I do? My mind raced and my heart beat a wild rhythm in my chest. I could hear Fraust but his words weren't really registering.\n\n\"Well, he was always a bit soft when it came to you humans, I suppose that must have extended to his manhood. I guess it's only fair if I sample what he's been denying himself.\" He said gleefully.\n\nFraust swatted my backside hard and repeatedly, wanting me to cry out, but I would have never given him the satisfaction. When that failed to get the desired reaction from me, I could feel him begin to probe between my cheeks with a finger. I clenched down tightly which only seemed to please him.\n\n\"It will be over faster if you don't fight.\" He remarked. \"But please, don't stop fighting.\" \n\n\"August!! Help!\" I screamed at the top of my lungs, hoping that sound could even penetrate the stone walls and wooden doors of the large room. \n\nFraust was enraged by my sudden outburst and cuffed me in the back of my head. My chin collided solidly against the desk top and I briefly saw stars.\n\n\"He can't hear you anyway.\" He sneered.\n\nHe pushed further inside from behind with his fingers and I felt something give. there was a sharp pain and discomfort and I realized with horror that his fingers were actually inside of my asshole. I grunted and tried to squirm away but he was much too strong for such things. He withdrew his thick fingers partway then shoved them back in, turning them as he did. I struggled and winced but was helpless under him. He leaned over me and I felt with dismay his rigid cock poking out of his robes against my rear. \"Are you ready for me to open you up?\" He almost whispered. I could hear the lust in his voice and it made me sick.\n\nHe slid his prick up and down the crack of my backside, teasing himself. \"I don't think I can stand not being inside you.\" He grunted and began to force his cockhead against my tight hole. I clenched my cheeks together as hard as I could manage and cried out for help again. He didn't bother to strike me this time, he was too focused on his task. \n\nMy muscles were nearly at their limits when the study doors blew open. August stood there, in the entryway with a look of surprise that quickly turned into raw, hot anger. Fraust, who had been lying across my back suddenly straightened back up and tucked his cock away under his robes.\n\n\"What in the hells have you done?!\" Roared August. I had never seen his anger, not truly, it was terrifying and humbling to behold. \n\nFraust released me carefully and I struggled to pull my pants back up around my waist. Due to the ice block around my lower legs I still couldn't move easily.\n\n\"The boy was caught stealing from you, August.\" Fraust explained. \"He said you allowed such thievery. I was merely teaching him humility.\"\n\n\"I was just looking to borrow a book! I would never steal from you!\" I pleaded. \n\nAugust looked at me then and his features softened a little. \"I know that, I'm not upset with you.\"\n\nHe looked back to Fraust and his temper immediately flared again. Fraust, I could see was looking uncomfortable. \n\n\"Nothing happened.\" He said in an icy tone. \"I was about to stop when you came in, I only wanted to scare him.\"\n\n\"That's my human and my responsibility to discipline if I think it's warranted!\" August said in an authoritative voice. \"I could kill you for what you've done if you weren't vital!\"\n\nFraust gave a bitter laugh. \"Kill me? As if you had the stomach or the stones for that! I should fuck this boy in front of you, show you what you deny yourself!\" He spat.\n\n\"Enough!\" August bellowed. He whirled his staff from behind his back and Fraust pulled something from beneath his robes, I think it was a dagger, but I was in the process of throwing myself to the floor to huddle against the desk. I had seen August use his staff before and it was never a small affair.\n\nThere was a blinding flash from the staff and a near-deafening CRACK as lightning exploded from its end, arcing over my head and striking Fraust in the chest. Just before impact the ice mage had been able to cast some sort of frozen blade attack using his dagger that sliced through the air towards August. I watched, horrified, as one embedded itself in August's upper arm, another in his side. \n\nThe mage dropped to a knee and I saw some blood spill out of him, splashing hotly to the stone floor. I looked over at Fraust briefly to ensure he was no longer a threat. He was in an unconscious, crumpled heap against a bookshelf. Books and splintered bits of wood were strewn over and around him. Smoke poured from his body where I could see a ragged scorch wound over much of his torso.\n\nI hobbled in my ice block to where August was kneeling. \n\n\"Did he hurt you? Are you alright?\" August asked as I reached him.\n\nMy mouth fell open. \"Of course I am, how can you even ask me that in your state? You're bleeding everywhere!\" My incredulity served to barely hide my concern.\n\nHe gave a pained smile. \"I'm glad you're safe. You've always been so brave.\" \n\nI watched helplessly as blood continued to pour from his side. \"Stop talking, August, tell me how I can help you.\" I forced my voice to remain calm even though I was shaking. I had gone cold with worry.\n\nThe old mage fished around in one of his robe's pockets and pulled out a small greenish orb. He held it tightly and whispered \"Lyfa.\"\n\nAs I sat with August he looked me over. \"That ice should have dissipated when he lost consciousness. That means he put some enchantment in the spell.\"\n\n\"That doesn't matter.\" I said.\n\nHe grunted with pain as he crawled over to my legs, still bound in the freezing ice. As I looked down I began to realize I couldn't feel them anymore. They weren't just numb, the freeze that the ice caused was moving slowly up my body. By now I had no feeling at my waist. \n\n\"I c-can't feel them, I think it's spreading upward.\" My voice became choked with fear and my body was now shivering.\n\nAugust flashed me a serious look. \"Lawrence, I have to cast a spell to save your life, but I need your permission to do so. Time is of the essence.\"\n\n\"What? W-why do you need permission?\" I asked dumbly.\n\n\"I promised you I wouldn't cast another spell on you, and I don't break my promises.\" He hoisted his staff over the ice with one hand and placed the other on my thigh above my frozen legs. \n\n\"Please let me do this!\" He demanded. The pain of his injuries must be severe and yet here he was waiting for my approval to help save my life.\n\n\"Y-yes! Of course!\" I shouted through clattering teeth.\n\nThere was a blast of intense heat and orange flames licked from the end of the staff. August's hand on my leg also began to glow red and it almost seemed like he was controlling the movement of fire to my insides. The pain was indescribable. I began to scream as it seemed I was being burned alive, inside and out. I didn't have to endure for long as the agony forced my consciousness away and I collapsed against the floor of the study. I had just enough time to wonder if I had died in that moment. \n\n\n\n\n\nCHAPTER 7: DREAMS\n\n I dreamed about ice, and fire. I would open my eyes sometimes and see August, standing over me, a worried look covering his face. Other times I would see the female mage, Lyfa, doing something near my feet but I would black out again and forget exactly what I had seen. I have no way of knowing for how long I slipped in and out of consciousness but when I was finally able to lift my eyelids and keep them up I saw August, sitting very close to me on a large bed I didn't recognize. I looked down at my side through bleary eyes and saw he was holding my hand in both of his. It felt warm and comforting so I didn't pull away.\n\n\"Welcome back.\" The mage said softly. He patted my hand gently.\n\nMy throat hurt and speaking proved difficult.\n\n\"Thanks.\" I croaked.\n\n\"I'm very sorry.\" August said with sadness in his voice. \"It will take some time to heal. My fire had to completely burn the ice from you and that kind of magic takes a toll.\"\n\n\"But I'll live?\" I asked groggily.\n\n\"Oh yes, you're strong, but you shouldn't walk around for a little while. You'll stay in here, with me, until you recover.\" August said firmly.\n\nI took the time to view my surroundings. I was on a wide bed with tall wooden posts at each corner. A heavy blanket was over me to my chest. The room was quite sparse save for the bed, a table with stacks of books piled on top and two large armoires tucked into opposite corners.\n\n\"Is this your room?\" I asked.\n\nHe nodded in affirmation. \"I need to make sure you continue to heal, and you need to be comfortable for that.\" He said in a fatherly way.\n\n\"Where will you sleep?\" I inquired.\n\nHe gave me a surprised look. \"Well, it's a big bed, and it's also mine.\"\n\nI frowned. \"Not quite what I had in mind.\"\n\nHe gave me a wounded look. \"Where would you have me sleep then? In your room?\"\n\n\"Hey, it was good enough for me all this time.\" I managed.\n\n\"I can't believe the nerve!\" He let go of my hand and stood. \"I practically raised you from the dead, and you decide to banish me to your tiny room?\"\n\n\"So you admit it's tiny.\" I said with a forced half-smile.\n\nHe laughed. \"I'll stay in your room while you get better then, if it makes you more comfortable.\" \n\nI decided to drop the act. \"Nah, I guess you can stay. It being your room and all.\" I added with a smirk.\n\nHe leaned over me and rubbed a hand through my hair. He surprised me by giving me a gentle kiss on my forehead. The long whiskers of his beard lightly grazing my face. My heart pounded in response.\n\n\"Um, what's going on outside?\" I asked, causing him to pull away and sit back on the bed beside me.\n\n\"Well, it's quiet again if that's what you mean.\" He said.\n\n\"They're gone?\" I asked hopefully.\n\n\"All but Lyfa. Her magical gift is healing. I asked her to stay behind for a time to make sure you were on the mend. She also patched me up.\" August explained.\n\nI had nearly forgotten how August had been attacked. He showed no signs of injury in his movements. \n\n\"And you're alright?\" I asked, with a worried tone.\n\n\"Fine. Mages have a certain amount of immunity to magical attacks. The blades still cut me, but Lyfa sewed me up easily enough. The crippling spell of the shards that hit me wasn't hard to counteract.\" He expressed. \"Thank you for your concern.\"\n\nSo Lyfa is a healing mage, and Fraust uses ice?\" I asked.\n\n\"Yes that's right.\" August replied.\n\n\"So what about you? What's your magic?\" I inquired.\n\n\"Well it's, weather I suppose. Fire and lightning are my specialties, though I dabble in lesser magics, illusions, rain... are you really interested?\" He asked curiously.\n\n\"Of course I am, it's amazing what you can do.\" I responded quickly.\n\nAugust gave me a warm look which caught me slightly off-guard. \n\n\"How is fire considered weather magic?\" I asked.\n\nThe mage stroked his beard thoughtfully. \"Fire is born of the sun, so in that regard it's not a stretch. It makes sense to me innately to cast fire magics at any rate.\" He replied.\n\n\"I guess I understand.\" I said. \"And you're really okay?\"\n\nHe gave me a stern look down his long nose. \"Lawrence. I assure you I'm just fine, a sight better than you even.\"\n\nI conceded. \"Alright then. Anyway, I'm glad you're tougher than you look. I imagine it would get pretty lonely up here talking to myself.\" I joked.\n\n\"It would, believe me.\" August sighed.\n\n\"What about Fraust?\" I asked, worry creeping back into my voice.\n\n\"Alive, but back in his own lands. Lyfa healed him and we all kept him bound until they left with him.\"\n\n\"Why would you even allow him to come into your home?\" I asked angrily. I tried to sit up briefly but pain deep in my muscles caused me to lie flat again.\n\n\"That's not so easy to answer.\" August said after measuring his response. \"I promise you I will explain everything to you soon. I hope that's enough of an answer for now.\"\n\n\"I know you keep your promises.\" I gave him a smile, and I swear he blushed. \n\n\"Go back to sleep, Lawrence.\" He said as he stood again. \"I'll have some food for you when you wake up again.\"\n\n\"That's the second time you've called me Lawrence.\" I said quietly.\n\n\"I thought it was about time.\" August said with a shy smile.\n\nI watched him slip out the doors and shut them behind him. With some effort I rolled onto my side and closed my eyes. I wasn't just still tired, I was weary down to my aching bones. I could have focused on the pain throughout my body, or on what had almost happened with Fraust, or how long I had been in this bed, but instead my mind wandered to thoughts of August. He had kissed me on the forehead and I could still feel the touch of him there. He had risked his own life to save mine. The idea of him slipping into bed next to me was exhilarating, but why was that? What did I really feel for the man? Sleep found me shortly thereafter and my head full of questions began to swim into dreams. "
    ],
    "authorname": "Dudebulge",
    "tags": [
        "gay",
        "love",
        "older and younger",
        "blowjob",
        "uncut",
        "mage",
        "magic",
        "forced",
        "fantasy",
        "august"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/mage-man"
}