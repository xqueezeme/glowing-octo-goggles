{
    "title": "Anal At Last Ch. 09",
    "pages": [
        "[The story so far: I've recently divorced my wife, and am raising my son by myself. After a long abstinence, I've met a woman (Angela) and we've been indulging in anal sex, new to both of us. In the course of getting to know each other, I'd helped her out with an email problem, and as a result, gotten access to her email, after seeing one from a friend of hers (Jules for short, probably Julia or Julie - I'd never met her or heard of her). My babysitter (Samantha) was staying at my place one night, and caught me \"doing a money shot\" over Angela, and I saw her in the shadows of the stairs. None of us had broached the issue, but in a deep conversation one night with Samantha, I found myself backed into a corner and admitting that I did think about her naked... \n\nThe cast:\nMe: 36 yrs male\nMy son: Daniel\nMy girlfriend: Angela, 40 yrs\nThe babysitter: Samantha, 18 yrs\nSamantha's  dad: Bill\nSamantha's brother: David\nBill's late wife: Michelle\nBill's girlfriend: Barbara\nAngela's friend: Jules\nMy ex-wife: Sharon\nDaniel's friend: Stephen\nStephen's parents: Ken and Simone]\n\n*\n\nI sat with baited breath. I'd just divulged that I thought about her naked, with all the implications behind that. How would she respond?\n\nShe just sat there. Perhaps not the first thing I thought she'd do. Run out screaming? That was on the list of \"Possible responses to me telling an 18 year old girl I thought about her naked\". Slap me? That was on the list too. But just sit there? No way. \n\nI waited. Letting her finish whatever thinking she was doing.\n\nThe doorbell rang. Jesus wept, of all the times to come, why is the take-away coming NOW? \n\nI sat there, till Samantha got up and answered the door, looking like a zombie as she walked across the room. A few moments later she came back in carrying the take-away.\n\n\"Mmm. Smells good,\" she said.\n\nOK, what's going on?, I wondered. She put the bags on the coffee table, went into the kitchen and returned with plates and cutlery, still saying nothing. Then she dished up some of the food onto our plates, and handed one to me.\n\n\"Samantha, say something. What's going on?\"\n\n\"Eat up before it gets cold Andy.... Oh, yum, this beef is delicious.\"\n\nShe picked up the remote control, and turned on the TV. One of those programs came on where people send in clips of their animals doing stupid things. We sat, in silence to begin with; eventually starting to chuckle at some of the clips, till eventually it was like nothing had happened. But I could tell by a glazed look on her face when the adverts came on, that she was still thinking things over every now and again.\n\nBut I knew that it had all happened, and that we had to deal with it. So when we finished, I took our plates away (she didn't like spare ribs, unfortunately, so I didn't get my kick of seeing her suck her fingers clean). I sat back down, on the sofa opposite, and flicked off the TV.\n\n\"Samantha. We've just had a very open heart-to-heart, and I'd like to know where we stand. Talk to me.\"\n\nShe sat back in the sofa, hugging her baggy jumper around her.\n\n\"Andy, it's weird. I mean, I never thought that you would think of me like that... and I'm not sure what I think.\"\n\nI waited for her to continue.\n\n\"Can I be frank with you?\" she said, eventually.\n\n\"Of course.\"\n\n\"Well - don't get too freaked out here, heaven knows I'm freaked out enough myself - but part of me likes the idea that you think of me that way. No-one has ever felt that way before - or at least they've never admitted it - and it's nice to know that I can have that effect on a man.\" She took a sharp breath in. \"Oh! I don't mean you specifically, of course. Just a man\u2026 Any man.\n\n\"But part of me is scared that I don't really know how to respond to that. I'm eighteen years old, and I don't know how to handle someone who thinks of me like that. Don't you think that's pathetic?\"\n\n\"Not at all Samantha - you're not the only one like that. Hell, there were times when I was with Sharon that women came on to me, and I - In fact, now that I mention it, there's a woman at the swimming pool who regularly still does come onto me in the most brazen way, and I STILL don't know how to handle her. And I'm a damned site older than you are. Don't you think THAT'S pathetic?\"\n\nShe snorted her approval. \"Yeah, I guess so. You got me beat. I guess I'm saying it's a lot to think about. And I guess I should be flattered, though.\"\n\n\"So... are we still friends?\"\n\n\"Oh Andy, you're such a boy sometimes. How can we be friends when all you can think about is what I've got under these clothes?\" As she said this, she smoothed down the front of her jumper, allowing her shape to show through for once. Was that deliberate? Either way, those puppies look delicious, I couldn't help thinking. Then she smirked at me, obviously having seen where I was looking. I shook my head, laughing, and turned the TV back on.\n\nWe spent the next hour or so in near silence, watching TV. Me wondering how this was going to end - would she want to even speak to me in future? Would she think I fancied her? Would she tell her dad? - and her seeming to take a few opportunities to stretch, thrusting her boobs out, or looking at me from the corner of her eye then looking away quickly as I returned the look. But at other times, she looked worried, deep in thought, as though she really wasn't sure what to do next.\n\nThen she stood up. \"Andy, I think I'd better go. I've got a lot to think about, and it'll be easier back at home.\"\n\n\"Of course,\" I said, standing up quickly to help her get ready. \"I'll phone for a -\". Then I remembered. \"Oh hell.\"\n\n\"What's wrong?\"\n\n\"Well your dad ... errm... after we met at the supermarket... he phoned me later, and we kind of agreed that I'd be out late tonight, to keep you here... \" I hastily corrected myself. \"- I mean, to give your dad some quiet time with Babs.\"\n\n\"I know full well what you meant. Dad wants me out of the way so he can have Barbara to himself.  After all, that's what you men think about all the time, right?\"\n\nI couldn't tell whether she was angry or playing. \"Well, that's not what I meant -\"\n\n\"That's exactly what you meant. If you meant it about you, then it applies to my dad as well.\"\n\n\"Now Angela, be real, your dad's a nice bloke -\"\n\n\"Yes, a nice bloke. But still a bloke. And I thought you were a nice bloke, and you've admitted that you have lewd thoughts about me. Case closed. He wanted me out of the way, so that...\" She paused mid-rant. \"Oh, what's the use. So that's the plan is it? I stay here tonight?\"\n\n\"Well, not the plan, but it's a suggestion. And I never said I had lewd thoughts, just that I imagine you naked.\"\n\n\"You can't get that much lewder. Right then...\" She paused, thinking for a moment, \"If I'm being kicked out of my own bed, maybe we should go to yours. Come on, let's go to bed.\" She held her hand out to me to lead me upstairs.\n\nFuck me! I didn't see that one coming!\n\n\"I... er.... sorry?\", I spluttered.\n\n\"Well, if you're having lewd thoughts about me, maybe we should follow up on them. After all, your advice was to practice before I get married.\"\n\n\"You want to ... with me... now?\"\n\nShe looked at me for a moment, and then burst out laughing. \"Oh, Andy, you should see your face. I wish I had a camera.\" Then she stepped towards me, leaned in, and gave me a kiss on the cheek. \"You're a decent man, Andy. It's good to have a friend like you. But right now, I need to think about what you've said. So I'm going to bed. The spare bed. Alone. And you can go upstairs and ... well, think about what Angela said to you on the phone, for example. And please, whatever you do, try to ignore the fact that I didn't bring any pyjama's with me, and I certainly won't be wearing these Mrs Doubtfire clothes when I'm in my bed tonight.\"\n\nAnd with that, she went upstairs. No, she flounced up them. How could someone so naive be so coquettish as well. That was enticing combination. \n\n------------------------------\n\nI phone Angela a bit later. \n\n\"Hey babe,\" she answered, \"how are you and sweet, sweet Samantha getting on?\"\n\n\"Fine... but I had to admit something to her.\"\n\n\"Oh jesus, Andy, what's happened?\"\n\n\"Well, I kind of painted myself into a corner, whilst talking about how all boys do is think about women, specifically women naked, all the time. And men do it as well. And how boys and men wank alot. And -\"\n\n\"And she asked you if you thought about her like that?\"\n\n\"Yes. How did you know?\"\n\n\"I'm a woman. That's what I'd ask.\"\n\n\"Oh. I see\u2026 Well she didn't ask if I wanked over her. Just if I imagined what she looked like naked.\"\n\n\"And I'm guessing from your tone of voice that you said yes.\"\n\n\"What was I supposed to say? She looked like it was really important how I answered. If I said no, she'd have been upset. If I said yes, well... she might have been upset as well, but at least there was a slight chance she might be flattered and pleased.\" \n\n\"What you mean is, if you'd said yes, you were hoping certain things would happen, right?\"\n\n\"No, Angela, be serious. Well, OK, maybe a little bit. But I would have stopped it, as that wouldn't have been right.\"\n\n\"But it would have boosted your frail little man's ego to know that she, a sweet innocent 18 year old, wanted you, an old fart. I know, I know, I've been there before. So how did she react?\"\n\n\"Well, she thought about it a lot. We had dinner. She teased me, and now she's gone to bed.\"\n\n\"And you want me to come over and do the whole Samantha fantasy thing again, is that it?\"\n\n\"Baby, you know that's not what I want. Well, OK, again, maybe a little bit of me. Actually, quite a big bit of me. And it's getting bigger by the second... Anyway, I wanted your advice on what to do next. You're a woman, you should know better than me.\" I waited for her divine inspiration.\n\n\"I'm a woman, am I? Glad to noticed. I was beginning to think that your obsession with my ass had got you all confused. So she's talking to you, joking, flirting, and you're still asking me what to do?\"\n\n\"Yes. And I'm still waiting for an answer, I hasten to add.\"\n\n\"She seems OK to me. Let her sleep on it. Call me in the morning if the shopping's off.\"\n\n\"Is that it?\"\n\n\"What did you expect?\"\n\n\"Well, I was kind of hoping you'd say something which would lead me into seducing you to coming over here for the night.\"\n\n\"So that you could call me Samantha as you came in me? No chance, baby. You're pleasing yourself tonight. Give me a call tomorrow. 'Night!\"\n\nAnd with that, she was gone.\n\n\n------------------------------\n\n\nI sat up for a bit longer, ruminating over everything that happened, and then went to bed. But before actually going to sleep, I logged and quickly checked my email, and obviously check Angela's as well.\n\nThere was another mail from Jules. This time, I scrolled to the bottom and read back up the way, from the oldest mail to the newest, in order.\n\n\nFirst, there was an initial mail from Jules:\n\nAngela, my dearest.\n\nWhat's the latest on the Andy front? Is the hunk of spunk still going strong? \n\nI had a chance to watch that video of yours at last. I know I was there filming it, but it's always great to see the output of your own artistry without seeing it through the lens. I think it turned out quite well, don't you?\n\nI bet he wanked himself stupid watching it.\n\nMy, how I'd have loved to have been a fly on that wall. I can see it now, Andy wanking that fine cock of his, playing with his balls, unable to take his eyes of you with that vibe in your asshole. I bet he came when you started pushing the rabbit into you as well - no hot blooded hetero man could resist that, I'll bet.\n\nHere's some news: I met a new beau last night: Nick. Or Nick the Prick as I've called him. Not in a bad way (as in, he's not a total prat like that last gym catch), but in a good way (he's scrummy, and almost as well endowed as Andy). Nice fit body. Buns of steel and all that. \n\nSweet jesus, but it's been a good time since I had a nice stiff cock in me. Nick was great - taking it slowly at first and then getting a bit more physical with each passing minute... and there were a lot of them, let me tell you. He probably lasted longer than any one I've ever been with (and honey, you know that's saying something!). I think I'm walking a bit funny today as a consquence!\n\nMaybe the four of us could get together, waddyafink? I can just see it now, you and me kneeling on the sofa, our arses bared to the world, with Andy and Nick standing tall and proud behind us, unable to believe they're about to fuck the best asses available in the world. Then we'd get the boys lubed up, and let them get us lubed up, and then they push into our rears at the same time, filling us to the brim.\n\nThat would be sweet ... you and I getting our arses reamed together... side by side. Will the boys be able to last as long when they're seeing two delectable little pairs of cheeks side-by-side?\n\nOf course, you know my penchant for a little ass-to-mouth, so I'd be forced to go down on both of them after they'd come in our tushes. I hope you don't mind... it might be the only chance I get to touch the fantasy-made-real that is Andy....\n\nHugs,\nJ. x\n\n\nJesus, she wants a foresome? I wondered how Angela would take that, and read on eagerly.\n\n\n\nJules, you trollop, keep your greedy eyes and grubby little hands of my fellow.\n\nIt's going well with Andy, really well. I trust him totally. So stop taking the piss out him. \n\nYou know on the video I mentioned wearing a schoolgirl outfit, well I've gone and bought one. Jesus, I look positively nasty in it. I think he'll come in his pants when he sees me - short skirt, blouse tied off at the waist, knee-length socks, and I'll be wearing pigtails. Just like Britney.... boy, that girl's got a lot to answer for. I'm going to surprise him with it soon. I'm loving the pigtails - I'm hoping he'll use them to hold me back while he gives me a right old going over.\n\nDo you think he'll follow up on the \"Daddy\" section of the video? Now, you know me, I've got nothing like that going on with my dad, where-ever he is now, but it's one of my secret fantasies: to be spanked by some archetypal father-figure, stern, demanding, impossibly turned on at the writhing female flesh beneath him, knowing that it should be avoided at all costs, but unable to resist the call of the loins and the smell of hot female juices wafting up from below his hand..\n\nAndy did get a hard on when we spanked recently (listen to me, it's ALL recently, given how long we've known each other)... I just think he won't go along with the Daddy bit - as he IS actually a dad, it'll seem a bit weird to him. I wish he would though - it'll be the fulfillment of a lifelong fantasy.\n\nIf he does, I'm going to do something special for him in return: he mentioned at some point that he's never been deep-throated. I'd love to do it, but never met a man big enough, or important enough to me, for me to bother learning. Do you have any tips?\n\nAngela.\n\nOnly one thought crossed my mind: \"Ah man, that's gonna be one hot session. 'Do I want to be the Daddy?' ... who the fuck wouldn't when it's Angela being the girl? And knowing he's going to get deep-throated afterwards?\" I could feel my prick paying attention already....\n\nThen finally, Jules' reply: \n\nAng baby, of course I'll teach you my tricks. But it's gotta be a practical exam, not a theoretical one. Bring that well-used old vibrator of yours over one night (how's about Thursday?) and I'll teach you everything I know. By the time I've finished with you, you'll be able to deep-throat a sword. And I don't mean a pork one!\n\nAnd if the worst comes to the worst, we'll do this: you turn up in your little girls outfit and get yourself fucked good and proper. Then tie him up, blindfold him, I'll come out of hiding, and I'll give him his deepthroat. He'll never be able to tell the difference. Of course, if he wants it again in future, you'll need to keep on wheeling me out, but I think I'll survive. Hell, maybe I should tie you up as well and let Andy's nine-incher stretch my back passage as well as yours. Sounds, interesting, yes? \n\n\nLove and kisses,\nJ.\n\nWhat? Jules was going to teach Angela how to deep throat? Jesus, I hoped it works. I'd never been deep-throated till that point. And she was joking about standing in for Angela if Angela couldn't do it... wasn\u2019t she?\n\nTo say that my dreams were all about Samantha would be a lie. Many of them involved Samantha and Angela. Others involved Samantha, Angela, and the as-yet-unseen Jules, all three of them deep-throating me in turn. Then me tied to the bed, Jules planting her ass on my cock, Angela and Samantha kissing her, sucking her tits, fingering her cunt, licking her cunt and then kissing me.\n\n\n----------------------------------\n\n\nI woke up with a raging erection, but could hear Samantha and Daniel downstairs playing, so I took the rare opportunity to lay back and have a quick wank, thinking about Angela coming over later, and her and I having quick and dirty sex together.\n\nThen I showered, dressed and went into the kitchen. I could hear Angela's voice as I went downstairs, the two girls planning their day out. I turned the corner into the kitchen, and there was Angela - dressed in ass-hugging culottes, a blouse with a low-cut neckline, and her hair pulled up in a clip behind her head - and Samantha - dressed only in a pretty tight t-shirt, that came half-way down her thighs, and some pyjama bottoms. And quite blatantly, no bra.\n\nI stopped to take in the scene.\n\n\"Andy, sorry,\" said Samantha, \"this is all I had to wear. No jokes about my dress sense!\" That made it all the more painfully aware to me that she had not much on, if anything underneath it. And jesus christ her tits looked amazing. Just jiggling around as she shifted position. In fact, I could see her nipples, slightly stiff against the material. Below that, she had what seemed to be a flat stomach (at least, the t-shirt was loose around her waist), a large but shapely ass (the t-shirt hugged it in all the right places).\n\nI stared, my mind gone blank.\n\n\"Something wrong Andy?\" asked Angela, smirking at me.\n\n\"Er... no. I'm just not used to seeing you walk around like that,\" I said to Samantha.\n\n\"It was Angela's idea. I had that old dressing gown of yours on, that hangs behind the door in the spare room. But I was getting hot running around with Danny, so when Angela arrived, she suggested I take it off. And this is all I've got, apart from my clothes which are airing upstairs.\" As she said this, she grasped the front of her t-shirt to show me what she meant.\n\nMy mind seized at this point, unable to deal with the transformation from Big Baggy Jumper Girl to No Bra and Tight T-Shirt girl. I went into auto-pilot, saying good morning to Daniel, playing with him for a few minutes, and then making my breakfast while the girls chatted. Angela kept making eye contact, nodding her head as if to tell me to check out Samantha (like I needed any persuasion!) when the girl wasn't looking. Samantha, for her part, just kept flouncing around. I'd say she was doing it on purpose, but I thought she was just somewhat innocent of the effect it was having me.\n\nAs I finished my breakfast, Samantha leapt up from her seat, setting her juicy breasts wobbling under the t-shirt, and said she's going for a shower. Angela moved over to the seat next to me, checked that Daniel was still engrossed, and slid her hand up my thigh.\n\n\"Just as I thought,\" she whispered. \"Another hard-on caused by that girl. One of these days that's going to upset me.\" She slid her hand up and down my bulge as she talked. \"She hasn't mentioned anything specific about last night, other than to say that you'd had a big talk about boyfriends, and her dress sense, and you'd made some good points that she was going to take on board. What have you been telling that girl, you dirty old bastard?\"",
        "\"Just that I think it's a bad idea for her to save herself for marriage - yes, that's what she's been doing - without getting some basic grounding in first. Otherwise, her and her husband will be together on the first night, neither of them knowing what to do, and it'll be a disaster.\"\n\nShe was still rubbing me. \"And I bet you'd like to be the one to give her that grounding, correct?\"\n\n\"No, I'm an old man, and one woman's enough for me,\" I said, giving her a quick kiss on the forehead.\n\nShe whispered in my ear. \"Your cock seems to think otherwise.\"\n\n----------------------------------\n\nDaniel came over then, to show Angela a toy, and thankfully Angela had the decency to play with him. I watched them together - for a woman who had no kids, she really got on with him. Daniel then went out on his bike in the garden, at which point Samantha came down, back in her baggy clothes from yesterday. The girls quickly got ready to go out, when I couldn't resist any longer.\n\n\"Samantha, are you really going out wearing those old clothes from yesterday?\"\n\n\"Andy, I don't really have a choice, do I? Since you and dad planned for me to stay here without actually asking ME, I didn't exactly think I needed a change of clothes\". Angela looked at me, then a quizzical look on her face, not knowing what Samantha meant by 'the plan'.\n\n\"Well, I at least hope you've got some clean underwear on.\"\n\nSam looked at me as well. \"Again, Andy, no-one thought to inform me of their plans for me, so why would I be carrying fresh underwear around?\"\n\n\"Pooh, stinky\", I said, holding my nose.\n\n\"Oh, Andy, you're so naive sometimes...\" said Angela, laughing.\n\nI looked at her, not sure what she meant.\n\nSamantha clarified. \"What makes you think I've got any underwear on?\" she said, as the two girls bounced out the door, laughing hysterically at their joke, leaving me speechless.\n\n------------------------------------\n\nI decided to have a cup of tea, watching Daniel play in the garden and shouting across to the boy next door.\n\nA little later, there was a knock at the door. It was Bill. I welcomed him in, and made him a cup of coffee whilst we chatted about the latest gossip, work etc. Then we sat down. It turned out he'd phoned Samantha to see what her plans for the day, and she'd told him she was going to be out all day, so he'd come over for a chat.\n\n\"Bill, what's up? You don't normally pop round for a chat. Is Samantha OK?\". One thought was flashing round my head: I hope to God she's not told her dad about the recent events.\n\n\"Err. Well, kind of. Just that I'm a bit worried about her.\"\n\n\"Go on.\"\n\n\"Well,\" he continued, \"it\u2019s just\u2026 I\u2026 er\u2026.\u201d\n\n\u201cBill, just say it. It\u2019s me, remember?\u201d\n\n\u201cWell, it\u2019s Sam... she's young, and impressionable. If someone said something or did something that she misunderstood, I think she... she'd think there was more going on than there is. Then when the guy corrected his error, I think she'd be hurt. I'd rather that didn't happen.\"\n\nUh oh, what's going on? I thought.\n\n\"I'm not sure what you mean,\" I said.\n\n\"Look, Andy, I hate to say this. We're both grown men, so we know how it is. Many men of our age would be flattered if a girl of Sam's age -\"\n\n\"Woah, Bill, there's nothing like that going on, believe me,\" I said, a bit loudly perhaps.\n\nGood job her wasn't here an hour ago to see his precious little daughter flouncing around displaying her wares in that bra-less t-shirt.\n\n\"No, Andy, I know. That's not what I meant. It's not that you might try anything, just that she might misunderstand... Please, don't let that happen.\" I could tell his heart was breaking at the thought of his little girl coming home in tears one night.\n\nJesus, she has said something. Otherwise why is he coming to me, why now, and why on this topic?\n\nI reached across and grabbed his shoulder. \"Bill, don't worry. First, Sam's a bit more worldly-wise than you think she is. You're her father, so obviously you don't think that, but she's a teenager in today's world, at a university in a big city. I suspect that she's knows more about the world than we did at her age. Hell, she probably knows more than we do now! But she loves you to bits, and wouldn't do anything to hurt you, even if it means she has to act a bit more innocent around you to protect her father.\"\n\nHe grimaced, and then nodded slowly.\n\n\"But tell me, what's brought all this on?\" I asked.\n\n\"Well, I was talking with Babs last night, about Sam, and where she was, and you, and she kind of jumped to a conclusion. You know, single guy of your age, impressionable young girl... it's not hard to see that something might happen. Whether intentional or not.\"\n\n\"Alright, I can appreciate Barbara's concern. But you know me Bill: Sam's like a daughter to me. She's a good kid, great with Daniel, and I trust her with my home.... which is more than I will Daniel when he's older! She'll be fine. I'll make sure of that when she's here and you're not around.\"\n\nHe sighed. \"Thanks Andy. For everything. She's all I've got. I just want to protect her.\"\n\n\"I know Bill, I know.\"\n\nWe sat for a moment, slightly embarrassed at this man-to-man chat.\n\n\"Is that it all Bill? I get the impression there's more?\"\n\nHe looked uncomfortable. \"Well, it's like this. I guess it all started the other day, when we met in the shops, remember Sam running off to get ice cream?\"\n\nI nodded.\n\n\"Well, when she picked the ice cream, something dawned on me. The way she picks ice cream is the way she'll pick her men, and the way she does everything else when she sets her mind to it. She won't just go for the plain stuff, she'll go for the exotic and unusual.\"\n\nIs this the same Sam we're talking about? She's hardly exotic and unusual, as much as I intend her to be in the future.\n\n\"What I'm trying to say is...that... she won't go for this boy from church. Oh, she'll chat a bit, go out with him because he nice, and all that. But it won't be enough. She'll want something more ... exotic, as I said.\"\n\nI waited to see how this applied to me.\n\n\"And then when I was chatting with Babs last night, it dawned on me that, given her lifestyle,  and how little free time she gets, \u2018exotic\u2019 means one of two things: some punk-goth art student from uni.... or ... you.\"\n\nOh shit!\n\nHe obviously saw the look on my face. \"Now Andy, calm down. I'm not saying you'll do anything, you're too decent for that. But she might want to do something, if you know what I mean. I mean look at you \u2013 you\u2019re the same age as me give or take a year, but I'm middle-aged, whereas you're... I dunno ... Mr Sexy Mature Guy. You've got the confidence that a lot of older guys have, but you're not bald and dumpy like the rest of us. Now Sam won't go for an art student - they'll be too immature for her. Which leaves, well, you.\"\n\nYeah, and I'm too decent, so you think, I thought\n\n\"And I don't want her silly girlish crush on you, if it happens, to turn into a disaster.\"\n\n\"Bill, it'll be OK. I think if she does get a crush on me, Angela will take her aside and have a good chat, before I've even noticed. You know how women pick up on these things sooner than men. Her and Ang get on like a house on fire - in fact, they're shopping right now - \".\n\nOops, better not say any more on that point. Don't want him to think I'm turning his daughter into a tarty-dresser.\n\n\"Oh, are they? That's good. When Sam said she'd be gone all day, I just assumed she must have gone to the university library or something.\"\n\n\"No, no. They're shopping. No idea what for - they had it all discussed, arranged, and decided before I even got out of bed. It's a girls' day out, I think - they were talking about lunch and a glass of wine when they left.\"\n\n\"That's good. Sam's been missing an older woman's touch since ... well, since her mum passed on. I was hoping Babs could fill in a bit, but it's too early for that.\"\n\nI suspected that Babs was also more like her grandmother in attitude, rather than a young mum.\n\n\"Yeah,\" I continued, \"they get on fine. A little too fine actually - they keep ganging up on me.\"\n\nAnd oh what I wouldn't give for them to gang up a little more actively on me. I could see Angela straddling me, her cunt in my face, whilst Samantha lowered her tight little box onto my straining cock. Then - \n\nThen I remembered I was supposed to be talking to Bill!\n\n\"So... that's a bit of a strange conversation considering it started with ice cream. So what fangle-dangle ice cream did she pick?\"\n\n\"Humph.\" He smiled as he answered, the love for his sometimes foolish daughter on his face. \n\nShit, what am I thinking of? Samantha's young, naive, unaware of what sexually obsessive bastards men can be, and I'm taking advantage of her. She'll fall for me and end up heart-broken and upset, all because I want to turn a young virgin into a wanton harlot, if she'll let me. And I'll go running back to Angela, or someone like her, when it's all done, my heart still in the one whole piece that it's been in for years, even if it gets a little scratched and dented as a result of messing with Samantha.\n\nThose thoughts flashed through my mind in a split second, and I decided there and then that enough was enough. No more toying with Samantha. Advice, yes, but no leading her on.\n\nBill was still talking: \"She picked out some bloody fish food stuff - ice cream with bits in it. I'm just a plain vanilla man myself\".\n\nYes, I suspect you are, I thought. And the world needs good vanilla men like you to keep dirty old men like me in check.\n\n----------------------------------\n\nLater that day, Angela phoned to say they'd be coming home later than planned, maybe around 9:00. Apparently, they'd had such a good day that they were going out for dinner as well. So I put Daniel to bed that night, and sat reading, waiting for their return. When the girls arrived back home, I don't think I'd ever seen two woman with so many bags. I just stared in amazement as they put down the shopping and threw themselves onto the sofa, looking happy but tired out.\n\n\"Nothing like a bit of retail therapy,\" said Angela. \"Oh, and you owe me a heap of money. After all she's told me about how much you take the piss out of her clothes, I bought her plenty of things as an apology, and so you owe me big time. We'll work out how much, later.\"\n\nI started to say something -\n\n\"Now, now, Andy, you know it's fair. This poor girl's suffering from low self-esteem due to your constant piss-taking. Now close your mouth, get out into the kitchen, and make us a cup of tea. We deserve it after spending so much of your money.\"\n\nI stood for a moment, staring at the two girls, and decided there was nothing for it but to make the tea. I went out to the kitchen and waited for the kettle to boil. As I waited, Angela came in, walked up to me, and wrapped me in a hug.\n\n\"You should see that girl,\" she said. \"She's stacked. The loveliest pair of young tits I've seen outside of porn movies, and a nice hourglass figure to match. I can't believe she's worn those frumpy old clothes all the time.\" She pulled me closer, and kissed my neck and ear. I could smell the wine they'd had for lunch and dinner on her breath. \"And I'm serious about you owing me loads of money. I've decked that girl out in clothes that will make your head spin, and you'll be creaming your pants for weeks to come every time you see her in something new. You owe me big time. You can start tonight by making that tea, and then later you can give me a good hard fucking. Then go down on me and don't come up for air till I tell you to stop.\"\n\nShe reached her hand down to my groin, and started rubbing. \"Honestly Andy, you should see her. Big breasts, firm but wobbly as well. Although judging by the interest your cock was showing this morning, you obviously noticed her bra-less state. She's got a nice stomach - not too flat, just the right hint of curviness to show she's a woman. A big but round ass - you've got to see it some time, it's just right for you to rub your hard cock in between and come all over her back. Nice firm legs - they'd grip you nice and firmly when you go down on her...\" I was getting hard at all this talk and her manhandling of me. \"... and she can virtually tie a knot in her tongue - don't ask how we got round to that bit of conversation.\"\n\nShe slid my zip down and pushed her hand into my fly, rubbing my cock through my boxers. \"Mmmm. Nice. Are you getting turned on with the thought of Samantha's hot little body warming your bed one day? Dirty little boy. I thought I was the only woman for you. Whatever am I going to do with you?\" At that, she pulled out her hand, zipped up my fly, and laughed at my consternation.\n\n\"Now, make the tea, and bring out some biscuits. We need the energy boost. Oh... and brace yourself, we've bought a little surprise for you as well.\" At that, she left the kitchen and went back into the living room.\n\nI made the tea, and took the drinks and biscuits through. The girls had strewn their purchases all over the place - skirts lay on the sofa, shoe boxes scattered over the floor, a couple of jumpers and blouses lay hung over the back of a chair, and a nice red bra lay on the sofa next to Samantha. When she saw me coming in, she grabbed the bra and thrust it into a bag, blushing furiously.\n\n\"Andy,\" she said. \"Angela's only joking about the money for the clothes. I can afford it.\"\n\n\"No you can't,\" said Angela. \"He owes you big time for the all the favours you do looking after Daniel, and he knows it. You just sit there and Andy and I will work something out tonight. He'll pay for it, don't you worry. Especially when he sees the little surprise we've bought him.\"\n\nThe two girls looked at each other and burst out laughing, Samantha blushing even more if that was possible. Angela noticed my confused expression. \"Don't worry Andy, you'll like it. It's only something small... \" Again, they burst out laughing. When Angela recovered her breath, she continued. \"... it's only something small, but I'm sure it'll fit.\" More laughter.\n\nI gave up trying to work out what their little game was, and sat down with my cup of tea. We chatted about the day as we drank, again with more little sniggers between the two girls, obviously at my expense, and I realised that they'd both had more than a few glasses of wine each. Then Angela took Samantha's cup out of her hands, and patted her on the thigh. \"Come on then Samantha, give us a show. I think the first thing should be... let me think now... the top from TopShop with the.. yes, the denim skirt from Debenhams. I'll give you a hand to carry our stuff upstairs, and then we'll give Andy a pirouette or two in our new gear. Andy, pour some wine. White please.\"\n\nThe girls flounced upstairs, and I waited till they came back in. Angela entered first, wearing a little black dress, black high heels, and her hair up in a clasp. Yumm, she looked good. I licked my lips obviously, as I looked at her, but I didn't get a chance to say anything. \n\n\"May I present... Samantha, the star of the evening, showing a cute little number from the high street fashionistas. We're calling this outfit... 'Where Were They Hiding?' Samantha, come on down....\"\n\nSamantha came in. My jaw dropped. The top from TopShop was a loose thing, with a scooped neck showing just a hint of the large cleavage that she must have had underneath it. It went to just below her waist, meeting the tightest denim skirt I'd seen in a long time. She had a lovely arse - round, big, firm - on top of a lovely toned pair of legs. She looked uncomfortable, I think because of the amount of leg she had showing. \n\n\"Come on Sam, give us a twirl,\" said Angela. Samantha did so, bending those lovely legs as she posed a bit for us.\n\n\"Well, well, well. What a nice pair of legs you've been hiding under those jeans, young lady,\" I said. \"You should get them out a bit more... they're looking a bit pasty.\"\n\nAngela gave me a hard look. Oops, maybe that wasn't the best time to pick on Samantha, just as she was coming out of her shell for the first time.\n\nBut the wine must have gone straight to her head: \"Oh, I will Andy. Angela said the same when she saw my legs - \"\n\nOh yes, and when did she see them? I thought, imagining the two of them holed up together insider a tight changing cubicle.\n\n\" - so I'm going to start sunbathing in a nice skimpy bathing costume I bought today. It's really very small, quite outrageous really...\"\n\nAngela joined in: \"Yes Andy. Quite small. Especially for a nubile young woman like Sam. It's almost obscene.\"\n\n\".. the only problem is, Andy,\" continued Samantha, \"is that I'll be bathing in the privacy of my own garden, so you'll never see me in it.\" The girls burst out laughing again, as Samantha went back out the room to head upstairs. From where I sat, I could see her as she walked up them, and from the distance, her big bubble butt looked .... yum.\n\nAngela shouted after her: \"Sam? Try the green top, and those jeans with the embroidery next\". Then she came over to me, curling up on the sofa, bending her legs underneath her, flashing a hint of inner thigh under the tight black dress. She reached over to my cock and started rubbing. \"I bet you'd like to see that, wouldn't you? Those breasts bulging out over the tiny little costume she bought. The thong of her bottom getting stuck between those two lovely arse cheeks. And her rubbing suntan lotion all over.\" I was getting hard again as she rubbed me. \"And she'd be unable to reach her back, so she'd lay on her front, and ask you to rub oil on her back. Would you be able to resist working your way down to that arse, hoping for a glimpse of her tight little asshole as you spread her cheeks, looking to see if the front of her costume was stained with her juices as she got turned on by you.\" She grinned at my discomfort, and carried on rubbing as Samantha came downstairs again. Just in time, Angela sat back on the sofa, looking all innocent.\n\nSam came in. Oh lord. Having just had Angela do what she did, the last thing I needed was for Sam to come in like she did. A tight dark green t-shirt with some logo on it, clinging to her large chest, but also tight round her waist, emphasising the curve of her hips as they spread to good effect in the tight pale blue jeans she had on. \n\n\"Come on then Sam, give us another swirl,\" said Angela. Sam twirled around a bit, then walked up and down the living room a couple of times, play-acting a model on the catwalk. Her hips and ass looked great in those jeans, but when topped with that tit-hugging t-shirt. Jesus.\n\nAs Sam paraded away from us, Angela caught my eye and looked pointedly at my still-hard cock. She pursed her lips, and smiled a secret little smile as she let her eyes wander back to Sam, who was turning back towards me.\n\n\"Do you like it Andy?\" asked Sam.\n\n\"Like it? Well... it's a little daring for you isn't it?\"\n\n\"Yes, but Angela thought I'd look cracking in it, and green is my colour, so I thought I'd give it a shot. You don't like it, do you?\" She looked upset by this.\n\n\"No, no, it's not that. I do like it... It's just taking me a while to adjust from the girl in the big baggy jumpers that you normally wear. But... well... wow!\", I exclaimed, running my eyes up and down her.\n\nShe smoothed out the t-shirt, running her hands up and down her stomach, emphasising those boobs of hers. \"You don't think it's too tight on top?\"\n\n\"Er... well... it depends on the context,\" I answered. \"If I were you, I wouldn't let your dad see you in that gear.\"\n\nAngela spoke: \"Don't be silly, Andy, it's not for her dad. It's for someone else.\" She raised an eyebrow at me suggestively - the eyebrow that Sam couldn't see from where she was. Did she mean me?\n\n\"The boy she's met at church,\" continued Angela, laughing at me. \"Seriously Andy, did you think I meant that Sam had bought this for you? What do you think this is - Andy's peep show? You're supposed to be vetting these outfits to see if they're too tarty for that young man, not getting a kick out of it yourself, you dirty old man.\" ",
        "I couldn't believe she'd said that with Sam in the room. \"Sam, don't listen to her. I'm not getting a kick out of this. Well, I am, but... well... you know what I mean. You look great... but you're a bit young for me and I'm not getting anything out of this that I shouldn't be. I mean...\"\n\nAngela interrupted. \"See Sam, I told you he'd get all flustered at how good you looked. Now go try something else on.\"\n\nSam smiled at me and went back upstairs, wriggling that arse in those tight jeans as she left.\n\nAngela reached over to me, unzipped my fly, and thrust her hand inside. \"Mmm, you're still hard. There's a surprise. You love this, don't you? This curvy young woman flaunting herself in front of you... What do you think she'll wear next? Just some underwear, do you think? That dark red bra that you noticed earlier has got a lovely pair of knickers to go with it. Do you think she'll wear them, letting you see her tits and ass in all their glory? .... I was there you know, when she tried them on... she's got a lovely body... all full-figured, curvy in all the right places, great complexion, and all creamy like a good English rose kind of girl.... But she had some problems getting the bra done up, so I had to come into the changing room to help. I stood behind her, and helped her to fit the bra correctly. You should feel those puppies Andy, they're nice and heavy.  I had to do quite a bit of adjustment to get them right...\" She was wanking me now through my zip and boxers. \"At one point, I touched her nipple through the bra, and I swear she caught her breath ... do you think she was getting turned on by me touching her? How much further could I have taken it, do you think?\"\n\nFuck, I was getting turned on.\n\n\"Do you think I could have slipped my fingers inside her bra, and worked her nipple into an erection? Maybe I should have checked if her knickers were fitted correctly as well, and run my hands inside them, teasing her public hair, running finger down her lips... damn!\" She leaned back just as Sam came back in. Shit, my fly was still undone. I hastily leaned forward to cover any gap that might be seen.\n\nThis time, Sam was wearing a white blouse, tied up at the front, a few buttons undone at the top to show a good amount of cleavage. Her waist was great. I love that bit of a woman where her waist turns into her hips. It curves in every direction possible, and is my favourite area to stroke and hold when cuddling up to a woman. And her hips widened out into another pair of jeans, low-slung, making the most of that curvy hour-glass figure. Coupled with a firm but curvy stomach.... I felt my cock throb. \n\nI gave a low whistle as I admired her. \"Sam, you've kept your light under a bushel for too long you know... I don't like this outfit.\" She looked crestfallen. \"Well, not for the purposes you talked about. If you wear this when you're with that boy, well, he'll have a heart attack. Jesus. If I were you, I wouldn't let you dad see you in that either.\"\n\nMentioning her dad reminded me of his visit earlier. What would he think now? And how was I going to stick to my promise to not hurt Samantha if she kept on dressing like this from now on? And what the hell would he think of Angela and I when he sees the clothes she's bought after shopping? \n\nSam burst into a grin. \"Angela said that it would have that effect, but ...\" She paused, looking at Angela.\n\n\"Go on Sam, tell him,\" urged Angela, smiling that now-bloody-irritating secret smile again.\n\n\"Well,\" continued Sam, \"she said it would have that effect... on you!\". She looked at me, questioningly.\n\nI sat back, flabbergasted. \"Oh Sam, if I were twenty years younger, I'll have booted Angela out by now just so that I be able to focus all my time on you and that outfit.\"\n\n\"Hah!\" exclaimed Angela. \"I told you he'd be stunned. But\u2026 there's something not right. Let's try this...\" She walked up to Samantha, and then stood behind her. She reached her hands around to Angela's front, and started doing up some of the buttons, hiding Sam's cleavage. When she finished, she smoothed down the front of Sam's blouse... slowly, looking at me, licking her lips obviously. Oh fuck, I had to get rid of Sam and bend Angela over the sofa and give her a good fucking before my balls burst.\n\n\"How does that look, Andy?\" asked Angela.\n\nI pretended to think about if for a minute. \"Nice, but if you want the wow effect, definitely leave the buttons undone.\"\n\n\"Like this?\" asked Angela as she quickly undid those few buttons again.\n\n\"Yes, that's better. But like I said, don't let your young man see you in that outfit unless you want him to take matters into his own hands.\"\n\n\"I think he likes it,\" whispered Angela into Sam's ear, looking at me still. \"Undo one more.\" Sam looked at Angela over her shoulder, and the older woman nodded at her in encouragement. Sam reached up and undid one more button... and then another one. I could now see her bra, and the pale flesh underneath it. Oh fucking hell.\n\n\"Oh, yes, I think he likes that an AWFUL lot,\" said Angela into Sam's ear.\n\nSam looked a little uncomfortable, so I leapt to her rescue. \"Sam love, I think that's about enough for tonight. You look tired after your day's shopping. Why not go upstairs and change into your old clothes, and we'll get something to eat.\" Sam looked relieved, and headed back upstairs again.\n\nAngela started heading over to me, but I stood up and walked over to meet her half way, undoing the button of my jeans at the same time. I pulled my still hard cock out, and told her to kiss it. Angela kneeled down immediately, opening her mouth to take my cock in as far as she could. I knew this wouldn't last long, so I just enjoyed the feel of her tongue worming around my sensitive helmet. As she sucked my head, she wanked the main part of my cock with a hand.\n\nAfter a couple of minutes, we heard Sam coming back downstairs, so I hastily pulled out of Angela's mouth, zipped myself back up, and sat on the sofa. Angela sat beside me, licking her lips. \n\nSam came back in. But she wasn't wearing her old clothes. She had on my dressing gown, and nothing underneath, at least, nothing I could see. I must have looked surprised. \"Oh, sorry, Andy. While we were upstairs earlier, Angela said I should stay tonight as well, as we've all had a bit of drink, and she'll run me home in the morning. Is that OK with you?\"\n\n\"Erm... yes... I guess so. I mean, yes, of course it is. I should have thought of that myself.\" Damn. There goes my chance of a good hard fucking over the sofa, I thought. Sam curled up in an armchair, tucking those firm legs beneath her.\n\nWe chatted for a while, whilst we had some more wine and some snacks. Angela seemed to be trying to get Sam even more drunk, making sure her wine glass was full and encouraging her to drink up.\n\nAngela looked at me. \"Now Andy, it's your turn.\"\n\n\"What? How do you mean?\"\n\n\"I said I'd gotten you something small whilst we were out shopping. Time for you to nip upstairs, put it on, and then come down and let us see.\"\n\n\"OK. But it had better be nice!\"\n\n\"Oh, I think we'll like it. Sam might be a bit... surprised... once you've got it on, but I've been plying her with drink for the last 30 minutes, so I think she'll be able to handle the excitement.\" Both girls laughed at me again, but I noticed that Sam looked a bit unsure as well. Oh god, what have they bought me? Some hideous Hawaiian shirt or something?\n\n\"It's laid out on your bed,\" continued Angela. \"Come on, get to it.\" I stood up, and she slapped my arse as she did so. \"Oh, and Andy...\" she said as I left the room, \"... we want the full outfit. Wear our little present exactly as you would if you were on holiday.\" Again, that infuriating laugh from both of them, and then some low murmured speaking as I walked upstairs, trying to hide my hardon from Sam.\n\nI went to my bedroom. There was nothing on my bed, except a small... oh my god. Fuck no, I wasn't wearing that...\n\nIt was a pair of swiming trunks. Small ones. Not a posing pouch, thank god. More like the ones Daniel Craig wore in that famous scene from his first James Bond film.\n\nNo. I wasn't going to walk downstairs wearing just that, not in front of Samantha. If it was just Angela, god yes, and I'd make sure my hard-on was poking over the top as well. But not with Sam there. I left it on the bed, and walked back down stairs. \n\n\"Very funny girls, very funny,\" I said, as I walked back to the sofa.\n\nAngela lifted her leg to block my seat. \"What do you think you're doing Andy?\"\n\n\"There's no way I'm putting that on. It won't even fit me.\"\n\n\"Oh, yes it will Andy. I checked. Get upstairs and put it on, or we're going to pin you down, strip you, and put it on you ourselves.\"\n\n\"Yeah, yeah, you and who's army?\" I countered.\n\n\"Andy, you've had your thrills looking at Sam in her new clothes. Time for some payback. Get upstairs. Now.\"\n\n\"Not on your life. It'll be obscene.\"\n\nAngela looked at Sam. \"Excuse us Sam, I'm just going to give him some encouragement, and whip him into line.\" She stood up, lead me across the room away from Sam, leaned into me, and whispered into my ear. \"Andy, if you put those trunks on and come down here, I'll be real good to you after she's gone to bed. I'll lube myself up while you watch, then kneel on this sofa, and I'll beg you to ram your stiff cock up my ass. Then when you've come, I'll clean you up... with my mouth..... Now get up there and give us a show. The poor girl deserves it. She was totally nervous about wearing those clothes in front of you. She needs something to break the ice.\"\n\nThat convinced me. I walked back to the coffee table, and drained my nearly-full glass of wine, and then, with one last look at the two grinning girls, I headed upstairs again.\n\nWhen I got the trunks on - which was difficult due to their tightness - I looked in the mirror. Fuck, they were obscene. I tended to wear loose shorts, hiding my bulge. But these ones just put it on display, hugging my cock and bum like a second skin. I had second thoughts about parading in front of Sam like this... but Angela's promise ran round my head again. Damn, I started to get hard. Make or break time - I knew I had to either go down now before my cock swelled too much, or not go. And there was no way I was passing up on Angela's offer. Before I could think myself out of it again, I bolted downstairs.\n\nWith a deep breath, I walked into the living room.\n\nThe girls played up. Whooping, hollering, cheering, wolf-whistling, and pumping the air with their fists. I stood there, doing body-building poses, as they grinned and laughed at me.\n\nWhat the hell, I thought, if they're going to tease me, I'll tease them. I turned around, facing away from them, and slowly bent over to touch my toes. Angela went even wilder, shouting \"That's it baby, work that ass\". I wriggled my backside a bit, and then stood up, turning back to face them. I stretched my arms up high, arching my back, forcing my hips towards them, and emphasising the bulge in the shorts.\n\n\"Jesus Christ Andy, put it away!\" laughed Angela, and Sam joined in. I caught her eye - she was staring at my cock under the shorts. The sight of that made a spasm pass through me, and I began to feel the blood pumping down there. Oh shit, not now, I thought.\n\nAngela stood up and came up to me, standing behind me. She reached round to my front, and adjusted the waist band of my shorts. \"They were a bit low down,\" she explained. But I was sure all she was doing was pulling them up so that my cock was more on show to Sam. \n\nThen she ran her hands up, over my stomach, my pecs, and then running her fingernails lightly down my sides. The bitch, she knew I loved that. She spoke to Sam over my shoulder. \"Doesn't he look good Sam?\" she asked. \"For a man of his age, I mean.\"\n\nSam looked up at me. \"Err. Yeah. Great. For a man of his age, like you said.\"\n\n\"Girls, be nice. You've got me at a two-to-one disadvantage, and a significant clothing disadvantage, so no getting nasty on me.\"\n\n\"Well, maybe we should put our new swimming costumes on as well Andy. What do you think to that?\" She pinched my ass, out of Sam's view, as she said this.\n\n\"Err.. no,\" I answered hastily. Jesus, I knew it was a bad idea to wear this. If the girls even waved their swimsuits about in the air right now, I'll definitely get a hard on again. \"No, no need for that.\"\n\nAngela ran her finger around my arse, stroking, then pushing it under the material at the back, working her way between the bottom of my cheeks towards my balls. I squeezed my thighs and bum together. She withdrew her hand, and ran it up my now firmed-up butt.\n\n\"Oh, yum, Andy, I like that...\" She squeezed my butt. \"....I like that.... that you look as good in them as we thought you would when we saw them. We both thought you'd look good. You thought he would look good as well Sam, didn't you?\"\n\nSam gulped, and nodded. Then she muttered an \"excuse me\", and ran into the kitchen with her wine glass.\n\nAngela reached her hand round to the front, stroking my cock through the trunks. \n\n\"Of course, I didn't think you'd look THIS good,\" she said. \"We've GOT to go away somewhere with a beach for the weekend, so I can parade you round, driving the other girls crazy and the guys jealous. And tease you to get your cock head poking out the top. Oh boy, we're going to have fun.\"\n\nI grabbed her hand, and pulled it away before Sam came back in. \"Remember what you said,\" I murmured to her. \"I'll bring the lube down with me when I come back. Now go calm that poor girl down.\" And with that, I headed back upstairs to get changed while Sam got her nerves back.\n\nI took a look at myself in the mirror again when in my room. Angela was right, I DID look good. And it would be great to go away for the weekend with her. I could just see us larking about on the beach, finding some secluded spot to rub sun tan lotion over each other, me easing her swimsuit down and running my finger between the cheeks of her ass, pushing it into her asshole, spreading the lubricating lotion around, her reaching back to pull my cock out of those trunks, wanking me as she begged me to finger her ass. \n\nI pulled those obscene trunks off, and started wanking my cock, getting it good and hard.\n\nI pictured me just laying on top of her, and sliding my oiled-up cock between those delicious buns of her, lining up with her asshole, and pushing inside, feeling her rectum spread as my rock-hard cock speared her ass. She'd push back against me, working to get me deeper and deeper into her bowels, hissing to take away the pain of my big prick stretching her insides, sliding a hand underneath her to frantically rub her clit. I'd just keep on pushing, aided by the lubrication. One long slow push until I was balls-deep in her, my lower abs cushioned by the firm cheeks of her ass, knowing that someone could come by at any moment and see me taking her anally. She'd beg me to fuck her fast, to come inside her ass. And then I'd see it - another guy, almost hidden in the bushes, his cock out, wanking as he watched me take her....\n\nI kept on wanking as I imagined taking her in front of the audience. But only for a couple of minutes. I didn't want to come, not when I'd been promised her ass that night. So I got dressed, and squeeze my hard cock into my jeans again. I freshened up a bit, splashing some water on my face, giving my teeth a quick brush, whilst I waited for my cock to go down a bit, and then I headed downstairs again.\n\nAngela was on the sofa, alone. \"Well, finally, Andy. What were you doing up there?\"\n\n\"Oh, you know, guy stuff,\" I bantered back at her, sitting down next to her and looking round for Sam.\n\n\"Oh, I can guess. Posing in front of that mirror, pretending you're some hot super stud, and us girls swooning at your feet in awe of your masculinity. Men! You're all the same. Anyway, Sam's just gone straight to bed - \" I looked at Angela. Sam must have walked past my room; she might have seen me wanking. Oh shit.\n\nAngela continue. \" - I think the day-time drinking got to her, poor girl. It's a good job she didn't see you parading yourself for all to see\u2026 Oh god Andy, you should see your face. You were up there parading around, weren't, you?.... Oh no you weren't, you were having a wank!\" She reached her hand up to my chest and pushed me away. \"You dirty bastard. Don't deny it - I can see the look on your face. You were up there having a wank, and she's saw you.... Was she enjoying it?\"\n\n\"Angela, ssshh, she'll hear. No she didn't see. At least I don't think so. God, I hope not.\"\n\n\"So you were having a wank, eh? What would she have thought, you with your monster of a cock out, wanking off after seeing her in her scanty new clothes? Would she have started to play with herself, do you think?\"\n\n\"Angela, stop it, it's not funny.\"\n\n\"Oh Andy, yes it is. We both know it wouldn't be the first time, don't we?\"\n\nI looked at her.\n\n\"Don't act so surprised. She told me.\"\n\nI acted innocent. \"Told you what?\"\n\n\"About how she caught us, that time you'd been out with the boys and I came over when you got back, and you wanked that beautiful cock of yours all over my face. Well, she didn't say it quite like that, but I knew what she was getting at.\"\n\nTime to panic. \"She saw WHAT?\"\n\n\"Don't kid on, Andy, you knew. As soon as she said it, I knew that you'd seen it. You were so horny that night. And you let me believe that she hadn't seen us.\" She reached over to my cock yet again - this was getting a common event tonight - and undid my zip. She reached her hand inside and started to wank my flaccid, but interested, cock. She leaned in close and started whispering in my ear, her hot breath adding to the sensuality of the moment.\n\n\"Why didn't you tell me Andy? Do you know how turned on I was when I'd realized that she'd seen us? Later on, when we started shopping again, we went into a lingerie shop, and I helped her on with her bra. I was so horny thinking about her wanking herself while she watched you come on my face, and there she was in that delectable little bra and knickers. Oh! You've not seen them yet, have you? Maybe next time.\n\n\"I didn't tell you this bit earlier, but I DELIBERATELY ran my hand over her nipples, you know, just to see how she responded.... Oh, don't look so surprised. Do you really think someone as sex mad as I am has not tipped the velvet occasionally?\" As she whispered this, she ran her tongue round my ear.\n\nI started to say \"You've had sex with other women?\", but she reached up and pressed her finger to my lips to shut me up. Then she pointed upstairs, and put her ear next to my mouth. Ah, she wanted me to whisper, so I did. \"You've had sex with other women?\"\n\nShe turned back to whisper in my ear, giving it a quick nibble as she did so. \"No. I've had sex with other men... I've made love to other women.... There's a difference.... Oh, you like that do you?\" she breathed, as she continued wanking me. \"Your cock is such a giveaway. One little mention of me going down on another woman and it starts throbbing away to it's merry little self.... Would you like that Andy? To watch Sam and I get it on, kissing each other, playing with each other's breasts, my hands running down her ass to grab her cheeks and spread them, letting you see that sweet little virgin ass hole.\"\n\n\"Oh god Angela, keep doing that...\" I moaned, shifting position to let her get at my cock a little easier. Then I said \"Fuck it\", and pulled my jeans and boxers down, shuffling them off my feet as she pulled off my jumper, leaving me naked on the sofa. Then she resumed wanking me.\n\n\"Baby,\" she said, quietly. \"I meant what I said earlier, I want you to bend me over this sofa and fuck my ass. But I want it to last. And you've been worked up all evening, so I want you to come first....\" She pulled her hand away. \"Wank for me baby. Wank that big cock of yours while I tell you all about my first time with a woman.\"",
        "I grasped my cock and did as I was told, relishing the thought of Angela and Sam making love whilst I watched. \n\nAngela started her story, still breathing into my ear. \"It was a woman I met at a conference. We'd got chatting during over the course of three or four days, and ended up going for dinner and getting a bit worse for wear on wine. She was a great woman - attractive, confident, a real lipstick lesbian, although I didn't realize that at the time. We were staying at the same hotel, where the conference was....\n\n\"That's it baby, stroke your cock for me... it looks so good, let me see it all..... spread your legs baby, let me see those full balls of yours....\n\n\"We got the lift up to our rooms, and when she got to her floor, she stepped outside and held the doors open whilst she asked if I wanted a nightcap. I wasn't thinking clearly, so I didn't realize what she meant. We went back to her room, and I sat in the armchair while she raided the mini-bar.\n\n\"I had a stiff back after all day sat in the conference room, and she noticed me rubbing it a few times. She asked me if I wanted a backrub from her, and she explained that she'd done a course in massage, so it would be alright.\n\n\"Again, I didn't think anything of it, so I took of my jacket and lay down on her bed. She started rubbing my back, through my blouse, and then she suggested I take my blouse off, to stop it getting too creased. I did pause then, but I thought what the hell. It wasn't often someone offered to rub my back, and she did have a nice touch. I stood up off the bed, and took off my blouse, then lay back down on my front.\n\n\"She said she'd be back in a minute, and headed into the bathroom. She came back with some baby lotion. 'Do you want me to use this?' she asked, so I said yes, as a massage is always better with some sort of lotion.\n\n\"Speaking of lotion, I think you might need a little lubrication\". She bent over, and took my cock in her mouth, licking and sucking whilst I stroked her back. Then, she straightened up again, and gave me a quick tongue-y kiss, letting me taste my precum. Then she pulled back a bit, licked her lips, and carried on murmuring her story in my ear.\n\n\"She came back to the bed, and straddled by legs. Then she continued rubbing my back, nice firm strokes, up to my bra strap and down to my skirt waistband. She did this for a while, and I admit it felt good. Not particularly sexual, but definitely sensual.\n\n\"After a few minutes, she sat back and stopped rubbing. 'Angela', she said, 'I'm going to get baby lotion on your skirt if I'm not careful, and we don't want that, do we? Is your back feeling better? If so, we'd better stop there. Unless....' She left it hanging, waiting for me to answer, the crafty woman. I think she'd done this before, seducing straight women.\n\n\"'Well', I said, 'it's better, but I'd love for you to carry on, if you're OK with it?' She nodded, so I wriggled out of my skirt. I was obviously feeling pissed... but very comfortable with her ... as I reached back to undo my bra strap, leaving it on, and pushed the waist of my pants down a bit to give her proper access to my lower back. 'Is that OK?' I asked.\"\n\n\"'Perfect', she answered. I know now what she meant. She carried on massaging me, gradually covering more and more of my back with each stroke. She moved my loose bra straps to one side, causing them to flop on to the bed, and started to rub up and down my sides. Her hands touched my breasts where they bulged out beneath me.\n\n\"I still didn't think she was doing it on purpose, after all, she'd made no move on me earlier in the week, and had made no mention of being a lesbian. But I was starting to get turned on. She carried on stroking my upper back, my shoulders, my sides, and the bulge of my breasts....\n\n\"Here baby, let me stroke you for a bit. I'm getting turned on by this.\" She reached over, and started wanking my cock from top to base. Just a couple of times, then she stopped, and reached down to pick up her handbag. She rummaged around, and pulled out some lube, waving it at me. \"I brought this just in case.\"\n\nShe snapped the lid, and squeezed some out onto my cock, then put it back in her bag and carried on wanking me. I groaned as her wet hand slid up and down my cock, and she continued her story.\n\n\"Eventually, she started to work her way down my back as well, rubbing the spots where my back and bum joined. I was starting to drift off, the wine and the massage getting to me. She leaned over and softly asked me if I wanted her to carry on. I missed the point, and thought she just meant to carry on with my back. But when she started massaging me again, she pulled my knickers down even further and started on my ass cheeks. I started to protest, but then I realised how good it felt.... I guess that should have been a hint of things to come. Then, I liked her playing with my ass, and now I like this big boy playing with my ass...\" she whispered as she carried on wanking me, occasionally letting go of my cock and running her fingernails over my balls, making me squirm, and making my cock bounce around in the air as it pulsed with my heartbeat.\n\n\"I was getting turned on by this point, and I finally guessed what she was up to. And you know what? I didn't care. She might have been a woman, but she made me feel real good. So I settled back down and let her have free reign with me.\n\n\"I think she knew then that I was hers, as she started to be a bit more deliberate. As she massaged my ass, she started to pull the cheeks apart. She shifted position, and I knew she was sliding back so that she could look between my cheeks as she spread them. I signaled my agreement by spreading my legs apart a bit, and that did it. She ran one of her hands down the crease of my ass, sliding over my asshole, down into the crease of my lips.\"\n\nShe let go of my cock, and put my hand back on it. I carried on wanking myself as I imagined what it would have been like to see Angela seduced by this woman.\n\n\"I started to groan then, feeling her finger slide up and down my lips, and I knew she could feel how wet I was. I turned over underneath her, and pulled her down into a kiss. My first lesbian kiss... It was strange. Different to a man, more sensual, more delicate, less invasive. We kissed for a bit, and then she stood up, undoing her blouse, watching me watching her. She took off her blouse and skirt, and then slid off her bra. Then she climbed back onto the bed, pulling my bra from underneath me and throwing it onto the floor. She lay beside me, one leg cocked over mine, and carried on kissing me, running one hand over my stomach and my breasts, teasing nipples, making them erect and begging for me, as I ran my hands over her body, feeling the curves of a woman for the first time, amazed at how soft and gentle she was.\"\n\nStill wanking my cock, I was getting really turned on, and I knew it wouldn't be long time I came. Angela must have noticed.\n\n\"Is this turning you on baby?\" she whispered, licking my ear. \"You look like you're about to come. Would you like to come on my face again? Would that turn you on baby?..... Sorry, not this time boy ... It's my turn to get my money shot .... Wank for me baby ... Make yourself come ... I want to see you come all over yourself.... that's it, lay back, stretch out that cock... I can see it baby, it's all swollen and ready to burst... that's it... stroke it for me. Did my story turn you on? Would you like to see me fuck another woman? Would you like to look down at us in sixty-nine, licking each other out? I'd get you to kneel down behind us and push that big cock of yours into her, and I'd lick you and her as you fucked, tasting her juices all over your cock, and seeing her lips spread wide to take you inside her... I'd reach a hand around to her ass and start fingering her asshole, knowing that you could see my finger in her ass as you fucked her cunt\u2026 then when she was nice and wet back there, I'd pull her ass cheeks apart... waiting for you to force that big cock of yours into her ass...\"\n\nThat did it. I came. I was laying back on the sofa a bit, and my come shot up in the air. All that teasing all night had got me stirred up, and my come landed on my cheek, my chest, my stomach, and then finally over my hand, as I grunted her name in pleasure. \n\nAs the come got to the point of dribbling out, Angela reached over and wanked me, sending aftershocks through my cock. After a few strokes, she started licking up the come from my face and body. She worked her way down my chest, over my stomach, and then lowered her mouth onto my cock, sucking up all of my juice, using her hand to squeeze out the last few drops, then withdrawing her mouth and licking up the sides of my length, getting the last straggly bits. \n\nThen she sat back, still wanking me, and turned my head so I was looking at her. I opened my eyes, and watched her swallow my come down. Then she bent down and kissed me. \n\nThis slutty, sexy, dirty woman knew me so well. The aftertaste of my own come started to turn me on again, coupled with the slow wanking of me she was doing.  \"I'll carry on my story another time,\" she said. \"I'm just going to go upstairs and freshen up a bit. You stay here and recuperate. And then I'll come back for more.\" \n\nShe stood up and walked to the door. But she stood in the doorway for a moment, her back towards me, then she pulled her dress up and over her head, taking it off. She was wearing a black matching bra and knickers, nicely framing her slim and toned figure.\n\nShe reached back to undo her bra, and let it drop to the floor. And then she bent over, and slid her knickers down her legs, pushing her ass in my direction. As she kicked her panties off, she stayed bent over, but spread her legs. She ran a hand into her cunt - from the sofa, I could see her fingers part her lips and push inside - and I could see a glistening of her juice as she pulled them out, reached further back between her legs, and started rubbing her wetness round her asshole.\n\nThen she looked over her shoulder at me, brought her hand up to her mouth, and sucked her fingers clean. And with a small laugh she disappeared out the door and upstairs.\n\nI sat for a couple of minutes, wondering what she was up to. Then she came back down, still naked. She came up to me on the sofa, and straddled me. I ran my hands down her back, pulling her close, as she nuzzled in my neck, kissing and licking. \n\n\"I was just checking Sam was out for the count. I'd hate to have her come down here in the middle of this, with me bent over the sofa, and you sliding that hard meat of yours up my tight little arse.\"\n\nI took a hold of her bum, pulling her closer still. She moved around a bit, and got my hardening cock lined up with her cunt, then she began to tilt her hips, rubbing our groins together, my cock rubbing up and down her wet lips.\n\n\"Is that what you want baby?\" I asked. \"You want me to bend you over this sofa, lift your delightful, dirty little ass up into the air...\" She started breathing heavier as I talked. \"...and line my hard cock up with your small hole, and push it in?\"\n\n\"Oh god yes, Andy, that's what I want.\"\n\n\"You're such a dirty little girl, Angela. A few weeks ago, we met for the first time, and now look at you; you're straddling me, rubbing yourself over my cock, begging me to fuck you up the ass.\" I knew she like this kind of talk.\n\n\"I can't help it baby, you're so good to me. You're the only man that makes me feel this way... I can feel how hard you're getting... is it all for me?\"\n\n\"It's all yours Angela,\" I said as I ran one hand between the cheeks of her ass and pressed one finger against her asshole. It was already wet!\n\n\"Andy, I'm sorry baby... I just didn't want to wait... I put lube on while I was upstairs... is that naughty of me?\"\n\n\"Very naughty. You're a dirty little girl, getting yourself all ready for my cock in your little hole. I'm going to have to punish your for this sort of thing you know, it's getting to be too frequent.\"\n\n\"Will you Andy? Will you bend me over your knee again and spank my naughty behind?\"\n\n\"Yes, but not now. Now all I want you to do is lay on this sofa, across the arm. It's time for you to finish what you started.\" I guided her to lay on her front, along the sofa, her chest on the raised arm. Then I lay on top of her, my cock butting against the cheeks of her ass. \"Angela, as you've been such a naughty girl, I think you should hold your cheeks open for me, so I can see that cute little hole of yours as I slide my big hard cock inside it.\"\n\nShe took a hold of her ass cheeks in both hands and spread them, showing her asshole wet with lube. \"Do it Andy, fuck me, take me, make me yours again.\" I lined my cock up with her hole, and pushed gently, watching her asshole spread as my cock forced it open. \"Oh, god Andy, that feels so good... I love the way you open me up... \"\n\nIt took a few moments despite the lube to get my head inside. I grunted as her muscles clenched around my cock, just below the head. \"There, that's my head in your ass baby,\" I said. \"Do you like it? Do you love the feel of your muscles spread by my hard cock?\"\n\n\"Yes, Andy, oh god yes, you feel so big back there... Oh! That stung!\" she added as I pushed a bit further.\n\n\"It's all your fault Angela. You got that little girl to parade herself in front of me, showing me those big tits of hers, and her lovely round bum, and that kissable stomach, and you knew I'd get turned on. You even got my cock out and wanked me a few times. Did you think I wouldn't get turned on?\"\n\n\"No Andy... I knew you'd get turned on. I wanted to tease you, I wanted to see your hard cock straining to burst out of your clothes and to get at Samantha.\"\n\n\"Then that's why it's got to hurt a little bit now,\" I responded, as I pushed further inside again.\n\n\"Oh baby, it hurts... oh, god... you stretch me so much... you're so big... do it baby, push again. Make me pay for teasing you.\"\n\nI stopped talking then, concentrating on pushing just the right amount to keep her feeling the stretch, but not actually hurting her, listening to her breath catch, hold, and then release with a hiss as she adjusted to each push I made deeper into her insides. I gently bit the nape of her neck at one point, and she murmured under her breath, lost in the feel of my cock deep in her ass. She pulled one hand away from her bum cheek, and slid it underneath her, down to her cunt.\n\nBy this time, I was about half-way into her ass, so I pulled back almost all the way, eliciting a quiet \"No\" from her, and then slid back in again, easier this time now that she was getting used to me. \"Oh yes, Andy, fuck my ass\" she grunted as I pushed further in again, then pulled out and in again, feeling her insides open even more, making it easier for me to move. With each thrust, I pushed in a little bit further than before, and soon I had my whole cock in her ass, my balls hitting the backs of her thighs, the cheeks of her ass on my belly.\n\n\"That's it baby,\" I said. \"You've taken all of me. Do you like having all of my cock up your ass? Does it feel good to know that you're turning into my own anal whore?\"\n\n\"Oh, fuck, Andy, that's so good. You feel so big back there. Fuck me... take me... show me how much you own me.\" I started fucking her faster, at least as fast as I could in her clenching ass, gradually building up some speed as she loosened. I could see her arm moving below her, and she seemed to be wanking herself hard and fast as well. \"Andy, I'm yours... I want you... Oh fuck, that's good... fuck me baby, fuck my ass... I want you to own me... I want to prove it to you.... oh god... will you let me? Will you let me show you how much I'm all yours?...\"\n\nI lowered my body right onto her, letting her take some of the weight, and reached one hand underneath her breasts, squeezing and playing with her nipple. \"No, I won't LET you, I'll TELL you ... god you're so tight..  You'll do what i say, when I say....\" She moaned her approval and arousal at this. \"Any time I want to fuck your slutty little ass, you'll bend over and start putting the lube in... you'll show me your finger pushing in and out of your ass... knowing that my cock will be there in a few moments.\"\n\n\"Oh baby, that's what I'll do\u2026 but I want more... I want other people to know I'm yours... will you let them watch baby? Will you let someone watch us as you fuck me up the ass, showing them how much... oh, you\u2019re so big... how much I'm all yours? I want Samantha to watch baby... oh, yeah.... that's it... I want her to watch us like this... you fucking my ass...\"\n\nWell, that was a new one. \"You want Sam to watch us like this? Maybe she is already. Maybe she's over by the door... god your ass feels good... right now, watching us...\" Angela was really panting now, her orgasm getting closer. \"But she can't see enough...\" I said, and then slowly slid my cock out of her ass.\n\n\"No baby, put it back in, fuck me!\" Angela said.\n\nI stood up, and pulled her up as well. She leaned into me, kissing me fiercely. \"I was nearly there baby!\" she hissed. I reached down to her cheeks, spreading them, as I rotated us to that Angela was facing the door. \n\n\"There Angela, let Sam take a look at your ass, and how it's stretched to let me in.\" She sank into me, groaning, pushing out her hips. \"Do you think she'd like that? Is she looking at your ass and imagining what it would be like to come over and lick it?\" Angela grunted, and rubbed her cunt over my cock. I pulled back, and sat on the sofa. \"Straddle me, facing me\".\n\nAngela got up astride me, and I took a moment to suck one of her breasts as she reached back to my cock, wanking it for a moment as she lined it up with her ass. \"Slowly baby,\" I said. \"Let Sam see you sink your ass on my cock really slow. Let her see each inch go in. Let her see how much you are my anal slave as you willingly take my meat into your tight back hole.\" Angela slowly, slowly, sank down. I could feel every bit of me as she took me inside, her anal canal parting again as it let me in. \"That's it baby, let her see as you take all my cock in your ass.\"\n\nThen we started kissing as Angela rode me, sliding up and down my cock. That was so delicioius, kissing her as my cock reamed her ass. It was the first time we'd done it this way round, but I swore we'd do it again. There's something very exciting about having a woman kiss you passionately - no, ferociously! - as she's filled to the brim with your cock in your ass. The sensual kissing mixed with the raw anal sex....\n\nShe reached a hand down to her cunt again, and I could see as she started rubbing her clit, sliding a finger up and down her lips, parting them, spreading her juices all around. She was really turned on, her cunt sopping wet. I ran a hand down there too, collecting some juices, and then brought it up to her mouth. She eagerly took it in, sucking her own juices of my fingers, moaning as she fucked me.\n\nI pulled my hand away, collected more of her juices, and then sucked them off. Then I put my hand behind her neck, and pulled her into a hard kiss, knowing she'd be able to taste her own juices again. She was getting close to orgasm again, her breath coming in short gasps. \"That's it Angela... let it come... let Samantha see you come with my cock stuffed up your ass.. let her see how much it excites you... next time you'll face the other way, towards the door, so you can see her wanking... and you'll be so turned on you'll be wanking yourself... letting her see how wet you get when I'm fucking you like this.\" She was almost there... and I wasn't far off myself. \"She'll have her hand in her panties... and you'll feel my cock up your ass... and I'll come then... you'll feel it spurt inside you... and you'll come as well, unable to prevent yourself, knowing that Sam is watching you as you give yourself over to me completely, unable to stop yourself... and then she'll come as well, unable to believe that you just came with a big hard cock in your tight little ass.... \" That did it.. she started coming then, holding her breath as her orgasm hit her, but still pumping up and down on my cock. That did it for me as well, and my come spurted up her inside, lining her ass with my jizz.",
        "-----------------------\n\nIf you like the story, please share your comments. I'd love to hear from you... S.M."
    ],
    "authorname": "scottishmeat",
    "tags": [
        "fashion show",
        "clothing",
        "anal",
        "sofa"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/anal-at-last-ch-09"
}