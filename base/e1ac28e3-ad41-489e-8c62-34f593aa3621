{
    "title": "The Mist of Time Ch. 17",
    "pages": [
        "CHAPTER SEVENTEEN\n\nThose two weeks went very quickly. Tina planned our move like a military operation, even as far as going up to my flat and packing my clothes. At the other end it was Bella who unpacked all my effects and put them away, apart from a few items which she left in a cardboard box. When I asked about them she told me determinedly. \"I will not be seen with you, wearing that stuff! We will go to Colchester soon and we will get you proper country clothes.\"\n\nFour days before the dinner we were installed in our new office. It was quite a big room so though Tina's desk was some few feet away I would not have to bother with the intercom. Tina was pleased although she did say that I would still shout for her anyway. On the Thursday before the Saturday of the dinner Gerry and Emma came to inspect the kitchen. They evinced satisfaction of the equipment and gave Bella their suggestions for the menu. I think Bella agreed before showing it to me. The first course was a crab avocado pickled ginger timbale. Then they suggested tenderloin beef steaks stuffed with mushrooms with a touch of garlic. The desert would be a key lime torte with cream and strawberries to add a touch of sweetness. Finally there was a cheeseboard with soft and hard cheeses. I agreed to the choice, how could I say any different? Bella did allow me to choose the wines. Huh!\n\nI was so pleased that Chad and Lily had accepted the invitation. They arrived just after six-thirty. Of course Bella, Tina and Aleksy were already there, the two girls fussing about last minute alterations to the dining table. Bella was wearing a very nice long dress, a shimmering shade of cream, she looked lovely and I told her so. Her blush complimented perfectly the shade of her dress, Aleksy and I sat in the lounge like spare grooms at a wedding. Chad's arrival changed all that. Bella and Tina joined us in the lounge. I had told them about Lily's face and they greeted Lily with aplomb and after our greetings, Bella and Tina conducted Lily away to the ladies room where they could all touch up their make-up. Chad watched their departure with humour. \"Lily has spent at least an hour getting dressed and then another hour on her face. It took us three quarters of an hour to get here and already she is off to repair her face.\"\n\n\"She looks a lot better than when I saw her last, Chad.\" \n\nHe nodded. \"Yes. She had another procedure and she is less shy about it now.\" Chad paused. \"I think Lily will tell you all about it later.\" He looked me in the eyes. \"Thank you for the invitation, Daniel. This is the first time that Lily has been out in four years.\"\n\n\"She is beautiful lady.\" Aleksy remarked.\n\n\"Thanks Aleksy.\" Chad was grateful. He looked around. \"You seem to have made a very good job of this. Daniel said it had been uninhabited for sixty years.\"\n\n\"It was. But Victorians built well. Fabric of house really sound. If not there would be nothing to restore.\" Aleksy was very proud of the job he had done and once started it was difficult to stop him describing the problems he had and how it was resolved. The Ladies returned and Aleksy curtailed his monologue. It would appear that Bella had shown Lily around. Lily was very complimentary which would have got Aleksy started again until Tina gave him a look and he subsided. \n\nThere was idle chatter for a while until the sound of a car pulling up disturbed us. \"That will be Daddy and Jason.\" Bella remarked. We went out to greet him. Andy had a converted van. A raised roof at the back with a windscreen allowed him to be wheeled into the van and let him see where the driver was taking him. Sliding ramps eased the wheelchair down from the back doors. The wheelchair was locked in place when the van was moving. Getting out of the van was easy as Jason guided the wheels down the ramps, but getting Andy up the three steps to the veranda needed two to pick the chair up. I stepped up and Jason told me where to grip the chair. \n\n\"Thank you Daniel. I'll be ok from here.\" Andy said once he was on the veranda. He wheeled himself into the foyer and Bella showed him into the lounge.\n\nI turned to Jason. \"You know you will be most welcome at the table.\"\n\nHe nodded. \"Miss Bella told me that you had extended the invitation. However it would be better if I stand ready to help Mr. Swinson. He has no control below his waist so I will watch him for signs that he needs to leave the room for a while.\"\n\n\"He is lucky to have you around.\"\n\n\"I am a trained nurse. Mr. Swinson is a good man, I am lucky to be in his employ.\"\n\n\"I understand. Well Emma and Gerry the caterers will plate up some food for you.\"\n\n\"I am obliged, Mr. Chandler.\" I showed him the layout of the ground floor and then took him into the kitchen, where Emma and Gerry, perspiring, were dashing around getting everything ready. Jason got straight into their good books by asking what he could do to help.\n\n\"Twenty minutes, Mr. Chandler.\" Emma called.\n\nI returned to the lounge and my guests. I needn't have worried as Bella had made sure that everyone had a glass of sherry. She smiled as she handed me a glass. \"Skiving off again, Daniel?\"\n\n\"Cheeky! Your spanking is getting closer and closer.\"\n\nHer eyes twinkled. \"Promises, promises.\"\n\nLily approached us. \"This is a lovely house, Daniel. You must be so proud of it.\"\n\n\"I am Lily. It is a rather odd way by which I came to own the place, but I am very pleased that fate has brought me to here.\"\n\n\"Yes. Chad said something about that. Is it true that your family owned the property a hundred years ago?\"\n\n\"It would seem so, Lily. It's a very thin thread, but it's there all the same.\"\n\nLily turned to Bella. \"I understand that you are responsible for the interior design.\"\n\n\"Not alone, Lily. Tina helped tremendously. Daniel let us loose with his credit card, and you know how spending money is such fun.\"\n\nI left Lily and Bella to chat and I went over to Andy. \"Your chap Jason seems to be very helpful. He's helping the cooks now.\"\n\n\"I couldn't get by without him, Daniel. He is a bit bossy from time to time, especially when I am having a good time, but I can't complain. I like your girl, Tina. She will be looking after the estate for you?\"\n\n\"Yes, and yours if you really want us to take on the management. She and Aleksy are starting their own business. Property maintenance.\"\n\n\"Ah! Interesting. Well he did a damn good job here, so I will probably want to talk to him sometime. There are some cottages that need a helping hand.\"\n\n\"Tina mentioned that there was a possibility of renting one of your cottages.\"\n\n\"As far as I am concerned, Daniel, it's theirs whenever they want. However I have another three cottages that need a lot of attention. Oh and I do want you to take over the management of my land. Bella has done it, but something tells me that she has another interest to pursue.\" He thought for a moment. \"Is Chad the accountant you talked about?\"\n\n\"Yes.\"\n\n\"Hmm, perhaps I should have a chat with him sometime.\"\n\nJason put his head around the door and coughed. \"Ladies and Gentlemen. Would you please take your places in the dining room?\" He came and took hold of the handles on Andy's wheelchair.\n\n\"Don't fuss, Jason. I can do this myself.\" We strolled casually into the dining room.\n\nThe dining table looked magnificent, bathed in the light of flush lighting in the false ceiling. Stanislaw had fixed them on two circuits controlled by dimmers switches, so the room was lit with soft lighting except over the table where the lights shone more brightly. I helped Bella into her chair and my guests sat, automatically sitting so every lady had a gentleman either side of her. They conspired so that the only chair left for me was at the head of the table. Bella was sitting directly opposite to me and when I sat she gave me a beaming smile. Emma, Gerry and Jason bustled in and served the first course, with Jason offering a light white wine to compliment the course.\n\nIn retrospect I had to hand it to our chefs. I have rarely enjoyed food as much as I did that evening. The food was excellent, but the conversation around the table was exhilarating. We covered many topics some serious and others humorous, though at no time was it too serious and the humour was gentle. Having finished the meal I offered coffee and brandy. It was at this point that Lily decided to speak. Her eyes glittered with a hint of moisture as she spoke. \"Daniel, Bella, my newly found friends. You have been so generous by not mentioning my face, thank you. I have never spoken about it and being here amongst friends I feel that I should. My face is as it is because I was the victim of an acid attack.\" \n\nI was surprised as the gasps from others told me they were also surprised. Lily went on. \"Someone thought I had done him much harm and he took his revenge, the results you see.\"\n\nThe sound of a chair falling backwards came from Aleksy who stood, his face blazing in anger. \"Tell me who this man is. I go and kill him!\"\n\n\"Aleksy! Please, there is no need to do anything. My husband took care of that. Even though I hurt Chad deeply he took revenge by ruining the man. I believed that my marriage was over and for many months it was, but Chad, my lovely Chad, found me and we talked. Gradually I understood that what had happened and the acid attack was not a result of my actions but the actions of a very evil man, who has paid the price.\" \n\nAleksy had sat down again at this point, and Tina reached over and held his hand. \"My Polish Bear. Always ready to fight for a woman's honour. No wonder I love you.\" Aleksy grumbled a little but subsided. \n\nLily went on.\"This is the first time in four years that I have socialized.\" She turned to me. \"Thank you Daniel for your invitation, and thank you all for making this evening so comfortable for me. I know now that I don't have to hide away in shame and embarrassment.\"\n\n\"Damn right.\" Andy said it perfectly for all of us.\n\nChad brought up another subject. \"I am most curious to know, Daniel. What is your connection to the owners of this land all those years ago?\"\n\n\"It's strange, Chad. That I and the estate's ownership had a surname in common didn't ring bells, but when I saw a photo of the last land-owner, Danbury Chandler the bells started ringing, as we physically were identical. Tina decided to delve into the genealogy and found a connection. So I will let her tell the rest of the story.\"\n\nTina smiled with pleasure. \"So good of you, Boss. You would have probably made a complete mess of it.\" She coughed \"Right. The last owner of the estate was Sir Danbury Chandler, the son of Sir Dashwood Chandler.\n\n\"A Baronet?\" Chad injected.\n\n\"Yes.\" Tina went on. \"Danbury had a younger brother, Robert who was illegitimate. He was a child when his mother, Lady Adelaide left Chetford in the eighteen nineties and moved to Braintree. Robert married in nineteen twenty-one to Ellen and they had a son Douglas. They lived in Braintree probably for all of their life. Douglas married Mary just after the second war and they had a son Dennis, who is Daniels' father. That is the simple explanation. There is no clue to who was the father of Robert.\"\n\n\"So Daniel has no bloodline connection to the owner...who did you say, Sir Danbury?\" Chad asked.\n\n\"Correct.\" I answered.\n\n\"Pity.\" He mused. \"Having a Baronet as a client would look good on my letterhead.\" \n\nIt had become quite warm in the dining room so I got up and opened the French doors that accessed the patio. Immediately Aleksy had to go out and check. Tina followed as did Chad and Lily, so I looked at Bella who smiled and rose. I went to Andy. \"Shall I wheel you out, Andy?\"\n\n\"I can manage, Daniel, but thank you for asking.\" The only problem would be the floor sill which was about two inches high. I had supposed it would be a problem, but not to Andy. He tilted back slightly when he approached the sill and the two wheels on the front of the chair lifted, he rolled the chair forward and the wheels landed outside, then the big wheels came to the obstacle and Andy exerted his strength and they went over too. \n\nThe light breeze was refreshing. I suddenly was aware of something that Tina and Bella had forgotten. \"Ahem.\" I cleared my throat. \"Tina, you and Bella seem to have forgotten something. We need chairs out here.\"\n\n\"Do I have to think of everything for you, Boss?\"\n\n\"Well, what else do I pay you for?\"\n\n\"A pittance of a wage and you expect me to be perfect? I think not.\"\n\n\"I shall have to review your position here, Tracey.\"\n\nI noticed Bella mouthing at Aleksy. \"Who's Tracey?\"\n\nTina saw her too. \"It's when he is losing the argument.\" She told Bella. \"He can't remember my name. It's a pity that senile dementia has taken him so early, but we have to be kind to the afflicted.\"\n\nBella laughed. \"Well I didn't think of chairs out here, so perhaps I suffer from that too.\" She grinned at me. \"I'll sort that out first thing Monday.\" \n\nShe came close to me and hugged me. \"Sorry, Daniel.\"\n\n\"A beautiful lady hugs me like that, of course I forgive you. I like having you close to me.\"\n\n\"I'm sorry that I don't have much cushioning in the chest area.\"\n\n\"Don't apologise. I think you have rather pretty boobs.\"\n\nHer face lit up. She turned and said to the company. \"Daniel likes my boobs. He's so nice, even when I don't have anything like Tina.\"\n\n\"You can have mine anytime you want.\" Rejoined Tina. \"They're a bloody nuisance. It takes an engineering marvel to keep them where they are, and the back-ache they cause is constant. Aleksy has to rub cream into my shoulders every night as the straps cause abrasions. I would love to have a reduction.\"\n\nAndy interrupted. \"Do excuse me, but I think it's time for me to leave. I don't think it appropriate for me to be here when my daughter is discussing her mammary development.\" \n\n\"Daddy! All I said was that Daniel likes my bits.\"\n\n\"That's enough, dear daughter. Would you call Jason for me?\"\n\nActually Jason was already there. \"Come along, Mr. Swinson. I think it is time to get you home.\"\n\n\"Come along Mr. Swinson.\" Andy mimicked Jason's tone. \"As if I have any say in the matter, once he grabs those handles I go wherever he wants me to go.\" He stuck out his hand to me. \"Thank you, Daniel for a very entertaining evening.\" He turned to Lily. \"I too don't get out much for obvious reasons, but it was a delight to be here this evening and a delight to meet you, Lily. I do hope to see you again.\"\n\nI went out with Jason and Andy, helping lift the chair down the steps and into the van. Jason closed the doors and made his goodbye. \"Thank you Mr. Chandler. Mr. Swinson will speak of this evening frequently. It's a pity that the chefs bat for the other team though.\"\n\nI laughed. \"I understand how you feel. Thank you for your efforts this evening.\"\n\n\"It's my job, Mr. Chandler.\"\n\nI returned to the dining room. My guests had returned to the table to sit. I was thinking and ruminated aloud. \"I suppose, Chad, that if I were to take out a company private health insurance, would that be deductable?\"\n\n\"Yes. It would cover you for necessary procedures for key personnel. It would not cover elective procedures.\" I had always been awe of Chad's perception. Now it seemed he knew why I had asked.\n\n\"Ah. How about if one of my key personnel needs surgery to enable her to do the job satisfactory?\"\n\n\"Only if the condition has occurred whilst in your employ.\"\n\n\"Damn!\" I went and stooped by Tina. \"I am serious, Tina. If you really would like to do something like having a reduction, I will stand you the fees.\"\n\nTina looked at me as if I was having a brain seizure. \"You're joking.\"\n\n\"No. No jokes. I didn't understand how they affect you, and I am sorry if you thought I was making a joke about your...\"\n\n\"Big tits.\" Tina saved my embarrassment. She looked towards Aleksy. \"Well?\"\n\n\"Is good. I don't like it that you get back aches. What will it be like in future?\"\n\nTina nodded and threw her arms about my neck. \"Daniel the day you offered me this job I was delighted. Now I know it was the best move, apart from Aleksy, I ever made. Thank you, Boss. You really are the best.\"\n\nWith Tina hanging around my neck I looked at Lily who was smiling. \"Does your surgeon do this, or does he know a good man for reductions.\"\n\n\"I think what you are prepared to do for Tina is brilliant. No my surgeon doesn't do breasts, but I am certain he knows someone good. I'll phone him.\"\n\n\"Thank you.\"\n\nEmma and Gerry came in to ask if everything was satisfactory. I invited them to sit down and poured two brandies. They had worked hard to prepare and serve the food and I thanked them fulsomely. I went on. \"You have quite a drive home. You are welcome to stay the night if you wish.\"\n\nGerry looked at Emma and as it is with people who partner they agreed without words. \"That is very kind of you, Daniel. In return we will make breakfast.\" \n\nA little while later in one of those inevitable pauses in the conversation Emma brought up the subject of the facility of the house. \"Your dining room and kitchen are excellent and you have facilities downstairs. We are asked from time to time to cater formal dinners. We have trouble doing that at home, but here, it would be perfect. Would you allow us to organize such an event here? The Masons will accept your charge for the use of the house, of course.\" I was not opposed to the idea and looked to Chad, who had his accountant's face on, thinking\n\nFinally he spoke. \"It would be quite in order with the house being your place of business, Daniel. You will have to get Public Liability cover though. Again that would be deductable to set against what monies you receive for the use of the facility.\"\n\nI addressed Emma. \"How often would this be?\"\n\n\"Usually three times a year.\" She replied.\n\n\"I am not opposed to the idea. Let me think on it. I'll get back to you shortly.\" \n\nJust after that the party started to break-up as Chad and Lily prepared to leave. Lily came up to me and kissed me on the cheek. \"Thank you Daniel. You have helped me to come out of my cage. Perhaps you and Bella will come down to Abbess some time so I can return your hospitality.\"\n\n\"That would be splendid.\"\n\nBella seemed to have disappeared. Tina showed Emma and Gerry to the room they could use. I went around the ground floor making sure that all windows and outside doors were shut. Aleksy followed me to make sure, especially when I set the intruder alarm. Stanislaw had put in a good system. Break in anywhere and all the downstairs lights came on and hidden cameras filmed the intruder; the images being stored on a hard disk. They couldn't turn the lights off as the room switches were automatically disabled. I trudged upstairs after Aleksy who turned to me on the upstairs balcony. \"Thank you, Boss. I really enjoyed the evening. See you in the morning.\"\n\n\"Night. Aleksy.\" I went to my suite. Now I am not stupid and Bella disappearing was not too much of a surprise, nor was I surprised that when I got to my bedroom the bed already contained a body. Two arms came out from the covers and pushed them down until a cheeky face could be seen. \n\n\"I hope you don't mind my sleeping in your bed, Daniel.\"\n\nI was taking off my clothes as she spoke. \"Not at all, Bella. I am grateful to you for warming the sheets for me.\"\n\nShe was watching me intently and soon I was down to my trunks. I picked up the worn shirt and socks and dropped them in the dirty linen bag. I came back into the bedroom. \"I would prefer that you get rid of those.\" She said, pointing at my trunks. \"I have forgotten to bring a nightdress.\"\n\nI turned to the dresser and opened the lower drawer, pulling out a nightdress.\"So what is this?\"\n\nWithout a blush she replied. \"Oh! Well I thought it would be a waste to put it on and then later have you take it off me. Hopefully.\"\n\n\"Hope doesn't come in to it. I would have taken it off you the moment I got into bed.\" I pulled the curtains and opened a window. The night air was cool but not cold. The moon was near to full and even when I switched out the lights I could see my way clearly to the bed. The last thing it did was to pull off my trunks. I lifted the covers helped by Bella and slipped into bed. Immediately a warm, lithe very naked, very lovely female body clung to me as a warm wet tongue prised open my lips. The kiss went on for some time even as she squirmed endeavouring to get every part of her body against every part of my body. Whilst doing so she discovered a part of me that was very happy.",
        "That was when her lip-lock broke. \"Is that you?\"\n\n\"Yes.\"\n\n\"Oh! I think you had better take it slowly. I am not that experienced.\"\n\n\"We have all night and the rest of our days and nights.\"\n\nBella smiled. \"Yes.\" Then she caught on to what I had actually said. \"The rest of our days and nights?\"\n\n\"That's what I said.\"\n\n\"If that is what I think it was, then the answer is yes.\"\n\nThat Bella was a slim woman had been obvious from the first day I saw her, her years in the saddle had honed her. My delight was that it hadn't taken away her feminity. I went on a wondrous journey of exploration, discovering her erogenous zones much to my enchantment and hers. Bella urged me on, wriggling and gasping as I found and stroked yet another pleasure site. Early on she showed me that she wouldn't be a passive partner in this investigation as she wriggled around until she found something that intrigued her, she then wiggled some more until the object was in a position for her to make a thorough examination, first with her hands, then with her lips until finally she murmured. \"I have been told that it is pleasurable to suck on this, so if you don't mind...\" I didn't mind at all.\n\nIt is strange how you come awake sometimes. You seem to go into a half-life, not being asleep but not totally awake. I was aware of coming out of slumber but could not rise, as if there was a weight on my chest and stomach. There was a weight on me, it was Bella. I opened my eyes to see her face, her eyes watching me warily. As she understood that I was awake the wary look was replaced by a smile and happiness. \"Good morning, Daniel.\"\n\n\"Morning, Bella. Did you sleep well?\"\n\n\"I doubt that I have had any sleep.\" She answered. \"I couldn't sleep because my mind was caught up by all the lovely things we did last night.\"\n\n\"I'm sorry about that.\"\n\n\"No. Don't be sorry. I am astonished that making love could make me feel so good. I will never be sorry about that.\" Suddenly the smile was replaced by a frown. \"You let me believe you were innocent. Last night was not innocent at all. Have you anything to tell me?\"\n\n\"It was you who made up your mind about innocence. I did try to tell you that I was diffident, not innocent.\" I went on to mention something of my experience with Dawn. Immediately I regretted the comment. Bella being a woman was not be satisfied with anything but the truth, the whole truth. However I answered her questions another was on her lips almost immediately\n\nBella finally seemed satisfied. \"Was she a good time girl or something?\"\n\n\"No. She didn't walk the streets or anything like that. She was quite intelligent and she liked sex; so it seemed sensible to put to use her talent in that area. I got the impression that she would escort lonely well off gentlemen in London, hoping to meet one who was wealthy who would marry her, or if that wasn't possible would set her up as his mistress.\"\n\n\"And she taught you all this?\"\n\n\"No. I think it best to say that she polished my abilities.\"\n\n\"And well polished they are.\"\n\n\"I try to please.\"\n\n\"Mr. Chandler, please you did. I loved it when you kissed my Kitty...Actually I loved everything you did. This is an Oliver Twist situation. Please Sir, is there more?\"\n\nWe found a lot of other exciting things to do together.\n\nTo be continued... "
    ],
    "authorname": "Kezza67",
    "tags": [
        "mystery",
        "history",
        "doppelganger",
        "romance",
        "ghosts"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-mist-of-time-ch-17"
}