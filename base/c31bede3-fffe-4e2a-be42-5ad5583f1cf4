{
    "title": "The Catch-Up Ch. 05",
    "pages": [
        "Disclaimer: All characters are 18 or older.<br ><br >Author's Note: Really appreciating all the comments and ratings, especially suggestions for future chapters and some really lovely notes about the characters and story. Please keep letting me know what you think! <br ><br >CAST LIST<br ><br >New characters are added after their first chapter.<br ><br >AJ: Our protagonist, a quiet, nerdy, guy, but nice and well-liked at his small high school.<br ><br >BRIDGET: A sardonic, tomboy friend of AJ's who's gay and a bit of a stoner. Messy tawny hair, usually under a beanie or baseball cap, hazel eyes, and a more feminine figure than she lets on.\n\nSADIE: A newer friend of the group, rumoured around school to be a bit of a slut. Short, curvy and famously busty, with long blonde hair and bright blue-green eyes. Loud, bubbly, and a little wild.<br ><br >MACKENZIE: The most popular girl in school and captain of the pom team, who AJ lost his virginity to on prom night. Slender and fit, with sleek, brown to blonde ombre hair, big blue-gray eyes, and oh-so-perfect, \"Disney princess\" features.\n\nGIGI: A wealthy, glamorous and intimidating member of the pom team and friend of Mackenzie's. Wavy black hair, bronzed light brown skin, catlike amber eyes and full, sensuous features. She's Brazillian/Columbian, tall, toned and curvy.<br ><br >FAITH: Mackenzie's close friend and teammate, only much sweeter. A cute, mixed Black girl with medium brown skin, who usually wears her dark hair natural and has a lean, fit figure.\n\nDYLAN: Track and volleyball star, another friend of Mackenzie's. Very tall (around 5'11\") with long legs, slender except for her round, volleyball player butt. Very short, platinum blonde hair and hazel eyes.\n\nKIERA: AJ's coworker at Daisy Dairy ice cream, who's a year older than him with a dry, sardonic sense of humour. Petite with reddish brown hair, girl-next-door good looks.\n\nCHARLOTTE: Class president, bossy, ambitious and studious. Cute, with round, soft features and brown hair she always keeps pulled back. Short and thick, with surprising curves.\n\nJULES: Julia, usually called Jules, is Sadie's best friend. She used to bully AJ in freshman year, but now they have a big sister/little brother relationship that's only a little condescending. She's tall and tanned, with a nose-ring, shoulder length honey-blonde hair and a strong, athletic body. <br ><br >PAIGE: AJ's best friend since middle school, who used to have a crush on him, although he only liked her as a friend. Curly auburn hair, big brown eyes, a little chubby. Sweet, smart, and sensible.<br ><br >GRANT: AJ's best male friend, who often overshadows him without meaning to.<br ><br >AMANDA: Part of AJ's friend group since the start of high school. A Mormon and star soccer player with very religious parents.<br ><br >RANI: A very shy, awkward friend of AJ's.<br ><br >REAGAN: Grant's ex-girlfriend, a Junior who had an encounter with AJ on the last day of school. Petite, with brown hair in a retro bob and dark blue eyes.<br ><br >EVA: Reagan's friend, another Junior who's on the Pom Team. Half-Egyptian, with long, dark hair and a fit, petite body. Watched, but didn't participate in Reagan and AJ's run-in.\n\nZARA: College student and orientation leader on Grad Trip. An edgy, punky girl with short, purple hair and a lot of tattoos. Bridget has a thing for her. <br ><br >*** <br ><br >GIGI: Sooo are you gonna tell me your name at some point?\n\nUNKNOWN: Depends... are you gonna tell me how you \"heard\" about me?\n\nGIGI: Lmao... well I actually watched you fuck Sadie on a beach in Mexico\n\nUNKNOWN: I thought so haha\n\nUNKNOWN: And? What was your review\n\nWith a jolt of excitement I saw that Gigi's reply was a picture. It was a selfie of her reclining poolside, in a hot pink bikini that contrasted perfectly with her smooth, bronzed skin. She was lit up by the sun, her full cleavage lustrous and shining with what I guessed was tanning oil, her bee-sting lips glossy and parted.\n\nHer sleek black hair was pulled into a bun, one eye was closed in a cheeky wink and her fingers, with their long acrylic nails, were spread into an \"A-ok\" gesture.\n\nI hurriedly typed out a reply.\n\nUNKNOWN: Hahaha always glad to see a satisfied audience\n\n\"Get off your phone\u2014who could you possibly be texting?\"\n\n\"Sorry\u2014\" I hurriedly locked my phone and put it away. It was a Saturday afternoon and the gang was back together, hanging out and drinking slushies in the park close to my house\u2014Paige, Bridget, Grant, Rani and Amanda.\n\nPaige was the one who had called me out. It felt a little weird to hang out with her, Grant, Rani and Amanda again after everything that had happened\u2014it was like everything had changed with me and they had missed it all. But it was also nice to just be hanging out like old times.\n\nI'd been disappointed at first when Sadie had flaked on this particular hangout. I hadn't seen her and we'd only texted a little since we got back from Grad Trip, though on the other hand, maybe it was for the best that this day stay uncomplicated.\n\n\"Probably texting 'Violet.'\" Bridget smirked, nudging me with her sneaker. I was more than relieved that things didn't seem to be any different between us.\n\nThe group tittered with laughter and I rolled my eyes. \"Boo. That is so old.\" Violet was an English girl I had met on a family vacation in Grade 6. Being two very dorky 12-year-olds, we'd kept in touch by snail mail for a few years, despite all my friends insisting she was imaginary. At this point even my high school friends were familiar with the joke, despite it being years since we'd lost touch.\n\n\"Are we gonna play or what?\" Amanda Graessle was on her feet and juggling a soccer ball from foot to foot. She was our \"Mormon friend\", and as always, was technically rebelling against her parents just by hanging out in a group with Grant and I.\n\nShe'd also been the star of our school's soccer team, and had secured a soccer scholarship to a Christian university, Hart College, in the same town as Douglas U, where I was going.\n\nAs usual, her curly, dark brown hair was held back by a stretchy headband, her ruddy, soft-featured face free of make-up. She was tall, about the same height as me, athletic and solidly built in the way weird, country parents might call \"cornfed\". She wore a loose-fitting t-shirt, decidedly conservative shorts that went to the knee, and Keds.\n\n\"Ready, just let me put my shoes on...\" Paige said, and Grant got up, too but Bridget, Rani and I stayed where we were.\n\n\"Come onnnn... we said we were going to play!\" Amanda kicked the ball in our direction, and we all ducked.\n\n\"You said that\u2014what's the point, anyway, whatever team you're on is just gonna win,\" Bridget pointed out.\n\n\"Because it'll be fun!\" Amanda jogged around us to retrieve the ball. \"AJ?\"\n\nNormally I was happy to indulge her, but my phone was itching in my pocket\u2014I was pretty sure I'd felt a buzz, and Gigi's reply would be waiting for me. But it was hard to resist Amanda's bright brown eyes. She was one of the only people I knew who naturally did puppy-dog eyes without meaning to.\n\n\"Okay, okay, I'm coming.\" I stood, finishing my slushie. \"Come on, you two.\" I grabbed Bridget and Rani by the arms and hauled them to their feet. \"She'll just keep asking.\"\n\nAfter a sweaty, tiring afternoon of impotently chasing after Amanda as she dribbled past all of us, we grabbed dinner at a Chinese restaurant. With all of us squeezed into a booth, I didn't get on my phone again until it was late and I was back in my room.\n\nGIGI: Not often I get left on read for hours...\n\nI grimaced.\n\nUNKNOWN: Sorry, busy day\n\nGIGI: Me too. I spent the whole day working on my tan\n\nUNKNOWN: Wow, sounds tiring\n\nGIGI: I wanted to take pics... but u weren't around so I didn't have anyone to send them to\n\nI bit my lip.\n\nUNKNOWN: That's a shame. I'm available now if you still want some feedback\n\nGIGI: You're way too late\n\nGIGI: I already took off my swimsuit\n\nI swallowed.\n\nUNKNOWN: Of course. Guess there's nothing to be done then\n\nGIGI: I have a theory on why you won't give me your name/insta\n\nGIGI: You're nasty looking\n\nUNKNOWN: Maybe. Are you that shallow?\n\nI paused for a moment before hitting send. I honestly had no idea what I was doing flirting over text with Gigi, but I had a feeling she'd appreciate a guy who wasn't a total pushover.\n\nGIGI: Wow.... as if you didn't check my insta before you texted me\n\nGIGI: I'm the one who gave you my number with no idea what you look like\n\nUNKNOWN: Rightttt, you just care how I fuck\n\nI typed that one out and hit send before I could think twice. There was a worrying pause of a minute or so, then I saw the three dots pop up.\n\nGIGI: Omg you're such a douche\n\nGIGI: Send me a pic.\n\nUNKNOWN: I'm nasty looking though\n\nGIGI: Did I say it had to be of your face?\n\nMy eyed widened. This I hadn't expected. Did Gigi want a... \"dick pic\"? Now? It felt weird to even put myself in the same sentence as that phrase.\n\nI must have lay there running through it in my mind for a few minutes, because my phone buzzed again.\n\nGIGI: I'm waiting...\n\nIt was followed by another photo of Gigi, a mirror shot of her lounging in bed, with her chin resting in one hand and her phone held up in the other, eyebrows raised expectantly. She was wearing a loose tanktop and tiny running shorts, on her stomach with her feet in the air, one ankle crossed over the other, in white knee-high socks.\n\nIt was a casual, playful pose that happened to perfectly show off her obviously braless cleavage, toned legs and firm ass, lifted ever so nonchalantly in the air, round, tawny curves escaping from her far too small shorts.\n\n\"Fuuuck,\" I breathed aloud, rolling onto my back and adjusting my sweatpants. I looked down to see a sizable bulge where my erection had been building almost since this conversation started. That didn't look half bad.\n\nIf I was too cowardly to send Gigi an actual dick pic, maybe this would do. I grabbed my phone and trying not to overthink it, snapped a photo of my bottom half.\n\nA bit of my torso was showing, but my t-shirt was hiding my stomach well, although it wouldn't trick anyone into thinking I had a six pack under there. The bulge in my grey sweatpants on the other hand... I wasn't sure if it was the angle or the fabric or what, but it looked casually huge. Perfect.\n\nWith slightly shaking fingers, I sent the photo. And then immediately tried to think of a semi-plausible caption.\n\nUNKNOWN: Damn. Nice PJs. Here are mine\n\nI threw my phone onto the other side of my bed, and covered my eyes. Then it buzzed and I frantically grabbed at it.\n\nGIGI: Mm... looks comfy\n\nI ran my tongue across my teeth.\n\nUNKNOWN: Little less so, thanks to you\n\nGIGI: Well, I don't really wear PJs anyway, sooo\n\nGIGI: Sleep tight\n\nGigi added her signature kiss mark emoji, and then another photo: A closeup of her full, soft lips, puckered in a kiss of their own, with her bare shoulders, the naked lines of her clavicle, and just the tops of her breasts filling the bottom of the frame. There was no tanktop in sight.\n\nI stared at the photo for a long time before finally falling asleep.\n\nThe next day Bridget came over. I still wasn't sure if I had \"graduated\" from P-School or not last time, but she noticed me checking my phone a few Streetfighter matches in and I ended up spilling the beans about Gigi.\n\n\"Holy shit... So she really doesn't know it's you?\" Bridget's eyes widened as I showed her the photos from Gigi from yesterday.\n\n\"No, definitely not.\"\n\n\"So you're catfishing her?\"\n\n\"I'm not catfishing her! She wanted the guy who she saw having sex with Sadie to text her and that's me!\" I protested. \"Anyway, I think she's kind of into the mystery thing...\"\n\nMy phone buzzed.\n\nGIGI: I'm bored. Entertain me\n\n\"Fuck...\" I beckoned Bridget over so she could look over my shoulder. \"What should I say?\"\n\nBridget furrowed her brow. \"Don't be too desperate. But don't be boring either.\"\n\n\"Great, thanks.\" I rubbed my chin and started typing.\n\nUNKNOWN: Lmao. Only boring people get bored\n\nGIGI: Ew that sounds like something my dad would say\n\n\"That is something my Dad says,\" Bridget smacked me on the shoulder.\n\n\"I'm laying the groundwork...\" I tapped out my next message.\n\nUNKNOWN: hahaha let's play a game then\n\nUNKNOWN: I guess something about you, you guess something about me\n\nGIGI: Okay intrigued. What's the prize for a correct guess\n\nUNKNOWN: Idk you can send me a pic or something\n\nGIGI: Slick....\n\nUNKNOWN: You said you were bored\n\nGIGI: I did say that\n\nGIGI: Okay deal, but same if I get one right\n\nUNKNOWN: Deal.\n\nUNKNOWN: I guess that you've slept with over five people\n\nI could feel Bridget looking at me. \"This is some evil mastermind shit. I don't know if I should be creeped out or impressed.\"\n\n\"Okay, to be fair, I haven't lied once! I never said I didn't know her--\" My phone buzzed and we both crowded around it.\n\nToday, Gigi was wearing another bodycon mini-dress, this one grey, with a ribbed knit and a three-button neckline. She was sitting on the end of her bed, holding her phone up to the mirror and leaning back with one leg crossed over the other, in thigh-high black socks, dark hair loose and bouncy, with her standard cool, sultry expression.\n\nIt wasn't an overtly sexual pic, but the way Gigi's curves filled out that tight dress, cleavage straining the single remaining button at the neck, and the way the high socks accentuated her legs, baring just a flash of tanned thigh below her skirt, made Bridget and I stare.\n\nThe caption simply said:\n\nGIGI: Ding ding (obviously)\n\nUNKNOWN: Wearing real clothes today I see\n\nGIGI: Ofc I had church this morning\n\nI snorted, highly doubting that.\n\nGIGI: Hmm...\n\nGIGI: I guess that you lost your virginity before Senior Year\n\nUNKNOWN: Nope\n\nGIGI: During then??\n\nUNKNOWN: That's two guesses! I guess that you're half-Brazilian, half-Colombian\n\nGIGI: Omg\n\nGIGI: You didn't just guess that\n\nUNKNOWN: Pic??\n\n\"Careful...\" Bridget said. \"She's just gonna know it's someone who knows her.\"\n\nI shrugged. \"She'd never guess it was me anyway.\"\n\nGIGI: All Latina everything\n\nThe attached pic from Gigi showed her standing with her back to the mirror, a classic, over the shoulder, back-arched booty shot, her dress stretched so tight across her round ass that it clung to the valley between her cheeks, clearly showing the shape of each firm globe. One stocking clad leg was popped playfully.\n\n\"Fuck...\" Bridget whispered. These were the kind of pics that girls posted on their Instagram because they were feeling themselves and they didn't mind compliments or the right kind of boys sliding into their DMs. I never imagined anyone, let alone Gigi Cordoso, would be taking them just for me.\n\nI was through playing it cool.\n\nUNKNOWN: God you're hot\n\nGigi's only reply was, of course, a kiss mark emoji.\n\nGIGI: I guess that we've met in person before\n\nBridget raised her eyebrows. \"Told you...\"\n\n\"Fuck... I have to take a picture for her now.\" I rubbed my chin. What the hell was I going to send her?\n\n\"Hands... forearms...\" Bridget said suddenly.\n\n\"What?\"\n\n\"Straight girls love dudes' hands and forearms. Everyone knows that!\" She said impatiently.\n\n\"I don't know, that's embarrassing. My forearms aren't like... muscley!\"\n\nBridget rolled her eyes. \"\u2014They're fine. And you have big hands--big enough hands...\" She said quickly, doubling back on her words. \"This girl is sending you thotty pics, you have to give her something.\"\n\nI nodded, steeling myself. \"Okay, fine... Tell me how to pose.\"\n\n\"I don't fucking know... here just sit there, I'll take it...\" She grabbed my phone and pointed it down while my arms rested loosely across my lap. \"Flex a little? No, too obvious... relax your fingers.\"\n\n\"Good?\" I asked.\n\nShe shrugged. \"Best you can hope for, I think.\"\n\nI inspected the photo of my light brown forearms, covered in a decent amount of black hair, and my hands casually spread on my crossed legs. My forearms were assuredly average, but I'd always liked my hands\u2014I have pretty long, well-proportioned fingers with prominent knuckles.\n\n\"Fuck it.\" I typed out a caption and sent the photo.\n\nUNKNOWN: Yes, we've met\n\nUNKNOWN: Is that creepier or less creepy?\n\nGIGI: Creepy is okay\n\nGIGI: I like a good mystery\n\n\"Damn, this girl is thirsty,\" Bridget said. She looked thoughtful, chewing her lip. \"Do you want a really good guess?\" I nodded and Bridget reached for my phone, typing it out for me.\n\nUNKNOWN: I guess you have at least one nipple pierced\n\n\"Bridget!\" I felt myself blushing even harder than I was before. \"I can't believe you just...Wait, does she?\"\n\nBridget nodded. \"As soon as she turned eighteen. I heard her telling Sadie about it on Grad Trip.\"\n\n\"Holy shit...\" Me and Bridget sat there in impatient silence for what felt like forever, until my phone buzzed. I grabbed it first, hiding it from Bridget.\n\nGIGI: I swear this is rigged\n\nMy stomach clenched as I saw the picture. The frame showed Gigi's full lips down to her waist, and her chest filled the frame, her full, perky breasts swelling out the front of her dress, still covered except for the bronzed cleavage on display. But visibly pressing through the thin fabric were her jutting nipples, so prominent I could make out the two tiny metal balls on either end of the barbell piercing through the stiff peak of her left breast.\n\n\"Let me see!\" Bridget whined.\n\n\"No, no, she sent it to me, Bridget, she doesn't know you're here, it would be wrong of me to show you!\"\n\n\"It's that good, huh?\" Bridget gritted her teeth. \"Look, girls do it all the time... Have you sent her any thirst traps? Other than the forearm pic?\"\n\nI looked down. \"Uh... yeah, I sent her a picture of... Well, I was wearing these sweatpants...\" It sounded so stupid to say out loud.\n\n\"A bulge pic! You think every single one of her friends hasn't seen that by now? Trust me, you text a single smiley face to a girl and she's sending screenshots of that shit to her entire group chat!\" Bridget jabbed me in the chest with her finger. \"Let me see. Please...\" She put her head to the side. That was a word Bridget didn't say often.\n\nI crumbled. \"Fine.\" I flipped my phone screen in her direction and her eyes widened.\n\n\"Fuck, that's hot.\" Bridget fidgeted a little, swallowing. Then my phone buzzed and Bridget visibly tensed as she saw the message.",
        "\"What?\" I said hurriedly and wordlessly, she handed it to me.\n\nGIGI: I guessss that you're hard right now\n\n\"Ohhh, man. This is getting serious.\" I took a deep breath, staring at that text on my phone screen, all too aware that I did have a hard-on in my chino shorts.\n\n\"I'm, uh... guessing you have to take another pic?\" Bridget mumbled.\n\n\"I mean, yeah, but... should I?\" I cleared my throat.\n\n\"Oh, come on, you can't pussy out now. This is like a once-in-a-lifetime thing. You think Gigi would send you nudes if she knew it was you?\"\n\n\"Okay, first off, fuck you.\" But I knew she was right. \"Shit. Okay. Maybe just another, um... bulge pic... I don't know why I'm telling you this,\" I stammered quickly. \"Do you want to like... look way for a sec?\"\n\n\"...Sure.\" Before things could get more awkward, Bridget turned around. I swallowed, unzipped my shorts and as quickly as I could, snapped a photo of my underwear, complete with the bulging outline of my hard cock against the thin cotton.\n\nFumbling to zip myself back up, I typed out a caption and sent the photo, holding my breath the entire time.\n\nUNKNOWN: That was an easy one\n\nWe sat there in silence, waiting for a response, Bridget hovering so close to me I could smell pot, men's deodorant, and the citrus air freshener she used to try to cover up the pot.\n\nIt was a photo, a close-up of Gigi's sharp chin, the bottom of her slim nose, her full lips parted, and her pink tongue stuck all the way out.\n\nI suddenly remembered the sensation of that tongue brushing my earlobe teasingly during truth or dare, and shivered.\n\nGIGI: Finally, this game is getting fun\n\nBridget let out a long breath that tickled my neck.\n\n\"...What are you gonna guess?\"\n\n\"Got anything good? If I'm gonna show you the next picture, you have to work for it.\" My voice was hoarse.\n\n\"She knows you've met and she's seen your skin tone. If you're gonna stay covert, it has to be something she doesn't know you know.\" Bridget adjusted her cap as she thought. \"What do you think her favourite position is?\"\n\n\"I don't know. Like... you wanna actually guess?\" It seemed almost inconceivable to stop cheating at this point.\n\n\"What position were you in with Sadie? That obviously made a big impression.\"\n\n\"Um... from behind, like... doggy, I guess.\" I rubbed my eyebrow. This was really getting into the nitty-gritty.\n\n\"Could go with that. She's got that whole killer sex vixen thing happening though, she seems like she'd like something a bit more active.\" Bridget chewed her lip.\n\n\"Yeah, I was gonna say... Should we guess cowgirl?\" I asked.\n\n\"Sure, just do it, we don't want her leave her hanging,\" Bridget said quickly.\n\nGIGI: lol incorrect... and you were doing so well\n\nBridget and I groaned. \"I said to do doggy!\" Bridget smacked me in the shoulder.\n\n\"Yeah, and then you changed your mind, genius!\" I pulled her hat down over her eyes. My phone vibrated.\n\nGIGI: I guess that you're over 6 inches\n\n\"Dick pic, dick pic alert!\" Bridget dug her fingers into my arm. \"She's practically begging for it, oh my god.\"\n\n\"Jesus Christ.\" I swiped my hand down my flushed face. This was hell on my nerves.\n\n\"What? Are you not...\" Bridget trailed off with a snort of nervous laughter.\n\n\"I don't know!\" I threw myself back on the carpet, covering my eyes.\n\n\"What, like you haven't measured it?\"\n\n\"No! I was going to, but then I felt stupid and I couldn't find the measuring tape...\"\n\nBridget cackled with laughter. \"Well, I guess we better find it.\"\n\n\"We?\" I muttered.\n\n\"I mean... you said if I wanted to see the pics I had to work for it, so... Anyways, you'd probably fuck it up by yourself,\" She said quickly, snickering. I narrowed my eyes, but seeing as there were very little boundaries left between Bridget and I at this point, I shrugged.\n\nWe hunted around downstairs for the plastic tape measure, grabbed it as quick as we could and hurried back upstairs.\n\n\"All right\u2014let's get this over with,\" Bridget held out the tape measure aggressively, like she was going to throttle me with it.\n\n\"I'm, uh... I'm not ready...\" After all that anxious running around downstairs, my hard-on had retreated into a semi.\n\n\"Oh. Maybe just, uh, look at the pics she already sent and...\" Bridget mumbled and I nodded.\n\n\"Sure.\" I paused, sitting down on my bed and gesturing nervously to my fly. \"Do you mind if I...\"\n\n\"No, no, uh... you do you...\" Bridget ran a hand through her tangled hair, plopping down on the other end of the bed. \"Not sure how else we're going to, uh, measure it.\"\n\nSwallowing, I unzipped my shorts and started to rub myself, just through my underwear at first. I looked down at my phone, flipping through the photos of Gigi's waiting tongue, of her nipples poking through her dress, of her ass curving out from beneath it.\n\nBreath growing heavy, I pulled down my waistband and took out my rapidly swelling cock. I had seen Bridget's pussy, I had tasted it, for god's sake\u2014it wasn't so strange that she was seeing my hard, naked dick.\n\nI stroked myself firmly, feeling my shaft continue to stiffen and grow taut. Out of the corner of my eye, I saw Bridget, who was casually averting her eyes, glance over.\n\n\"Okay, we should, uh... measure\u2014\" She turned towards me, lifting the measuring tape awkwardly.\n\n\"Wait, um... it gets bigger...\" I mumbled. \"If you just\u2014give me a sec.\"\n\nBridget froze. \"\u2014Oh. Really\u2014Okay.\" She gave a soft huff of laughter. \"Sorry, this isn't exactly my area of expertise...\"\n\nI snorted, giving her a quick smile. \"I know, it's all good.\"\n\n\"Do you want... uh, do you want some lube or something?\" She asked.\n\n\"Oh, uh... do you have some?\" I asked. It might help\u2014normally I could get to full mast in a few seconds, but the strangeness and anxiety of the situation was slowing me down a little.\n\n\"Always\u2014\" Bridget climbed down from the bed and went to her backpack. She had a small tube in her hand when she returned, sitting next to me on the bed and uncapping it. I went to hold out my hand, but she just reached over and squirted the translucent gel directly onto the head of my cock.\n\nI gasped as the cool lubricant splashed onto my flushed skin, and we made awkward eye contact, before she quickly pulled back. But Bridget stayed close, watching me spread the lube along my length, giving a slick sheen to my cock and my strokes a slippery smoothness.\n\n\"It's so... angry-looking,\" Bridget said, sounding like she was observing an alien species. How had I forgotten that she'd never seen a cock before in real life?\n\nI laughed in spite of myself. \"...Thanks?\"\n\n\"I'm serious, dude. It looks painful.\" She was frowning, mouth slightly open, an expression of wonder, confusion and slight alarm. \"And your foreskin... truly wild.\"\n\n\"Shut up...\" I snorted, trying to focus on the photos. One last look at Gigi's butt and I grunted. \"Okay, I think I'm ready.\"\n\n\"Okay\u2014hold still.\" Bridget shifted closer, lowering the tape measure. \"I Googled how to do it properly\u2014you have to bone press it.\"\n\n\"What does that mean?\"\n\n\"Here\u2014\" Again, surprising me, Bridget reached down and placed the end of the tape measure against the skin just above the base of my dick, and pressed down until she hit bone. Her knuckle was just barely brushing the base of my cock. \"Like that.\"\n\nBrow furrowed, tongue at the corner of her mouth, she carefully stretched the tape measure out to the tip of my cockhead, laying it flat against my shaft. I'd seen a similar expression on her face when we were dissecting a frog in Bio class\u2014keen focus and morbid curiosity.\n\n\"Call it like\u20146.6...6.7 inches.\" Hearing Bridget calmly report the exact length of my erect cock was certainly one of the strangest moments of my life, but I wasn't complaining about the results--I knew how rare (and inconvenient) the 8 and 9-inch monsters that porn stars boasted were.\n\nShe removed the tape measure and then quickly wrapped it around the thickest part of my shaft. I stood as still as I could, the tips of Bridget's fingers again, millimeters from my cock. \"And like... 5.8 inch girth.\"\n\n\"Cool...\" I said, throat dry, not expecting this much thoroughness. \"Should we take the\u2014\"\n\n\"Yeah\u2014\" Bridget slid away the measuring tape and grabbed my phone. \"Just sit there like that\u2014you can hold it if you want.\"\n\nTo get the angle she wanted, she crouched down on her haunches on the floor in front of me, and automatically my cock flexed at the sight of her basically kneeling between my legs. Thankfully, she didn't seem to notice. Eyes on the screen, she nodded, looking satisfied. \"I feel like that's good. Not that I would really know.\"\n\n\"This is so weird,\" I murmured as I took my phone. The photo was honestly really good. Sun was streaming in from the skylight, bathing my tawny brown skin, and my cock looked about as thick and hard as it ever did, especially from the angle Bridget had chosen.\n\n\"It's all for the nudes, AJ...\" She plopped herself on the bed beside me. I awkwardly tucked myself back into my underwear, still uncomfortably hard.\n\nUNKNOWN: Good guess\n\nI typed out simply along with the photo, taking a deep breath before hitting send. It was away, and there was nothing I could do about it.\n\nBridget and I settled ourselves on our stomachs across my bed, side by side like a couple of schoolgirls at a sleepover as we waited for a reply.\n\n\"She did want a dick pic, right?\" I said after a few moments of nothing. \"I didn't just sexually harass her?\n\n\"She literally guessed your dick size, dude. I'm pretty sure that's what she was going for.\"\n\nBzz. Bridget crowded into me to look.\n\nGIGI: So that's why Sadie screamed\n\nGIGI: God damn that thing is fat\n\nA rush of excitement filled my chest.\n\nGIGI: Ask me\n\nBridget snatched my phone.\n\nUNKNOWN: I guess you're thinking about sucking that fat cock\n\n\"Bridget...\" I sputtered, and she flashed me a mischievous smile.\n\nGIGI: Fuck...... guilty\n\nGigi's mouth and chest filled the frame of the photo. Two of her fingers were between her parted lips, wet and shiny. But below, her bodycon dress was rolled down to her ribcage, and her full, tanned tits were completely exposed. They were perky and squeezed tight together even without a bra, more than a comfortable handful, with fat, wine-dark nipples, one pierced, of course, with a silver barbell.\n\n\"Holy shit...\" Automatically, I reached down and pressed my palm against my cock, straining against my underwear again.\n\n\"Yesss...\" Bridget whispered, mouth opening. \"Finally.\" She still had my phone in her hand and typed out another text.\n\nUNKNOWN: Holy shit those are unreal\n\nGIGI: I guess you're jerking off to that pic\n\nI breathed in sharply. Bridget immediately sat up on her knees and turned the phone towards me. \"Take it out. We're gonna send her a video.\"\n\n\"Are you sure\u2014\"\n\n\"I'll be quiet. Come on...\" She was breathing hard. \"Jerk it.\"\n\n\"Okay, okay...\" I said nervously, fishing my cock back out of my underwear and starting to pump. With Bridget holding my phone, I didn't have the image of Gigi's tits to look at, but as the first nude I'd ever gotten, it was pretty much burned into my mind.\n\nAnd there was also Bridget.\n\nAs I started to stroke, lying on my back, my tomboyish friend hunkered down on all fours, leaning on her elbows to her face and the phone was on a level with my dick. Her butt was raised just a little above the rest of her, one ankle crossed over the other like Gigi's had been in the pic from last night, though she was wearing a lot more clothing, obviously.\n\nHer hazel eyes were fixed on the screen, narrowed in concentration. I swallowed\u2014it was honestly bizarre how hot it was to see her staring with such rapt attention at a video of me jerking off.\n\n\"Hh,\" I breathed softly, my fist sliding up and down my cock.\n\n\"Okay... got it,\" She said softly and I saw her type out a message and hit send. I just lay there, still casually touching myself. Bridget glanced over at me and our eyes met. I saw her gaze run briefly up and down my body. Her breath was shallow and her cheeks were a little red. That photo of Gigi must have turned her on as much as it did me.\n\nWhen an answering buzz came back, Bridget scooted over and lay down next to me on her back, our shoulders touching, holding the phone above both of us so we could both see.\n\nGIGI: Good boy\n\nGIGI: Fuckit's soo juicy\n\nThe next two texts were accompanied by a photo.\n\nGIGI: Game over\n\nGIGI: You win\n\nIt was a photo of Gigi from the neck down, her back facing the camera, kneeling on her bed with her thighs spread in a V, completely naked except for her black thigh-highs. The smooth arch of her bronzed, toned back curved down to the thrust of her hips and the round swell of her bare, sun-kissed ass, cheeks firm and squeezable.\n\nBridget and I said variations of the word \"Fuck\" at the same time. As my fingers wrapped back around my cock, hers fumbled the button on her loose shorts, unzipping them, yanking them over her hips and down her legs. Her eyes stayed on the photo as she thrust a hand into her boyshorts.\n\nWith the other hand, she texted back.\n\nUNKNOWN: Oh my fucking god\n\nUNKNOWN: Your body is insane\n\nUNKNOWN: Video?\n\nThen she opened the photo again, and while we waited impatiently for Gigi's response, Bridget and I lay there touching ourselves to the sight of Gigi's naked body, side by side. Bridget's breathing grew steadily heavier, and I could hear how wet she was under her fingers, hand moving urgently inside her panties.\n\n\"Fuck, it's hot,\" Bridget bit out.\n\n\"I know. She's killing me,\" I panted.\n\n\"No, like\u2014It's really hot in here\u2014\" Bridget huffed. Being in the attic, my room often was in the summer. \"I'm getting sweaty. Fuck it, I'm just gonna get naked, okay?\"\n\n\"Uh, yeah, I don't care\u2014\" I tried to say as casually as someone could while jerking off and watching one of my best friends hurriedly strip off her shirt, sports bra and finally, underwear.\n\nMy phone buzzed and Bridget flopped down on her back next to me again, only now she was completely naked, bare leg pressing against mine, bare tits swaying slightly as she settled. This was definitely the closest I'd ever been to a naked girl I wasn't about to have sex with.\n\n\"Come on, play it\u2014\" Bridget hissed, reaching out and tapping the video Gigi had just sent.\n\nThe video opened on the same frame as her last photo, kneeling with her back and ass to the camera. But then, like the photo was coming to life, Bridget slid her hand back, running her fingers over her naked curves before sinking her acrylic nails into her thick ass cheek, grabbing a big handful and squeezing, shaking gently to show off the ripples through the full globe.\n\n\"Fuck yeah...\" Bridget whispered, spreading her thighs next to me, using her own wetness to smear her clit, rubbing quickly with two fingers. And I was right there with her, jacking my cock hard, holding the phone aloft with my other hand.\n\nOn the video, Gigi had begun to rock her hips, leaning forward and casually bouncing her ass up and down. Then she swayed it side to side, grinding herself on the bedspread as Bridget and I watched with unblinking fascination.\n\nAll I could hear from the video was the music playing in her room, some floaty, girly bedroom pop and faintly, what sounded like a riding mower outside. For some reason it was even hotter that Gigi's dad or knowing her, her gardener, was outside doing the lawn while she was in her room, showing off her naked body for the camera.\n\nGigi's head turned, so we could just see her chin and lips at the top of the frame over her shoulder, and she spanked her own ass, hard enough that the smack cut through the other noise. I saw her muscles tense and her lips parted gently, but the only sound was a satisfied exhale. Then she reached for the camera and the video ended.\n\nGIGI: Your turn, creeper\n\n\"God fucking damn it...\" Bridget grabbed the phone. \"We have to send her another video.\" She rolled onto her side, still lying next to me, and pointed the camera at my cock. \"Where's the lube? That looked good, before.\"\n\n\"Uhh\u2014\" I looked around, feeling a little exposed.\n\n\"Ugh, whatever\u2014\" Impatiently, Bridget sat up and leaned over until her head was hovering above my cock, holding her tangled, tawny hair back.\n\nI nearly had a fucking heart attack.\n\nBut she only let a mouthful of spit drop out of her mouth to land on my fat, purple cockhead, dripping down my length. As she swiped an arm over her lips, our eyes met--mine wide with shock, hers blazing and determined. Then I grunted and started pumping my dick, fast and hard, spreading Bridget's saliva all over my achingly hard shaft until the taut brown skin was shiny and slick.\n\nBridget whipped up my phone to record. With her naked, leaning over me, face flushed, lips pressed tightly together, the peaks of her breasts stiff and pebbled with goosebumps, I had a lot more to look at then last time. As always her gaze stayed on the phone screen, maybe oblivious to my eyes travelling across her, maybe willfully letting me use her nude body for \"inspiration\" without making it awkward.\n\nAs I watched her, and she filmed me, her free hand strayed between her thighs. With her legs open, I could see her fingers almost absent-mindedly circle her clit, dipping inside her dripping entrance. I felt a ripple of tension run up my cock and my shaft flexed hard, veins throbbing.\n\nNext to me Bridget breathed in sharply and I saw her finger plunge into her pussy. With a slight gasp, I let go to stave off an approaching orgasm and Bridget jabbed stop on the video. As she sent it off, my eyes stayed on her.\n\n\"Can I, uh, can I help...\" I said, nodding towards her. Bridget looked at me. \"...Y'know... practice.\"\n\n\"Practice?\" She chewed her lip. \"Sure.\"\n\n\"Yeah, just for practice\u2014\"\n\n\"Yeah...\" Bridget breathed, lying back down next to me as I reached between her legs, my hand joining hers. While her fingers moved across her clit, I sank mine inside her, stroking her wet, clasping walls.\n\nMy phone lying on the covers, forgotten for the moment, Bridget and I worked in concert to get her off, plying her slick pussy, my free hand on her bare thigh, which was resting on top of mine as we lay side by side.\n\n\"Huhh... hh... mmph...\" Her heavy breathing turned into shallow, muffled gasps and I shifted so I was leaning over her chest.\n\n\"Can I...\" Mouth watering, my gaze flicked down to her breasts and she nodded hurriedly, face screwed up with pleasure.\n\n\"Mmph...\" I closed my lips over Bridget's nipple and sucked, batting it with my tongue, teasing the other one with my fingers.\n\n\"Hnngh...\" Bridget arched, looking up at the ceiling, rubbing herself faster.\n\nBzz. \n\nImmediately we both lunged for the phone, clambering awkwardly, our legs getting tangled up with each other. Bridget ended up with it in her hands, falling onto her stomach. I was briefly distracted by the soft curve to her bare ass, but then I huddled in to look at the phone, leaning half-across Bridget's back.\n\nGIGI: It's so fucking hot that I don't even know who you are and your fat cock is making me wet as fuck\n\nThe video started on that familiar pose, but Gigi was clearly done messing around, because she immediately leaned forward onto all fours, reached between her thighs and started rubbing her exposed folds, soft and pink in the natural light seeping through her blinds. Bridget and I could hear her panting breaths as she circled her clit, teased it between two of her fingers. She was visibly wet, the shine of moisture catching the light, fingers slick and coated, a strand of arousal connecting one pussy lip to the other.",
        "\"Oh, fuck...\" Bridget reached beneath her, lifting her ass slightly so she could grind down on her hand, shoved between her hips and the mattress. Still partially draped across her, I shifted so I could stroke myself, sort of half-leaning on her to watch the video, my hand resting on her bare back.\n\nGigi was fingering herself in earnest now, vigorously circling her hips at the same time, riding her hand, bouncing her round ass up and down, almost twerking as she fucked her own dripping pussy. She moaned softly, insistently, as if trying to hold it back, and her other hand went to her chest, squeezing her tit, toes curling and uncurling in her thigh-high socks.\n\nBridget glanced back at my hand on her lower back, then made brief eye contact with me, and drew her legs up so she was hunkered down on all fours, the motion casually sliding my hand to her ass. She quickly looked back to the video, but I got the message, grabbing a handful of her smooth cheek, groping her ass.\n\nAs Gigi hooked two fingers inside her slippery cunt on screen, I lowered my hand to Bridget's pussy again, our slippery fingers touching, before mine entered her again from behind, making her groan out loud and shove her hips back on my hand.\n\nIn the video, Gigi seemed to be reaching the end. Bridget and I watched in awe, both of us frantically fingering her, and my hand pumping up and down my cock, as the gyrating of Gigi's hips grew desperate and erratic, and her shoulders hunched forward, reaching out to grab at her headboard for leverage. \"Anh... Anh--\" She gasped, her moans higher than I would have thought as she began to come undone.\n\nHer thighs vibrated, fingers flying on her clit, shaking her ass, as visible ripples rocked her body, and she tipped her head back before collapsing forward onto her bedspread. In her last moments, she twisted her body towards the camera, showing us her heaving tits, lifting one leg gracefully into the air to spread her legs wide as she rode out her orgasm on her hand.\n\n\"Oh my god\u2014\" Bridget moaned as the video ended on Gigi's flushed, glowing naked body, coppery skin bathed in soft sunlight, basking in the warmth of orgasm.\n\nBut Bridget and I didn't stop. The phone slipped from Bridget's grasp, and she cursed and moaned, pushing her ass back against my thrusting fingers, her tawny hair hanging in curtains on either side of her face.\n\n\"Give me your fucking mouth\u2014\" Bridget bit out and I didn't hesitate, dropping down to bury my face in her cunt. It was my first time eating a girl out from behind, and even the gentle curves of Bridget's ass were overwhelming, cheeks pressing against my face as I shoved my tongue into her pussy.\n\nIt was a more feminine, submissive position than I'd ever seen Bridget in, face down and ass up on my bed, my sheets crumpled in her fist, naked and blushing, shining with sweat, letting out choked moans as she rode my mouth, throwing her hips back.\n\nI let go of my cock to give both hands and all my attention to eating out Bridget, tongue lashing up and down her sex, fondling her breasts, squeezing her ass, more shameless and aggressive with her than I'd been before. True to form, she matched me grunt for grunt, shove for shove, her own hand retreating from her clit to knit into my hair, trapping me in place for her grinding pussy.\n\nIn the moment, my head fuzzy, I didn't know much, but I knew for certain that this was no practice run, no academic demonstration. Whatever it meant, Bridget and I were hooking up in this moment. I was pleasuring her, with my mouth and fingers, and she wanted it\u2014badly.\n\n\"Play with my ass\u2014\" She breathed, but when I groped her cheek hard, she huffed and grabbed my hand, directing it into the valley of her rear, pressing my fingers against her asshole.\n\n\"Fuck, Bridget\u2014\" I groaned with surprise, jaw aching from my continued devouring of her pussy, but obediently I circled my fingers around her tightest entrance, just rubbing her there, joining my fingers on her clit and my tongue inside her cunt.\n\n\"Yeah, fuckyeah--\" Bridget squirmed. \"Right there! Don't stop\u2014don't stop\u2014Oh, fuck, AJ!\" She cried out as she came, cream bursting over my tongue, every muscle tensing hard, fingers digging into my shoulder. Knees folding under her, she fell forward onto my bed, limp.\n\n\"Wn hv t snd hr a vdeo.\" Breathing hard, Bridget murmured something unintelligible directly into my mattress.\n\n\"What?\" I panted.\n\n\"We have to send her a video,\" Bridget said, lifting her head. She rolled over onto her back, and glanced around for my phone until she found it. \"Come here.\" She reached out and hooked her fingers into the waistband of my shorts, which were unbuttoned and had been hanging off my hips for some time.\n\nI scooted closer to her, maneuvering so she could tug my shorts off. Now I was kneeling with my hard cock sticking out of my bunched down underwear, my knees tucked beneath Bridget's spread legs. If the phone wasn't there, held out between us like a shield, any observer would think I was about to stick my cock inside her.\n\n\"I'm turning the sound off\u2014\" Bridget said, looking up at me. She opened her thighs wider, presumably so they were out of frame, and nodded. I didn't know what she'd meant by the previous statement until she spoke again. \"Stroke it. I'm recording.\"\n\nBreathing in sharply, I started jacking my cock hard, already feeling the stirrings of an orgasm in sight. With the hand that wasn't holding my phone, Bridget almost lazily toyed with her pussy, just a foot or so away from the tip of my cock.\n\n\"Faster. Pump that cock for her,\" Bridget murmured. \"Gigi rubbed her pussy to you. She made herself come thinking about your dick. She wants it so bad.\"\n\nI groaned, pushing my hair back where it was falling into my face. My eyes were on Bridget's face and her presented, naked body as my fingers tugged my shaft, and for the first time, her hazel eyes turned to me, not the phone screen. \"Isn't she so fucking sexy? Those big tits and that fat ass. Do you want to fuck her?\"\n\n\"Yeah\u2014\" I muttered, stomach clenching hard.\n\n\"I bet she's thinking about it right now. I bet she's thinking about your cock inside her, pounding her fucking brains out. I bet she's gonna make herself come again thinking about it. What a fucking slut,\" Bridget hissed, and I saw her fingers quicken on her clit. \"Jerk it... fuck your hand like you're gonna fuck her pussy...\"\n\n\"Fuck...\" I groaned. My muscles were on fire, skin tingling, so turned on that even furiously pumping my cock didn't seem like enough of an outlet. I wanted to fuck, wanted to bury myself inside a girl's tight, wet pussy. Whether it was Gigi or Bridget, at this point I didn't much care.\n\n\"Are you close?\" Bridget asked, and I nodded. The sight of Gigi's naked body, the feel of Bridget's under my fingers, her voice teasing me, egging me on... everything I'd experienced in the past few hours was screaming towards me like a freight train, and I couldn't take it much longer.\n\n\"You gonna fucking come for her?\" She whispered and I nodded again. \"Do it then, blow your fucking load for that bitchy cheerleading slut. She wants to see you come. She wants that fat cock to cover her face in cum\u2014\"\n\nA rope of cum splattered across Bridget's tits, collarbone and neck as her harsh, filthy murmurs brought me over the edge. My cock throbbed, over and over in my grasp. I tried to aim away from the phone, but unfortunately for Bridget, that meant covering her in it, load after load of sticky white cum painting her stomach and breasts.\n\nShe gasped, lips parting, tensing as each new spurt of cum hit her skin. But her fingers moved even faster on her clit and she held the camera steady, capturing every second of my orgasm.\n\n\"Fuck, Bridge\u2014\" I panted, out of lust and apology, and my cock pulsed a final time onto her thigh. With one shaking finger, Bridget hit stop on the video. Lying there covered in my cum, she swallowed, typed out a text along with the video and hit send.\n\n\"Jesus Christ. Sorry...\" I said, falling onto my side.\n\n\"No, no... it's...\" Bridget said in a hoarse voice, looking down at herself. \"...All good. I just didn't know it would... shoot like that. Fuck. I got you all messy, too, so I guess we're even now.\"\n\n\"I guess...\" I laughed, wiping my face. \"Let me get you a towel.\"\n\nWe cleaned ourselves up and I checked my phone.\n\nGIGI: mmm so much cum\n\nGIGI: fucking yum\n\nGIGI: Did I make you come harder than Sadie\n\nI raised an eyebrow. I knew what the right answer was, but now that my haze of lust had lifted for the moment, I paused.\n\nUNKNOWN: Hmm not sure\n\nUNKNOWN: Might need a closer comparison\n\nUNKNOWN: But I believe in you\n\nGIGI: If that's a challenge, I accept\n\nGIGI: I'm gonna make you forget your own name\n\nGIGI: Let alone hers\n\nGigi signed off with a kiss, and that was it. I glanced over at Bridget, pulling her panties on.\n\n\"Streetfighter?\" I asked.\n\n\"Deal.\" She grabbed her cut-off t-shirt and sat down cross-legged on my carpet. Just like that, she was my purely platonic lesbian friend again and we were playing video games like always, just a bit more comfortable in our underwear.\n\nA few days later, I checked my phone, coming out of my after work shower. I had a text.\n\nGIGI: Hey stranger\n\nI grinned. Gigi and I had been texting on and off, no more serious sexting sessions, just flirting here and there.\n\nUNKNOWN: How's it going?\n\nGIGI: So I'm home alone\n\nGIGI: If you wanna come over and play\n\nIt was followed by a photo of Gigi taken in a giant, full-length mirror, of what looked like the grand foyer of her elaborately huge house, marble floors and a crystal chandelier in the background. She was wearing a men's button-down with the sleeves rolled up, open to reveal a white Calvin Klein set that her fit, curvaceous body was putting to work, cleavage squeezed tight in the elastic bra, hips and thighs flaring out from the high-legged panties. White high heels made her legs even longer, accentuating the toned muscle.\n\nI blew out a long breath. What the hell was I supposed to do now? Go over there and hope that Gigi's thirstiness, as Bridget had put it, outweighed her shock and disgust that it had been me this whole time?\n\nAs I sat on my bed, contemplating this, I got another text.\n\nSADIE: Hey r u free??\n\nI frowned. I flipped back to the photo of Gigi, my eyes raking over her body. Then I sighed and texted Sadie back.\n\nAJ: Yeah what's up?\n\nSADIE: I'm outside lol wanna go for a drive\n\nI blinked and pulled back my curtains. Sadie's white Nissan was parked outside my house. It wasn't the first time one of my friends had done this, but the fact that it was Sadie made my heart beat a little faster.\n\nTrying to calm my nerves, I texted back and pulled on a t-shirt and jeans, thankful I just taken a shower.\n\nAJ: Sure one sec\n\nShe probably just wanted to hang out and catch up\u2014it had been a few weeks since I'd seen her. But still, I brushed my teeth and my tongue, finger-combed my dark hair in what I hoped was a casually mussed way.\n\nI went outside and climbed into the passenger seat of the Nissan, sitting on my darkened street.\n\n\"Hey, it's been so long, oh my god!\" Sadie said. She was dressed down in a baggy hoodie, cropped leggings and sneakers, golden hair pulled into a ponytail.\n\n\"Yeah. How are you?\" I smiled as she pulled me into a hug, a little awkward in the front seats of the car. I could smell the mix of her fresh shampoo and laundry detergent, a sweet strawberry and cream scent.\n\n\"I'm good, I've just been crazy busy with work and everything. Sorry for being totally M.I.A.\" She started the car and pulled out, cruising the dark, quiet streets of my residential neighbourhood.\n\nWe chatted about work, our new jobs, mine at Daisy Dairy, hers at a fancy restaurant downtown as a hostess. Most days she worked late and then slept, which was why she hadn't been around much.\n\n\"But I got off early today, so I just thought I should...\" She glanced at me with a grin. \"Anyway, that's why I'm so gross.\"\n\n\"You're not gross,\" I said with a smile. Her outfit might have been casual, but she was obviously recently showered like me, and I noticed she had put on eyeliner and shiny lip gloss.\n\n\"So, um...\" Sadie said, with uncharacteristic hesitation. \"Gigi texted me.\"\n\nI tried to keep a straight face. \"Oh, yeah?\"\n\n\"Yeah. She said thanks for passing on her number to that guy.\" She gave me a look, the corner of her mouth curving up.\n\nI played innocent. \"Which guy?\"\n\n\"The guy from Grad Trip. So... you.\"\n\n\"Ohhh. That guy.\"\n\nSadie smirked. \"Yeah, that guy, genius. So you texted her?\"\n\nI shrugged. \"...Just a little bit.\"\n\n\"You're so not slick,\" she snorted. \"Did she send you nudes?\"\n\nI looked out the window. \"...Kinda personal question.\"\n\n\"Sooo... yes. Oh my god.\" She shook her head, laughing. \"And she really doesn't know it's you?\"\n\n\"Nope... I think she's into the man of mystery thing.\"\n\n\"I bet. She's a freak.\" Sadie put her tongue between her teeth.\n\n\"And you're not?\" I blurted.\n\nSadie's mouth dropped open. \"I'm...\" Then she rolled her eyes, giggling. \"Okay, you're right, I'm a freak. But I'm a nice person also, so I'm like... Lawful Freak. Freaky Good.\"\n\nI laughed, a little shocked. \"Is that a D&amp;D alignment reference?\"\n\n\"I'm on the internet too, you know!\" She said defensively. \"And I have to put things in terms you can understand.\"\n\nI smiled. I had missed hanging out with her. \"So Gigi's Freaky Evil?\"\n\n\"Yeah.\" She grinned.\n\n\"Did you drive to my house just to tell me that?\"\n\n\"No...\" To my surprise, Sadie bit her lip. \"So are you gonna fuck her or what?\"\n\nI adjusted my glasses and sank a little bit in my seat. \"I don't know. I mean... I don't think she's gonna be into it if she finds out it's me, so...\"\n\nShe shrugged. \"You don't know that.\"\n\nI frowned. \"Okay, wait... do you want me to or not?\"\n\n\"I don't know! It doesn't matter what I think anyway, you do you.\" She kept her eyes on the road, hands fidgeting on the steering wheel.\n\n\"You don't know or it doesn't matter?\" I asked calmly.\n\n\"Both.\"\n\nWe were quiet for a moment, listening to the low hum of the engine, the wind in the trees, distant traffic.\n\n\"She asked me about you,\" I said quietly.\n\n\"What? What about me?\" She narrowed her eyes.\n\n\"She asked me if sexting with her was better than sex with you,\" I rubbed my chin. \"Not in those exact words, but, y'know...\"\n\nI saw Sadie stiffen, setting her jaw. \"What were the words?\"\n\n\"Um...\" I swallowed. \"Did I make you come harder than Sadie, I think... was the phrasing...\"\n\nShe glowered at the street in front of her. \"And...\"\n\n\"I told her I wasn't sure cause it wasn't a fair comparison,\" I said honestly. Sadie didn't owe me anything, and I didn't owe her anything, so I didn't see why I should lie just to spare her feelings.\n\nSadie was quiet for a moment. \"Do you think she's hotter than me?\"\n\n\"What? Are you jealous of Gigi or something?\"\n\n\"Pff--no.\" Sadie snorted, and I believed her. \"Just tell me if you think she's hotter than me. Did she make you come harder than me?\"\n\n\"Those are two different questions.\"\n\n\"I have time to hear two answers,\" Sadie said without missing a beat. She knew me too well to get distracted by my pedantry.\n\nI took a deep breath and told her the truth. \"No. And no.\"\n\n\"Hm.\" Sadie ran a hand down her ponytail, sitting up a little straighter at the wheel, putting her shoulders back, pride obviously satisfied. \"...Okay. Just checking.\"\n\n\"Just checking?\" I said.\n\nShe chewed her lip, checking her mirrors, putting her hands in her hoodie sleeves. \"Yeah, y'know. Just checking.\"\n\n\"Kinda feels like you're being possessive,\" I murmured.\n\nHer brows creased. \"Possessive? What do you mean, possessive?\"\n\n\"Like... you just want to be friends, but you don't want me to think that anyone else is hotter than you or a better fuck than you.\" I rubbed my thumbnail against the knee of my jeans.\n\nStopping at a light, Sadie lifted her chin and looked at me, lips tight. \"Yeah. And?\"\n\nI shook my head, running a hand through my hair, feeling heat rising to my cheeks. \"Y'know, you're right. Maybe I will fuck Gigi. She actually invited me over tonight, so you could just drop me there.\"\n\nSadie's jaw tightened, but then she lifted her chin and shrugged. \"Fine.\" The light went green and she hit the gas a little aggressively. To my surprise, I realized we were actually heading north, towards the suburban neighborhood where Gigi lived.\n\nI could feel my Adam's apple drumming against my throat, wishing I hadn't thrown out that little bluff. All too easily, Sadie had turned the tables on me. I put my hand on my phone in my pocket, wondering if I should text Gigi to let her know I was on my way.\n\nBut I wasn't actually going to go in there, was I?\n\nWe rode in tense silence until Sadie's car turned onto Gigi's quiet, affluent street, lined with tall trees, forming a dark canopy that hid the stars. The houses here were true mansions, huge, with tall fences and walls, automatic gates and pull-through driveways, vast, immaculate lawns and swimming pools with in-ground lighting.\n\nSadie pulled up next to the curb and turned off the car. \"We're here.\" She pointed to the beautiful, Mediterranean-style mansion up the street.\n\n\"That's Gigi's house?\" I swallowed, trying to think of some way to escape the humiliation of either chickening out and telling Sadie to take me home, or the appalled, disgusted look on Gigi's face when she found out her mystery sext-partner was me.\n\n\"Yup,\" Sadie said. Still not looking at me, she reached up and took out her ponytail, shaking it loose and casually running her fingers through the tangles. \"You're gonna text her and tell her you can't come.\"\n\nShe said it with such certainty that my eyebrows shot up. \"Why should I?\"\n\nSadie popped her seatbelt and leaned back in her seat, finally glancing over at me, her blue-green eyes locking onto mine as she reached down and unzipped her hoodie. I saw smooth, bare skin and the massive globes of her breasts spilled freely into view, barely covered by the open V.\n\nMy breath caught and I fumbled to pull out my phone. I already had a couple messages from Gigi, after not texting her back for half an hour.\n\nGIGI: Waiting...\n\nIt was followed by a photo of her in front of the same mirror, resting her chin on her hand, crouching down on her haunches, held up by those high heels, her ass curving out of her panties, full and lush.\n\nUNKNOWN: Sorry, can't tonight\n\nThen I dropped my phone and leaned over to kiss Sadie for the first time. If she was surprised, she recovered fast, kissing me back hungrily, our tongues meeting in a sloppy make out.\n\nWe were all over each other almost immediately, breath quickening, hands grabbing at each other. Her scent filled my nostrils again and I tasted her lip gloss, fumbling to take off my glasses, dropping them blindly in the cupholder. Then she was shifting, clambering out of the driver's seat, over the center console and into my lap, arms locking around my neck as she settled her hips against mine.\n\nMy heart was beating out of my chest, and I didn't want to rush, but my shaking hands couldn't help but reach, for the thick swell of her leggings-clad ass planted on top of my thighs and inside her open hoodie to sink my fingers into the soft flesh of those huge breasts again.\n\n\"Fuck...\" Sadie bit out into my lips, breath hitching as I roughly kneaded her tits, pinching her full nipples. It was driving me fucking crazy to be touching her again and before I knew it, my mouth was tracing a hot, bruising trail down her neck, her collarbone, and I was lifting her heavy tits to my lips, sucking messily on the stiff, swollen peaks.",
        "\"Hahh...\" She gasped, knitting her fingers into my hair as I devoured her tits, grinding her hips hard against the growing bulge in my jeans.\n\nIt was dark in her car, the trees thankfully shrouding us in shadow as Sadie rocked in my lap, cupping her own massive breasts to offer them to my lips and tongue, engulfing my face in the warm softness of her chest.\n\nImpatiently, she reached down and tugged at her cropped leggings, shimmying them down her hips, half-standing up. I helped to hold her up as she stripped them off, kicked off her sneakers. I looked down and saw only her smooth, shaved folds between her thighs, not a scrap of panties in sight.\n\n\"Christ...\" I groaned. No bra, no underwear.\n\nA smirk curved Sadie's pouty lips as she huffed. \"I thought you might be mad at me, so...\"\n\n\"Who says I'm not?\" I breathed, playfully twisting her nipple between finger and thumb, unzipping my jeans and yanking my hard cock out of my underwear with my other hand. I glanced around briefly, but the street was deserted, and my attention was soon ripped back to the mostly naked girl in my lap as wet heat kissed my cockhead. Sadie was sinking down onto my naked erection.\n\n\"Oh my god...\" I panted and we both started moving, her curvy hips circling to screw her already soaked pussy around my girth while I bucked upwards, desperately fucking into her squeezing slickness.\n\n\"God\u2014damn--I missed your dick--\" Sadie gasped rhythmically against my mouth with every thrust of my cock. Her tongue entwined with mine, ahead of our lips in wet, shameless high school fashion as she rode me urgently in the passenger seat of her car.\n\nMy abandoned phone buzzed, shuddering on the dashboard, but my hands were busy gripping Sadie's big, round ass as it shook from my jostling shoves up into her milking pussy. It felt like my entire body was vibrating like my cell phone, both with the elation of finally fucking Sadie again and the thrill of doing it outside Gigi's house. Right now she was inside, alone and disappointed, while we were meters away, going at it like animals where any late night passerby could see us.\n\nAnd what a sight they'd see. Full thighs pumping, Sadie bounced hard on my cock, and her H-cup tits bounced, too, glorious with their weight and swaying softness, my fondling fingers only adding to their jiggle. The wet sounds of her hot pussy swallowing my aching shaft filled the cramped interior of the car, joining Sadie's gasping moans when she wasn't sucking on my tongue.\n\n\"Fuck yeah, oh, fuck yeah...\" Sadie's hands went up and into her hair as she lifted herself until only the head of my cock was trapped in the wet embrace of her cunt before dropping back down again to plunge my entire length inside her to the balls, over and over.\n\n\"Shit, Sadie\u2014\" I groaned, staring up in awe at her ungodly curves on top of me. \"I love... your fucking body...\"\n\nHer eyes lit up and she bit her lip. \"It's all... fucking yours, babe... fucking forget what I said... you can have me whenever you want...\"\n\nMy heart leapt into my chest. \"Oh Christ...\" My fingers clamped onto her hips and I pistoned up into her as fast I could, lifting her up on my hips.\n\n\"Ohhhhh, fuck yes, AJ, aannnh!\" Sadie's lips parted in a high, breathless cry, a perfect, incredible moment as we worked in concert, driving my cock into her while she rode me so vigorously that she smacked her head on the ceiling of the car.\n\n\"Fuck, ow--\"\n\n\"Oh, shit\u2014\"\n\nWe said at the same time, and she fell forward onto me, both of us laughing breathlessly as Sadie rubbed her head.\n\n\"I was gonna fucking come, too...\" she grumbled.\n\nHolding her on top of me with my cock still buried inside her, a flicker of movement down the street caught my eye. There was someone walking their dog coming up the sidewalk. \"Shit, there's someone coming.\"\n\n\"God damn it, why does this always happen to us?\" Sadie groaned, climbing off my cock and zipping up her hoodie enough to cover her.\n\n\"Probably 'cause we never have sex inside...\" I hurriedly tucked myself back into my jeans. \"My parents aren't home, let's just go to my house.\"\n\n\"Okay...\" Sadie pouted with mock disappointment, reaching down for her leggings on the floor. \"My pussy is fully out, so you better drive.\"\n\n\"Fair.\" We switched places, me climbing awkwardly into the driver's seat, grabbing Sadie's keys, as she ducked down to pull on her leggings, hidden from view until the dogwalker passed.\n\nI pulled away from the curb and turned back up the street, the two of us breaking into nervous giggles at nearly being caught by some old lady and her Shih Tzu. With us both still flushed, sweaty and worked up, it wasn't long before Sadie's hand was creeping into my lap, unzipping my only recently done up jeans.\n\n\"Jesus Christ, Sadie...\" I muttered as she pulled out my cock, her fist sliding up and down my shaft, still slick with her arousal, trying to keep my attention on the road. I'd only just got my license last fall, and I wasn't the biggest fan of driving to begin with. \"This is not safe...\"\n\n\"Calm down, there's barely anyone on the road...\" Sadie smirked, glancing over at my firm erection. \"It's good practice, anyway.\" She reached into her hoodie, toying idly with her nipple. When I glanced over, she chided me. \"Eyes on the road...\"\n\nPlanting both hands on the steering wheel, I gritted my teeth and tried hard to ignore her, which was difficult when she was jacking me off from the passenger seat. As I turned onto the long, curving crescent along the river that would take us back to my house, I saw Sadie putting her hair back into its loose ponytail out of the corner of my eye. Then I heard her seatbelt pop and she leaned all the way over.\n\n\"Sadie, Sadie, Sadie... fuck...\" My panicked whispers gave way to a groan as I felt her lips slip over the head of my cock, engulfing me in the wet warmth of her mouth.\n\n\"Just drive...\" She said innocently, voice muffled around my shaft. Then her head started to bob in my lap, just in front of the steering wheel, her hand stroking in concert with her lips and tongue to suck my cock with an eager, steady enthusiasm.\n\n\"Oh, god...\" I grimaced, fingers white-knuckling on the wheel. I tried to steady my breathing, keeping my foot firmly on the accelerator at an easy 50, even though most people took this long, open road at 60 or more. At least I could add road head to my list of firsts. It was just as thrilling and nerve-wracking as I'd ever imagined.\n\nSadie's breasts pillowed against my jean-clad thighs as she hungrily gulped down my shaft, tempting me into taking a hand off the wheel to squeeze her tits, trying to stave off the dizzying distraction of her tight, massaging lips, her sloppy, swirling tongue.\n\n\"Ugh... god damn it...\" As I felt my cockhead hit the back of her throat and keep going, my fingers wrapped involuntarily around her ponytail. I risked a glance down and instantly regretted it at the sight of Sadie's mischievous eyes staring up at me, the sucking seal of her lips planted around the base of my dick, every inch of my cock buried in her throat.\n\n\"Fuck it...\" I ground out and spun the wheel, taking a turn off that led to the parking lot for a nearby park. Earlier, the lot would have been filled with cars for kids' soccer games and outdoor barbecues, but now it was completely empty.\n\nI had to pull into a spot one-handed, because my free hand was pulling Sadie up by her ponytail and then pushed her down again, letting her choke a little on my girth as my cock fucked into her throat. I turned off the car, my eyes drawn to Sadie's ass, lifted in the air as she bent over my lap.\n\n\"Stay there\u2014\" I muttered, pulling her off my cock with a gasp and a wet slurp, before shoving open the driver's side door. I got out and walked around the front of the car, opening the passenger side to see Sadie waiting for me, still on all fours.\n\nFeeling an almost predatory rush of heat through me, I reached down and one of my hands went to the back of her neck, pushing her face down. Her breasts squashed beneath her on the upholstery, ass thrusting out even higher.\n\n\"Mm\u2014\" Sadie squeaked, panting, cheek pressed into the seat. \"Did I make you mad again... Oops,\" She asked with a breathless, excited grin.\n\n\"Maybe a little\u2014\" I yanked her leggings down, exposing her big peach of an ass, her pussy smeared with arousal.\n\n\"Show me...\" She licked her lips. I wrapped my arms around her thighs and buried my face between her thighs, tongue parting her slick folds to taste her burning cunt.\n\n\"Hahh\u2014who the fuck are you, oh my GOD--\" Sadie squealed with delight, pushing her ass back to engulf me in the enveloping press of her full cheeks as I worked my tongue as deep into her as I could, utterly lost in the sweet taste of her pussy, the feel of her tender, wet flesh under my hungry mouth.\n\n\"Mhmm... ughh... fuuuck...\" Sadie's high, quavering sighs floated out into the night through the open passenger side door as she squirmed beneath me, submitting her pussy to the vigorous tongue-fucking, offering herself up to me. My hands were clamped onto her ass cheeks, but one of them dropped to her clit, rubbing the way I knew Bridget liked it, hoping Sadie was the same.\n\nIt turned out she was. Sadie's moans went into overdrive and her hips circled, grinding her cunt on my mouth. \"Yes, yess, eat my fucking pussy... That's so fucking gooood!\" The continued tone of surprise in her lust-filled voice made me thank God for my lessons with Bridget. \"God, you can do whatever the fuck you want to me...\" It came out as a choked moan, as Sadie reached back, sinking her fingers into her own soft ass-cheek to spread herself open to me.\n\nBreath shuddering, I saw Sadie's tight, pink rear entrance, basically down the tip of my nose. I suddenly remembered Sadie in Mexico, screaming along to one fairly ridiculous lyric of a song she liked\u2014\"He gotta eat the booty like groceries...\" \n\nWith one long lick, I dragged my tongue up the cleft of her ass, over her pussy to press wetly against her tightest hole. It didn't taste so different from any other part of her body, with just the hint of an intoxicating, musky naturalness.\n\nSadie gasped. \"Oh, FUCK yeah, eat my ass, AJ! When did you... become such a freak...\" As I bathed her asshole with wild, messy licks, my fingers fucked hard into her pussy, rocking her against the seat. \"Unhh... yes, yes, yes, fuck, I want it...\" She whined. \"Hurry, I want your cock again...\" She groped back blindly for me but I stayed where I was.\n\n\"I want to make you come...\" I grunted into her.\n\n\"I want to come on your cock...\" Sadie hissed.\n\n\"Fuck...\" I groaned, staggering to my feet. Keeping two fingers glued to her clit, I pressed my cockhead to her flushed folds and pushed back inside her. She was so wet that I was balls deep in her pussy with a single hard shove, despite her clasping walls gripping at my girth.\n\nAs my aching length disappeared inside her, Sadie looked back at me, eyebrows lifting, mouth dropping open, thighs tensing. \"Oh... I'm gonna--fuck, AJ,I'm coming--\" She gasped, fingers wrapping around my wrist.\n\n\"Already?\" I blurted, eyes widening, but I kept working her clit as I felt her cunt clench around me.\n\n\"Yes!\" Sadie cried, half-indignant, half-ecstatic, as she shoved her ass back, grinding herself on my cock, shoulders hunching, back arching as quivering ripples ran through her. \"Unhhh... Oh, fuuuck...\"\n\nSeeing the chance for a little payback, I took hold of her wide hips, planted my feet on the concrete as I stood beside the car, and started to fuck her with steady, punishing strokes of my cock.\n\nThe response was immediate. \"Ohmygod AJ, oh my GOD\u2014anhh, aanh, aaaanh!\" Caught in the midst of her orgasm, Sadie went nuts at the overload of sensation, her whole body stiffening as she shuddered violently, eyes wide as they met mine, words devolving into incoherent cries so loud I thought Gigi might be able to hear them from her bedroom window.\n\nBut I didn't slow, forcing Sadie to ride out the rest of her orgasm with my hips clapping against her round ass, my cock pounding into her before she could so much as catch her breath. When the shaking finally subsided and her pussy stopped seizing around my shaft, she was limp, still moaning hoarsely as she submissively took every punching stroke, though I had to hold her up by the hips to stop her from collapsing completely.\n\n\"Holyyy fuck...\" She slurred, eyelids fluttering, chest heaving.\n\n\"Need a sec?\" I asked, breathing hard, unable to contain my smugness.\n\n\"Shut up...\" Sadie groaned, rocked forward with the force of my thrusts even as I slowed, just enough to let her speak. \"No fair... How are you so...\" She bit her lip. \"Who taught you... how to f-fuck... like this...\"\n\n\"Mostly you,\" I bit out, giving her a firm smack on the ass.\n\nShe jumped with a small gasp, but it seemed to energize her, and she slowly dragged herself up onto her hands and knees, blowing a strand of hair out of her eyes. \"Fucking l-liar\u2014God---who else... have you been fucking?\"\n\n\"Guess.\" I bent down to grab an overflowing handful of her tit, running my other hand up her back.\n\nSadie let out a frustrated huff, in time with my constant pumping of her wet cunt. \"Fuck you... Paige?\"\n\nI snorted. \"No. Guess again.\" I gave her another slap, rippling her other thick cheek, making her squirm.\n\n\"Mmm... God, Reagan, fucking Dylan, I don't fucking know...\" she whined. \"Tell meee...\"\n\nDylan? That threw me for a second. Maybe the spanking had just reminded her of that game of truth or dare.\n\nBecause I felt myself getting close, I pulled out of her, sliding my dripping cock into the valley of her ass, feeling the press of her cheeks on my shaft. \"...What do I get if I tell you?\" I asked, panting.\n\nSadie looked over her shoulder at me, biting her lip. \"I'll let you come inside me...\"\n\nMy stomach clenched, throat going dry. \"Seriously? Is that--\"\n\nShe nodded. \"I have an IUD...\"\n\n\"Right...\" I'd heard about it when she'd got it, but I'd never expected to personally benefit. \"I fucked Mackenzie Taylor twice,\" I blurted. \"She was my first.\"\n\n\"What the fuck?\" Sadie's jaw dropped. \"You're bull-shitting me\u2014\"\n\n\"\u2014No, seriously. Prom night, then on the way home from Grad Trip.\"\n\n\"On the way home\u2014like on the PLANE?\" She gaped.\n\nI nodded, grimacing. \"In the bathroom\u2014\"\n\n\"Mackenzie Taylor let you fuck her in an airplane bathroom?\" Sadie was so shocked by all of this, that she rolled over to face me, and I was suddenly struck with worry that this news had changed things somehow.\n\n\"I know. It's crazy, she's kind of a fucking weirdo honestly, but it's nothing. Just a fluke, basically...\" I said quickly. \"So, you know. It's nothing.\"\n\n\"AJ, she was the most popular girl in school. She was fucking pom captain. It's not nothing.\" Sadie shook her head in disbelief, quiet for a long moment. \"You're so fucking hot, what the fuck... backseat, now.\"\n\nI breathed an audible sigh of relief and hurriedly closed the passenger door, heading for the back. When I got in, Sadie had already squeezed between the front seats and was folding the back ones down, so there was a relatively flat, open space to lie down.\n\nI grabbed a blanket from her trunk and spread it out, and we climbed on together. Pulling me on top of her, Sadie kissed me hard, shedding her unzipped hoodie, and suddenly she was completely naked in the back of her own car, her voluptuous figure dappled by shadows, only dimly lit by the nearest streetlight, a way's off.\n\n\"Seriously, you're so hot...\" I muttered, but Sadie impatiently pulled my t-shirt over my head.\n\n\"Fuck me, AJ...\" She murmured, spreading her legs, panting, reaching for my cock. \"You can compliment me as much as you want when you're coming inside me...\"\n\n\"Oh, god\u2014\" I whispered as her fingers wrapped firmly around me, guiding me back inside her perfect cunt.\n\nShe didn't have to do much from there. As the heat and silky wetness of Sadie's cunt enveloped me once again, all I could do was grit my teeth and thrust, splaying my hands on her thick, spread thighs, holding her in place for my bucking cock. With my help, her legs folded back farther than I would have thought they could, her huge, creamy tits swaying, roiling, like a tidal wave every time I buried myself inside her.\n\nFucking Sadie from behind was a roller coaster ride, the hottest, porniest jerk-off fantasy come to life. Fucking her like this, with her golden hair fanned out around her head, her soft, naked body open beneath me, one hand wrapped around my forearm and the other palming her own heavy breast, her eyes bright and heavy-lidded, lips parted in shuddering, cooing moans.... it was like the best dream you've ever had, the kind where you woke up, and wished to be back asleep.\n\n\"...You feel so good,\" I whispered, leaning down to kiss and suckle at her rocking breasts, plunging deeper inside the velvet warmth of her pussy, as wet and sucking and wonderful as her mouth around my painfully hard cock.\n\nShe smiled, breath hitching. \"Mhmm...You're so big, AJ... So deep in my pussy...\" She cooed, needily tilting her hips up to grind on my thrusts. \"Faster, babe... faster...\"\n\nWords spurring me on, I dropped my hips, pumping faster between her thighs, propping myself up on my elbows so my flushed face was inches from hers. I could hear the crickets outside and the wind against the windows as her nails dug into my back and her full thighs squeezed around me, her high, hitching moans in my ear as I buried my face in her neck. \"Unhh... unh... unh... fuck me, baby... give it to me... unhh... fuck me, fuck me...\"\n\nMy churning cock grew audibly slippery, sloppy as it plowed Sadie's sopping pussy. I grabbed a handful of one massive tit and squeezed, capturing her hot mouth in a searing kiss, desperate to experience all of her before the end. Her arms looped around my back, clinging to me, her bare, pointed feet pressing against the small of my back to encourage my driving hips.\n\n\"Mm, mm,, mm... Shit, you're gonna make me come again...\" Sadie moaned against my lips. \"I want you to come for me... I want to feel it inside me... fill my tight little pussy with your load, baby, come on... come with me\u2014Unhhhh!\"\n\nWith Sadie's orgasmic cry reverberating through the car, her pussy squeezing like a fist around my cock, and her legs wrapped tightly around me, holding me in place, there was no way I could do anything else. \"Fuck... gonna come inside you...\" With a choked moan, I felt my balls tighten and with a final deep thrust inside her, my shaft throbbed against her tight walls like the frantic beating of my heart.\n\n\"Yes, give me your cum, oh my god, YES\u2014\"Sadie's watering eyes widened, still shivering through her own orgasm, as I exploded inside her, my first load spurting into the warm, hungrily clinging embrace of her cunt. Her nails hooked into my shoulder blades, breasts shuddering as she arched off the blanket. \"Fuck yes, fill me up, AJ, please, fill my pussy up with your fucking cum!\"\n\nWe writhed and squirmed against each other, sweaty skin on sweaty skin as orgasm washed over us both. My cock, teased since she'd first ridden me outside Gigi's house, unleashed what felt like torrents of cum into Sadie's pulsing, gushing pussy, emptying myself inside her until it was spilling out around my cock.\n\nWe lay there, limp and panting, tangled up with each other in the back of the car for what felt like an eternity, her arms wrapped around me, my head resting on her chest.",
        "\"I meant it, you know...\" She said, breaking the silence. \"I don't... want to like, date, but... we can fuck whenever you want.\" My face split into a smile as I hauled myself off and lay down beside her. \"That's all I want. Did you think I had a crush on you?\"\n\nSadie looked mock-offended. \"You don't?\"\n\nI shook my head. \"No. You're just one of my best friends, I love hanging out with you and... I think you're super fucking hot and I want to fuck your brains out all the time. That's it.\"\n\n\"Aww... I love hanging out with you too.\" She cuddled up to me. \"And unexpectedly, I think you're hot as fuck, too. And you're really good at making me cum.\" She sat up. \"Did Mackenzie teach you how to eat pussy like that, too?\"\n\n\"No,\" I said. \"Bridget did.\"\n\n\"WHAT?\" Sadie squawked, but before she could go on, I pulled her towards me and kissed her, muffling her questions with my tongue in her mouth.\n\nShe smacked me on the shoulder, half-heartedly pulling away, still trying to talk, but soon her tongue was pushing back against mine and we were making out like we were the only people in the world, just like two teenagers in the back seat of a car should."
    ],
    "authorname": "starcall",
    "tags": [
        "18-year-old",
        "cheerleader",
        "high school",
        "latina",
        "lesbian",
        "masturbation",
        "nerd",
        "photos",
        "sexting",
        "texting"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-catch-up-ch-05"
}