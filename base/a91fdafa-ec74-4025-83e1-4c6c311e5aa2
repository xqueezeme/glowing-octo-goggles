{
    "title": "Audrey's Awakening Pt. 06",
    "pages": [
        "We quickly showered and dressed, and I loved the look of my new burgundy blazer. I sat comfortably on a padded stool in the bathroom watching with interest as Audrey attended to her hair and makeup. She looked ravishing in her sexy new dress, and I loved it to see how its transparencies revealed she wore absolutely nothing beneath it.\n\nTo my complete surprise, as we were about to leave the room, Audrey opened one of her many shopping bags to pull out a pretty black lace shawl that I had not seen her purchase. She draped it over her shoulders, flipping one end over her shoulder stylishly and smiled. \"I believe I'm finally ready,\" she said. \"I hope it was worth the wait.\"\n\nI smiled and stepped close to kiss her lips ever so lightly, \"You look amazing,\" I said, slipping my hand behind her to caress her buttocks. With the shawl about her shoulders to cover her chest and lower back, it gave the dress a much more conservative look with only a subtle hint of the sexiness lying beneath it.\n\nWe took a taxi to the Stratosphere and, despite my penchant for severe acrophobia, boarded the elevator for the long trip to the restaurant at the top, over 800 feet above the ground.\n\nStepping onto the landing, we were stunned by the broad, panoramic view of the glitzy neon that was Las Vegas. Every table in the restaurant had a stunning view of the city below and the restaurant rotated 360 degrees approximately every 90 minutes.\n\nAs the hostess led us to our table, I could hear the distinct sounds of live music emanating from somewhere in the dining room. Turning my head to look for the source of the music, I saw a small stage off to one side where a two-piece combo was providing a nice low-keyed dining ambiance. \n\nTo my complete shock, I recognized the two-piece duo, they were friends of mine named Danny and Jo. As we followed our hostess through the dining room to our assigned table, Jo was the first to take notice. Her eyes widened and she smiled, pointing at me with her mouth opened wide. I waved to them as we stepped down into the dining area out of sight of the stage and were seated at our table.\n\n\"I know the band,\" I smiled, as Audrey gaped in pleased astonishment at the incredible view of the city.\n\n\"Really?\" She said, her face almost radiant with excitement. \"They sound awfully good.\"\n\n\"They're friends of mine,\" I explained. \"Danny and Jo. We've shared the same stage many times. Jo saw me when we walked in and she waved, so they'll probably come over to say hello when they take a break and you'll get to meet them.\"\n\nWe both stood and turned our heads away from the spectacular view to where we could just barely see the stage across the room where Jo was doing one of her signature Toni Braxton songs and vamping across the stage exuding her sexuality with her body and the suggestive lyrics. She wore a tiny, blue-sequined mini-dress that showed off her shapely legs to perfection as her husky voice oozed with sensuality.\n\nJo was a petite woman of Asian descent; I believe she once told me her mother was Japanese and her father was white. The combination of those two races combined to create a daughter of extraordinary beauty. She had a creamy white complexion with dark almond eyes that hinted to her Asian heritage, and long black hair that cascaded to her shoulders with straight bangs. She had a lovely figure and a petite frame, as she was little more than five feet tall without her six-inch heels. Her breasts were small, probably little more than an 'A' cup, and wide, flaring hips that I always found to be particularly attractive, especially when combined with the ubiquitous skirts and dresses that she always wore on stage. Her legs were exceptional, and probably her most noticeable feature as she was never shy about showing them off, strutting around the stage very much like Tina Turner.\n\n\"Wow,\" said Audrey, \"she's amazing. What I wouldn't give to have legs like hers.\"\n\n\"Shut up!\" I chided, reaching over to put my hand on her arm. \"Your legs are gorgeous, Mom.\"\n\nThe waiter arrived and we ordered a bottle of wine. He returned several moments later, opening the bottle and pouring the wine with a flourish. Audrey and I toasted and sipped our wine. \"This is so beautiful up here,\" said Audrey. \"I'm really glad we came.\"\n\nI nodded in assent but felt distinctly insecure being so high above the ground. While Audrey was constantly oohing and aahing at the panoramic view of the city and pointing out landmark casinos, I was only nodding and doing my best not to run screaming back to the elevators. \n\nThe wine steward was soon followed by our waiter who took our dinner orders. Audrey and I both ordered the filet with baked potato, Caesar salad, and cherries jubilee for dessert.\n\nWe chatted amiably for several minutes, taking in the view and, for my part, enjoying the ambiance of the dining room when I looked up to see Danny and Jo smiling broadly as they approached the table. I returned their smile and stood as Jo hurried toward the table, taking quick little running steps in her high stiletto heels. She almost knocked me over as she threw herself into my arms, embracing me tightly with her arms around my neck and kissing my cheek affectionately.\n\n\"So good to see you, Jessie,\" she smiled, pulling away to make way for Danny, who also pulled me into an affectionate bro hug. \"Are you guys playing in town?\" He asked.\n\nI shook my head and smiled at them, \"No,\" I said, nodding quickly toward Audrey, \"Actually, we're just here for a little bit of a weekend getaway from home.\"\n\nAudrey stood and held her hand out to Jo, \"Hello,\" she said, beating me to the introductions, \"I'm Audrey.\"\n\nJo shook her hand with a look of mild confusion and gave me a sidelong glance. \"I thought you told me your wife's name was Laura,\" she said.\n\n\"Oh,\" said Audrey with a laugh, \"That's correct. Laura is my daughter and Jessie is my son-in-law.\"\n\nJo's eyes widened and she took a step back to give Audrey a more appraising look, moving her eyes from the top of her head to her spiked heels. \"You're Jessie's mother-in-law?\" She said with mild astonishment as her eyes moved appraisingly over Audrey's body.\n\n\"Wow,\" said Danny with a broad grin, \"You sure look nothing like MY mother-in-law.\"\n\n\"Please, join us,\" smiled Audrey as we all laughed at Danny's comment.\n\n\"I can't stay,\" said Danny, who remained standing as the rest of us sat down. \"My wife's here with me tonight and it's our wedding anniversary. I just wanted to come over and say hello though.\"\n\n\"How wonderful,\" smiled Audrey. \"How many years have you been married?\"\n\n\"It's our fifth,\" smiled Danny. He paused reflectively and pursed his lips, \"You know...I'm almost beginning to think this marriage is going to work out.\"\n\nWe all laughed at his little joke and Jo rolled her eyes, \"He's been saying that all night,\" she said, \"and it's starting to get a little annoying.\"\n\nDanny smiled and tapped his watch, looking down at Jo, \"Ten minutes,\" he said, indicating the remaining break time they had left. He waved his fingers at us and smiled as he moved away from the table.\n\n\"So, tell me what's going on,\" smiled Jo, looking back and forth between me and Audrey. \"Is Laura with you here in Vegas too?\" She watched with interest as Audrey and I glanced meaningfully at one another.\n\n\"No,\" I said, trying to act casual. \"Unfortunately, Laura couldn't make the trip with us.\"\n\n\"Oh?\" Said Jo, raising an eyebrow at me with a look of suspicion.\n\n\"I was actually supposed to make this trip with my husband as his birthday present to me,\" Audrey explained, leaning her head toward Jo. \"But when...\" she glanced meaningfully at me, \"he had to cancel at the last minute, Jessie was kind enough to bring me here instead.\"\n\nJo's eyes widened and she looked at each of us with a knowing smile. \"Well, it certainly seems like there's a lot more to this story than meets the eye,\" she said. \"You'll have to forgive me, but when we first came over to your table, It certainly appeared as if you two are having a rather romantic evening together.\"\n\nAudrey laughed, her cheeks flushing, \"You're right, there IS a lot more to this story.\" She glanced up at me and I nodded, encouraging her to continue. \"But it's likely to take longer than your break time to explain,\" she said. \"Why don't you come back when you've finished playing and join us for a drink or two...or seven,\" she added with a laugh.\n\nSmiling gleefully, Jo rubbed her hand together excitedly, \"Seven? Oh, boy, this sounds like the makings of a fun evening and a great story. We only have one more set, and then I'll definitely be back to spend more time with you guys when we're done.\"\n\nJust then the waiter arrived with our dinner, holding a large tray over his head as he weaved through the tables. \"Ah,\" said Jo as she quickly stood. \"I believe this is my cue to exit.\"\n\nShe turned to me and bent down, kissing me affectionately on my cheek, \"It's really good to see you again, Jessie,\" she said, looking meaningfully into my eyes. \"And wonderful to meet you too, Audrey,\" she added, turning to smile at Audrey. \n\n\"Enjoy your dinners, I'll see you in a while.\"\n\nWe both watched Jo as she walked away, \"My God, she's got gorgeous legs,\" murmured Audrey, mirroring my exact thoughts. \"I like your friends, Jessie, especially Jo. She seems really sweet.\"\n\nThe waiter placed our dinners on the table and made sure we needed nothing else before hustling off to his other tables.\n\n\"Jo is definitely a sweet girl,\" I said as we began to eat. \"But you should probably be aware of the fact that, when it comes to expressing her sexuality, Jo is not all that gender-specific.\"\n\nAudrey cocked her head in curiosity, \"What are you saying? You mean she's a Lesbian?\"\n\nI shook my head, \"No, not Lesbian, but she IS openly bisexual. She enjoys women every bit as much as she enjoys men.\"\n\nAudrey's eyes widened and she nodded, \"Wow, that's intriguing. I don't think I've ever met a woman like that before.\"\n\nI nodded, \"The last time my band shared the stage with Jo and Danny...I guess it was at least three months ago...She was involved with another musician, a woman named Donna. I've heard they've since broken up. And before that, I know she's had a few boyfriends. Wherever Jo and Danny play, the bar in front of the stage is always full of potential Romeos hoping she'll notice them.\"\n\nAudrey laughed and nodded, chewing her food thoughtfully, \"Well, that's certainly understandable,\" she said. \"I think she's gorgeous.\"\n\nWe ate in silence for a few moments. \"I couldn't help but notice how Jo certainly seems to be very attracted to you,\" smiled Audrey as she took a sip of her wine. \"Weren't you ever tempted?\"\n\n\"Tempted? Are you kidding?\" I said with a laugh. \"Of course, she's one sexy woman, and I'm a card-carrying member of the male persuasion. How could I not be tempted? She's also made it abundantly clear, on more than one occasion, how she'd like to get to know me better. And when I say 'know', I mean it in the biblical sense.\"\n\nAudrey laughed aloud, \"But you never came to KNOW her in the biblical sense?\" She asked with a teasing smile.\n\nI shook my head and laughed softly, \"I suppose I was too busy being true blue and loyal to Laura to ever get involved with a woman like Jo.\"\n\nAudrey frowned and shook her head, \"Given the separated circumstances you find yourself in now, are you at all sorry about it?\"\n\nI shrugged, \"Yeah, well...hindsight being 20/20 and all, I suppose maybe I am a little.\"\n\n\"From my perspective,\" said Audrey, reaching over the table to place her hand over mine. \"I think you and Jo would make a VERY cute couple...especially with the two of you having music in common.\"\n\nI smiled and squeezed Audrey's hand, \"Well, right now, at this moment, the only couple I'm interested in is this one right here at the table.\"\n\nAudrey flushed and squeezed my hand. We then both looked up in surprise to see Danny and Jo both hurrying back to our table. Audrey's eyes widened in surprise as Danny suddenly stepped up and squatted down at the end of the table with Jo standing behind him with a hesitant smile.\n\n\"Jessie, I have a HUGE favor to ask of you,\" said Danny, his eyes imploring.\n\n\"Sure, man. What do you need?\" I responded, eager to help him out if I could.\n\n\"Would you be willing to sit in with Jo tonight and sing 'Unchained Melody' for me so I can have an anniversary dance with my wife? It's always been our song. I was going to dedicate it to her when I sang it tonight, but hell, man, you sing it WAY better than I do.\"\n\nI glanced questioningly at Audrey, who smiled broadly and nodded her head enthusiastically. \"Sure, Danny,\" I said with a smile. \"I'd be happy to.\" I glanced up at Jo, \"What key do you guys do it in?\"\n\n\"G,\" she said nodding. \"The same as you. And we even do the same arrangement.\"\n\n\"Perfect,\" I said. \"When do you want it to happen?\"\n\nDanny nodded, noticing our still unfinished meals, \"Not for a while yet, you guys take your time and finish your dinners. Our last set is an hour long so...maybe in half an hour or so? Will that give you enough time?\"\n\nI nodded, seeing that Audrey and I were both near completion. \"You got it, man,\" I smiled. \"Just give me the high sign when you're ready.\"\n\n\"You're the best, Jessie,\" said Danny with a broad grin, patting my on my back as he stood. \"I'll owe you big time.\"\n\nWe enjoyed the rest of our dinners, chatting amiably, and enjoying the revolving panorama of Las Vegas. I discovered it was easier for me, and greatly lessened the vertigo, if I just looked straight out at the city and not down. The waiter was just arriving with our desserts when Danny appeared and waved to me, letting me know the moment had arrived. I nodded, telling the waiter to put off the desert for at least ten or fifteen more minutes.\n\n\"Well,\" I smiled at Audrey, giving her the jazz hands wave. \"I guess it's showtime.\"\n\nAudrey shrugged out of her shawl, leaving it on her chair, and we walked hand in hand toward the stage as Jo was announcing a special guest. \"This is SO exciting,\" smiled Audrey, her eyes twinkling merrily. \"I've never heard you sing.\"\n\n\"So please,\" announced Jo with a smile, \"welcome to the stage...our good friend, Jessie West.\"\n\nI stepped onto the stage with a smile and strapped on Danny's guitar, adjusting the volume and finding my note. When I was ready, Jo nodded and began the sequence with a four-count click intro.\n\nAs I began to sing, several couples hurried to the dance floor along with Danny and his wife. Audrey stood just to the side looking up at me with a blissful smile on her face.\n\nI did a pretty good job of the song if I do say so, and very much enjoyed the warm tone of their PA system with its echo and chorus. As the string section reached its crescendo and the song ended, Jo's pre-programmed keyboard sequencer started right into the next number, one I immediately recognized as 'Oye, Como Va', by Santana.\n\nI was in the process of removing Danny's guitar as Jo smiled broadly and wiggled her eyebrows. I glanced down at Danny who was nodding enthusiastically. Oh, what the hell, I thought. In for a penny, in for a pound. At least I knew the song very well, my band did the number every night.\n\nJo strapped on her bass guitar as I began to play, and we smiled at one another. Someone pulled Audrey onto the dancefloor and I smiled to watch her gorgeous, broad hips moving to the beat of the music, her breasts swaying enticingly beneath the darkened strip of material that threatened to reveal her nipples with each sway of her breasts.\n\nI glanced at Jo who was wide-eyed and seemingly transfixed by Audrey's d\u00e9colletage. She looked over at me and mouthed the word 'wow'.\n\n\"Want to do one more?\" Asked Jo with a hopeful smile as the song ended. \"I love listening to you play.\"\n\nI shook my head as I slipped off Danny's guitar and set it on its stand. \"I'd love to, but we've got dessert waiting at our table.\"\n\nDanny hugged me affectionately as he stepped onto the stage, while Jo encouraged the people on the dance floor to applaud even more as I made my exit. Danny introduced me to his wife, who also gave me a hug of appreciation.\n\nAudrey took my arm and smiled all the way back to our table. \"You. Were. Wonderful,\" she exclaimed almost breathlessly. \"What a lovely voice you have. And you play guitar exceptionally well too.\"\n\nI smiled, basking in her effusive praise, as we seated ourselves to enjoy our desserts and another glass of wine.\n\nSeveral minutes later, as the entertainment ended for the night, Danny and Jo arrived at our table with Danny's wife in tow. Introductions were made and our waiter brought another chair for everyone to be seated. We ordered drinks and soon we were all laughing and joking while reminiscing about our previous encounters and with other bands we knew, swapping gossip.\n\nDanny and his wife, Monica, made their exit, claiming they were both tired, and then there was just the three of us at the table.\n\nJo leaned close and whispered conspiratorially as Danny and Monica left the table, \"Tired, hell,\" she said, raising one eyebrow. \"They haven't seen each other in two weeks and can't wait to fuck each other's brains out.\"\n\nAudrey's eyes widened and Jo suddenly gasped, placing her hand on Audrey's arm, \"Oh, sorry,\" she said. \"I hope I didn't offend you just now.\"\n\nAudrey smiled and placed her hand on top of Jo's, \"Not even a little bit,\" she said. \"I've never been offended by the word 'brains.\"\n\nJo laughed aloud and gave me a wink. I watched as Jo and Audrey shared a rather poignant look as they both smiled at one another. I couldn't help but smile as well, knowing Jo as well as I did, I could see was distinctly flirting with Audrey, and it certainly seemed as though Audrey was enjoying the inherent intimacy that was happening between them.\n\n\"Is this one of those Versace dresses, that I've seen in the window of their store?\" Asked Jo, leaning back to view more of Audrey's dress.\n\n\"It IS,\" beamed Audrey, who seemed exceptionally pleased that Jo had noticed. \"As a matter of fact, I just bought it this afternoon.\" She leaned closer to Jo, \"I hope it's not too risqu\u00e9 for this dining room,\" she confided. \"I noticed a fair amount of disapproving looks from some of the women tonight when I was on the dancefloor.\"\n\nJo laughed, \"They're probably just jealous and wishing they could look even half as good as you do in that dress. Hell, I wish I could look half as good as you do.\"\n\n\"You, my dear,\" smiled Audrey, reaching over to pat Jo's hand, \"would look absolutely gorgeous in this dress.\"\n\n\"Oh, I've been SO sorely tempted every time I walk by the Versace shop,\" said Jo with a winsome smile. \"But, everything in the store is WAY beyond my means.\"\n\nAudrey smiled and nodded with a thoughtful look. A moment later, she excused herself to go to the ladies' room, and, as she walked away, Jo gazed at her with a distinct look of admiration, \"Holy shit, Jessie, that is one sexy woman,\" she muttered softly.\n\nI laughed aloud and Jo turned to me with a curious look, \"Sorry,\" I said with a dismissive wave of my hand, \"but she said almost the exact same thing about you the last time she watched YOU walk away from the table.\"\n\nJo's eyes widened and she smiled, \"Seriously? Does her door swing both ways?\"\n\nI shook my head and shrugged, \"I've never known her to attracted to other women sexually. Until this weekend, she's always been the quintessential wife and mother and devoted to her family.\"\n\n\"And...this weekend?\" Jo urged, seeing the thoughtful look on my face.\n\nI shrugged and took a deep breath, \"Well, this weekend I've kind of encouraged her to let her hair down a little, put aside her conservative values, and open herself up to explore more of her sexy side.\"\n\n\"Wow, well it certainly seems to be working for her,\" said Jo with a broad smile. \"She's a major femme fatale in that dress, and she certainly seems to be enjoying the attention she's getting too.\"",
        "\"Believe me, Jo,\" I responded with a smile. \"What happens in Vegas, stays in Vegas. Audrey would never in a million years dress at home the way she's dressed here tonight.\"\n\nJo put her elbows on the table and leaned close to me, \"I'm absolutely dying to know more about what's REALLY going on between you and your mother in law, Jessie. Are you fucking her?\"\n\nI laughed aloud, it was just so typical of Jo to just blurt out her thoughts and feelings without any kind of social filter. \"Listen, Jo,\" I said, leaning closer and keeping my voice low as I mentally framed exactly how I might tactfully answer her question. \"As a gentleman, all I'm ever going to say about it is that your previous assumption that Audrey and I seemed to be having a romantic evening...would be a correct assumption.\"\n\n\"I knew it,\" she said with a broad grin, smacking her palm onto the table for emphasis. \"You ARE fucking her. You know...I could pretty much tell just by the way you two look at each other. So, how did all this happen?\"\n\n\"Listen,\" I said, leaning close again. \"If she's willing to open up and talk about our relationship, I'll let her be the one to do so.\"\n\nJo nodded with a smile, \"I certainly respect your chivalrous, gentlemanly attitude toward her, I think she's a lucky woman.\"\n\nI laughed and smiled at the compliment \n\nAudrey returned and Jo excused herself to use the washroom as well. She watched Jo walk away and then turned to me with a smile. \"Listen, Jessie,\" she said. \"I can tell you and Jo are really attracted to one another. And I certainly don't blame you one bit, she gorgeous. I just want you to know that...well, if you thought you might want to act upon that attraction while we're here in Las Vegas...I would certainly understand.\"\n\n\"Hey, Woah,\" I interjected, sitting up straight and reaching over to take her hand in mine. \"Believe me there is no-one I would rather be with right now than you.\"\n\nAudrey smiled, pressing her lips together tightly, \"Thank you,\" she said.\n\n\"I have to tell you though,\" I said, squeezing her hand affectionately. \"Jo was more than a little curious about YOUR sexuality. She seems to sense that you've been flirting with her a little bit.\"\n\nAudrey's cheeks flushed and she looked toward the restroom area as if to make sure Jo was not returning before speaking. \"I think maybe I was a little bit,\" she said, leaning forward with a whisper. \"And I have to say, after you told me about her being attracted to other women, its kind of excited me to be a little flirty with such a sexy woman.\"\n\nI laughed softly, \"Then, let me throw your own words back at you. If you feel at all inclined to act upon any attraction you feel for Jo, I will definitely understand.\"\n\nAudrey blushed deeper, \"Whew, what an intriguing thought,\" she said, comically fanning her face with her fingers. \"I doubt I would ever, as you say, act upon that particular fantasy, but it sure is kind of fun and exciting to contemplate.\"\n\nAt that rather auspicious moment, Jo returned, \"I should probably get going and let you two enjoy the rest of your evening,\" she said as she resumed her seat beside Audrey. \"Any chance you two might be able to come back tomorrow night?\"\n\nAudrey looked at me and smiled, \"I'd love to,\" she said, and I nodded in assent.\n\n\"Excellent,\" smiled Jo. \"We can all talk more then. And I haven't forgotten about that long story you've promised me about this trip to Vegas either.\"\n\nAs Jo stood, Audrey suddenly looked almost sad and reached out to take hold of Jo's arm. \"Listen, Jo...we're staying at the Bellagio, room 3310,\" she said, glancing at me for support. \"It's still pretty early, why don't you come over and we'll order up some champagne from room service.\"\n\nJo looked from Audrey to me and smiled, \"Seriously? I'd really like that,\" she said. \"Just let me make a quick trip to my room to change first and then meet you there in...what, about a half an hour?\"\n\n\"You certainly don't have to change clothes on my account,\" said Audrey, with a smile. \"You look perfect just the way you are.\"\n\n\"As do you,\" smiled Jo, sitting once more and taking Audrey's hand in hers. \"I have to get out of this particular dress though, it's purely stage wear. And, I hope you don't feel as though you have to change clothes on my account either, you are absolutely a dream in this dress.\"\n\nAudrey blushed noticeably as Jo glanced down at her chest, \"I've always had a bit of a thing for women's cleavage,\" said Jo. \"And I especially love the way that dress shows yours off.\"\n\nAudrey raised her eyes to Jo's and smiled demurely, \"Thank you,\" she murmured.\n\nWith that, Jo stood once again, bending to kiss my cheek, \"See you in a little while then,\" she said.\n\nThe waiter arrived with our check and Audrey gave him her credit card. The bill was signed, and we made our way, thankfully, back down to terra firma. We stepped into one of the ubiquitous cabs and were soon on our way back to the Bellagio.\n\n\"I hope it's okay with you that I invited Jo up to our room,\" she said, taking my hand and looking into my eyes.\n\n\"Of course,\" I said, smiling at her. \"I think she's great. I do hope you realize though, that Jo is rather likely to see your offer as a bit of a come-on, though.\"\n\n\"I have to admit,\" said Audrey. \"I DO feel more than a little excited by the three of us being alone together.\" She bit her lip pensively, \"I feel safer knowing you're with me though, I don't think I would have ever been brave enough to invite her on my own.\"\n\n\"I understand,\" I smiled, bending to kiss her lips passionately. She responded with a soft moan and her body pressed into mine.\n\nAs soon as we were back in our room, I phoned room service to order two bottles of champagne. \"Get the good stuff,\" urged Audrey while I was ordering. \"Ken's buying.\"\n\nI quickly changed out of my blazer and slacks into my comfy jeans and a plain white V-neck t-shirt. Stepping from the bathroom, I was surprised to see that Audrey had not changed out of her sexy dress.\n\n\"Aren't you going to change?' I asked.\n\nAudrey smiled tentatively and her cheeks flushed, \"Um...well, I had thought that, since Jo had been so...complimentary, that maybe I would just keep it on for a while longer.\"\n\nI smiled at her and stepped up to take her into my arms and kiss her warmly. \"You little flirt,\" I teased. \"I'm sure Jo will be happy to see you still wearing it.\" I kissed her again and, as her body sagged into mine, I moved my hands down to caress her buttocks, pulling her tightly to me as I felt myself becoming erect.\n\nAudrey pushed me away and laughed playfully, \"Let's not get carried away,\" she said with a teasing smile. \"She could be here any minute.\"\n\nWe sat down on the sofa, sitting close together and holding hands. \"Do you think I'm being silly for acting like this when I know Jo is attracted to me...and liking it? I mean, it's not that I'm trying to tease her, or anything, but I guess it really sort of excites me to even imagine being romantic with her, or any other woman for that matter. Do you think I'm a terrible person for feeling like this?\n\nI frowned and shook my head, wondering which question I should answer first. \"Not at all. First of all, I don't think you're terrible at all for liking to be admired in a sexual way. And, no, it's not a bad thing to tease Jo with your cleavage, I'm sure she will love it. Trust me, no-one is more appreciative of your cleavage than I am. So, let me thank you personally for not changing clothes.\"\n\nAudrey smiled just as a knock on the door startled us and announced the arrival of the champagne. I opened the door and the porter wheeled in a small cart with two ice buckets filled with champagne bottles. Audrey signed and we wheeled the cart aside to wait for Jo.\n\n\"You know,\" said Audrey, as we both resumed our seats on the sofa. \"Not to say anything disparaging about my daughter, but it certainly appears to my mind that someone like Jo might have been a much more suitable love-interest for you than Laura. You and Jo just seem to have so much more in common.\"\n\nI nodded, thinking Audrey had just given voice to my very own thoughts. I still had very strong feelings for Laura, but even an unconditionally loving puppy will turn tail and run away if it keeps getting kicked whenever it tries to show affection. I had always been fond of Jo's stage persona, personality, and sense of humor, and playing with her on stage tonight had been an eye-opening experience for me because I had actually enjoyed making music with her. It had been fun, and that was something I found to be lacking lately when performing with my band.\n\nI had often thought of what I might do once I finally decided to retire from the band and it had honestly never occurred to me how rewarding it could be to only work with one other musician and singer. It certainly gave me pause to ruminate about the possibilities.\n\n\"I think you're probably right, Mom,\" I said. \"If nothing else, this weekend with you has really shown me how much I have really been missing in my marriage. How would you feel if I decided to make my separation with Laura a permanent thing?\"\n\n\"Divorce?\" Asked Audrey, her eyes widening.\n\nI nodded, \"I think so. I mean, that certainly seems the logical conclusion, don't you think? Sometimes I feel it's hopeless to even try anymore. Nothing I do ever seems to make a difference with Laura.\"\n\nAudrey nodded, reaching over to take my hands in hers, \"I certainly can't advise you one way or the other,\" she said. \"But I will certainly support any decision you make. The last thing I would ever want to see happen...\" she paused and bit her lip thoughtfully, \"would be for our friendship to suffer because of it.\"\n\nI nodded, \"I couldn't agree more,\" I said, squeezing her hand affectionately.\n\n\"I love that you're living in my house, Jessie. It means so much to have you near. I...I've been thinking about Ken and wondering how I should handle things once he's home and we finally have a chance to talk things out.\"\n\nI nodded, \"And like you just said, I will support any decision you make about him. And I will stay with you for as long as you want or need me to.\"\n\nShe leaned in and kissed me, letting her lips linger lightly. \"I guess time will tell,\" she said, smiling as she looked into my eyes. I returned her kiss and felt her respond, opening her mouth to find my tongue with her own.\n\nAt that rather inauspicious moment, we heard a soft knock on the door. I pulled away and Audrey and I both smiled as I stood and made my way to the door.\n\n\"Hey,\" smiled, Jo as I pulled the door open wide and motioned her inside. She entered, taking my breath away in her stiletto heels and a pair of skintight, low-rise shorts that actually bared a portion of her lower butt cheeks and a very short pullover jersey that bared her midriff, revealing her toned abdominal muscles. \n\n\"Oh...I LIKE this,\" she exclaimed, looking around the suite appreciatively. \"This is absolutely gorgeous.\"\n\nShe embraced me, kissing my cheek and turning as Audrey appeared. She embraced Audrey affectionately as well and we all moved into the living area.\n\n\"Holy shit,\" exclaimed Jo, hurrying across the room to step up to the floor-to-ceiling windows. \"This is astonishing,\" she gasped breathlessly. \"Absolutely incredible.\" She turned away from the window with a huge smile on her face and held out her arms, \"Someday, when I grow up, I want to live like you guys.\"\n\nI popped the cork on the first champagne bottle and filled the supplied champagne flutes, setting the glasses down on the serving tray. Rather than sit side by side on the sofa, Audrey suggested we move the coffee table and put the sofa cushions onto the floor. Moments later, we were situated comfortably on the sofa cushions facing one another and I passed out the champagne flutes.\n\n\"What shall we drink to?\" Smiled Jo as she raised her glass.\n\n\"How about...Here's to Jo and Danny, hands down the best two-piece band I've ever heard.\" I said with a broad smile.\n\nJo's smile faded, \"Oh,\" she said, glancing almost furtively from me to Audrey. \"I'm not sure that's the best thing to toast right now.\" She shrugged almost guiltily and looked at each of us in turn. \"To be completely honest about it, Danny and I have only one more week here in Vegas and then...well, then Danny and I are through. He's enrolled in UCLA for a degree in accounting and is calling it quits for music.\"\n\n\"What?\" Exclaimed Audrey, her mouth open in surprise. \"What are you going to do? You're going to keep playing music, I hope.\"\n\nJo shrugged, \"Honestly, Audrey, I don't know. I'd dearly love to keep playing, and I've been keeping my eye out for a new partner, but at the moment, musicians looking for two-piece work are few and far between. I'm really kind of between a rock and a hard place too. The rent for my apartment in LA is astronomical and so are the payments for the new panel van I just bought to haul our equipment around.\" She sighed heavily, \"I'll probably have to move back up to Seattle to live with my folks for a few months until I get back on my feet.\"\n\n\"It's a shame you and Jessie can't work together,\" smiled Audrey, reaching out to place her hand on Jo's. \"You two sounded absolutely amazing tonight.\"\n\nJo laughed and raised her glass to Audrey, \"Now THERE'S a toast I can get behind,\" she said. \"From your lips to God's ears. I thought we sounded great too. \n\nAnd, If I thought for one second that anyone even HALF as good as Jessie was available, I'd scarf him up in a heartbeat.\"\n\n\"Maybe you should talk to him about it,\" said Audrey. \"He's forever moping around the house and complaining about being on the road and being away from home for so long at a time, maybe he'd enjoy working with someone like you and keeping closer to home.\"\n\nI cleared my throat, \"You guys know I can HEAR you, right?\"\n\nThe women laughed aloud. \"Seriously though,\" continued Audrey with growing enthusiasm. \"When I was on the dance floor tonight and you two played that Santana song, everyone around me was talking about how fantastic you and Jo sounded together. I think you two would be a huge hit everywhere you played.\"\n\nI nodded, surprised how Audrey had seemingly intuited my inner thoughts on the matter. Jo and I HAD sounded remarkably good together, and it had occurred to me while we were playing how much fun I was having. There was always a fair amount of stress and strain playing in a band with four other egocentric entities and often I found myself just going through the motions on stage and not really enjoying the experience. Add to that, our upcoming nine-month tour across Canada was about as appealing as a root canal.\n\nJo smiled and shrugged, \"I noticed it too,\" she said. \"When Jessie was on stage with me it changed the energy level in the entire room. You could just feel it rolling off the stage.\"\n\n\"Yeah,\" I smiled and nodded, \"I felt it too. And I was actually having fun playing again. Not that it's not fun playing in the band,\" I added quickly, \"but being out of town for so many months a year is definitely no fun at all. It probably went a long way toward ruining my marriage too.\"\n\nAudrey reached over and caressed my arm affectionately.\n\n\"Well,\" said Jo, taking a big swallow of champagne. \"If you EVER get tired of doing the band thing, please look me up. Danny and I were actually booked up solid for the whole of next year...in and around the LA area and Las Vegas. I haven't canceled anything yet; I'm still hoping I'll find another partner to work with.\"\n\n\"Really?\" I asked, my interest piqued. \"You have that much work?\"\n\nJo nodded enthusiastically, \"Oh, yeah. The Stratosphere wants us for 12 weeks a year guaranteed, and I have at least two lounges in LA that Danny and I have played ten or twelve times a year as well. And pretty decent money too.\"\n\nMy ears perked up at the mention of money. One of my primary reasons for continuing with the band was purely mercenary, I needed the money. \"I've always wondered what kind of money Duos made,\" I said.\n\nJo smiled, \"Hey, listen, I don't even shave my legs for anything less than fifteen hundred a week. Most of the local lounges around LA pay at least that much and usually a little more, fifteen to seventeen fifty. After expenses and agent commission, Danny and I usually take home about six hundred and fifty to seven hundred dollars a week.\"\n\nMy eyes widened, holy shit. And to think I had been happy with the paltry five hundred a week that was my usual wage in the band.\n\n\"But, here in Vegas,\" Jo continued. \"We usually never work for less than twenty-two hundred.\"\n\nI did my best not to choke on my champagne. Bands typically made more money, usually along the lines of three thousand a week, but their expenses were very high and with five members in the band, the net per person was seemingly much less than what a two-piece makes. In that one defining moment, I had a complete epiphany, as if a bolt of lightning had struck me, and I made up my mind to jump with both feet into a new career change.\n\n\"Okay, okay,\" I said, raising my hands as if surrendering. \"You got me, Jo. I'm in. All I want to know is...Where's the beer and when do I get paid. Just tell me where to sign, and when you want me to start.\"\n\nBoth women gaped at me open-mouthed. Jo's smile faded almost immediately and, as she stared at me, her eyes welled, and a tear fell onto her cheek. \"Don't you dare,\" she said, her voice little more than a hiss. \"Don't you dare tease me like that, Jessie. Not about something this important to me, because it's NOT fucking funny; I'm really scared about my future right now.\"\n\nAudrey instinctively moved closer to Jo and wrapped her arms around her, scowling at me. Jo pressed her lips together and lay her head on Audrey's shoulder.\n\nI suddenly realized I had expressed my intention entirely too lightly and with too much humor. \"Listen, Jo,\" I began, leaning forward to look directly into her eyes as she wiped the tears from her cheeks. \"Believe me, I'm being very serious. I don't expect you to make any kind of snap decision tonight...or even this weekend. But, if you are absolutely serious about wanting me to work with you, then I'm telling you right here and now that I would be honored to be your partner.\"\n\nAudrey's jaw dropped, as did Jo's. Her eyes widened and she sat up straight as Audrey released her. \"If you really want me, Jo,\" I continued. \"I'll call my manager tomorrow and let him know he'll have to find another guitar player for the Canada tour.\"\n\n\"You're serious?\" Said Jo, her eyes wide with astonishment.\n\n\"Just think about it, okay?\" I said, smiling at her. \"Just let me know one way or another before I have to make the trip to Canada.\"\n\nJo's lips curled into a smile, and then her smile widened and made it all the way up to her eyes. \"I've thought about it long and hard, Jessie, for about a nano-second.\" She slid over to me and wrapped her arms around my neck, kissing my cheek and then again on my lips. \"Let's do this, Jessie, and I'll be the happiest girl in the world.\"\n\nI leaned in and kissed her lightly on her lips, \"I'm all yours, Jo. We just need to book some rehearsal time before your next gig, and I'll get my stuff out of the band truck.\"\n\n\"My God,\" she beamed, turning to smile at Audrey who was also wiping moisture from her eyes. \"I can't believe this is really happening.\"\n\n\"Then, let's drink to the brand-new band. What are you going to call yourselves?\" Said Audrey, as she raised her glass.\n\nWe all raised our glasses and sipped. \"I have a name I've always wanted to use,\" said Jo. \"I've always liked the name 'Nightingale'. What do you think?\"\n\n\"Nightingale it is,\" I smiled, raising my glass once more and we all toasted the new name.\n\n\"Whew,\" said Jo with a shake of her head. \"I think I need to visit the little girl's room.\" We pointed the way and, as she rose to her knees, all the while looking down at Audrey's chest. \"God, I love that dress on you,\" she said.",
        "Alone together, Audrey moved over and embraced me. \"This is a beautiful thing you're doing. Are you sure about it?\"\n\nI nodded and smiled, \"I am, yeah,\" I said feeling as though a weight had just been lifted from my shoulders. We kissed long and lovingly, and I felt her respond, her tongue finding mine. She sighed as I cupped her breast, and I felt her hand pressing between my legs against the rise of my erection.\n\nThe sound of Jo clearing her throat startled us both back to reality and Audrey moved quickly away blushing highly.\n\nJo laughed, \"I'd tell you guys to get a room,\" she said, holding out her arms and looking around, \"but I see you already have one.\"\n\n\"Sit,\" smiled Audrey, patting the cushion beside her. Jo resumed her seat and picked up her almost empty glass with a wiggle of her eyebrows. \"It seems I'm a little low,\" she smiled.\n\nI laughed and picked up the champagne bottle. With our glassed full once more, Jo raised her glass. \"If I might be permitted to make a slightly rude and inappropriate toast, I like to raise this glass to Audrey's sexy dress and her amazing cleavage.\"\n\n\"Here, here,\" I chimed in raising my glass as Audrey's cheek flushed and she smiled self-consciously.\n\n\"Seriously, you two,\" said Audrey with a smile as Jo and I clinked our glasses together. \"Can't' you find something more appropriate to toast than my boobs?\"\n\n\"Well, we certainly can't toast mine, can we?\" Said Jo as she set down her glass and raised her top to bare her breasts.\n\nAudrey's mouth gaped and I smiled. Jo's breasts were beautiful, small but wonderfully rounded and formed with perky erect nipples. I looked at Audrey and smiled, \"How 'bout it, Mom? Shall we drink to Jo's breasts too?\"\n\nAudrey and I clinked our glasses and drank as Jo laughed good-naturedly. \"Seriously though, you guys...do you think I should get a boob job?\"\n\n\"NO!\" Said Audrey and I simultaneously, making Jo laugh. \"They're perfect just the way they are,\" smiled Audrey.\n\n\"Would it be too much for me to ask to see yours?\" Asked Jo, looking hopefully at Audrey.\n\nAudrey glanced at me and smiled, wordlessly slipping the thin spaghetti straps from her shoulders and lowering the bodice of her dress to bare her breasts. \n\nJo's eyes widened and she smiled, \"God, Audrey, your breasts are absolutely amazing.\"\n\nI sat back with a satisfied smile thinking life was pretty good at that moment to be in a room with two beautiful women with their breasts bared. We all sipped from our glasses and neither woman made any attempt to cover their semi-nudity.\n\n\"So...\" said Jo, breaking the silence as she looked from me to Audrey and then back again. \"I believe one, or both of you has promised me the full juicy story of your romantic weekend together.\"\n\nAudrey glanced at me and I nodded. \"It's all yours, Mom,\" I said, raising my glass to her.\n\n\"God,\" smiled Jo, \"I think it's so sweet that you call her Mom.\"\n\nAudrey laughed aloud, \"I've had to remind him not to do it when...well, in those inappropriate moments.\"\n\nJo laughed uproariously. \"Oh, God, I can imagine,\" she said. \"How kinky would THAT sound? But, don't let me interrupt, go on with the story.\"\n\nAudrey related to Jo in detail how she and Ken had planned to visit Las Vegas to celebrate her birthday and how she had attempted to surprise her husband with a visit to his hotel room, consequently discovering him with another woman and her feelings of shock and dismay.\n\nJo reached over to take Audrey's hand as she spoke, \"I'm so sorry,\" she said, frowning sadly.\n\nAudrey nodded to me, and I continued the story, telling how I had taken it upon myself to, at the very least, attempt to bring some measure of happiness into Audrey's seemingly impossible situation by taking her out to dinner to celebrate her birthday and subsequently surprising the hell out of her with a limousine ride and a birthday dinner in Las Vegas.\n\n\"And, I seriously hope you aren't going to try to tell me that you did all this for her without having any romantic designs on her at all?\" Chided Jo, reaching over to playfully smack my knee.\n\n\"Absolutely not,\" I replied honestly. \"In fact, I booked two adjoining suites here at the Bellagio.\"\n\nAudrey smiled and nodded enthusiastically, \"He did indeed,\" she admitted. \"My room was the suite right next door.\"\n\n\"So, then, it was never actually preplanned, by either of you, for the two of you to...come together romantically?\"\n\nAudrey looked at me and smiled, \"It was never my intention, no,\" she said. \"And I'm pretty sure Jessie never planned for it to happen either.\"\n\n\"So,\" smiled Jo, rubbing her hands excitedly, \"how then did it happen?\"\n\nAudrey looked at me and smiled. \"It probably all started because of my dress,\" said Audrey, continuing the story. She told Jo about the sexy dress she had kept for many years tucked away in her closet and her unrequited fantasy to ever wear in out in public. She related how I had discovered the dress while helping her box up a bunch of her clothing for charity, and how I had brought the dress along and how I had persuaded her to throw caution to the wind and wear the dress out in public for the very first time at dinner the previous evening.\n\nJo laughed and sipped her champagne, \"I find it extremely hard to believe that you own a dress that could be any sexier than the one you're wearing tonight.\"\n\n\"Why don't you show her?\" I smiled, giving Audrey a little wink.\n\nAudrey nodded, a sly smile on her face as she stood and made her way to the bathroom where her other dress was hanging. She returned very quickly wearing her other dress, having only taken seconds to remove the first and slip into the other.\n\nJo's eyes widened and her lips parted when Audrey returned, and I sighed appreciatively, being truly fond of that dress. \"What do you think?\" Asked Audrey as she slowly turned to give Jo a good look.\n\n\"Yes, Jo,\" I said with a laugh, \"Put your tongue back in your mouth and tell her what you think of her dress.\"\n\n\"In-fucking-credible,\" said Jo, her eyes moving lustfully over Audrey's body as she bent and resumed her seat on the sofa cushion, curling her legs beneath her. \"Listen, don't get me wrong, because I absolutely adore your other dress. But, without a word of a lie, Audrey, you in this dress are the literal personification of every fantasy I've ever had about another woman.\"\n\nAudrey blushed noticeably and smiled.\n\n\"So, please go on, \"urged Jo. \"Tell me more about going to dinner in this dress, while I continue to indulge in my fantasies.\"\n\nAudrey smiled, glancing at me, and then went on to relate how it had been for her going out to dinner and how much it had excited her to just let herself go with a pretense of utter shamelessness.\n\n\"It turned you on, didn't it?\" Smiled Jo, reaching over to place her hand on Audrey's arm affectionately.\n\n\"Oh, tremendously,\" said Audrey, inclining her body toward Jo.\n\n\"And you as well, I suppose?\" Said Jo, looking at me.\n\nI gestured at Audrey and smiled, \"Jesus, Jo. I'm a guy. How could it not?\"\n\n\"After dinner, we kissed goodnight at the door of my suite,\" smiled Audrey, \"and...well, the rest I believe we can leave up to your imagination.\"\n\nJo laughed and tossed her hair out of her eyes, \"I don't know, Audrey, leaving it up to my imagination can be a dangerous thing. My depraved mind can imagine a great many things.\"\n\nWe all laughed, and I topped up our glasses once more.\n\n\"Seriously though,\" continued Jo. \"You guys were never involved romantically before last night at all?\"\n\nAudrey shook her head, then paused, looking thoughtful. We shared a meaningful glance that made Jo laugh. \"Ah, ha,\" she said. \"And now the truth finally comes out.\"\n\nAudrey laughed, \"It's not what you're thinking, Jo,\" she said, looking at me and smiling. \"We DID, in fact, have sex once before last night.\"\n\nJo gasped aloud and her eyes widened.\n\n\"Wait,\" said Audrey in a rush. \"It was sex...physical sex, but it really wasn't what either of us would call a romantic encounter.\"\n\nJo sipped her drink and leaned back against the sofa with a smile, \"Unromantic sex? Oh, I just can't wait to hear more about THIS,\" she said.\n\nAudrey sighed and began the explanation from the very beginning, how she and I had often talked about my marital issues with her daughter, and how I had openly revealed to Audrey how Laura had been seemingly unable to have an orgasm during normal sex.\n\n\"I told Jessie, at that time, that I had the very same issue and had never had an orgasm during sex,\" said Audrey, looking directly at Jo.\n\nShe went on to explain about the magazine article that I had found and how it had the described position that reputedly guaranteed an orgasm for a woman during sex and how it had actually worked for Laura.\n\n\"Jessie wrote down the mechanics of the sex position for me and then Ken and I tried it,\" said Audrey. \"But, for me, it...well, it just didn't work, and I couldn't help but think we somehow weren't doing it correctly.\" She glanced at me and smiled, \"It meant a great deal to me, I was almost desperate to be able to orgasm with Ken. I somehow found the unmitigated courage within myself to ask Jessie if he would be so kind as to physically demonstrate the position for me, to make sure Ken and I had done it correctly.\" She smiled at me and reached over to lay her hand on mine. \"It wasn't a particularly romantic experience, we did it on my living room floor. And, even though it was a very intimate thing between us, I don't think either of us thought of it as being romantic. I thought of it as a kind of science experiment.\"\n\n\"And?\" Queried Jo, sitting forward with interest.\n\nAudrey blushed once more and nodded, \"And...It worked exactly as promised. But that was all it was for both of us,\" she continued. \"Nothing more than just a science experiment.\"\n\n\"Really?\" Asked Jo, looking at me rather skeptically. \"That's all it was for you too?\"\n\nI shrugged, \"Hey, listen, Jo,\" I said with a smile. \"Suffice it to say that it was a VERY pleasant science experiment.\"\n\nAudrey smiled and nodded in assent. \"It was,\" she said.\n\nJo sighed and smiled contentedly, \"It's plain to see how you two have some real feelings for one another,\" said Jo. \"So, exactly how dicey are things going to be once you two get home to your respective spouses?\"\n\nI shrugged and shook my head, \"Hey, for me, it's a no-brainer, Laura and I are officially separated.\"\n\nJo shook her head and frowned sadly, \"I'm really sorry to hear that, Jessie,\" she said. \"I know how devoted you were to her.\"\n\nI shrugged, \"Hey, shit happens,\" I said. \"And I'm actually beginning to think it's probably the best thing for both of us if we just go our separate ways.\"\n\n\"And YOU, Audrey?\" Said Jo, with a look toward Audrey.\n\nAudrey smiled and squeezed my hand, \"Oh, dear,\" she said with a shake of her head. \"That's the big question, isn't it?\" She looked at Jo thoughtfully, \"Look, I honestly don't see Jessie and me riding away into the sunset together and living happily ever after. I AM, after all, old enough to be his...\" she paused, considering her words, \"Well, let's just say I'm considerably older than he is and leave it at that,\" she said with a laugh. \"This weekend together has been one of the best things that have ever happened to me and something I'll never forget. But...For better or worse, I still have a husband and a family that I'm still very much committed to. \n\nJo looked at me and nodded, I was sure she could see the same resolution in my eyes that I was seeing in Audrey's eyes.\n\n\"Well,\" said Jo, reaching over to take both of our hands in hers, \"For however long it lasts, I think you two are beautiful together. I'm actually very envious of you both.\" She took up her glass and drained the contents in one large swallow. \"And, right about now, I think it's high time I left you two alone to get on with your evening.\"\n\nAs Jo stood, Audrey and I rose as well. She embraced me and kissed me warmly on my lips. \"I'll see you tomorrow night, right? Both of you?\"\n\nI smiled and nodded, \"I'll call my manager first thing tomorrow and resign from the band if you still want me.\"\n\nJo nodded her head, looking serious, \"Oh, God, yes, Jessie.\" She kissed me once more, her lips lingering ever so slightly on mine. She turned toward Audrey, who was already reaching out for her, and the two women embraced, holding one another tightly. \"Promise me you'll wear this dress tomorrow night too,\" said Jo.\n\nAudrey smiled, their faces very close together, \"I promise,\" she said. Jo leaned in and kissed her then. It wasn't a polite peck, or even the kind of kiss one gives to a family member or a very close friend, as she had just kissed me. It lingered...almost lovingly. Audrey's eyes fluttered and her hands clenched against Jo's back. \n\nWhen Jo pulled away, Audrey's eyes widened in surprise and she placed her fingertips on her lips.\n\nJo stepped back, her face a mask of embarrassment, \"Oh, Audrey...\" she stammered, \"I'm sorry...I...\"\n\nAudrey reached out and took Jo's face between her hands, leaning in and returning Jo's kiss with every bit as much warmth as Jo had done, her lips lingering provocatively on Jo's. \"You've nothing to be sorry for, Jo,\" she said a moment later when the two women parted. \"It just...surprised me, that's all.\"\n\nJo looked from Audrey to me, her face flushed with arousal. \"Okay, now I REALLY better go before I do or say something completely inappropriate.\" She quickly leaned in to give me yet another little kiss and turned away. We walked her to the door. She left quickly, smiling at us. \"See you tomorrow,\" she said, wiggling her fingers in a goodbye wave as she turned away.\n\nAs I closed the door, Audrey stepped into my arms. She kissed me passionately, her body molding into mine. Her hips moved against me, her meaning implicit. \"I want you, Jessie,\" she said, her voice trembling with lust and arousal. \"I want you inside me.\"\n\nShe pulled me toward the bed, pulling the hem of her dress up over her hips as she moved. She lay back onto the bed, her chest rising and falling rapidly, her eyes imploring as I opened the front of my jeans and unzipped my fly and pushed my jeans and my briefs down to my knees.\n\nWithout removing her shoes, Audrey parted her legs, lifting her knees as I leaned forward, her pink vulva lips glistening with arousal. She reached for me, her arms around my neck, and pulled me to her as I lowered myself between her thighs. I felt her pubic mound with my cock, sliding it through her silky pubic hair as she raised her legs to bring her slick glistening lips up to wet the shaft of my erection.\n\nI pressed forward, parting her lips with the tip of my cock as she crushed her mouth to mine with a soft moan. I thrust forward with my hips and penetrated her to the full extent of my erection. I held myself motionless, pressing my pelvis tightly against her as we kissed. She moaned softly from deep in her throat and I felt her begin to move beneath me. Her hands moved over me almost frantically. She clutched my buttocks tightly, her fingers probing almost painfully as her hips began to thrust up forcefully into me.\n\nI matched her movements, thrusting with equal force. Once...twice...a third time, and then Audrey was cumming. She tore her lips from mine and cried out as her orgasm swept her away. I felt my orgasm beginning to swell in the pit of my stomach and thrust into her rapidly to bring myself to the brink.\n\n\"Yessss...\" Hissed Audrey, sensing my growing need to release. \"Cum for me, Jessie...fill me up inside...fill me up.\"\n\nI needed no further encouragement and I looked deeply into her eyes as my first ejaculation erupted inside her. \"Audrey!\" I gasped as I surrendered to the pleasure of her vagina.\n\n*\n\n(The story continues in Audrey's Awakening Pt. 07)\n\n \n"
    ],
    "authorname": "Jaymie_dee",
    "tags": [
        "older woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/audreys-awakening-pt-06"
}