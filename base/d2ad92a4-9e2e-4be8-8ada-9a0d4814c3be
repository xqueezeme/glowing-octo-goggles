{
    "title": "The Porch Wolf Ch. 31-40",
    "pages": [
        "Vicki wasn't calming down, and people were backing up in line as they waited to say goodbye to Liv. \"Let me talk to her,\" I said as I opened my arm to her. \n\n\"Can you go with Uncle Leo?\" \n\nVicki nodded, and Liv set her down in my lap. I drove the scooter through the people milling around, all of whom were trying to politely ignore the meltdown that just happened. The pastor waved me towards his office; he opened the door for me. \"You can have some privacy here until you're ready to come back out. This has been a rough day for us all.\" \n\n\"Thank you, Pastor.\" \n\nHe knelt down by Vicki and held her hand. \"Your great-grandmother was a wonderful person, and it is all right to be sad. Let the sad out, and then your heart will have room for all the good memories of her again.\" She just nodded her head as the tears fell, and he left us alone. \n\n\"They don't love me,\" Vicki said as she cried into my chest. \n\nI rubbed her back as I thought about what to say. How can you explain your own family turning their back on you? \"That isn't true,\" I told her. \"There is nothing wrong with you, and nothing is your fault. You just have some very stubborn people in your family.\" \n\n\"Momma too?\" \n\n\"Especially Momma. She is very protective of her little wolf, and sometimes, that means keeping people away who might say mean things about you.\" \n\n\"I'm not stubborn,\" she said. \n\n\"Really? Who was the one stomping her feet and grabbing on to the rails at SeaLife because she wanted to watch the sharks instead of leaving to go eat dinner?\" She hid her face in my chest. \"Stubborn is as stubborn does.\" \n\nShe thought about this for a minute. \"What about Daddy? He doesn't love me.\" \n\nI scratched her back, making her relax, and her wolf let a low rumble go in her chest. \"Your Daddy does love you. He made some mistakes and hasn't been part of your life, but he does love you from afar. He is doing anything he can to keep you safe, just like I am.\" \n\n\"And Grandma and Grampa?\" \n\nI let out a breath. \"When your Mommy got pregnant with you, Mommy wasn't his wife. Your father was worried about what it would do to his marriage, and he was mean to your Mommy. She didn't yell and carry on about it, she just left him. If he couldn't openly be your father, she wanted him nowhere near you. She went home instead.\" \n\n\"To Grandma and Grandpa?\" \n\n\"Yes. Grandma and Grandpa were very upset that your mother was pregnant by a married man. She was too young, just starting college, and they thought it would ruin her life. They were embarrassed and wanted to send her away, so no one would know she had a child outside of marriage. Then, they wanted Mommy to give you to someone else to raise, so everyone could pretend she was never pregnant.\" Her eyes got wide. \"Mommy is stubborn, and she loved you from the first time she knew you were growing inside of her. She refused to give you up, so your Grandfather sent her away and told her not to come back. That was the last time she saw them until today. They are all too stubborn to get over it and just love each other and you.\" \n\n\"It's my fault,\" she said. \n\n\"No. You are the one good and right thing in this whole mess. Your great-grandmother took Mommy and you in, so Mommy wouldn't go back and do what they wanted. Both sides are dug in now, and there's only one thing that can bring them together again. It won't be easy, though.\" \n\n\"What?\" \n\n\"Love. It's easy to ignore something when you don't see or hear about it, but today, you stood there and made them look at you. Their granddaughter, who they've ignored all this time. There is no more secret; the news and the photographs have gotten back to their home in Madison. All of their friends and neighbors know that Mommy had a baby at nineteen and is a single mother. Mommy and your grandparents have to make a choice; do they keep ignoring the only family they have left, or do they find a way to be together again?\" \n\n\"Could they?\" Her eyes got wide. \n\n\"If they love enough to forgive each other, it can happen. It's not your fault, Vicki. It's not something you can make them do, just like I can't make you like cauliflower.\" She giggled at that. \"All you can do is be cute and cuddly, and let that smile of yours melt the ice around their hearts.\" \n\nAnita asked over the bond if we were done because they were ready to take Sharkbait home. I would stay with Liv as they packed up the mementos. We ate after everyone else left and packed the extra food up to take home. It was well past one in the afternoon when we transported her grandparent's ashes back to my home. \n\n\"Susan will be here in a little more than an hour,\" Mike said as I joined my senior people at the table. We were a lot lighter now; almost everyone from Winona had returned home with my thanks. Larry and Donna stayed behind to make sure I didn't backslide into 'drinking and general laziness,' as she called it. \n\n\"Jacob Burnley will be here soon, so no shifting and watch what you talk about,\" I said to everyone. Jacob was my lawyer, and he was coming with an accountant. I didn't know her, but she had been digging through the Volkov Construction books with Susan since yesterday afternoon. \n\nYesterday Afternoon \n\nWhen I'd called Jacob after getting off the phone with Susan, he was shocked when I told him I was thinking of purchasing a controlling share of Volkov Construction from Todd Miller. \n\n\"Why would you do that,\" he said. \"From what I hear, it's circling the drain, and that was BEFORE Todd got arrested. Let it go bankrupt and buy the scraps at auction. You can always build it up again later.\" \n\n\"I can't do that,\" I said. \"Todd isn't the only one who gets hurt if the company goes under. There are good people, friends of mine, who are going to lose their life's savings if it hits bankruptcy. Susan also needs cash now.\" \n\n\"That's an understatement. The Millers have an expensive legal bill coming from the criminal case against him. Whatever Todd has left, I'll get for you in a civil case.\" \n\n\"I don't want to wait months, and I want to keep the business afloat.\" \n\n\"You'll pay a lot more,\" he said. \n\n\"What I need to know is what a fair offer is,\" I said. \"Most of it will be taking over the debt load. As long as Susan gets the lien off her house, she will be happy.\" \n\n\"Fine,\" he said. \"I'll call in some favors and start my due diligence today.\" \n\n\"Good. Susan will be at my house tomorrow at three. I'd like to have an agreement by Monday.\" \n\nI could hear him coughing in the background. \"Monday? Are you nuts?\" \n\n\"Just do it, Jacob. I'll see you tomorrow.\" \n\nPresent Day \n\nI smiled at Jacob as he came into my office. \"I can't believe you're working a weekend,\" I teased him. \n\n\"It's not my fault, the client insists on meeting today,\" he said. \"May I introduce Patricia Cornwell, our forensic accountant.\" He moved aside, and I saw a woman in her thirties, with rust-colored hair and a face full of freckles, approach me. \n\n\"Leo Volkov,\" I said. \n\n\"Please call me Patricia,\" she said with a smile as she shook my hand, then pushed her reading glasses back up on her thin nose. \"You have a beautiful home.\" My wolf had been nervous all afternoon, and I didn't know why. I took a deep sniff. She was fully human, wearing light floral perfume, a hair conditioner with an ocean scent, and budding arousal at seeing me. She was a beautiful woman hiding behind a professional image, and I didn't see a ring on her finger. The business suit she wore couldn't hide the figure underneath, with flaring hips and a generous bosom. I saw her looking at the wedding band I still wore, and I could sense her disappointment. I finished my assessment before my look was impolite and gestured for them to sit at the chairs on the other side of my desk. \n\n\"Thank you. My late wife helped design it when I first started Volkov Construction.\" Anita brought in coffee and water, then closed the door behind her. I opened the link to the Pack adults so they could follow along. \"Let's start with my side, Jacob. What do I have in terms of liquid assets?\" \n\n\"The money you received from the sale of your company has done quite well, and it continued to grow during your early retirement,\" he said. \"You have liquid assets of just over two million dollars, and you could borrow against your paid-off home for another six hundred thousand, though I wouldn't advise it. You have more than enough for a cash offer.\" \n\n\"Patricia, what is your assessment of the company?\" \n\n\"Mr. Burnley is correct in that the company is circling the drain. Mrs. Miller was cooperative, and I did not see evidence of hidden assets or liabilities. The problem has been a consistent loss of revenue over the past four years, resulting in operating losses that grew from one hundred thousand in 2016 to over six hundred thousand last year. The shortfalls have been covered by lines of credit, and most recently a home equity loan against the Miller's house. In my opinion, the company will become insolvent before April, as their ability to borrow outstrips expenses.\" \n\n\"How much debt are they carrying?\" \n\n\"Todd borrowed $1.2 million to purchase your 70% of the company five years ago. Now, total liabilities are $2.087 million against assets of $1.46 million,\" Patricia said. \"Cash flow is just as bad. Revenues last year were $817k against expenses of $1.422 million. The company settled five lawsuits for breach of contract in the past two years, with two more pending. The debt service is killing them; when you combine poor management with this kind of debt load, you have a death spiral.\" \n\n\"What would you two recommend for a purchase price,\" I said. \n\n\"Whatever the auction calls for,\" Jacob said. I glared at him. \"Volkov Construction needs a cash infusion of at least a million dollars to remain liquid and reduce the debt load to a manageable amount, and they need to flip the revenue numbers. That is your job; you built the company, you'll need to rebuild it in the eyes of the customers.\" \n\n\"I can do that,\" I said. \n\n\"How much are you buying? Majority share? Your seventy percent back? Or do you want the eighty-five percent the Millers now own?\" \n\n\"Eighty percent would be ideal, but a minimum of fifty-one percent, so I have full control of the company. Susan can keep five percent; if the company turns around, she and her children deserve to share in the earnings. If it goes bankrupt anyway, they aren't out any more than they are right now. Her home equity loan gets paid back first; I don't want any loans left that are not secured by Company assets.\" I couldn't believe Todd mortgaged his home to keep it afloat; all he did was risk losing everything he had. \n\n\"Let me run some numbers, and I'll let you know the parameters that would make for a fair offer,\" Jacob said. \"You're putting a lot of money at risk for other people here. I hope you know what you are doing.\" \n\n\"I do,\" I said. \"I need to do a few more things before we meet with Susan. I'll leave you to your work for a few minutes.\" \n\nThe two went back to their computers while I drove out into the hallway. \"What's going on, Larry,\" I said. \n\n\"I got a call from my friend in the Council. They have been meeting with Susan Miller all morning, and they are very interested in this meeting you are having with her. They will be accompanying her here.\" \n\n\"Do they realize I have humans here?\" \n\n\"I don't think they care, Leo. They are also bringing in the big gun. Luna Adrienne McInnis is here to mediate between the Miesville and Welch Packs. He said that the Council will not leave until this mess is sorted out, one way or another.\" Luna Adrienne was making her name with the Council six years ago before Catherine got sick and I stopped paying attention to Pack politics. \"If the State Department had Adrienne, we'd have peace in the middle east within a week.\" \n\n\"Or they'd all be dead,\" I said. \"Wonderful.\" \n\nCh. 32 \n\nI opened the door to my office and drove back in. \"Change in plans,\" I said. \"The meeting with Mrs. Miller is pushed back to six o'clock. I need the two of you to prepare an offer. Write it up, leave the percentage of the company, and the amount of the sale blank for now.\" \n\n\"You plan to close the deal tonight?\" \n\n\"If it is to happen, it will be tonight. Sell assets as needed to ensure my portfolio has enough liquid assets to cover up to a $1.8 million purchase price. That should be more than enough to cover whatever the agreement is.\" \n\nJacob Burnwell let out a sigh. \"It's never simple with you, Leo.\" \n\n\"Think about what kind of indemnity we need to have and how to protect my interests. You've got a couple hours, counselor.\" \n\n\"Thanks.\" He stood up and put his papers back in his briefcase. \n\n\"It was a pleasure meeting you, Mr. Volkov,\" Patricia said. \"Here is my card, don't hesitate to call me if you have any questions.\" \n\n\"You aren't returning for the negotiations?\" \n\n\"No, my part is done. Todd Miller may not be a good businessman, but his wife kept the books properly, and I provided an accurate accounting of the business financials. What you decide to do about that is not my area.\" She gave me a smile. \"I hope to see you again when you are back on your feet.\" \n\n\"Thank you,\" I said. \"Larry, please see them out.\" As they went to the driveway, I drove back to use my bathroom and freshen up. I was finishing up when Mike linked me. \"The Council members and Luna Susan just turned onto 91 in Miesville,\" he said. They were a few minutes out and would pass Jacob and Patricia soon after they left my driveway. \n\n\"We'll do this in my office; I'm not worried about Susan with the Council here. I will link if I need anything.\" \n\n\"Of course, Alpha.\" \n\nI drove around to behind my desk, and Anita came in and placed a tray with coffee, tea, and snacks on the table by the window. \"Anita, please arrange the chairs for three people, with one of those chairs close to my desk on the window end for Susan,\" I said. \"Seat them, offer refreshments, then leave me with them.\" \n\n\"Are you sure you don't want Larry or Mike in here to back you up?\" \n\n\"I'm at enough of a disadvantage being stuck in this scooter; I don't want to compound it by hiding behind another wolf. The Council will not allow us to harm each other, and Luna McInnis won't allow anything to get out of hand.\" I had been considering my options for dealing with her since I found out she was coming; I had chosen my path and hoped it wouldn't burn me. Looking out the window, I saw the two cars drive in and park. \n\nBeta Mike met them as they came to a stop, and left the link open for me. \"Chairman Wolfe, Luna McInnis, and Luna Miller, welcome to the Miesville Pack. I am Beta Mike Winters, at your service. Alpha Leo sends his apologies for not greeting you in person, but as you will see, his injuries prevented it.\" \n\n\"Thank you, Beta Winters,\" the Chairman responded. They walked into the house, where their coats were taken, and Mike led them to my office. \"Leo, it has been a long time,\" he said as he walked into my office. \n\n\"Indeed it has, Chairman Wolfe. I believe it was the 2014 Alpha Summit in Sun Valley,\" I responded. My wolf pushed forward, alerting me to something, but he didn't say what. A pleasing scent, like cedar and rain, was in the air; it drew me in, but I couldn't identify its source. \n\nHe shook my hand as he inspected my sling and boot. \"You will recover?\" \n\n\"Yes, in eight weeks. The ligaments of my ankle took the brunt of it. The shoulder will be fine in two weeks.\" He moved around the desk, and behind him was Luna McInnis. My breath caught in my chest as I saw her; she was tall and elegantly dressed, her deep-red hair gathered to hang down her back. She was wearing white slacks and heels, a matching blouse with delicate beadwork, and a light grey jacket. \"Luna, welcome to the Miesville Pack,\" I said as I held my hand out. My wolf felt the dominance of hers and rushed to meet it. When our fingers touched, a tingle shot up my arm. My hand gripped hers a little tighter for a moment, and something passed between our wolves before I let her go again. \n\n\"It is my pleasure, Alpha Leo.\" She held the look into my eyes a few seconds too long, before shaking her head slightly and stepping back. My wolf was acting weird; I pushed him back and went on with the greetings. \n\n\"Luna Susan,\" I said with a smile. \"Thank you for coming.\" \n\n\"My apologies for all that has happened between our Packs,\" she said as her hand reached for mine. \"It should never have been this way.\" \n\n\"I know.\" I waited while they sat and received their drinks from Anita, and the door closed behind her before I started. \"Thank you all for coming. I understand the Council's interest in this, but Luna Susan and I have a long history with each other. You are welcome to observe, but the two of us are not negotiating through the Council. Mediation is neither requested nor required. Instead, I will work through these problems with my friend and former Packmate.\" \n\n\"That would be wonderful if you can do that, but the Council's interest is in seeing this settled before any other human entanglements are created. Perhaps if you had involved us earlier, some of this could be avoided,\" Luna McInnis said. \n\n\"Perhaps. In any case, I will not waste Luna Susan's valuable time.\" I turned my attention to her, reaching out to grasp her hand. \"There is one thing we will discuss that is not negotiable,\" I told her. \"Your mate knocked my vehicle off the road, seriously injuring a fellow Alpha, and three people who are very important to me. In the process, he caused the turn of a human and lost three of your Pack members attempting to kill a four-year-old girl. This was done without a proper challenge, and after I had warned him to stay out of a conflict between my Pack and the Marengo Lake Pack. The penalty for this is death.\" \n\nShe nodded and started to cry. \"I did not know,\" she said. \n\n\"I believe you. What I need to know right now is whether you accept that your mate's death. If you want to fight for his life in the human or the werewolf system, we have nothing to talk about.\" It was a hard line, but it was the only way. I handed her a Kleenex. \n\n\"I love my husband, but I can't forgive him for this,\" Susan said. \"Three of my close friends are widows, and he's facing decades in prison. He left me with this big mess, and I don't know how I'm going to live and where I will raise my boys now,\" she said. \"He decided on these actions without me, because he knew what I would say. I will mourn his death, but I understand it must happen.\" \n\nI gave her a minute to compose herself. \"What were you hoping to achieve tonight, Susan?\" \n\n\"My Pack is disintegrating around me,\" she said. \"It's not just you starting your Pack; people see what is happening with Todd, and with Volkov Construction, and are running away as fast as they can. I'm not worried about someone challenging for my Alpha position, Leo. In a week, there won't be five wolves left with me.\" \n\nI patted her hand. \"I have a way to end the human investigations if you are willing to help, and Todd does what we need him to do.\" \n\n\"How?\" \n\nI looked over at the Chairman and Luna McInnis; they were following closely, but giving me room to lead the meeting. \"I think we can agree on a few goals we would all want here. Our people have a stable Pack structure, Volkov Construction continues to provide good jobs for many of our members, and you and your children are provided for. Would you agree?\" \n\n\"Of course. I would add one thing, and that is my status. I'm worried I won't find a Pack willing to take my family after what my husband did.\" \n\n\"I will take you in my Pack if you agree to the terms, Susan. As you said, you and your children were not part of the decisions. I will not see you punished for them.\" \n\nShe looked up, her face showing a little bit of hope. \"You would do that? What would your Pack say?\" ",
        "\"They would say I extended mercy to an old friend and her family. I would not allow anyone to retaliate against you,\" I said. \n\n\"What do you need from me?\" \n\n\"The original kidnapping attempt on Liv and Vicki was funded by my brother Ivan, as Vicki is his daughter. He got Liv pregnant while she was in college, just after Ivan left here to become the Marengo Lake Alpha. As his eldest child, she got the Alpha Mantle from him, instead of Luna Brenda's first children. Ivan knew his mate wanted Vicki dead and thought he would be able to get them out of danger. Instead, the wolves he hired killed an innocent human before I killed both of them.\" \n\nSusan looked over at the Chairman, who cleared his throat. \"The Council is aware of this. What happens with John Petersen and Marengo Lake Pack is not germane to these discussions. We were able to confirm that Luna Brenda offered to pay Todd for killing Vicki, so her eldest would regain the Mantle. We cannot allow the FBI to trace the activity back to another Pack.\" Chairman Wolfe turned to me. \"The Council has met with your brother and Luna Brenda. Your Pack members, Vicki specifically, are no longer in danger from Marengo Lake. We have a blood oath to that effect.\" \n\nMy eyes went up; a blood oath was serious business. To violate it, you had to kill your wolf first. \"Good. My brother lives?\" \n\n\"He does,\" Chairman Wolfe said. \n\n\"Back to the plan,\" I said. \"Your mate is going down for the hit-and-run, he did that on his own. Ivan framed him for the kidnapping; the FBI has cash and a phone used to arrange the kidnapping with the two Stillwater wolves. It's enough to charge him, but to convict him? That's iffy. You are going to convince Todd to confess to both the hit-and-run and to funding the kidnapping.\" \n\n\"Why would he confess to a Federal crime he didn't commit,\" Susan said. \n\n\"To provide for you and your boys. Todd will ask for a plea deal and confess to the crimes; you will link him what he needs to say to make the confession believable. He will sign the plea, and then he will be killed in prison before the plea is accepted in court.\" \n\nShe looked up. \"KILLED?\" \n\n\"Yes. If Todd kills himself, you don't get a life insurance payout. The standard policy for Volkov Construction is a half-million-dollars. I can find someone willing to shank him for under ten thousand dollars.\" Susan shivered. \"It's better this way. He won't know it's coming.\" \n\n\"Why before the court accepts it?\" It was the first time Luna McInnis spoke up. \n\n\"The law only allows a guilty plea to be valid after entered in court and filed by the Judge presiding over the case. If a person dies before then, even if they confessed, by rule, they are NOT GUILTY. I will also ensure that your estate is not sued by the victims of the accident. The insurance companies might go after you, but your business insurance will be forced to cover it. After all, your husband was not guilty of attempted murder.\" \n\nI waited for them to think about it for a while before I continued. \"As far as the FBI and State are concerned, the case dies with Todd. That stops any further investigations into Welch and Marengo, and gets us off the news. Is that satisfactory to the Council?\" \n\n\"It is, provided the Pack situation here is also resolved peacefully,\" the Chairman said. \n\n\"You use the life insurance money to pay off the loan against your home, the remainder you invest. If you want to leave, it gives you the money to start over. If you want to stay here, you can remain in your house, join my Pack, and continue your work running the business office.\" \n\n\"I would like that,\" Susan said. \"I will do it. I will make Todd understand what he needs to do so that we are provided for.\" \n\n\"That's all I can ask of you,\" I said. \"As for the business, I will buy back my interest in Volkov Construction and take over management again. Right now, you and Todd own 85% of a company that is months away from bankruptcy. We both know this; your cash flow is negative, and you are tapped out on loans. You could try selling equipment, but then you can't generate income.\" \n\n\"I'm very aware of the situation, Leo. Miss Cornwell and I went over the books in detail. It doesn't take an MBA to know we are running out of money.\" She looked down at her hands. \"Nobody knew how important you were to the company until you were gone.\" \n\n\"I will leave you with a five percent stake in the company, the same five percent the other foremen have. When the company rebounds, you will have a stake in it. The eighty percent I purchase will infuse enough cash to make the March balloon payment and pay off the high-interest line of credit. The purchase price will be $1.2 million, leaving loan payments that are within revenues. I will also provide up to a half-million in low-interest loans to the company while we turn things around. In a year, the company will be making money again. The value of your 5% stake will grow quite a bit from the fifty thousand by the time you retire.\" \n\n\"It's a generous offer, Leo. Miss Cornwell said we would be lucky to get more than half a million, based on our assets and liabilities.\" She looked at me, hope in her eyes. \"It's not a good deal for you.\" \n\n\"As I will tell my lawyer, I don't want the company I founded to fail.\" I extended my hand to her. \"Do we have a deal?\" \n\n\"We do,\" she said. \n\n\"Wonderful. As for your Pack, it would be cleanest if you merged with Miesville. I will allow any who do not want to come into Miesville to go elsewhere; we will provide recommendations. The only exceptions are Parker and Thomas.\" \n\n\"Why them?\" \n\n\"Because Parker was the one who bit a human, and Thomas tried to take my niece. The rest of those involved may apologize and come in, but those two are dead if they enter our land.\" \n\nShe laughed. \"Both quit the Pack this morning. Good riddance.\" She looked over at me. \"What is my rank in your Pack?\" \n\n\"Beta officially, you'll be in charge of Pack finances and the business. You'll also be acting Luna.\" \n\nShe snorted. \"Why? You'll be mated soon.\" She glanced quickly at Luna McInnis, who blushed and looked down at her hands. \n\n\"My mate is dead,\" I said. Adrienne stood up and excused herself, practically running out the door. \n\nMy wolf demanded we go after her, but I had work to do. \n\nCh. 33 \n\n\"You're an idiot,\" Chairman Wolfe told me. \n\n\"What?\" I was confused; what had I done? \n\n\"Luna Susan, please join me in the other room. Alpha Leo needs some time with his wolf.\" They stood and walked out as I tried to figure out what was wrong with Luna McInnis. \n\nI moved my scooter towards the window; the skies were rapidly darkening, and I could see Mike's wolf outside with a red-furred female and another male I didn't recognize. She took off towards the woods, running hard with the two in pursuit. \n\nThe door opened, and Anita came in to check on me. \"You're an asshole. How could you do that to your mate? You get a blessing from Luna that few are fortunate to find, and you reject her without a second thought?\" \n\n\"What are you talking about?\" \n\n\"Adrienne is our MATE,\" my wolf told me. \"You hurt her!\" \n\nI thought back to all the cues I'd dismissed. My wolf's anxiousness. The scent that drew me in. The tingles in my arm as our fingers touched. His desire to follow after her. \"Fuck! Why didn't you say something to me?\" \n\n\"You weren't ready to hear it. I was going to let you get to know Adrienne, but I never thought you'd be so rude and dismissive of Adrienne to her FACE! You looked at another woman and told her she could have her place in your Pack because you didn't have a mate. She had hope again, and you crushed it like a bug with your rejection,\" my wolf replied. I looked over at Anita, who was ready to kill. \"I didn't know,\" I said. \"He never told me she was my mate.\" I felt like dried up dog-shit on the sidewalk. \n\n\"She's out there picking up pieces of her heart, Alpha. What are you going to do about it?\" \n\n\"I can't exactly go chase her down!\" I hated the scooter and the injuries for making me so helpless. \n\n\"You figure out a way to fix this, Alpha. A Pack needs a strong Luna, and she is all that and more. Hell, if it came to a vote, we'd keep her and kick your sorry ass out,\" she said. \"Mike is letting her run out her anger in the woods. You better prepare some spectacular groveling for when she returns, or she's liable to reject you back.\" She turned in a huff, leaving me alone in my office. \n\nI looked out the window, but it was facing the wrong direction. I drove the scooter out of the office and down the hall to my bedroom, intending to sit and watch the back. As I came in, my eyes caught the shrine to Catherine I'd built on top of my dresser. My hand turned the controls without conscious thought, spinning me until I was facing it. The urn's design was at my eye level, the running wolves and trees reminding me of our happy days. The photograph above, of our wolves together. I looked at the photos on the dresser, reaching for the one from the Pack party around our pool eight years ago. \n\nCatherine in her bikini by my side, surrounded by our friends in and out of the water. Tears rolled down my face as I looked at all I had lost. \"I'm sorry, baby. I didn't let you go like you asked me to,\" I said. She wanted me to live, love, and be happy when she was gone. Until Christmas, I was one for three, barely. \n\n\"Unky Leo?\" The voice from the part-open door broke me out of my funk. \"You crying.\" \n\n\"Come here, Sharkbait,\" I said as I wiped my eyes. \n\nShe came over and climbed up into my lap. She didn't say anything, she just hugged my chest as I cried. \"Mommy said you still miss your mate,\" she finally said when I had stopped sobbing. \n\n\"Every day I wake up wanting to see her, and my heart breaks again when she's not here,\" I said. I showed her the photo. \"She was so full of happiness. She would have loved you.\" \n\n\"I miss grandma,\" she said. \"Will I always feel like this?\" \n\n\"It gets better,\" I said. \"You remember the ones who die in your heart, and you move on with your life.\" \n\n\"How is that going,\" she asked. My jaw dropped a little; she was insightful beyond her years. \n\n\"Not well, I'm afraid. Catherine wanted me to move on and find another mate; she was worried I'd fall apart and lose the will to live. The sad part is that she was right. If I hadn't found you and your Mom, I'd still be a mess.\" \n\n\"It's all right to be happy. Mate told you,\" she said as she snuggled into my chest. \"I love you, Unky Leo,\" she said. \n\n\"I love you too, Vicki.\" I put the photo back on the dresser as she fell asleep in my lap. I closed my eyes and sought out my wolf in my head; he was whining and upset. \"I'm sorry. I wasn't ready for another.\" \n\n\"She is ready for us if you can fix this,\" he replied. \n\nMaking my decision, I took off my wedding band and placed it on the dresser next to the urn. As I rubbed Vicki's back, I heard a wolf howling her pain and loss to the moon. It broke my heart. \n\nLuna Adrienne McInnis' POV \n\nMy brain had been in a fog since I entered the room and scented Alpha Leo. My wolf, normally disinterested, was watching him closely. When we touched, I felt it through my arm and right to my core. I knew he felt it too; his hand caught mine for a moment before he let go. I felt my wolf surge forward to meet his and knew he was my mate. \n\nThen he let my hand go and went on. \n\nI sat back, confused. This wasn't what happened the first time I found my mate; I'd jumped him, and we were both half-naked by the time we got to my room. I watched Leo, wondering if he was in THAT much control. Of course, the Council was here on business, so maybe he wanted that out of the way. I couldn't very well mediate a dispute if he was my mate, so I was relieved when he told the Chairman he didn't need me. \n\nAs soon as the work was done, we'd be together and straightened it all out, I told my wolf. She waited patiently as he went through his proposal. I was impressed; Leo was in a place of strength. He could have demanded anything, and Luna Miller would have to take it. Instead, he found a solution that neutralized the humans and served the best interests of both Packs. I had to admit, it was better than the plans in my head when we left the Welch Pack. \n\nI liked his wolf; he was dominant but fair, maybe not as strong as mine, but he hadn't needed to be the bitch I was to get things done. He treated Susan well, placing blame where it lay and help where it was needed. It was difficult evaluating him physically when he was in a scooter, his arm in a sling and lower leg in a brace. His face and arms showed bruises from the accident. He wasn't as bulky as I expected in a mantled Alpha, but what Susan told me would explain it. She said Leo had remained in a funk after his mate died of cancer, and it got so bad that her husband took over for the good of the Pack. When Pack members saw him, they'd all said he was wasting away. She expected he would be dead in a year or two, not starting another Pack. The little girl at the center of all the problems was the reason for his return. His niece gave his wolf reason to live. \n\nI started to pay more attention as he finished his proposal. My wolf took notice when he told Susan that she would be acting Luna. \"What is he thinking,\" I asked my wolf. \n\nThen he said the words that broke me. \"My mate is dead,\" Leo said. \n\nMy wolf howled, and pain coursed through my body as I felt the rejection of his words. It took a moment to do anything, and I stopped my wolf as she rushed forward to attack him. \"NO. Not here,\" I told my wolf. I excused myself and left before my emotions got away from me. I walked out, heading back towards the front door. I practically ran out to our car, but I couldn't run away like I wanted. The Chairman's guard had the keys, and his business here was not done. I opened the door, then stripped off my clothes and tossed them in the back seat. Shifting into my rust-colored wolf, I shook my fur out. \n\nWolves couldn't cry like humans could. My heart was broken, and I just wanted to get out of here. \n\nA black wolf with some white and gray underneath ran out the garage entrance, moving towards me but leaving me my space. I took a sniff; he was the Beta, here to watch over me. I was not in their Pack, and I was in wolf form on Leo's land. The Chairman's guard also came out in wolf form and joined us. I chuffed and headed towards the woods I had seen behind the house; I needed to run to settle my wolf. As I did, I caught a glimpse of Leo in the office, looking out at me. \n\nIt would be the last time he would see me. I would leave with the Chairman and return home to Maine to lick my wounds. I'd been shocked to find a second chance mate, but at least it never went as far as establishing a bond. I'd never survive the loss of another mate. \n\nThe Beta took the lead as we ran hard through the woods, and I stayed on his tail so he wouldn't slacken the pace. The guard followed behind us as we weaved along the trail, heading down into a ravine. We turned to the right when we reached the Cannon River, running hard through the snow for a few miles. He took us back up to the bluffs, then we looped back towards his property. He slowed on the slick trails near the limestone cliffs, finally slowing to a walk as we reached a rocky point. He looked back at me, then crawled to the edge and put his head on his paws. \n\nI sat near the edge; the view was beautiful, the moonlight making the snow glow softly, while it sparkled off the river below. I was breathing heavily for the run, but my chest ached from more than just the cold temperatures. It felt like my heart had been ripped out of my body. Raising my muzzle to the sky, I released my pain and loss into the night sky with a long howl. It echoed off the bluffs on each side as I listened; far away, another wolf howled in response. \n\nI lay down next to the Beta, looking over the edge. The cliff dropped off at least eighty feet into the rocks below, more than enough to end my life if I chose. I caught my breath as I thought about my life, and when I got up, I had made the decision. \n\nI was not going to be defined by a male. I'd made my reputation without him, and I would go on with my life without him. It was his choice and his loss. \n\nI stood up and motioned with my head to the Beta; I wanted to head back. He led us through the trails, and it wasn't long before we saw the lights of Leo's home ahead of us. When we got back to the car, both males left me to dress; the guard went back to the front door, while the Beta went into the garage. As I pulled the last of my outfit back on, the Beta was waving for me from the garage. I followed him into the cavernous space. \"I know it's not my business,\" he started. \n\n\"But you're going to talk about it anyway,\" I said. \n\n\"Yes. My mate has told me about what happened, and before you go back in there, there are a few things I'd like to say.\" He told me about the short history of the Miesville Pack, and the condition Leo had been in. He pointed to the stacks of whiskey boxes by the entrance to the house. \"His normal day was to sleep late, eat poorly, go to his usual place for dinner that night, then grab a bottle on the way in and drink it until he fell asleep again.\" \n\n\"I got the basics of his life. I fought the same things,\" I said. \n\n\"He and his wolf broke out because Vicki and Liv needed him. He's never let go of Catherine, his previous mate. We don't think he was ready to find another.\" He looked towards the door to the kitchen. \"Please, talk to him before you make any final decisions. He needs you as much as you need him.\" \n\n\"I need no one,\" I said, \"but I'll speak to him. I am still a Council negotiator, and I have a job to do.\" \n\n\"Thank you.\" He opened the door to the kitchen for me; I walked in to find the Chairman talking to a preschool-age werewolf and her young parents. \n\n\"Ah, Adrienne. Sit, dinner will be served soon. This is Olivia Andersen and Brent Lawrence, and their daughter Vicki. Liv and Brent accepted each other shortly after her change completed, and Vicki here made her first shift about a week ago.\" \n\nI set my shoulders and sat down. \"Congratulations on your mating,\" I said with a forced smile. I could sense the mantle on Vicki. \"And on your shift.\" \n\n\"After our meeting, I believe the Council is not required here. I have urgent business in Michigan, so I will be leaving momentarily.\" \n\n\"I will grab my things and get ready to go,\" I said. \n\n\"No. Alpha Leo's plan is a good one, but it is just a plan right now. I want a Council representative here to monitor it and make sure it happens. You're the one. You will stay here, in this house, and brief me daily on progress.\" \n\nHe couldn't do this to me. \"Sir, if we could speak in private, I don't think it's a good idea for me to be here right now.\" \n\n\"You are here. Your mate is here. If I have to lock you in a room until you can work this out between you, I will. Adrienne, the only way you leave here unmated is if you kill him first.\" \n\nI sat back, my wolf and I were furious. If he thought I was going to bend down and move my tail aside for this man after what he did, they had another think coming. \"That just might happen,\" I said with a growl. \n\n\"Good luck, Mediator McInnis. Thank you all for dinner, and congratulations on your Pack.\" \n\nCh. 34 \n\n\"Alpha, the Chairman is leaving, and Luna Adrienne is remaining here,\" I heard from Anita over the link. \n\nI opened my eyes; I'd moved to the bed, napping with Vicki, who was now gone. \"I'll be there shortly,\" I said. I asked my wolf why he didn't wake me when she came back, and he said she wasn't ready for me yet. I slid onto the scooter and drove over to the closed door. The Chairman was putting his coat on when I drove into the living room. \"I apologize for my absence, Mr. Chairman.\" ",
        "\"It's quite all right, Alpha Leo. It was an enlightening time for me as I met your Pack members,\" he said as he moved to the door. \"I have other commitments, but the Council will be watching this situation closely to ensure it is resolved promptly. Luna McInnis will remain here until that time. I expect you will work closely with her; she represents the Council in this, and reports directly to me.\" \n\n\"I will not let you down again, Mr. Chairman.\" \n\n\"I hope not.\" He went out the front door, accompanied by his guard. \n\nAs soon as he was in the car, I turned the scooter around to go into the kitchen. I didn't get far; a sultry redhead was in my way, her body shaking with anger. \"I'm so sorry, Adrienne. My words and actions hurt you in ways I didn't know. I'm ashamed that I did that to you, especially in front of others.\" \n\nI felt the slap before I heard it; the left side of my face exploded in pain. \"You dismissed me like I was NOTHING! You cut my heart out and tossed it in the garbage with your Kleenex,\" she said. She had her fists at her side, trembling as her anger fought at her control. \n\nI resisted the impulse to put my hand to my face or strike back; I deserved that slap and more. \n\nI let a breath out and looked into my mate's stormy green eyes. She was right to be furious with me; if she had rejected me and left, I would have understood. I could see her wolf pushing forward, challenging me. My wolf came forward, seeking his other half. The animals didn't need love; once they recognized the other, the attraction was like with rare-earth magnets. My wolf was all for claiming her and spending the night making love. Of course, her human side would rip my nuts off if I tried it. \"I know that now. The words and the tone I used caused you great pain. I wish I could take them back; I wish that I could have chased after you and explained myself. My heart ached when I heard your howl, knowing I was the cause.\" I reached my hand out for her. \"I did not reject you, Adrienne. My wolf knew, but he did not tell me because he did not think I was ready. I know what you are now.\" \n\n\"Are you ready now?\" \n\n\"I will not lie to you, Adrienne. I had never let my mate go after she died; it has only been in the last week or so that I've started to give away her things and sort through her effects. While you were running around, I left my wedding band on the dresser for the first time since she slid it onto my finger thirty years ago. I'm a work in progress, but I'm making progress.\" \n\n\"I know how hard it can be, and I had a Pack that helped me through. Luna Susan told me you withdrew from everyone, and then you were banished. It's a miracle you survived.\" She was right; Alphas did everything to extremes, even grief. \"I will not reject you, not unless I have to do so to protect my heart again.\" \n\n\"You won't need to do that, Adrienne. I know what a gift you are, and I trust Luna. If she gave you to me and me to you, there is a reason. I beg you to be patient with me while I get my life back in order. I'm not ready to be your mate YET, but I will be.\" \n\nShe didn't say anything for a while. \"I am to monitor the progress of things here for the Council, and I will do that. I will get to know you and your Pack along the way. Until my job is done, there is no 'us.' We get to know each other as friends first.\" \n\nI let out a breath I was holding. \"Thank you,\" I said. \"You will not regret it. There is a guest room on this level that is ready for you, this way.\" I led the way back to the hallway, going to the bedroom next to mine that Liv had used that first night. \n\n\"It will be fine, though I didn't bring much with. I may have to do some shopping.\" \n\nWe were interrupted by a call to dinner. Adrienne led the way back to the kitchen as I enjoyed the view. She was tall and athletic, with the body of someone a decade or two younger. I think she sensed me looking at her because her hips started to sway a little more in those white slacks. \n\nI didn't have much time to watch before we reached the dining room, where all but two places were taken. Adrienne was left with the chair to my left as I pulled up to the opening for me at the head of the table. My Pack was already recognizing her as the Luna. Luna Susan was on the right, as a fellow Alpha and guest. \"You're still alive,\" Donna said as she brought the manicotti and sausage over with Anita. We passed the trays around, filling our plates with the fantastic smells of the meat and cheese. I cursed that my arm was still in the sling because I couldn't serve my mate as I wanted to. \n\n\"Our Goddess has blessed me with a second chance, a mating pull between myself and Luna Adrienne. A second mate is a rare and happy occurrence. I have issues I need to work out, and the Luna has Council business here to attend to. The timing of the completion of this bond, if it does happen, is a private matter between the two of us alone. Is that understood?\" \n\nEveryone answered yes. No one would eat until the Alphas did; I deferred to Adrienne, taking my bite a half-second after she did. \n\nSharkbait broke the silence. \"No sex?\" \n\nI inhaled a bit of the manicotti, starting to cough as I choked on the piece. Adrienne smacked me three times in the back, the last after I got the pasta out of my trachea. \"Thank you,\" I said weakly. \n\n\"It was my pleasure,\" she said. \"Vicki, what do you know about mates?\" \n\n\"Mommy is mates with Brent, but no sex yet.\" If I wanted to crawl under the table, I could Imagine what Liv was thinking. \n\n\"Yet,\" Brent said before Liv elbowed him. \n\n\"Unky Leo's mate died, and he was sad. Now you come, and he can be happy. Bread, please?\" \n\nLiv quickly pushed more food onto her plate, hoping she'd stop talking. Adrienne wasn't intimidated. \"My mate died too, and I was sad for a long time. There is nothing better than the mate bond, and nothing harder than living alone after it. I can sense your strength, Vicki. You will be a strong female, and Luna will find the right person for you too.\" \n\n\"Boys are yucky,\" she said. \n\nThe rest of the meal was uneventful, and Adrienne, Susan, and I returned to my office. I had texted my lawyer, Jacob Burnley, with the financial terms Susan had accepted earlier. The paperwork for the sale of eighty percent of Volkov Construction back to me was ready. It took Jacob an hour to go through all the forms and obtain the signatures he needed. \"The money will be transferred Monday prior to the paperwork being filed with the Secretary of State's office. Per my client's instructions, the money will be directly transferred to the indicated creditors.\" \n\nSusan rose and shook his hand. \"Thank you, Mr. Burnley. You and Patricia have made this unpleasant task bearable.\" She left with Adrienne, leaving me alone with my lawyer. \n\n\"You overpaid,\" he told me. \n\n\"I know, but I have my reasons,\" I said. \n\n\"I hope so. The company is a mess, and you'll be a busy man turning it around.\" \n\nI just laughed. \"I've been doing jack point shit for years, Jacob. It's about time I got back to work.\" \n\n\"I don't think it will be struggling for long. It's been fun, Leo. Maybe now I can enjoy my winter vacation.\" I escorted him to the door and shook his hand before he left. \n\nI was exhausted from the day. I readily agreed to a movie night in the living room with those who weren't going for a Pack run. Liv still couldn't shift because her ankle wasn't healed, but Vicki's concussion symptoms were gone. Liv said she could run with Anita and Adrienne; they would do some training with her when the rest of the Pack took off for a hard run. \n\nI let Liv pick the movie, and she selected \"Rocketman.\" I didn't argue; I liked Elton John. I hoped the documentary would be as good as some of the other ones I'd seen lately. I just about spit out my popcorn when the first song and dance routine started. \"What the hell is this,\" I said as I pointed at the screen. \n\n\"It's a musical,\" she said. \n\n\"What? The commercials didn't say that!\" Of course, I ended up watching the whole thing. Just shoot me now. \n\nThe wolves came running into the house, shifting and going to their rooms. Sharkbait's little wolf was covered in clumps of snow and ice. She jumped up on the couch, giving her Momma a lick as her wet paws tracked over her clothes. \"Upstairs, SHOWER,\" she said as she got up to follow her. \n\nI turned the television off and went back towards my bathroom, glad I'd invested in the on-demand water heater for when so many people were in the showers at once. I took my own shower, put on shorts and a shirt with my arm immobilizer, and readied myself for bed. Instead of heading for the sheets, I turned the other way and went out into the hall. The house was quiet and dark; I stopped by the guest room. Lightly tapping, I wished Adrienne a good night. \"Good night, Leo,\" she responded. \n\nSmiling, I went to bed and turned the light off. Sleep escaped me; my wolf was anxious. He wanted his mate. \n\nThe door opened just as I thought I might get up again since sleep wasn't coming. \"Leo?\" \n\n\"Come in, Adrienne.\" I could make out her, in her pajamas, nervously approaching the bed. \"Your wolf won't let you sleep either?\" \n\n\"No.\" \n\nI moved the covers aside. \"Come on in. I'll behave,\" I said. Adrienne slid into the bed, moving until my right arm was wrapped around her back, and her leg was draped over mine. I kissed her forehead, and we were asleep in moments. \n\nCh. 35 \n\nI opened an eye when I sensed the door opening and closing. My wolf wasn't alarmed; in fact, he was happy. Our mate was snuggled into our side, her scent filling the air in my room. I hadn't had nightmares, and I'd slept deeply. Looking over at the clock on the bedside table, it was just past one in the morning. \n\nAdrienne was sleeping peacefully. I didn't want to move and wake her, so I didn't sit up. I heard her come around the bed to my side. \"Unky Leo?\" \n\n\"What are you doing up, Vicki?\" \n\n\"Mommy and Brent are making funny noises. Can I sleep with you?\" \n\nI could just imagine what those two were doing. Now that Liv had accepted Brent as a mate, a physical relationship was inevitable. Liv had never dated, focusing on work, school, and her daughter. She would have no idea what was going on with her headboard banging against the wall, the box spring creaking, and the strange noises they were making. \"Come on in and go to sleep,\" I said. I couldn't lift the sheet with my bad arm, but she managed to get in. She smelled like shampoo and soap, her shark pajamas with long sleeves and booties looked cute on her. She snuggled in, her back against my side, and we both went back to sleep. \n\nThe next time I woke, it was to the smell of bacon. I had to go to the bathroom, which presented a problem. I was trapped by a sleeping mate to my right and a sleeping girl to my left. My scooter was on the right, so I had to poke the bear. \n\nI pulled Adrienne closer, kissed her forehead, then moved my arm out from under her head. She didn't like that, and her arm moved across my chest as she clung to me. Her knee moved up, bumping into the next problem, just below my waistband. Her knee couldn't move up any farther without causing damage. \"Adrienne,\" I whispered as I tried to get my arm free. \n\n\"Mmmuugh,\" she said. \n\nI kept shaking her gently. \"Adrienne, I need to get up.\" I must have gotten through, because she rolled onto her back, freeing my arm. I couldn't use my other arm to get over her, so I pulled the sheets and blanket away and scooted down to the base of the bed. She didn't like the cold and rolled back into the warmth of my spot in the middle. By the time I had her covered again, she and Vicki were snuggled up with each other. \n\nI looked back at the scene as I drove into the bathroom; my mate, and a girl I had claimed as my own daughter. Two weeks ago, I wouldn't have believed either was possible. \n\nI finished my business and let them sleep as I went out into the hall and to the kitchen. Donna was there with Anita, Lois, and Carla. They were putting together a Sunday brunch. \"There are going to be a lot of guests this morning,\" Donna said. \"Luna Susan informed her Pack last night that it was merging into our Pack. I worked it out so the interested Pack members could stop by this morning, so you could bring them into your Pack.\" \n\n\"Thank you,\" I said. I'd been so focused on what I did to Adrienne yesterday that I hadn't considered the impact of our deal on dozens of families. The sooner they had their place in the Pack, the better. \n\n\"Sit down and eat.\" I drove over to my spot, and she brought me waffles, bacon, and scrambled eggs. I looked back towards the hallway. \"Let them sleep, we're going to have a lot of people eating through the course of the morning.\" \n\n\"You haven't been neutered, so I lost THAT bet,\" Anita said. \n\nI laughed a little as I took the orange juice from her. \"Our wolves wouldn't rest until we were together. I still have a long way to go with her human side.\" \n\n\"Don't push,\" Larry said. \"Go about your business, show her what you are as a person and as an Alpha,\" he said. \n\n\"But don't you ignore her,\" Donna said. \"Introduce her as your second chance mate, talk about a future together, ask for her advice. If you behave as if your mating is a done deal, maybe she'll start to believe you.\" \n\n\"I can't do much worse than what I did in the office,\" I said. \"I have a lot to learn about her.\" \n\nThe door from the garage apartment opened, and Liv came down with Brent right behind her. She looked a little panicked as she searched for Vicki. \"Where is she,\" she asked. \n\n\"She heard noises last night and came down to sleep with me,\" I said. \"She's still in there.\" Liv's face turned red with embarrassment as she realized what I meant. \"Nice hickie, by the way.\" \n\nShe pulled at her shirt, which didn't cover the mating bite on the left side of her neck where it met her shoulder. Brent showed his, more on the collarbone than the neck, but still a good, deep bite. \"I had no idea it would be like this,\" Liv said. \n\nBrent wrapped his arms around her from behind, nuzzling into her new mark. Her knees weakened, and she moaned at the sensation before she realized where she was. \"Not here,\" she whispered. \"I need to check on my baby.\" \n\n\"I'll get you a plate,\" Brent said. \n\nLiv came back out alone, not wanting to disturb either of them as they slept. \"Vicki barely knows who Adrienne is, I'm shocked she's curled up with her like that.\" \n\n\"It's her wolf,\" Brent explained. \"Adrienne and Leo are Alphas, and our wolves feel comfortable and protected with them, just like she does with you.\" \n\nShe thought about it. \"I have so much to learn.\" \n\n\"I would like you all to stay here this morning,\" I said. \"The Welch Pack is merging with ours, and few of them have met either of you. You are important to the Pack. Not only are you new members and mates, but because Vicki is my heir.\" \n\n\"WHAT?\" Liv looked at me like I was crazy. \n\n\"I've explained the Alpha Mantle, and what it means for Vicki that she has it. She will have the strength and power to rule and defend a Pack. My wolf and I think of her as a daughter; as you know, Catherine and I could not have children. I have a mate again in Adrienne, but the chances of us conceiving an heir together are remote. Vicki is the heir to this Pack, Liv. She's going to be an amazing Alpha when she is of age.\" \n\nLiv looked at Brent. \"You knew?\" \n\n\"It's not like she has to do anything now, she's not even in first grade yet,\" Brent said. \"She's a mantled female in this Pack; unless she leaves to be elsewhere with her mate, the Pack will pass to her when Leo and Adrienne are gone. That's a good thing, Liv. Packs are more stable if the line of succession is known.\" \n\n\"She's a hungry Alpha now,\" a voice said from the hall. Adrienne was leading a sleepy Vicki into the room in her shark-footy pajamas. \"Good morning, everyone.\" \n\nI gave her a big smile. \"Good morning Adrienne. How did you sleep?\" \n\n\"I feel rested,\" she said. \"Thank you.\" Vicki went over to sit by her Mom, and the chair next to me opened up for my mate. Donna asked her what she would like, then went to get her a plate. \n\n\"We are going to have a busy day,\" I said. I explained what would be going on with the Pack members arriving to join. \"If you are comfortable with it, I'd like you by my side,\" I said. \n\n\"I haven't accepted the bond or the position,\" she said defensively. \n\n\"I know that. I also know your official capacity is as an observer for the Council. I propose we use that; we acknowledge that Luna has given us a second chance at a mate, but we are not acting on it until the Council business is concluded. In the meantime, you are observing the merger and seeing how we operate.\" \n\nShe took a sip of coffee, thinking it over. \"I can accept that,\" she said. \n\nAs the morning went on, and fifteen more families joined our Pack, I could see her comfort level growing. She wouldn't let me hold her hand, but I did everything I could to show my acceptance of her. I introduced her as my future mate, asked her opinion, and complimented her experience as Luna and with the Council. It was hard to get a read on what she was thinking; her years as a mediator had trained her to keep a neutral expression no matter what was said. \"What are they saying about Adrienne and Vicki,\" I asked Anita. She was downstairs, where the informal party was along with the children, while I was doing Pack business in the living room. \n\n\"They like Adrienne, her reputation precedes her. She would be an asset to any Pack.\" I smiled at that; she was better qualified to run a Pack than I was. I wondered how this would work with us. \"As for Vicki, that girl could charm the socks off a freezing man. They love her, and love that you have claimed her as your heir. They also LOVE Liv and Brent. Nobody can believe that she is so strong and blessed just days after making her first turn. There's a lot of excitement about the additions.\" \n\n\"And the subtractions? The ones who left?\" \n\n\"Good riddance. After meeting Vicki, anyone on the fence about what Todd did is pissed at him now. The idea of their Pack being responsible for her nearly dying makes them sick. They love her. She's down there with the kids, and she is already forming them into her own mini-Pack.\" \n\n\"Thanks, Anita.\" It was nearly noon, and I'd just brought the last family into the Pack. \"Can I have one person from each family join me in the upstairs living room in five minutes, please,\" I said. \"Adrienne, I will be speaking to each of the families about the direction of the Miesville Pack in a few minutes. Before then, I need to take a quick break.\" \n\n\"Good idea,\" she said. \"I'll meet you back here.\" \n\nShe went to her guest room to freshen up while I drove to my, soon OUR bedroom. I needed the crash bars around the toilet to move around. When I came back out, I parked in front of the picture window, facing almost two dozen people, who represented the eighty-seven members of the Miesville Pack. Susan sat to my right, her Alpha status gone, and she looked relieved. I waited for Adrienne to arrive and sit next to me before I began. \"Before I start talking about the future, I'd like to apologize for the last five years. The loss of Catherine devastated me, and I stopped wanting to live. I pushed away all those who tried to help, including many of you in this room, and I ceased to be the Alpha you needed. Todd came to me, worried that if I showed up at the Alpha Summit that way, another Alpha would kill me and take over.\" Some of them grumbled at this. \"He was right. We made a deal; I would sell him my shares in Volkov Construction, and then I would take a dive in the challenge fight he made. Per our agreement, I was banished.\" \n\n\"He never should have cut us off from you, Alpha,\" one of the wives said. ",
        "\"Todd was scared I'd recover and come back to claim the Pack again. He shouldn't have worried; if not for a little girl, I'd still be drinking my life away in self-pity. Liv gave me a reason to let go of Catherine's things, and then Vicki gave me a reason to live. When I saw her and scented the mantle, my wolf claimed her as my own. The two gave me a reason to live again, and for that, I'll be eternally grateful. Without them, I'd never have met Luna Adrienne, and I'd never have you all in my living room. It's worth every injury I'm dealing with now to make it to this point.\" \n\nI waited for everyone to settle down before I continued. \"You have heard that I have repurchased eighty percent of Volkov Construction. That is true; I've infused capital back in so the debt load can be reduced, and I will lead the company back to where I left it and beyond. I did this because I love and care for all of you that work for me and depend on the company for your livelihood. It will not be easy to turn it around, but I'm confident that next year, we will be profitable again.\" There were a lot of smiles from this; everyone had been dreading layoffs and bankruptcy sales. \"Your jobs are safe.\" There were cheers at this. \n\n\"We have a lot to do as we bring this Pack together. Next Saturday night, there will be a Pack run to celebrate the merger. As was our tradition, we will spend the afternoon and evening together, eating a big potluck dinner, before we run when the moon is highest. The focus of our Pack will be family. We will help each other, encourage one another, and celebrate the good things in our life.\" \n\nI looked over at Adrienne, inviting her to say something. She shook her head; it was not her time. \"Susan?\" \n\n\"I'd like to thank Alpha Leo for doing what he didn't need to do, and bringing the remnants of our Pack into his,\" she said. \"I look forward to continuing to serve as your Beta.\" \n\n\"What about Todd,\" someone asked. \n\n\"Todd attacked another Alpha and tried to kill a child,\" she said. \"His life is forfeit. He would be dead already if he hadn't been arrested.\" She looked at me, then back at the Pack. \"He did not confide his plans in me, or I would have stopped it. I will mourn the mate I loved, but this is where I need to be right now.\" \n\nIt was a good meeting; we answered questions for another hour before we stopped due to hunger. It was a full house on short notice, so a few people had gone to Sam's Club and picked up the fixings for sandwiches, chips, and salad. We got the children their food to take downstairs, then the adults moved to where there was room. I stayed in the living room, while Adrienne went downstairs with some of the mothers to spend time with the kids. \n\nI was telling stories when Liv's cellphone rang, and her face showed her shock as she saw who it was. \"Hold on, Mom,\" she said as she stood up. She ran up the stairs to her apartment as I wondered what was happening. A few minutes later, Brent ran upstairs after her. Both resisted my inquiries over the link, so I waited. Ten minutes later, the two came down. She had been crying, and she walked over and sat by me. \"Leo?\" \n\n\"What's going on, Liv?\" \n\n\"My Mom is still in town, but Dad returned home to work. She wants to talk to me and to spend time with Vicki. I don't know what to do.\" \n\nI reached over and held her hand. \"She's still your mother. It's all right to want to have her in your life again.\" \n\n\"I don't want Vicki to be hurt. They can't hurt her if they aren't in her life.\" \n\nI just shook my head. \"They are hurting her because they are NOT in her life.\" I thought about it for a minute. \"Meet her, but not with Vicki. Bring Brent along; he's your fianc\u00e9, and you should introduce him. He can protect you and get you out of there if it goes badly.\" \n\nShe held up her left hand. \"If he liked it, he should have put a ring on it,\" she teased. \n\n\"I liked it, so I bit it,\" Brent replied. \"We should go ring shopping today.\" \n\n\"Fine. Mom is staying at the St. James Hotel down in Red Wing. We could meet for dinner and drinks at Jimmy's. There are places there that we can have some privacy.\" \n\n\"Sunday is my normal night at the Smoking Oak. After everyone we've had here today, I'm not having anyone in the kitchen tonight. I'll take Vicki with us so she can have a slab of ribs. If it goes well, let us know, and we can bring her to you. If not, come on over and party with us.\" \n\n\"You're right,\" she said. \"I have to know.\" \n\nCh. 36 \n\nOlivia Andersen's POV \n\nBrent and I drove to Woodbury to look at rings. I was wearing a turtleneck and a loose-weave sweater, making sure my mating bite was covered. I didn't need any humans thinking I'd been attacked until the mating bite scarred over. Brent said that the visual warning of the scar to other werewolves was just part of what the mating bite did. It also mixed our scents, the combination telling others that we were mated and who our mate was. \"You'll learn just how much you can find out by scent alone as you get used to our life,\" he told me. \"It's not just that we have unique scents that you can track or recognize. You'll be able to break their smell down to where you can tell their rank and Pack. You'll be able to tell if they are in the fertile portion of their cycle or pregnant. You can tell if they are happy, horny, nervous, or terrified. You can tell if they are getting sick.\" \n\n\"It's like a dog?\" \n\n\"Humans know that dogs have a sense of smell far more sensitive than theirs, and they can be trained to use it. Dogs can tell many things from urine left on a signpost. We do the same thing, you know.\" \n\n\"You pee on signposts?\" \n\n\"We mark the edge of our territory. When you can shift again, we'll run it together. The Alpha's scent is strong to reflect his dominance. He marks the trees to claim the area and warn others away. Pack leadership will often add their own marks in between to back up his claim.\" \n\nI just shook my head. \"I don't know if I'll ever understand what I've gotten into here.\" The last thing I wanted to do was to find some days-old urine stain and stick my nose in it. \n\n\"It gets better,\" he told me as he squeezed my hand. \"I'm sorry about how this all ended up; I'm sure you didn't grow up thinking you'd get bitten before you got a ring.\" \n\n\"You are current on your rabies vaccination, correct? I didn't see a tag on your collar when you jumped into bed,\" I teased. \"It's all right, Brent. I liked you from the first time I saw you, but I was scared. So much was going on, and it was all I could do to stay strong for my daughter.\" \n\n\"You did that. You are amazingly strong, and you've done a great job raising Vicki,\" he said. I blushed as I turned away at the praise. My parents had told me to give up my baby because a teenage single mom couldn't be as good a parent as she would have with a married couple. I would like to think I proved them wrong; Vicki was a great kid. \"The good news is that you can pick out just the ring you want, provided it is under one thousand, nine hundred and eighty-seven dollars with tax.\" \n\n\"I'm not going to wipe out your savings,\" I said. \n\n\"I don't want to dip into my thousand-dollar emergency fund,\" he replied. \"Alpha Leo said he would pay for our wedding, though it will be modest. He would like us to choose the wedding venue, and the Pack will host a reception in the back yard. Leo and Catherine used to hold epic pool parties in the summer, and you know it will have lots of food.\" \n\nI thought about it; the wedding was for legal reasons and human interaction. In the werewolf world, our bond was present and unbreakable. \"Could I invite my friends? Girls I worked with, friends from back home?\" \n\n\"Sure. Alpha just orders no shifting while humans are around.\" I started to cry as we pulled off the freeway. \"What's wrong, Liv?\" \n\n\"When I was a kid, Mom and I would talk about the wedding I'd have. We had a lot of fun talking about it. Then after I was disowned, I didn't care anymore. I didn't date, I didn't have time for men, and marriage wasn't anything I worried about. Now that I'm planning a wedding, I don't have my parents in my life, and my grandmother is gone.\" \n\n\"The Pack will help you; I'm sure Anita will be thrilled.\" \n\n\"I know.\" I wiped the tear away. \"Do you think they'll be able to get a ring to match the wedding bands we found?\" Wolves didn't do silver, and I didn't like gold for jewelry. We could do white gold, but when I started looking online, I fell in love with a matched wedding band set made of tungsten carbide. It was engraved with trees and wolves howling into the sky. It was reasonably priced, beautiful, and practical, perfect for my new life. I wanted an engagement ring that would look right next to it. \n\nWe pulled into a store and talked with the jeweler. \"You're not going to find a match for that in a diamond setting,\" he said. \"Tungsten Carbide is strong but brittle. You can't move the prongs around for the stone.\" \n\n\"What would you recommend?\" \n\n\"You'll never get the silver color of the tungsten to match up with titanium, white gold, or silver. So, don't try. Go with a black gold setting for the engagement ring. It will match the black color at the base of this pattern on the band,\" he said. He found some examples; the darker matte color was a good match for what we saw on the screen. An hour later, Brent was on his knee, asking me to marry him, and he slid the half-carat diamond onto my finger as I said yes. \n\nEven with the order of the wedding bands, which we verified sizes on at the store, we didn't wipe out his savings. As we drove home with the setting sun, I kept looking down at my left hand. \"It's beautiful,\" I said. \n\n\"You're beautiful,\" Brent replied. There were squeals of excitement as I showed everyone my ring when we got home, especially when I showed them the wedding bands we had ordered. It was unconventional, but so was our love. \n\nAs we left for the St. James, I could feel the good mood of the day slipping away. Brent noticed. \"How do you want to handle this,\" he said. \n\n\"I don't want her to know anything more about my private life until I know if she will be included,\" I said. \"She would have seen you with me at the funeral with you, leaning on you. I should take this off,\" I said. \n\n\"No. You are my fiance,' and that isn't up for discussion. It's better to let her know you are moving on in your life, with or without her. Don't take that ring off for her.\" \n\n\"You're right,\" I said. \"I'm not going to apologize for anything other than sleeping with John without protection. Everything I did after that, I'm proud of.\" \n\n\"Damn right.\" We parked nearby, and he held my hand as we took the elevator up to Jimmy's. The hotel bar was old-fashioned, hearkening back to the days of speakeasies. Leather furniture, dark oak woodwork, and a wide selection of spirits and food awaited us per the website. I'd never been there. \n\nI spotted Mom moments after walking in. She had taken one of the small tables near the window, the low leather chairs around it. She looked surprised that I didn't show up with Vicki. \"Mom, this is my fiance', Brent Lawrence. Brent, my mother, Kathryn Andersen.\" \n\nBrent held out his hand to her; she paused for a moment, looking at my ring, then shook it briefly. \"It's nice to meet you,\" he said. \"We missed you at the funeral.\" \n\n\"Thank you for coming,\" she said. The waitress went off to get us diet cokes, plus another cocktail for Mom. I didn't know if we'd be staying long enough to eat yet. \"This is hard,\" she said. \"I've been told all my life that I needed to follow the lead of my husband, but I just can't do it anymore. He was wrong to disown you, Olivia. I'm so sorry.\" \n\n\"Sorry? About what? About pushing me away in my time of need? About valuing your reputation in the community above your own daughter? About pretending your granddaughter doesn't exist?\" Mom was crying now. It hit me. \"Dad doesn't know you're talking to me, does he.\" \n\nShe managed to shake her head, no. \"He thinks I'm visiting my sister in Duluth.\" \n\nWonderful. \"Why are you here? You've never defied Father in anything.\" \n\n\"And what did that gain me? My MOM died, and I didn't talk to her for the last five years of her life because she took you in after we disowned you. Sitting in that church, I realized I would NEVER get that time back with her, or with you, or with Vicki. I have a granddaughter who is almost five, and she hates me.\" \n\n\"Vicki doesn't hate you any more than I do, Mom. She doesn't understand.\" I'd never talked badly about my parents in front of her, for just this reason. \n\n\"After Nick left for home, I called my pastor. I'd never told anyone the full story; for an hour, I poured out everything to him, ending with what Vicki asked me at the funeral. When I was done, I asked him what I should do.\" \n\n\"What did he say,\" Brent asked. \n\n\"He asked how it was working for me so far,\" Mom said. \"I broke down crying. I told him my family was torn apart and I couldn't bear to continue this way. He then told me what an IDIOT I was to do this to you. He reminded me that true love required forgiveness, and I had shown none. You made a mistake, but you moved forward and raised a wonderful little girl without us. If you can find it in your heart to forgive me, I'd like to have you in my life again.\" \n\nWow. \"What is Dad going to say about this?\" \n\n\"He and I will be having a long talk when I get home. I can't go on like this, Olivia. I love you, and I miss you.\" \n\nWas it enough? Would my father change his mind? None of these questions mattered as I moved into my mother's arms for the first time in almost six years. We let the pain and heartbreak of all those years out, in public, as the bar patrons tried to ignore us. Finally, I said those three words I never expected to say to her. \"I forgive you.\" \n\nCh. 37 \n\nAlpha Leo Volkov's POV \n\nThe house cleared out as the new Pack members returned home, and Liv and Brent went off to meet Liv's mother. I called ahead to The Smokin' Oak and reserved a large table, to the shock of the hostess. I'd been going there on Sundays for years, always alone, always at the same table. \n\nAnita drove my truck, and I was stuck in the back with Vicki. My scooter was driven up into the bed using ramps, then strapped in place. Adrienne rode shotgun, as I pointed out some of the local sights as we drove east towards Red Wing. Mike drove the second car with Larry and Donna, and Brian Knight drove a third with his mate Carla. Susan was up in Minneapolis, getting close enough to Todd to link to him about the agreement we'd made. \n\nAnita parked in a handicapped entrance, using the temporary tag my doctor had given me. The smell hit us before the truck doors even opened. The smell of open fire and meat was thick. My wolf and I loved the scent of the place. \n\nIt took a few minutes to get my scooter down and join the rest inside, where they waited by the hostess table. \"I think I might like this place,\" Adrienne said as she stood behind me. \n\n\"I want RIBS,\" a fascinated Vicki said as she watched the meat moving around. Mike had picked her up so she could see over the screen that kept children from burning themselves. \n\nThe owners knew how to get people in; the oak fire and rotisseries were right by the entrance. Motorized racks carried slabs of pork ribs, whole chickens, pork shoulders and beef around, letting them taste the flames and then move away to slowly cook and rotate. We were brought to our table, and I had Adrienne on my right and Vicki on my left as we sat down. The waitress passed out menus and took our drink orders. \"It all sounds so good,\" Adrienne said. \n\n\"May I suggest something,\" I asked and she quickly agreed. \"The Rotisserie Sampler Platter to share. We get ribs, chicken, pulled pork, brisket and beef tips plus the sides.\" \n\n\"I want RIBS,\" Sharkbait said, \"And I don't want to share!\" \n\nWe gave our orders, then the waitress asked Vicki if she wanted chicken strips or macaroni and cheese from the kid's menu. \"Full rack of ribs, please,\" she said. Our waitress looked at me and I nodded, so she wrote it down and moved on. \n\nAn hour later, she put the last of thirteen rib bones down onto her plate. \n\n\"Where does she put it,\" Adrienne said as she looked over at her. We'd finished ten minutes earlier, and I think she expected to eat some of her ribs, too. \n\nVicki went to point at her tummy, but her hand was caught by Anita and the wet wipe she had in her hand. Vicki's hands and face were cleaned of the sauce, which took several wipes, then she took her to the Ladies Room to wash up. Mike followed, standing guard outside the door without being told. \n\n\"She's quite the girl,\" Adrienne said. \"I can see why you claimed her.\" \n\n\"She saved me as much as I saved her,\" I said. I told my mate the story about my friendship with Liv, and my decision to give her Catherine's car. \n\n\"Did you have a romantic interest in her?\" \n\n\"No, and even if I had, she wouldn't have gone along with it. At the time, I had nothing. I decided to go through Catherine's things, finally, and I knew she could use reliable transportation. I didn't need the money as much as I needed to feel I had done something worthwhile. I knew she had a daughter, but I didn't know she was a werewolf until I was invited to her place for Christmas. Vicki hadn't shifted and was completely unprotected; my wolf claimed her as his own that day.\" \n\n\"I can't believe there was a preschool werewolf child out there with no one around to help her,\" Adrienne said with a shiver. \"If she had her first shift among humans, it would have been a disaster. You did the right thing; even the Council would have struggled with helping her since she had no ties to any Pack.\" \n\n\"They are more than just my Pack members. I see Liv as the daughter I should have had, and Vicki as my heir. I love them both, and I hope you'll grow to love them as I have.\" \n\n\"That girl could melt the hardest heart,\" she said. \"Mike said she spent twenty seconds with Liv's Mom. I bet they find a way to reconcile, just to spend time with her grandchild.\" \n\n\"They were foolish, and it cost them years of memories,\" I said. \"I was foolish, and it almost cost me you.\" \n\n\"You recovered a lot faster,\" she said as she squeezed my hand under the table. \"As long as we are still breathing, there's still a chance.\" \n\nSharkbait came running back to the table, giving both of us a quick hug before we sat down. \"What was that for?\" \n\n\"Dessert, Unky Leo?\" \n\nI reached across with my right hand and tapped her distended stomach. \"I don't think there is room in there for anything, Sharkbait. Even Great Whites stop eating when their stomach is full.\" \n\n\"But... they have CHOCOLATE CAKE here. With ICE CREAM.\" \n\nI looked over at Adrienne, who was trying not to laugh. \"Would you like dessert, love?\" \n\n\"I couldn't eat a whole piece,\" she said. \"Maybe we get one slice with three forks?\" \n\n\"Yaaay,\" Vicki said. A few others decided to share desserts, and we somehow managed to put the thick slice away. I put a stack of cash down to cover the bill and a generous tip, then used the restroom before we left. Once again, I was frustrated by the injuries. I couldn't wait until I could get my arm out of the sling and get a walking boot. \n\nAs I waited in the back seat for the scooter to be tied down, I checked in with Brent. I was pleased that there was reconciliation occurring with Liv's mother; I didn't want her to be without family at her wedding. \"We are eating dinner here, then Liv is going to go up to her room for a while. I think I'll try their fine whiskey collection while I'm waiting.\" \n\n\"Take as much time as you need. Sharkbait can barely stay awake, so we'll get her home and to bed. Tell Liv that she ate a full rack of ribs by herself.\" \n\n\"Wow. That's impressive.\" ",
        "\"And then she had chocolate cake and ice cream for dessert.\" \n\nI could sense his amusement over the link. \"We need to take Vicki out running again to work off those calories.\" \n\n\"School starts in the morning, she'll burn it off with the others.\" I was serious about her not returning to public school, and this weekend had solved the problem completely. The wolves of the former Welch Pack homeschooled through fifth grade, and Vicki would slide in with them. Paul and Lois Temple would resume the Pack school, which would move to my basement. Their classroom lessons would be alternated with wolf training that Anita and some of the other ladies would supervise in the woods on my property. \n\n\"We're heading home now. Take care of your mate.\" \n\n\"Of course, Alpha.\" By the time we turned onto Highway 61, Vicki was asleep, and I was drowsy. I updated everyone that Brent and Liv would be back late. \"Adrienne, what are your plans for tomorrow?\" \n\n\"I hadn't thought about it,\" she said. \"What are you doing?\" \n\n\"I need to go to the construction office and start cleaning up the mess,\" I said. \"I need to let all my subcontractors, suppliers and customers know that I'm back in charge before they move on to someone else.\" \n\n\"You should stay with us,\" Anita said. \"We're setting up the Pack school, and we have a lot of work to do with combining Pack funds and duties. I could really use help from you, Larry and Donna to untangle the mess.\" \n\n\"I've not agreed to be your Luna,\" Adrienne protested. \n\n\"She needs your help, not your signature,\" I replied. \n\n\"Fine.\" Great, she said FINE, which every male knew meant ANYTHING except that she was fine. Oh well. I would use any means, fair or unfair, to win her over. Groveling? Check. Wining and Dining? Double-check. Flowers? Roses set for morning delivery. Cute kiddos? Sharkbait and a half-dozen more in the basement. She'd be back in my bed tonight, this time without her wolf forcing her there. \n\nVicki would be there too, I was sure. With her mother and Brent out late, she'd want her Alphas. That bond was forming quickly, as the wolves of my mate and heir got closer. I sought to make it impossible for her to leave when her Council job was done. \"Adrienne, do you like your Council job?\" \n\n\"I'm good at It, and the Council needs my help,\" she quickly replied. \n\n\"I understand that, and I know your reputation. That wasn't my question, though.\" \n\nThat kept her quiet, and she watched the town turn into the Cannon Valley as she thought. \"I needed the job as much as it needed me,\" she finally said. \"I had too many memories in my Pack, and my son and his mate needed to make their own way as Alphas. Staying busy helped me to recover from the loss. It gave me a reason to get up in the morning.\" \n\n\"I wish I had your strength,\" I said. \"I couldn't even work, and then when I was alone, I did nothing. I wasted away for years, doing just enough to exist. It's going to be a shock to my system when I show up at work in the morning.\" \n\n\"That's the secret, you wake up and work and hope it gets better,\" she said. \n\n\"You make it better,\" I said. We made it home and went inside; Anita took Vicki upstairs, waking her to take a shower and get dressed in her Finding Nemo pajamas. Adrienne went to her room to get ready for bed. Mike helped me get into my shower, where I could use the bench built into the limestone surround. He helped me into my bed, letting me scoot into the middle. Vicki backed up to me in her sleep, instinctively looking for the warmth and protection of her Alpha. \n\nI set my phone alarm for seven and placed it on the table, turning out the light. A few minutes later, the door opened, and Adrienne walked in. I opened the covers for her and she slid in, her soft flannel pajamas and skin against mine. \"I wasn't going to be able to sleep apart from you, not anymore,\" she said quietly. \n\n\"I don't ever want to sleep apart from you. I love you, Adrienne.\" I didn't know what to expect from that; I knew she was still upset, but I was doing all I could. She rolled towards me, reaching for my lips with her own. They touched, setting off tingles, then more as her hand cupped my cheek. She deepened the kiss, her hand moving around behind my head to pull me closer. I didn't want it to end, but it did. \n\n\"Goodnight, Leo.\" She settled into my side, and I stroked her back lightly as she dropped off to sleep. \n\nMy wolf and I were happy, our mate and our heir next to us and sleeping comfortably. It was too perfect to last, and Monday was coming. \n\nCh. 38 \n\nSusan Miller's POV \n\nMinneapolis, Minnesota \n\nTodd's lawyer had met with him following his arrest. The US Attorney's office charged him with two counts of kidnapping, second-degree murder, and four counts of attempted murder from the hit-and-run. Since the arrest had come late in the week, his arraignment would not be until Monday morning, at the Federal Courthouse in Minneapolis. He was facing life in prison. \n\nSaturday \n\nI met with my mate's lawyer the morning; he was a werewolf in the Afton Pack, so we could talk about the unique problems of werewolf incarceration. He'd gotten Todd to sign over power of attorney to me so I could operate the business and banking while he was in prison. That was what gave me the authority to sell Alpha Leo all but five percent of our stake in Volkov Construction. \n\nThe picture Jonathan Turner, Esquire, painted about his chances of beating the charges wasn't encouraging. Todd had admitted the hit and run to him, but vehemently denied anything to do with the kidnapping. \"Even with attorney-client privilege, he says he was set up,\" Jonathan said. \"He has no idea where the phone and the money came from. It's going to be difficult for me to prove he was framed since the desk is his, and his office is always locked. Then he went after the targets again with a dump truck.\" \n\n\"Will he be granted bail?\" \n\n\"It's unlikely given the seriousness of the charges. If the judge grants it, it will be a high amount, five to ten million dollars. You'll have to come up with ten percent in cash to cover the bail bond.\" \n\n\"It wouldn't matter if it was five hundred thousand. I don't have any money, we're almost bankrupt,\" I told the lawyer. \"The house is mortgaged to the hilt, and our credit cards just got maxed out with your retainer.\" \n\nHe nodded. \"It's probably best that he remain there for now. Alpha Leo wants his pelt above his fireplace, and the Council can't be happy with him either. Monday morning, the charges are formally entered. He'll give the judge his not guilty plea, and a court date will be set for a few months down the road.\" \n\n\"The construction company will go bankrupt before the trial, and I'll have nothing,\" I said sadly. \n\n\"I'm sorry, Susan. The retainer covers the cost of my services, but a trial is going to be much more expensive. He really should consider a plea bargain when it is time, or he'll never get out.\" \n\n\"What does jail do to a werewolf?\" I'd heard stories, but I'd never had to deal with something like this. \n\n\"It slowly kills them. With the cameras and the cramped quarters, you can't shift. You're also separated from your Alpha and your Pack. If we don't intervene, his wolf will slowly die over the next few years. We can't allow that to happen, as there is a chance it goes feral and shifts among them. At some point, they have to be taken out if they don't kill themselves first.\" \n\nI nodded. \"That is why we don't imprison our guilty. We kill them quickly and quietly.\" \n\n\"In part. The werewolf society can't incarcerate a wolf long-term and expect to get a functioning member back. If Todd hadn't been arrested, he'd be facing Council trial and execution by tomorrow. He attacked a fellow Alpha without proper notice and challenge, and he caused the forced change of a human. Both of those acts carry the death penalty with the Council.\" \n\n\"So, what do we do?\" \n\n\"We worry about the arraignment first.\" \n\nSunday afternoon \n\nI felt a lot better after my meetings with the Council and Alpha Leo. The deal he offered was beyond generous for my children and me, but the price would be high for Todd. He would have to plead to something he did not do. For once in his life, he would have to sacrifice for the greater good. \n\nI didn't know if he would do it. Todd was my mate, but that didn't blind me to the kind of person he was. He manipulated and schemed to get to where he was, and he was good at it. I parked at Fort Snelling and got on the light rail into Minneapolis, getting out at the Hennepin County Government Center. Moving into the retail buildings nearby, I found a spot on the skyway where I could sit and look at my phone. No one passing by would ever know that I was mentally communicating with my mate and husband, in a jail a few blocks away. \"Todd? Can you hear me?\" \n\nThe answer was immediate. \"Susan, FINALLY. Where are you?\" \n\n\"In the skyway a few blocks away. How are you?\" \n\n\"Frustrated and pissed off. My lawyer can't get arraignment until tomorrow, so I've been stuck with these lowlifes all weekend. You have to get me out of here.\" \n\n\"I'm not sure I can, Todd. I talked to your lawyer, and he thinks you will be denied bail.\" \n\n\"That's bullshit. Get the money ready.\" \n\nHe was delusional. \"WHAT money? Tell me where the hell I'm going to come up with a half-million in cash, maybe more? The company is going bankrupt, and you've already borrowed against all the equity in our home. I don't know how the kids and I are going to live while you are in prison, Todd! The Pack is gone, everyone is leaving, and I'm stuck with the bills. We will be living out of our car before your trial even starts!\" \n\nHe didn't say anything for a while. \"Ungrateful bastards. They should be raising money to get me out.\" \n\n\"They're scared and pissed off at what you did. The Council is here now, and they aren't happy that our conflicts are spilling out into the human world. They want it fixed quickly and quietly. They've already spoken to Alpha Leo.\" \n\nI could sense his anger as that name went to him. \"Fucking has-been Alpha Leo, screwing up everything. Why couldn't he just die after losing his mate like everyone else? It's all his fault, him and his brother.\" He didn't say anything for a bit. \"If Ivan could have kept his dick in his pants after getting mated, there would not have been a problem here. I tried to kill that guy for you, and for the Pack.\" \n\n\"Killing a little girl and her human mother is somehow supposed to be good for the Pack? It's RUINED us, Todd! No Pack will touch us now.\" \n\n\"The money Luna Brenda offered for her death would have kept the business solvent until spring. If the boys had finished the job down in the ravine, we'd have the money already. Alpha Leo hadn't been recognized by the Council formally, so they'd get over that.\" \n\nI just shook my head. \"They aren't 'getting over' anything, Todd. The Chairman is here with his mediator and his guards. They've already interviewed men that were part of the attack, and they know what you did and why. Luna Brenda has confessed to offering you the money to kill an Alpha and his heir. They are going to try you in absentia, Todd. You won't need bail, you're better off where you are. You will have a death sentence on you in our world if you ever get out of jail.\" \n\n\"They can't do that! I'm an Alpha!\" \n\n\"Not anymore, my mate. You can't be an Alpha without at least five members, and all you have left is your family.\" I let him think about that for a bit. \"What kind of life will we have with you in jail? No Pack will take us, and with the company in bankruptcy, I'll have NOTHING.\" \n\n\"I'll figure something out,\" he said. \"There has to be a way out of this.\" \n\nIt was time to give him the offer. \"I was given an offer, via the Council mediator, that would settle the human involvement in this mess and provide for our family. They want you to plead guilty to all charges, including the kidnapping, and take the prison time.\" \n\n\"WHAT?\" I could feel his rage over the bond; he was probably hitting or breaking something right now. I waited calmly for almost ten minutes before he came back to me. \"I didn't order the kidnapping; that is a setup.\" \n\n\"I know you didn't, and so do they, but if the FBI keeps poking around, it will lead places the Council does not want them going. You're guilty of the four counts of attempted murder, and there's nothing we can do about that. Talk to your attorney and get him to work out a plea deal.\" I kept talking, telling him that he should say he had become obsessed with Olivia after seeing her at Wiederholt's. He had heard of the kidnappers through some ex-cons he'd met. He'd offered ten grand upfront and ten more after delivery to bring Olivia and Vicki to him; Vicki was taken to ensure Olivia cooperated with his plans for her. He never thought they would be stupid enough to kill the grandmother. The hit and run was a target of opportunity; he'd seen Liv with Leo at Wiederholt's that Tuesday. Leo had saved the two, and now they looked very friendly with each other. If he couldn't have her, Leo wouldn't either, and he could take out all three at once as they went home. \n\n\"That's it? All I have to do is confess to enough felonies to keep me behind bars forever, and then what?\" \n\n\"Then I sell off most of the company before it goes bankrupt. The mortgage on our house gets paid off, and enough debt gets cleared for the company that it has a chance to grow again.\" \n\nHe didn't say anything for a bit. \"Who is buying my part of the company?\" \n\n\"Leo Volkov.\" If I thought he was mad before, he was worse now. It took fifteen minutes this time before he came back to me. \"Most of the Welch Pack is now with him. He agreed to let us stay in the Pack, and I can keep working in the office. With the mortgage paid down, we won't have to sell our home. All we need to do in return is for you to plead guilty.\" \n\n\"No FUCKING way. Not Leo. He doesn't get to win. I'll die before I let that bastard have his company back. Susan, you are FORBIDDEN from having anything to do with Alpha Leo or the Miesville Pack.\" \n\nThat asshole was going to ruin it all. \"It's the ONLY WAY, Todd! If we don't grab this lifeline, you're dead, I'm broke, and the kids and I are on the street! Is that what you want?\" \n\n\"I want you to kill Leo and Vicki, Susan. Finish the job. If they die while I'm in jail, the lawyer can use that to show that I'm innocent.\" I didn't know how to respond. \"It's the only way we can be together again.\" \n\nCh. 39 \n\nVicki woke up first, getting up and quietly leaving the room. My alarm went off a few minutes later; it was Monday. For the first time in years, I was going to work. \n\nAdrienne rolled over and grabbed my phone off the side table, turning it off. \"Morning,\" she said. \n\n\"Good morning, love,\" I replied. It had been another restful night, no nightmares or waking up. She helped me sit up, removing the arm immobilizer. I moved my shoulder around, and there was soreness but no pain. \"At least I can start using this arm now,\" I said. \n\n\"Keep it in the sling unless you need it out, and it will heal faster,\" she said as she helped me into my scooter. \"When do you change to a walking boot?\" \n\n\"I have an appointment Wednesday,\" I said. She went to her room to get ready while I went into the bathroom and did the same. When I got out to the table, Donna was serving pancakes and bacon to Sharkbait, Larry, Mike, and Anita. I ruffled the girl's hair as I drove by. \"Excited for the start of school,\" I asked. \n\n\"Pack school!\" I pulled into the open spot as Vicki told me about the classroom downstairs that had been put together. \"No more bus rides!\" I was happy that the new Pack would be doing homeschooling, at least for the younger pups. It was hard to teach all the classes and have all the sports and extracurricular activities in middle and high school, we sent them to public school then. \n\nLiv and Brent came downstairs towards the end of the meal and sat down after both kissed and hugged Vicki. \"The meeting with your Mom went well,\" I asked. \n\n\"Better than I thought it would go,\" Liv said. \"Mom wants to be part of our lives again, and the two of us have made up, but it's far from the end of the story. She has to convince Dad, and before that, she has to visit her sister in Duluth. If she doesn't, Dad will be very upset that she lied to him.\" \n\n\"Why haven't you kept in touch with your aunt,\" Larry said. \n\n\"My father has four brothers, my aunt is married to the youngest,\" Liv said. \"When Dad disowned me, he tried to make sure I had no one else in the family to run to. He told them that it was them or me. The only one he couldn't control was Grandmother; she lost touch with both her daughters after taking me in.\" \n\n\"That's messed up,\" I said. \n\n\"Appearances are everything to my father.\" \n\n\"I'm surprised he didn't put you in the stocks, flog you and then make you wear a scarlet A. Does anything change now that media has told everyone you are a single mom?\" She shrugged her shoulders. All this because a college girl made a mistake being with a married man, then kept the baby. \"I imagine she's not going to have an easy time convincing your father to let you back in.\" \n\n\"She knows. Dad is rigid in his ways. Changing his mind now would be admitting he was wrong.\" \n\nI just shook my head. I noticed Vicki had been following along with the conversation. \"Will she be my Grandma?\" \n\n\"She wants to see you too. I invited Grandmother to stop by the house on her way up to Duluth,\" Liv said. \"She should be here in an hour or so.\" \n\nI'd be gone by then. \"What are you planning to tell your Mom?\" \n\n\"None of the werewolf stuff, obviously. I thought I would take Mom up to the apartment and show her where Vicki and I live. Brent doesn't have anything up there, and we won't mention he's living in the house. It's hard enough knowing we're getting married soon.\" \n\nI nodded. \"All the other students will be arriving then, so we'll get them downstairs quickly and let Sharkbait stay upstairs with you. No shifting, obviously. Vicki, you need to be careful with what you say about your school and your life here. No mentioning Packs, wolves, or shifting.\" \n\n\"I know, Unky Leo. Mommy told me.\" \n\nLiv looked over at me. \"What do I say about you? Or my work?\" \n\n\"Work is on hold until things settle down,\" I said. \"As for me, I'm related through Vicki, and I'm helping you both out. It helps that I've known you for years.\" We finished up the guys helped me out to the garage. Adrienne's rental car was in my bay; my truck was totaled, but I hadn't picked out a replacement yet. There wasn't much of a point until I could drive. After I got in, they loaded the scooter in the back of the sport-utility, and we started driving towards Red Wing. \n\nAs we pulled through the fence into the parking lot of Volkov Construction, I started to get a little emotional. I remembered every aspect of this, from clearing the lot to furnishing the office. I could see a few cars here already as we parked. \"Susan is here,\" I said. \n\n\"Good, you have a lot of work to do in there,\" Adrienne replied. That was true; when I entered the office, three Pack members were waiting with Susan for me. Luis Hernandez, who did drywall and roofing, was sitting in the corner with his McDonald's bag. Rufus Washington was leaning against the wall; he is our plumbing supervisor. Craig Price, our Site Foreman, was at his desk next to mine, with Susan at her reception desk by the door. \"Good morning, everyone,\" Adrienne said as she held the door for me. ",
        "\"Good morning, Alpha, Luna,\" Susan said. \"We have no active work sites today, but we have a big problem. Todd isn't going for the deal,\" she said. \"In fact, he ordered me to kill you and Vicki instead.\" \n\nI drove over to my desk as everyone watched me for a reaction. \"I kind of expected Todd would do that,\" I said. \"Thank you for telling me.\" \n\n\"I'm sorry, Leo. I did everything I could to convince him, but he thinks with the two of you dead, his lawyer can argue the real criminals are still out there. What do we do now?\" She looked beyond nervous, she was shaking, thinking the whole deal was going to fall apart now. If it did, she'd be left destitute. \n\n\"You do NOTHING about this,\" Adrienne said. \"This is now Council business, and my job here was to make sure the agreement was enforced.\" She looked at the clock. \"I need to call the Chairman and update him, then get my orders. I don't know how long I'll be busy,\" she said. \n\n\"Do what you need to do, one of them can drop me at home at the end of the day,\" I said. I reached my hand up, pulling her into a kiss. \"Be careful.\" \n\n\"I'll be fine, you clean up this mess,\" she said before turning and leaving. \n\nI watched her go, wondering what she was thinking. I didn't have a mind link with her yet since we hadn't mated, and she wasn't a member of my Pack. I didn't know what the Council would do, but I had my own problems. \n\n\"Susan, the deal was with you and I'll uphold my end. The sale goes through, you're still a Beta in my Pack, and you'll have your home equity loan paid off, and a job to support your family.\" Her relief was immediate. \"Meanwhile, there's a lot of work to do. Bring me the bills.\" \n\nShe picked up the stack of them and placed them on my desk. \"I need to get up to speed first. Let's start with current projects and work our way towards the bids.\" \n\nIt didn't take long, as there were only three jobs we were doing, along with contract snow plowing for a township. I was getting a better idea of how bleak things were when the door opened, and Jacob Burnley walked in. \"Leo! I didn't expect to see you here.\" \n\n\"It's Monday, and I'm behind already,\" I said to my lawyer. \"What brings you here?\" \n\n\"Paperwork. Susan and I need to file the forms with the Secretary of State's office for the ownership transfer, and we need to visit several banks to take care of the financials. Do you want to go along?\" \n\nI had a lot to do. \"Am I needed?\" \n\n\"Not really, you've signed the forms, and I have your power of attorney if anything else comes up.\" \n\n\"Then go, I'll keep working here.\" Susan grabbed her stuff and left with him while I picked up the phone. \n\nI spent the next hour speaking to every person that Volkov Construction had contracts with. I informed them that I had purchased back a majority share in the company, that we were not going anywhere, and that we would complete our contracts on time with quality. For those who had dealt with us before, I could sense the relief that I was back in charge. For the others, they were cautious, not knowing what the future would be with Todd in jail. We would have to prove to them that everything was all right. \n\nThe financials couldn't wait any longer, as many of the problems with suppliers would go away with the cash infusion I was bringing. I gave the company a zero-interest loan of two hundred thousand dollars, with Jacob taking care of the paperwork and the banking transfer. That gave me the money in the checking account I would need to take care of bills, and there were many of those. \n\nThe workers were another issue. Luis and Rufus were doing all right; they had filled in the gaps in work with Volkov by subcontracting for other jobs. Craig Price had more issues as the foreman; he'd had to lay off workers due to the declining amount of work, and the money issues were interfering with his purchases of supplies. Deposits for the current jobs had disappeared into the pit of debt that Todd had accumulated, and some of our suppliers had cut us off. \n\n\"Start making phone calls and getting crews together,\" I told Craig. \"I'll straighten out the suppliers.\" \n\n\"How many?\" \n\n\"I want the Herling job finished this week, the other two by the end of the month,\" I said. His eyes got wide, they had a lot longer in the contracts to complete them. \"I know. Right now, we need to have some wins to show Volkov is back. The best way to do that is to finish the current jobs ahead of schedule. If we need overtime, I authorize it. If we need to bring people on, do it, start with Pack and add others where you need. Don't skimp on quality, just get it done, starting this afternoon.\" \n\n\"Yes, Alpha,\" he said. He started making calls from his desk. January was a slow time for construction companies since you could only dig and work in spaces that were closed off from the weather. The good news is that as soon as the weather warmed, there was a backlog of homes and other work. It was that backlog I needed to be able to bid and win on if we were going to turn the company around. \n\nI made one call to the Sheriff's Department to find out when the dump truck would be released from the impound. The deputy was surprised to find out that I now owned the company again; since the truck's title read Volkov Construction, there would be no issues getting it back when it was no longer in evidence. The problem was that just like my pistol, it wouldn't get there until the trials were over. After all, Todd's lawyer might want to check it out too. \n\nWhile I was on the phone, I called the Ford dealer about a replacement for my totaled truck. There was a little sticker shock as I found out how much truck prices had gone up in the last six years, but they had what I was looking for on the lot. The insurance payout on my old truck would cover about a fifth of the cost, so the rest came out of my cash. It would be ready to go by four this afternoon if I showed up and signed the papers at three. \n\nSusan was dropped off after all the paperwork was done, and she brought Italian Beef sandwiches from Johnny's Gyros in town. Trying to eat the messiest sandwich in the world with one hand didn't work, so I took my sling off for lunch before I ruined my shirt. It was worth every twinge of pain as I chewed on the beef and hot peppers, though. \n\nI pulled the bills and the checks for the local suppliers and gave them to Craig. He left soon after, taking a few people and trucks with him to bring accounts current and pick up the supplies we would need for tomorrow. It hadn't taken him long to get the people he needed to kick the first project in the butt and get it moving again. \n\nI made a few more calls after lunch. I tried Adrienne's phone, and it went straight to voice mail. I left a message saying I loved her and missed her, and I'd be home before five with my new truck. Then I called Liv to see how the morning went for them. \"Did you Mom show up?\" \n\n\"She did, and she stayed with us for an hour,\" Liv said. \"I barely got a word in edgewise, between her apologies and Vicki showing her everything in her room. She said to thank you for saving our lives, and for helping us out.\" \n\nThis was good. Vicki deserved better than to be abandoned by her grandparents. \"How is school going?\" \n\n\"Oh, I think this class is going to be a handful,\" she said with a giggle. \"Poor Lois! At least she can growl at them to get them to stop messing around. Hopefully, it will all settle down in a few days.\" \n\n\"I hope so. The last two weeks haven't been much of a vacation for any of us.\" We talked for a few more minutes, then I called Mike and asked if he and Anita could pick me up from the Ford dealer at four. Once all the personal stuff was done, it was back to work, paying the bills and checking account receivables. \n\nI spent the last hour going over the maintenance histories of the equipment. It was as I suspected; maintenance had been pushed off to save money, and now it was coming due. I started to put together a plan to get it done before the spring season began. \n\nBy two forty-five, I'd had enough. \"Susan, can you give me to the Ford dealer?\" \n\n\"I normally don't leave this early,\" she said. \n\n\"School is ending, and I'm sure if you let the girls know you'd be welcome to stay for dinner,\" I said. \"You have enough drama in your life, let us help you.\" She grabbed her keys and the guys loaded me up, then she dropped me off in front of the dealer on the way through town. \n\nI checked out my new truck parked by the door. It was fancy, with leather seats and all the electronics of a car these days. I'd brought along the door and tailgate decals for the company, and those were put on the white truck while I was doing other things. The cost was coming of the business account, not my personal one, so it had to have the ads. \n\nAnita dropped Mike off just before four, and he got me in the front before folding the rear seats up and getting help to lift the scooter in. \"How was work,\" he asked. \n\n\"A lot tougher than retirement,\" I said. \"It feels good to be doing something again, though.\" \n\n\"Donna's making fried chicken tonight. What would you have done last year on a Monday?\" \n\n\"Chinese buffet. Eat as much as I could, then have the munchies two hours later,\" I said. \"Is Adrienne back?\" \n\n\"We haven't heard a thing.\" I pulled out my phone and tried calling, getting voice mail. This time I sent a text telling her I was on my way home and was hoping to see her for dinner. It was an adjustment for me, knowing my mate had her own career with the Council. I had no idea how we would reconcile her demanding job and its frequent travel with being my mate and Luna of the Miesville Pack. \n\nI hoped she accepted me so we could find out. \n\nCh. 40 \n\nCouncil Mediator Adrienne McInnis' POV \n\nI was pissed, and I let the Chairman know it as I drove my rental car away from Leo's office. \n\nYes, he was my mate, and he was making it DAMN hard to resist him. It hadn't started well, but I could understand him better than I let on. He wasn't over his fated mate less than five years after losing her to cancer. Could I blame a man for loving his mate that much? \n\nCould I fault him for losing his ability to lead his Pack? \n\nCould I blame him for hitting the bottle to dull the pain? \n\nCould I fault his wolf for hiding the knowledge from him when his wolf knew his human side couldn't handle it yet? \n\nNo. I couldn't blame it at all, because every wolf who survived the loss of a mate did the same things. Some pulled through faster, some killed themselves to join them. His mate made him promise not to do that, but she couldn't make him love again. It took a little girl with an Alpha mantle to break the shell around his heart. \n\nI had time to do the rest. \n\nIf he'd been able to shift and had taken me into the woods that night, we would have completed the mating that night. My wolf had already chosen him, and his wolf had accepted her. It was the other halves that we had to convince. \n\nAs I filled the Chairman in on what had happened with Todd, I was filled with anger. It wasn't at Leo, who had handled the situation better than I could have hoped. He was a good Alpha, who looked at the good of the Pack and not just himself. \n\nIt wasn't at Susan, who did her best to convince us and reported back to us his reaction. \n\nNo, it was at Todd. He threatened the life of my future mate and our Pack heir. For that, I wanted his balls hanging from my rear-view mirror, and his head on a fencepost. \n\n\"How is Leo handling this,\" the Chairman asked me. \n\n\"He acted like he expected him to reject the offer,\" I replied. \"Todd used to be his Beta, he's known him for years. He told Susan that it didn't affect the deal he had with her. She's going to keep her job and her home, and she's already in our Pack.\" \n\n\"Our pack? Do you have news for me, Luna McInnis?\" \n\nShit. That slipped out. \"My personal life is on hold pending the resolution of this mess, Mr. Chairman. I have not mated, nor have I promised anything as of yet.\" \n\nHe chuckled at that. \"Noted. I do appreciate your dedication, Luna.\" \n\n\"Thank you. Now, the deal Leo made would have had Alpha Todd admit to hiring the kidnappers, tying a nice little bow around the FBI investigation and leaving it in a file cabinet in the basement. Since he has refused, the next best thing would be if he were to expire before this goes to trial. The sooner, the better.\" \n\n\"I agree. How do you propose we do this?\" \n\n\"WE don't do anything, Mr. Chairman. I've got this handled. I will inform you and the rest of the Council when it is resolved.\" \n\nHe didn't say anything; he didn't have to. When he thought it through, he'd realize I'd given him plausible deniability. If it worked, he'd take credit for resolving everything and protecting our secret. If it went south, he'd truthfully say he never ordered me to do anything. He'd then blame it on the mate bond, with Leo driving me to commit the acts he'd never authorize himself. \"I'll wait for your call then, Adrienne.\" \n\n\"Goodbye, Mr. Chairman.\" I cut the call and pulled over to the side, finding the name I needed and setting the map program on my phone to give me directions. It would take me almost an hour to drive upriver to Stillwater. \n\nStillwater was a logging town, with beautiful Victorian homes along the Stillwater River northeast of St. Paul. The suburbs had filled in between it and the Twin Cities, and now antique malls, cafes, and shops filled the narrow streets of downtown. It was also the location of the State Prison. \n\nI drove through and into the open land north of the city, finally turning at the fire marker into a gravel driveway. Signs warned against trespassing or soliciting, and cameras pointed towards the road. A cattle gate ahead of me brought me to a halt about fifty feet from the pavement. I waited, knowing the Pack would send someone out when I didn't turn around. \n\nIt only took a few minutes before a man driving an ATV approached from the other side. He got off and walked around to my window as I rolled it down. I let my dominance out; it combined with my werewolf scent to bring him to a halt, his head bowed to me. \"Ma'am?\" \n\n\"Luna McInnis of the Council, here to see Alpha Mark Conway. Open the gate.\" \n\n\"Yes, Luna,\" he said as he practically ran for the gate. He opened it, and I drove through, not waiting for him. He would have linked his Alpha already. Sure enough, when the driveway opened to the large Pack House and some smaller homes, Alpha Mark was waiting at the steps with Luna Belinda. \n\nI parked at the base of them, the Alpha coming down to open my door. \"Luna McInnis, welcome to the Stillwater Pack,\" he said. \n\n\"Thank you, Alpha. Is there a place we can speak in private?\" \n\n\"Of course. You remember my Luna, Belinda?\" \n\nWe greeted each other with the traditional touch of the cheeks. \"You look radiant, Belinda. Are you expecting?\" \n\n\"Eight weeks along,\" she replied. \n\n\"Congratulations to both of you. Belinda, you should sit in on this meeting, if you have time.\" \n\n\"For the most powerful woman in the Council, I will make time,\" she said as she led me inside. The Pack House was of typical design; three stories plus a full basement in an E-shape. It was large enough to house fifty wolves, with dining, entertainment, and offices downstairs and living quarters in the basement and the upper floors. The Alpha offices were straight ahead, through heavy dual doors. \n\nI sat in a chair in front of his desk as Belinda offered me a coffee. \"Thank you for seeing me on such short notice,\" I said. \n\n\"Luna, this isn't a social call, is it.\" Mark was nervous, and Belinda might not have been informed of everything. I wanted her in here to gauge her reactions. \n\n\"It is not,\" I replied. I opened my messenger bag, removing the two photographs I'd taken off the Council registry. When werewolves changed Packs, reports had to be made to the Council. \"These two men and their families joined your Pack recently,\" I said. \n\nHe looked at them and nodded. \"Parker Nielsen and Thomas Conboy, transfers from the Welch Pack. Parker is newly mated, and Thomas has a mate and a young daughter. Both transferred after Alpha Todd's arrest. They had already quit the Welch Pack, which I understand is no more.\" \n\nI handed him Council warrants for their arrests. \"Parker and Thomas participated in an attempt on the life of Alpha Leo Volkov; specifically, the two of them went after the passengers in his back seat. One passenger was a human, who was bitten on the ankle and underwent a forced turn. The other was a girl, not even five years old, who is Leo's heir and holds the Alpha mantle.\" \n\nYou couldn't fake the surprise that took over both their faces. \"I didn't know,\" Mark said. \"I'll have them brought here immediately.\" \n\n\"Not yet,\" I said. \"These two are a small part of a much larger problem. Alpha Leo wants them brought to his Pack to face trial and receive Werewolf justice. However, the biggest problem our people have right now is in jail in Hennepin County.\" \n\nHe sat back. \"Alpha Todd.\" \n\n\"Yes. The human authorities have all the proof they need to put Todd in jail for the hit and run, but we both know that he was set up on the murder and kidnapping charges.\" Alpha Mark raised an eyebrow. \"Let's speak frankly. Nobody would be using your Pack members for the kidnapping of a child without you knowing about it. Don't waste my time on denials; I know Alpha John of Marengo came to you with the contract, and I know you sent your people to do it. The Council doesn't like activities that bring human interest, and your Pack is taking far too many risks.\" \n\nHe sat back as Luna Belinda tried to gather herself. Clearly, she hadn't known that her mate was involved in the kidnapping attempt that left an innocent human and two of their Pack members dead. \"You want something, or you'd have warriors here with silver chains already.\" \n\n\"Yes. We are more worried about the FBI and Law Enforcement's investigation into Olivia and Vicki Andersen that your illegal activities. This investigation needs to end in the next few days. If left unchecked, it's not just you that is in danger. It could affect Marengo Lake, Welch and Miesville.\" \n\nHe nodded. \"And the only way it ends is if all the principals are dead.\" \n\n\"Exactly. Todd hired your two, and when all three are dead, they declare the case solved and move on. You know the objective, and the Council and I don't want to know the details.\" I tossed him the arrest warrants. \"If this situation resolves itself in the next week, I will convince Alpha Leo to withdraw the charges with the Council against Parker and Thomas. You know the penalty for attacking humans or Alpha heirs; their pelts will be hanging from Leo's fence by sundown if the trial occurs. I'm sure they will be highly motivated to find another solution.\" \n\nBelinda came up behind her mate, her hands on his shoulders, her body shaking. \"What about us?\" \n\n\"If the situation resolves, you can consider this visit to be a warning to you. Keep your Pack in legal activities, and stay off the human's radar. If the Council has to spread the net wider to quash this problem, anyone involved in the kidnapping will not be spared.\" Her mouth dropped as she figured out what this meant to them. Her hand dropped to her stomach, instinctively protecting her child. \n\n\"I will make sure this problem is taken care of,\" Alpha Mark finally said. \n\n\"Don't fuck it up. The last thing we need right now is to draw even more attention to the case.\" I set my cup down on the desk. \"Thank you for meeting me. I can find my way out.\" \n\n\"I'll walk with you,\" Luna Belinda said. We left her mate behind; he would be linking his leadership and making plans that I did not want to know about. \"I can't believe this happened,\" she said as we walked towards the front door. \n\n\"You have a limited time to change the way your Pack operates before it destroys itself,\" I said. \"You'll need to push Mark to make the changes. Encourage him, guide him, and threaten him if necessary to get there. If the other Alphas find out what he has done, it won't just be Alpha Leo coming for him.\" ",
        "\"I understand,\" she said as she opened the front door. \"Thank you for giving us a chance to fix this.\" \n\n\"One chance, Luna. Make it count.\" With that, I got into my rental car and drove away. The gate guard was waiting, waving as I passed before he closed it behind me. I smiled as I turned back towards Stillwater; I could imagine the conversations going on in that office for the rest of the day. \n\nI made some phone calls as I drove in the general direction of my new home. I talked to my son Anthony, the Alpha of the Baxter Pack in Maine. He was overjoyed at the news that I had found a second-chance mate. \"When is the ceremony?\" \n\n\"I haven't accepted him just yet, and I still have Council business that takes precedence,\" I told him. \"We had a shaky start, and he's still getting his mind right from the loss of his own mate. I'll let you know.\" \n\n\"A Pack in Minnesota,\" he said. \"You couldn't find a mate in Florida, Texas, or Arizona? You know, so Pamela and I have a warm place to stay in the winter?\" \n\nI just laughed. \"I didn't get a vote in this either. Blame Luna.\" We talked for another thirty minutes until I pulled into the parking lot on the east side of the Mall of America. I needed to get some clothing until I could return to Maine and sell my house. I spent a few hours buying new outfits to get me through the next few weeks. \n\nAs I passed the Lower East Side, I saw the signs for SeaLife. Vicki's enthusiasm about her sharks was contagious; I needed to visit here with them soon. It was so different seeing things through their eyes. Young children hadn't been disappointed, betrayed, or hurt by the world. I chuckled as I thought about what she said about us; Leo was sad, but I was here and made him happy. It was so simple to her. \n\nHe made me happy too. \n\nI joined the rush hour traffic and headed south for home."
    ],
    "authorname": "partwolf",
    "tags": [
        "alpha",
        "luna",
        "pack",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-porch-wolf-ch-31-40"
}