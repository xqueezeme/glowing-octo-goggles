{
    "title": "Student Support Ch. 02",
    "pages": [
        "Chapter 2 \u2013 Liz, Autumn \n\nI found out more about Liz's problems a couple of days later. The rest of Charlie's visit was fun, we went to see a movie together and then had some dinner, and funnily enough I felt closer to her than I'd felt for some time. It was as if being apart had made us appreciate each other that much more. \n\nShe left on Monday morning. I got a text from Maggie saying she had to spend time with her parents that evening, but she'd see me on Tuesday when I got home. I spent most of Monday and Tuesday in a state of aroused anticipation. I was following orders, I wasn't falling in love with her, but I was desperate to see her again, to hold her, to strip her naked, and, yes, to get her back into bed. \n\nI left work early on the Tuesday \u2013 they'd had enough unpaid overtime from me recently \u2013 and was home by five. I thought I'd indulge in a long shower first and enjoy the anticipation of her arrival, but when I arrived home there was a note on the door. \n\n\"Bedroom. ASAP. xxx\" \n\nI took the stairs two at a time. She was lying on my bed wearing nothing but one of my old shirts. She looked at me in pretend horror. \n\n\"Rats,\" she said. \"I was really hoping to fuck the UPS guy.\" \n\nI said nothing but began to undress. \n\n\"Ooh, the silent type. I like it.\" \n\nI just looked at her. My shirt was off now and I unbuckled my trousers and slid them off. \n\n\"Well, hello there,\" she said, looking at my crotch. \"What an interesting package you have for me.\" \n\nI stripped off my remaining clothes and walked around to the side of the bed. I had discovered over the previous weeks that Maggie enjoyed occasionally being bossed around in the bedroom \u2013 nothing submissive, just letting the man take the lead. \n\n\"Suck me,\" I said. \n\nShe swung herself around and sat on the edge of the bed. Then she lowered her head and took me in her mouth. It was warm and welcoming and I sighed aloud in pleasure. I began to rock slowly back and forth. \n\n\"I'm going to fuck your mouth,\" I said. She murmured her agreement. \n\nI reached down and placed a hand on the back of her head. Then I began to increase the rhythm, sliding my cock in a little deeper each time, careful not to choke her but sliding as much of my length into her mouth as I could. \n\n\"Turn around,\" I said. \"I'm going to fuck you from behind.\" \n\nShe stopped and did as she was told. I reached down and stroked her slit. She was wet, and I slid a finger in to tease her for a few seconds. Then I took my cock in my hand and ran the tip up and down her pussy lips, covering it with her moistness. \n\n\"Do you want me to fuck you?\" I asked. \n\n\"Yes,\" she sighed. \"Fuck me.\" \n\n\"Say please.\" \n\n\"Please fuck me. God, please fuck me.\" \n\nI slid my cock into her and she gasped. I was being deliberately rough with her, another thing I'd come to learn she occasionally liked. Later I could be tender with her, but for now I was being the brutal lover. I pumped away hard at her, no pretence at finesse or delicacy, just hard, animal fucking. \n\n\"Oh god, yes, that's so good...\" \n\n\"You like being fucked?\" \n\n\"God, yes, I love it.\" \n\n\"I've been thinking about fucking you all day,\" I told her. \"I couldn't wait to get my cock back inside you.\" \n\n\"God yes, I wanted you too.\" \n\n\"Such a nice tight little cunt you have.\" \n\n\"Your cock fits me so perfectly.\" \n\nShe was really getting into this dirty talk. She lowered herself down onto the bed and I lay on top of her along her back, pinning her down, still deep inside her, thrusting into her. \n\n\"I'm going to fucking come soon...\" \n\n\"Don't come,\" I ordered. \"Don't you dare fucking come before I do.\" This was a game we also played. \n\n\"I can't help it... Jesus!\" \n\nI fucked her even more savagely, ramming myself into her right up to my balls. \n\n\"I'm coming, I'm sorry, I'm coming so much!\" \n\nI felt her cunt tighten around me as her orgasm began. I slowed my pace to let her luxuriate in it, dropping down to a slower, softer pace for a minute or two as she gasped her pleasure. \n\n\"Keep fucking me,\" she said, as her breathing recovered. \"Don't ever stop.\" \n\nI upped the pace again. \n\n\"I want to see you... let me see you.\" \n\nI withdrew, she turned herself over and moved back on the bed, and I stretched out on top of her, supporting myself on my elbows. She wrapped her arms around me. My cock dropped comfortably back into position at the mouth of her pussy, and I pushed myself back into her. Even in those few seconds her pussy had contracted and she moaned again as it was stretched out once more. \n\n\"Now come in me,\" she said. \"Fuck me and come in me.\" \n\nI began to thrust deeply into her, encouraged by her sighs and the gentle scratchings of her nails across my back. \n\n\"Yes,\" she said. \"Like that.\" \n\nOur mouths found each other and we kissed deeply and passionately. The friction around my cock from her tight cunt was almost unbearable now. I had often prided myself on being able to last a long time but this wasn't going to be one of those occasions. \n\n\"Oh Jesus,\" I said. \"I'm going to come.\" \n\n\"Yes, you'd fucking better, I need your come in me, fuck me, fuck me harder...\" \n\nAnd I did, crying out as I unleashed what felt like a barrage of come into her gorgeous welcoming cunt. \n\n\"Yes oh yes, thank you, that's what I needed,\" she whispered, pulling me even closer to her. \"I love it when you come in my pussy.\" \n\nThe room swam for a while with the intensity of my orgasm. When I was able to focus again I found her looking at me with an amused, contented expression on her face. \n\n\"There's nothing better in the world,\" she said, \"than being able to make the man you love come like a train.\" \n\nShe must have noticed something flickering across my face at that. \n\n\"I love you,\" she said. \"Of course I do. But I'm not in love with you, so don't worry.\" \n\n\"Right,\" I said. \"Well, I love you too.\" \n\n\"I know,\" she said, smugly. \n\nI rolled off her, despite her grumbled protests. My elbows were complaining and I loved the post sex spooning we did. I lay on my side and rolled her backwards into my arms, her pert backside nestling on my thighs. \n\n\"I missed you,\" I said. \n\n\"I missed you too,\" she said. \"More than you should probably know. You'll get a big head.\" \n\n\"I think I'm feeling pretty big headed already,\" I said, quite truthfully. \"I get to go to bed with one of the most beautiful girls I've ever seen in my life and she seems to quite enjoy it.\" \n\n\"You noticed that?\" \n\n\"There were some little noises you made that gave it away.\" \n\n\"What, like when I yell I'M COMING JESUS FUCK I'M COMING at the top of my voice?\" \n\n\"That is one of the clues, yes.\" \n\nShe giggled and sighed happily. We lay there like that for a few minutes. \n\nThen she spoke again. \n\n\"I meant it when I said I love you. And I know you love me too. But... you know this doesn't have to be... exclusive, right?\" \n\nMy heart sank. I wasn't sure what to say. \n\n\"You have... a boyfriend?\" \n\nI was sad at the thought but also understanding. She should have somebody nearer her own age, of course she should. \n\n\"No, silly, of course, I don't!\" \n\n\"Oh,\" I said, confused. \n\nShe turned around in my arms and lay facing me, her big eyes looking into mine. I eyed her suspiciously. \n\n\"Now, don't freak out about this,\" she said. \n\nIn my experience whenever that had been said to me, freaking out was almost inevitable. \n\n\"I really, really think you should take Liz to bed.\" \n\n** \n\nI've not said much about Liz so far, other than some basic facts and that of all my daughter's friends, Liz was the one I was fondest of. Maggie was confident and gorgeous and outgoing and I'd always secretly fantasised about her. Also, the first part of this story was all about Maggie, that was where it all started, so it is right she should have centre stage. \n\nBut Liz was the one I felt the most affinity with. She was more like me, personality wise, shy with strangers, studious, more of an introvert. When Charlie was younger I'd often spotted Liz hanging around the periphery of the parties and the social gatherings, and I'd made special efforts to talk to her and involve her because I remembered being the same at her age. More than once we'd sat on the stairs together discussing something like astronomy or space travel while the others ran around us, shrieking and giggling. As she'd got older her shyness had faded slightly, and I think Maggie and Charlie deserve a lot of the credit for that. Academically, Liz was the natural leader of the group, but in nearly all other spheres she was diffident and nervous. The other two made sure she was never left out, they always looked out for her, and gradually a slightly more confident Liz had emerged. \n\n\"It's just boys,\" said Maggie, as she lay there in my arms. \"And this whole sex thing. She's scared of it.\" \n\n\"That's quite normal,\" I said. \"She'll find the right person when she's ready. There's no rush.\" \n\n\"But you're the right person,\" said Maggie. \"I should have seen it before.\" \n\n\"Maggie, I really don't think...\" \n\n\"Just shush for a minute.\" \n\nI shushed. \n\n\"Liz knows all about us, OK? And she's fine with it... but she's been asking a lot of questions, too? She's fascinated. She can't quite believe it when I tell her how amazingly great it is.\" \n\nPart of me was delighted at this. Part of me cringed at the thought of such intimate details being discussed so candidly. \n\n\"The thing is... she's actually quite scared of...\" Maggie paused, looking embarrassed. This was unusual for her. \"She's scared of... things being inside her.\" \n\n\"So she's still a...\" It sounded such an old-fashioned word I couldn't bring myself to say it. \n\n\"Virgin? Not exactly. She had this one experience \u2013 that's part of the problem \u2013 about a year ago, with this guy who was totally clueless, and it really hurt her, and she pushed him away and he stormed off and since then she's been too scared to try again.\" \n\n\"Poor Liz,\" I said, quite sincerely. \"I'm afraid most of us guys are clueless when we start.\" \n\n\"Well, I bet you were polite and thoughtful and gentle, at least. Anyway, Liz is convinced she's never going to have great sex. Or any sex, really. And it's really becoming an obsession with her.\" \n\n\"And you think I'm the one to lead her... to the promised land?\" \n\n\"Yes!\" \n\n\"No.\" I was adamant. \n\n\"Come on! You're not going to say you're not tempted? She's lovely!\" \n\n\"She is,\" I said. \"Totally lovely.\" \n\n\"And she's always been your favourite.\" \n\n\"She has not!\" Did I have any secrets from these girls? It appeared not. \n\n\"Of course she is. And quite right too. You're so similar. You're perfect for her.\" \n\nI wasn't really sure where to begin. \n\n\"And, er, what about us?\" \n\n\"Like I said, we're not exclusive. I love Liz, I love you, and I think this is just what she needs.\" \n\nShe gave me a stern look. \n\n\"But, she doesn't get an exclusive either. If you don't keep fucking me regularly I'm not going to be responsible for my actions.\" \n\n\"Maggie,\" I said. \"You are totally crazy.\" \n\n\"It's a brilliant idea. You'll see.\" \n\n\"And does Liz get a vote in this? She'd run a mile at the thought of it! And probably tell her parents and then I would have to move town \u2013 move country \u2013 Christ, I'd probably have to go and live on Mars.\" \n\n\"Nah,\" she said. \"She took a bit of persuading. But mainly because she thought you wouldn't be interested in her. She said that if you already had me, no way you'd be interested in her.\" \n\nShe looked at me slyly. \"Poor Liz. You have to help her. You know she's crazy about you.\" \n\nI closed my eyes. This was becoming a runaway train. \n\nAnd yes, part of me was delighted at the idea. And part of me, I like to think, really wanted to help. But I can't claim I think I should be knighted for my selflessness. \n\nMaggie kissed me, hard. \"You're going to do it,\" she said. \"I can tell.\" \n\n\"I'll think about it,\" I said. \"But you're a mad evil witch who probably should be locked up.\" \n\n\"Probably,\" she said. She reached down and took hold my cock. \"But until they do, and until Liz gets her turn to play, how about sticking this big thing back inside me for a while?\" \n\n** \n\n\"It's probably best if I sort out the details,\" said Maggie. \"I know you two \u2013 you'll be so embarrassed next time you meet up nothing will ever happen.\" \n\n\"I think you've done quite enough already.\" \n\n\"How about you just take her on a date? Yes... I think that would be best. Nowhere too close, of course, not where people might know you, but I think that would work. Take her to a movie.\" \n\n\"I can't go on a date with her! She's \u2013 literally \u2013 young enough...\" \n\n\"Yeah, yeah, your daughter... I know. But I think a date would work best. No pressure, just some time together, ease into the whole situation. When's good for you? Friday?\" \n\n\"Do I get to say anything at all?\" \n\n\"No, not really.\" She beamed at me. \"So - Friday?\" \n\n\"Friday,\" I agreed, grudgingly. \n\n\"Great. I'll come over on Thursday then. Make the most of you while I still can, before Liz wears you out.\" \n\n\"I'll try and talk to her,\" I said. \"But I very much doubt Liz and I will actually, well, do anything,\" \n\nShe looked at me scornfully. \"Wanna bet?\" \n\n** \n\nOn Friday evening I stood outside the cinema that Maggie had told me to be at, about ten minutes before the appointed time. I felt about fourteen years old. Or was it a hundred and fourteen? Anyway, I was on edge. I couldn't see how this could really work. And it felt rather sleazy. And a little exciting, of course. \n\nI paced around, checking my phone every thirty seconds or so, fully expecting to see a message from Maggie or Liz saying it was all off and I could forget all this nonsense and go home. \n\n\"Hello.\" It was Liz's quiet voice. Somehow she'd slipped in quietly and was just a few feet away, looking at me nervously. \n\n\"Hi! Liz! Hi!\" Suave, smooth. That was me. Just not on this occasion. \n\n\"I'm sorry about this,\" she said. \"I know it's stupid.\" \n\nShe was wearing a simple green dress that set off her short blonde hair very well. She'd had her hair styled, it gleamed and shone in a neat bob. She was shorter than Maggie and she seemed particularly small now as she stood looking at me with anxious eyes. She looked both eye-wateringly pretty and achingly vulnerable. \n\n\"It's not stupid,\" I said. \"It's... sweet and flattering and you don't need to apologise for anything. But I think Maggie's probably... well, she perhaps got a bit carried away.\" \n\n\"Yes,\" she said softly. \"I know. She really wants to help, but... this probably isn't it.\" \n\nI nodded slowly. \"Liz \u2013 I have to say though - you look wonderful.\" \n\nShe shrugged. \"Maggie made me do my hair,\" she said. \"I wasn't sure about it... but... I thought I'd try something different.\" \n\n\"It looks great,\" I said. \n\nWe stood there awkwardly for a moment. I looked at her. \n\n\"Anyway, we're here now,\" I said. \"How about I buy you some popcorn and some unhealthy sweet drink and we watch the movie and I drive you home? I'd like that.\" \n\n\"You sure? You're not just being nice?\" \n\n\"I would really love it,\" I said, realising I actually meant it. \n\n\"I'd like it too,\" she said. \n\nSo that's what we did. Armed with popcorn and drinks in containers that could have been registered in Panama, we went through into the auditorium and sat companionably together towards the back. \n\nShe arranged the popcorn in the holder between our seats and we dipped absent-mindedly into it over the course of the film. About half-way through I reached out for some and found her hand already there. I was about to withdraw it when something made me wrap my fingers around hers and I gave them a soft squeeze. She unwound her fingers and did the same to me. Then she leaned her head against my shoulder, and we watched the rest of the film like that, just holding hands, the smell of her hair strong in my nostrils. Of all the early memories of those girls, even with everything that followed, that is one of the strongest and the best. \n\nAt the end of the film I gently disentangled my fingers as the lights went up and I smiled at her. She smiled back, a more confident smile this time. We walked together back out to my car. \n\n\"How did you get here?\" I asked. \"Bus?\" \n\nShe shook her head. \"Maggie dropped me off.\" \n\n\"Ah,\" I said. I looked around nervously, only half-joking. \"I hope she's not watching us.\" \n\n\"I wouldn't be surprised,\" said Liz. \"She treats me like I'm twelve sometimes.\" \n\n\"Yeah, me too,\" I said, and was surprised and pleased when she suddenly laughed. \n\n\"I'll drive you home,\" I said. \"But best if I drop you off around the corner, OK?\" \n\n\"Mmm,\" she said. \"I told my mum I'd be at Maggie's.\" \n\n\"OK,\" I said. \"I'll drop you there.\" \n\nShe hesitated. \"Thing is, Maggie's going to be mad with me if I go back there. And probably pretty mad with you.\" \n\n\"Are you scared of Maggie?\" \n\nShe thought. \"A bit.\" \n\n\"Yeah, me too,\" I said, and she giggled again. \"OK \u2013 how about this? Come home with me, we'll have some coffee or hot chocolate or something, then you can sleep in Charlie's room and we'll invent a story for Maggie tomorrow.\" \n\nShe looked at me doubtfully. \n\n\"I promise not to scratch at your door,\" I said. \"I think Charlie has a can of Mace somewhere, if you feel the need for it.\" \n\n\"Yes \u2013 it's in her top drawer. I'm not worried about that. I know you'd never do anything like that. It's just... it feels like a lot of hassle for you.\" \n\nI looked at her. \"Liz, I've always enjoyed your company. You know that, I think?\" \n\nShe thought for a moment, then nodded. \n\n\"So keep me company,\" I said. \"And that's all we have to do.\" \n\n** \n\nAt home I made some coffee for me and hot chocolate for her and we chatted easily about her courses and some of the irritations I was dealing with at work. She seemed much more relaxed now, the pressure was off, nothing was going to happen and she was just enjoying being with me. I enjoyed it too, very much. Like I said, she'd always been my favourite, and having her all to myself was a special treat. \n\nAround eleven thirty she yawned suddenly. \n\n\"Time for us to go to bed,\" I said without thinking, and was a little mortified when I saw her suddenly blush. \n\n\"I'm sure Charlie's left some pyjamas here,\" I said quickly. \"She has about eight million pairs, as far as I can tell. Go on, you go on up.\" \n\nLiz just looked at me. \"If you're sure? I mean, I could go home?\" \n\n\"I'll take you home if you'd like,\" I said. \"But you're just as welcome to stay here. I'll even make you some pancakes in the morning.\" \n\nShe nodded, seemed to decide something inside herself, then got up and walked slowly towards the stairs. \n\n\"Thank you,\" she called back quietly. \"Good night.\" \n\n\"Good night Liz,\" I said, and I watched her go up the stairs. Then I cleaned up our mugs, tidied the kitchen, and went upstairs myself. Charlie's door was shut when I went past, though I could see the light coming through from under the door. I went on to my room and slowly got undressed. I was sorry for Liz, but glad the evening had gone as it had. I'd enjoyed it, I hadn't taken advantage, and although Maggie would be cross with me I figured that it had all been for the best. \n\nI thought it would take me ages to go to sleep. For all my lofty pure thoughts I was very aware that there was a deeply attractive eighteen-year-old blonde just a few doors away and that I had been expected to seduce her. I read for a while then found my eyes getting heavy and a few minutes after that I must have dropped off to sleep. \n\nI was awoken an hour or so later by the door opening. I groggily sat up in bed and tried to focus. Liz stood in the doorway, looking in at me. She wore a pair of Charlie's pyjamas that were too big for her, making her look even younger. \n\n\"Liz,\" I said slowly. \"Everything OK?\" \n\nShe nodded, then shook her head. She was obviously upset about something. ",
        "\"Hey,\" I said. \"Come and sit on the bed.\" \n\nShe advanced nervously into the room and sat gingerly at the end of the bed, about as far away from me as she could get. \n\n\"What's up?\" I said. \n\n\"I texted Maggie,\" she said. \"And she told me to \u2013 well, not to be such a coward. I should just come in here and... get into bed with you.\" \n\nThanks Maggie. \n\nI sighed. \"You don't have to listen to her, Liz. You know that. Never do anything you don't want to. Not with anyone, ever. OK?\" \n\n\"I know,\" she said. \"But... part of me did want to. Maggie knows that. She's just trying to help. It's just I'm so... I don't know... I just can't...\" \n\nShe was going to be in tears soon, I could see that. \n\nI hushed her gently. \"Don't worry,\" I told her. \"It's OK.\" \n\nI thought for a moment. Liz was a sad, miserable shadow at the end of my bed. \n\n\"How about we try this,\" I said. \"Get into bed, but over there, OK? I'll stay here, you stay there, and we can just lie there together.\" \n\nShe didn't move. \n\n\"I'd never do anything to hurt you Liz - let's see if we can do that, just for a while.\" \n\nShe got up and walked slowly around to the other side of the bed. Then she lifted the covers up and slid in, lying nervously right on the edge furthest from me. \n\n\"There,\" I said. \"That's ok, isn't it?\" \n\nShe nodded. \n\n\"Give me your hand,\" I said. She slowly pushed her hand across the covers towards me. I reached out and took it and gave her a gentle squeeze. \n\n\"Good night, Liz\" I said. \"Sleep well.\" \n\nWe lay there like that for a few minutes. I stroked her hand very gently but was careful to do nothing else. After a while I noticed her breathing changed, the longer, slower breaths of somebody asleep. I felt very protective of her, and rather noble. I will watch over you all night, I thought grandly and rather pompously, and promptly fell asleep as well. \n\n** \n\nThe morning sunlight woke me up around eight. I was lying right on the edge of the bed \u2013 subconsciously I'd obviously been keeping my distance from Liz all night \u2013 and I was rather stiff and uncomfortable. I stretched, and opened my eyes, and found myself looking straight into Liz's eyes. \n\n\"Hello,\" I said. \"How are you this morning?\" \n\nShe made a face. \"OK, I suppose.\" \n\n\"Want some breakfast?\" I was aware that I had a large and painful erection, and I adjusted my position quickly to ensure it remained hidden. \n\n\"In a minute.\" She was quiet for a moment. \"I like being here.\" \n\n\"OK,\" I said. \"No rush.\" \n\n\"I wish I didn't have this... hang-up,\" said Liz. \"I can't tell you... how many times I've dreamt about waking up with you like this.\" \n\n\"Really?\" I was absurdly flattered and touched. \n\n\"Oh yes. I always dreamed that one day I would. And now here I am, and you're right over there about to fall off the end of the bed, like I'm made of... fucking china!\" \n\nIt was so unlike Liz to swear that I couldn't help smiling. \n\n\"It's not funny!\" \n\n\"No,\" I said. \"It's not, but... I like it when you swear. You should do it more.\" \n\n\"Well... I just fucking might!\" \n\n\"Good,\" I said. \"Any other naughty words in your vocabulary?\" \n\n\"None of your... bloody business!\" \n\n\"Come on! A ten-year-old can do better than that. All this education... come on Liz.\" \n\nShe glared at me. \n\n\"Tits.\" \n\n\"Feeble!\" \n\n\"You're a fucking... bastard!\" \n\n\"OK, bit better.\" \n\nShe suddenly looked appalled. \"I mean \u2013 you're not \u2013 I just wanted to show you I could, you know, swear.\" \n\n\"I'm still not convinced,\" I said. \"You swear like a nun.\" \n\n\"I do not!\" Genuine indignation. \n\n\"Little Julie Andrews Lizzie, skipping around a mountain, singing songs.\" \n\n\"Fuck you!\" \n\n\"That sounds nice,\" I said, without thinking. She blushed. \n\n\"Yeah, right,\" she muttered. \"Why have me when you could have beautiful sexy Maggie?\" \n\n\"Because you're beautiful too,\" I said. \"You're incredibly attractive.\" \n\nShe looked at me dubiously. She wanted to believe me, I could see. \n\n\"You're gorgeous, funny, incredibly sexy and smart. But...\" \n\nI paused for effect. \n\n\"What? What's wrong with me?\" \n\n\"You're just totally crap at swearing,\" I said sadly. \"Which I'm afraid is a big turn-off for me.\" \n\nShe reached over and hit me. It was quite hard, too, a real blow on the shoulder. I was tempted to grab her and pull her to me and wrestle. If it had been Maggie I would have done. But with Liz I still sensed I had to be very, very careful. She wasn't quite made of china, but she was certainly brittle. \n\n\"Ow!\" I said. \"OK, I concede. You're great at swearing.\" \n\nWe looked at each other for a long moment. \n\n\"Thank you,\" she said after a while. \"For... you know. All this.\" \n\n\"You're welcome,\" I said. \"I'll get you some breakfast.\" \n\n** \n\nI went downstairs and started making coffee and pancakes. I thought she'd come down and join me after a few minutes, but when she didn't appear I put it all on a tray and headed upstairs. \n\nShe was still lying in my bed. I have to say it was a real turn-on seeing her there. \n\n\"You want your food here?\" I said. \n\n\"If that's ok,\" she said shyly. \"I... like being in here. I told you I used to daydream about it. I'll probably never get to do it again, so, well, I thought I'd make the most of it.\" \n\n\"No problem at all,\" I said. \n\nI passed her pancakes and some coffee and she set to with quiet enthusiasm. I nibbled a pancake myself but they weren't my favourite way to start the day and I was really just keeping her company. \n\n\"How many texts have you had from Maggie this morning?\" she asked. \n\n\"Two,\" I said. \"You?\" \n\n\"Three.\" \n\n\"Ah,\" I said. \"Good old Mags. I guess she's not asking about what you had for breakfast.\" \n\n\"No,\" she said. She blushed. \"The last one said... no, I can't say it.\" \n\n\"That's ok. I can probably take a guess.\" \n\nLiz paused, then took a deep breath. \"The last one said \u2013 just get him to fuck you already.\" \n\n\"Wow,\" I said. \"Who said romance is dead?\" \n\nLiz didn't laugh. She was deep in thought, and I suspected none of it was healthy. I really wanted to help her if I could, but I was stumped as to what I could do. Definitely she was too wound up for any kind of seduction at present. \n\nThen inspiration struck. At least, I had an idea that I thought was worth a try. \n\n\"Can I tell you about my first girlfriend?\" I said. \n\n\"Your first girlfriend? Sure \u2013 but why?\" \n\n\"Well, you might find it interesting. And relevant. And... I don't know. I've never told anyone else about her, not even Charlie, and you remind me of her, a bit.\" \n\n\"OK,\" she said. \n\n** \n\nSo I told her about Nicola. I'll edit out the interruptions and repetitions and clarifications and so forth, and I may have told it in a slightly less explicit way, but the essence of it was this: \n\nI met Nicola in college when I was eighteen. I'd never had a girlfriend before then, not even been on many dates. Nicola was blonde, petite, smart - smarter than me \u2013 and incredibly sexy. I always felt she was out of my league, but somehow I got up the courage to ask her out and maybe she was feeling benevolent that day because she said yes. The first date went well, I made her laugh and she kissed me enthusiastically at the end of the evening. Later, she told me the fact that I was such a good kisser made her agree to a second date. \n\nWe just clicked. Sometimes you find people who you just know are right for you, conversation is easy, chemistry is strong, the humour is mutual. And Nicola and I were like that. We spent nearly all of our spare time together. And the sexual attraction between us was amazingly powerful. It was almost unstoppable. \n\nBut, she didn't want to have sex with me. She wanted to stay a virgin until she got married. I don't know why she had such old-fashioned ideas but she was absolutely implacable about it. \n\nYou can imagine that caused me quite a lot of confusion and frustration at first. \n\nWhat you probably can't guess is that I think I learnt more about sex from my time with Nicola than I ever did with anybody else. \n\nShe wanted to remain a virgin. But she was up for nearly everything else. Rubbing against me was her favourite. She could do that for what seemed like hours, until I could have sworn I had friction burns on my private parts. Oral, she loved, she would suck me off with great delight and would welcome me going down on her. I could touch her, rub her, pretty much do anything except penetrate her. I learnt how to give her the most tremendous orgasms. She loved me to massage her. I learnt how to touch and tease her with my fingers and tongue, how to take her to the edge and back down again, over and over, until she was nearly begging for me to give her release. \n\nThis all took time. She was a patient teacher and an enthusiastic one. I was heartbroken when she left me. She said she'd found the love of her life, a guy called Michael who was already going bald and who seemed completely unremarkable to me, but there was no changing her mind. \n\n** \n\n\"He was a lucky guy,\" I said. \"And I was lucky to have met her, and I'm always grateful I did.\" \n\nLiz listened to all this, absorbed. \n\n\"It's really sexy hearing all that,\" she said. \"So... that was your first girlfriend?\" \n\n\"Yes.\" \n\n\"Lucky girl,\" she said. \"I bet not many men would have been so patient.\" \n\nI shook my head. \"I think you'd be surprised. Sex is lots of different things, and there was really only one thing we didn't do. I would have liked to do it, sure, but I enjoyed the hell out of all the others.\" \n\n\"But I don't want to not do it,\" she said. \"In fact, I really want to. I'm just scared of it.\" \n\n\"I understand,\" I said. \"But I think you're thinking of sex as this one thing, rather than this spectrum of things. Maybe try enjoying some of the other things first, and then see if your feelings change. Even if they don't, you'll still have a pretty good time, I think. And it will be a lucky boy who you decide to share those things with.\" \n\n\"I don't know,\" she said doubtfully. \n\n\"Think about it,\" I said. \"You should probably get going.\" \n\nShe nodded. \"But what are we going to tell Maggie?\" \n\nI reached for my phone, and tapped out a short message. I showed it to her. \n\nAll good. We had a lovely time. Am going to ask her for another date next week. X \n\n\"What do you think?\" \n\n\"Really? You'd like to ask me on another date?\" She seemed to glow. \n\n\"I would,\" I said. \"I really enjoyed being with you. What would you say if I did?\" \n\n\"I'd say yes, of course,\" she said. And she smiled the first proper smile I'd seen her give for some time. \n\n** \n\nMaggie was of course impatient with our slow progress, but I told her firmly that this was not going to be a quick fix. Indeed, I might not even be the fix, but I thought being with Liz was fun for me and seemed to be relaxing her, and having a trusted, older and more experienced person to talk to could only help. \n\n\"She doesn't know what she's missing,\" sighed Maggie. She said this as she straddled me, my cock firmly lodged inside her. \"She doesn't know... how nice it feels to have... your big dick... shoved inside me...\" \n\nI pushed up and into her, matching her slow rhythm. \n\n\"Oh God!\" \n\nI reached up and gently kneaded her nipples. \n\n\"That's also pretty... fucking... good.\" \n\n\"Use my cock,\" I said. \"Use my cock and come on it, Maggie.\" \n\nI pulled her down and onto my chest. This was my favourite position, feeling her close, able to control exactly my thrusts up and down into her, her chest pressed against mine, able to reach down and cup and squeeze her buttocks. \n\n\"Keep fucking me and I'll come,\" she gasped. \"I'm so... close...\" \n\nA few moments later she was writhing uncontrollably as her orgasm spread through her. My own was waiting in the wings if I wanted it, but I slowed down, not wanting to come yet. \n\nWhen she recovered she levered herself up onto one arm and looked at me accusingly. \n\n\"You didn't come?\" \n\n\"Not yet,\" I said. \"I'm going to fuck you a lot more first.\" \n\n\"That sounds delicious,\" she said. \"But I'm not sure I can take any more, really.\" \n\n\"Tough,\" I said. \"You've been quite bossy about this whole Liz thing, and I think you need a lesson.\" \n\n\"Oh god,\" she sighed. \"All right then.\" \n\nNearly half an hour later she staggered out of bed, barely able to speak. I had been a bit cruel with her, it's true, but a touch of viciousness in sex is sometimes a welcome extra spice. And I felt Maggie could do with bringing down a peg or two. \n\n\"Christ,\" she muttered. \"I feel like I've been fucked by a steamroller.\" \n\n\"Sorry,\" I said innocently. \"Don't know what was wrong with me today.\" \n\nShe narrowed her eyes at me. \"I had no idea you could be so mean.\" \n\n\"Mean?\" I was all innocence. \"You seemed happy enough at the time.\" \n\nShe leaned over to kiss me goodbye. \"Bastard. You do realise I'm going to expect that every time now, right?\" \n\n** \n\nFor our second date I invited Liz to come over for dinner. I cooked some tuna steaks while she assembled a salad. She seemed more relaxed this time, and I was able to make her laugh quite easily. She brushed against me several times as we moved around the kitchen and I had a tingling sense of promise and possibility. But I still needed to be very cautious with her, I knew. \n\nConversation continued smoothly over dinner \u2013 as I said, Liz had always been the one I'd had most in common with, so the age gap between us didn't seem relevant or important. Then I suggested moving to the sofa to find something to watch on the television. \n\nTo my surprise she blushed slightly. \n\n\"Um,\" she said. \"I was wondering if... maybe we could go upstairs?\" \n\n\"We can do whatever you want,\" I said. \"You sure that's what you want to do?\" \n\n\"Yes... it is... but I'm not trying to tease you anything, I'd just really like to be in bed. In bed... with you, like we did last time, and just talk there. Or... whatever.\" She blushed again. \n\n\"I would really like that too,\" I said. \"In fact, it sounds great.\" \n\nSo I took our drinks and she followed me upstairs. She had a small bag with her and she disappeared into the bathroom with it. When she reappeared she was wearing a short, black night dress that finished just above her knees. \n\n\"You look wonderful,\" I said. \"Really beautiful.\" \n\nShe smiled shyly. \"Thank you.\" \n\nSuddenly I realised I was fully dressed, and she was looking at me expectantly. \n\n\"Um,\" I said. \"I've got a night dress just like that, but it's in the wash.\" She raised an amused eyebrow. \"I guess I'll put some pyjamas on.\" \n\nShe took a deep breath. \n\n\"Well, actually... this is going to sound really ... I wondered... would you mind if... I mean, I'd quite like to be able to... you know... see you.\" She had been red before. Now, if possible, she was even redder. \n\n\"Oh,\" I said. Then I nodded slowly. \"Yeah, sure, I'm going to feel a bit self-conscious for the first few minutes, but... if you promise not to laugh too much.\" \n\n\"I wouldn't!\" \n\n\"I know. OK. Here goes.\" I hesitated for a moment and then started getting undressed. Her eyes watched me the whole time. I could feel myself getting harder as I got down to just my boxers, and I paused briefly before removing them. Well, I told myself, she wanted to see what you looked like... \n\nSo I peeled those off too. I felt rather uncomfortable just standing there naked in front of her, so I tugged back the covers and got into bed. She looked a little disappointed but then she did the same on her side. \n\n\"Thank you,\" she said again. \n\nShe rolled over on her side and looked at me. \n\n\"I can't quite believe I'm in your bed again,\" she said. \n\n\"It's something of a surprise to me too,\" I said. \"But it's a really nice one.\" \n\n\"Do you think I could... would it be strange... would you mind if I just... touched it?\" \n\n\"Yes,\" I said. \"Of course.\" \n\nShe looked at me nervously. \"You're sure that's OK? I mean... I might not want to do anything else, and that doesn't really seem fair.\" \n\n\"Liz,\" I said. \"A beautiful girl wants to see me naked and touch me. Believe me, I'm very, very happy about that. And nothing else needs to happen. I'm fine with that.\" \n\n\"Really?\" \n\n\"Really.\" \n\nI pulled back the sheets so I was fully visible to her. \n\n\"Scoot over,\" I said. \n\nShe moved cautiously over to my side of the bed. She knelt half way down my body, peering down at my cock with intense but nervous interest. \n\n\"I've never really seen a man... up close before. Only in... films. You know. Porn stuff. Not like this.\" \n\nI didn't say anything. I just nodded. \n\n\"And it's ok if I touch it?\" \n\n\"I'd love it,\" I said. \"But you have to realise that I will react to that. In fact, I'm reacting already.\" \n\nIt was true. Even as she looked at it my cock was stiffening slightly as it lay on my stomach, expanding and swelling. \n\n\"That's amazing,\" she said softly. \n\n\"It's because you excite me,\" I said. \"Being here with you, like this, I find really erotic and sexy.\" \n\n\"I do too,\" she said. \n\nShe reached out tentatively and stroked it, as you would a dog you're not quite sure of. My cock basked in the attention, and grew even firmer, lifting itself away from my stomach. Liz sighed almost inaudibly and then settled herself lower down, sliding her legs away so she was almost at eye level with my groin. She continued to stroke me. \n\n\"And men... like this?\" \n\n\"We do. As you can see. But I would guess most of us prefer a firmer grasp, rather than a gentle stroke.\" \n\nShe nodded almost imperceptibly, and then pinched the top between thumb and forefinger. That felt very good indeed, and I took a sharp intake of breath. \n\nShe looked concerned. \"Did that hurt?\" \n\n\"No,\" I said. \"That feels great. Move your hand up and down a little.\" \n\nShe started to do that, and I closed my eyes to relish the sensation. \n\n\"And this is what men do... when they're playing with themselves?\" \n\n\"Pretty much. Would you like me to show you?\" \n\n\"Oh, yes please.\" \n\nI reached down, gently removed her hand, and took hold of my cock. I began to work it back and forth, very slowly at first, but gradually building up the pace. Then I slowed down again and took my hand away. \n\n\"I do it like that. I'm sure other men might do it differently, but that works for me.\" \n\n\"And if you keep doing that... you'll eventually... you know?\" \n\n\"Come? Yes. Though it's the thoughts that matter as well. Probably the most important part, really. So I'll do that, and I'll have some fantasy going through my head, and eventually, when I'm ready, I'll come.\" \n\n\"Yes,\" she said. \"I like the fantasy bit of it too. Lying there, just dreaming about something even if you think it'll never happen. Though sometimes...\" \n\nShe trailed off. I glanced at her expectantly. She looked away. \n\n\"I used to fantasise about being in your bed, with you... and then last week it happened. Though not how I thought it would. And every night since then, I've thought about it even more.\" \n\n\"You fantasised about being in bed with me?\" \n\nShe nodded, biting her lip. I reached down and took hold of my cock again. \n\n\"That's good, because I've been thinking about you too.\" \n\n\"Really? But you've got Maggie...\" \n\n\"I've thought about you a lot, Liz. I don't want to scare you off, but you've been really naughty in some of my day dreams.\" \n\nShe watched, fascinated, as my hand worked its way up and down. \n\n\"What sort of things did I do?\" she whispered. \"In those dreams?\" \n\n\"You sure you want me to tell you? You might be shocked.\" \n\nShe nodded fiercely. \"Please.\" \n\n\"You sucked me off, Liz. You took my cock in your mouth and you sucked it.\" \n\nShe closed her eyes. \"I thought about that too.\" \n\n\"You stroked my cock, Liz, and you sucked me, and you made me come.\" \n\n\"God, I can't believe this... I love seeing you do that to yourself.\" \n\nWe continued like that for several minutes. I lost my slight self-consciousness and began to enjoy it. She seemed to be transfixed. I could see her fingers slowly clenching and unclenching as she watched. ",
        "\"Do you want to help me come, Liz? It'd be so easy. You don't have to touch me, but one thing would really help me come.\" I was whispering to her now, caught up in the moment and the powerful sexual atmosphere that enveloped us. \n\n\"Tell me.\" She could hardly take her eyes away from my cock. \n\n\"Let me see your body, Liz, you're so beautiful, I've always wanted to see you naked and if I do I know it's going to make me come.\" \n\nShe hesitated for only a second, then sat up and pulled her night dress over her head. She wore nothing underneath except for a small pair of black panties. Her breasts were small but perfect and I could see each of her pink, puffy nipples were capped with a hard tip. \n\n\"Jesus you're so lovely Liz... I'm going to come now...\" \n\nAnd about thirty seconds later I did. She let out an audible gasp as the semen spurted from me and splattered onto my stomach. I groaned and closed my eyes and lessened my grip on myself, slowing right down and just doing enough to milk what was left out of myself. \n\nI lay there for a few moments. I could hear she was breathing almost as fast as I was. I opened my eyes and smiled at her. \n\n\"And now if you'll excuse me,\" I said. \"I'm afraid we're at the rather messy, awkward part of me going off in search of some tissues.\" \n\n\"I'll get some,\" she said, and sprang off the bed. She was quickly back holding a wad of tissues from the bathroom. I expected her to hand them to me but instead she carefully and diligently cleaned me up, approaching the task with a focused gentleness that I found very endearing. She even lifted my penis gently and cleaned underneath it. Then, when I was completely clean, she surprised me again by bowing her head quickly and giving my cock a quick kiss. \n\n\"That... was one of the sexiest things I've ever seen,\" she said. \n\n\"You are one of the sexiest things I've ever seen,\" I said, and meant it. \n\nShe suddenly realised she was still wearing nothing but her panties and instinctively her hands flew to cover her breasts. Then she sheepishly removed them again. \n\n\"I guess it's a bit late to be modest,\" she said. \"They're not very big, compared to Maggie's.\" \n\n\"They're perfect,\" I said. \"Honestly Liz, you have no idea how completely lovely you are.\" \n\nShe was going to disagree then she seemed to stop herself. \n\n\"You make me feel really sexy,\" she said. \"It's just so... well, amazing.\" \n\n\"It is,\" I said. \"Sex between two people who really like each is just about the greatest thing in the world.\" \n\n\"So... you're saying we just had sex?\" \n\n\"Wouldn't you?\" \n\nShe thought about it. \"I guess.\" \n\n\"Then if you'll indulge me,\" I said, \"do you think we could do one of my favourite parts of the whole thing?\" \n\nShe looked a little nervous again. \"What's that?\" \n\n\"I'd really like to just hold you,\" I said. \n\nShe looked at me for a moment then smiled and nestled down beside me. I reached down and pulled the covers over us, then I wrapped an arm around her and pulled her close. I could feel her breasts pushing into my side. I stroked her arm softly and she stretched out like a cat under my touch. \n\n\"You have nice hands,\" she said. \n\nThen she giggled. \n\n\"And a very nice... you know.\" \n\n\"I don't,\" I said, teasing. \"Please tell me Liz.\" \n\n\"You have a very nice... \" - she took a deep breath - \"... cock.\" \n\n\"Thank you,\" I said. \"But I believe you also mentioned you'd never really seen one up close before. So for all you know it might be one of the ugliest.\" \n\n\"I bet it's not!\" she said, a trace of indignation in her voice. \n\n\"I'm kind of hoping it isn't too,\" I said. \"Just pointing out that, scientifically speaking, your sample size is pretty small.\" \n\n\"Yeah, well,\" she said, \"I think on this occasion I say 'fuck science' - I'm going with my gut instinct.\" \n\nI laughed. \n\n\"We are making progress,\" I said. \"Little Lizzie, playing with cocks and swearing like a trooper.\" \n\nShe poked me in the ribs. \n\n\"Don't tease me! I'll regress.\" \n\n\"I don't think so,\" I said. \"I think you're a natural. Maybe just a bit of a late starter, but you're going to be just fine.\" \n\n\"You think?\" \n\n\"Nope,\" I said. \"I know for sure.\" And I kissed her on the forehead. \n\nWe lay there wrapped in each other's arms for what must have been ten or twenty minutes. I looked over and saw her eyes were shut and thought maybe she'd gone to sleep. But as I moved she opened her eyes and looked at me. \n\n\"Martin?\" \n\n\"Yes Liz?\" \n\n\"Can we do something like that again in the morning?\" \n\n\"Absolutely,\" I said. \n\n** \n\nI awoke before she did and slipped downstairs to make some coffee. When I came back up she'd put her night dress back on, which rather disappointed me. \n\n\"Morning,\" I said. \"How did you sleep?\" \n\n\"It was funny,\" she said. \"In some ways I suppose I didn't sleep that well. I kept waking up and you were asleep and I felt so... lucky to be there with you. I was kind of making the most of it, I suppose. And then I'd fall asleep again and then a few hours later I'd be awake... I did that three or four times.\" \n\n\"Well, you're welcome to have a snooze now,\" I said. \"I'm going to have a shower.\" \n\nI left her sipping her coffee and looking thoughtful. \n\nI'd been under the shower a few minutes when I heard her come in to the bathroom. Through the frosted glass I saw her pull her nightdress over her head and then tug her knickers down. She hesitated for a moment and then pulled open the frosted screen. \n\n\"I thought maybe I'd join you,\" she said. \n\nI moved over to make room. She came in rather tentatively but then reached up and kissed me on the lips. I kissed her back firmly and put my arms around her. She relaxed into me, then broke the kiss and looked down and giggled. \n\n\"Sorry,\" I said. \n\n\"No,\" she said. \"I'm really flattered.\" \n\nShe took my cock in her hand and began to soap it. I remembered Maggie doing something similar only recently, and I smiled to myself. Showers with eighteen-year-olds, I thought. There's a lot to recommend them. \n\nFor the first time I could see the neatly trimmed bush around her pussy. I tried to be discreet but she saw me looking and made a face. \n\n\"I should shave it all really, shouldn't I?\" \n\n\"Please don't for me,\" I said. \"I love it just as it is.\" \n\n\"Really? You don't think it's a bit... overgrown?\" \n\n\"It's perfect. Can I... touch you?\" \n\nShe nodded and I reached down and gently stroked around her pussy, careful to stay outside. She closed her eyes. Her hand still worked at my cock, a touch more mechanically now. \n\n\"That's really nice,\" she muttered. \"Maggie said you had great hands.\" \n\nWe stayed like that for a few minutes. Then we agreed if we stayed in much longer we'd start to look like prunes so we finished up our ablutions and stepped out to dry ourselves. Already I could see she was more confident, she towelled herself vigorously in front of me seemingly unconcerned now about being naked. I took full advantage, running my eyes hungrily over her slim and sexy body. \n\n\"Want some breakfast?\" \n\nShe bit her lip. \n\n\"Kind of. I wanted to try something, if that's ok.\" \n\n\"Liz, you're too polite by half. I'm sure I'm pretty much up for anything you want to do. Boss me around \u2013 I dare you.\" \n\n\"OK... then go through into the bedroom and just lie on the bed.\" \n\nI did as I was told. My cock was hardening again, not quite a full erection but it was definitely sensing the air was full of possibilities. \n\nAbout thirty seconds later she came in to join me. She was still naked. She got on the bed beside me and I wondered if I was in for a repeat of the hand job of the night before. Which would have been more than OK, particularly now that she was completely naked. \n\nShe took my cock in her right hand and began to massage it. She remembered after a moment to tighten her grip and she smiled with satisfaction to see it swelling in response to her attentions. Then, suddenly, she dipped her head and took the tip into her mouth. \n\nI gasped. She stayed like that for a few moments, as if getting used to the taste and the sensation. Then, with increasing enthusiasm and energy, she began to move her mouth back and forward on me. \n\n\"Christ Liz... that feels... fucking wonderful.\" \n\nShe carried on for around a minute and then broke off to speak to me. \n\n\"I'm probably doing this all wrong.\" \n\n\"You... are doing everything right,\" I assured her, a touch breathlessly. \"Please don't stop.\" \n\nShe was pleased by this and resumed with extra enthusiasm. She kept one hand on the shaft of my cock and with the other she reached around gently cupped and caressed my balls. \n\n\"I love your mouth Liz... you have such a beautiful mouth... I love the way you suck me...\" \n\nShe seemed to like my dirty talk, so I decided to take it a bit further. \n\n\"I often used to wonder what your mouth would feel like, Liz. I've daydreamed about you sucking me off. I've dreamt about coming in your mouth, Liz, did you know that?\" \n\nHer own breathing was ragged now. \n\n\"Keep using your hand like that,\" I said. \"Keep using your hand like that and the tip in your mouth and you're going to make me come. God, you're fucking good at this.\" \n\nFaster and firmer now. \n\n\"Christ... I'd really like to fuck you Liz... I'd like to take my cock and shove it inside you.\" I wondered as I said this if this was taking it too far, but she didn't miss a beat. Just that relentless, focused, almost frantic sucking. \n\n\"Touch yourself Liz... touch yourself while you suck me.\" \n\nShe took the hand away from my balls and reached down to push it between her legs. \n\n\"Are you wet? I wish I could touch you and feel if you're wet...\" \n\nShe moaned. I stretched out a hand and she slid herself slightly up and around to put herself within reach. For the second time that morning I gently stroked her cunt. I could feel her pussy lips had opened up and were indeed beautifully slippery and wet. I ran my fingers back and forth along her delicious slit, still talking to her as I did so. \n\n\"You're so wet... your cunt wants to be fucked, Liz.\" \n\nHer sucking of me became almost frantic now, her grip tightened and her head bobbed up and down furiously. \n\n\"I'm going to come Liz... Jesus fuck you amazing girl... you've made me come.\" \n\nI expected her to withdraw her head and just watch but she kept her mouth on me as I started to come. The thought of coming in her mouth was even more exciting and it doubled the intensity. I almost yelled with the sense of relief and pleasure. \n\n\"Oh my god... you are... just... wonderful...\" \n\nShe kept her head on me, not moving it now, just turning her head slightly so she could look at me. As she swallowed I saw a small drop of come run out of her mouth and down the shaft of my cock. \n\nI smiled faintly at her. \n\n\"Top of the class,\" I said. \n\nShe raised herself up and my cock fell out of her mouth and slowly descended back onto my stomach. She looked \u2013 understandably \u2013 very pleased with herself. \n\n\"That was... OK for you?\" \n\n\"No,\" I said. \"That was bloody awful. Couldn't you tell?\" \n\nShe grinned. You could almost see the new confidence spreading through her. \n\n\"God Liz,\" I said. \"That was one of the most amazing blowjobs I've ever had.\" \n\n\"No... really?\" \n\n\"Scouts honour... I will remember that for the rest of my life.\" \n\nShe snuggled down next to me and lay an arm across my chest. \n\n\"I almost came when you did,\" she said. \"The way you were talking to me...mmm\" \n\n\"I'd love to see you come,\" I said. \"Why don't we take care of that next?\" \n\nHer eyes went wide at the idea. \"Oh... I don't know if I could.\" \n\n\"We could try... you've seen me have two orgasms now, and you're almost entirely responsible for at least one of them... I'd feel very ungallant if we didn't even the score up a bit.\" \n\n\"I guess... but don't get cross if I can't.\" \n\n\"How about if I smack your bottom?\" \n\nShe gave me a mischievous grin. \"Oh, that would be OK. That might even help.\" \n\nI gave her an encouraging look and she rather self-consciously rolled onto her back, closed her eyes, and slid one hand down to her pussy. Her other hand reached for me and I held it gently in mine. She began to stroke herself, up and down on her slit, occasionally taking hold of her pussy lips and squeezing them, now and again flicking her clit gently with a finger. I watched, absorbed. \n\n\"You've made me so wet,\" she murmured. \"I can't believe I'm doing this with you.\" \n\nI disengaged my hand from hers and slid down the bed to get a closer look. I positioned my face just a few inches above her hard-working hand. Then I reached down and gently kissed the inside of her thighs, first one, then the other. \n\n\"God... I can't believe you're so close to my... \" \n\nI began to slowly kiss and lick her inner thighs, working my way higher and higher as I did so. Her fingers worked faster and faster. When I was nearly at the top I reached out and took her hand and gently held it and moved it away. \n\nThen I lowered my face onto her, trying to do with my tongue what I'd seen her do with her fingers. \n\n\"Oh fuck!\" \n\nShe rose her lower body off the bed, pushing her cunt into my face. I took advantage of this to slide my hands underneath her and cup her buttocks. Now she was helpless. Her hand, now free, went to the back of my head and pushed it down. She began to grind herself against me. \n\nI lapped and nuzzled and teased her, alternating between long, slow licks and firmer, more probing darts of the tongue. My saliva mixed with her juices to soak her thighs and the sheets below them. I loved the smell and the taste of her, and the thought that I was the first to lick this lovely young pussy was also intoxicating. \n\nShe was close now, very close, and I was tempted to slide a finger into her to help her over the edge. She was certainly wet enough. But I didn't want to risk it, risk possibly spoiling the moment, and there was no question an orgasm was on its way very soon now regardless of what I did. \n\nBut perhaps some more dirty talk. She seemed to respond to that. I licked and tasted her once more, squeezing her cheeks as I did so. Then I briefly lifted my face from her so I could speak. \n\n\"I just love the taste of your wet little cunt, Liz.\" Then I buried my face in her again. \n\n\"Oh fuck oh fuck... yes...\" And with that she came, with a long-drawn out moan that trailed off into a whimper. She trembled and shuddered for perhaps thirty seconds as I lay there, ever so softly kissing and nuzzling the area around her pussy. \n\nI heard her sob. I thought maybe it was also the orgasm, but I looked up and realised she was crying. \n\nI crawled up the bed and wrapped her in a bear hug. She buried her face in my chest. I could only just make out what she was saying. \n\n\"I never thought... I never thought I'd come with somebody in the same room. I always thought I'd be on my own. Doing it myself, alone.\" \n\n\"I'm happy to pop round and watch whenever you want,\" I said. \n\nShe snorted a laugh through her tears. \"How kind.\" \n\n\"I'm all heart,\" I said. \"Mr Nice Guy, that's me.\" \n\nHer tears slowly dried up and she pulled herself closer to me. \n\n\"That was also just about the biggest orgasm I've ever had. God, my muscles feel like I've done a marathon!\" \n\n\"I'm glad,\" I said. \"That was really a turn-on for me too. More than that.\" \n\nShe put down a hand to investigate. \"Mmm. I can see it was.\" \n\nHer hand caressing me was turning a mild erection into a much harder one, despite its recent workout. \n\n\"You know, while you were licking me... I really wanted this. I really wanted you to fuck me.\" \n\n\"I would have loved to,\" I said, \"but I was pretty happy with what I was doing too.\" \n\n\"Do you think... maybe we could try now? Or is it too soon?\" \n\n\"No rush,\" I said. \"Sometimes after you come, you can tighten up a bit. Perhaps on our next date. And, to be honest, I'm not sure I can manage anything again so soon.\" \n\nShe pouted. \"I'm not sure I want to wait that long. We're on a roll!\" \n\n\"We certainly are. Well, how about this... come on top of me... yes, like that.\" \n\nI positioned her on top of me so my cock rested comfortably against her pussy lips. She gave a groan of appreciation. \n\n\"God, that feels so nice!\" \n\nShe looked at me. \"This is what you used to do... with your first girlfriend?\" \n\n\"It was our favourite thing.\" \n\nShe nodded, and began to slowly slide her hips backwards and forwards, grinding herself against my cock as she did so. \n\n\"I can see why,\" she whispered. \"It's going to drive me mad.\" \n\nShe grabbed hold of my shoulders so as to be able to push herself backwards and forwards more easily. I could feel her cunt getting wetter again. Given the amount of friction she was generating, that was probably just as well. \n\nSuddenly she stopped, reached down, and pushed my cock heavily against her clit. She closed her eyes and sighed with contentment. \n\n\"I could do this forever,\" she said. Then she resumed her enthusiastic sliding, up and down. Despite my earlier exertions my cock was really hard again now. A few times she slid over the tip of it and it was all I could do not to grab her and slide properly into her. She must have felt it probing at the entrance to her pussy. \n\nI lay there and watched her. She was a vision, flushed with excitement, happy and pleased with herself, almost completely absorbed in her own pleasure. She looked down and saw me smiling at her. \n\n\"Sorry,\" she murmured. \"I'm being very selfish.\" \n\nI shook my head. \n\nShe bent down and kissed me. \"Fuck me,\" she whispered into my ear. \"Fuck me now, please.\" \n\nIt took only the smallest push, the slightest change of position, and I could feel my cock ready to enter her. I looked at her for the final confirmation, she nodded firmly, and I pushed deep into her. \n\nShe let out a long, low, moan. \"Oh yes.\" \n\nI began to fuck her. She was lying on top of me, knees either side of my hips, her chest pushed against mine. I was slow and gentle with her but she was past all that. \n\n\"Harder,\" she said. \"Harder!\" \n\nI increased the rhythm and the force slightly, pushing easily in and out of her slippery wetness. She was tight, tighter than Maggie, but she was so moist it was an easy and perfect friction. \n\n\"I'm being fucked,\" she moaned. \"I'm really being fucked.\" \n\nShe looked down at me. \n\n\"Tell me everything is ... do I feel ok to you?\" \n\n\"You have a perfect little tight cunt,\" I told her as I fucked her. \"I hope you'll let me fuck you again and again... such a tight, juicy, wet, little cunt.\" \n\n\"Oh god,\" she panted. \"I never knew it would feel like this... I wish I'd know... Fuck me, please don't stop.\" \n\nThere was no danger of that. I held her close and tried to take in every aspect of her. Her young, smooth, slender legs on either side of me. Her back, wet with sweat that I could feel as I ran my hands down her to stroke and fondle her lovely rounded buttocks. Her small, perfect breasts just inches above me with those pink, slightly puffy nipples. Her pretty blonde hair. Her flushed, beautiful face, so focused and happy and concentrated. And yes, her delightfully tight and welcoming pussy. \n\n\"God, you're perfect,\" I told her. \n\nHer first orgasm broke barely a minute later. I felt her legs tighten and the walls of her cunt pulsed deliciously around my cock. \n\n\"Jesus, jesus... I love your cock in me...\" \n\nThe thought of being the first to properly fuck, the first to give her orgasms, the first to see her like this, so wanton and lost in the moment, took me even closer to the edge. \n\n\"I'm sorry Liz, I'm going to have to come...\" \n\n\"Yes, yes, fill me up, I can't wait to feel that... all that warm come, please, give it to me...\" \n\nI exploded into her. Considering it was my second orgasm of the morning it was surprisingly intense and long-lasting, almost painful. I could feel myself shooting into her, one load, then a second, then a third, before trailing off. The world seemed to be full of fireworks. She quivered as I came inside her, a second, smaller orgasm rippling through her. ",
        "\"That feels so amazing... \" \n\nSlowly the world stopped spinning and I realised she was collapsed on top of me, her head over my shoulder, some of her hair covering my face. I was still buried deep inside her, and I could still feel the tiny twitches of her cunt muscles around my cock. \n\nI stroked her hair. \n\n\"I don't want to move,\" she said, her voice muffled by the pillow. \"Please can we stay like this for a while?\" \n\n\"Of course,\" I said. So we lay there for a few minutes, I stroked her hair and back and arms, and I could almost feel her purring with contentment. \n\nThen she sighed and lifted herself up so she nestled on my chest. \n\n\"Thank you,\" she said. \n\n\"Nothing to thank me for,\" I said. \"You may have noticed I enjoyed it at least as much as you did.\" \n\n\"Mmm,\" she said. \"I hoped you did.\" \n\nThen she prodded me with an enquiring finger. \n\n\"So, what's your usual recovery time?\" \n\n\"You want to do it AGAIN?\" I tried to look appalled. \n\n\"Of course! I've only done it in one position \u2013 I've got lots of catching up to do.\" \n\nAnd that was the message she sent Maggie later: \n\nYou were so right! Busy catching up. Sorry, you can have him back tomorrow, but he says he won't be good for anything except foot massages. We both love you. Xxx \n\n** \n\nI admit, I was creaking slightly when I arrived home later the following week to find them both sitting in my living room. They both rushed over and kissed me, then Liz led me to the sofa while Maggie went to the kitchen to fetch me a glass of wine. Then they snuggled up to me, one on either side, and I kissed them both on the head. Life was pretty good, even if I did feel stretched a little thin. \n\n\"So, I don't suppose we're having a night off?\" I said. \n\nTwo shaking heads. My Saturday morning gymnastics with Liz had stretched out into the afternoon. Sunday morning Maggie had come for a progress report and to get some attention herself, and I think in the circumstances I did pretty well. Monday evening Liz had popped over for a \"quickie\", giggling about how quickly she'd become such a shameless sex mad harlot. Tuesday evening had been Maggie's turn again. \n\nNow it was Wednesday, and I wondered what was in store for me. Part of me would have been happy with just the wine. But \u2013 having two eighteen-year-olds nymphets who seemingly can't get enough of you can work wonders in all sorts of areas. \n\n\"How would you feel,\" asked Maggie, straight to the point as usual, \"about a threesome?\" \n\nLiz blushed. \"Not a proper threesome,\" she added quickly. \"But both of us with you, in the room.\" \n\nI looked enquiringly at her, then at Maggie. \n\n\"We've sort of been comparing notes,\" said Maggie. \"And Liz wants to see how we do it, and I admit I'm interested to see if you're different with her. And... I think it'd be kind of sexy to watch.\" \n\nI considered this for a moment. A man's work was never done, it seems. \n\n\"I'll just finish my drink,\" I said. \"And I'll be right with you.\""
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "older man",
        "younger girl",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/student-support-ch-02"
}