{
    "title": "Claiming Treasure Ch. 06-10",
    "pages": [
        "Three Tequila's POV \n\nOrlando Steel Brotherhood Clubhouse \n\nTax time was my least favorite time of the year. \n\nThe Orlando Steel Brotherhood Chapter is a 501(c)7 social club for tax purposes. As a non-profit, we didn't have to pay Federal or State taxes as long as we stayed within the lines of our tax classification. Most of the requirements were straightforward; the Club had to be a social club, organized \"for pleasure, recreation, and other nonprofitable purchases.\" Also, \"substantially all of the activities\" of the club must be for these social purposes. No problem there, since we organized around our love of motorcycles. We organized Club rides, supported local charities, maintained a fully-equipped garage for member's use, and operated a private Club bar. Finally, \"no part of the net earnings of the Club may be for the benefit of any private shareholder.\" Unless the Chapter folded, no individual saw any money in return. \n\nAnd just because we didn't have to PAY taxes, didn't mean we got out of filing them. \n\nAs an incorporated Club, we also were required to have officers and maintain incorporation paperwork with the Florida Secretary of State. Locally, the Club had to transfer its liquor license to the new location, along with the business license that allowed us to operate a kitchen and rent rooms in the Clubhouse to guests from out of town. It had taken us months to work through the system to get everything up and running again, and it wasn't easy. \n\nThat didn't mean we didn't have employees. Bartenders, kitchen staff, cleaners, maintenance people, they all had to be paid like any other business. Even our Prospects were paid a salary for the jobs they did. The difference between us and another bar/restaurant was that we were not open to the public. We had to maintain careful records of guests to show we weren't making too much off of them. \n\nThis year was more complicated than previous years for two big reasons. The first was that the attack on the Clubhouse last year had cost the club dearly in lost revenue and uninsured losses. Eighty percent of our revenues came from the Club kitchen and bar; remodeling and food trucks had cut into the earnings significantly. The Club stayed afloat with the cash donations that had come from other Chapters and members of the public, plus the cash given by Rori and Chase Nygaard. With the fire losses, funeral expenses, sale of the old Clubhouse property, and purchase of our new Clubhouse, it was a tangled mess for our accountant and lawyer. \n\nThe second reason was the Chief of Police in Orlando wanted us gone. He was using every means, legal and political, to try and shut our Club down or force us out of town. We'd had to hire lawyers to keep our licensing after the City Council held public hearings. Health inspectors, compliance checks for liquor laws, OSHA inspectors, fire inspectors... it was constant until we got our lawyers involved and worked the local press. We'd been in the city for decades, and had never been in trouble. Our decision to require prospects to obtain Concealed Weapons Permits had proven wise, as felons and drug users were never welcome. Our charitable work and the publicity from the funeral carried the day, and things were back to normal. \n\n\"Done yet,\" Mongo asked as he came into the office. \n\n\"I wish,\" I said as I looked up from the printouts. \"Remind me again why I volunteered to be Club Business Secretary?\" \n\n\"I think it was the big paycheck,\" he said as he pulled me up and into a scorching kiss. \"That ten dollars an hour will be important when I'm on Social Security.\" \n\n\"Oh, hush. You're not even fifty yet.\" \n\nHe grabbed my ass and pulled me against him just as his cell phone rang. Groaning, he pulled it out and didn't recognize the number. \"Mongo,\" he said. \n\nHis face got serious, and he listened for a minute before saying, \"All right, we'll be there in an hour,\" and hanging up. \n\n\"What was that?\" \n\n\"Pack, now, for a couple of days in cool weather,\" he said as he opened the door for me. \"I'll let everyone know something came up.\" \n\n\"What's going on?\" \n\n\"Not here,\" he said. \"I'll be up in a minute.\" \n\nWe always kept extra clothes in our room at the Clubhouse, since we might spend a few nights a week here. I went up there, packing a suitcase with what I would need. Ten minutes later, a prospect was driving us out of the clubhouse in the back of a cargo van. He made some random turns to ensure no one was following us before he drove us to the airfield. \n\nA small business jet waited for us outside hangar number seven. The pilots pulled the door closed as soon as we got in. The interior had four leather seats surrounding a table; a man sat facing the rear in one of them. The pilot got us settled in, then returned to the cockpit and closed the door. \"Good to see you again, Mongo, Three Tequila,\" he said. \n\nIt took a second for me to put it together. \"Tom?\" He was one of the security guys who had come down with a patrol dog when the Clubhouse got attacked. \"What is going on?\" \n\n\"It's Heather,\" he said. He must have seen the look of panic because he quickly brought his hands up. \"She's safe, for now, but there have been some developments.\" As the plane took off and climbed to altitude, he filled us in on the past three months. \"Heather was staying with Aces and Bunny near Vegas, along with Roadkill, Possum, and Rori's twins. You know she was in a relationship with Greg Barks last year when she was in hiding in Minnesota?\" \n\nI nodded and gritted my teeth; he'd had sex with her, something I'd kept hidden from Mongo. Rori had promised she would take care of it, and he was heading out of the country for three months. \"Yes, and I didn't like it.\" \n\n\"It's worse than you thought.\" He told the story of her showing up at the Arrowhead Pack to surprise him; her not knowing he'd moved on to someone else, and him not knowing she was pregnant with twins. \n\n\"PREGNANT? I'LL FUCKING KILL HIM,\" Mongo said as he fisted his hands. I put my hands on his arm, calming him down. \n\nTom must have known what I was thinking. \"We're not going to Minnesota. Chase had her moved, and she is well-protected by people we trust.\" \n\n\"Is it the Sons,\" I asked. \"I thought the Feds wiped them out.\" \n\n\"I wish,\" he said. He explained what had happened after Heather told Greg she was pregnant, and how Chase's brother Carson was fighting to keep the Council from killing her to keep their secret safe. \"You're our backup plan. If Carson loses, the Council will take her and execute her.\" \n\nI started shaking, and it was Mongo's turn to calm ME down. \"That won't happen,\" he said. \"What's the plan?\" \n\n\"When we land, I will drive you to a rendezvous point in the mountains. If the Enforcers enter Carson's land, Frank and Colletta will escape with her and meet up. We will return to the plane, where you will take her somewhere she can be safe, with someone you trust.\" I started to say something, and he raised his hand to stop me. \"Don't tell me; I don't want to know. When this all comes out, any Werewolf can be commanded to talk. I can't tell them what I don't know.\" \n\nI was already running through ideas in my head, and I'm sure Mongo was doing the same. \"And if Carson wins?\" \n\n\"Then Heather will be staying with his Pack. They will come out to retrieve you, and I'll meet you in two days to take you back to the plane so you can get home.\" \n\nHe didn't have any information from the trial, and he couldn't answer the questions I had. What he DID know scared me; our interactions with Werewolves had been positive until now. We dealt with Rori's Pack, which was almost like another chapter of the Brotherhood to me. The idea that people wanted her dead for the same knowledge I'd had for years? It scared me. \"Are we safe? Will they be coming for me next?\" \n\nHe closed his eyes and leaned back. \"Honestly? I don't know all the politics of it, but the world's Alphas are evenly divided. Rori and Chase are leading one faction that is pushing to be inclusive to humans. They believe that we cannot continue hiding our nature forever, and the Council should focus on managing how we come out to the human world. The others are traditionalists, conforming to rigid rules on human contact. They believe any human who knows of us should be killed immediately to protect us all.\" \n\n\"Who is going to win?\" \n\n\"I have no idea. If the Alphas can take Chase and Rori out, then take out Carson? It might only take one more Pack to change sides for those Packs to gain a two-thirds majority where they could change the laws again.\" He reached into the refrigerator and removed an orange juice, opening it while he thought. \"The real worry is if the Council forces their own man into the Alpha spot at Arrowhead. Your status as Trusted Agents is dependent on the Arrowhead Alphas taking responsibility for your actions. If the Alpha changed, he could revoke your status.\" \n\n\"And then they would kill us,\" Mongo said. \n\n\"Yes.\" He looked out the window, seeing we were at cruising altitude. He'd given us a lot to think about already. \"Through those doors is a bathroom and a small bedroom, should you wish to rest or talk in privacy.\" \n\n\"I am tired,\" I said. I got up and used the bathroom, then went through the door. The rear of the plane was just big enough for a twin-sized bed; I had to sit on it so Mongo could close the door. \"This is cozy,\" I said. \n\n\"Strip,\" he said as he pulled his vest off. \n\n\"Now?\" \n\n\"When else will we get a chance to join the mile-high club without getting arrested?\" \n\nI wasn't going to turn down this chance, and soon I was in the middle of my bed with my legs over my man's shoulders. I held his head where I wanted it as he ate me like a starving man at a buffet, his beard tickling my sensitive inner lips. \"I need you in me,\" I said after the first orgasm rolled through my body. \n\n\"I need you more,\" he said as he dropped his pants. He pulled me to the edge of the bed, leaning over me as his big cock pushed into its home. \"My God, you feel good,\" he said as he filled me full. \n\n\"Just fuck me hard and fast, I need it so bad,\" I said. I needed my man. I needed to feel loved and safe, as my head tried to look past the real dangers of today. I wrapped my legs around his back, urging him on as he started stroking me long and deep. The room was quiet, except for my moans and the wet smack of his hips into mine. He leaned over, kissing me before he put my knees over his shoulder and put his arms outside them. Now I was at his mercy as he used his size and strength to hammer me into the thin mattress. \"FUCK YES, TAKE ME,\" I yelled as he started moving faster. \n\nHe reached up, pinching and twisting my nipples, and the pain sent me over the edge. \"MONGOOOOOO,\" I screamed as my body exploded in pleasure. My greedy pussy clamped down on the invader plundering my depths, and that was all he needed. He slammed deep and started to cum with me, my needy kitty sucking all his cream from him. \n\nWhen he finished, he let my legs down and slowly pulled out. We'd made a mess, and he cleaned what he could with the Kleenex from the holder in the wall before he climbed up next to me. Both of us were exhausted, and I fell asleep in his arms to the drone of the engines. \n\n\"Time to wake up,\" Tom said as he knocked on the door. \"Landing in ten minutes.\" We quickly pulled on our clothes in the tight quarters and headed back to our seats. He smiled as we sat down. \"Have a good rest?\" \n\n\"Yes,\" I said. \"You didn't hear us, did you?\" \n\nHe laughed. \"I think the pilots could hear you. No worries, they are professionals. They've heard it all before.\" We landed and taxied to a hangar; a black SUV with tinted windows pulled up next to us as the aircraft door opened. The driver tossed the keys to Tom, then walked off towards an SUV waiting outside. We loaded into the back of the Ford Escape. He handed us ski hats from the passenger seat. \"Put these on and keep your heads down until we are out of town,\" he said. \n\n\"Yeah, right. My head is down, and it's still hitting the roof,\" Mongo said. He leaned towards me, and I buried my head on his shoulder. We watched as we left the plains and climbed up into the snow-covered mountains. \"Where are we headed?\" \n\n\"Trailhead about thirty miles from here as the crow flies,\" he said. \n\nIt took close to an hour to make that on the narrow, winding road. We turned off after thirty minutes onto a Forest Service gravel road, finally stopping at a parking lot. The lot was empty, but I could see some tracks. \"Who comes up here?\" \n\n\"Snowmobilers, sometimes horses,\" he said. He parked at the back of the lot before we got out. It felt good to stretch our legs, but I was soon cold. \"Here,\" he said as he fished a winter jacket out of the back. \"We always have extra clothes in a vehicle in case we shift.\" \n\nI pulled it on, and it was a few sizes too big but warm. Tom found a big sweater that Mongo put on, plus we both got gloves. The snow was powdery, the mountain air still cold, with spring was a month away. \"When will we know?\" \n\n\"I don't know.\" He took off his clothes, shifting into his silver wolf. We drank coffee out of the thermos that was left for us as Tom ran around, sniffing and marking trees. He froze as we heard a wolf howl in the distance. \n\nTom howled back, then ran back to us. Shifting, he quickly dressed in the SUV and came back out. \"They're coming,\" he said. \n\n\"Where?\" I didn't hear or see anything. \n\n\"Over that ridge,\" he said. \n\nLooking up, I saw three wolves coming down through the trees, but one looked funny. \"Is that?\" \n\n\"Heather,\" Mongo said. \"She's riding on the back of one!\" I was jealous; in all the time I'd spent around Arrowhead, I never got a wolfy ride. The three picked their way down the slope, managing the snow and the rockslides. Twenty minutes later, Heather jumped off her wolf and into my arms. \n\n\"Baby!\" I hugged her tight as she cried into my shoulder. She let me go and hugged Mongo just as tightly. \n\n\"Does this mean?\" \n\n\"We can't stay here,\" Heather said. \n\nCh. 7 \n\nAlpha Rori King's POV \n\nArrowhead Pack House \n\nRage filled my body, and my wolf wanted blood as we stepped out of the trial area, into the common area where the three wings of the dining hall came together. My eyes took in the scene as Mykayla squirmed and shook in my arms. \n\nUnderneath a broken table, a man was lying unconscious and bleeding. Standing over him, Timur Petrovsky had his blood-covered fists shaking as he looked ready to kill. I moved forward as the other Alphas and Council filed out of the room behind me. \"\u0422\u0438\u043c\u0443\u0440 \u043e\u0442\u043e\u0439\u0434\u0438 (Timur, Stand Down),\" Alpha Ivan commanded, causing the big warrior to freeze. \n\n\"What's going on here,\" Chairman Coffey demanded. \n\n\"My pack. My decisions,\" I responded. These people were all guests here, and on MY land, they are subject to MY discipline. Only the Alphas could appeal to the Council; the rest, like this piece of shit cluttering up my floor, I could punish. \n\nAnd I would. \n\nI called Beta Teri forward and handed over the petrified little wolf to her. Mykayla immediately buried her head under her arm, refusing even to look at the scene. \"Take her to the clinic and settle her in an exam room,\" I said as I smelled her. The scent of a man was on her in places it should never be, confirming my worst fears. \"She must have shifted to protect herself. Calm her down, and see if you can talk her through shifting back.\" \n\n\"Of course, Alpha.\" No one said anything as she walked away from the scene. \n\nWalking over to the two men, I had my Warriors fan out around me. The Oxbow Lake warriors shadowed them, not knowing yet what was going on. I was a pregnant and enraged Alpha, not a combination any werewolf wanted to deal with. \"Timur, step away,\" I told him. \n\nHe moved back, exposing his throat to me. \"My apologies, Alpha.\" \n\nWith him out of the way, the tables and chairs were moved aside to uncover the young man he had been beating on. He had a shirt on, but his pants were around one ankle. His face was unrecognizable, and his shirt covered in his blood. He looked bad, but it was nothing compared to the bloody mess in his crotch. Mykayla must have bitten his cock and not let go as he pulled her off. The flesh of the last few inches of his partially-erect penis sliced into ribbons. \n\nWerewolf healing couldn't fix that without help. \n\nThe smells and his injuries told me what happened, even if Mykayla couldn't. \n\nChase came up behind me, looking at the unconscious man. \"I need to stop the bleeding, or he'll die before we can execute him,\" he said. \n\n\"Mykayla needs your help in the clinic, love. I'll handle him. Beta Ron, bring me a hot iron from the fireplace.\" He ran to comply. \"Whose man is this,\" I asked the Alphas behind me as Chase moved off. \n\n\"He is one of my newly qualified warriors,\" Alpha Richard Long said. \"He assaulted the woman?\" \n\n\"Girl. She is FOURTEEN, Alpha Long. That was her first shift, forced years early because she had to defend herself from THAT.\" He looked down, knowing his warrior was as good as dead now. \n\nMost of the Alphas around me recoiled at what happened. Some Packs had been able to hide unspeakable acts against females internally, but to do it at Arrowhead? Suicidal. \"He will not be one of your warriors by sundown.\" \"Warriors, hold him down,\" I said as Ron returned with a glowing-red piece of cast iron. \n\n\"My rehabilitation training must not have worked,\" Coral said. \"I recognize him from my time there. He was still a juvenile then.\" \n\n\"I don't believe in rehabilitation for sex offenders,\" I replied. One man held down each limb, his legs spread wide. As the hot steel seared his damaged foreskin, he woke up and screamed. I ignored that as four strong men held him relatively still. Rolling the glowing bar around, I kept cauterizing until the bleeding had stopped. I might have burned more than I needed to, but I didn't care. \"Take him to the punishment pole, lash him up and guard him,\" I told the guards. They pulled the groaning man to his feet and dragged him out the back. \n\nThe smell of burning flesh and blood filled the room, and my stomach didn't like it. \"Alpha Ivan, Warrior Timur, Alpha Long, my office.\" I walked off without looking back, guards falling in at my side. \n\n\"The trial is in recess for lunch, reconvening at one PM,\" Chairman Coffey said. \"Stay out of the way while they clean this mess up.\" \n\nI reached my office and unlocked it, my guards taking up spots just inside as I went to my desk. I had a headache; I couldn't believe I was dealing with this shit again. The two Alphas and the hulking young Warrior entered the room and took the chairs she indicated. I went to the bar, grabbing a towel and soaking it with cold water before tossing it to Timur. He cleaned his bloody hands with it as I grabbed bottled water for myself and the others. Sitting back in my chair, I looked at Timur. \"Tell us what happened,\" I said. \n\n\"I was exercising in the gym this morning. I came upstairs and passed a door back by the kitchen. I heard a man yell 'bitch,' then he yelled in pain, and I heard a wolf growl. My wolf was going nuts as I opened the door. The man was holding his bleeding cock, kicking the little wolf as she hid between the boxes.\" \n\n\"Did you know either of them,\" I asked. \n\n\"She is my mate!\" Our jaws dropped. \"As soon as I opened the door, her smell hit me, and I lost control. He was hurting her, and she was so frightened.\" He rubbed his hand over his face. \"I pulled him off her. My wolf and I wanted blood. I threw him through the door, then chased him in here. I kill him if you do not stop me.\" \n\n\"Mykayla. Your mate's name is Mykayla, and she's fourteen.\" \n\n\"I will wait for her. She must be afraid of me now.\" \n\nI mentally asked Chase about her. \"She's resting now, but my mate had to sedate her. She... she's had a rough life, Timur. She doesn't trust men, and I don't know how much this attack will set her back.\" ",
        "I could see the hurt and anger in his eyes. \"I will help. Whatever Mykayla needs, I will give her,\" he vowed. \n\n\"Even if she wants nothing to do with you?\" \n\n\"I will not make that decision easy for her, but it will be her decision.\" \n\nPerhaps the family was not as bad as Tatiana's lack of control indicated. \"It looks like we will have more to discuss than just Greg and Tatiana, Alpha Ivan,\" I said. \"Mykayla would not react well to the punishment, and I see no reason to delay it any further.\" I looked back to Timur. \"As her mate, do you claim the right to execute him for sexual assault on a juvenile?\" \n\n\"Her parents do not claim it for her?\" \n\n\"She's an orphan, and a former slave in another Pack,\" I replied. \n\nHis eyes flashed with pain and sorrow again before he nodded. \"Of course. I will ensure that he suffers for his actions.\" \n\nThirty minutes later, the Chairman had every adult out at the punishment area to witness the execution. Timur shifted and paced in front of the frightened man, his imposing wolf demanding blood. I pronounced the crime and the sentence before he was unshackled and left within the circle of bodies. \n\nThe fight was one-sided and brutal; it was a mercy when Timur finally broke his neck, then tore his head from his body. \"Let this be a lesson to us all,\" I said as I looked into the camera that had broadcast the punishment to all Packs. \"Females and children are to be protected; they are our future.\" \n\nTimur shifted back, still shaking with anger. His father gave him a pair of sweatpants, and he put them on before approaching me. \"Thank you, Alpha King, for allowing me to take revenge for my mate,\" he said. \n\n\"Shower and change clothes, Timur. Your mate will not want his scent on you when you meet again.\" \n\nHe smiled and nodded before running back to the Pack House, where he was staying in the basement dorm room. His father, Vasili, joined me with Alpha Ivan for the walk back. \"It's rare for a wolf to shift so early,\" Ivan said. \"Are you sure of her age?\" \n\n\"Yes, her birthday is June 4<sup>th</sup>,\" I said. \"She's only celebrated twice. She was born into slavery when she was in the Bitterroot Pack. The things she went through, no one should have to endure. Mykayla won't talk about what happened, no matter how much Chase tries to draw it out.\" \n\n\"Fucking animals,\" Vasili said. \"Do you know who the parents were?\" \n\n\"Mykayla was raised by the other Omegas. Her mother died in childbirth, and her father could have been any male in that cursed Pack,\" I said. \"She was starting to come out of her shell; we were even planning to send her to public school next year. She's very bright, and caught up to her age group quickly.\" \n\n\"Do you think a change in location would help her,\" Vasili asked. \n\n\"She's learned to tolerate the men in this Pack, and moving would not help,\" I said. \"Perhaps her mate will help her adapt.\" \n\n\"We don't need to do anything rash,\" Alpha Ivan said. \"We don't even know if she will tolerate his presence.\" \n\n\"And I don't know if I'll be Alpha soon,\" I said. \n\nIvan stopped, motioning me closer. \"Our Packs are tied together now. We are isolated, but maintain our faith in Luna's will for us. Luna's blessing is with you, Alpha Rori. You have our support.\" \n\n\"Thank you.\" All I needed now was about six more Alphas to have a 'Come to Luna' moment, and we'd be all right. \n\nLunch was a subdued affair, and at one, we entered the trial room again. Carson returned to the stand, answering questions from the Council for half an hour. Finally, Chairman Coffey gaveled the proceedings to a close. \"The Council will retire to render a decision on the validity of Heather Rhodes' asylum in the Cascade Pack. Trial adjourned.\" \n\nWe stood as the Council left, then Carson stood and turned to us. I pulled him into a hug, joined by his brothers and his sister. \"I guess we wait,\" he said as we broke up. \"Back to the house?\" \n\n\"I need to check on Mykayla,\" I said. \n\n\"I'm going too,\" Coral said. \n\nThe boys headed back to relax while Coral and I walked across to the clinic building. The guards bowed their heads to us as we walked through to the room where she was staying. Looking in, I could see Mykayla in her wolf form, the dark colors of her wolf standing out on the white sheet. Next to the bed, a massive brown wolf stretched out on the floor, his face on his paws. \"Timur?\" His tail whapped on the tile. \n\n\"She sleeps better with him in the room,\" Chase said. \"I thought wolf form might be less threatening when she wakes.\" \n\n\"Is she all right,\" Coral asked. \n\n\"Physically, she'll be fine. No broken bones, and now that she has shifted, her werewolf healing will help her recover in a few days.\" He didn't say the rest. \n\n\"Mentally?\" I was afraid of the answer. \n\n\"I have no idea how she will respond when she awakes. She doesn't know how to send, and I couldn't get her to shift back.\" \n\nCoral and I moved to the other side of the bed, stroking her neck and stomach lightly. \"Alpha? They've called the trial back in session,\" Beta Ron said. \n\n\"We've got a decision,\" I told the others. \"Come on.\" \n\n\"Link me in. I don't want to disturb her rest,\" Chase asked. \n\nI kept the bond open as we sat back in our seats and waited for the Council to come in. \"What's after this,\" I asked Sawyer. \n\n\"Back to your trial. The world Alphas have all seen the proceedings from January. Each side will summarize their position, and then we will have the opportunity to ask questions. When done, the Alphas will go back into the jury room.\" \n\nWe didn't have time to talk more because the door opened. Chairman Coffey and the Council sat, and he gaveled the proceedings to order. \"The Council's decision is as follows. The asylum request for the unborn children of Heather Rhodes and Greg Barks is valid.\" \n\n\"Yes,\" I sent to Chase. \n\n\"Wait for it,\" he said. \n\n\"However, the Council will not approve any additional requests for Trusted Agent status. We will allow time for her to give birth and wean the babies, but that is it. One year from today, the asylum status will expire, and Carson Nygaard must turn her over to the Council.\" \n\nCarson started to stand, but Sawyer and the Enforcer behind him were ready. They held him down as Chairman Coffey continued. \"If Alpha Nygaard fails to comply with the order, or if he allows Heather Rhodes to escape or reveal our existence, he shall be removed from office as Alpha of the Cascade Pack and executed. The trial of Alphas Rori King and Chase Nygaard will resume in thirty minutes.\" \n\nAnd with a bang of the gavel, my brother's mate had been condemned to die. \n\nCh. 8 \n\nHeather Rhodes' POV \n\nTrailhead in the Cascade Range \n\n\"We have to go,\" I told my aunt and her husband after letting them go. I'd kept their hands high, above my broken ribs, but they still ached. \n\n\"Back to the airport? I can't believe this shit,\" Mongo said. \n\n\"No, back to the Pack House. We need to get over the ridge while it is still light, or it is much more dangerous.\" \n\nThe big man looked over. \"And how exactly are we getting over the ridge?\" \n\nShe pointed at the biggest of the three wolves, a huge male. \"Four-paw drive. Mongo, you get Frank, Three T, you take Beta Carl on the right, and I'll be on Colletta.\" \n\n\"Really?\" Three Tequila walked over to Carl, who dropped to the ground so she could climb on. She shrieked as he stood up, but I showed her how to sit so she would not hamper his breathing. \n\n\"What about Tom?\" \n\n\"I'm going to head back to the main road. One of the Pack members will pick up your luggage from me, and then I'll head northeast to throw anyone off the trail. The Enforcers won't see or smell you if they are still watching the Pack entrance.\" \n\nFrank dropped to the gravel and let out a groan as he stood up with Mongo on top of him. \"Poor guy, having to carry your fat ass up the mountain,\" Tom teased. \n\n\"Can't we ride a snowmobile?\" Mongo didn't look comfortable on the big wolf. \n\n\"Too steep for that,\" I said. I waved to Tom as he got back in the vehicle, then coached Mongo on riding a wolf. \n\nWe went single file back up the trail. \"What happened with Carson,\" Three T asked me. \n\n\"I got a reprieve,\" I said. \"Carson and his Pack will let me stay here with the Pack and have my babies, but their protection is only good for a year. After that, Carson has to turn me over to them, so I can be killed to protect their secret.\" \n\n\"Then why are we staying here? Jesus, Heather, let's go back to the airport and get the fuck out of Dodge,\" Mongo said. \"We'll go with you. The Brotherhood will keep you safe!\" \n\n\"I can't do that,\" I said. \"If I leave, the Council will kill Carson. It's messed up, but he saved my life and brought me here, knowing it might cost him everything. I can't leave him behind.\" I wiped away a tear, thinking back to how he defended me this morning. \"I can't do that to him or his family. They all risked a lot to protect me.\" \n\n\"So, you're just going to let them kill you when the year is over?\" \n\n\"We'll think of something,\" I said. Frank chuffed in response, and we didn't talk much more as we hit the steep and dangerous part of the trail. \"Keep low and balanced,\" I told them as we pushed up above the treeline. I let out a sigh of relief as we reached the top; the sun was almost to the horizon, with Mount Ranier just to its right. The wolves kept moving slowly, as making their way down was even more dangerous. Frank almost went down when his front left paw slid on a patch of ice, making me hold on to Colletta's fur even tighter. \n\nThe sun was down as we reached the treeline. \"Oh, HELL yeah,\" Mongo said as he saw the three snowmobiles waiting in a clearing. We all got off, then the three wolves shifted and pulled on the clothes stacked on the seats. The three of us looked out over the valley, ignoring them until they had dressed. \"Can you handle one,\" Carl asked Mongo as he watched him walk around the new Arctic Cat. \n\n\"If it's got an engine, I can handle it,\" he said. \"This the Alpha One Mountain Cat? I saw one of these in a magazine.\" \n\n\"It is. Kind of hard not to buy a snowmobile with 'Alpha' in the name, but it was the best model for out here. Carson splurged last year and bought a bunch of new gear for us. We've got a dozen of them.\" \n\n\"Sweet.\" He set Three T in front of him, then got on and started it up; Frank got on the middle one with Colletta, and I got on with Carl. We set off down the trail, moving at an even pace down to the valley towards where the Pack House and homes were. When we had it in sight, Carl waved them up. \"Take a fast run across the clearing; you'll love it,\" he said. \"Heather's ribs can't take the bumps.\" \n\nThe two snowmobiles powered ahead, reaching high speeds as we traveled behind. They were already parked in the machinery shed when we arrived. \"I have GOT to get me one of these,\" Mongo said as he helped me off. \n\n\"I thought you didn't want anything to do with snow and cold,\" Three Tequila teased. \n\n\"Well, if we have to visit our family and friends, it's not so bad,\" he said. Carl led us into the big building through a side door that passed by the dining hall. I had gotten a tour, but I still didn't know my way around. Some people were sitting at a table eating sandwiches, while on the other side, an expansive recreation room had hockey playing on the televisions over the bar, with video games going on to the side. \"Do you want to eat now, or would you want to change and freshen up first?\" \n\n\"I'm kind of tired,\" Three Tequila said. \"I need to talk to my niece.\" \n\nI knew this was coming; Mongo couldn't be happy to find out what had happened. It was going to be a long, uncomfortable conversation for me. \n\n\"Fine, I'll have the kitchen send up some sandwiches and snacks to your room. Your clothes beat you here.\" We went to the top floor. \"Let McKenna know if you need anything,\" he said as he pointed to the woman seated at the reception desk by the Pack offices. She bowed her head to the Beta, and we continued down the opposite hallway to the guest room. \n\n\"Thank you, Beta Carl,\" I said to him as he opened the door to their room, which was similar to mine. \"I'll be next door when you're ready.\" \n\n\"Fifteen minutes,\" Three Tequila said. \"We're just going to shower and change quickly.\" \n\nI went to my room, finally able to raise my arms high enough to remove my shirt tonight. My ribs still hurt, but the painkillers and ice therapy had helped. I changed into lounge pants, a long-sleeved T-shirt, and lined moccasins, all purchased for me by Allison in town today. I'd fled Arrowhead with nothing, and everything I had in Las Vegas was gone. I didn't even have my bank books or emergency cash that I'd left in the car outside the Arrowhead Pack House. \n\nNow, it didn't matter. Everyone in the Werewolf world knew who I was and where I was hiding. Stepping out into the hallway, I got to their door at the same time the food did. \"Thank you, Allison,\" I said to the young Omega as she left the room. \n\n\"It's going to be a long talk, isn't it,\" she said. The cheery 22-year old and I had hit it off after meeting earlier in the morning when she came to clean my room. We had talked about hot men and music as I helped her with what I could handle physically, which wasn't much. She had good taste in clothes, too. \n\n\"I've got to come clean on a lot of things I'd rather not talk about,\" I said quietly. \n\n\"I'll come back in an hour with what you need,\" she said. I gave her a quick hug, then knocked on the door. \n\nI remember how awkward and uncomfortable I'd been when my Mom sat me down to have the 'birds and the bees' talk, not knowing that between school and the Internet, I already had the idea. I'd kept my sex life hidden from the Club and my parents, but I couldn't hide what my belly was doing. When they told me to come in, Mongo was sitting at a table by the window across from Three Tequila with their sandwiches. I poured myself a glass of milk and stood between them. \"I'm sorry,\" I said. \n\n\"Baby, we all make mistakes, and love makes you do things,\" Three Tequila said as she pulled me into her lap. \"We're not mad at you; we just want you to be happy.\" \n\n\"I'm mad at Greg,\" Mongo said. \n\n\"He already got a beat-down over it,\" I said. \"And do you think anything you do to him will be worse or more embarrassing than his current situation? His mate knows what he did, hell, every werewolf in the world does. 'Don't be a Greg' is the Werewolf version of 'Don't be a Todd.' He'll never live it down.\" \n\n\"Good,\" Mongo said. \"I see him, and I will beat his ass just because he hurt you.\" \n\nI rolled my eyes. \"None of that will help me. I'm here now, I'm fourteen weeks pregnant with twins, and I'm scared,\" I said. \"I've got an expiration date, for God's sake! They want to take my babies away and kill me!\" \n\nThree T held me, and Mongo got down on his knees and wrapped his arms around us both as the emotional dam burst. I don't know how long I cried, but when I heard the knock on the door, T's shirt was soaked, and my eyes and face were red. Allison came in with four containers of ice cream. \"Looks like I'm just in time,\" she said. \n\n\"Thank you,\" I said as I took my favorite flavor, mint chocolate chip. Mongo took the Rocky Road, and Three Tequila the cookies and cream. \"Sit with us, Allison. I'd rather not repeat this story more than I have to.\" \n\nShe sat on the floor next to the bed with her container of vanilla, and I launched into my story. I didn't stop, and they didn't ask questions. Everything I went through since leaving Orlando came out over the next hour. When I finished with the events of today's trial, we were all a mess. \"Allison, can you take the things back down to the kitchen,\" I asked my friend. \n\n\"Of course,\" she said. After giving me a big hug, she gathered it all up and took it to the cart waiting outside. \n\n\"I couldn't say this next part with Allison here; she's Pack, and I don't want it getting back to Carson,\" I said. \n\n\"What is it, baby?\" \n\n\"He says he loves me, but that can't be the case,\" I said. \"I watched the trial, and I've talked to enough werewolves now to know. Every wolf wants his mate, and I can't be the mate for one,\" I said as I laid back on the bed. \"Greg proved to me that love isn't enough.\" \n\n\"Greg was an asshole,\" Mongo said as he clenched his fists. \"He was older, and he should have known better.\" \n\n\"Greg is twenty-five. Do you know how old Carson is?\" \n\n\"I don't know, thirty?\" \n\n\"Eighty-seven.\" Their jaws dropped. \"They live a lot longer and age far slower than we do after their wolves emerge when they are about seventeen.\" \n\n\"Wow,\" Mongo said. \"And he's the middle boy.\" \n\n\"It doesn't matter. Everything is different for werewolves; they are superior to us in every way but fertility. The only reason the Council granted my stay of execution is to birth werewolf babies.\" I rolled over and put my head on Three T's leg. \"I figured it out while I was watching the trial. Carson took me out of Arrowhead, maybe because we are friends, maybe to protect his little brother, maybe because he didn't agree with what they were doing. Once I was gone, he realized how much trouble he had gotten in. None of those reasons would allow him to stay in power. Telling the Council that his wolf claimed me as his mate was the only way to get away with taking me from them. He doesn't love me; he can't. I barely know him.\" I wiped a tear away. \"I'd be dead right now without him. I won't run, because I don't want him hurt. I'll have my babies, I'll hold them in my arms, and I'll let him turn me over to them.\" \n\n\"NO!\" Mongo jumped up, pacing by the bed. \"There has to be a way out of this. I can't lose you, baby.\" \n\n\"I'm tired of running, Mongo. Too many people want me dead, and I don't want more people to die because of me. I'm a danger to everyone around me, especially to my babies.\" \n\n\"It's not your fault!\" Three T's face was shocked by my words. \n\n\"No one I love is safe as long as I am alive. If I have to die to save my babies, I will.\" \n\nCh. 9 \n\nThree Tequila's POV \n\nCascade Pack House, Alpha Wing \n\nMy heart was aching as I brought Heather back to her room. Her situation was bad, but her confession was worse. She convinced herself that she would have to die, and she was making peace with it. I gave her a careful hug before returning to our room. \n\nMongo was pacing in front of the window, clenching and relaxing his fists as he tried to calm down. \"It's not going to happen, I won't allow it,\" he said as I walked to him. \n\n\"We need to know what happened at the trial,\" I said. \"Whatever went on, it scared the shit out of Heather. She was already hurt and vulnerable, and now she's given up. We have to see why.\" \n\nHe nodded and walked out into the hallway, returning a few minutes later with McKenna. She plugged a memory stick into the LCD television above our dresser and handed Mongo the remote. \"Our Alpha's trial is about three hours long, but there are some interruptions.\" \n\n\"Like what?\" \n\n\"An execution. The rest is a continuation of Alpha Rori and Chase's trial. That won't make much sense unless you watch their first trial. I can get it for you if you want.\" \n\nI looked at the clock; it was almost eleven, meaning it was two in the morning Florida time. \"We're going to need coffee as well,\" I said. \n\n\"I'll bring you a pot,\" she said as she left. \n\n\"We could always nap first and get up early to watch it,\" Mongo said as he pulled me into his lap on the bed. \n\n\"Could you sleep?\" I looked at him; he was just as upset as I was. \n\n\"No.\" \n\n\"Me either. It's like my head is going a million miles an hour, and my emotions are out of control. I haven't felt this way since... since...\" Tears rolled down my face as I remembered. \n\n\"The miscarriage.\" \n\n\"Yes.\" It was less than a week after we'd announced our pregnancy when the cramping started, and two hours later, our baby was gone. My doctor told me it wasn't my fault, that pregnancy at my age carried higher risks, but I was a mess. She said there was no way to tell why it had happened, or if it would happen again. It was likely my last chance for a child of my own. One day I was a Mom, the next I was not. ",
        "Heather was my niece, and we'd grown close after they moved to Florida six years ago. Now I was her only family, and I had to be there for her. She needed to know people were in her corner. \"I'm going to freshen up, love. Get things ready?\" \n\nWhen I came out, he had poured a travel mug of coffee for me and had turned down the covers. I tucked in next to him on the pile of pillows as we watched the whole thing. There were a few places we had to back up and listen again before we caught what was happening. The execution? Brutal, but after hearing what he had done, I thought the werewolves had it right. \n\nWhen it was over, and the Council gave their decision, I was watching Carson on the split-screen. You couldn't fake the emotions he showed when they announced he was going to have to turn her over in a year. \"He won't do it,\" I said. \"He loves her.\" \n\n\"She doesn't love him, not yet anyway.\" He turned off the television, then the light on the bedside table. Sliding down, I moved until I tucked into his side, my head on his shoulder. He kissed my forehead, then laid back on the pillow. \"Goodnight, my love,\" he whispered. \n\n\"Goodnight.\" I closed my eyes, but my head was still spinning. Even in my exhaustion, sleep didn't come easily. \n\nI woke to a knocking on the door. \"Ma'am? It's Allison.\" \n\nI blinked, seeing the sun shining through the blinds, I wondered what time it was. \"Come in.\" \n\nShe poked her head in, smiling as she saw us bundled together under the blankets. \"The final statements are next in the trial of the Arrowhead Alphas, and then it goes to the jury. It starts in fifty-two minutes; I thought you might want to have breakfast and watch it with the rest of our Pack. We've got the broadcast set up in the dining hall.\" \n\n\"Is Heather awake?\" \n\n\"I woke her up first.\" \n\n\"Good.\" I felt Mongo get out of the bed, and he walked naked to the bathroom. She didn't bat an eye, not even glancing at his morning wood. I shook my head, not being used to the casual nudity that werewolves found normal. \"Do you have a moment?\"  \n\n\"Certainly, ma'am.\" \n\n\"Three Tequila, please. Ma'am makes me feel old,\" I said. I walked over to the dresser and pulled out some underwear, then put on jeans and a long-sleeved Harley shirt. \"What does the Pack think about Heather?\" \n\n\"I can't speak for them or the Alphas,\" she said. \n\n\"What do YOU think?\" \n\n\"I think she's a badass,\" she said like a fangirl. \n\n\"Really? Our Heather is good at judo, but she's young.\" \n\n\"You haven't seen the video?\" \n\n\"What video,\" Mongo said from behind the partially-open bathroom door. \n\n\"I'll be back,\" she said. Mongo dressed by the time she returned, and she put the memory drive into the television. \"This was at the mating party for Greg and Tatiana,\" she said. \n\nWe watched as the happy couple accepted congratulations from the Alphas before Tatiana left the room with some of the other ladies. Heather couldn't express how awkward the whole scene was, but I was proud of the way she handled him. She stood her ground, taking down an angry Tatiana, then shooting her wolf when she attacked in her fur. I watched the pandemonium erupt as Greg tackled Heather into the table before Carson took her from the room. \n\n\"I'm going to skin his ass slowly,\" Mongo said with a growl. \n\n\"See? Total badass,\" Allison said. \"Slapped the shit out of that no-good baby daddy and his jealous mate.\" \n\n\"She got her ribs broken,\" Mongo said. \n\n\"She's a human, she's fragile, but she's fierce. Greg is far stronger than her, and he could break her in half, but she wasn't afraid of him. And Tatiana? Her father is a Head Warrior in Russia. She's been learning how to fight since she learned how to walk, and Heather put her down TWICE in under ten seconds.\" \n\n\"Second time was with a gun,\" I said. \n\n\"So? It's not like she could shift when Tatiana did. Going after a human in our fur, that's a bitch move. I'm nothing for rank, an Omega who cleans the house. Most people wouldn't notice me, but she talked to me and helped me with my duties. She's a good person, and will be a good Luna for us.\" \n\n\"You believe Carson's wolf chose her as his mate?\" \n\nShe nodded. \"We don't lie about that. Mates are sacred; if his wolf has claimed her, she's his mate.\" \n\n\"Huh.\" Heather came in, and we all went down to the dining hall for breakfast. As guests, the Betas had us sit at the main table with them, with Heather in the Alpha's chair in his absence. When it was time, the lights dimmed, and the projection screens around the room came to life. \n\n\"The trial of Alphas Rori King and Chase Nygaard is called to order,\" Chairman Coffey said. \"The guilty plea remains in effect. The Defense and Prosecution will be allowed to make final statements before the jury decision on their punishment. Alpha Nygaard,\" he said as he gestured to the defense table. \n\n\"Abraham Lincoln once said, 'The best way to get a bad law repealed is to enforce it strictly.' And here we are. A human found out that we could turn into wolves, and for that, the Law demands that he die.\" Sawyer stood and walked towards the Alphas. \"The Alphas refused, and now the Law wants them punished instead. They have admitted they violated the law, but they had reasons for this, and in this gray area is where true leadership is required.\" \n\nI'd met Sawyer at Arrowhead before; he was a good man. I held Mongo's hand as he continued. \"The Law didn't ask what he was doing when he discovered our secret. Frank Grimes was the one who saw the Jaguars come in off the frozen lake, and he was the one who spread the alarm. Frank Grimes armed himself and used his skills from decades in law enforcement to keep the attackers from reaching the Alphas and the Blessed Child. Frank Grimes fought to protect the Alphas and has the scars to show for it. Yet, what did Frank do next? Did he inform Law Enforcement of our secret? Did he demand to be let go?\" \n\nEveryone knew the answer. \"No. Frank demonstrated true friendship and loyalty by providing sound advice on how to deal with the police investigation that COULD have exposed us. He came before the Council and the Alphas and helped us understand WHY we have to prepare for exposure in the coming years. Finally, he DID help us with his contacts in Government, ending the threat of an investigation that could have exposed us. He is trusted and loyal, yet the LAW would have him killed for it.\" \n\nThere was a murmuring in the audience, quickly stopped by the gavel. \"Continue,\" the Chairman said. \n\n\"Frank is not the only example of loyalty among humans trusted by Alphas Chase and Rori. The oldest trusted agent, the Pack Lawyer, kept our secret for fifteen years when there wasn't a Pack to be loyal to. Rori's mother and stepfather kept the secret after Rori shifted, which was before she even knew about Pack laws regarding humans. They are Betas in the Pack now. The Steel Ladies who saw her shift while in hiding with them, before Rori even knew she was a wolf, they kept her secret. Over and over, the Arrowhead Alphas have chosen to honor those humans with the knowledge, and the Pack is better for it.\" \n\nHe paused for effect, taking a drink of water. \"Just because a law exists does not mean it is right or moral. Laws allowed slavery, abuse, and forced matings to occur in Packs. Laws allowed men to wipe out a Pack for money and power. We have flawed laws, written by men long dead, and now overtaken by the technology and population. Do you not understand Frank's warning? It is no longer possible for us to react to potential discovery with execution. The bodies in the ground are the seeds of our destruction. So yes, they are guilty. They are guilty of returning the loyalty they have received. They are guilty of thinking long-term instead of reacting in haste. And finally, they are guilty of making hard decisions in the best interests of the Pack and of us all. The proper sentence is to do nothing, for they have done no wrong. The Defense rests.\" \n\nI was practically squeezing his hand off towards the end, and a cheer rose up among the Pack as he finished. \n\nAlpha Kirk rose in response. \"Guilt is not an issue here. The Alphas knew the law; the Alphas admitted breaking the law, and they pled guilty to it. This attempt at jury nullification is laughable. They received multiple warnings, one from the Chairman personally, yet they continued to defy the Law and the Council to do what THEY wanted to do.\" He got up and walked in front of the Alphas. \"If the Laws are unjust, we have the means to change it with a two-thirds majority of Alphas. Have the Arrowhead Alphas brought forth proposals to do so? Have they rallied support, pushed hearings, forced votes? Have they done the hard work of governing to modernize these laws? No. No, they've done none of this.\" \n\nHe pointed at the defendants and sneered. \"Instead, they set themselves up to be ABOVE the law, and in the process, they endanger us all. Do not be fooled by a silver-tongued lawyer or talk of blessings. They are like a pup with his hand in the cookie jar, trying to change the subject to avoid a punishment that is both just and due. Give them the sentence they deserve. Remove them from the Alpha position, and incarcerate them for fifty years. Let them be examples to the next person who thinks to ignore our laws. The Prosecution rests.\" \n\n\"The Jury will remain sequestered until reaching a verdict. No mental communication is allowed during this time. The trial is in recess.\" With a gavel bang, it was over. \n\nCh. 10 \n\nColletta Nygaard's POV \n\nRichard Helgeson Airport, Two Harbors, Minnesota \n\nI looked around as Carson's jet taxied to a halt near the terminal. Both of us were running a sleep deficit; we only got a few hours of sleep back home before we had to head to the Yakima airport. The jet had departed at four in the morning, and with the time change, we were landing just before nine on the North Shore of Lake Superior. \"I hope we just turn around and go back,\" I told him. \"Carson needs to get back there now that he can.\" \n\n\"He didn't look happy. He got a reprieve, that's all.\" The Council was letting Heather live, but only for a year. After the twins were born, she'd have precious little time before Carson would have to hand her over to be executed or die himself. \n\n\"I will not let them take my son or his mate,\" I said with a low growl. \"If the Council isn't changed...\" \n\n\"Then, we'll change it for them.\" He took my hand. \"One way or another, we will bring the Packs into the modern world.\" I squeezed his hand back, loving the tingles that ran up my arm when I touched my mate. The change Frank made from human to werewolf, though painful, had huge benefits. He was stronger, faster, and had the energy and stamina of a man half his age now. I suspected he would age slowly from now on like werewolves do, but we didn't know for sure. He was a wonder in bed now, making me a very satisfied, and very tired, she-wolf. It was no wonder I slept the whole flight. \n\nThe pilots had shut the engines down, and one came back to open the door. We only had one small bag that Frank carried as he followed me down the stairs. \"Luna Colletta,\" Beta Vic said with a bow of his head. \"Frank. Welcome back.\" Vic showed submission to Frank based on his mating with me, a former Luna, and because he recognized Frank's wolf was more dominant. Vic was an experienced fighter, but he wasn't better than Frank. His law enforcement training and the power of his wolf made for a deadly combination. \n\n\"Thank you, Beta. Let's get home before the Council wonders where you are,\" I said. \n\nHe drove us back to the Arrowhead Pack, but by a different route. Spider Monkey, his pregnant human wife, had purchased a home three houses away from the far side of Arrowhead lakeshore. We drove around the far side of the lake before pulling into his garage. His F150 Extended Cab pickup had just turned off when Spider came running out of the kitchen into the garage to greet him. \"Hi baby,\" she said as she leaped into his arms. \n\nI smiled as the newlyweds as I got out of the back seat with Frank holding my hand. Vic set the tiny woman down, and she embraced me. \"Vic said you needed to crash here with all the people at Arrowhead,\" she said. \"We're happy to host you.\" \n\n\"Thank you, Spider. How is the baby?\" \n\nShe moved her hand over her belly, which wasn't showing a noticeable bump yet. \"So far, so good. My obstetrician is keeping an eye on me, but she made me give up COFFEE! How fair is that?\" \n\n\"You have to do what is best for the baby, no matter how much you miss it,\" I said. \"It's worth everything you have to go through.\" I leaned in and whispered into his ear. \"Just make sure he knows how much you're suffering, so he takes care of you and gives you lots of back and foot rubs,\" I said with a smile. \n\n\"Honey, can you get them settled into the guest room? I have to get back to work.\" \n\n\"Of course. When will you be done?\" \n\n\"It's going to be a long day for me, baby, but the conference will be over soon. I'll text you when I know more.\" He leaned down and gave her a deep kiss. \"I love you.\" \n\n\"I love you too, honey.\" \n\nHe got back in his truck as we followed Spider inside her new home. \"I love the view from your kitchen,\" I said as we entered the open-plan kitchen and dining area. Large picture windows looked east onto the lake, filling the room with natural light. \n\n\"Thank you. We're slowly getting things the way we want them, room by room. It's going to be a great place to bring up our family, and it's so close to his work. Would you like some coffee or breakfast?' \n\nI shook my head; we were getting close to trial time. \"We've barely slept, Spider. I think if you show us our room, we'll catch up on our sleep until this afternoon.\" \n\n\"All right, it's this way.\" The large ranch-style home had the master at the end of the hall, with two bedrooms on each side along the way. She opened the door of the one on the far right, a queen-sized bed, nicely furnished with an attached bathroom. \"There are extra blankets and pillows in the closet, and towels are in this cabinet,\" she said as Frank set our bag down. \n\n\"Thank you for everything,\" I said. \n\n\"I'll be down the hall on the other side in my office getting some work done. If you need anything, poke your head in and get my attention. Yelling won't work as I normally have my headphones on,\" she said as she closed the door and left us alone. \n\n\"I'll set up the laptop while you shower,\" he said. I used the bathroom first, coming out in a towel. \"One thing I love about Spider Monkey is that she likes having EVERYTHING wired. High-speed internet jack and the television HD connection available on the same wall jack.\" The courtroom was already up on the television, with people filing into the room. \"If we keep the volume down low, it won't disturb her.\" \n\nWith our werewolf hearing, we didn't need it loud. Frank took a quick shower and joined me in bed as we watched the trial. \n\nSpider Monkey's POV \n\nI'd known Colletta for over a year, having met her at Club get-togethers here at Arrowhead. Seeing her now with a man on her arm, I could see she was living again. The loss of her husband had hit her hard. \n\nI smiled as I left the two lovebirds alone in the room. Rori had complained once about the noise coming from their bedroom after one of their visits. She said Frank had enough stamina to go for hours, and her Mom was very vocal during sex. Chase just turned red because his MOM was getting more action than he was! It was funny listening to HER complain, as she and Chase were the same way when they started out together. Still, I figured there was going to be some moaning and banging going on before sleep, so I went into my office and closed the door. \n\nMy office was my computer center and hacking center. I had two servers in the closet; one was for 'legal' use, the other for stuff that wasn't so legal. I had paid extra for the best fiber-optic connection and internet I could get, with separate feeds for each server. An L-shaped desk dominated the room, with four big LED monitors on top and two bigger screens on the walls. The window was blacked out and insulated to prevent laser surveillance, and that wasn't all. The walls, floors, and ceiling were lined with aluminum mesh, connected together and grounded to make a Faraday cage. The mesh prevented any electronic signals from getting in or out, the combination making the room surveillance proof. The rest had bookshelves and a print center on the back wall. All of the equipment was state-of-the-art thanks to the bag of money I'd received for my help in the Sons warehouse takedown. \n\nI booted up the screens and settled in, putting on my headset microphone. It felt like an Eagles day, so I started \"Hotel California\" playing as the computers went through their diagnostic and monitoring routines. The security check on my clean system alarmed, warning me of a new computer accessing the server. I clicked on the warning to see what was going on; it was streaming from a website. \"Those kinky old people are watching PORN,\" was my first thought. A few more keystrokes and I was piggybacking the feed onto my screen. \n\nIt was a big room, filling with people, and tables were elevated across the front along with two tables below them, then a gap until you got to the audience. I was about to click off of it when the cameras focused on a grim Chase and Rori walking in with Sawyer at their side, moving to one of the tables in front and sitting down. \n\nI moved the feed to the wall monitor, turning on the audio on my headphones. With the big display, I could recognize others I'd seen at Arrowhead. I could see Tina, Ron's wife, sitting in the front row next to Coral's husband, Keith Sexson. \n\nThen the camera shifted to a side door, which Vic was opening, and a line of people walked in. I recognized a few of them; Carson, Ashley, and Coral were together. The rest I hadn't seen. The audience was standing as they walked in and took their seats, then the big old guy in the center banged a gavel. \"Be seated,\" he said. \"The trial of Alphas Rori King and Chase Nygaard is called to order. The defendants previously pled GUILTY to charges of revealing our werewolf nature to humans in violation of Pack law, failing to kill the human immediately to protect our secret, and intentionally violating a Werewolf Council order. The Alphas on the jury have deliberated and determined the punishment. Defendants, please rise.\" I watched as Sawyer stood next to Chase and Rori behind the table; the man at the other table looked smug. \"Alpha Blackledge, what says the jury?\" \n\n\"The jury sentences Alphas Rori King and Chase Nygaard to time served, and admonishes them to focus on changing laws they find unjust rather than breaking them.\" \n\nThere was chaos in the courtroom with the verdict. Most of the crowd was cheering, while many sitting on the right side were screaming in outrage. The judge banged his gavel, and suddenly the audience shut up and sat down. \"This trial is adjourned. The defendants are free to go.\" He didn't look happy as he said it, and the room stood while he and the men by his side walked out the side door. Some of the others from the front table, all looking pissed off, walked after him, but Chase's family and some others stayed behind. \n\nI watched as well-wishers surrounded the couple, and they accepted the handshakes and hugs with big smiles. Taking off the headphones, I tried to get my head around what I had just seen. \n\nWerewolves. \n\nAlphas. \n\nCouncil. \n\nSecrets. \n\nDead humans. \n\nAll those people I knew at Arrowhead? They were all werewolves, or they wouldn't be in that room. \n\nAnd Vic was in the middle of it. \n\nVic was a werewolf too. \n\nMy hand moved down to my belly, feeling for the barely-there bump. \n\nI was married to a werewolf and having his baby. ",
        "I picked up my phone, starting a text to him, but put the phone back down when my brain engaged. I remembered the charges; their laws said humans who found out had to be killed. \n\nI couldn't tell anyone, not until I could talk to Vic in private. \n\nMaybe I shouldn't say anything. \n\nI needed to know more before I could decide. \n\nThe feed stopped, and I used my system administrator rights to find the webpage and login they had used. Bringing it up, I found a site titled \"Werewolf Council Proceedings.\" Underneath were recordings of earlier broadcasts, including several from the trial of Rori and Chase. That wasn't what caught my eye. \n\nChase Nygaard was on there as well, the trial videos labeled \"Asylum for Heather Rhodes.\" \n\nI put my headphones back on and clicked on the first link."
    ],
    "authorname": "partwolf",
    "tags": [
        "luna",
        "mating",
        "pack",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-06-10"
}