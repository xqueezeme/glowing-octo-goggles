{
    "title": "Succubus Summoning 105",
    "pages": [
        "AUTHOR'S NOTE:\n\nThis is a continuation of the story begun in Succubus Summoning 101, 102, 103 and 104.\n\nSorry for making everyone wait so long. Real life intervened.\n\n*****\n\n\"Still with us baby warlock?\" Rosa whispered in his ear, her hot breath tickling through his hair.\n\nShe reached down between his legs with her other hand and cupped his balls in her hand. They were already swelling again, churning out more and more sperm despite the protestations of his body.\n\n\"Oh yes, you've still got plenty to give,\" Rosa whispered. She kissed him wetly on the side of his mouth with her full lips.\n\nPhil continued to stare into Verd\u00e9's eyes. Once again he thought he saw something there, something hiding in the depths. The moment passed just as quickly as before, leaving Phil to stare at her bright, cheerleader mask.\n\n\"Your turn,\" she smiled breezily at Rosa.\n\nPhil didn't feel like he had plenty to give. He felt like he'd been hollowed out. He was practically empty. He had so little energy left in his body he felt he'd probably fall over if Rosa wasn't supporting him.\n\nRosa let go. Phil fell backwards onto the bed and lay there.\n\n\"Okay, maybe not plenty,\" Rosa amended. \"There's some left though. He's still breathing for starters.\" She put her head on his chest. \"I think.\"\n\nRosa and Verd\u00e9 were succubi. Phil was a novice warlock and -- up until about half an hour ago -- a virgin. He'd gone along with his friend Jake Pulman's hare-brained scheme to summon a couple of sex demons with the hope of finally getting rid of his virginity. The succubi had taken care of that. They'd also taken care of Jake. Phil was the next course on the menu.\n\nPhil's current predicament had a mixture of positives and negatives. On the negative side Rosa and Verd\u00e9 were going to kill him. On the positive side, if he was going to die, then being fucked to death was probably one of the better ways to go.\n\nGiven the choice Phil would rather not die at all. The sexual attentions of two succubi might be the high water mark of any man's existence, but Phil was only eighteen. He would have liked more of a lifetime before Verd\u00e9 and Rosa brought it to a glorious close.\n\nHe didn't really have a say in the matter. His body had betrayed him completely. All he could do was lie back and stare at the ceiling.\n\nCome on! he thought. He had to find a way out of this. His legs were too weak for him to try and run away and the succubi had used magic to screen the room against any possibility of rescue. He had to use his brain.\n\nHe was fucked.\n\nPhil tried to remember his classes. Hadn't they already gone through emergency dismissals? Wasn't that right at the start of Practical Daemonology?\n\nDammit! He couldn't remember anything. Why did he have to be such a fuck up when it came to school?\n\nAll he could remember about succubi was the sniggering and innuendo amongst his classmates. The teachers had told them they were dangerous, but they said that about every demon. Compared to the really nasty demons that liked to set people on fire or eat them alive or set them on fire and then eat them alive, a demon that looked like a hot chick and was only really good for screwing didn't sound that threatening. They all knew, or thought they knew, why warlocks summoned succubi -- there were all the rumours about the Scrote for starters -- and it had been a source of much ribald amusement in the weeks following the lecture.\n\nOf course it was funny. Men having their life essences sucked out through their cocks. It was too silly to be truly taken seriously.\n\nNow all he could remember were the dumb jokes about succubi when he really needed to remember how the fuck to get rid of them.\n\nPhil wasn't laughing now. He'd watched Rosa suck Jake dry in a matter of moments like a spider sucking up its prey. His own balls were boiling as they commanded his body to break down fat, muscle and tissue alike to produce ever more seed for the demons to drink.\n\nNudge nudge, wink wink, phwoar phwoar. What a way to go, eh?\n\nYeah, seemed real funny now.\n\nThis was no time to be wallowing in self pity. It might have been the defining quality of his life so far, but if he didn't shake himself out of it and remember, it was going to be the defining quality of his death as well. Did the dismissal ritual require words, gestures or both?\n\n\"I think we might have broken him,\" Rosa said, looking down at him.\n\n\"He just needs a little perking up,\" Verd\u00e9 said.\n\nShe sat astride his stomach and slowly lowered her body down on his. He felt the moistness of her pussy as it kissed his navel. He looked up at the ripe globes of her tanned breasts, felt their softness as they squashed against his chest. Verd\u00e9 fixed him with her glittering green eyes as she lowered her face until it hovered just above his.\n\nWords. He had to remember the words.\n\nHe couldn't look away. Her soft green eyes swallowed him whole.\n\nHer arms curled around his back and behind his head, drawing him into an embrace. Her lips, soft and moist, pressed against his in a lingering kiss. He was powerless as his body responded. His arms came to life. He wanted nothing more than to hold her warm body against his. Forever.\n\nHer lips brushed down his cheeks.\n\n\"There's no need to be afraid,\" she murmured softly into his ear.\n\nShe brought her face back up until her wide green eyes were staring straight into his. He was lost again, pulled into and imprisoned within her glittering emerald depths. She held him there as her lips crushed down against his, harder this time, forming a seal around his mouth. Her hands gripped the back of his head.\n\nShe exhaled and fire flooded into Phil's lungs.\n\nHis eyes widened in surprise as her breath rushed through his body, scouring the lethargy and weakness from his muscles. Energy flooded back into his body as if he'd just been shocked back to life. She held him like that, her eyes open and staring deeply into his as her breath poured through his body like a crackling cloud of electricity.\n\nShe broke off the kiss with a savage smile.\n\n\"There, that's better now isn't it?\" she said.\n\nShe sat back up, put a hand to her mouth, pursed her lips and blew him a kiss. Warm air scented with the fresh perfume of wild flowers formed a cloud around his head. Phil felt equally as light as Verd\u00e9 took his hand and pulled him up into a sitting position.\n\nPhil's cock stood up between his legs like a pole. Still staring intently into his eyes, Verd\u00e9 lazily pumped a hand up and down his shaft, sending trembling shivers crackling across Phil's flesh.\n\nHer breath had innervated him, but at a cost. She hadn't given him energy, but rather her magic had forced his own body into a higher gear. He was overclocked, burning up as his body ran far past the point where fatigue should have shut it down.\n\nRosa waited for him at the other end of the bed. Her pointed red tongue licked the corner of her moist red lips.\n\nIt was her turn.\n\n\"How would you like him?\" Verd\u00e9 asked her.\n\n\"Hmm,\" Rosa said. She went on all fours and wiggled the rounded curve of her ass in the air. \"I think it's my turn to be the good hellhound,\" she said, looking back at them over her shoulder.\n\nVerd\u00e9 guided Phil up onto his knees. His own cock became his leash as she led him down to Rosa's waiting pussy.\n\n\"Yes,\" Rosa purred. \"I want to try out that wing trick.\" Her wings flexed and shivered with anticipation.\n\n\"Copycat,\" Verd\u00e9 said.\n\n\"I know, but the image of some little human all wrapped up in my wings and jerking helplessly into my pussy has got me all wet. It's your fault.\"\n\nJuices from Rosa's vagina formed an unbroken clear strand as they drooled onto the bed. As Phil approached the lips of her vulva opened like a mouth and hungrily stretched towards his cock.\n\nPhil tried to ignore them. Words, remember the damn words, he thought. It was in his mind somewhere, a silvery fish slipping through the recesses of his brain, too fast for him to catch.\n\nPhil was right behind Rosa. Moist heat spilled from her gaping pussy and swirled around his erection. His body longed to thrust forward and plunge his cock into her waiting warmth.\n\nVerd\u00e9 wasn't about to let him. She still had a hand wrapped tightly around his cock and held him back, relishing the frustration building in both succubus and human as she brought their intimate parts tantalisingly close to each other without allowing them to come together.\n\n\"Such a tease,\" Rosa growled. She tried to rock back and swallow Phil whole, but Verd\u00e9 put a hand on her ass, blocking her.\n\n\"We've already done doggy style,\" Verd\u00e9 said. \"Doing it again would be boring, especially after we promised baby warlock we'd do every filthy little thing with him.\" She lightly caressed Rosa's flawless ass cheeks. Her hand moved across to the base of Rosa's tail.\n\n\"There is something we haven't yet done with our baby warlock though,\" she lifted up Rosa's tail and flashed Phil a mischievous glance.\n\nRosa looked back over her shoulder, her eyes suspicious. \"Don't even think about it.\"\n\nVerd\u00e9 smiled at Phil and lifted his erect cock up until it was pointing at the tight little bud of Rosa's anus.\n\nPhil tried not to pay any attention. He had to remember the words to that damn spell. Memories of old lectures played on the inside of his skull. There was the Crotchety Slewis, bushy white hair sprouting in random clumps, his voice scratchy and arms waving as he got excited over one topic or another. In the memory Phil zoomed in on the Crotchety Slewis's lips. What was the senile old bastard saying? It was close. If only he could just...\n\nVerd\u00e9's tail prodded a sensitive spot between Phil's legs and the shock jolted his hips forwards.\n\n\"Not the ass, not again,\" Rosa said.\n\nPhil thrust forward. His cock encountered slight resistance at the entrance to her anal passage, but then her muscles relaxed and Phil's erection slipped deep into the soft, moist interior of her ass. She stretched to accommodate him and his cock glided effortlessly along a warm tunnel as he slid deep enough into her for her ass cheeks to press back against his body.\n\nSoft, Phil thought. Tight.\n\nToo tight.\n\nA cold chill shivered down Phil's spine. Jake had already stuck his cock in her ass and Phil had seen the results as Rosa had sucked out his life, leaving behind a withered husk. Now Phil too had his cock buried deep inside a succubus's ass.\n\nHer muscles contracted around his cock. Not tight enough to hurt, but tight enough to make sure Phil couldn't pull out.\n\nWords, dammit! What were the words?\n\n\"You wouldn't want to send our baby warlock off into the afterlife without first experiencing the pleasures of anal sex?\" Verd\u00e9 said. Her slender fingers ran across Phil's buttocks and playfully tickled his own anus.\n\nRosa muttered something back in a language Phil didn't recognise. The words sounded foul enough to make even the crudest sailor blush.\n\nVerd\u00e9 laughed. \"Don't worry. I'll make sure your pussy doesn't miss out.\" She slid under Rosa's body and Phil heard liquid sounds and soft murmurs as she started to lap at Rosa's pussy.\n\nRosa purred with contentment and stretched her body like a cat. Within her ass her muscles squeezed Phil's cock and sent gentle waves of contraction along his shaft. The musky perfume of her sex rose up around Phil like a cloud.\n\n\"Ah yes, my ass is delectable isn't it,\" Rosa said.\n\nShe began to gently rock back and forth, letting her muscles squeeze and tug his cock. Phil knelt there helplessly, imprisoned both by her ass and the lust she'd stoked in his body.\n\n\"Mmm. It's all about finding the right rhythm.\"\n\nHer rocking motions got faster and her ass sucked and slurped at his erection with greater urgency. Her soft buttocks gently slapped against his lap.\n\nNo, this was what had happened to Jake. The memory of his body collapsing in on itself like a deflating inflatable was still scarred on Phil's brain. Not even this grotesque image could turn off his lust-driven body. Rosa squeezed and a burst of pleasure rolled down his shaft and flooded through his body. All other thoughts were pushed from his mind. He drove his cock back and forth in her pulsating tunnel and ached to fill her with his seed.\n\nVerd\u00e9 broke away from her cunnilingus to let her long tongue tickle Phil's swollen testicles. He felt them twitch and begin to tighten.\n\nRosa's motions slowed down as her muscles squeezed his cock with slower and more deliberate contractions. She had him and she knew it.\n\n\"Yes, pump your life into my exquisite ass baby warlock. Just like your friend.\"\n\nPhil gave voice to an inarticulate cry as his cock squirted a long stream of semen into her tight passage. Muscular contractions rolled up and down his shaft, hungrily milking every drop from his cock. Phil croaked in both pleasure and pain as fiery blossoms of ecstasy burst all around his body. He felt like an old man labouring for breath as the stream finally came to an end.\n\nAnd still he wanted to give her more.\n\n\"Mmm, delicious,\" Rosa murmured.\n\nShe slowly wiggled her ass, letting his still-erect cock slide against her slick interior. Her tail slid up his chest and tickled his nipples. Beneath him Verd\u00e9 had abandoned Rosa's pussy completely and was using her pointed tongue to softly dab and probe around the rim of Phil's anus.\n\n\"More,\" Rosa growled. She pushed back hard against him, her soft cheeks pressing against his crotch. Muscles bunched around his cock and pulled it deeper into her body. Rings of warm flesh contracted around his shaft and rubbed along its length. Hot fluids bathed the tip of his cock as her ass sucked it hungrily.\n\nPhil's groan of ecstasy degenerated into the gasps of a worn out marathon runner as her ass muscles tightened around his cock and pumped another long orgasm from his body. It was too late, he realised with horror. She was sucking him dry, just like Jake.\n\nHe didn't have the energy to stay upright, but couldn't fall either. Rosa's ass had too tight of a grip on his cock. Instead he hung there, his body jerking helplessly like a puppet as she rocked back and forth against him.\n\nRosa moaned and grunted like a wild animal. She pushed back hard, triggering another detonation of pleasure in Phil's body as he squirted more of his seed into her hungry ass. Her soft flesh vibrated around his cock, milking more and more fluid from his body.\n\nPhil's head lolled backwards as Rosa's ass noisily slurped up every drop of cum. Finally she released his cock with a gentle popping sound and Phil collapsed backwards, his legs folded beneath him.\n\nHe took a deep breath and it left his body as a wheezing rattle. Beneath the pleasurable glow from the aftermath of three successive orgasms he felt a dull ache in all of his joints. His body was aging as they sucked the life from it.\n\nRemember, dammit!\n\n\"Aza...\"\n\n\"Exhilio...\"\n\nHe was still muttering random alien syllables as Rosa came round behind him and put her hands beneath his armpits. She lifted him as easily as if he'd been made out of straw.\n\n\"It's time,\" Verd\u00e9 said.\n\nShe lay down on the bed in front of Phil and opened her legs invitingly. She was stretched out before him like a perfect piece of art. Phil stopped mumbling, completely struck dumb. Verd\u00e9 stretched her labia wide with her one hand and beckoned to him with her other.\n\n\"Come to me baby warlock. It's time for you to fly to heaven.\"\n\n\"No-o-o,\" he stuttered.\n\nYes, his body sang as Verd\u00e9 opened her arms to embrace him. Rosa gently lowered him onto the succubus's body. Her tail coiled around his cock and guided it to the entrance of Verd\u00e9's pussy.\n\nPhil's protestations turned to soft moans of bliss. The lips of Verd\u00e9's vulva had puffed up like soft cushions. The head of Phil's cock sank between them and was slowly engulfed into the plush interior of Verd\u00e9's vagina. Her soft vaginal walls closed around his cock and gently held it in place. Phil lay on top of her, his body resting on the soft pillows of her breasts.\n\nSo soft. So comfortable.\n\nRosa climbed on top of Phil. Her crotch straddled his buttocks and her full breasts pushed against his back. The succubi wrapped their arms and legs around his body. He was sandwiched between them. Their warm bodies pressed against his front and back. Their musky perfume filled his nostrils. He couldn't escape.\n\nHe didn't want to escape.\n\n\"Relax baby warlock,\" Rosa whispered in his ear. \"We'll do the work now.\"\n\nBeneath him Verd\u00e9 sighed and slowly writhed, gently bucking against him. Her flesh squeezed his cock and sent delicate contractions pulsing up his shaft. Rosa wriggled on top of him, massaging his back with her breasts. She humped his buttocks, driving him deeper into Verd\u00e9's soft warmth.\n\n\"Time to let your life go baby warlock,\" Rosa whispered in his ear, giving the lobe a little nibble.\n\nPhil's body was ablaze with lust. His whole being was consumed with pleasure. The cushioned interior of Verd\u00e9's pussy wrapped around his cock and pulsed, each contraction sucking harder and deeper.\n\nVerd\u00e9 closed her eyes and moaned. She didn't need to move. Her vagina did all the moving for her as the muscular wall sucked, squeezed and kneaded Phil's cock. She sensed he was near and pulled his cock deep into her and smothered it in soft warm flesh.\n\nPhil let loose a strangled gasp as his shrivelling body squirted a thick stream of semen into her warm body. A fireworks display of pleasure crackled inside his skull. Her flesh absorbed his juice and eagerly sucked at his cock for more.\n\nOh fuck, this was it, Phil thought. He had no more time left.\n\nThe first orgasm hadn't even subsided before a second crashed into it. Groaning, Phil pushed harder against Verd\u00e9, driving his cock deeper into soft tissues that enveloped and squeezed his erection.\n\nPhil tried to detach his mind from the wildfire of pleasure burning through his body. There were only moments before his thoughts too would be consumed by the blaze.\n\nHe had to remember.\n\nVerd\u00e9's pussy convulsed and Phil pumped more of his life fluids into her hungry flesh. On top of him Rosa kissed his neck. Her breasts squirted warm oil onto his back and she massaged it into his flesh with her nipples and tongue. His body shivered with ecstasy. He felt as insubstantial as gossamer caught in a warm summer wind.\n\nThe words were slipping through his grasp, swimming off into the blackness.\n\nAnd then he had them! Random memories and thoughts played through his weakening brain. In one he watched the Crotchety Slewis dismiss a particularly foul looking imp during a lecture. He watched the old warlock's lips move and then his own lips were moving, copying the movements he saw in his memory.\n\nHe knew the dismissal spell! He could save himself!\n\n\"Exalarat dom damonaef--\"\n\nHe didn't get to finish as the words were smothered in Verd\u00e9's mouth as she placed her soft lips on his. Phil's anguish was fleeting as he lost himself to Verd\u00e9's kiss.\n\nRosa gently blew sweet nothings into his ear that spiralled deep into his mind and blossomed forth as lustful images. Verd\u00e9's vagina softly sucked his cock, setting off a chain of orgasms that drove out all conscious thought from Phil's brain.\n\n\"You're ours now,\" Rosa whispered in his ear. Her tail, slick with lubricant, gently pushed its way into his ass and wormed upwards until the tip pushed against his prostate.\n\nA white-hot supernova of pleasure burst in Phil's body. The continuous cycle of orgasms merged into one long jet of semen as he emptied his body into Verd\u00e9's welcoming vagina. His last dissenting thought was blown aside by the hurricane of ecstasy whirling through his body.\n\n\"I told you it would be glorious,\" Verd\u00e9 whispered in his other ear.\n\nThe succubi unfurled their wings and enfolded Phil in a warm, perfumed cocoon. Within it his body twitched in constant ecstatic pleasure.\n",
        "A black, blissful curtain fell across his thoughts and Phil surrendered to the darkness. It was a good way to go. "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "warlock",
        "demon",
        "magic",
        "summoning",
        "anal"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-105"
}