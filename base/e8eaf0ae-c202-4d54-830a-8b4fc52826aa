{
    "title": "A First Date & What Could Have Been",
    "pages": [
        "Our first date should have been our last. In fact, had it not been for a weird event, I doubt we would have ever talked to each other again. It's funny how fate can lend a hand...\n\n*****\n\nAnnika and I met up at the fair for what should have been a light-hearted adventure to knock over bottles, drop ping pong balls in jars, and generally just reinforce how much we wanted to end up in bed together without saying it out loud.\n\nInstead, our competitive natures kicked in and we trashed talked each other, tried to one up each other, and gloated upon each victory.\n\nThe good was that we were an even match for each other. We also didn't try to kill each other, but this just made it more awkward with one or the other taking turns backing off not to come across like a ruthlessly competitive asshole. All this trying to win but then trying not to look like it meant we were spending a lot more energy maintaining our distance and the protective barriers we had built up with our previous relationships. In the end, neither one of us could tell who was the better of the two of us but it was clear that we weren't really getting to know each other at all. \n\nA few hours of this and I think we were both about to call it a night. We had made it to the end of the runway and one of the last areas was an ESPN booth. There were several different stations inside with a cameraman and a few C-lister broadcasters. Low cost late night entertainment a la American Idol type auditions. Annika looked at me and smiled.\n\n\"What's your sport, stud? Let me guess. Baseball.\"\n\nI was too exhausted mentally to try to get into it with her, so I just put on a brave face and said, \"I've been known to throw a ball or two.\"\n\nShe howled. \"That's all you've got? I bet you haven't thrown a ball in your life.\" She had to know that wasn't true. I had beat her pretty handily on the milk bottles earlier, though I had short armed my throws.\n\nShe grabbed my arm and pulled us into the pitching line which only had a few people in it. They had a mound, a catcher, and a radar gun. Throw 90 miles an hour and get on TV. My mouth went dry. We watched the person on the mound take their five tries. None over 65. We signed release forms. Something about being on TV. I didn't read them before signing and immediately regretted it.\n\n\"OK, Nancy. I bet I can throw harder than you can.\" She was trash talking me.\n\nAgain, was it the truth or false bravado? All my creativity, insinuation, and innuendo had been used on her earlier and now I was just battered and reverting to being boring and straightforward. She was just too alive and I didn't have the mental energy to keep up.\n\n\"Why in the world do you think that? I'm taller, stronger, and have longer arms?\"\n\nShe frowned. \"Is that it? I played intramural in college. It's not about how big you are - it's about how you throw a ball.\" We watched the next guy. He was wild. Only one of his five ended up in the catcher's mitt. He was probably drunk. \"And you've got to get it over the plate, too.\"\n\nShe was intent on the effort, I'll give her that. I should have found her focus appealing. I like baseball girls. Instead, I was dreading what was almost on us. I didn't want to do this. It had been so long. And I had walked away, not ever intending to do anything similar again.\n\nIt was our turn and Annika stepped up to go first. The broadcaster turned his attention to us and after starting to ask her name, stopped mid-sentence when he looked me in the face. Of course, I had to run into a guy that knew me. From that summer day so very long ago. I shook my head at him. Don't. Please. Annika turned back to look at me and then back to the company man.\n\n\"I'll be damned. Will Abernathy. Never expected to see you here. Long way from Omaha, isn't it? My name is Victor.\"\n\nHe held his hand out to me. I shook it. Annika had an expression of bewilderment on her face.\n\nHe yelled to someone across the area. \"Jasper, get over here!\" Then turn back to me and spoke in a normal tone of voice, \"Sorry, Will. You going to throw for us tonight?\" He turned toward the newly arrived cameraman. \"Over here, Jasper. Let me know when you're ready.\" The cameraman started setting up a tripod.\n\n\"Will, I was actually at that game, you know. Damn. Three straight pitches. Thought for sure I'd be seeing you in The Show.\" He paused and stared at the ground for a moment. I wanted to leave. I didn't want to do whatever horseshit he was about to think up. I didn't want to answer whatever horseshit question Annika was going to ask about all this.\n\nVictor's voice snapped me out of my head, \"Will, let's recreate the end of that game. What do you say? Eight warmups. Three pitches for the money. All fire. How hard do you think you can throw these days?\"\n\nI shook my head, \"I haven't thrown a ball in 20 years, Victor. Not in a way that's mattered. I'm just going to embarrass myself.\" Annika was standing beside me now. Her expression was soft. She wasn't talking shit anymore. I wanted to leave.\n\n\"Nonsense, Will. Just throw. I'll give the color. I'll make the story. If it doesn't work, it'll never air.\" He paused for effect. \"But if you do still have it? What a story it'll make. You take all the throws you need to get loose. When you're ready, I'll set you up to do the warmups and money balls. I think you can hit 90.\" He grinned. Annika no longer looked confused, but other than that, I couldn't guess what she was thinking. \n\nThe cameraman gave the thumbs up. The catcher was standing with his mask up and his hands on his hips, probably wondering what the hell was going on.\n\n\"Allright, goddamnit. If we're going to do it, we're doing it the right way. Get me a glove and a cap.\" I thought about trying to throw a 90 mile hour fastball at over 40 years old. \"And have some ice packs ready for me,\" I added under my breath. \n\nA too young production assistant came out of nowhere to get me a glove and a cap and get me up to the mound. Then she pulled Annika off to the side to watch as Victor began to weave a tale for the crowd who was starting to gather.\n\nI stepped up and my battery mate threw me the ball. As soon as it hit my glove, I was back in Rosenblatt Stadium in 1997...\n\nIt was the final game of the College World Series and I was coming in from the bullpen for what we hoped was the final out. I threw hard and it was my job to be unhittable. We had a solid lead in the ninth so I wasn't supposed to be necessary, but a few runs on two outs and a starter that couldn't get the ball over the plate and I was in the game. Two outs, bottom of the ninth, 3 men on, and a 3-0 count. Three fastballs later - two 98 mile per hour and one 99 - and the game was over.\n\nAnd so was my baseball career.\n\nWhy am I doing this? I looked at the ball in my hand. What had once seemed so familiar - so natural - now felt foreign. I looked at my target. He was set. I set up, too. Outside of the right foot against the front of the rubber. I raised my glove hand and throwing hand in front of me, brought them together, and dropped them to my waist slowly. Deliberately. Then, I raised my left knee in front of my body, shifted my weight toward my left, extended my left leg, pushed off with my right, and exploded toward home plate. Both my elbows were out from my body now. I opened my hips and then my shoulders as I continued my throw.\n\nI still remembered how to hurl. I just didn't remember how to balance.\n\nThe ball left my hand and I knew it was on target. I knew it was a hard throw. Nothing hurt. Nothing broke. I continued my follow through. The ball popped into the mitt. But my follow through never stopped and I almost ended up on my ass. The catcher laughed at me.\n\n60.\n\nI wasn't going for heat. I was going for feel. It didn't hurt. My motion wasn't completely shot, but I was 42 years old and my best throws were long since behind me. The ball came back at my head. I stopped it from hitting me in the face with my glove.\n\nI threw again. And again. And again. And again. I didn't fall over. I started getting faster. I felt the motion snapping back into place. I tried not to look behind me. I was sure Annika was still smirking at me making a complete idiot of myself almost falling over and not being anywhere near as fast at the hype machine known as Victor had talked up.\n\nNow there were more people. A lot of people. Victor was whipping them into a frenzy over a human interest piece about a nobody who hurled three ropes of fire so a team no one remembered could claim to be the champions of the world from a time that no longer mattered.\n\nI had lost count of what I had thrown. Sweat was pouring off me in buckets now. I was warm. My motion was popping. The gun was hitting 80. Every ball hit the target dead center. My battery mate wasn't laughing anymore. He was with me. We were going to do this together or die trying. I'd get a, \"Land a half step to the left so your hips get more room,\" or, \"Don't drop that elbow this time.\" I don't know if I'd hit 90, but I'd get close.\n\nI called to my catcher, \"I'm warm. How many was that?\"\n\n\"Thirty-nine.\"\n\nLess than 10 minutes of throwing. It seemed like a year. My arm felt like rubber. Only needed 11 more. I left the mound and walked toward Victor and the camera. We met for a few minutes of words. I mumbled a few of the old cliches, but I wasn't really thinking about what either of us were saying to the camera and the crowd. My mind was on other things. I caught Annika's eye. She had her hands together and in front of her mouth in that universal expression of nervousness. I felt Victor pat me on the back.\n\n\"Good luck, Will.\"\n\nAnd that was it. Back to the mound. My big lug of a catcher lumbered up to within two feet of me, glove over his mouth as if we were in a game. Why we he care if someone read his lips? \"He said you had the bases jammed. What signs did you use that day?\"\n\n\"Just kept it simple. They knew they were going to get the heat.\"\n\nHe dropped his glove, grinned at me, pulled his mask back into place, and jogged the 60 feet back to home plate.\n\nI got set, went into the windup, and put one right down broadway. I ignored the display and remembered that day. One. The sun had been blindingly bright. I threw again. Two. The crowd had been insane. Three. I couldn't hear my team mates or the umpires over the noise. Four. I looked for my family, but there wasn't enough time to find them and the situation made it hard to think about anything but the game. Five. This guy likes the heat. Six. I'm going to give it to him hard and away. Seven. If he catches up to it, he sure as hell won't do more than than squib it to first and I'll be there waiting for the throw. Eight.\n\nI walked off the mound, took off my glove, and started rubbing the ball. That was my set of warmup pitches and I was ready for that fucker now (though no one was in the batter's box). I could see my team mates again (though none of them were here). I could smell the freshly cut grass (though it was the middle of St Louis in October). I could hear the roar of the crowd (though the booth had gotten as quiet as a tomb).\n\nI put on my glove and walked back to the mound. I dug into the front of the rubber with the outside of my right foot. I bent forward at the waist and stared between my catcher's legs. He dropped 1 finger. I nodded, straightened up, and came set. After a long pause, I went into the wind up and then exploded toward the plate with everything I had in me. It felt good coming out of my hand. A sound like a gunshot echoed from the catcher's mitt. The crowd roared. I looked at the display.\n\n90.\n\nGoddamn right. Nobody's getting around on me today. I caught the looping toss from home plate and peered in again. Again, 1 finger. Yup, here comes the heat. I put even more into this one. It came off my fingertips feeling righteous. Right down center street.\n\n91.\n\nI caught the ball again as it was returned to me, took a deep breath, and exhaled slowly. I leaned in one more time. I saw 1 finger held straight down. Fastball. I saw a fist. Put some pepper on it. I saw that fist slap the center of the mitt. And let's finish this shit.\n\nI straightened up. I closed my eyes and centered myself. Twenty years. I walked away twenty years ago. I hadn't missed it, did I? I had a different life. The one I wanted. I didn't miss this, I told myself. I opened my eyes and went hard to the plate.\n\nAs soon as the ball came out of my hand, I knew I had found it. Everything was perfect. Every knee, elbow, wrist, hip, shoulder, head, foot was in the exact right place. My body mechanics had just produced the most efficient slingshot possible. It had taken exactly 50 pitches to get back to that point from twenty years prior.\n\nThere was another thing I knew as it left my hand: this throw looked different. \n\nFor my previous two pitches, I had thrown a two-seam cut fastball, also known as a \"cutter.\" For that pitch, the ball is held in the hand in such a way that there are two seam lines perpendicular to the two throwing fingers. It means that as the ball speeds toward the plate, the two seams with the slightly off center backspin imparted on the ball from the fingers provides some late movement to mess with a hitter, but at the expense of speed. You can see a cutter when it's traveling directly away from or directly towards you because the ball looks bright white with two thin, perfectly solid and nearly vertical lines.\n\nBut that's not what this pitch looked like. That's because this pitch was called a \"four-seam\" fastball. Four seams are placed perpendicular to the fingers so there is twice as much lift from the backspin. Good four-seamers are as straight as an arrow and faster than shit through a goose. So, the middle of this ball looked dark and fuzzy and the two sides looked bright white, like polar ice caps, as it sped away from my hand and toward home plate. It was the perfect throw. It had so much backspin that it didn't drop an inch.\n\nCRACK!\n\nI could tell from the impact that had been a burner. I stared at the ground. I felt tears welling up in my eyes. My shoulder throbbed. My legs were weak. The crowd roared louder than before and Victor bellowed.\n\n\"Ninety-four!\"\n\nMy catcher lumbered up and handed me the ball. I could barely hear him as he leaned in to yell in my ear, \"You didn't throw those bullshit cutters back then did you? I bet you threw those first two slow on purpose.\"\n\nI smiled, \"Never thrown a cut fastball in my life.\" I wiped my eyes. I turned and pointed to the crowd. \"Made for good TV, though, didn't it? I can hear him saying it now, 'As he reached down deep for that extra speed...'\"\n\nHe patted me on the behind. \"Proud to catch for you, champ. Go get 'em.\"\n\nI walked toward Victor and the camera. Annika was smiling. Her eyes looked a little teary, too.\n\nAll I wanted to do was walk away. I remembered the dance, though, and knew I had to give at least one more interview. I put on my sports smile and held back the tears that threatened to bust loose for the game I had forgotten I loved so much.\n\n*****\n\nAfter the camera was done with me, Annika came up with the ice pack the production assistant had made up for me.\n\n\"Shoulder or elbow?\" she said softly.\n\nThey were both throbbing and both would be hurting like hell tomorrow. I raised my elbow. She gently placed it on and wrapped the towel around to secure it in place. I took over from her and held it on my elbow and looked in her eyes. They were soft.\n\n\"Thanks,\" I said.\n\nI wanted to get us away from the crowd as I continued to get pats on the back, and high fives, and \"You the man, bro!\" when I just wanted to know what Annika was thinking. I looked over the crowd and could see an empty bench away from the throng. \n\nI started toward the bench and she dropped in beside me. I looked at her and smiled. She smiled back. As we cleared the crowd, she spoke.\n\n\"Clearly, I was wrong. You throw a *lot* harder than me.\"\n\nI stopped when we got to the bench and turned toward her.\n\nShe shook her head slightly. \"Will, your throwing motion is beautiful. Not an ounce of wasted motion.\" She paused. \"I looked you up. You were drafted in the second round. Why didn't you go pro?\"\n\nI took a deep breath. In for a penny; in for a pound.\n\n\"Well, there's a second part to the story that I've only told a few people about.\"\n\nI fished out my phone from my pocket and sat down. She sat down on the bench, facing me. I typed a search for that game on YouTube. I'd never watched it before, but I figured that someone had put it up. Of course they had. It wasn't long enough to show me coming in from the pen, so I started my story without the visuals at first.\n\n\"This game was at the end of my final year of eligibility, but the story really starts at the beginning of that school year. It was sometime in September that my friend's dad got us in the locker room after a Rangers home game in Arlington. He worked for the Seattle Mariners who were in town that weekend. They just trashed the Rangers that night so by the time we got to the locker room, the team was in high spirits and tearing things up. It was a typical locker room atmosphere and guys were doing all kinds of silly, stupid juvenile things. And there we were, two college kids watching the pros do what we did after our wins.\"\n\nI paused. She was staring at me and leaning close. She smiled and nodded. \"Go on.\" I did.\n\n\"Anni, I had never been in a professional locker room before so I didn't know what it was like, but I had expected something a lot...well, different. These were the pros. They were supposed to be professional. What I saw was they were just idiots like us. Just older idiots. \n\n\"One guy was off to the side away from the commotion. He was just watching. He was watching them. He was watching me. He seemed above it all. He was a catcher - aren't they always the catcher? - and he motioned for me to come over. We talked for a bit. He asked me who I was. I think he already knew or he could predict the type. He had probably broken in a hundred young pitchers, all convinced they were the next Nolan Ryan or Roger Clemens. He asked what I wanted to do after school. I realized that at that moment I didn't have an answer for him. Seeing the state of arrested development for these guys had awakened something in me. Finally, he said what I had already figured out in those few minutes in the locker room.\n\n\"He said, 'I don't think this is the life you're going to be happy with.' And that was it. I didn't know what I was going to do, but it wasn't going to be baseball. So over the next two months, I spent a lot of time around campus with deans and some family members and decided to change my major from Communications, and expecting to be a ball player, to Accounting. I told my coach that I was quitting the team, which he then talked me out of with 'Your team is like your family' and all that. \n\n\"But I knew when this game started,\" I held up my phone, \"that this was the last time I'd ever play baseball.\"\n\nI slid closer so that we could watch my phone together and pushed play. She laid her head on my shoulder. From my phone, the crowd roared. I scrambled to mute the sound before the announcers started. The younger me leaned in to catch the sign for the 3-0 pitch. Neither Annika nor I said anything to each other. The ball streaked into the catcher's mitt low and away from the right handed batter. He was taking all the way. Strike one.\n\n\"Mitch Stillson. .365 for the season. Pull hitter. He feasted on fastballs up in the zone. All he was going to get from me was stuff to slap to the right side.\"\n\nI was coming set again. I always had the next few pitches planned out so I tended to work fast.\n\nSwing and a miss on another low and slightly outside fastball.\n\n\"He was late coming around on that one,\" she observed. \n\n\"Yup. I needn't have taken the chance going outside the strike zone. And that's when I figured I had him. Even if he made contact, it wasn't going to be a good hit.\" I paused the video and started to put away my phone. \"You know the rest.\"",
        "\"No fucking way!\" She slapped my catching arm and then tried to grab the phone from me. \"Show me the end!\" I resisted and kept the phone out of her reach until I was satisfied I had her attention.\n\n\"Ok. Ok! Hold on.\" I wrestled with my phone to unpause it. I was looking in for the sign. The camera zoomed in on my face. God, I looked so young. The young me nodded and the camera switched to the view from left centerfield. The catcher set up outside. I went into the windup and as soon as the ball left my fingertips, I paused the video again.\n\nBefore she could protest, I pointed to the screen and said, \"Right there. Right there is when I knew that was the last pitch of my baseball life. It was perfect. Just like that third pitch tonight. I came out hard and true. I didn't know how the game was going to end, but I knew this pitch was going to decide it.\"\n\nI unpaused the video and immediately paused it again. The ball was a frozen blur about halfway to the plate.\n\n\"But this is when I knew we had won.\" I looked at her. She was focused on the screen. Before I could say anything, she had figured it out.\n\n\"His hips are too open.\" She looked up at me and then back to the video. \"He came around too fast this time. If he touches it, there won't be anything on it.\"\n\nI unpaused the video. A weak grounder to the first baseman and a flip to me for the tagout at first ended the game. I started to pause it again, but she blocked my finger. I ended up on the bottom of a pile of idiots. I felt her finger brush my cheek. It came away wet.\n\n\"And that was it. I did another year to get my degree and never went to another game. Still got the ring.\"\n\n\"You don't miss it?\"\n\n\"I didn't think it did. I like my life. But tonight...tonight was...\"\n\n\"Intense?\" She brushed away another tear from my cheek. I should have been ashamed. I wasn't. Not of her seeing me like this. Raw. Exposed.\n\nI nodded.\n\nShe turned off my phone. \"You know, I was sure you and I had really screwed this up. I can't tell you how much I had been looking forward to this all week, but I was competing when I shouldn't have and then you froze me out.\" \n\nI started to protest but she held her hand up. I let her finish.\n\n\"How many people have you told all that to?\"\n\nI thought for a few seconds. My parents. My sister. Was that it? Wow, I really had shut people out. \"Three. More or less.\"\n\n\"Why am I number four?\"\n\nI didn't hesitate: \"Because I wanted you to know. Because I figured you could understand. And because I really like you.\" How's that for telling it like it is?\n\nShe smiled and leaned back on the bench. \"Well, I'd say that counts as thawing out a little.\" She laughed. I liked seeing her happy. This was a relaxed sort of happy. She wasn't trying to charm me or control the situation. I liked the gregarious, confident woman from the gym, but I really liked the side of her I was seeing here. \n\n\"I feel special.\" She paused a moment before continuing, \"You know, you are a very intimidating guy, don't you?\"\n\n\"Huh? No, I'm not. If anyone is intimidating on this bench, it's you! You look like a model and...and carry yourself like royalty. You are so quick witted that I can't keep up with you, and everyone loves being around you. You're perfect. I'm just an old broke down ballplayer...\" I pointed to the ice pack. \"...with an adding machine. Please. I can't believe for a second that I intimidate you.\"\n\nShe pushed her hair behind her ear. \"Oh, that look you give. The one when you're watching my class - the one you're giving me right now, actually - it cores me. Like you're looking right through me. And what you were telling me about where you've travelled and what you've done? I feel like just a dumb, blonde fitness instructor. I was trying to keep up with you and show off and I just turned something good into crap.\"\n\n\"How do I respond to that?\" I muttered more to myself than her. \"Annika, that's a lot to hit me with all at once.\" I searched for the right words. \"I guess all I can offer is to say it again: I really like you. I've told you why already. And I don't go for dumb, blonde fitness instructors. I see an vivacious, sharp-witted, beautiful, athletic, and all-around amazing woman that can hold her own with anyone. You have nothing to feel inferior about. To anyone. Ever.\"\n\nShe blinked once. Then a second time. She tried to smile. It didn't quite work. Her eyes welled up and she covered her face with her hands and started to cry. Not a deep sobbing type of cry, but more of that soft kind when a person rides the razor's edge between maintaining control and losing it. I put my arm around her and gently pulled her close. She melted into my side. I kissed her on the top of her head. Her hair smelled like oranges.\n\nHow long I held her, I can't really say. Five minutes? Ten? Eventually she straightened up and tried to wipe the tears from the edges of her eyes. She didn't wear a lot of makeup, but what little she did wear didn't react well to crying. I unlocked my phone, turned on the camera, and handed it to her.\n\n\"Jesus, and now I look a mess, too. You must be having such a great time.\" She was focusing on the phone and trying to fix her appearance. I was focusing on how much I liked being with her right now. I'm not sure I had ever seen her so gorgeous.\n\n\"No place on Earth I'd rather be right now than here with you like this.\"\n\nShe stopped dead and looked at me. I didn't flinch. I stared her right in her beautiful brown eyes.\n\n\"Nowhere.\"\n\nShe handed my phone back to me. \"That was a heck of a story you shared with me earlier, Will. I've got one, too. Oh, it's not as impressive as yours of course, but I'd like to tell it if you want to hear it.\"\n\n\"About a young girl and a softball?\"\n\n\"A foil, if you can believe that,\" she said rather sheepishly, but with a smile that made me feel like I was watching the very first sunrise when the world was new. \n\n\"You bet I do.\"\n\nShe stood up and took my hand. We started walking toward the parking lot.\n\n\"Tonight was your night. I liked watching you out there. I liked listening to you next to me. Next Friday will be my turn. How about I cook dinner for you at my place and tell you my version of the life that could have been?\" She stopped and turned me toward her. I started to respond, but she stepped to me and we kissed. I put my arms around her and pulled her close as our joined lips opened to each other. Our tongues danced lightly, slowly, and all too briefly.\n\nShe had her answer, but I replied anyway.\n\n\"When, where, and what can I bring?\""
    ],
    "authorname": "Schaefferous",
    "tags": [],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-first-date-and-what-could-have-been"
}