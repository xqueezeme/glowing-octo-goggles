{
    "title": "Breathing Ch. 03",
    "pages": [
        "Thank you guys for all of your wonderful comments. It means a lot to me that chapter 2 touched so many of you. This chapter is what happens after she is found. It's not quite as long but chapter 4 will be. I hope you enjoy it..and be sure to vote and comment.\n\n-theonlinestalker\n\n****\n\nFire coursed through her arm mixed with ice water. It was a sensation that she had never experienced before. There was this pain warring with relief and she wasn't sure which one would win. But for a brief second she wished that the fire consumed her. She deserved to feel the pain. And so as she squeezed her eyes shut tighter she willed the fire to ignite in her veins and burn through her soul until there was nothing left.\n\nThe gentle throbbing mingled along with it, beating to a silent rhythm in her head. Like a silken scarf wrapped in bongo drums and then coated with shards of glass. Each thump bitter sweet as it sounded with sweat rapture but not without the consequence. But what would one do to hear that low drone of music humming it its ear. No, the pain was worth it she thought to herself.\n\nThe sound of beeping could be heard faintly in the distance, but not so far away that it wasn't annoying her. It was very much annoying her. But again this was a small price to pay. Her finger twitched involuntarily as another chill ran through her arm. Though it tried, the ice water did nothing to quench the fires thirst. Instead it raged on, battling with the freezing temperature of the water, creating jagged bolts of pain.\n\nSonya tried to move her fingers, but the pain only intensified. The haze that clouded her mind was beginning to lift and with its evaporation the fire in her arm grew. A sluggish grunt was all she could manage before willing her eyes to pry open.\n\nAll her efforts failed as she heard the sound of a woman shushing her and felt a warm wash of liquid mixing with the ice water and fire. \n\nAnd then there was only darkness again.\n\n****\n\nTrenton tried for hours to sleep, but all he saw when he closed his eyes was her lying in a pool of her own blood. His heart had stopped beating when his eyes landed on her wrist. Try as she had, she hadn't finished and that was something to be thankful for. And yet when he saw her looking so helpless and pale, the only thing he wanted to do was save her.\n\nOf course he would have wanted to save anyone had he been in the same situation. But he needed to save her. He hadn't even spoken to her for more than five minutes and the sight of her there in a white porcelain grave was too much for him. If she died\u2014so would he.\n\nIt was an emotion he was not accustomed to experiencing. Not to say that he was a love them and leave them kind of guy. But love them he did not. He was more of a fuck them and leave them type. No strings. No emotions. No pain.\n\nHe was all about the part where there was no pain. And yet here he sat sitting beside the bed of a woman who had tried to end her life just hours ago. And the only thing on his mind was the fact that if she had succeeded he wouldn't have known what to do with himself. \n\nTrenton chuckled at the irony. He had spent twenty-nine years trying to avoid relationships because he didn't think his heart could take the pain. And within twenty-four hours he had met a woman who had nearly broken his heart into two and the all he knew about her was her name.\n\nSonya.\n\nHe had uttered it several times while trying to get her to remain conscious. It had been a hard task, but after five tries he managed to get her to look at him with glazed eyes. \n\nThe words that slipped from her mouth had caught him by surprise, and then once again she had slipped back into her dark abyss.\n\nAs her friend had rushed back into the room screaming that the paramedics had been called, the only thing he could utter was, \"Who's Sean?\"\n\n\"What?\"\n\n\"She just called me Sean,\" he whispered looking back down at her. \"She said, 'I knew you'd come for me Sean.'\" \n\nWhen his eyes met her friends he watched as she looked away and then sat down on the floor. \"Hey\u2014shit. What's your name?\"\n\n\"Um\u2014Cam\u2014Cameron,\" she stammered as she tried to wrap her head around what she had been told. Sonya had done this to be with Sean. She had known there was something wrong. With her calling her Cammy, and the vague comment about wanting to say goodbye, it all started to make sense.\n\n\"Sean\u2014was my brother. And her fianc\u00e9,\" Cameron finally murmured. Silence echoed throughout the room. It was much more deafening then the occasional gasp of breath that escaped Sonya or the tremors that began to rock her body. And then as she looked up into his cobalt blue eyes a tear escaped her eye.\n\n\"He died a year ago today.\"\n\nThe sound of a grunt pulled him from his thoughts as he glanced down at the woman before him. Her face was now marred with what he could only imagine to be pain. Even though they had bandaged her wrist, he had been warned that once she woke up there would be a considerable amount of pain.\n\nBefore he could say anything, a nurse appeared beside him with a syringe filled with what looked like more pain medicine. And within moments Sonya's face relaxed and she once again drifted back into unconsciousness.\n\nThe nurse turned a looked at him with sad eyes before throwing the syringe into the orange and black hazardous waste basket. That look said that she didn't envy him. Of course, why would anyone envy a man who was sitting beside the bed of a woman he didn't know, who had just tried to commit suicide?\n\n\"No one,\" he whispered to himself.\n\n\"Who are you?\"\n\nHis eyes diverted towards the voice to find an older version of the woman lying in the hospital bed in front of him. Her skin wasn't the milk chocolate hue that he had come to admire, but instead a light caramel. Laugh lines were hidden around her eyes as she frowned down at him. Obviously mama bird was not happy to find a stranger sitting beside her baby.\n\n\"Who are you?\" she repeated. \n\nStanding up slowly, he moved towards the door. He waited patiently for mama bird to follow him before he began talking. When they were standing outside of Sonya's door, he watched as she crossed her arms over her chest and waited for her answer.\n\n\"My name is Trenton Sinclair. I ran into your daughter earlier today and then I ran into her roommate later on tonight.\" \n\nTrent paused for a second before continuing his explanation. \"Cameron grabbed my arm and pretty much dragged me to their place, saying how I could help. But when we got there your daughter\u2014I'm assuming she's your daughter, right?\"\n\nA nod of the head was all he got. \"We found her in a bathtub. She had slit one of her wrist. The doctor said she probably went into shock afterwards which prevented her from trying to slit the other one.\"\n\n\"So you're saying my daughter. My Sonya tried to kill herself.\"\n\nHis eyes glanced over to the woman lying there before he looked her mother in the eyes and quietly whispered, \"Yes ma'am. I am.\"\n\n\"No. That can't be right.\"\n\n\"They placed the padded shackles on her in case she wakes up disoriented. They didn't know if she would try to harm herself again. I agreed to stay with her instead of having her wake up tied down and alone.\"\n\n\"There's got to be some mistake,\" she whispered. \"My baby would never try to kill herself.\"\n\n\"Not to sound rude, but your baby just did,\" he whispered back.\n\nTheresa's eyes diverted back to his. \n\nWhen she walked into the hospital room she had paused briefly. From where she stood it was almost as if Sean was sitting in the chair beside Sonya's bed. But when she had walked forward to get a better view she had noticed the differences. The similarities were visible but not so much that the two could be twins. And now as she stood in front of him, she couldn't help but see something no one else would notice right away. \n\nLove. \n\nIt was pouring out of every pore. \n\nHer eyes glanced away from his face to see that he was staring at Sonya. \"Are you sure you just met my daughter?\"\n\n\"Yes,\" he answered not looking away.\n\n\"You remind me of someone.\"\n\n\"Sean?\" he asked finally breaking his gaze away from Sonya.\n\nA shocked expression covered her face as she took a step towards him, \"You know Sean?\"\n\n\"No. But Sonya called me by his name\u2014before she passed out.\"\n\n\"Oh,\" she paused. \"You look a bit like him. It's weird.\"\n\nHis eyebrows bunched together as he looked back at Sonya, \"How much like him?\"\n\n\"Enough to be related,\" she answered as she followed his gaze. \"She won't see him once she wakes up. She'll see you.\"\n\n\"How do you know that? She already called me him once,\" he frowned.\n\nTouching his face with one hand, Theresa watched as he looked down at her again. She could see that he was worried about being a source of her pain. That he was also worried that she would compare him to someone that was so important to her that she had thought of committing suicide and nearly succeeded. \n\n\"You will never be Sean. It's time for her to get past her survivors guilt. And I can tell that you care very much for my daughter already,\" she whispered.\n\n\"I don't\u2014\" he began as the denial began to spill from his mouth, but stopped when he saw the look of disbelief he was being given. Sighing he closed his eyes. \"I don't understand this. I just met her and I feel like she's got my heart in a vice. One squeeze and she could end me.\"\n\nHis eyes opened and the fresh tears that threatened to spill over danced in his eyes. Theresa's breath caught as she saw the pain he must be feeling, and then with a blink of the eye a single tear cascaded down his cheek. \n\nAt just over 6 feet tall she couldn't imagine seeing someone his size reduced to tears. More than that, she didn't think she could take it. And so she took a step towards him and laid her head on his chest, wrapping her arms around his broad chest. \n\nShe could feel his body relax as each rigid muscle flexed and then settled into a more comfortable position. His breath was ragged as he took a deep breath and cleared his throat. The arms around him only tightened on his body which caused another tear to stream down his face. \n\n\"I don't know what it is about you young man, but I agree with Cameron. I think you can help her,\" she whispered. Lifting her head from his chest she smiled up at his tear stained face before wiping the moisture away. \"And I think she was meant to help you too.\"\n\nA shaky smile was all he could manage as his eyes fell back onto Sonya's sleeping form. What a long journey it was going to be.\n\n****\n\nOnce again Sonya heard the beeping in her ear, and the pain had dwindled some but was very much there. Learning from past experience, she lay as still as she could. While she thought she deserved the pain she didn't want the nurses to see it on her face. If they did, one of them was more than likely to give her another sedative. \n\nTaking a deep breath, she opened her eyes for the first time in what felt like forever. As she looked around she noticed that she was in a hospital room. From the beeping she had already guessed that, but seeing it made it feel real. The white walls were void of anything, not even a picture. And there was little light streaming through the off white venetian blinds. \n\nThe soft sound of snoring made her turn her head slightly. The sight before her made her stop breathing momentarily, and then she closed her eyes. When she opened them again eyes as blue as the sea off of Fiji stared at her. \n\n\"Hi.\" The deep baritone word echoed through the room, bouncing off the walls and back into her soul.\n\n\"Hi,\" she whispered not taking her eyes off of his.\n\n\"Sorry about the jewelry. Not what most women want, but\u2014\" he trailed off realizing what a poor joke he'd just made.\n\nLooking at her wrists for the first time, she noticed the beige padded handcuffs circling them. \"Am I in the mental ward?\" \n\n\"No. Regular portion of the hospital, but Cameron and I had to convince them that you weren't going to harm yourself again. The cuffs are part of their hospital policy for a situation like ours.\"\n\n\"Ours? I don't know you and you don't know me. Why are you here?\" she snapped before trying her best to calm down.\n\nCrystal blue eyes hardened and for a second she felt a pulse in her heart where there had been no life before. But as quickly as it happened she beat it back down and shoved it in its cage.\n\n\"I'm here because your friend forced me to come to your apartment and I found you lying in a pool of your own blood,\" he answered shakily and then with more conviction than he thought possible continued with his explanation. \n\n\"I am here because yesterday when I saw you, I\u2014I felt like I could talk to you for days and never care if the world was outside waiting for me. I am here\u2014because you almost weren't and I wasn't sure I could take it if you weren't.\"\n\nThe silence that followed was confusing. It wasn't uncomfortable or awkward. Instead it just ebbed and grew stronger with each passing second before Sonya looked away. \n\n\"Why?\" he finally asked.\n\n\"Isn't it obvious?\"\n\n\"No,\" he whispered. \"I don't know you\u2014remember?\"\n\n\"And yet you're managing to piss me off. Is that a record for you?\"\n\n\"Not at all Sonny,\" he smiled.\n\nThe frown on her face deepened as she began to move as if she was trying to sit up. A hiss of pain escaped her lips as she pulled her lips away from her teeth and snarled at him. \"That's new,\" he whispered.\n\n\"Do. Not. Call. Me. That!\" she hissed through clenched teeth.\n\n\"Why not? It fits you.\"\n\n\"Not if it comes from your lips it doesn't.\"\n\n\"Calm down or you'll pop a stitch and then we'll be here forever. I just wanted to make you mad,\" he admitted.\n\n\"You wanted to purposely make me angry? What kind of person does that?\"\n\nHolding his hand out as if she was supposed to shake it, he said, \"Hi. I'm Trenton Sinclair and I piss people off on purpose.\"\n\nOf course she couldn't grab his hand, and if she could he was sure she would have slapped him instead. After a second of holding her murderous glare, he smiled and dropped his hand. \"I don't have a card that says that, but after today I think I'll get one.\"\n\n\"Why are you doing this? If you're trying to make me feel better then stop, please. It's not going to work.\"\n\n\"How do you know? You haven't tried. And I'm not going away.\"\n\nAt the last statement her glare melted into a mask of confusion. \"What do you mean you're not going away?\"\n\n\"Well they've put you under 72 hour surveillance and I was nice enough to volunteer to watch you.\"\n\n\"To watch me? Like a prisoner?\"\n\n\"More or less...if you want to look at it that way.\"\n\n\"Well they can't do that. My mom is my next of kin and emergency contact. She\u2014\"\n\n\"Already okayed it with the doctor,\" he answered, effectively cutting her off.\n\n\"What?\"\n\n\"Lovely woman or at least she was before she threatened me with bodily harm if anything happened to you. But what can you say right? Moms,\" he smiled.\n\n\"I'd rather stay in the hospital then.\"\n\nAllowing his fa\u00e7ade to break a little, Trent leaned forward and whispered in her ear, \"If you stay here they will keep you locked down like a crazy person. You'll be nothing more to some of these nurses than a selfish woman who gets none of their sympathy. I'm trying to help you Sonya. No strings.\"\n\n\"And how am I supposed to know I can trust you?\"\n\n\"Because I'll show you that you can. And if after a day with me you feel the same, I'll personally call your mom. Scouts honor,\" he smiled holding up three fingers.\n\n\"You were a scout?\"\n\n\"No. But it sounds better than stranger's honor.\"\n\nAnd for the first time since she had woken up, Trent watched as Sonya's lip twitched and a half smile emerged. And though it was only visible for a split second it was enough for him. Maybe he could penetrate her tough skin after all.\n\n****\n\nThe car ride was quiet. Neither of them wanted to say anything that would ruin whatever peace they had going on between them. Trent had every intention of being the strong sensitive type when she woke up, but once she had opened her mouth that had been forgotten. And instead she received the abrasive side of him that many got to see. But what surprised him was that he had also joked around with her. He had made a huge effort to make her smile and if that meant she hated him right now for it, then so be it.\n\nAfter he had called in the doctor to have her released and Sonya had gone through a series of questions the doctor had nodded to the nurse and then smiled down at her. \"I hope I don't see you in here again, Miss Matthews.\"\n\n\"You won't,\" she smiled, which hadn't technically been a lie. First chance she got, she was ending it all. And the next person to see her would be the Medical Examiner.\n\nTrent already knew that she was going to plan something. That was why he had already set everything up so that she'd never know a moment's peace. But he would. He'd know that she was alive and even if she hated him for it, it would be worth all the hate she spewed his way.\n\n\"We're here,\" he said breaking their silent thoughts.\n\n\"And where is\u2014here,\" she whispered as his car drove up to a three story mansion. At least that's what it looked like to her. \"You live here?\"\n\n\"Yes.\"\n\n\"With whom?\" she turned to him.\n\n\"With me,\" he frowned.\n\n\"Oh.\"\n\nThe white house was trimmed with black shudders that seemed to float off the structure. The lawn looked to have been freshly mowed and there were trees everywhere on the left of the property. A tire swing swayed in the wind as they drove past it. \n\n\"Did you're wife leave you this house?\"\n\n\"No wife. No girlfriend. No family,\" he stated with finality signaling that it was the end of their conversation as far as he went.\n\n\"No family,\" she whispered to herself.\n\nThe car came to a complete stop and before she could say or do anything Trent was out of the car. The trunk flew open as he leaned in and grabbed her one suitcase and then walked over to open her door.\n\n\"I'm not an\u2014\"\n\n\"Save it. I was trying to be polite. Don't ruin the moment.\"\n\nAnd then as quickly as he had shut her down, he turned around and walked away from her. But not so far that she could get any ideas. \n\n\"For someone who wants to be polite you're failing miserably,\" she huffed as she tried to keep up with him.\n\n\"And for someone who is being a pain in the ass on purpose I'd say I'm being quite polite,\" he countered.\n\nComing to a screeching halt, Sonya looked at his back with amazement. \"I'm being a pain in your ass,\" she yelled.\n\n\"Pain in my ass. Thorn in my paw. Pick one,\"\n\n\"How about you just show me to my room and leave me alone,\" she yelled as she stomped past him.\n\n\"My pleasure,\" he smiled.\n\nThe jingle of keys filled the tension between the two as Trent slowly opened the door and allowed her to go in before him. Most of the walls were bare of photos and as she looked around she noticed that she had been here before. This was the house party Cameron had taken her too.\n\n\"I've been here before,\" she whispered as she turned to take in her surroundings. And then all of a sudden she yelled, \"Laugh.\"\n\n\"What?\"\n\n\"Laugh. I need you to laugh for me,\" she rushed on in a panic.\n\n\"Um. Hahaha?\"\n\nThrowing her hands in the air Sonya pushed his chest and almost growled, \"Laugh.\"\n\n\"You're serious?\"\n\n\"Yes,\" and for the first time he could see a look of uncertainty in her gaze that he'd seen briefly at the hospital. Clearing his throat he thought of something that made him happy. A joke that a friend had told him once when they were at a bar. And he laughed.\n\nThe sound resonated in Sonya's ears and she felt that pulse she'd caged earlier clawing its way to the surface. Steel cage and all. This had been the laugh that she'd heard that made her heart want to speed up. It was then that she realized she couldn't be here. In all the time she had been with him she hadn't once thought of Sean.",
        "She had to get away from him. Now. \"Where's my room? I should lie down.\"\n\n\"This way.\" \n\nThe fact that she had him laugh was odd, but he was sure there was a reason. Something only her crazy logic would explain. And so he turned picking up her suitcase and walked towards the end of the hall. As they got further down the hallway Sonya began to notice more and more pictures. \n\nHer pace slowed down as she looked at each one. And then finally she turned her head as she saw one of him smiling. That smile and laugh would be her undoing and that wasn't going to happen. Not if she could help it. \n\n\"Home sweet home,\" he smiled as he dramatically opened the door. As she stepped inside the room he waited for the realization to set in. \n\n\"Is this your room?\"\n\n\"It is?\"\n\n\"So I'm sleeping in your room until I leave. Where will you sleep? Guest bedroom?\"\n\n\"No...here,\" and then the countdown began.\n\nFive.\n\nFour.\n\nThree.\n\nTwo.\n\nOne.\n\n\"The hell I am,\" Sonya yelled as she tried to charge past him.\n\nGrabbing her arm, Trent leaned down and quietly spoke to her as if she were a spoiled child, \"Sonny, you'll learn that there isn't much that makes me angry. But for some reason you've been added to the top of that list. I'm not to let you out of my sight for 72 hours. So anything you were planning you can cancel now.\"\n\nAnd just like that Sonya knew that her stay with Trenton Sinclair would test her in more ways than one."
    ],
    "authorname": "theonlinestalker",
    "tags": [
        "suicide",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/breathing-ch-03"
}