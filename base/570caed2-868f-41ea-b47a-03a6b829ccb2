{
    "title": "A Yule Retrieved",
    "pages": [
        "Santa Claus from Sinterklaas, and that originally was Sint-Nicolaas. I've taken on a lot of names here and there, from P\u00e8re No\u00ebl to Joulupukki. They're just names. It's somewhat like the red thing. I'll tell you a secret: it's not my favorite color. But a company needed an advertising campaign, and their color is red, so now that image is everywhere. That's okay. It's how people think of me, not who I am.\n\nI'm a trifle more disapproving of that 1823 poem that called me a \"jolly old elf.\" That isn't always the way to heal the world's hurts. Ask any parent about spoiled children.\n\nThe thing I want to say is that what matters is making things better. Sometimes that comes from a Lionel Red Rocket Express under the Christmas tree. Other times it has nothing to do with anything involving wrapping paper.\n\nEither way, don't be naughty. And, if that's a little too soft for you, don't be a damn asshole either. I paid a high price to drink from the well of knowing, and I keep track.\n\n\u2014S. Claus\n\n<center>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</center>\n\nFar away, almost too far to see what was going on except that he'd always had good vision, he watched the figures. On one hand, what they were doing was nonsense. On the other&nbsp;... endings were as interesting as beginnings, and this was a little of both.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Stop making such a damn racket!\"\n\n\"How 'bout you shut the fuck up, Gramps?\"\n\n\"How about I kick your ass up one stairwell and down the other?\" The threat might have seemed ridiculous coming from an octogenarian if it weren't for the hand that came out from behind the doorframe with a baseball bat&nbsp;... that and the glacial eyes under shaggy white brows that didn't flinch from a young man's glare.\n\nFerg turned his back on Old Man 1D and pushed his way out of the lobby door, music still blaring. His attitude reflected how he saw the day shaping up. \n\nIt had started with the sounds coming through the paper-thin walls as Amber made sure January's rent would get handled. Those made sleep pretty difficult, not that Amber gave two shits about whether her son, Ferg, could sleep.\n\nIf he hung around, he knew it would get ugly. It was bad enough Dipshit\u2014real name Tom or something, but Ferg didn't pay much attention anymore\u2014had shown up unexpectedly last night. If Ferg was around this morning when they emerged, Amber's mood would be no bueno; she didn't like to remind guys that she had a son.\n\nPlus, Ferg had gotten a bead on Dipshit the previous night in that brief moment before he responded to his mother's glare and took off. In Ferg's experience, there were two types: the embarrassed-I-just-fucked-your-mother Dipshit and the contemptuous-I-just-fucked-your-mother Dipshit.\n\nThe first type tended to disappear once they bumped into him, turning Amber into a screaming basket case of resentment days later when she realized they weren't calling. But Ferg's guess on this one was the second type. Then he'd want to wipe the smirk off Dipshit's face, giving Amber leverage to express her displeasure at his presence. She counted on the fact that, whatever he might want to do to Dipshit, he always held back with her.\n\n\"How 'bout you make Tom and I some bacon and eggs?\" she'd say. If they had any, she'd take malicious pleasure in watching Ferg acquiesce under their contemptuous gazes. If they didn't, normally fine for her coffee-and-a-cig breakfast habit, it would be cause for a scathing, \"Grocery shopping. One simple job, that's all you've got, and you fuck that up.\" \n\nThis despite the fact that he did pretty much everything, and she knew damn well he shopped Wednesday evenings when the market started its markdowns. She'd give a huge sigh, one calculated to draw Dipshit's attention toward her chest and the assets the father Ferg had never met had paid for before he abandoned ship at the word \"preggers.\" Then she'd wheedle Dipshit for breakfast out. Excluding Ferg.\n\nHe knew her game and wasn't in the mood for it this morning because&nbsp;... well, just because.\n\nBut, if he didn't hang around, there was a chance he'd run into Anthony or some of the other guys, and that wasn't so hot either. He needed time without distraction to get his head clear.\n\nHe didn't get it. The blacked-out window, as ridiculous on a Pontiac G6 as the glued-on spoiler, rolled down.\n\n\"Yo, Ferg. Come on. We need you for some two-on-two.\"\n\n\"Pass.\" Ferg didn't budge from his perch on the bus stop bench.\n\n\"Come on. Shut your hole and get in.\"\n\n\"Fuck off, Donnie.\"\n\n\"What crawled up your ass and died?\" Ferg ignored the question, and Donnie's face closed in irritation. Donnie didn't take a lot of things very well, and he and Ferg were never the best of buddies.\n\nThe car's driver leaned down so he was in view through the passenger window. \"Cut Ferg-boy some slack. He got business to take care of, you know.\" Anthony's words were to Donnie, but his grin was for Ferg. His expression turned conspiratorial. \"Tonight, man?\" he asked Ferg.\n\nResigned to the fact they weren't going to go away, Ferg shook his head. \"No.\"\n\n\"You pussying out?\"\n\n\"I'm not\u2014\" He didn't get to finish.\n\n\"You teach that cocksucker a lesson he don't forget, and then you teach her a lesson. Me and Reaper will\u2014\" It was Ferg's turn to interrupt.\n\n\"No. It's between Leo and me.\"\n\n\"He got buddies there every night.\"\n\n\"Who said anythin' about night?\" He ignored the questions. No bus in sight, he got up and hop-stepped his way down the subway entrance for a long ride to nowhere in particular.\n\nHe had trouble retrieving even vestiges of the calm and resolve he'd started to find earlier. In their stead reappeared the incomprehension and impotence&nbsp;... feelings that still had no haven in a male not yet twenty. Feelings that, inevitably, could only transform into a more-acceptable fury. \n\n<center>\u2022 \u2022 \u2022</center>\n\nAs he approached his building hours later, he wondered if Dipshit was gone. Prepared to beat a retreat, he listened at the door, slid in his key, and opened it a crack. No conversation; no unintelligible-but-purposeful urgings. Relieved, he went in.\n\nRelieved, that is, until the faint trace of vinegar and acid hit his nose. It was one of many odors familiar to those in the neighborhood, at least those who hadn't destroyed their sense of smell with cigarettes. The fury erupted.\n\nHis charge through the tiny apartment stopped at the sight of Amber sprawled on her bed, the square of tinfoil and rolled-up tube fallen to the floor, fortunately no longer alight.\n\nFerg shook her, slapped her, searched frantically for her phone; he couldn't afford his own. Dead battery. Of course it was; Amber had other things on her mind the evening before. He wrenched open the apartment door.\n\n\"Someone call 911.\" The bellow echoed down the linoleum-clad hallway even as he stepped across to 2A and hammered on the door. It took only a second of pounding for the improbably red hair of Ms. Horvath\u2014known as \"The Ghoul\" to the residents of South Building\u2014to pop out.\n\n\"What?\"\n\n\"Call 911. Amber's flipped out on smack.\"\n\nAnd of course&nbsp;... because, Ghoul&nbsp;... Ms. Horvath wheezed her frame along behind him as he raced back into 2B, though she did pull her phone from the pocket of her cardigan. That's all she did with it, launching into cries of \"She looks bad\" and \"Bo\u017ee m\u00f4j!\" and \"A junkie, who knew?\" as Ferg tried to wake his mother.\n\n\"Iveta!\" The voice was like a whipcrack. \"Dial the damn number.\" \n\nFerg looked up to see Old Man 1D, who had somehow heard his yell. A hand reached out and snagged Ms. Horvath's wrist, forcing the device in front of her face. \"Dial!\"\n\nAmber's limp form was unceremoniously pulled to the floor, Ferg's protests notwithstanding. The whiskered cheek went down to Amber's mouth, the old man gazing intently at the chest covered in only a worn T-shirt. \n\nOrdinarily, that would have irritated Ferg; the tendency of various Dipshits to check out his mother's body was one of the things that pissed him off no end. But he knew that heroin ODs stopped breathing sometimes; he just wasn't sure what to do about it. And the sight of a foot of white beard infinitesimally rising and falling as if it had a life of its own because of where it was draped was kind of funny&nbsp;... or maybe that was just the stress talking.\n\n\"Breathing seems okay. Get her left leg bent up,\" Ferg was instructed, while the old man lifted her left arm and tucked it under her right jaw. \"Up on her side now. Keep her there.\" \n\nFaded eyes the blue-gray of river ice met Ferg's cornflower blue. \"Recovery position. Keeps the airway clear.\" The gaze shifted to the standing woman who was starting the second round of babble to the operator about how Amber looked. \"Iveta. Just shut up and let them do their job.\"\n\nIt was long hours later when the nurse told Ferg, \"The naloxone did its job. You can take her home.\" Care instructions followed, delivered brusquely by someone whose attention was already shifting toward the day's next crisis. \"And keep her away from that stuff.\"\n\n\"No problem.\" \n\n<center>\u2022 \u2022 \u2022</center>\n\nIt wasn't a problem, at least in the short term. The first thing Ferg did was flush the remaining powder down the toilet.\n\nAn act that, slightly too late to stop it, did not go unnoticed.\n\n\"You fuckin' little piece of shit! That was Tim's.\" \n\nFerg idly acknowledged he'd gotten Dipshit's name wrong. Like, who cared? The tirade got louder; the venom dripped faster. Whines of \"not gettin' any younger\" interwove with screeches about an \"ass-kickin' once Tim came back.\" \n\nThe first was true. The stripper body no longer commanded the better clubs&nbsp;... or so Ferg was told with a leer by those in the know who didn't particularly like him.\n\nThe second was laughably not true. Ferg shrugged off Amber's slaps and occasional punches, but if dad-bod Dipshit raised even a finger, well, Amber would lose her latest sugar daddy via the emergency room. Might still happen if Dipshit said one word about his drugs.\n\nAt \"I should have listened to my fuckin' father and never had you,\" Ferg knew it was time to leave before the anger that roiled, making his stomach clench into a bile-suffused knot, spilled over. He bit down on words burning to escape and stalked out, trying to close his ears to the stream of invective that followed him.\n\nPale eyes tracked him as he crossed the lobby. A momentary spike of conscience cut through the anger. \"Thank you&nbsp;... uh&nbsp;... I don't know your name.\"\n\n\"I'm just Gramps, huh?\" The disdain was obvious.\n\n\"I call you Old Man 1D.\"\n\nThat brought a snort of something almost like laughter. \"Jolnir.\" When Ferg repeated it, \"Mr. Jolnir to you. Kids don't have any respect these days.\"\n\n\"What kind of name is Jolnir?\"\n\n\"It's just a name.\"\n\n\"Sounds kind of, I dunno, eastern European.\"\n\nA pause, eyes going skyward in exasperation. \"Maybe it was anglicized from Czollner, and I'm Hungarian.\"\n\n\"Like the Ghou\u2014 Like Ms. Horvath?\"\n\n\"She's Slovak.\"\n\n\"Zolner\"\u2014Ferg's pronunciation was slightly different\u2014\"That sounds sorta German.\"\n\n\"Nah, Hungarian. Trust me on that.\"\n\n\"Hungarian's cool. Maybe you're related to Attila.\"\n\n\"I'm not Hungarian.\"\n\n\"But you\u2014\"\n\n\"I told you it was just a name the first time you asked. You kept on with your stupid question, so I made up a stupid answer. My name's Mr. Jolnir. End of story.\" \n\nThe old man glanced up at him with eyes that, for a single second, seemed more amused than sarcastic or judging. \n\n\"What's a name? If I call you Martin or Marty\"\u2014the flash of emotion at Marty took a moment to shove down\u2014\"you're still just the guy with the ridiculous nickname.\" Another flash of anger over the disrespect. \"Who gives a damn? What people call you is just who you are to them. What matters is who you are.\"\n\nFerg's brain struggled as he tried to untangle that knot.\n\n\"I need to feed Sleepy.\" As the door started to shut, Ferg saw the slate-gray form slink into view, the ugliest cat he'd ever seen, and give a typical feline glare at the humans.\n\nFerg stepped outside. Turning right, he found his favorite bench and dropped into it. \n\n<center>\u2022 \u2022 \u2022</center>\n\nIt wasn't much of a park. \n\n\"Four one-hundredths of an acre!\" Mr. Banyas would crow. \"Not the smallest in the city, but close!\"\n\nIt was flanked by the brick apartment buildings on either side, and the wall and fence of a raised sidewalk at the back. The fourth side was a wrought-iron fence. The Parks Department barely paid it any attention, other than Mr. Banyas who lived in the far building and worked for them. He locked and unlocked the gate each day.\n\n\"Nine in the morning until five at night,\" he'd tell anyone who asked.\n\nThis wasn't a big deal for Ferg's building or Mr. Banyas's; each had a fire door that went out there. Residents on both sides jointly considered it \"their\" park&nbsp;... screw the public. Not that there was much public for ivy-choked walls, one spot persistently and mysteriously of the poison variety; a scrawny ginkgo tree in the corner, bare-branched this time of year; some scrawnier evergreens along the back wall; five weather-beaten benches; and a brick pavement so frost-heaved that it was guaranteed to turn the ankle of any woman not in flats.\n\nFerg found it a useful place to avoid the apartment. Now he sat and contemplated the one thing that truly did have some eye appeal. Centered in a raised bed was a small evergreen, different from the others.\n\n\"Fraser fir,\" Mr. Banyas had pronounced. The residents had adopted it as a Christmas tree years ago. Lights were elaborately entwined with the branches to make theft difficult. Ornaments and a star on top would come out on the twenty-fourth for the buildings' party. An extension cord ran out of a fire door. Ferg found its warm glow quieting in the fading twilight.\n\nHe sat. He strove to replace the hot anger at&nbsp;... at everything, with cold resolve. \n\nHe ignored it when Fourth Floor Italian Lady and Old Ma\u2014 Mr. Jolnir came out and checked for plastic bottles and other garbage tossed from the sidewalk above. He ignored Mr. Banyas ceremoniously turning the large key and ignored the short conversation between the two men.\n\n\"Coming to the Christmas Eve party for once?\"\n\n\"I go drinking with friends that night. You know.\"\n\n\"We keep hoping.\" A sly glance. \"Especially Iveta.\"\n\nA snort. \"My whiskers were white before that woman was out of diapers.\"\n\n\"She's got enough hair dye for the two of you.\"\n\nLaughter. Ferg ignored that too. Feeling happy wasn't in the cards. The only question was what replaced it, and grim satisfaction was sure as fuck better than the alternative.\n\n<center>\u2022 \u2022 \u2022</center>\n\nAs Ferg loitered in the unfamiliar hall, he was glad it wasn't the kind of building where people asked questions of a stranger. Sidelong glances and shut doors were the norm from the one or two who noticed him at that hour of the morning.\n\nFive twenty-five. Right on schedule for leaving to catch a subway for work at six o'clock. The door beside him swung open, and Ferg was through it, left hand up under an unexpecting jaw, pushing back into the room, right delivering a vicious jab to the solar plexus. \n\nFerg kicked the door shut behind him. \"Call her out here,\" he told the pained face. Ferg's quiet voice would have sounded calm if you couldn't see his expression.\n\n\"What the fuc\u2014\"\n\nThe knee driving upward put Leo on the floor. \"Call her out here,\" Ferg repeated when he judged Leo had some breath back.\n\n\"There's no one\u2014\"\n\nA foot applying weight on a throat cut off the protest. \"If she hears my voice, she'll be out the fire escape and gone. Call and wake her.\" Ferg had known Leo a long time. He knew that Leo was chickenshit, through and through, despite his large size. Ferg waited, foot pressing. \n\n\"Why the fuck are you at me, man?\"\n\nThe stupidity sent a flare of hot anger that threatened to disrupt Ferg's tight control of himself. \"What did I say last time we talked?\"\n\n\"What? What has that got to\u2014\" Again, Leo's non-responsiveness brought him pain.\n\n\"What. Did. I. Say?\"\n\n\"Please, man!\" Leo begged. His face was wet with tears. \"You said to stay the fuck away from Mar\u2014\"\n\n\"No!\" Ferg turned Leo's protest into a gargle while he fought to bury the anguish under contempt for the man. \"I didn't say that.\" He dropped down, knee replacing foot. \n\n\"I said if Mar\u00eda wanted to get back with you, she could show me some respect and tell me to my face. I'd walk away. But you layin' your fuckin' paws on her before I heard those words was disrespect. Isn't that what I said?\"\n\nLeo tried to respond, whether to agree or protest further was unknown because the knee prevented him from saying anything.\n\n\"And then what do I hear? I'll tell you. I heard you spouted off to the guys that disrespect was the least of what I'd be feelin'. I heard you bragged that, if you wanted, you'd snap your fingers and she'd be moanin' on your dick. This thing?\" A heavy hand landed, bringing another muffled cry from Leo.\n\nFerg leaned in close. \"I ignored those things I heard. You know why? Because you're a punk-bitch and punk-bitches run their mouths. It's what they do. But then things changed, and now you're goin' to call your girlfriend out here because you're a punk-bitch.\"\n\n\"There's\u2014uhh!\" \n\nThe knee retreated, just a trifle. \n\n\"Please!\"\n\nFerg said nothing.\n\n\"It's been months, man.\" Leo's eyes were frantic. \"Yeah, I said that shit. But I was just&nbsp;...\" The pleading voice trailed off, unable to claim it wasn't what it was.\n\n\"Yeah, it's been months. But things changed. They changed because two of the girls told me they saw you with her at the pizza place a while ago, and you had your arm around her.\" Leo did the impossible and got paler. \"The last straw was Reaper told me about seein' you with her last week, and your hand was on her ass. But I didn't hear the words I needed to hear first, shithead.\"\n\nLeo's face twisted in disbelief. \"But that\u2014\"\n\nFerg lost patience. \"Get out here,\" he roared toward the bedroom door. \"If she ducks out the fire escape, you'll pay,\" he promised.\n\n\"Don't hurt us,\" Leo whined.\n\n\"Hurt her?\" Ferg's eyes bored into Leo's. Suddenly he wanted nothing more than to smash the face in front of him into ruin at the incredible stupidity of the man wearing it. His knee cut off all talk while he practically spat in Leo's face.\n\n\"Hurt her?\" he repeated. \"I wouldn't hurt her in a million years. But she's goin' to watch her punk-bitch boyfriend choke on every boast he made while he snivels on the floor. She'll hear how he called her a slut moanin' on his dick, maybe watch him get his ass beat like he claimed he\u2014\"\n\nThe door opened. Ferg's eyes rose involuntarily. They traced upward over familiar curves. They took in the beloved mass of ebony hair hanging down far below her shoulders, the midnight eyes, the salted caramel of skin. They traced the contours of a face that was&nbsp;... so almost-but-not-quite-right.\n\nIn shock, he half-rose.\n\n\"No, please,\" she said, flinching back.\n\n\"Run!\" Leo shouted at the woman. When she didn't move. \"Gloria, get out!\"\n\nFerg and the woman stared at each other, he unbelieving how much she looked like Mar\u00eda, she apprehensive of the agitated man.\n\nWhen Ferg didn't make a move toward her, she straightened. She looked down at Leo, her face hardening slightly. \"A slut moaning on your dick?\"\n\n\"I wasn't talking about y\u2014\" It wasn't Leo's day to talk. The knee cut him off.\n\n\"Who are you?\" Ferg asked.\n\n\"Gloria. Who are you?\"\n\n\"Ferg. Is there a woman named Mar\u00eda here?\"\n\n\"No. But I've heard I look very much like her.\" The tone was oddly brittle.\n\n\"You're with Leo?\"\n\n\"Three weeks, a bit more.\"\n\n\"So, when Reaper saw him last week with his hand on a woman's butt, it was you?\"",
        "\"I don't know any Reaper, but it better have been me.\"\n\n\"But before that, maybe three months ago, not his arm around you in a pizza parlor?\"\n\nLeo jerked; the knee stopped him. Gloria's eyes got harder as her gaze shifted back to her boyfriend. \"You told me it was done a year ago and that you hadn't seen her since. Three months ago&nbsp;... you and me had started talking then.\" Leo went still, unable to meet her eyes.\n\nThe tableau held, broken only by frightened breathing coming from the floor. Finally, Ferg rose. \"I warned you, but you didn't listen.\" The form rolled into a tighter fetal ball. \n\nThe moment of tension stretched tautly, two people unaware of what it held for the third, unable to discern that the stillness masked \"Do something before you explode!\" locked in a deep struggle with \"I just can't anymore&nbsp;... with her, with him, with this life.\"\n\n\"You wanna know the only thing savin' you right now?\" Leo didn't respond to Ferg's rhetorical question. \"You told her to run when you thought I might hurt her, even though I told you that you'd pay.\" His eyes met Gloria's again. \n\nHe's all yours, his said.\n\nYeah, but do I want him? hers answered.\n\n<center>\u2022 \u2022 \u2022</center>\n\nFerg stared at the soft light the ceramic bulbs shed into the shadows where the sun wasn't yet reaching. He noticed one of them was out, a green one. He thought about going into the lobby where a small box held spares, ready for any resident who spotted a problem, but&nbsp;... \n\nHe'd expected a cold sort of closure after he dealt with Leo. If the possibility had crossed his mind that she wouldn't be there, he'd have expected relief at not finding Mar\u00eda in Leo's bed.\n\nThe reality was far worse. She hadn't left him because she'd felt the pull of an old flame. She'd just left him. Not to someone else, away from him. She was probably holed up in her parent's house, a place he had never been welcome, relatives acting as early-warning systems against his appearance. He'd tried. Of course he had. But a sister said, \"She's not seeing you,\" and a father's glare from behind backed that up.\n\nMr. Banyas emerged, keys in hand. Ferg knew it had to be a little before nine. He'd be late for work if he didn't go soon. He wasn't feeling it\u2014when did one ever feel washing dirty pots?\u2014but they needed every cent his part-time brought in. The stacks of singles in Amber's nightstand, renewed each weekend, dwindled rapidly in the face of thirteen bucks a pack.\n\nFerg made it through the workday, only getting yelled at twice by the head cook for standing around vacantly. The man didn't know he was playing with matches around tinder. \n\nOr maybe he did. Glucocorticoids and catecholamines were words that would have meant nothing to a cook. But maybe, having been there himself once, he recognized the signs of a male body not yet one hundred percent mature, struggling to stay afloat in a torrent of stress hormones, and realized that a little focus on something external helped.\n\nAfter work, sitting once again on his bench, staring at the colors, ignoring the increasing chill in the air now that the sun had dropped behind the building, he tried to build a wall inside, to say, \"Screw her.\"\n\n\"Yo, Ferg. The fuck's up?\" Donnie's loud voice. \n\nFerg looked up to see a trio sliding through the gate still open for another few minutes.\n\n\"We hear you're a pussy, man. We hear you visited Leo-shit, and he's still walking.\"\n\n\"It wasn't Mar\u00eda.\"\n\n\"You saying I lied?\" Reaper's voice was tight.\n\n\"No, man. Just wrong. Just a girl who looked like Mar\u00eda.\"\n\n\"Don't matter, man. That fucker put his hands on her before, and you owed him for that. Plus, he was talking to Janie and she's off-limits, so he deserved a beating anyway.\" Anthony had his eye on Janie, to no avail. That didn't make him less territorial. More, probably.\n\n\"I'm not doing this with you.\"\n\n\"You're not doing this?\" Donnie's tone was snide. \"Yeah, I think you are. You let us down, bro. It's an issue of respect, and your faggot ass reflects on all of us.\" Donnie's grin widened in \"oh, you got a problem with that?\" at Ferg's expression.\n\n\"Boys, you gotta go.\" Mr. Banyas's voice cut into the tension as he moved past, a green lightbulb in hand.\n\n\"We'll go in a bit, Pops.\"\n\n\"No. Closing time's now. You gotta go.\"\n\n\"Whatcha got there, Pops? This your tree?\"\n\nFerg recognized Reaper's tone. It didn't spell \"curiosity\" or anything else pleasant. \"Leave it,\" he said, ignoring Donnie's continued gaze. But Reaper wasn't done.\n\n\"Nah, I kinda like those lights. Kinda old-school. They might look good on my ol' lady's tree. How about you give me some, Pops?\"\n\nAnthony moved forward to join Reaper's fun. Ferg stood. Donnie's sneer grew wider. Mr. Banyas looked around with a sudden expression of alarm. Things might have gone to hell if the fire door hadn't opened, grabbing everyone's attention. \n\nMr. Jolnir stepped out with a broom and started sweeping dead leaves into a pile. \"It's after closing time. Shouldn't everyone be gone?\" he said in Mr. Banyas's direction.\n\n\"We go when we want to go.\" The malicious amusement in Anthony's tone was enough to make Mr. Jolnir pause. \"So why don't you take your scrawny old ass back inside while we finish?\"\n\nReaper turned back to Mr. Banyas and grabbed his arm, jerking it toward him. \"Gimme some, Pops, or else\u2014\"\n\nAnd things went to hell. Ferg jumped forward to grab Reaper. Donnie jumped forward to grab Ferg. Mr. Banyas jerked away but tripped over the uneven bricks. Anthony watched in amusement.\n\nThere was a strangled grunt in Ferg's ear and, all of a sudden, the arms around him loosened somewhat. Ferg wrapped his around Reaper, who half-twisted and put a fist into Ferg's mouth. There was a whiffling sound, a loud crack. Ferg, lurching to establish his grip on Reaper, saw Donnie prone, his head covered in blood. Anthony jerked into motion, hand going into his pocket, amusement leeching away.\n\nReaper was doing serious damage to Ferg's face while Ferg struggled for the grip he wanted. Blood streaked down making him blind in one eye until he was finally able to coil around behind, dig his forehead in, and squeeze. Jugular vein compressed, hindering blood leaving the head. Carotid arteries backed up and then compressed as Ferg's grip tightened, shutting down supply. Ferg held the choke as Reaper struggled, raining blows backward.\n\nOut of his good eye, he saw Mr. Banyas scramble to his feet and lunge toward Anthony, ignoring the bicycle lock dangling dangerously from Anthony's hand. A flying tackle brought the young man down and fists flew. The two rolled over and over until the whiffling sound came again, and Ferg saw a broom handle crack unerringly into Anthony's head.\n\n\"He's out, Martin. Let him go.\" Mr. Jolnir's voice. Ferg relaxed his grip and rolled the limp form off.\n\nIt took a while to get it all sorted. It took a review of the buildings' security cameras, miraculously clear according to the cops, to establish whose version of events was the truth. When all was done, Ferg sported several butterfly bandages, a pounding head, and just wanted to go lie down.\n\nBefore the police and ambulances had arrived, but after Reaper had woken from his nap, Mr. Banyas had leaned over the groggy figure. \"Gulf War, Second MARDIV, you fucking asshole. Come back here again and we'll do it some more. Tell your buddies.\"\n\nHe went over to shoo away the gawkers, especially the Ghoul. She never missed an ambulance or police call to the building, whether it was a domestic disturbance, Third Floor Deli Guy's heart attack, or someone being led away in cuffs. Now she was trying to push out into the park, phone held up for video. That left only Ferg to hear Mr. Jolnir's addition to Reaper.\n\n\"Come back here again and you won't leave except in a hearse.\" Coming from an eighty-year-old whose shirt flapped loosely about his frame, it was kind of funny, but laughing caused Ferg's head to ache.\n\nDonnie and Anthony probably didn't think it was funny. Ferg heard the EMT say, \"Coming in with two concussions, possible cranial fractures from broom handle versus skull. One with severe renal blunt force trauma.\" A snort that mixed disbelief with amusement. \"The same broom handle driven into it like a spear, from what I hear. Also, one bilateral vascular restraint being brought in for observation before transfer in custody.\"\n\nPredictably, Amber's only comment was, \"Don't expect me to nurse your ass when you get in fights.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"So, you want to talk about it?\"\n\nFerg looked up, startled, at Mr. Jolnir's words, delivered while the broom started its ssk-ssk on the bricks. The sound of the door opening had been masked by the horns and brake squeals that came with morning rush hour.\n\n\"Hmm,\" the old man said when Ferg faced him. \"Those are going to be colorful in a day or two.\" \n\nThe reaction to the large blotches of red on Ferg's face was an echo of what he'd heard the night before when Dipshit showed. Though Dipshit's smug observation was more along the lines of, \"Got your ass whooped. Guess you're not going to be able to hide that, huh?\"\n\nFor once, Amber seemed sensitive to the undercurrents of the room. One glance at her son and she tried to hide a nervous expression as she pulled at Dipshit's arm, urging him toward the back. \"Come on, Tim. I've missed you.\"\n\nNow, Ferg answered Mr. Jolnir. \"Yeah. I'm tryin' to decide if I should go to work.\"\n\n\"A dishwasher doesn't have to look pretty.\"\n\n\"How do you know where I work?\"\n\n\"I know a lot about you. So, you want to talk about it?\"\n\nFerg didn't want to. Or maybe he did because anything was better than the feeling of emptiness that kept filling up with anger.\n\n\"I was seein' this girl Mar\u00eda. We were together for a while. I thought it was the real deal. It was for me. Then a few months ago or so, she left me without sayin' anything.\" Ferg fell silent.\n\nAfter the silence stretched on, Mr. Jolnir said, \"Don't try to sell your story to the tabloids; they pay by the word.\" Ferg looked up, grimaced, shrugged. \"And that business yesterday?\"\n\nFerg took up the story again. \"She used to see this other guy that none of us like. He decided he maybe wanted to get back together with her and started talkin' to her. One day, he made a move on her at a party. I heard and got there before things went too far, told her she could leave me if she wanted, but she had to be fair and tell me. Told him what would happen if she didn't and he tried it again.\n\n\"Word got back to me that he was talkin' shit, tellin' everyone he'd mess me up the next time he saw me and that he'd cuck me anytime he felt like it. Then word that he did try something again. Then more word that they were together and flauntin' it. I flipped out a little.\" \n\nFerg was embarrassed to admit that and knew Mr. Jolnir could see it. \"I-I wasn't goin' to do anything to her except make her watch him eat his words.\" Mr. Jolnir's eyebrow went up. \"Well, maybe make her watch me give him a little of what he promised me. I dunno. Maybe. But I wouldn't have touched her.\"\n\nMr. Jolnir nodded, apparently accepting that. \"And?\"\n\nFerg told him about Gloria, who looked like Mar\u00eda's sister. \"But he did try something after I warned him. So some of what I heard was true.\"\n\n\"And those were his friends yesterday?\"\n\n\"No, those were my friends.\"\n\nNo snort, a full bark of laughter. \"Friends?\"\n\n\"They thought I pussied out. Made them look bad. That's not okay.\"\n\n\"Well, they certainly looked bad. No harm with them out of your life.\" The old man used a dustpan to gather the leaves and dump them in the compost bin. \"Women are like buses, they\u2014\"\n\n\"No.\" Ferg shook his head sharply, regretted it. \"A new one doesn't come by every minute. Not like that.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"So? You're saying another cycle of poverty and homelessness is about to repeat itself?\"\n\nFerg's irritation forced him out of the apartment more and more because it couldn't coexist with Amber's increasingly obvious intention to hang onto Dipshit. He took to the park where Mr. Jolnir was often sweeping up. Every once in a while, if the weather snapped too cold, they'd sit over hot tea with a jolt of something extra in Apartment 1D.\n\nFerg hated the conversations, but he found himself in them, nonetheless.\n\nNow he had no answer, so Mr. Jolnir rolled on.\n\n\"Let's look at it. You've got your health\"\u2014a grim, shared laugh because Ferg's face was an interesting riot of green, yellow and brown. \"You've weeded out some of the bad apples in your life. You've got a job.\" \n\n\"Such as it is,\" Ferg said and took a sip. \n\nMr. Jolnir nodded in agreement. \"On the debit side of that, the job isn't enough to get you out from under a woman who's trying to go from fading stripper to Wife Number Four\"\u2014the number, not Amber's intention, was a mild surprise to Ferg\u2014\"and views you as the big obstacle in her life.\" \n\nHe waited to see if Ferg would snap at that bait, but a slow change had been going on in the depths of the young man. Ever since Amber told him, in not quite those words, that she wished she'd had an abortion, his attitude had started shifting&nbsp;... not to anger or antagonism or hurt-little-lost boy. Simply to indifference. Cut your losses.\n\n\"You were pretty clear a couple of weeks ago that gangbanger wasn't on your bucket list. So what's your plan?\"\n\nThe frustration with his life suddenly threatened to overflow. He stood. \"I don't have a plan, okay?\" he snarled. \"I had one. It revolved around me and a girl. But she didn't have the same plan. So now I'm workin' on a new one. I gotta go.\"\n\nMr. Jolnir just raised his cup in the direction of the door. \n\nTwo days later, Ferg walked past the old man fending off the container of cabbage soup Ms. Horvath was pressing on him and her wheedling for him to come to the Christmas Eve party. \n\n\"You must come. \u0160t\u011bdr\u00fd den we call it, the Generous Day. Come and be generous with us.\"\n\nIt was all under the watchful eyes of Sleepy, who was still the ugliest cat in the world. Ferg's eyes met feline ones, and he swore there was a moment of shared amusement.\n\n\"Martin! I'd like you to come in a second,\" Mr. Jolnir called over the woman's shoulder.\n\n\"I'm goin' to the market.\"\n\n\"It can wait a moment. Iveta, I don't need any more cabbage soup. I won't be at the Christmas Eve party because that's when I get together with some old friends. Try Mr. Salinas over in North Building. He's single.\" \n\nThe simper froze at the implication. As she turned away, it morphed into a death ray at the witness to her humiliation. Ferg waited until she passed then stepped into Mr. Jolnir's apartment.\n\n\"What?\" he asked in irritation as the figure headed toward the back.\n\n\"Marty?\"\n\nHe turned to the second figure he hadn't noticed at first, struck almost-but-not-completely dumb. \"Mar\u00eda?\" The paralysis lasted only a moment. \"Why are you here?\" he asked harshly.\n\n\"To see you.\"\n\n\"Yeah,\" he sneered. \"You had months to do that. But I guess something\u2014 make that someone had your attention. I thought it was Leo, but I guess I was wrong.\"\n\n\"There was no Leo. I haven't seen him since he tried to come on to me at\u2014\"\n\n\"You're gonna claim the party?\"\n\nShe didn't break stride at his interruption. \"\u2014Pasquale's. I was just there with Ana for pizza, and he comes up and puts his arm around me and starts talking\u2014\"\n\n\"And?\"\n\n\"\u2014like some big man about how he was going to treat me so nice.\" She paused, giving him space to repeat \"And?\"\n\n\"And I dumped the marinara from my mozzarella sticks on his crotch.\" She shrugged. \"I didn't like him touching me, and I already had a nice guy.\"\n\nFerg stared at her, unsure of what to say. That part of the story hadn't gotten back to him. Reaper didn't see it, or Reaper's nasty game? But that was months ago. \"Where have you been?\" he finally managed.\n\nShe looked at him and tears started to fall. \"You're going to hate me.\"\n\nHis fears confirmed, Ferg's face tightened. \"Okay. Just go back to him, whoever he is.\"\n\n\"Not him. Her.\"\n\n\"What!\" \n\nHer nod confirmed what he was thinking. \n\nBut no&nbsp;... she wasn't nodding in agreement. She was nodding across the room.\n\nHe turned and saw the other figure he hadn't noticed when he'd followed Mr. Jolnir. Not in the chair in the corner. In the bassinet by the chair in the corner.\n\n\"Marty, she's yours. It's impossible she's anyone else's.\"\n\nNow he was struck completely dumb.\n\n\"I had her four weeks ago. She came a little bit early, but she's healthy. Her name's Carmen.\" She hesitated. \"Carmen Ferguson-Lopez if that's okay with you.\"\n\n\"Wh-Ho-Wh...\" He couldn't get a question out. She made a guess.\n\n\"I didn't show much. It was easy to hide for a while. And I didn't tell you because we were fighting about Leo. I was drunk that night at the party, and I didn't realize what he was doing at first. Then I stopped it. I know you think you did, but you're wrong. I stopped him before you even got there.\" The tears started again. \"But we were fighting, and I was afraid you'd be furious. Afrai\u2014\" She broke off.\n\n\"What?\"\n\n\"Afraid you'd accuse me of her being Leo's. I was already frantic; I couldn't bear that. I was feeling guilty because I shouldn't have been drinking when I was frightened I was pregnant. And I shouldn't have been drinking around Leo at all. But I was also furious that you were mad at me, and I wasn't thinking right. And I just&nbsp;...\" She trailed off for a second, then ended weakly. \"...&nbsp;didn't know what to do.\"\n\n\"So&nbsp;...?\"\n\n\"My sister figured it out. We share a bedroom and she saw my belly. She told my parents. Before I knew it, I was bundled off to my grandparents and aunts to avoid the neighbors talking.\" Her mouth twisted in disgust as she spat the last word.\n\n\"They didn't have phones?\" The dying embers of months of anger drove the acid tone. \"I don't have one, but you could have gotten a message to me.\"\n\n\"No, they don't. It was a finca, out in the country. I was in Colombia, Marty.\"\n\nIt was overwhelming. Ferg tottered to a chair and collapsed onto it, unable to take his eyes off what was in the far corner even as Mar\u00eda went on.\n\n\"They took away my passport and said I didn't need any money. But I was smarter than they were. It was my Colombian passport we used to get there. But I had my American one hidden.\"\n\n\"What did you do?\"\n\n\"Hovi, one of the aunts' boyfriends, slipped me five hundred dollars and whispered, 'Go. Don't make him wonder.' So I went, and here I am.\"\n\n\"Why would he do that?\"\n\n\"I don't know. He just came to the finca one day to see my aunt, and he met me, and that evening he talked to me when no one was around. I don't know why he did it or why he said what he did, but it was like a gift from God.\"\n\nFerg's eyes finally came back to the woman he loved, and they stared at each other. She shook her head. \"If I'm nothing but a scandal, then to hell with all of them. Even if my father relents, my place is with you.\" Her eyes watered again with worry. \"That's if&nbsp;...\"\n\nThe walls erected to keep the pain away finally crumbled, no longer needed. He reached for her. She allowed him one long kiss, returned equally greedily, then pulled back. \"Do you want to hold her?\" \n\nThey were sitting quietly, the three of them, when Mr. Jolnir emerged from the back bedroom. Seeing him prompted Ferg to ask Mar\u00eda. \"Why are you down here?\"\n\nMar\u00eda's eyes darkened. \"Because your mother said something about not dealing with some guy's brat as she shut the door in my face.\" She felt Ferg stiffen. \"I was going to wait in the lobby, but Mr. Jolnir came out and said I could wait in his place.\"\n\nLater that evening, Ms. Horvath cracked open her door so she could hear what was going on in 2B better. She wet her lips in anticipation as the voices raised in volume.",
        "\"You know what, Amber? I don't give a fuck whose name is on the lease. I keep this place goin' and\u2014\"\n\nA shriek. \"I pay the bills.\"\n\n\"You pay for the cigarettes and the booze. I pay for the food. Dipshit pays the rent.\"\n\nThe response to that was vicious. Ms. Horvath loved it.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Marty, we can't stay here anymore.\"\n\nFerg and Mar\u00eda were walking hand-in-hand, Carmen tucked into a sling on his chest.\n\n\"Amber's on your case again?\"\n\nAmber was not one to let losing the battle stop the war. She sniped at everything Mar\u00eda did, pounded on the wall for them to be quiet, and get \"that fuckin' smell of baby shit out of here!\" Mar\u00eda took all of it with quiet acceptance, but Ferg knew it upset her. He just didn't know what to do about it; Amber wasn't going to change.\n\n\"No more than she always does.\"\n\nFerg's quick follow-up had a dangerous tone. \"Is it Dipshit?\"\n\nThe tinkle of laughter held a note of satisfaction. \"Oh, I think he got the message that he'd be spitting teeth as he learned how to fly going down the stairwell.\" The catch in her boyfriend's breathing turned the tinkle into full-on merriment. \"Yes, I heard you say that. You weren't as quiet as you thought you were, and the walls are thin.\"\n\n\"Sorry,\" he muttered. He was trying not to be that guy anymore&nbsp;... for Mar\u00eda, for Carmen&nbsp;... but nineteen years didn't disappear in a flash, especially when you caught a fucker like that staring at your girlfriend feeding her baby.\n\nShe pulled his arm in tighter to show she forgave him. \"He still looks, but women have been dealing with pervs looking forever.\" Her voice abruptly became more serious. \"But he's afraid of you and Amber knows it. It makes her meaner.\"\n\n\"I'll\u2014\"\n\n\"It's not that,\" she interrupted. \"Marty, they had drugs the other night. I could smell it. It was H. We can't have Carmen around that.\"\n\nThe three of them turned toward the building, ruminating on their choices, or lack thereof. Ferg had finally gotten a few more hours from the restaurant manager, but at minimum wage, that wouldn't cover things. \n\nThey saw Mr. Jolnir and Mr. Banyas out in the little park, shaking the snow off the branches of the evergreen. It had been coming down for days: a wet, heavy fall that snapped branches.\n\n\"Not on my watch,\" Mr. Banyas had declared. \"Especially not right before our party.\"\n\nHe waved them over. \"How's the baby girl?\"\n\n\"She loves the snow.\" As if to prove the point, Carmen giggled when a heavy clot of flakes hit her cheek.\n\nThe tree rescued, Mr. Banyas gave Carmen one final chuck under the chin and headed to his building. Ferg and Mar\u00eda found themselves ensconced in 1D, Carmen nursing discreetly under a blanket while Mr. Jolnir brewed tea.\n\nThe old man glanced over. The depression that crossed the two young faces when the older men had replied that, no, they didn't know of a room being let in the complex, was still there.\n\n\"There are a couple of choices,\" he said.\n\n\"Huh?\" Ferg was so wrapped up in what Mar\u00eda had told him and in the general suck of trying to make life work that he was slow on the uptake.\n\n\"A place to live.\"\n\n\"Yeah? Name one.\"\n\n\"A tiny studio about fifteen blocks that way\"\u2014the whiskered chin nodded out the window\u2014\"is doable for under a thousand. You'd be cramped with three of you&nbsp;... hell, even the mice are hunchbacked over there&nbsp;... but it's a roof over your head.\"\n\nHe saw Mar\u00eda's frown and nodded. \"Yeah, not a good neighborhood. You'd have to be careful. You could also double up in a one-bedroom around here with some roomies. One couple in the living room, one in the bedroom. Just as crowded, but safer.\"\n\nHe saw Ferg's frown. He waited to see if some stupidity would come out of the young man's mouth. \"We don't have any friends who're lookin' for a place and also who we'd feel safe around Carmen.\" \n\nHuh! Not stupid after all.\n\n\"Well, anything that's in a halfway-decent neighborhood and you're not sharing&nbsp;...\" The shrug said it all: money.\n\nThe young couple stared at the floor, trying to figure out what to do.\n\n\"You know that warehouse across the street from Johnny's Tavern?\"\n\n\"Yeah,\" said Ferg.\n\n\"Guy who runs it is named Mike. He could use someone though he hasn't started advertising yet. Of course, the hourly rate's probably no better than what you're making now.\"\n\n\"Then?\"\n\n\"You can get a lot of overtime. If you're willing to work hard to have something&nbsp;...\" He left the rest unsaid. \n\n\"How do you afford this place, Mr. Jolnir?\" Mar\u00eda asked. \"I've seen what Marty's mom hands over each month, and you're retired.\"\n\n\"Rent-controlled,\" he cackled. \"Stabilized isn't bad, but controlled? That's the damn golden ticket in this city. Not many left. Have to have lived in the apartment since before 1971, and the building has to be older than 1947. No new tenants. With all the construction and old people dying, nope, not many left.\" He turned back to Ferg. \"So?\"\n\n\"He doesn't know me. I'm just some kid\u2014\"\n\n\"He'll hire you.\" The voice was certain. \"So?\"\n\n\"Absolutely.\" Old eyes met young ones and smiled.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Want to take Carmen to the park?\"\n\n\"Mr. Banyas said they're going to decorate the tree for the party at nine. We could go for a walk and then help,\" Mar\u00eda answered.\n\n\"Get me some cigs,\" Amber called from the couch.\n\n\"Get 'em yourself! I'm not made of m\u2014\"\n\nMar\u00eda laid her hand on Ferg's arm, quieting him. \"We'll get you a pack, Amber.\" Just three or four more months, they had told each other. Just until we have a security deposit saved. We can put up with anything for a few more months.\n\nThey came down to a lobby awash with flashing lights. \"What's happening?\"\n\n\"Mr. Jolnir kicked it this morning,\" Ms. Horvath said. She was watching the EMTs shut the doors with relish, disappointed that the show was over.\n\n\"Bu-but he was fine last night,\" Mar\u00eda protested.\n\n\"Out of the blue, they say. Just keeled over,\" the Ghoul expanded. \"Guess he won't be meeting his friends for those drinks tonight.\" The last was waspish.\n\n\"Oh, Marty! That poor man.\" Mar\u00eda looked over at the closed door, tears already streaking her cheeks.\n\n\"Yeah.\" Ferg was surprised at the tight feeling in his throat over a cranky old man.\n\n\"Oh, and what about Sleepy?\"\n\nIt said something about the changes in Ferg that he didn't scoff, despite the mutual standoffishness between him and the cat. Mar\u00eda had enjoyed it curling up with her and Carmen. \"Guess we'll have to take him. Go 'head and get him. I'll take Carmen back up and wait for you.\"\n\nThe look she gave him would have been ample reward had Ferg seen it, but he didn't. He was busy with the collapsible stroller. It didn't matter; it didn't bother him to take in the cat since Mar\u00eda cared for it.\n\nShe came back to the apartment, her dark eyes wide.\n\n\"Where are my cigs?\" Amber demanded.\n\nMar\u00eda ignored the older woman for the first time.\n\n\"Hey, I'm talking to you. Cigs?\"\n\nIt was a different young woman who spoke, and when she did, it was to Ferg, not the older woman on the couch. \"Marty, let's go into the bedroom.\"\n\n\"I'm not watching your brat just because you got an itch!\" Amber yelled after them. \"Didn't you learn anything from having one bastard?\" Mar\u00eda closed the door on the repeated, \"Cigarettes! Jesus! What's up your ass?\" \n\nMar\u00eda turned to Ferg. \"There were two envelopes on the windowsill, right where Sleepy would come in. One was addressed to you and one to me.\" She handed him an envelope with \"Martin\" scrawled in angular handwriting. In her other hand was another, already opened.\n\n\"But they said he went all of a sudden?\"\n\n\"I don't know either. They were just there.\"\n\nMartin,\n\nIt bothers me. You got her pregnant, now step up to the plate like a man. I understand that your circumstances aren't the best, and that isn't your fault, but from here on out, you've got only yourself to blame. To show you I've got hopes for you, here's something to help out.\n\nMr. J.\n\nPS: Don't worry about Sleepy. I've got him settled.\n\nFerg felt around in the heavy envelope. He encountered a wad of cotton. Inside it, his fingers could discern a small, round shape with a lump on one side. He knew what it had to be. He left it there, realizing that now wasn't a good time, not minutes after learning someone had died. \n\nHe looked up at Mar\u00eda. \"What's your note say?\"\n\n\"There was no note.\" Before Ferg could remark on the oddity of that, she continued. \"Just these.\" She held up a stack of legal papers.\n\nHis eyes skipped over \"... commencing the 1st of January&nbsp;...\" and \"... located at Apartment 1D at 1508&nbsp;...\" They jumped in astonishment to the part that read \"... Mar\u00eda Lopez (hereinafter referred to as 'Tenant')&nbsp;...\"\n\n\"What the hell?\"\n\n\"But Marty, that's not all.\" She shuffled the stapled pages to reveal a second form. This one bore the heading \"Division of Housing and Community Renewal &ndash; Office of Rent Administration.\" Her finger pointed to the words farther down the page. \n\n\"That's impossible! You can't pass on rent-controlled to a new tenant. Most you can hope for is rent-stabilized.\"\n\n\"I know. Bu-But it's signed by the landlord and the city clerk and&nbsp;... here!&nbsp;... dated and sealed and everything.\"\n\nFerg's eyes traveled down the page, looking for the dollar sign. \"But that's&nbsp;... I mean&nbsp;... that's not quite half&nbsp;...\" His voice trailed off in disbelief. \"How&nbsp;...?\"\n\n\"I don't know. It's like some kind of miracle. I don't know. But it's real, Marty.\"\n\nHe looked at his girlfriend, at the tears streaming down her face. Not tears of sorrow, though those were mingled in, tears of joy.\n\n<center>\u2022 \u2022 \u2022</center>\n\nBy some grace of God\u2014though that god may have been Bacchus\u2014Amber slept in on Christmas Day. Ferg and Mar\u00eda and their daughter slid quietly out of the apartment. As they traveled down the hall and then down the stairs, they heard the shrieks of young voices calling to one another. The sounds of adults also came through the doors: some querulous, demanding coffee at this \"ungodly hour,\" some filled with the same excitement as their offspring.\n\nIn some indefinable way, it was different from previous years. Voices were happier, cries of delight more sincere as if Santa had known each personally and whispered exactly the right thing into parents' or lovers' ears.\n\nOn the way back from breakfast at the pancake house, Ferg detoured them into the tiny park. The young family marveled again at the evergreen that stood so determinedly despite the weight of snow on its branches.\n\n\"Merry Christmas, Mar\u00eda.\"\n\n\"Merry Christmas, Marty.\"\n\n\"Umm. There's something else.\" \n\nThe pigeons on the benches, previously startled from their window-box perches by the earsplitting squeals of youth, were now peeved to be startled again by a similar sound. When Ferg and Mar\u00eda emerged sometime later, it was with her arm through his, her left thumb playing with the band that encircled the hand's ring finger.\n\n<center>\u2022 \u2022 \u2022</center>\n\nThere were five people present in early April when the temperature finally climbed above freezing for more than a day.\n\nThe priest wasn't happy to be out in the driving rain and wind. As he finished the words he knew by heart, \"... when the eternal day of resurrection dawns upon the graves of the earth, grant us grace to rise to eternal life,\" a thought stole through him. One more after this, and then some of Jenny's Irish coffee. \n\nHe felt guilty for the disrespect immediately, for he was a man who took his calling seriously. \n\nHe nodded to the grave attendant, who was also miserable from the weather. The man picked up his spade and started to replace the soil over the hole that contained a small urn.\n\nOf the remaining three people, one was quite enthralled by the sporadic wet drop against her cheeks despite the cover on the stroller. She'd wave her bemittened hands in excitement, but her coordination wasn't up to the task of catching one yet.\n\nThe other two didn't notice the wind or the occasional, cold trickle that would slither down the backs of their necks. They waited patiently while the grave attendant finished his task, both leaning down to pick up a clod and throw it in. They watched the practiced resetting of the square of sod, its edges tamped so that they would rejoin seamlessly now that the ground had thawed enough for the task at hand.\n\nAfter the priest had given a final \"Amen\" and waited for their echo, the shoveler gave the couple a nod that conveyed what sympathy he was able to muster after doing this thousands of times. \"Unusual name. Never heard it before.\"\n\n\"Just a name,\" the young man said.\n\nHigh above, the watcher grinned at that, blue-gray eyes crinkling with his amusement. When it was over, he smoothed his white beard and turned to the figure beside him. \"Come on. I could use a nap and this weather sucks.\" \n\nHis companion sidled close, a huge slate-gray form. A brief drumming made one or two of the passers-by below glance up and moan, \"Thunderstorms? I can't wait for summer!\" and continue their scurry from cab to doorway with newspapers over their heads or simply hunched against the onslaught.\n\nThe young man turned to the woman, and they both glanced up at the sound. \"How 'bout we go home before the hobbit decides to melt down?\" Marty said.\n\nMar\u00eda laughed, a silvery chime that lightened the hearts of those within hearing. \"I like the sound of that word.\"\n\n\"Well, she is a\u2014\"\n\n\"Home.\"\n\n<center>\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500</center>\n\n<center>Merry Christmas to all!</center>\n\nI hope you enjoyed the story. It's a submission for the Winter Holidays event. Thank you to vanmyers86, Bebop3, MsCherylTerra, and OneAuthor for taking the time to read this and make (good) suggestions.\n\nAuthor's Note: In the United States, St. Nick, the family-friendly, flying, nineteenth-century North Poler, has almost completely absorbed the strict, terrestrially-bound, third-century Catholic bishop from Turkey, Saint Nicholas. Even in other parts of the world, more-secular Father Christmas has clawed his way to coexist side-by-side with the saint, celebrating their days on either end of December.\n\nBut while Commercialism is the great assimilator of today, it was not the first. The Church itself knew it was easier to take a co-opting approach to local beliefs rather than an antagonistic one, and many tidbits found themselves adopted and reborn in new ways.\n\nSo, long before our modern incarnation, we had J\u00f3lnir, soaring through the driving snow of a Yule night in Northern Europe. Riding his flying steed, Sleipnir (for J\u00f3lnir was Odin/Hovi in a less-threatening guise), he delivered food to the adults, gifts to the children, and an ass-kicking to those deserving&nbsp;... the North did not have weak gods.\n\nLike our traditions of a Yule log, mistletoe, wreaths, Christmas ham, and even that Christmas is twelve days long&nbsp;... the image of a bearded, airborne gift-bringer was brought by the Vikings to the shores of Great Britain, thence to the Romans, and down the long trail to Santa Claus today."
    ],
    "authorname": "chasten",
    "tags": [
        "christmas",
        "christmas tree",
        "devotion",
        "marriage",
        "romance",
        "santa claus"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-yule-retrieved"
}