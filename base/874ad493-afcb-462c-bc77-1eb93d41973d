{
    "title": "Gaming: D&D Pt. 11",
    "pages": [
        "This chapter is for those of my readers who feel that I end stories too abruptly. Thank you all, though, for the supportive and helpful comments I've received. They're the main reason writers submit their work to this site.\n\nSimran strong-armed her boss, and somehow extorted three weeks' worth of holidays. Dr. Welsh fixed things so that I could book my accommodations (big enough for two), and be reimbursed out of his budget.\n\nSimran drove me to the airport.\n\n- \"Two weeks.\" she said.\n\n- \"I can't wait.\" I admitted.\n\nI worked my ass off at the Public Record Office. I didn't want Dr. Welsh to regret allowing my girlfriend to join us, so I tried my damnedest to uncover something useful for him, some material that he could use.\n\nYvonne Bennett-Smythe joined us for dinner again, only a few days after we had arrived.\n\n- \"I can't believe that you know Simran.\" she said.\n\n- \"I can't believe that Simran knows you.\" I replied.\n\nYvonne insisted on telling me how intelligent, perceptive, and diplomatic my girlfriend was. I showed her the three photographs of Simran I carried in my wallet.\n\n\"And beautiful as well.\" she said. \"You are a lucky fellow.\"\n\nI knew that. I wrote Simran a three page letter in the first two days I was in London - and mailed it. Then I immediately began a second letter. I recorded what Bennett-Smythe had said about her, and how Dr. Welsh had added his own first impressions. I also tried to express, in words, how I felt about her.\n\nYou have no idea how blessed I feel. For years, I thought that I was cursed - at least, in terms of my romantic life. It seemed like one disaster after another. On the plus side, I met Parvani, and Nate.\n\nBut being with you ... I feel so lucky, Simran. If I believed in karma and reincarnation, I would have to believe that I had suffered horrible torments in a past life, to deserve you in this one.\n\nI filled pages and pages with minor trivia, and my feelings for her.\n\nYes, I phoned her, too. It was surprisingly, incredibly emotional - surprising, because, I sensed that she was feeling it, too. On our second call, I could have sworn that she was crying.\n\n- \"Simran? Are you okay?\"\n\n- \"It's just ... I can't wait till I get there. Six more days ...\"\n\nWe blew a lot of money on those calls, at $2 a minute. I didn't begrudge a penny of it.\n\nDuring the day, I did my best to impress Dr. Welsh.\n\n- \"This is excellent, Ian.\" he would say, after he had read my notes. I got far ahead of him, to the point where he gave me a day off - which I spent on my own research.\n\nFinally, the day arrived. I met Simran at Heathrow. She looked younger, somehow, in her travelling clothes. But there was no mistaking the pleasure - the happiness - on her face when she caught of me. I'm sure I looked the same.\n\n- \"Why did those two weeks apart seem so long?\" she asked. I felt the same way.\n\nThat first weekend, I fought the temptation to spend all day in bed. We did some sightseeing, and toured around London.\n\n- \"Slow down, Ian.\" she told me. \"We don't have to see everything in two days.\"\n\n- \"Not possible.\" I said. \"Not even remotely possible. You'd need two months to see all of London.\n\nHer eyebrow rose. \"Exactly.\" she said.\n\n- \"I just wanted to see as much as we could before Tuesday. I'll have to go back to work with Dr. Welsh.\"\n\n- \"We both knew that.\" she said. \"I'll be fine on my own. Besides - \" She leaned in and kissed my cheek. \"I came to be with you, first. Seeing the sights comes second.\"\n\nThat did the trick. I relaxed, and just enjoyed being with her. It was another revelation. There's something special about travelling with the one you love. Without the pressures and distractions of school, or work, family and friends, and just ... everyday life, we were able to concentrate 100% on each other.\n\nI was amazed at much more there was to learn about her.\n\nOn Wednesday, she came to Kew Gardens with me, curious to see where I was working. Dr. Welsh got her a visitor's pass. Simran was fascinated by the place. She loved books as much as I did - maybe even more.\n\nThursday night we went to the theatre. I had got us tickets to the Mousetrap, the play based on an Agatha Christie mystery, that had been running since 1952 (as far as I know, it's still going).\n\nOn Saturday night, Dr. Welsh invited us out to dinner - with Yvonne Bennett-Smythe. Simran had been looking forward to this all week. She wasn't the only one. Yvonne greeted her like an old friend, with a warm embrace.\n\n- \"It's so good to finally meet you - in the flesh.\" she said. \"You're even more lovely than those photos Ian carries around.\"\n\nIt was a mutual admiration society from the outset. Dr. Welsh and I could only watch and wonder. Simran, obviously, was a big fan of Dr. Bennett-Smythe's writing. She had gone out and read all of her publications. The insights she gained from that, it seemed, had helped her to catch two errors in Yvonne's submitted chapter.\n\n- \"Minor suggestions.\" said Simran.\n\n- \"Glaring errors.\" said Yvonne. \"I should have been mortified had they appeared in print. You saved me considerable embarrassment. I shan't forget it.\"\n\nHonestly - that was the way she talked.\n\n- \"Publish in haste, repent at leisure.\" said Dr. Welsh.\n\n- \"Have you any idea, Ian,\" said Yvonne, \"what a gem you've got here? I hope you appreciate her.\"\n\n- \"He does.\" said Simran, as she squeezed my hand.\n\nThe two women went into great detail about the chapters of Yvonne's book. But Bennett-Smythe seemed equally interested in Simran's other work. They kept it up all through dinner.\n\n- \"They're both so wonderful.\" said Simran, afterwards. \"They have this knack ... they make you feel as if they're more interested in you than you are in them.\"\n\n- \"Do you think they're more than friends?\" I asked her.\n\n- \"Of course they are!\"\n\n- \"Are you sure? How could you tell?\"\n\n- \"Did you not see the way he looks at her?\" said Simran, with a smile. \"It's the way you look at me, sometimes ...\"\n\nThat definitely invited a kiss.\n\n\"Plus she had her hand on his leg for most of the dinner.\"\n\n***\n\nAfter another weekend in London, we were eager to be off, but Simran was more than willing to let me do a few more days of research - for my thesis.\n\n- \"Take all the time you need.\" she told me.\n\nThat turned out to be two days. Then we headed for Cambridge, where Yvonne insisted on giving us a tour of the University. It's a magical place. Simran was particularly taken with the Round Church and the Bridge of Sighs.\n\nBennett-Smythe took us to a little country pub. It was old, and rustic. There was no bar - only taps (the kegs were on the other side of the wall).\n\n- \"This is absolutely wonderful.\" said Simran. \"Thank you so much for bringing us here.\"\n\n- \"And for the tour.\" I added. \"It's very generous of you, to spend so much time with us.\"\n\nYvonne shook her head. \"You don't seem to understand, Ian. It's no sacrifice on my part to spend time with the two of you.\"\n\nWe were both very flattered, and promised to keep in touch.\n\nSimran and I travelled to York, which we both loved. Then we went to Edinburgh, and to the Bannockburn battlefield - a bit of a pilgrimage for me. Stirling castle, Perth, and Inverness, where we had a wonderful time.\n\nBut it was our slow progress down the north side of Loch Ness that left Simran completely entranced. She loved Glen Urquhart, and Fort Augustus. But the sunset we saw in the Kyle of Lochalsh won her heart.\n\nWe rented mopeds, and drove around the Isle of Skye for two days.\n\nYou can learn a great deal about someone by travelling with them. I found out that Simran was easy to get along with; she wasn't fussy or demanding - I suppose you could describe her as 'low maintenance'. She kept her cool when there were obstacles - one day we had a lousy meal, and another evening our accommodations were sub-par - she didn't complain. Learn from the experience, and move on, was her approach.\n\nEvery night, we stopped in a B&amp;B or small hotel. And every night, we made love. She had packed some black lingerie, to 'spice up our travels', as she put it. But she never seemed to have it on for long.\n\nI'm not sure how, but I was becoming adept at picking up her signals, the unspoken little hints that she was broadcasting. I somehow sensed when she wanted soft and slow - or hot and hard. We did romantic, and sensual ... and passionate, and just plain lusty.\n\n- \"How did you know?\" she asked, one night. \"That I wanted ...\"\n\n- \"The way you were twirling your hair at dinner.\" I said. \"That's why I wanted to skip dessert.\"\n\nShe grinned. \"And I made you wait while I had that creme brulee.\" she said. \"You know - I wasn't even aware that I was touching my hair. But you noticed it - that's ... hot.\"\n\nIt certainly was. It led to another bout, with her taking the lead. We didn't get much sleep that night.\n\n***\n\nAll too soon, our wonderful trip was over, and we had to head home. I mailed off a postcard to Dr. Bennett-Smythe, admitting that Simran couldn't quite decide on the highlight of her trip: the Kyle of Lochalsh, or meeting her.\n\nOn the plane, on the way home, Simran and I did have a serious talk. I confessed my growing fear: that after the beauty and excitement we had experienced, it would be difficult to go back to our routines - school for me, work for her.\n\n- \"I don't understand.\" she said. \"What are you afraid of?\"\n\n- \"Well, it won't be as ... exciting ...\"\n\nShe took my hand.\n\n- \"I find you very exciting.\" she whispered.\n\n- \"You know what I mean. I don't want you to be ... bored.\"\n\n- \"Trampolines, Ian.\" she said. \"Trampolines.\"\n\nI got the message. I didn't have to try so hard, to impress her, or to hit the 'Wow' button every single time. A little variety would do the trick - I didn't need limousines, or $300 bottles of champagne.\n\nOr trampolines.\n\n***\n\nThere was one matter I had to consider when we got back. It was simple enough: stay as Cooper's roommate for another year ... or ask Simran to move in with me. I thought about it, and thought about it - and then I thought about some more.\n\nI even got a sheet of paper, and divided it into pros and cons. Under 'Stay with Cooper', I wrote 'great roomie' and 'He'd be disappointed if I left'. Under 'Simran', I wrote 'Simran' - and the debate was over.\n\nBut there was a second question - and the two issues were so tangled up, it was like the chicken and the egg. There was no other way around it. I had to talk to her about it.\n\n- \"I don't even know where to begin.\" I said.\n\nThat got Simran's attention. She looked a bit worried.\n\n- \"Ian, please give me a hint - at least. Otherwise, my imagination is going to run away on me, and I'll start imagining worst-case scenarios.\"\n\n- \"No - it's not bad!\" I said, quickly. \"I mean, it's not ...\"\n\nNow she definitely looked worried.\n\n\"Sorry - here goes: I'm trying to decide whether I should stay with Cooper, or ask you to move in with me. But it's complicated, and there are other things involved ...\"\n\n- \"Wait.\" she said. \"Say it again - only slower.\"\n\nI repeated myself.\n\nSimran took a deep breath, and then she nodded. \"Okay - please don't do that to me again. You can tell me anything, Ian - just don't scare me like that.\"\n\nI didn't understand.\n\n\"I was afraid.\" she said. \"I thought you were about to break up with me. Or that Diane was pregnant, and you were the father.\"\n\n- \"No!\" I said. I hadn't realized what I was doing to her. \"Simran, no - I love you. I don't want to lose you.\"\n\nShe smiled, then. \"I know. It's still nice to hear, though.\" She let me wallow in confusion for a while. \"Alright. Start over. What's the issue?\"\n\n- \"Should I ask you to move in with me?\" I said.\n\n- \"Tempting offer. I can think of a few reasons why you might want to. Why wouldn't you?\"\n\nI took a deep breath. \"I assume that your parents wouldn't object. You're old enough - sorry - to make up your own mind. And they have to know that we're ...\"\n\n- \"Being intimate.\" she suggested.\n\n- \"Yes. I haven't actually asked you, so I'm not sure how you would feel about it.\"\n\n- \"Coop might be disappointed. To lose you as a roommate.\"\n\n- \"I know.\" I said. \"But that's not the most important thing.\"\n\nSimran sat up a little straighter. \"Alright - what is? Why are you so worked up about this?\"\n\nI took another deep breath. This wasn't easy. \"Sim - do you think I should do a PhD?\"\n\n- \"Of course you should.\" she said - instantly. \"Why wouldn't you?\"\n\n- \"Because ... I don't want to move away from you.\"\n\nThere. I'd said it.\n\nSimran leaned forward, and kissed me.\n\n- \"That's sweet.\" she said. \"Okay - so you want to discuss it? What are the alternatives?\"\n\n- \"Uh ... get a job?\"\n\n- \"What kind of job?\" said Simran.\n\n- \"I could teach.\" I said. \"I could go to Teacher's College after this year. And then teach high school.\"\n\n- \"So, a year to finish your Masters Degree, then a year of Teacher's College - and then you apply for a teaching job, which would probably be somewhere else, because the market for teachers here is terrible right now - and will probably remain so, for the foreseeable future.\"\n\n- \"You've already been thinking about this.\" I said, aloud, just as I realized it.\n\n- \"Are you even sure that you want to teach?\" she asked.\n\n- \"Yes.\" I said. I had discussed this very subject with Dr. Welsh. University Professors (with a few notable exceptions) didn't concentrate on teaching. Most of them saw it as a chore - an imposition - that detracted from their research. Many, many profs would have been happier if there were no students at University.\n\nI thought that profs should concentrate on teaching, with just as much attention and energy as they put into their research - regardless of their field. Only a handful of people would ever read their publications, yet they could reach hundreds through their lectures. And then those people might read their publications.\n\n- \"Fair enough.\" said Simran. \"But how much of this is because you don't want to leave me?\"\n\nShe was just too damned smart. And too perceptive.\n\n- \"Honestly? I want to stay with you, Simran.\"\n\n- \"That's very flattering, Ian. Thank you. But don't you see? You're just postponing a decision. If you stay here, and then go to Teacher's College - that gives us two years together, instead of one. Then we'll still have to have this conversation all over again.\"\n\n\"Because you'll probably have to move to take up a teaching job. And what if I get offered a better position? We would have to have the same conversation, only with the roles reversed.\"\n\nI was in a state of mild shock. I hadn't expected that she had given this question so much thought. But Simran was also considering possibilities which involved us being together two years from now - which I found exhilarating.\n\n- \"Have you talked to Dr. Welsh?\" she asked.\n\n- \"Sort of. Not about us. He thinks I should do a Doctorate.\"\n\n- \"So does Yvonne.\" she said.\n\n- \"She told you that?\"\n\nSimran nodded. \"But that's not the most important thing. Ian - what does your heart say?\"\n\n- \"Do the PhD.\" I said. I had known that all along.\n\n- \"Good.\" she said. \"Because that's what mine says, too.\"\n\n- \"Really? Because ... I couldn't do it here, Sim. I would have to go elsewhere.\" It was professional suicide to do a Doctorate at the same institution which had granted you a Masters and an undergraduate degree. Suspicions of favouritism and accusations of parochialism would follow wherever you went thereafter.\n\n- \"I know.\" she said.\n\n- \"So it comes down to this: I want to live with you, but I may not be here - correction: I probably won't be here a year from now. Is it fair to ask you that?\"\n\nSimran gently took my head between her hands.\n\n- \"I love you. I want you to follow your dreams. But I also think that you should keep your apartment - for now.\"\n\n- \"You do?\"\n\n- \"It wouldn't be fair to Coop, to ask him to find a new roommate a week before the end of August. That's not enough time.\"\n\n\"It's also not much time for us to find an apartment. Is it possible that you're rushing this decision, Ian?\"\n\nShe was probably right. I did want to get my personal life squared away before September, before the big push to finish my thesis.\n\n- \"I can still see you just as often as you'd like - and we can have another conversation about our future whenever you want to. But I think that you need to consider a few more things before you decide - or before we decide.\" She was very rational, very level-headed about the whole thing.\n\nIt wasn't until the next day - about three hours after she'd left, that I realized what I'd missed. It was the 'We' part.\n\nI was trying to make up my mind, to choose between two apparently irreconcilable things: do a Masters, or stay with Simran. As she rightly pointed out, going into teaching might be just the same choice - only a year later.\n\nWhat she had hinted at, when she suggested that I was rushing the decision, was that I had missed a major part of the equation: her.\n\nI wasn't giving Simran a choice.\n\nThat had to be rectified - immediately. I sent flowers to her office, with a small note that said 'Sorry - I'm a fool.' Then I called that evening, to ask her to meet me for a drink, the next night.\n\n- \"That sounds fine,\" she said, \"but why are you a fool? What is it you're sorry about?\"\n\n- \"I'll explain tomorrow.\" The extra day to think things over did nothing to change my mind. I just felt like more of an idiot.\n\nI didn't want to take her to dinner - ordering and eating would be a distraction. I chose a quiet piano bar, on a night that there was no live music. It was only a few blocks from my place, so Simran drove, and parked her car in front of the apartment. We walked over to the bar.\n\n- \"Thank you for the flowers.\" she said.\n\n- \"I felt guilty.\" I said. I did not mention Diane's theory about men and flowers.\n\n- \"What?\" said Simran. She stopped, suddenly, on the sidewalk. \"What do you feel guilty about?\"\n\n- \"Nothing serious.\" I said, quickly. \"I'm just stupid. What I said the other night. Please, Sim - I'll explain when we get there. I don't want to have this conversation in front of the dry cleaners.\"\n\nShe looked suspicious, but she didn't create a scene. We got to the quiet little bar.\n\n- \"There's no piano player tonight.\" she said.\n\n- \"I know. That was deliberate. I didn't want any noise, or distractions.\"\n\nSimran was definitely curious, but she was also patient - and discreet - two more qualities I admired about her.\n\nWe ordered a drink, which the waiter brought back with commendable promptness. I didn't keep Simran waiting any longer.\n\n- \"I'm sorry. I was stupid.\" I said. \"You asked me if I'd considered the alternatives. I had. But only my alternatives. I never asked you what you want.\"\n\nSimran smiled. She reached across the table and stroked the back of my hand.\n\n- \"I knew there was a reason I was going out with you.\" she said. \"Funny. I always think 'My boyfriend is so smart' - and then you surprise me - and I think 'He's even smarter than I thought'.\n\n- \"I felt like an idiot.\" I said.\n\n- \"That's what I mean - you're very bright.\" she said, with a big smile.\n\n- \"I want to live with you, Simran.\" In my head, I could hear Neil Young singing it: \"I wanna live with a cinnamon girl, I could be happy the rest of my life ...\"\n\n\"I also want to do a PhD. You were right - that's what I want. But I'm afraid to choose that option, if it ends our relationship.\"\n\n\"So here's my question: what do you want?\"\n\n- \"What are you afraid of, Ian? Why does choosing to do a Doctorate have to be the end of us?\"\n\n- \"Because I don't know where I'll end up. It could be Toronto ... it could be anywhere.\"",
        "Simran sighed.\n\n- \"So?\"\n\n- \"I don't know if I could survive a long-distance relationship.\" I admitted. \"I barely got through the 2 weeks we were separated in July. Honestly: do you think we could manage four, or even five years apart?\"\n\nSimran seemed unfazed by this possibility.\n\n- \"Why do you assume that we would have to be apart?\"\n\nI heard her words. It took an extra moment for them to register. My heart was thumping.\n\n- \"Are you saying ...?\"\n\n- \"I'm just asking a question, Ian. It's a serious decision, though. Almost impossible to reverse.\"\n\nI reached across the table, and took her hand.\n\n- \"I don't know what to say, at this point. I want to do a PhD., but I don't want to lose you. How do I manage to keep both?\"\n\n- \"My grandmother used to have a favourite saying: 'Sufficient unto the day'. It's from the Sermon on the Mount. Sufficient unto the day is the evil thereof.\"\n\n\"Basically, there's enough bad stuff going on, without adding future problems. What my grandmother meant was that we shouldn't worry about things that haven't happened yet. If it's something you can prevent - then do it. Otherwise - relax.\"\n\n- \"So ... what if we were to ... discuss a few possible places where I might apply for a PhD. program?\"\n\nSimran smiled. \"Then we might find a few places where I was willing to go, too.\"\n\n- \"Really? You'd go with me?\" I could barely believe that she had said that. \"But - what about your job?\"\n\n- \"My skills are transferable enough. I'm sure there are many places with a reputable program for you would have opportunities for me, too.\" she said.\n\n- \"You're amazing.\" I said.\n\n- \"I'm glad you think so.\"\n\n***\n\nFor a little while, I was tempted to believe that I could finish my thesis early, and I worked my ass off. Welsh was impressed with my progress.\n\nThere was still plenty of time for Simran - we got together three times a week. But it was she who insisted that Thursday nights were sacrosanct.\n\n- \"You can't neglect your friends.\" she said.\n\nTo tell the truth, I didn't want to. Nate had crafted a story that gripped my imagination. I hadn't experienced the thrill of playing since Burnsie had first introduced me to the game. I was always the GM, the story-teller. It was so much fun to be a player - in a story crafted specifically for me.\n\nNate had pilfered elements of the Arthurian legend - but not the T.H. White 'Sword in the Stone' stuff. His world was raw, cruel, and unforgiving.\n\nAnd he had multiple surprises for me. In particular, in our fourth game, when Parvani sat in. She played the part of the young Prince we had rescued - who turned out to be a hermaphrodite Prince/Princess. With magical powers.\n\nMy character was just looking for a safe haven for himself and his remaining troopers. But the 'Prince' (Parvani) was seeking his mentor - a powerful wizard who might be able to protect him - and free me from the dangerous task of shepherding him.\n\nShe was an awesome player. I had to negotiate with Nate - the GM - but also with my supposed ally. I was beginning to wonder what Parvani's goals were - and whether they conflicted with mine.\n\nOn our sixth game, Coop joined in. He took over the part of Clovis, my lieutenant - the best fighter in my group (other than me). It was as if Coop had been eavesdropping on all of the previous games. He caught Clovis' personality perfectly, and played him better than I could have.\n\nWe fled to the Faerie Marches, on the contested border between humans and elves, pursued by multiple enemies.\n\n- \"Guys - this is amazing.\" I said. \"The story is ...\"\n\n- \"Fantastic.\" said Coop. \"We know - just deal with it.\"\n\n- \"We wanted to do something special for you,\" said Nate, \"after all of the great stories you crafted for us.\"\n\n- \"You deserve it.\" said Parvani.\n\nIt was a group effort, obviously - they were all experts at keeping secrets. I had no inkling that Par and Coop were even involved, until they showed up and started playing.\n\nThere was no question, though, that Nate was the chief architect. He had created the story, drawn the pictures, chosen the music, and drafted the others into playing their parts. I gave him a hug, after that game.\n\n- \"This is above and beyond, Nate.\" I told him.\n\n- \"Glad you're enjoying it.\" he said.\n\nBut my biggest surprise came on a Thursday night in December, when we gathered at my apartment on a Thursday night. Coop was already there, of course. But Nate and Parvani arrived with a dozen of my favourite beer ... and my sister ... and Simran.\n\n- \"Hi.\" she said.\n\nSimran wasn't here to watch - she was here to play. I was completely baffled.\n\n- \"You're playing?\"\n\n- \"She already has - twice.\" said Parvani, with a grin.\n\n- \"I ran your Omero and Tiluje scenario for Cherie, Coop, and Simran.\" said Nate.\n\n- \"It was a gas.\" said Coop.\n\n- \"She was really good.\" said Cherie.\n\nI turned my head to look at Simran. She smiled.\n\n- \"It was fun.\" she said. Then she leaned over and kissed me. \"My boyfriend is so clever.\" she whispered .\n\nTo my utter, complete amazement, Simran sat down with us, and took up her part - the elven Queen of the Faerie lands. I had to lead our little group into her territory, and then negotiate with her for temporary asylum - protection from the enemies pursuing us.\n\nThe price was high: we had to help her with her own enemies - Dark Elves and their minions. They were powerful magical beings, but vulnerable to iron. Simran and Parvani could counter some of their magic, while Coop and I brought the cold steel. Cherie played an imp, a annoying little master-trickster.\n\n- \"Type-casting.\" I suggested. She punched me in the arm.\n\nI was in a state of wonder, and of disbelief at the same time. Nate's story was better than anything I had ever created. But I found it hard to get over the fact that Simran was sitting with us, playing D&amp;D.\n\n- \"What?\" she asked, when I kept looking at her.\n\n- \"I just can't believe you're playing D&amp;D.\" I admitted.\n\n- \"It's like acting - but you get to make up your own lines.\" she said. \"And it's also a bit like writing a story, with everybody contributing their character and some of the dialogue. I didn't realize, from the way you described it, how much freedom of choice there is.\"\n\n\"And elves!\" She grinned at me.\n\n- \"I'm so glad you're enjoying it.\"\n\n- \"I just wanted to help - and to be a part of your story. But you're right - I am having fun.\"\n\n***\n\nYvonne Bennett-Smythe arrived for a Christmas visit. Dr. Welsh still seemed surprised, and a little flustered when he told me. Simran was sure that the two of them had - or were having a relationship - but I wasn't going to just come out and ask.\n\nHe invited Simran and me to a 'Christmas Cheer' - a drink or two, at his house, a couple of days before Christmas. There were about a dozen other people there, but they made us feel very welcome. We had a wonderful time with Yvonne.\n\n- \"Colin has to play host to his other guests,\" she said, \"but I'm under no such obligation. I don't know most of those people very well. In any case, I enjoy the two of you much more.\"\n\n- \"Ian was wondering, Yvonne,\" said Simran, \"if you were in a relationship with Dr. Welsh.\"\n\nI blushed.\n\n- \"Oh? Ian was wondering?\" Yvonne looked at my girlfriend. \"But you're not?\"\n\n- \"I'm fairly certain that you are.\" said Simran.\n\n- \"On and off for the last eleven years.\" said Bennett-Smythe. \"How did you know?\"\n\n- \"I saw you with your hand on his leg, at dinner, in London.\"\n\n- \"Ah - bit of a giveaway, that.\" said Yvonne, with a chuckle. \"Yes, I suppose we've been more 'on' than 'off' lately.\"\n\n- \"Eleven years?\" I said.\n\n- \"Well, we didn't set out to do it this way.\" she said. \"It was just going to be a few years, then two more. Next thing you know ...\"\n\n- \"It must have been ... difficult.\" I said.\n\n- \"You have no idea.\" said Bennett-Smythe. She glanced at Simran. \"Though maybe you can imagine it.\"\n\n\"It was very, very difficult, at first. Then we discovered that being together for long periods of time was enough to drive us round the bend. Nowadays, we're both so set in our ways, it's probably a good thing that we're apart.\"\n\nI suspected that she was giving us a highly edited version of their story, but I didn't press her for more details. We chatted a bit more, until Yvonne asked me if I was free for lunch on the 27th.\n\n- \"I'd love to go back to that Mexican restaurant of yours.\" she said. \"Colin took me, once, but I'd like to experience it with an expert.\"\n\nI looked to Simran. \"I think we can make it.\" I said.\n\n- \"Oh - no, Ian. I meant just you.\" said Yvonne. \"If Simran doesn't mind being parted from you for an hour or two.\"\n\n- \"I have no objection.\" said Simran.\n\n- \"Wonderful. Alright, then Ian - push off. Make yourself scarce. It's time for some girl talk, here.\" said Yvonne. \"Although you could be a dear and refill my wine glass for me.\"\n\n- \"Mine too, if you don't mind.\" said Simran.\n\nI found Dr. Welsh in the kitchen.\n\n- \"Eleven years?\" I said to him.\n\n***\n\nOn Christmas day, I had two minor epiphanies.\n\nSimran was a member of my family. Not 'like' one of the family - she was one of us. Hell, Dad and Jill liked her better than they did me. Cherie got into the habit of pinching me, and saying \"Don't screw this up\" - what a great vote of confidence that was.\n\nIt was eerily similar at Simran's house, with her family. They treated Nate and me like kings. It was comfortable, and warm ... and loving. Parvani had always been like a sister to me (with occasional lustful lapses, on my part). But we were back to complete trust, now - and I have to give D&amp;D part of the credit.\n\nNon-nerds may smirk, or even laugh. But you can't open up, and share your fantasies (the non-erotic ones, I mean), without leaving yourself completely vulnerable. Nate and Parvani, Coop and Cherie had all seen my dreams, my hopes, and some of my dearest wishes. We had shared some epic stories. and the process of creating them. They were family, too.\n\nSimran was now part of both of my families. Both families loved and respected her. And she, I think, had come to understand them - and me - a little better.\n\nThat was my first insight.\n\nThe second occurred when she finished unwrapping my present to her. The expression on her face - I don't have the words to describe it. Glee, like a child with candy ... delight, that I had chosen something she would like - and not just for a day, but for many days to come ... and she had never looked so beautiful. The look she gave me set my heart to beating triple-time.\n\nIf she could still have that effect on me, after a year and half together ...\n\n***\n\nBennett-Smythe wanted nachos, but she also had an urge to try the enchiladas.\n\n- \"You get the enchiladas.\" I said. \"I'll order the nachos, and you can have as many as you want.\"\n\n- \"Elegant solution.\" she said. \"I knew there was a reason I'd brought you along.\"\n\nYvonne had another definite reason for taking me to lunch. I waited for her to come out with it. She saw the expression on my face.\n\n\"Alright - yes, I do have an ulterior motive. Colin tells me that you're going to do your Doctorate. Where are you thinking of applying?\"\n\nI named a few Canadian universities that I was considering. \"Cornell, too. But that might be a bit of a reach.\"\n\n- \"I suspect that they would be glad to have you.\" she said.\n\n- \"Thank you.\" I said. \"But I'm not sure I could afford it, even if they did want me.\"\n\n- \"There's one more you could add to your list.\" said Yvonne.\n\nShe passed me a big brown envelope. I was a bit surprised, but her expression gave nothing away. I opened it, and found half a dozen sheets of paper, clipped together. I read the first page ...\n\nIt was an offer of admission - from Cambridge. England. My head snapped up, and I looked straight at her.\n\n- \"Professor Bennett-Smythe ...\" I began. \"I'm very grateful, but ... I'm not sure that I deserve this.\"\n\n- \"It's Yvonne, Ian. If only you knew how tired I am of waiting for people to finish saying my name. And you most certainly do deserve it.\"\n\n\"Do you remember when Colin asked your permission, to show the first draft of your thesis to a colleague? Well, now you know who that colleague was. And perhaps I should have asked your permission in turn, because I showed to a colleague of mine. He happens to be the Chair of Modern History at Cambridge.\"\n\n\"He agreed with me. Your thesis is first-class work. We both believe that you should pursue your studies much closer to the Public Record Office, since it seems likely that you'll be spending even more time there in future.\"\n\n\"Read the rest, will you?\" she said.\n\nI was blushing furiously, from her praise, but I did as she asked.\n\n***\n\nI wanted to tell Simran all about it that very evening, but when I phoned, Mrs. D. told me that she was out. I left a message that she should call me as soon as possible.\n\nLate the next afternoon, I found a note from Coop, telling me that Simran had called while I was out. It may seem incomprehensible to young people today, but back in the Dark Ages, it was entirely possible to play 'telephone tag'. Two people could be trying to reach each other, but with a little bad luck - they could repeatedly miss each other's calls.\n\nIt took me three maddening, frustrating days to get in touch with my girlfriend. On the positive side, that gave me time to think about what I would say to her. I took a long walk, in the snow, considering my options.\n\nI hadn't told her much over the phone. We needed to be face to face, for what I had to say. We were in my apartment. Coop had considerately made himself scarce, and I cracked open a bottle of wine.\n\n- \"I'm not sure where to begin.\" I told her. I just slid the envelope that Yvonne had given me across the coffee table.\n\nSimran glanced at me, trying to read my expression, before she pulled the sheets out. She read very quickly.\n\n- \"Oh my God ... Ian - oh my God!\" She looked up at me.\n\n- \"There's more.\" I said. \"Keep reading.\"\n\nSimran glanced at the second page, and the third. She raised her eyebrows at the fourth.\n\n- \"What does this all mean?\" she asked me.\n\n- \"It means that I've already been accepted at Cambridge.\" I said. \"As long as my thesis passes muster here - and it will. It also means that Yvonne has already arranged every fellowship and every scholarship that I would be eligible for.\"\n\n- \"How much are they worth?\" asked Simran. She knew, better than anybody, that I was far from wealthy - that without some kind of financial aid, I would never be able to leave my home town.\n\n- \"Six thousand. Pounds. Sterling. That's almost $12,000.\" I said.\n\nSimran came to sit beside me on our threadbare couch. \"That's fantastic.\" she said, as she wrapped her arms around me and kissed me on the cheek. Something about her body language gave it away.\n\n- \"You already knew.\" I said.\n\nSimran hung her head. \"Yvonne told me.\" she admitted. Then she looked up. \"But that doesn't mean that I'm not thrilled for you.\"\n\n- \"Thrilled?\" I said. \"Simran - I'm not going to Cambridge - unless you're going with me.\"\n\n- \"What are you saying?\" Simran couldn't meet my eye. \"Ian - you have to accept this offer.\"\n\nI shook my head.\n\n- \"No - I don't.\"\n\n- \"What?\"\n\n- \"I've had plenty of time to think it over, Sim. I'd rather go to a university closer to home, if there's a possibility that you would go with me. If you insisted, I'd skip the PhD entirely, and get a job mixing paint, or serving falafel.\"\n\n- \"I would never ask you to do that.\" she said, her lip quivering a bit.\n\n- \"What do you want me to do, Simran?\" I asked. \"I need to know.\"\n\nShe reached into her purse, and produced a legal folder. She passed it to me. I flipped it open, and read the first page.\n\nMy jaw dropped.\n\n- \"I know.\" she said. \"That was my reaction.\"\n\nYvonne Bennett-Smythe hadn't just arranged admission and scholarship money for me - she had got Simran a 3-year contract to work for the Cambridge University Press.\n\n- \"It's the oldest publishing house in the world. And the second largest university press, after Oxford.\" she said. \"They publish 50,000 titles a year, in 40 countries.\"\n\n- \"What's ... what's the salary?\"\n\n- \"Fourteen thousand. Pounds.\"\n\nThe pound was floating a bit, in the mid 1980s - it was between $1.50 and $2.00 Canadian. Those thoughts flitted through my head, in an instant.\n\n- \"Does that mean ...?\" I asked.\n\nSimran was smiling.\n\n- \"Yes. Yvonne is a big admirer of yours ... but for some reason - which I don't entirely understand - she likes me, too.\"\n\n- \"That's not what I meant.\" I said. \"Simran - if I went to Cambridge ... would you go with me?\"\n\n- \"Yes, Ian. I would.\"\n\nThe most beautiful, most desirable, most amazing woman in the world - as far as I was concerned - was willing to move with me. To live with me.\n\n- \"Simran - this isn't just for a year.\" I said. \"A PhD program could take me four or five years.\"\n\n- \"I know.\"\n\nMy mouth went dry.\n\n- \"Sim ... does that mean ... do you ... could you picture us together ... I mean, spending the rest of your life ... with me?\"\n\nEven as I said the words, I knew exactly what I was saying. Offering.\n\nAsking.\n\n\"I don't know exactly what you want. And I can't afford a ring, at the moment. But I know that I would happily spend the rest of my days with you - if you'll let me.\"\n\nSimran didn't let me talk any more. She leaned forward, and pulled me into a kiss.\n\nAnd what a kiss. When she finally released me, I could hear the sea, the waves rushing in, crashing against the shore. Simran blushed, and somehow got me back into my seat. There was a moment there, when she couldn't meet my eye.\n\n- \"You're just full of surprises, aren't you?\" she said.\n\n- \"I mean it, Sim. I want to be with you. No limitations, no conditions.\"\n\n- \"Thank you, Ian.\" She squeezed my hand. \"You have no idea how much that means to me.\"\n\nShe was pretty close to tears. \"How did you know?\" she asked.\n\n- \"How did I -?\" If she was asking why I hadn't proposed marriage ... I just had a feeling that the last thing Simran wanted was to be engaged again.\n\n- \"My incredibly smart boyfriend.\" she whispered.\n\n- \"Your idiotic boyfriend.\" I corrected. \"Who wants to be your life partner.\"\n\n- \"My life partner.\" she repeated, with a smile.\n\n*****\n\nTHE END"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "dating",
        "girlfriend",
        "age difference",
        "friends",
        "university",
        "dungeons and dragons",
        "romance",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/gaming-dandd-pt-11"
}