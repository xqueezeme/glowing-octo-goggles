{
    "title": "AnimeCon Harem Pt. 02",
    "pages": [
        "\"C'mon in,\" Brian said, shouldering the hotel room door open and swinging Stephanie's travel bag inside. An air conditioner rattled to life in the window beside the door as he flicked the lights on and revealed the small room's modest accommodations. \n\nA single bed took up most of the room, a bag of clothes and costumes strewn across its covers, and the seat of the easy chair beside the nightstand was occupied by a large cardboard packing box. Opposite the bed, Brian's things were an untidy sprawl atop the dresser, which doubled as the TV stand. The far side of the room was sectioned off by a minimal bathroom, leaving an alcove outside it for a mirror and sink. The television, an old tube TV paired with a clunky cable box, betrayed the age of the spartan furnishings. \n\nNot too impressive, and definitely not the hotel Chloe wanted, Brian remembered, suppressing a grimace. Last year, she'd been positively irate at this hotel's lack of modern amenities; there were hardly any outlets, there was no internet, there was neither a microwave nor a mini-fridge. Of course, with their sudden break-up, the simple room had suited him just fine, as it was affordable and just a short trek across the crosswalk from the convention center. Fuck, I wonder how long it'll be before every little thing stops reminding me of her in some way.\n\nWell, I definitely have some welcome distractions, he thought, turning to admire the two beauties who followed him into the room.\n\n\"Thank you for having us, really...\" Stephanie said, displaying an anxious but grateful smile. The sweet and terribly shy geek was still bedecked in the bright pinks and reds of her gijinka costume--long gloves, vinyl thigh-high boots, and a sleeveless sundress with an outrageously short skirt--it had been difficult for Brian not to steal glances at those slivers of exposed thigh. She bore more than passing resemblance to her creature from Monster Battlers, but with the panache of a sixties-era go-go dancer. A bobbing pair of costume rabbit ears rising from her pink-streaked blonde hair completed the outfit, and it was a strangely compelling look.\n\n\"Yeah, seriously, thanks,\" the dark-haired scene girl chimed in, tailing Stephanie into the room. Though she was dressed casually, Kelly simply radiated sex appeal. Slinky skinny jeans captured her appreciable curves, and the crossing strap of her purse had her black tank top stretched taut about the splendid contours of her breasts. Kelly wasn't ostensibly an anime fan or comic nerd, and instead seemed more like someone who normally looked down on geeks like them. Confidence shone in her eyes, a proud look that lent the fine quirk of her lips a very different impression than Stephanie's smile.\n\nThe girls were both gorgeous, but otherwise couldn't have been more different in appearance and demeanor--If Brian were to casually personify Stephanie as an innocent angel of conscience perched upon one shoulder, then Kelly would be the corrupting devil straddling the opposite shoulder.\n\n\"Here, lemme get all my junk outta the way,\" Brian said, shifting his scattered belongings off the dresser and into a neat pile beside the bed. \n\n\"I might, if it's okay, I'll take a shower?\" Stephanie asked.\n\n\"Of course, go ahead,\" Brian said, \"Guess you've probably been wanting to try and wash the pink out of your hair?\"\n\n\"...Y-yeah,\" Stephanie slowly nodded, a complicated expression crossing her face. \"That too.\"\n\n\"Yeah, what's up with her hair?\" Kelly asked Brian. \"Are you doin' something to her? Like at first there was just the one little streak, and then when I saw her again tonight it's like, all over. Hair doesn't spontaneously turn colors.\"\n\n\"It happened whenever we... uh, when we... kissed,\" Stephanie fussed, adjusting her glasses. \"Both times, I think?\"\n\n\"Well, lemme see you guys kiss, then,\" Kelly insisted. \"Let's see the magic.\"\n\n\"I-I didn't say they were magic,\" Stephanie sputtered, looking down and scuffing the toe of her boot against the other nervously. \"I mean, well, th-they are, but I didn't mean that I think that, uh, you see--\"\n\n\"Actually... may I?\" Brian interrupted, gently drawing Stephanie's pink rabbit-ear headband free of the girl's hair, \"I've been thinking these are the culprit. You were wearing them all day, right? Did you make them yourself?\"\n\n\"Uhm... oh! Yes, a little, it was uh, an Easter decoration I had, I glued them onto a better headband, and... the ears were white, I dyed them red for the costume...\" Realization seemed to dawn on Stephanie. \n\n\"What'd you use to dye them?\" he asked, offering the accessory back to her.\n\n\"Sharpie cores,\" Stephanie admitted in embarrassment. \"Red sharpie cores, put in, ah, soaked in rubbing alcohol. From a tutorial I found for dyeing synthetic fiber wigs... it must have come off into my hair? The guide did have all these warnings about st-staining things accidentally... gosh, I'm so stupid!\" \n\nShe frowned cutely as she rubbed the material of the fluffy costume ear between her thumb and forefinger, inspecting it closely. All the swathes of pink in her blonde hair began at the crown of her head right where the headband had rested, so it did seem plausible enough.\n\n\"Hey, s'okay,\" Brian said, \"Costume accidents happen all the time. If you meet my friend Emily on Sunday she'll tell you 'bout all her costume mishaps.\" A little bit of dye coming off in your hair is nothing compared to that body-paint fiasco, or last year with the band-aids that wouldn't stay on her nipples.\n\n\"So wait, the color in Steph's hair just... seeps out when she gets nervous and sweats, or something?\" Kelly asked, ineffectively hiding a smirk behind her hand.\n\n\"I'm going to go shower now,\" Stephanie blurted quickly, looking mortified. She turned, heaving her travel bag into the tiny bathroom, and pulled the door closed behind her.\n\n\"You really okay with that, Brian?\" Kelly asked, kicking off her skate-shoes and looking for a place to sit. \"She might fuck up the hotel towels with all that pink.\"\n\n\"If they bill me, they bill me,\" Brian shrugged, \"Couple years back my friend Emily did a Grimoire Saint cosplay, was this... all over textured gray body-paint with some little add-ons here and there that made her skin look like stone with cracks in it. If you'd seen the tub and shower curtains afterwards, you'd have thought she exploded.\"\n\n\"And they charged you extra?\" Kelly asked.\n\n\"Nah. Emily left housekeeping a twenty dollar tip on the sink with a slip of paper that just said, 'I'm so sorry'.\"\n\n\"That's rich,\" Kelly remarked. \"If I started writing those, my life would just be one unending string of apology notes. Someone could follow behind and make a book out of 'em. Probably be a bestseller, too.\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nThis is... really happening, Stephanie thought, releasing an unsteady breath. Somehow, situation had led to circumstance, and she'd wound up here. In Brian's hotel room. I can't calm down at all.\n\nHer heart was still racing, and jittery pink embers of energy spat and fizzled up and down her body. Out of reflex, she turned and searched the off-white tile walls for her reflection, before remembering with a wince that the sink and mirror were outside this tiny bathroom enclosure. She wouldn't have any moments of privacy to inspect her appearance, and it had been a long time since she'd felt this self-conscious. Nothing... nothing I can do about it now, she wearily decided, beginning to undress.\n\nPerching her shapely bottom awkwardly on the lip of the bathtub, Stephanie laboriously pulled her tall costume boots off; the first priority for any cosplayer on their feet all day. She released a satisfied sigh as those pink vinyl boots hit the floor, and tenderly probed her swollen feet with her fingers to discover twinges of both pain and relief.\n\nBrian's outside this door, Stephanie remembered, and her fingertips thoughtlessly traced their way up her tired legs towards her thighs. Brian is... right outside. That trembling pink flame inside her flared again, illuminating those amorous ideas she'd nearly entertained just a few hours ago.\n\nIs it... this simple? Can I really just...? Stephanie spread her legs and flipped up the edge of her sundress over her lap, exposing her gray-striped panties. Blushing furiously and exhaling, Stephanie slid her hand down there to cup herself. She felt warm, and seemed to naturally fit to the shape of herself through her panties, with a finger on either side and then her middle finger settled across that slightly puffy groove, barely perceptible through the fabric.\n\nWhat am I doing?! She stiffened, sitting up straight, and shook her head as if that could snuff out the spark of this idea... but despite her best efforts that tongue of flame persistently continued to creep along that length of fuse she'd discovered within herself, this awakening of curiosity.\n\nGuys are supposed to always think about sex whenever they see a naked girl, she mused as she tugged her sundress over her head and tossed it into a crumpled heap on the floor. She finished undressing and started the shower, stepping inside when the streaming water had warmed.\n\nBut is that really true, it seems so... unlikely? she thought, diligently working shampoo into her hair. She'd always thought of herself as being so dull and plain that the idea seemed far-fetched. Her chest seemed small and unremarkable, her skin too pale, she almost found it hard to believe that someone would consider her sexual.\n\nI'm not amazing like Kelly is. Frowning at the look of the shampoo suds sliding down her body, Stephanie lifted her foot to see the soapy water meandering towards the drain. Not a bit of that pink was actually coming out of her hair.\n\nBut... he did kiss me, Stephanie recalled, unable to suppress a smile. Hours and hours had passed since then, and she was still feeling giddy at that pleasant surprise. He had in that moment suddenly made her aware that she was already a part of something she hadn't even thought she qualified for.\n\nStephanie lathered soap distractedly, looking down at herself as the spraying water beat a staccato rhythm across her naked back. She'd bathed nearly every day of her life, but today that thoughtless, habitual process was thoroughly disrupted by the flickering flames rising to life within her.\n\nHe wouldn't tell us what he thought of my butt, she thought, pouting. Water trickling down every curve, her hands subconsciously reached behind her, gripping her plush bottom. But he thought something. He said he'd have to show me, was he really thinking of it in a... sexual--\n\n\"Ahh!\" Stephanie gave a small startled yelp of surprise as her rear touched the cold tile of the shower wall--she hadn't even realized she'd been arching her back. No, no, no. I'm not doing this right now. I'm... I'm just going to finish washing up. Going to change into my nightshirt. And then going to go out and see what the sleeping arrangements will be like, she decided. Her feelings, however, made it impossible to keep her mind from wandering.\n\nI never thought I was attractive or appealing, so I just wasn't, Stephanie realized. But now, if he thinks I am, well... I actually feel sexy. I feel alive when I'm with him, like I did back before... everything happened way back then.\n\nHe said if I wanted him to go down on me, all I had to do is ask... she remembered again. Although she was still half-heartedly washing with one hand, the other had dropped down between her legs to hover, right over her mound of venus. He was joking. Of course, a guy can't really go down on a girl. But still, does that mean that he can really... see me as his partner for that kind of thing? And was he really flirting with me today?! Would seeing me naked like this... make him want...\n\nHer entire body went still, hesitating for a moment of mute indecision as that pink inferno twisted and writhed within her, rising up and setting her last inhibitions ablaze.\n\n...To fuck me? Her poised finger pressed down, parting her blushing cleft and sliding inside of her with alarming ease. Oh. Oh? Ohhhh...! Before she could come to her senses she was already playing with herself, her middle finger searching insistently for the relief to this longing ache of desire roiling throughout her. She was hot inside, and pumping her finger in and out of her slick slit, it felt as though this erotic heat was capable of melting the very thoughts out of her head.\n\nPlease, Stephanie trembled, stifling the gasps that threatened to rise up out of her as her finger sought feverishly towards that fleeting glimmer of release. I'll be yours. She wanted to belong to him. To be his lover, his plaything; his to hold, to undress, to do with as he pleased. She wanted to be enveloped in his embrace, wanted him to grab generous handfuls of her butt, to physically dominate every inch of her flesh. She wanted him to pin her down, wanted their bodies entwined together in the throes of naked passion, kissing endlessly. She even found she wanted his... thing inside of her, pulsing with strange, sexual motion as she guessed a guy's thing might.\n\nI can't...? Stephanie sighed, feeling a pang of disappointment. She leaned against the tile wall, letting her arm go slack for a moment. It felt good, it felt amazing, but she just couldn't get that elusive new feeling inside of her to keep building towards... resolution. The sensations were overwhelming, and just as she felt like she was closing in on their source, her fingertip was already clumsily going off-track. \n\nSenseless to the water streaming across her quivering body, she frigged herself with an increasingly frantic, desperate intensity. I can't... do it after all? Or maybe I just can't do it... by myself?\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"So what's with the box? Buy somethin' big at the con?\" Kelly asked, sliding into the easy chair situated beside the bed and settling the packing box into her lap. She tilted the box up on its end so that she could read the invoice taped onto the top. \"Calamity Queen set by Noblesse Oblique? What is this?\"\n\nAh... that thing. It was the gothic lolita outfit he'd bought for Chloe months ago and secreted away from her, that last tangible missed opportunity to reconcile their failing relationship.\n\n\"It's... uh...\" He said, embarrassed. \"It's like a costume... dress... thing. Bought it months ago, it was gonna be an AnimeCon surprise for my ex, but...\"\n\n\"Right, that break-up, gotcha,\" she said, glancing suspiciously from the box to him. \"Whatcha doin' with it here, though? Were you gonna try it on yourself or somethin'? I mean, why bring it to the con if it's a dress?\"\n\n\"I don't know,\" he replied. \"I guess I thought I could sell it or trade it or... something, I've been keeping an eye out for girls wearing gothic lolita stuff. Even if I sell at a loss, I can still at least get three or four hundred bucks back and be rid of the thing without feeling like it was a total waste.\"\n\n\"Three or four hundred bucks?\" Kelly echoed, eyes widening, and she hefted the box in her hands. \"Christ, how much did you spend on it?\"\n\n\"Ugh... you don't wanna know. Noblesse Oblique is considered burando, or, uh, 'brand' over there in Japan. It's a designer label sorta thing and not many get imported, so they're pretty rare.\"\n\n\"Burando, that's funny,\" Kelly said. \"You said it's gothic? Like a goth... fantasy dress sorta thing? What's it look like? I used to be all gothic back in the day.\"\n\n\"Uh... how to even describe it...\" Brian laughed, rubbing his cheek. \"Kinda like some cross between a french maid outfit and a victorian dress, with a whole lot of... fancy little embellishments.\"\n\n\"Wouldn't it be easiest to sell that kind of thing online?\" Kelly said, placing the box down reverently beside the chair. \n\n\"I wish,\" Brian griped. \"Finding a buyer involves digging into all these little niche fashion subculture forums and knowing all about the burandos. When I bought it, it was direct from the retailer overseas. I just pointed my credit card towards these moon runes in her wish-list and that was that.\"\n\n\"Moon runes?\" Kelly asked, arching an eyebrow.\n\nKind of weird describing things to a non-anime fan, even the explanations need explanations, Brian thought. \"It's kinda... fan slang for when you run into a bunch of Japanese characters, all the hiragana and kanji and whatnot. If you don't know how to read them, they might as well be gibberish; moon-runes.\"\n\n\"That's funny,\" Kelly said, and he couldn't tell if her interest was feigned or not. \"I figured you, uh... fans of this kind of stuff were into that though, like, learning Japanese and translating it and all.\"\n\n\"Some are, I guess,\" Brian admitted. \"But that's deeper down the rabbit hole than most of us go.\" He resisted the temptation to tell her that their 'rabbit', Stephanie, was good with Kanji. Kelly probably wouldn't care.\n\n\"That's cool,\" Kelly said, and her vague reply left Brian wondering. Is she being dismissive, or trying to be polite? I can't get a read on her at all...\n\nThe sudden sounds of the Fantasy Wars victory theme began insistently playing from within the small pile of Brian's things beside the bed, and Kelly quirked an eyebrow at him.\n\n\"Sorry, I'd better get that,\" Brian said as he fished through the stack to retrieve his phone and accept the call. He felt both relieved and a little guilty to see that it was Emily rather than Chloe. Wouldn't have known what to say to her.\n\n\"Heeeey,\" Emily's voice warbled through his phone, \"I just got off work. How've you been holdin' up, guy? How's the con been treatin' you?\"\n\n\"Hey Emily,\" he replied, genuinely happy to hear from her. \"Pretty good so far, actually.\" How do I even begin? How can I tell her I somehow went from alone and pretty miserable to suddenly sharing a room with some girls I just met?\n\n\"Yeah? For real?\" She replied with enthusiasm, \"Well, 'atta boy! I was worried, you know? And I keep thinkin' 'bout you. I also, ummm, called to see if maybe I could ask for a h-uuuuuge favor... if that's okay?\"\n\n\"Whatcha need?\" he asked.\n\n\"Okay. So. You know how I couldn't make it to the con 'till Sunday 'cause of work? Well! Karen hadta switch shifts with me, so now I'm free to hit the con soon as Rebecca's off work tomorrow. So we were wondering... if maybe we could room with you Saturday night? We can pay our share,\" she hastily added.\n\n\"Ah, geez lady, I dunno,\" Brian teased. \"It's pretty crowded with me an' all these girls here already.\"\n\n\"Puhleeeeese,\" Emily called in her sickeningly-sweet little girl impression that he knew all too well, easily overlooking his comment about having girls. Of course she'd never think I was serious.\n\n\"I'll give you a whole dollar! I'm small and don't take up space at all! I'll sleep under your pillow and you won't even know I'm there! Rebecca will stand watch with her sword for the room all night and kill all of the enemies!\"\n\n\"Well hmm, if it's all of the enemies...\" he said, pausing. For a moment he considered warning her that he hadn't been joking and that there really wasn't much space left in the room now, but ended up holding his tongue. Honestly, I kinda want to see the look on her face when she realizes that I actually do have girls staying with me, Brian thought. And I'll play it off like it's no big deal, of course. The crowded little room might inconvenience them a bit, but it's not like he was going to accept their money anyways.",
        "\"So we can stay with you?\" Emily asked, sounding adorably hopeful.\n\n\"'Course you can,\" Brian said. \"It'll be just like the old days.\"\n\n\"Well not just like the old days.\" Emily declared. \"This time, it's gonna be even better.\"\n\n\"You might be right this time,\" Brian said, chuckling.\n\n\"I'm always right. But this time, Brian, listen, there's... well, I...\"\n\n\"Hmm?\"\n\n\"Uh, it's nothin', it's nothin'. Thanks for lettin' us stay room with you tomorrow, really. I gotta... I gotta go. See ya tomorrow, Brian.\"\n\n\"Hey wait, Emmie?\"\n\n\"Yeah?\"\n\n\"Have you seen Chloe at all?\"\n\nThere was a prolonged silence on the other end of the line, and he had that unpleasant gut feeling he used to get around Chloe, that feeling when he realized too late that he'd said just the wrong thing. For some reason he even imagined a look of distaste and disapproval souring Emily's normally perky features.\n\n\"She... uh, yeah, I saw her,\" Emily reluctantly replied. \"She's been pissy.\"\n\n\"Did she say something?\"\n\n\"She's always saying things, she won't fucking let up,\" Emily hissed. \"I've about had it. Like, someone's gonna find her accidentally fallen down an elevator shaft somewhere. Onto some bullets. If she says anything about you to me again... look, I can't be responsible for what happens, 'kay?\" \n\n\"That bad, huh?\"\n\n\"...Yeah,\" Emily huffed. \"That bad.\"\n\n\"That's... well, that's normal,\" Brian said with difficulty, frowning. \"After a relationship, for her to feel that way, you know.\"\n\nThere was silence on the other end of the line for a while.\n\n\"Brian, don't fucking make excuses for her anymore.\" Emily finally said, her voice quiet and a little cold. \"I've really gotta go. Talk to ya tomorrow. And thanks again. Later, guy.\"\n\n\"Hey wai--\" he began, but she'd already ended the call. He stood there silently for a few seconds with the phone to his ear. She's always taken my side with things, Brian thought, showing a faint smile. Wonder if she'd feel the same way if she knew what a crush I had on her in high school. Would we have still been friends like this?\n\n\"Someone checkin' in on you, huh?\" Kelly asked, sounding amused.\n\n\"Nothin' like that,\" Brian replied, tossing his phone back into his things. \"'Nother friend of mine, Emily, she and our friend Rebecca need a place to stay for the con tomorrow.\"\n\n\"Will you need us to find somewhere else to crash tomorrow?\" Kelly asked.\n\n\"All of us'll fit in here just fine,\" Brian assured her. \"Our first couple times here at AnimeCon, we had seven of us packed in a room just a little bigger than this. S'part of the whole anime convention experience.\"\n\n\"So... okay, on that note, now I've gotta ask,\" Kelly said, \"What's up 'tween you and Stephanie? I mean, I know you mentioned earlier today that you're recently single, but are the two of you like a thing, or gonna be a thing?\"\n\n\"What do you mean?\" Brian asked innocently, and Kelly shot him a sardonic are you fucking kidding me look.\n\n\"Okay, okay... I feel like we could be a thing,\" Brian admitted. \"I think we're both interested, but... well, we just met today, I don't wanna rush anything, we're definitely not ready for that.\"\n\n\"Well, what if she was ready?\" Kelly said. \"Could you be ready, like, what would it take?\"\n\n\"What's it matter? I mean, why? Did she say something?\" Brian asked, curious.\n\n\"We talked for a while. She's into you, but like, she actually wasn't even gonna call you about being stranded and roomless. She was all against it... until I mentioned that it could be like, an opportunity, and that really flipped her gears or something. It's definitely like she's wantin' you to take a shot.\"\n\n\"Ah... opportunity. I did say she was my opportunity. That's from stuff we were talking about earlier today,\" Brian mused, thinking back. \"You ever hear the phrase, 'Luck is when preparation meets opportunity?' \"\n\n\"Nope,\" Kelly shook her head.\n\n\"Well, I was saying that rather than chalking things up to good fortune, I've got to appreciate the people who... helped my circumstances. Emily, that girl I was just on the phone with, she got me back on my feet, prepared me to come have fun at the con after my breakup. And meeting Stephanie really gave me this opportunity to... well, not be as miserable as I thought I would, I guess,\" Brian shrugged.\n\n\"Okay. But what are you actually gonna do about it? Are you gonna take advantage of the opportunity?\" Kelly smirked. \"We called you because she obviously wants there to be like, a chance for something to happen. Isn't it just a missed opportunity if you don't make a move, then? Guys are supposed to be like, proactive, take initiative and make the first moves, you know?\"\n\n\"I can understand why she'd be enthusiastic,\" Brian said uneasily. \"But I'm getting the impression that, in a lot of ways, this is her first... kind of this experience. So, I don't want to push things too fast.\"\n\n\"Fuck that. You like her, right? Push her into things, push her into everything. She's already twenty-two for Christsakes, and she hasn't even... she hasn't, uh...\" Kelly quirked her lip as if realizing she might've let slip too much. \"Listen, you kissed her today, right?\"\n\n\"Yeah,\" Brian admitted sheepishly. \"But it was, uh, I realize I shouldn't have, I didn't plan it out or anything. It was outta the blue, kinda 'cause she dared me to. Was one of those moments where the vibe is right, and it seems like she's sending cues, and it just... seems like the right thing to do, you know?\"\n\n\"Why're you getting all defensive about kissing her?\" Kelly snorted. \"Kissing a girl you just met's kind of... well, badass?\"\n\n\"Just something I'm readjusting to, I guess,\" Brian explained with a chuckle. \"You see, my ex, she was always stressing that acting without explicit consent was always a form of... well, a part of rape culture. So all day I've been feeling kinda guilty for kissing Stephanie without... asking for her permission or like, really confirming that it was gonna be okay with her. I mean, sure, it felt like she was flirting with me, but that doesn't--\"\n\n\"That's retarded,\" Kelly said, rolling her eyes. \"You don't have to ask for permission for every little thing and make sure it's okay, that's your ex bein' a control freak. Guys are expected to read the mood, take charge, and know exactly what to do. That's masculine. That's what's sexy.\"\n\n\"Chloe, uh, my ex would definitely disagree with that,\" Brian said with a bitter smile.\n\n\"And look where it got her,\" Kelly countered with a dismissive laugh. \"She's gone, she's outta your life. Doesn't matter what she thought, what do you actually think?\"\n\n\"About Stephanie? I'm gonna... well, I want to take things slow, not take things further before she's really ready. I'm a mess right now anyways.\"\n\n\"She's not gonna be gettin' any readier than she is,\" Kelly grumbled. \"And she shouldn't be! I've always hated that whole mentality.\"\n\n\"What mentality?\" Brian asked.\n\n\"Thinkin' a girl needs to be ready for things so she can safely experience them. Trying to ever so delicately ease her into things as if life and love is just this awful, dreadfully traumatizing thing. Take off the kiddie-gloves, for fuck's sake. You're coddling her, you're watering down the experience, and worst of all, you're holding back. That's dishonest.\"\n\n\"Being careful with things isn't dishonest,\" Brian said in exasperation.\n\n\"Here, I've got a weeb way to put it for ya,\" Kelly said. \"My mom was a registered nurse, and she told me about this stuff in Japan. Didja know over there they're real crazy 'bout hand sanitizer and cleanliness, and like, wearing those medical-looking face-masks that block germs in public when colds are going around?\"\n\n\"That's called courtesy, it's this weird cultural thing over there.\"\n\n\"Funny. But yeah, when they do get colds, they don't just shrug it off like we do. They're actually like, bed-ridden and near death and shit, because they're so focused with preventing germs everywhere that their immune systems have never been challenged, and like, toughened up. So when they do ineva... uh... inevibly? Is that right?\"\n\n\"Inevitably?\"\n\n\"That's it, when they do inevitably catch a cold, their bodies aren't equipped to deal with it. Do you get what I'm saying here? If you shelter a girl from too much, if all you do is 'play it safe' and take it slow with her, your relationship ends up weak.\"\n\n\"That's... certainly one way to look at things. But it's not just her, either. I just got out of a nasty relationship, and I'm not gonna press my baggage and problems from all of that onto Stephanie,\" Brian argued. \"That wouldn't be remotely fair.\"\n\n\"Fuck fair,\" Kelly said. \"That's you deciding things all... one-sidedly. What if we--uh, what if she wants to help? What're you really gonna accomplish by keeping a distance up when she wants to get closer?\"\n\n\"I don't get it,\" Brian chuckled, running his hands through his hair. \"Why're you pushing this so much, like, what's your angle?\"\n\n\"You gave me this,\" Kelly dangled her convention badge from its lanyard, and then used it to gesture to the room around her. \"And you set me up with all of this. I'm just tryin' to earn my keep here, alright? You look out for me, I'm gonna look out for you. So let me look out for you!\"\n\n\"All of that was no-strings-attached. I don't want you thinking you have some obligation to--\"\n\n\"Aren't we friends though? I mean, just what am I to you?\" Kelly asked, cutting him off.\n\n\"You can't pull the friend card on day one,\" Brian pointed out. \"That's like asking for your vacation day during job orientation.\"\n\n\"...Okay, then. Maybe I've been goin' about all of this the wrong way, if you don't really think of me as a friend yet...\" Kelly mused, a sly smile slipping across her features. \n\n\"That's not what I said,\" Brian said.\n\n\"Steph's a sweet girl, and I do like her. But from what you're saying, maybe she's not really what you need right now? You did just get out of a long relationship, and Stephanie... she doesn't really even know the ropes yet. If you're not comfortable with the situation, like, taking initiative and introducing her to your... needs, you're headed right back into another long, messy slog without any emotional... relief.\"\n\n\"Relief? My needs? That's the last thing anyone should be worried about right now,\" Brian laughed.\n\n\"That's naive,\" Kelly chided, her voice dropping to almost a whisper. \"Look, I'm no stranger to rough break-ups. In a serious relationship, you invest all these big pieces of yourself. And, when it all ends... well, s'not like you get your change back. You're gonna have all these empty aches inside of you that'll keep reminding you of her, and they're not gonna really heal 'til you can forget.\"\n\n\"What can heal you is... affection. Intimate affection. Being shown physically that someone else is attracted, cares for you, accepts you. Wants you, wants to put in effort for you. Minds are complicated, and it's easy to doubt words, but with the physical... well, bodies are honest. Besides, sometimes you just need to get laid, it's healthy. I know I definitely need some action this weekend,\" Kelly said, flicking her brandy-brown eyes back to him meaningfully.\n\n\"Yeah? Well, I wish you the best of luck with that,\" Brian said, grinning. Is she baiting me on behalf of Stephanie? Or does she just want to mess around with my head? She seemed fairly sincere earlier, too... What's going on?\n\n\"I don't need luck,\" Kelly said with a confident laugh. \"What'd you say about luck before? Luck is when... effort begets opportunity?\"\n\nClose enough. You have the idea of it, what was important, Brian thought, remembering Stephanie's words. For a moment, his head whirled as these ideas and coincidences seemed to align themselves together. If Stephanie represents my opportunity, maybe she's been Kelly's opportunity, too? I'd have never run into Kelly, or given Kelly my spare pass if not for Steph, and if she hadn't called me tonight from Stephanie's phone, I'd never have invited them to stay with me. Both times it was--\n\n\"I make my own luck,\" Kelly declared, a finger toying with her tank top at the crook of her cleavage and teasing it lower. \"Maybe, do you wanna... fool around?\"\n\nThe tipped shapes of her nipples distended the shifting fabric as Kelly leisurely inched the neckline of her garment down, revealing more and more of her tantalizing skin. In the span of a slow breath, she'd tugged that hem nearly to her navel, her lovely breasts nearly spilling free... when the hush of the spraying shower water inside the bathroom cut off, followed by the sound of the shower curtain being drawn open.\n\nIn unison, Kelly and Brian exchanged guilty looks followed by laughter. Coughing nervously, she released the fabric and let her neckline return to position with a distracting jiggle. This girl's absolutely dangerous, I almost froze up and lost it there...\n\n\"Meaningless sex wouldn't get anyone anywhere,\" Brian said, a bitter smile crossing his face. \"It's always a terrible idea.\"\n\n\"That's small-minded,\" Kelly said, scowling playfully. \"Just because it's not part of some deep, committed relationship doesn't automagically make sex meaningless. A meaning can be something as simple as, like, 'I don't wanna be alone with my thoughts tonight,' or 'Please help me forget him.' Or her, I guess, in your case. And a lot of sex in relationships is meaningless; you just end up fuckin' outta convenience, without any real reason or significance.\"\n\n\"You know what I like about you, Kelly?\" Brian asked, looking thoughtful.\n\n\"What's not to like, I'm pretty fuckin' amazing?\" A cocky, genuine smile broke the surface of her cool facade, and Brian felt himself smiling in return.\n\n\"I like that you're this total opposite side of the spectrum from my ex, this completely other perspective,\" Brian chuckled. \"It's refreshing. I mean, neither of you are right at all. You're both pointlessly persistent and take your ideologies to these weird extremes, but still. It's nice.\"\n\n\"That's rude,\" Kelly scoffed. \"I've been being serious with you.\"\n\n\"Have you?\" Brian wondered. \"It's kinda weird that you're pressing your point so much, like, why, why're you so adamant about it?\"\n\n\"I'm here lookin' out for you,\" Kelly insisted, pouting. \"And you're here being a stubborn jackass. You're really not gonna make a move on Stephanie, then?\"\n\n\"Tonight? Of course not,\" Brian answered.\n\n\"Well... we'll see about that, won't we?\" Kelly remarked with a mysterious smile.\n\nThe bathroom door opened, releasing a dramatic whirl of steam as Stephanie stepped out after her shower. She wore simple blue pajama bottoms, and an oversized T-shirt featuring a faded soft-drink logo hung loosely on her petite frame. Her skin was flushed from the heat of the water, her pink and blonde shoulder-length hair fluffy from being dried. It was an appealing look, but Brian had trouble putting his finger on just exactly why. This isn't the Stephanie everyone gets to see, this is her out of costume, out of normal clothes even... this is her when she wants to relax and be comfy, he guessed. It was an intimate look, and she was cute as hell.\n\nChloe had always insisted on donning a bathrobe and pulling her damp hair up into a towel-wrapped bundle on her head after showers, which to Brian somehow felt stuffy and prim. Fuck. Stop remembering her.\n\nStephanie turned away from the mirror, paused when she realized his attention was on her, and offered a nervous smile that immediately eclipsed errant memories of his ex-girlfriend. \"It, uh... I don't think it came out at all. Still very pink, uh, in the same places.\" Oh, right. Her hair.\n\n\"Here, lemme take a look,\" Kelly offered, withdrawing a brush from her bag and directing Stephanie in front of her easy chair. \"You showering too, Brian?\"\n\n\"Nah,\" Brian replied. \"I'll wait and take one tomorrow, after my morning run.\"\n\n\"Ew, run? Are you one of those weird morning people?\" Kelly asked as she stroked carefully through the tufts of Stephanie's mottled hair.\n\n\"Something like that,\" he replied. \"The loop I do in the mornings back home gets old, so the change of scenery'll be nice.\"\n\n\"That's... cool, I guess. So you run. You're a geek and a runner?\"\n\n\"Yeah. Wakes me up, clears my head and gets me going, you know? Plus, I don't want to be this morbidly obese for the rest of my life, so I've gotta do something, you know?\" Brian joked.\n\n\"You're not fat at all,\" Stephanie predictably protested. \"You're perf-, uh, you're just, ah, just fine the way you are.\"\n\n\"Well, hey, it's late. You guys feel free to take the bed,\" Brian chuckled, \"I've got the floor over here.\"\n\n\"What?\" Kelly asked, giving him an incredulous look as she gently pulled the brush through Stephanie's hair. \"Uh, no? You're not sleeping on the floor 'cause of us, that's stupid.\"\n\n\"I'm fine, don't worry about it,\" Brian said. He'd slept alone on the floor a fair amount over the course of his relationship with Chloe. After all, the couch in their shared apartment had been slightly too short for him to sleep comfortably on.\n\n\"You, uh, can't sleep on the floor,\" Stephanie protested, shooting Kelly a desperate glance for help. \"It's you, ah, it's your room, you let us stay, so you can't, I mean, if anything, we should sleep on the floor.\"\n\n\"You're my guests, what kinda hospitality would that be?\" Brian asked, putting on his charming grin. \"And more importantly, you're girls. There's no way I'm letting delicate and lovely creatures such as yourselves sleep on the floor like common beasts.\" Chloe woulda murdered me for saying something flippant and sexist like that, even though she probably would've agreed with me.\n\n\"You're not sleeping on the floor,\" Kelly insisted.\n\n\"Hey now,\" Brian said. \"It's my room, since when do either of you get a say in where I sleep? It's not a big deal.\"\n\n\"Since we actually care, and any of us sleeping on the floor is dumb? We'll all fit on the bed together if we're cozy,\" Kelly argued. She tossed her brush back into her purse and carefully smoothed Stephanie's hair down the nape of the shy girl's neck with her hands.\n\n\"Are we cozy? Sleeping in the same bed when we've all just met is kinda weird, isn't it?\" Brian pointed out. \"I'd be pretty self-conscious in bed next to you girls, you know? I mean, I can keep my hands to myself, but that doesn't mean I'd sleep well.\"\n\n\"Who asked you to keep your hands to yourself?\" Kelly retorted, grinning. \"Right, Stephanie?\"\n\n\"Uhm, wh-what?\"\n\n\"See? She's uncomfortable,\" Brian pointed out.\n\n\"We're, uh, well I'm fine with sleeping anywhere, really,\" Stephanie interjected weakly. \"I just, um, I don't want you to have to sleep on the floor because of me. I'll feel bad. Please.\"\n\n\"Ugh. Look, just drop the stubborn gentleman act,\" Kelly groaned. \"You're a guy, and you're actually gonna refuse to climb into bed with us?\"\n\n\"Now that's sexist,\" Brian countered playfully, pulling back the bedspread. \"You guys want the sheets, or the comforter? Take your pick.\"\n\n\"W-we could vote,\" Stephanie suggested. \"That would, be, ah, be fair?\"\n\n\"It's my room, how is voting fair?\" Brian asked.\n\n\"How 'bout we compromise here?\" Kelly proposed. \"We can have a little wager, or like... a game or something, and the winner gets to decide.\"\n\n\"Like what?\"\n\n\"Oh, I dunno... why don't we play truth or dare? It's fun, plus it'll help us get to know each other a little better. We're all in this room together now, we don't gotta be strangers.\"",
        "\"Truth or dare?\" Stephanie echoed, as the trio seemed to pause to consider for a moment. \"I've, ah, I've never played truth or dare...\"\n\n\"Gee, really? What a surprise,\" Kelly snorted. \"Well, with me and Brian here it's like, a perfect time for you to have your first game.\"\n\n\"I dunno, truth or dare would be even less fair.\" Brian said, looking conflicted. \"It's not supposed to be competitive in that way. You can just... dare something really out there and obnoxious so that you can win. 'Bang on the door of another hotel room,' or 'strip naked,' or 'lick your phone battery.' \"\n\n\"Hey, not all of those are that bad,\" Kelly defended playfully.\n\n\"All of those are, in fact, bad,\" Stephanie refuted, turning pale. \"W-we could vote on the dares? If it's--\"\n\n\"Yeah okay, li'l miss democracy,\" Kelly rolled her eyes. \"Voting'll just fix everything in your book, huh? Don't go trying to mediate for us if you don't even have your own opinion to stand by, it doesn't--\"\n\n\"Don't say that to her,\" Brian admonished. \"Go on, Steph.\"\n\n\"N-no, it's just, ah, well, with three of us there can be no ties in a vote. If a dare between two players is too unfai--, uh, too unreasonable, the third player can be impartial, or at least, can be the deciding vote to reject or allow the dare.\"\n\n\"That makes sense,\" Brian said, nodding. \"I guess we could do that...\"\n\n\"Okay, we can definitely do that,\" Kelly agreed, brightening. \"I've got this app on my phone that gives random truth or dares. There's even some sexy ones mixed in, but I mean, you could get anything, so it's fair that way. How 'bout it? Steph and I both wanna play, you're not gonna sulk off by yourself in the corner now, are ya?\"\n\n\"Well...\" he glanced at the clock on the nightstand thoughtfully. It was just after eleven o'clock. Hell, why not? \"Alright, fine, I'll play 'til around... midnight or so. If no one's won by then, I'm passing out over there on the floor. But on one condition.\"\n\n\"What's the condition?\" Kelly pouted.\n\n\"We don't use some random question app,\" Brian said. \"Truth or dare's a personal game... kinda like a psychological battle. You have to be able to read your opponent, know what you can convince them to do or reveal, and also what pushes too far. You've gotta find these perfect questions, and then have the guts to ask them, 'cause what you ask and dare also reveals a lot about you, you're putting your desires out there in the open.\"\n\nIn actuality, Brian had played frequently with his friends from high school. They had pitted the authority of peer pressure against each other to test their individual inhibitions and tolerance for social humiliation. They learned a lot about each other and even more about themselves through these games; Brian found himself on the conservative side, less willing to put other players in embarrassing situations. Emily, on the other hand, had discovered within herself an enormous capacity for dares, but found herself absolutely terrified by truth questions.\n\n\"You've played before, I see,\" Kelly remarked, returning her phone to the charger. \"Guess that settles that. A lot of the random questions were lame anyways. Well then, we all ready to play? Do we all know the stakes?\"\n\n\"I'm ready,\" Brian answered. \"If I win, you girls are sleeping on the bed, and I'll take the floor.\"\n\n\"Sounds more like a loss to me,\" Kelly said, smirking. \"If I win, we'll all squeeze into bed together, in a big sexy tangle. Steph?\"\n\n\"Uhm,\" Stephanie started, looking apprehensive. \"Th-that is, both of us on the floor, and Brian on the bed. He shouldn't have to feel uncomfortable sleeping b-beside--ah, because of us. Since it's his room, that's was, uh, that's what's fair.\"\n\n\"Right, 'fair', huh. So at the very least I just gotta make sure you don't win, 'cause that puts me on the floor,\" Kelly observed dryly, standing so that she could turn the chair to face the bed. \"Okay, let's go then, we've only got an hour 'till midnight. Clockwise okay? Sit up on the bed with Brian, Stephanie. Who's goin' first?\"\n\n\"Well, truth or dare?\" Brian asked suddenly, regarding Kelly with a grim smile.\n\n\"Dare,\" Kelly shot back, raising her chin defiantly.\n\n\"I dare you... to remove... one article of clothing,\" he said dramatically.\n\n\"Hah!\" Kelly laughed, amusement evident in her voice. She abruptly yanked one of her short socks off and pitched it against Brian's chest.\n\n\"Just like you said, the questions reveal everything 'bout the asker,\" Kelly said, her voice dropping to a sultry whisper. She proudly put her now bare foot up between his legs on the edge of the bed where he was sitting, and wriggled her toes a tantalizing inch away from his groin. \"You want my clothes off. You want to see me naked. Some psychological battle this is, I've got you all figured out right from turn one.\"\n\n\"If I wanted to see you naked, then I would've just dared you to take everything off,\" Brian countered, rolling his eyes. \"It was a probing question, I was even more interested in seeing what you'd do when given the choice. You try to seem all wild and daring, but when it came down to it, you played it safe and took off a sock.\"\n\n\"Oh-ho? Or maybe you really just didn't have the guts to ask me to totally strip. Guess we'll see how brave you really are when your turn comes around, though,\" Kelly declared, fearlessly nestling her bare foot deeper into his lap before turning towards Stephanie. \"Truth or dare, little girl!\"\n\n\"Uh!\" Stephanie breathed, tensing up. \"Um, uh, Truth? T-truth?\"\n\n\"Playing it safe?\" Kelly frowned. \"This really is harder without an app givin' you the questions, huh?\" She seemed caught off guard, and narrowed her eyes as she tried to decide on the best question to pose the shy cutie. She tapped her toes against Brian's thigh, looking distracted. \n\n\"Well, don't take forever, either,\" Brian said, shifting himself uneasily back out from beneath her foot. \"Just ask whatever.\"\n\nShe took a long moment, impatiently working her toes against Brian's pant leg and furrowing her brow in thought before she finally lit up, a devious smile spreading across her features.\n\n\"Okay, I've got it! Would you ever want to make out with a girl, or are you like, completely dead-set against the idea?\" Kelly asked, giving the other girl a coy smile.\n\nGee, wonder what her dare would've been? Brian thought.\n\n\"Uhh, that is, uhm,\" Stephanie managed, taken aback by the question. \"I've never, I never thought about--\"\n\n\"Well, now I'm asking,\" Kelly insisted, arching an eyebrow. \"So you've gotta think it through and answer.\"\n\n\"I don't think I'm completely against the idea,\" Stephanie answered hesitantly, flicking her eyes from Brian to Kelly. \"But I wouldn't say th--\"\n\n\"All we needed to know,\" Kelly interrupted, her voice cool and unreadable. She wet her lip with her tongue and rubbed her lips against each other, smiling at the girl. \"Your turn to ask Brian, then.\"\n\nMaybe she really is into Stephanie. It's hard to tell if there's actual attraction or if Kelly just flirts with everyone.\n\n\"Okay. Truth or dare?\" Stephanie asked Brian, a little more enthusiasm evident in her voice.\n\n\"Dare,\" he said, not having to think about it too much. Since Stephanie was so shy, he trusted she wasn't as likely to go overboard in whatever she asked him to do.\n\n\"You, um, one piece, a-a piece of clothing. You have to remove one piece of clothing. I mean, I dare you to,\" she said, an expectant grin flashing briefly across her face. \"Like you had Kelly do.\"\n\n\"Not you too,\" Kelly complained, letting her head fall back against the top of the easy chair in exasperation. \"You guys can go a li'l bit bigger with the dares, you know? You don't gotta stop at one piece of clothing. Dare him to motorboat you, or suckle your toes... or have him whip his dick out and jack it for us. Whatever you're into. You can ask for anything, you know?\"\n\n\"N-no,\" Stephanie shaking her head as her face flushed red. \"Just, ah, just one piece of clothing right now, thank you.\"\n\n\"The shirt it is, then. You've got the right idea, Steph,\" Brian said, shrugging free of the leather shoulder holster he'd been wearing. \"Kelly's that impatient kinda girl, who'll gamble too big and end up losing out. Emily used to be the same way.\"\n\n\"The hell's that supposed to mean?\" Kelly exclaimed in mock indignation. \"You're only losing out if you're not getting what you want out of the game. I can dare as big as I want.\"\n\n\"No, you can't,\" Brian smiled. \"'Cause when we see you go all crazy with your dares, we'll always pick truth and not give you any chance.\"\n\n\"What? You can't do that every time, that's cheating,\" Kelly griped. \"Right?\"\n\nStephanie watched the exchange with bemused interest, saying nothing.\n\n\"You really have no sense of caution,\" Brian sighed, unfastening the remaining buttons on his dress shirt. \"When you dare, it's not this free pass to get whatever you want. When you go too far, you squander our trust and lose out on chances to keep daring, keep enjoying that power aspect of the game.\"\n\n\"Yeah, pardon me for not accepting truth or dare as some profound psychological game,\" Kelly said, her voice laced with sarcasm. \"Here I've thought all this time it was a drinking game for pressuring friends into making jackasses of themselves, seeing titties, making out with strangers...\"\n\n\"Hey now, what happened to it being a fun way to get to know each other?\" Brian asked playfully, pulling his shirt open and sliding it off his shoulders. \n\nKelly and Stephanie were both staring at him, fixated. After a moment he glanced down, wondering if they were noticing something he hadn't. Back in high school, he'd been fairly scrawny and would've been nervous taking off his shirt in front of girls, but a few years of eating well and running in the mornings had done wonders for his constitution and confidence. He'd always had almost no body fat, and nowadays, considered himself in decent shape as well.\n\nBrian revealed a body that, while not huge and brawny, was definitely toned and defined. He didn't have the massive bulk of a body-builder, his abs and chest weren't exactly chiseled slabs of exaggerated muscle, and he would never consider himself athletic. However, his daily morning jogs had exquisitely carved any scrap of excess from his body. Even Chloe, who had become notoriously stingy in handing out compliments, had expressed grudging enthusiasm for his abdominal lines, those distinct v-shaped lines of pelvic muscle that disappeared down into his pants.\n\nStephanie and Kelly remained captivated at the sight, staring unguardedly at him with dazed eyes, their lips parted, speechless. Feeling self-conscious now beneath the weight of their continued stares, Brian turned and shot Kelly an expectant look. \n\n\"...Kelly?\"\n\n\"...Uh-huh?\" she asked, sounding distracted.\n\n\"Thought for sure you were gonna have something to say, some snide, unimpressed comment or sarcastic remark or... something,\" he said. Are both of them making fun at me here? They somehow got their joke reaction all synced up together without saying anything?\n\n\"No, I... uh, look, I got nothin',\" Kelly replied, seeming mesmerized by the sight of his bare chest.\n\n\"Really? I mean, I'm pretty pale,\" he suggested, feeling increasingly awkward at their strange, focused attention.\n\n\"No! No, you're, uh...\" Kelly began, blinking.\n\n\"It is-isn't that, you're um, you're not...\" Stephanie interjected before falling silent in embarrassment.\n\n\"Yeah, you're not pale at all,\" Kelly continued, swallowing and absentmindedly reaching towards him. \"See, uh... look how much lighter I am than you.\"\n\n\"Not pale at all,\" Stephanie agreed breathlessly.\n\n\"Thanks, I think,\" he said, slipping the leather shoulder-holster rig back on over his bare skin. The pair of girls gave him confused looks.\n\n\"What're you doing?\" Kelly asked.\n\n\"I picked the shirt, the holster counts separately, right? I don't have to keep it off,\" he answered innocently. \"The dare was for just one piece of clothing. But I mean, I can ditch the holster instead if you want though, and put the shirt back on?\"\n\n\"No no,\" Stephanie blurted.\n\n\"Nope,\" Kelly decided. \"You look like... I dunno, some undercover cop. Like, something from the cover of a sleazy romance novel.\"\n\n\"Gee, thanks,\" Brian said, rolling his eyes.\n\n\"No, s'kinda hot, right?\" Kelly said distantly. \"Right, Steph? It looks good.\"\n\n\"It, uh... yeah, he... um, do you think, maybe, I could take a picture?\" Stephanie squeaked, crawling across the covers and bouncing off the edge of the bed towards her phone on the dresser.\n\n\"You guys are making fun of me now,\" Brian laughed. \"Sure, do I get to take photos of you guys when you're doing your dares?\"\n\n\"Th-that's fine,\" Stephanie agreed meekly, only hesitating for a moment. \"Probably.\" Her phone played its camera shutter sound effect. Several times, in fact.\n\n\"Who's next? Am I asking you again?\" Brian said, turning towards Kelly. \"That was a full circle around... uh, our little triangle. A full triangle around?\"\n\n\"Then we'll go the other way, counterclockwise,\" Kelly instructed. \"That way everyone asks everyone.\"\n\n\"Hah, alright,\" Brian said, turning back towards Stephanie. The pink-and-blonde-haired girl was partially hiding behind her phone as she grinned to herself at the picture she'd taken. I must really look like a doofus in that shot if she thinks it's that funny. \"Truth or dare, Stephanie?\"\n\n\"A piece of clothing!\" Kelly suggested. \"It's totally her turn to lose something now.\"\n\n\"Hmm...\" Brian said, considering the options at his disposal as he looked at the nervously smiling girl. Stephanie squirmed beneath their attention, setting aside her phone.\n\n\"Tr-truth, then,\" Stephanie blushed. She was, after all, only wearing an oversized shirt and her pajama pants.\n\n\"Okay, I've got an easy one for you, just something I want to know,\" Brian assured her. \"What happened tonight? Kelly mentioned over the phone that you lost your room somehow?\"\n\n\"I, uh, well yeah,\" Stephanie said, her smile surging forth again. \"After I was with you today, I, ah, couldn't find Megan again. I looked for her all day, b-but, the convention's just too big.\"\n\n\"That's awful,\" Brian said honestly, \"She had your room key? Did you have some way of contacting her? If I'd known you weren't gonna be able to find her, I'd have had you stick with me.\"\n\n\"Y-yeah?\" Stephanie asked, brightening. \"I would've loved, uh, I mean, that would have, would've been great. I did, though. I had my own key, and I did find her... eventually. She was in our hotel room when I got back there, it just... well, sh-she...\" Stephanie rambled, cupping a hand over her mouth as she recalled what had happened. \"Con funk. She, uh, it was con funk. I-I couldn't bear to tell her. But, it was bad. It was so bad. It was the worst.\"\n\n\"Super gross,\" Kelly muttered, shuddering.\n\n\"That's awful,\" Brian said. \"Geez, I'm sorry, Stephanie. Here I am taking off my shirt in front of you when I haven't showered since this morning. I'm sure I'm starting to smell, too--\"\n\n\"No! No no, it's nothing alike, nothing like, she was bad, b-but you, I want to sm--uh, you're fine, it's all... it's fine. We're all calm and everything's fine. You don't smell bad at all.\" Stephanie sputtered, drawing a little closer to him as if to emphasize her point.\n\n\"So long as you're sure,\" Brian said carefully, feeling even more anxious than when he'd taken off his shirt. \"Then, I'm satisfied. Your turn to ask Kelly, and then we'll have finished a full round, I guess.\"\n\n\"I do think you're forgetting a turn where I get to ask you somewhere,\" Kelly reminded him. \"Then the round's over. You asked me first, remember?\"\n\n\"Ah, right. Good thing you remembered, or we'd have missed it,\" Brian teased.\n\n\"...I doubt that.\"\n\n\"Truth or dare, then...?\" Stephanie asked Kelly.\n\n\"Dare, of course,\" Kelly replied, displaying a wicked grin. Is she just gonna pick dare all night?\n\n\"Uhm,\" Stephanie began, clearing her throat. \"I dare you to take off another piece of clothing.\"\n\n\"Well, that's interesting,\" Kelly laughed, leaning forward. \"Is our little Stephanie curious about what I look like under my clothes? Wonder what the psychology is behind her asking that, huh? Or does she think this is what you want to see?\"\n\nNeither, Brian guessed. My first dare probably set the acceptable standard for Stephanie, and she's scared of breaking new ground with her own question. This is fine, though. Losing a piece of clothing or two every round adds up.\n\n\"Well, how 'bout it, Steph? You want the very shirt off of my back? I warn you, though, I've got nothin' on underneath,\" Kelly said, and she traced her fingertips down her frame, across the curvature of her own breasts. \"Do you want my jeans?\"\n\nShe hooked her thumbs into the tiny front pockets of her pants and gave them a slight tug. Her faded black skinny-jeans were tight, barely able to budge. \"Or... do you want my boring ol' other sock? I was wearing it most of the day, but that's okay. This foot hasn't even been in Brian's junk yet,\" Kelly said, lifting her leg as if to fix that right away.\n\n\"You've gotta choose it yourself, Kelly. S'part of the dare,\" Brian said, catching her foot with both hands. \"So what'll it be?\"\n\n\"I choose the sock, then. Like hell I'm gonna give either of you a show yet, not after just giving me lame little boring dares like those. In fact, since you've already got me in your hands here, why don't you take it off for me?\" Kelly purred.\n\n\"Sure,\" Brian said eagerly. \"I'll count it as your dare for me, if that's what you want to waste your turn on...\"\n\n\"Hey, I don't think so,\" Kelly exclaimed in mock indignation, retracting her foot of his grasp with a yank and pulling her knee up to her chest. She unceremoniously tugged the remaining ankle-sock off herself and lobbed it half-heartedly in Stephanie's direction. \"Truth or dare, Brian?\"\n\n\"Dare.\"\n\n\"I dare you to pleasure me,\" Kelly declared, a triumphant look appearing on her face.\n\n\"You what?\" Brian asked, eyes widening. \"That's a little bit much, isn't it? Right, Stephanie? ...Isn't that going too far for a dare?\"\n\n\"Uh-uhmm...\"\n\n\"No, it's not,\" Kelly said, blowing her bangs up out of her eyes with a puff of her lip. \"I'm not demanding you tongue-fuck me right here and now. Although... you can, sure. I'm daring you to make me feel good. How you choose to make me feel good, that's up to you.\" She was leaning forward provocatively again, and the low cut of her top afforded a compelling view of her cleavage in the light of the hotel room's lamp.\n\n\"A psychological thing, huh? To see what I'll do, given the choice?\" Brian asked dryly.\n\n\"Uh-huh. Decided on it right away when you got all high and mighty with the psychological bullshit,\" Kelly answered in a smug tone.\n\n\"Naturally,\" Brian said, smiling bitterly. \"Well, alright then. Anything counts so long as it feels good for you, right?\"\n\n\"I wouldn't say anything counts. There's feeling good and then there's pleasure. I'm not gonna give you any clues, but I think all of us know there's a clear difference.\" Kelly said, before casting a sidelong glance at Stephanie. \"Well, okay, maybe not all of us.\"\n\n\"Alright then,\" Brian agreed, still not perturbed. \"Sit here on the edge, right in front of me.\"\n\nTaking a moment to gauge Brian's seriousness with a cool glance, Kelly gave him a wide, expectant smile and complied, shifting out of the easy chair across from him and onto the corner of the bed, fitting the curves of her butt snugly into the space between his legs.\n\n\"Oh c'mon,\" Kelly scowled as she realized his plan. \"Don't tell me you think just a backrub is gonna--\"",
        "Then his fingertips were pressing deep into her skin, and the rest of her unspoken thought seemed to tumble out into space and shrink quickly into the distance. Brian's strong hands undulated in a calm, steady motion, firmly squeezing and softly gripping, kneading and shaping the stiff muscles atop her shoulders and along the base of her neck in a way she hadn't believed possible.\n\n\"Haaaah,\" Kelly breathed, her eyelids fluttering. \"Well, don't ah, d-don't stop though-oooh-ooohhh...\" He was tenderly sliding down the taut muscle on either side of her spine now, rolling his thumbs in savory little circles that seemed to transform her tensed muscles into sensuous jelly. \n\n\"Ohh-okay,\" Kelly mouthed, \"How'd... mmm, how'd you get so good at... ahhh, at... this?\" There was a confident, even possessive quality in the way he was handling her, somehow making and unmaking her with the luxuriant force of his hands. With each wave and crest he expertly pulled and rubbed and pinched Kelly's flesh until he was eliciting whimpered exhalations from the dark-haired beauty.\n\n\"My girl--, well, my ex-girlfriend had some problems unwinding sometimes, so I managed to get plenty of practice,\" Brian admitted. No need to mention how it got to be this stupid subservient thing, or how Chloe just got to expect it of me, without ever having any appreciation. \"How is it?\"\n\n\"I'm like, I'm fuckin' melting here,\" Kelly cooed, her upper body wavering back and forth with her breath. \"Fuck, this is, this is... hwah? Why're you stopping?\" \n\n\"I've got to,\" Brian withdrew, flexing his fingers. \"I can be a little rough and with your shirt on, without lotion I might--\"\n\n\"I have lotions,\" Kelly interrupted, giving him a sly glance over her shoulder. \"Lotions, moisturizer... might even have lube in my purse. Look, I can take off my shirt, and... well, you can keep going, you know?\" She arched her back against him, accentuating the thinly-veiled double-meaning in her words by subtly pressing those magnificent breasts of hers together with her stretching arms. One of the straps of her tank top had loosened and begun to slide down her shoulder.\n\n\"So, I passed your dare, then?\" Brian calmly conjectured, shifting back away from Kelly on the bedspread and working his hands one last time before nonchalantly relaxing them in his lap. There were a lot of discreet ways he could disguise his ardent erection, and he had been shamed into learning many of them throughout the course of his last relationship. Kept my cool, everything's fine, Brian assured himself. If I can just... adjust myself out of this fold in my pant leg, no one'll know the--\n\n\"I didn't say you passed, yet,\" Kelly pouted, turning further towards him and looking crestfallen. \"You didn't even finish.\"\n\nFinish? The hell do you mean, finish? You keep making sexy noises when I have my hands on you, I really will finish, Brian thought, steeling himself to keep his composure.\n\n\"Well, Stephanie?\" he managed.\n\n\"Y-you, uh, I think he passed,\" Stephanie mumbled, her face red. \"You didn't say how long he had to plea... um, how long he had to make you feel good. That was, ah, wow, though. You wouldn't happen to be a physical therapist, or, or a masseur?\"\n\n\"Nothin' like that,\" Brian said, giving her a lopsided grin. \n\n\"We can pick up where we left off later though, right?\" Kelly asked huskily, reluctantly returning to sit back in the easy chair while twisting and stretching her body.\n\n\"Can I ask for a truth, then?\" Brian asked, giving her a strange look.\n\n\"Yeah, I guess you can,\" Kelly said, \"But I'll take any dare too, you know?\"\n\n\"Truth or dare, then,\" he asked.\n\n\"No, really, anything,\" Kelly said, curiosity getting the better of her. \"I'll take a truth or a dare, it doesn't matter. Ask away.\" \n\n\"Okay, then,\" Brian said. \"Why'd you come to AnimeCon? I mean, you don't seem like you're into anime, you don't consider yourself a weeb like us. So... why are you here? It's been on my mind for a while now.\"\n\n\"All the things you can ask, and you ask that,\" Kelly grunted, face falling in dismay. \n\n\"I'm a little curious t-too,\" Stephanie added. \"I know I asked before, but...\"\n\n\"Fine, fine,\" Kelly sighed. \"First of all, you've gotta know that I've been to AnimeCon before, three years ago. So I'm not like, this complete outsider. But to clarify; I was never like, a real anime fan, or into all the geek stuff like you guys... I had this friend who was, Sarah. I came to AnimeCon with her back then, wore one of her old costumes. Rocked it. Was this real tight sorta jester's outfit from some comic book thing--\"\n\n\"Jessie Terr?\" Brian guessed.\n\n\"...Probably? Yeah, I think that was it.\"\n\n\"Wait wait, you were Jessie Terr, here at AnimeCon, three years ago?\" Brian asked in surprise. \"Were you wearing a skirt sort of thing with fishnet, or the bodysuit?\"\n\n\"Uh... a skintight bodysuit, actually. Why?\" Kelly asked, suspicion creeping into her voice.\n\n\"Hell, I think I took a picture of you that year, standing with Emily. I'll have her look through the album on her page tomorrow, but I'm pretty sure it was you.\"\n\n\"Y-you two have met here before?\" Stephanie realized, shocked. \"AnimeCon, um, the convention, it's ah, it's something like sixteen thousand attendees, the odds--\"\n\n\"This year, maybe,\" Brian said thoughtfully. \"Back then, things were different, AnimeCon couldn't have been more than seven or eight thousand people, and there were a lot less cosplayers than there are now.\"\n\n\"It might've been me,\" Kelly said, looking guilty. \"There were a lot of pictures. And it was... look, it was fun. I liked it, the attention, the fan reaction, the anon...anonymity? Is that right? Everyone recognized who I was supposed to be, but at the same time, no one knew who I really was.\"\n\n\"I'm used to being sexy. I'm naturally sexy, but being able to put on this slinky costume, with her wig and stupid face paint... I was more, I was... pickin' up her little mannerisms and mimicking her stupid accent just like Sarah coached me. I was like, gettin' into it. It was fuckin' weird, and kinda cool. And I was gonna make AnimeCon a habit, and come back every year.\"\n\n\"But you didn't? What stopped you?\" Brian asked.\n\n\"Well, I started fucking up and never stopped, that's what happened,\" Kelly muttered, gritting her teeth. \"This is kinda my last shot... at trying to see if I can still go back, back to where I used to be in my life, you know? Also I flipped out on my one manager and got suspended, so well... my weekend was free.\" \n\n\"Well, she did answer,\" Brian said thoughtfully, glancing to Stephanie. \"But all it does is raise more questions...\"\n\n\"S'all you get, champ,\" Kelly denied flatly. \"I'm all dares for the rest of the night. Anyways... let's move on, alright? Truth or dare, Stephanie?\"\n\n\"I... I think I'm picking truth, again,\" Stephanie said shyly.\n\n\"Perfect! Great. Because I thought of a perfect question for you,\" Kelly confessed, the graceful curves of her cheeks curling into a diabolical smile. \"When you were in the shower earlier, did you masturbate at all?\"\n\nThe timid cutie looked completely stunned, and her mouth fell open in shock at the question. \"I... did I what?\" Stephanie stammered, nervously flicking her eyes between Brian and Kelly.\n\n\"Were you a good little girl, who went in there just to wash up, to prepare your dainty little self for bed? Kelly persisted, still grinning wickedly. \"Or'd you finger yourself?\"\n\nHah, as if, Brian thought to himself. Now you're even overreaching on your truth questions. There's no way that Stephanie...\n\nBut Stephanie's mortified face gave it all away immediately; a look of guilt and embarrassment that transformed into an alarmed, increasingly panicked expression. She hid her face in her hands, unable to quell her own reactions.\n\nWait, no way... Did she really...?\n\n\"Um, I...I d-don't think I can answer,\" Stephanie said quietly, unable to meet their eyes. \"Does that--does that mean I'm out of the game now?\"\n\n\"It means you're being needlessly difficult,\" Kelly replied, chuckling. \"Because if you back out here, both of us will know for sure why; it's 'cause you finger-fucked yourself silly soon as you had the water running in there, isn't it? Right, Brian? If she refuses to answer, that's what we'll think.\"\n\n\"Uhmm...\" he coughed helplessly.\n\n\"But, on the other hand, if you come clean and admit what we basically now already know, you get to keep playing. You keep playing, you impress us with your courage and honesty, you form a bond with us--'cause everyone gets horny and masturbates at some point. And most importantly, if you look deep into Brian's eyes when you answer, something amazing might happen.\"\n\n\"Okay, I...I did that,\" Stephanie stammered, cheeks burning as she avoided their gaze. \"A little. Only, ah, a little. I'd never--it, it was just a bit...\"\n\n\"Well. There we have it, the dirty truth. Look at this perverted little peach, Brian,\" Kelly exclaimed, turning towards him with interest. \"I really can't believe she'd do that, and with both of us right out here outside... Are you shocked?\"\n\n\"It's okay, Stephanie,\" Brian reassured her, trying not to let his imagination run wild. \"You answered her question, and you didn't do anything wrong. I probably would have... uh, done that too, if I'd showered right after the con. It's been a hell of a day.\"\n\n\"You...um, you would have?\" Stephanie asked, letting out a breath. More than just being relieved at his admission, she appeared to take interest, as well.\n\n\"Yeah, I mean, probably,\" Brian said, looking away awkwardly. \"Uh, whose turn was it to go next?\"\n\n\"We're really learning tons about each other with this game,\" Kelly remarked gleefully. \"In fact, if Steph thinks she can keep playing it safe with only picking truth questions... next time I can ask just what fantasy our little Stephanie was in there diddling herself to.\"\n\n\"Tr-truth or dare, Brian?\" Stephanie asked, pretending not to hear.\n\n\"Hmm... truth, this time,\" he answered.\n\n\"Okay, there was... this one thing I wanted to ask but, wasn't sure if it would be okay...\" Stephanie said meekly. \"And, if you're not comfortable, you, ah, you don't have to answer--\"\n\n\"Yes, he does,\" Kelly jumped in, rolling her eyes. \"He doesn't get any free passes. If you ask, he's gotta answer, or he's out of the game.\"\n\n\"Oh... right. In that case, I can ju--\"\n\n\"Go ahead, ask,\" Brian prompted, curious. \"I'll answer any question you have.\"\n\n\"Um... okay. Why did you and your uh, ex-girlfriend, why did you two break up?\" Stephanie asked, looking genuinely perplexed by the notion. \"I can't picture, or I mean, I can't think of any reason why anyone would possibly, uh...\"\n\nBrian managed a frown, caught off guard. \"Well, that's a bit... complicated to explain.\"\n\n\"Betcha it's not,\" Kelly said snidely. \"People are complicated, yeah, but breakups themselves always turn out to be for pretty simple reasons, don't they?\" \n\n\"Well, okay. I guess the short version is... she stopped trusting me, so the relationship stopped working. Is that simple enough?\"\n\n\"Wha--no way, that's not fair,\" Kelly protested. \"That's like, only half of an answer, a tenth of an answer. You have to tell us the why to actually answer her question; why'd she stop trusting you?\"\n\n\"Why wouldn't she trust you?\" Stephanie asked as well, wearing an expression of disbelief and confusion.\n\n\"Because I'm a guy,\" Brian sighed, shaking his head.\n\n\"Okay, spill,\" Kelly demanded.\n\n\"I've been kind of mulling the whole situation over in my head every morning run. Trying to organize my thoughts, figure it all out, you know? Her name was Chloe. She went to the college in my town, so when we met she was already kind of... in the periphery of that local circle of friends. Long story short, we hung out a lot, started dating. Eventually got an apartment together. Things were fine, for a while.\"\n\n\"I don't know if it was professors or college activists or what, but partway through one of her courses; this gender studies class, the material stopped being objective and started pushing this weird political slant.\"\n\n\"Political slant?\" Stephanie murmured, looking confused.\n\n\"Yeah, opened her eyes to all of our inequalities, I guess. They taught her that there was a wage gap between men and women... so she began to insist that it was absolutely unfair for her to be paying half of the rent. She learned that most women are sexually assaulted, and their statistics said that one in every three men is a rapist. From that point it didn't a matter that I respected when she said no, I was required to earn a yes from her for every potential stage of intimacy. That's how it all started, anyways. As time went on she just... got deeper and deeper into this extremist mindset that couldn't help but despise me.\"\n\n\"Yikes,\" Kelly said. \"Yeah, you'd mentioned some of that before. I can kinda see why you broke up with her.\"\n\n\"She left me, not the other way around,\" Brian replied. \"It was frustrating, it hurts, and I hate it, but... it's not like she just changed all of the sudden, it was this gradual thing, over two years. Before I knew it, I wasn't even fit to speak with her on any number of subjects, because my opinions, as a privileged white male, weren't valid. Her having to educate me on the social injustices just seemed to make me more and more guilty.\"\n\n\"B-but you don't think that way, do you?\" Stephanie asked, looking genuinely concerned. \"You, uh, I don't think you did anything wrong.\"\n\n\"For a while I guess I tried to convince myself of some of it,\" Brian admitted. \"But well... I don't know what to think about anything anymore. I can't imagine that I'm not terribly biased in this situation, so don't consider what I've said any kind of fair assessment or anything. I know that Chloe was doing what she thought was right, so that, at least... is admirable.\"\n\n\"Unless she's actually really wrong,\" Kelly observed dryly.\n\n\"I guess,\" Brian said indifferently, letting out slow breath. \"Anyways, does all of that answer the question to your satisfaction?\"\n\n\"I... yes, it does. Sorry,\" Stephanie answered, managing a sheepish grin.\n\n\"Don't be, you're up next,\" Brian said. \"Truth or dare, Stephanie?\"\n\n\"Truth,\" she replied.\n\n\"Okay, how do you feel about gender roles and relationships?\" he asked.\n\n\"I think that guys are obvious predators and subtle parasites of women,\" Kelly jumped in. \"And girls are obvious parasites and subtle predators of men. Girl I knew said that, always agreed with it, though. Shit, wasn't my question though, sorry.\"\n\n\"S'alright,\" Brian chuckled. \"My ex would definitely agree with at least half of that. Go on, Steph.\"\n\n\"I, uh, honestly hadn't thought much about either of them,\" Stephanie admitted, shaking her head. \"I never thought any of it would be... applicable to me? I'd just want you--uh, that is, um, the other person in a relationship, to be happy, that's all that matters to me. I don't think the genders really matter to that, but, I actually don't know very much about the topic at all, so...that's my answer, I guess?\"\n\n\"Really?\" Kelly asked. \"Genders don't matter to you? Like, you'd hook up with a girl?\"\n\n\"Hey, you wait 'till your next turn to ask a new question,\" Brian chided. \"Stephanie's turn to dare you, now.\"\n\n\"Truth or dare?\" Stephanie asked.\n\n\"Dare,\" Kelly said, leaning back and regarding Stephanie with a confident smile.\n\nHope it didn't seem like I was exaggerating about the whole Chloe thing, Brian thought. Kinda weird talking about it. It was always such a touchy subject that I never really got to share my thoughts on it with anyone, even Emily.\n\nFrowning, Stephanie looked from Kelly to Brian, and then down into her hands in her lap. \"I, uh, I can't think of anything to dare,\" she admitted.\n\n\"You can't think of anything you want me to do?\" Kelly asked in exasperated vexation. \"You can tell me to do anything you want, you have me at your command, and you've got nothing? Do you want me to finish what you started and have me strip?\"\n\n\"What was the other dare we've had tonight...? Ah, right, that was it; dare me to make you feel good. There's no downside to that for you, and it even leaves things open for me to make you feel good in, you know, my own way.\"\n\n\"I...uh, okay. I dare you to make me feel good,\" Stephanie agreed nervously.\n\nUh-oh. She walked right into that before I could warn her. Somehow I doubt Kelly planned on making her feel good using stuff like motivational words and high-fives. As it turned out, he was right.\n\nHopping out of the chair, Kelly joined Stephanie near the headboard of the bed and leaned in close, much to Stephanie's surprise. The scene girl drew Stephanie into a hug, smooshing Kelly's soft breasts against the girl's smaller pair and slipping her arms around her tightly. \"How does this feel?\"\n\n\"Um,\" Stephanie said awkwardly, staring over Kelly's shoulder at Brian in surprise. \"It's... nice, I... guess?\"\n\n\"Keep talking, it's therapeutic,\" Kelly whispered, caressing pink locks of hair away from Stephanie's pale neck with her fingertips. \"Just look over at Brian and describe to him how I'm making you feel, okay?\"\n\n\"Oh-okay?\" Stephanie agreed stiffly.\n\n\"Mmm,\" Kelly responded, and she puckered her lips and smacked a moist kiss just below Stephanie's ear. \"Keep tellin' him...\"\n\n\"Ah!\" Stephanie yelped in surprise, and then shivered as Kelly's sumptuously soft lips played across her neck in a string of sensual kisses. \"It-it's, just, that I'm, well, it's sensitive there...\"\n\n\"Mm-hmm?\" Kelly hummed, playing her teeth across the girl's bare skin. \"Are you still lookin' right into Brian's eyes?\"\n\n\"Uh-huh,\" Stephanie breathed.\n\n\"Then I'm gonna keep going... until I hear you tell him that what I'm doing is making you feel really good,\" Kelly purred, blowing softly in the girl's ear, and then she nuzzled closer and pulled the girl's earlobe into her mouth, pinching it gently between her teeth.\n\nOkay... this is pretty kinky, Brian decided, trying to keep anything but an amused smile from showing.\n\n\"Ah? ...Ahhh-ah!\" Stephanie cooed, gripping firmly onto Kelly's embrace in surprise. \"It feels, it's, uh, it's... weird?\"\n\n\"Weird, huh? Well, I like making you feel weird. Is he still... watchin'?\" Kelly asked in a husky voice, nibbling messy kisses, darting her tongue out, dragging a wet line down the softest portions of Stephanie's neck. \"Is he watching you make weird faces?\"\n\n\"Uh-huh?\" Stephanie affirmed, squirming, and she swallowed a mouthful of saliva.\n\n\"Well, I'll try not to leave too many hickies,\" Kelly promised, and she shifted her position and continued down the other side of Stephanie's neck. Brian couldn't see what she was doing from his vantage point now, but he could hear her making wet suckling noises and Stephanie's eyes were going unfocused in an erotic daze.\n\n\"Ahh-ahhh! That, uh, that's good,\" Stephanie finally gave in. \"That feels good, you can... you can stop now!\"\n\n\"I don't know... did it really feel good?\" Kelly asked, looking doubtful.\n\n\"Yes! Yes, it was, ah, nice. It felt really good,\" Stephanie reassured her quickly.\n\n\"Be sure and remember it,\" Kelly said, still using her flirtatious tone. \"'Cause you can try it out on Brian later. Or me, if you want some practice first. We can exchange all kinds of pointers all night long.\" With apparent reluctance Kelly released the girl and bounced up off the bed again, returning to the easy chair with a new sway in her hips.\n\n\"Truth or dare, Brian?\" Kelly asked.\n\n\"...Truth,\" Brian decided, not failing to notice the eager smile Kelly was failing to hide.",
        "\"Son of a bitch,\" Kelly swore, although her smile didn't falter. \"You just knew I had somethin' good to dare ya, didn't you?\"\n\n\"That look of manic glee was a little telling, yeah,\" he admitted, leaning back and crossing his arms.\n\n\"Damn, I was gonna have you... well, I'll still get my chance. You can't hide behind truth forever,\" Kelly said in a conspiratorial voice.\n\n\"Says who?\" he countered.\n\n\"Says me, 'cause sometimes truth questions are even better than dares,\" Kelly said, and she jerked her thumb toward Stephanie. \"Okay then, tell me the truth, do you want to fuck her?\"\n\n\"I... uh,\" Brian blurted, looking nervously over at Stephanie. There really is no such thing as a safe question in this game, huh?\n\n\"You either wanna fuck her...\" Kelly suggested, \"...or you don't. It's one or the other.\"\n\n\"That's just... I mean, Stephanie, isn't that going a little too far for a question?\" Brian pleaded.\n\n\"Uh,\" Stephanie sat up and fidgeted, trying not to appear as though she had been leaning forward in excitement and anticipation. \"W-well, if you're not, um, comfortable answ--\"\n\n\"C'mon, guys,\" Kelly interrupted quickly, \"I was only even asking that to do my girl Steph here a favor, 'cause I can tell... she really wants to know. Don'tcha, Steph?\"\n\n\"...Do you?\" Brian asked.\n\nA look of panic came over the blushing girl, and she waved her hands in front of her. \"I um, it's not, I mean, it's your turn, not mine, I don't, uh, I d-don't have to say anything. I don't has--have to answer.\"\n\n\"But do I have to answer?\" Brian asked. \"Is it going too far, or is it a fair question?\"\n\n\"Uh...\" Stephanie mouthed, floundering.\n\n\"You were right, Brian. Truth or dare is like, a deep game,\" Kelly said, praise evident in her voice. \"You learn more about people by what they ask, by how they answer, and even by what the impartial judge player decides is a fair question or not.\"\n\n\"Th-that's not fair, I can't, how?! I can't be impartial when it's about me--\" Stephanie protested.\n\n\"S'why it's really so telling,\" Kelly smirked. \"Like, if you say it's a legal question, then what it really means is that you want to know, too. You want to know if Brian here wants to fuck you, that is.\"\n\n\"That's not, that isn't... necessarily... um,\" Stephanie said weakly.\n\n\"So you don't care whether he wants to fuck you or not?\"\n\n\"This... this isn't my turn, it's Brian's ques-question,\" Stephanie sputtered, \"I don't think that, uhm, that we can have unfair 'truth' questions, so there's really... there's really no need to ask me, uh, to ask the third player if it's fair or not, un-unless it's a 'dare' question.\"\n\n\"So you do want to know?\" Kelly grinned.\n\n\"Th-that's not what I said!\" Stephanie denied.\n\n\"Fine, I'll answer, I do,\" Brian jumped in, and the girls seemed to forget their argument instantly.\n\n\"You do... what? Say it out loud,\" Kelly gloated. \"Say what you want to do to her, Brian.\"\n\n\"I do want to... do it with her,\" Brian grudgingly admitted.\n\n\"You want to fuck her,\" Kelly said.\n\n\"Yeah.\"\n\n\"Say it--!\"\n\n\"Look, it's fine if you just want to make me uncomfortable, but I don't want you using me to make Steph uncomfortable. I mean, we're all rooming together...\"\n\n\"Don't blame me for makin' you guys uncomfortable, all I did was bring the truth to light and make things a bit more honest around here,\" Kelly smirked. \"You're the one who wants to fuck her so bad. In fact, I think next time you pick truth I'm gonna ask for you to describe for us exactly how you want to fuck her.\"\n\n\"Ohh,\" Stephanie blurted, blushing fiercely. She was struggling to keep anything from showing on her face, and failing miserably. \"Y-you guys both are so mean.\"\n\n\"What?!\" Kelly retorted indignantly, \"I'm just tryin' to look out for you here! So now you know what's up. And as for Brian, well, like, it's not his fault he wants to fuck you, he can't help it, right? After all you're--\"\n\n\"Uh... well, whose turn was it next?\" Brian asked sheepishly, coughing into his fist.\n\n\"You're asking me, now,\" Kelly laughed. \"...Your chance for revenge?\"\n\n\"Truth or dare, then.\" Brian asked.\n\n\"Dare,\" Kelly decided. \"Gimme something good for once.\"\n\n\"Something good, huh...\" Brian said, thinking back to the better dares that had been thrown around back when he played in high school. He was surprised to realize he actually did want to get back at her a little bit. She's been going a little overboard trying to stir things up between me and Stephanie.\n\n\"Okay, I've got one.\" He rose from the corner of the bed and picked through his pile of stuff, eventually pulling out a slim box of wrapped cereal bars, his 'emergency convention rations'. Returning to sit on the edge of the bed across from Kelly's seat, he tore the wrapper off of one and placed it on his thigh.\n\n\"I dare you to eat it, without using your hands,\" Brian said, a little proud of himself. Emily had clumsily eaten a cookie out of his lap on a dare back during their senior year, and he'd used the memory as fap fuel for months and months. \n\nThe sight of her cute pixie-cut hair bobbing enthusiastically down by his crotch, and her blushing, flustered face as she tried to catch the crumbs scattering across his jeans with her lips. The tiny wet spots of drool she left behind, that look of triumph on her face after she ate it all, seeing the motion of her throat as she swallowed, their other friends whooping and jeering...\n\n\"Oh, thank God,\" Kelly said, dropping out of her seat and onto her knees in front of him without hesitation. \"Didn't wanna say anything 'cause you've already done so much for me, but... I'm really starving.\"\n\nDamn, now I actually feel bad, I should've offered them both some--\n\nWith a devilish grin she then lowered her face down into his crotch and nuzzled the cereal bar closer to his--\n\n\"Hey, whoa,\" Brian interjected quickly.\n\n\"You said no hands,\" Kelly laughed, giving the cereal bar a dainty nudge further up his thigh and gently rubbing her cheek against him. She turned, dramatically flipping her hair, and smiling up at him, and then slowly rubbed her other cheek upon his opposite thigh, making little kissy motions.\n\n\"You're, uh, not eating,\" Brian muttered, trying to force himself not to jerk or spasm. The buoyant feeling of her incredible breasts squeezing up against him as she teased her chin across his crotch and then looked up at him innocently...\n\n\"Y'know what'd be epic?\" Kelly asked, giving him a wide smile. \"If you just, like, unzipped your fly and whipped your dick out right now, right in my face.\" Before he could respond she had buried her face in his lap again, pushing deeper, towards...\n\nUh-oh. Her cheek had finally brushed against the shape of his dick, which had been at half-mast and was quickly rising fully to the friction of her motions across his pants. Damn. Maybe she won't notice--\n\nBefore he could even finish the thought, her head snapped back up to face him, a look of mock astonishment plastered across it.\n\nWow, she mouthed to him silently, letting that astonished look melt into a sultry smile as she slowly lowered her head back down to his lap.\n\n\"Hey, that's enou--\" he began, and just as abruptly, she leaned back from him with the cereal bar caught in her mouth. She somehow even managed to look smug even as she chewed it into her mouth and winked at him.\n\nDamn, so much for humiliating her, Brian thought. Maybe I should've gone with the other dare from back then and had her give herself a wedgie?\n\n\"You know, you're lucky I'm actually hungry, I coulda really made you suffer. Well then, pick truth or dare, Stephanie,\" Kelly instructed, wiping her mouth with the back of her hand. \"And, uh... actually, you got any more of those, Brian?\"\n\n\"Truth,\" Stephanie decided quietly.\n\n\"Okay, there's a lot of sexy questions I had for you that'd have you all sperging out, but I thought of one that might be even more important, so... 'fess up. What happened, way back when, that gave you your social anxiety?\"\n\n\"Hey, that's kinda...\" Brian interjected, giving Kelly a nervous glance as he handed her another cereal bar. \"I mean, I know you can ask anything, but do you really have to--\"\n\n\"It's okay,\" Stephanie interrupted, showing a small smile. \"It happened so long ago, it's not very impressive or amazing... it's silly, really. I can tell the whole story if you both promise not to laugh.\"\n\n\"We promise,\" Kelly assured, and took a large bite out of the second snack bar.\n\n\"Okay,\" Stephanie started slowly, pausing to take a deep breath. \"It all began in the Sea of Cats--\"\n\n\"Pffffftt!\" Kelly laughed, slapping a hand over her mouth. \"Sorry! I... look, sorry. Continue.\"\n\n\"Go on, Stephanie,\" Brian said, shooting Kelly an admonishing look.\n\n\"Okay,\" Stephanie continued, smiling patiently, \"I was young. Twelve, maybe. And I had two friends. Ben and Jess. Ah, well, Jessica, but we just called her Jess. We grew up together, and we all played make-believe together almost every day, just the three of us. Every day we had an adventure in the Sea of Cats.\"\n\n\"...The Sea of Cats.\" Kelly repeated incredulously.\n\n\"Y-yeah,\" Stephanie said quietly, but Kelly could detect a current of excitement in the girl's voice. \"That's what we called it. In our neighborhood there was a big field, empty lots where they hadn't put in new homes yet. The grass was tall and wild like a sea, and there were cats everywhere!\"\n\n\"They just kept multiplying. They didn't really belong to anyone, but I think they were too well-fed and looked-after to be considered feral. We knew them all, we gave them all names. Sometimes you'd see them curled up together, sometimes they'd squabble and chase each other... there was always something going on. Ben and Jess and I, we had a big bag of dry food, and we'd take a handful each and play, go out exploring for hungry kittens. We would watch anime and play in that field, always playing out a different story, a different adventure.\"\n\n\"Okay, that makes a bit more sense,\" Kelly grudgingly admitted.\n\n\"We'd watch anime and go on little adventures together in the Sea of Cats... and then, one summer, my friends... they changed.\" Stephanie sighed. \"They started dating... uh, they started dating each other during middle school. They'd moved on to this... idea that they were a mature couple, young adults in a relationship. They stopped playing with me, and they became distant, but also... they started to talk about me, made fun of me in school. I don't know if it was ever really even enough to consider it bullying, but coming from them, it really just... Devastated me.\n\n\"I know it seems silly, for such a small thing so long ago to have such an effect on me. They broke up in eighth grade, but it wasn't like things could ever go back to the way they were. Everyone but me had put all of the past behind them and grown up. I loved them both so much, and I just wanted us all to be happy together, like we used to... I couldn't handle it. I cried. I would cry by myself for days. It's been half a lifetime since then, and sometimes I still feel like crying.\"\n\n\"All throughout high school, I wasn't really all there, I was just trying to make myself scarce so that people wouldn't notice me. I'd go to school and do my assignments, go home and do my homework, wish that there was more homework, so that it could keep me occupied. And then go to bed in my tidy, boring little room. I wasn't really... um, I'm not really happy.\"\n\n\"I wanted things to go back to how they were, when we went on adventures and played games together, but it was impossible. I did keep watching anime by myself... and I still play Monster Battlers... with Megan, now. My only friend... if she'll still have me after tonight. Before I knew it, high school flew by and I'm in college now, just... getting older and somehow still waiting for those fun days with my friends to come back somehow. I guess... that's my whole life story?\"\n\n\"So you just waited for your life to magically get better and go back to the way things were?\" Kelly asked, agitated. \"You didn't, I dunno, do something about it? Find new friends? Get in a relationship like they did? Something? Anything?\"\n\n\"I tried a-a lot of things, I, I did,\" Stephanie stammered in protest. \"But I wasn't brave... I'm not brave. I couldn't have adventures on my own, I almost drowned when I tried. I could never reach out to make new friends in high school on my own... I didn't even have the guts to explain to Megan why I ran out on her tonight. I'm nothing--\"\n\n\"Almost drowned?\" Kelly asked.\n\n\"All of that's in the past, though,\" Brian interrupted. \"I mean, you're here now, with us. Your new friends?\"\n\n\"I... yeah?\" Stephanie asked, brightening.\n\n\"Yeah, friends,\" Kelly chimed in. \"Maybe even with friends with benefits?\"\n\n\"Besides, I've seen what you can do when you're brave,\" he said, remembering that kiss she'd given him back at the convention, that kiss that felt like it was shattering the heavens and the earth. \"And it's pretty amazing. I think that before too long, you'll forget you ever even had any anxiety.\"\n\n\"I... yeah, I wish,\" Stephanie said quietly, but she wore a small smile now.\n\n\"Well, it's your turn to ask me next anyways, so let's see how brave you can be?\" Brian said.\n\n\"Ah, uh, right. Truth or dare?\" Stephanie asked.\n\n\"Dare,\" he replied.\n\n\"Um, okay,\" Stephanie breathed, laughing, \"It's... it's been on my mind, ever since you said earlier, uh, what you said earlier... about... um, how you wouldn't tell me what you think about...\"\n\n\"...About my butt,\" she continued in a small, embarrassed voice. \"So I dare you, I dare you to, ah, to tell me now, what you thought about my butt.\"\n\n\"Nope,\" Brian answered, his grin spreading wider.\n\n\"Y-you're giving up?\" Stephanie asked in surprise, looking crestfallen. \"You really won't tell me?\"\n\n\"No, it's just, you can't dare me to tell the truth about something,\" he clarified. \"I didn't pick 'truth', I picked 'dare'. One is one thing, and the other's the other.\"\n\n\"Hey, he's right,\" Kelly realized, a wicked smile adorning her face. \"You can't dare a truth outta him, that's cheating. \"You've gotta dare him to do something. That's what you get for tryin' to plan out all your questions before he's picked truth or dare.\"\n\n\"I, ah, yeah,\" Stephanie mumbled, blushing furiously, \"S-sorry, forget that question. I'll uh, I'll think of something else.\"\n\n\"If he said that it's something he's gotta show you, and he picked dare, why are you still tryin' to get him to tell you what he meant?\" Kelly chimed in, exasperated. \"Are you afraid of a little fondling and spanking?\"\n\n\"I, um, no, I'll...I'll think of another question,\" Stephanie said, shaking her head in embarrassment.\n\n\"Yeah, besides, that'd be no way to train my Flamituff,\" Brian said. \"Spanking'd be for... well, if she was bad. You've been a good girl all this time, haven't you?\"\n\n\"Y-yes. Yes?\" Stephanie stammered nervously. \n\n\"You know, she hasn't been that good. Just a little bit ago in the shower she was--\"\n\n\"Kelly!\" Stephanie yelped, mortified all over again.\n\n\"Look here, little girl,\" Kelly said. \"I get it. There's probably a ton of interesting things you really want to dare Brian, isn't there? But you're too afraid to ask any of them?\"\n\nStephanie reluctantly nodded.\n\n\"Well, Brian picked dare 'cause he wants you to ask him something... interesting. Not something boring like another single piece of clothing, either. Brian just said earlier that he's seen you be brave, and that it amazed him. So what are you gonna do? Are you going bore him, or are you gonna amaze him?\"\n\nStephanie didn't answer, staring at the covers with her brow furrowed cutely in thought.\n\n\"Listen,\" Kelly prompted again. \"Imagine for a second that tonight is already over and you're like, looking back at it. You picked a boring, 'safe' dare and he ended up taking off his shoulder holster or something lame for this turn. The night wound down and the game ended, and then tomorrow came, and the next day and the next because fuck, time moves on. Months from now you'll remember back to this moment, this chance. What's that one question you'll regret not having asked the most?\"\n\n\"Don't worry about all of that,\" Brian said, frowning. \"You ask whatever you're comfortable with, alright?\"\n\n\"I... um.\" Stephanie swallowed, and turned towards Brian, her eyes still downcast on the bedspread. \"Okay, I... I dare you...\"\n\n\"You dare me to...?\"\n\n\"I dare--I dare you to remove one piece of clothing...\" she blurted out, eyes flicking up at him as she fidgeted nervously.\n\nKelly sighed and looked away in disappointment, resting her cheek on her palm as she slumped back in the easy chair.\n\n\"...From me,\" Stephanie finished, swallowing.\n\n\"From... what?\" Brian asked, surprised.\n\n\"I dare you to remove one piece of the clothing... that I'm wearing,\" Stephanie explained, too embarrassed to look at him again. \"And, I, uh. I want you to be... a little forceful? I-I don't want to get hurt, I just, um, if you could be a little rough, that would...\"\n\n\"Now that's more like it!\" Kelly exclaimed in approval, slapping her fist into her palm. \"Steph, I knew you could do it!\"\n\n\"That's... a pretty big dare,\" Brian said, swallowing and giving Kelly a glance. \"You're allowing it?\"\n\n\"Either you're gonna do it or I'll make you do it. Get on with it,\" Kelly urged, gesturing him towards Stephanie.\n\nBrian took Stephanie by the hand and helped her stand up on the bed. With the bed being a little over two feet up off the ground, this actually had her looking down at him for a change.\n\n\"Now, uh, it's your dare,\" he said, \"So if you don't like how it goes, just... you know, say so and we'll stop, 'kay?\"\n\n\"Oh, uh, okay,\" Stephanie nervously agreed.\n\n\"No way,\" Kelly objected, \"She dared you, now you have to do it, whether she ends up liking it or not.\"\n\nI spent too much time with Chloe, Brian thought, sending Kelly the slightest bitter smile. How long will it be before I stop trying to ask if every little thing is okay? Okay, one piece of clothing, huh?\n\nTaking her by the waist, he spun her around so that she was facing in the other direction, eliciting a startled yelp from the girl. The oversized shirt was long enough to hang down over her rear, and he gingerly lifted it up. The pajama bottoms right in front of him were cotton, but Stephanie's delicious proportions still distorted the simple printed pattern on the fabric. Sweet mother of...\n\n\"Hey, don't forget; she wants you to be a little... rough.\" Kelly reminded helpfully.\n\nFeeling an undercurrent of excitement ripple through him, Brian let the nightshirt fall back down over his hands. Then he gripped Stephanie's waistband beneath it and slid his fingers around the circumference of her wide hips, narrowly resisting the urge to pull her towards him. Letting out a startled gasp, Stephanie wriggled beneath his unexpected touch and Brian was grateful she'd worn a shirt big enough to hang down over the tight curves of her ass, or he really would end up showing her just what he thought of it.\n\nWith his arms wrapped around her and his fingertips teasing lightly across her shivering tummy, he shoved his thumbs roughly into the waistband of her pajama pants and twisted them down.\n\nThere we are, Brian thought in relief, separating two distinct pairs of waistbands carefully with his fingers, and he could feel a tiny decorative bow on one of them. He'd been honestly concerned--he had no way of knowing whether or not she wore panties beneath her pajamas, He didn't want to leave her completely exposed and embarrassed on her own dare--or at least, only a part of him wanted that. In the low light of just the room's tableside lamp he hadn't been able to tell whether she had any camisole or bra on beneath the nightshirt.",
        "Brian pulled her pajama pants down, trying to make it seem rough, and discovered immediate resistance--his thumbs hooking the front of her waistband had only made her pajamas catch up on the shapely dimensions of her rounded bottom. He could hear her sudden intake of breath, could feel her butt slightly jiggle. Hnnnngg, okay damn, stay focused...\n\nAs he aggressively shimmied them down further, his hands occasionally brushing against her impossibly soft skin, Stephanie nearly lost her balance on the padding of the mattress. She twisted awkwardly, her hand flashing out to land on the top of his head for balance.\n\n\"S-sorry,\" she said quickly, exposing a wavering smile.\n\n\"S'cool,\" letting his eyes wander over her incredible legs as he steadied her so that she could step out of the pant legs one at a time. Her nightshirt covers to her mid-thigh, but still, seeing these limber legs and knowing she's bare now all the way up to her panties...\n\n\"That was, I dunno, not very rough,\" Kelly judged, sounding disappointed. \"You didn't even slap anything.\"\n\n\"Th-that's okay,\" Stephanie said. Sitting back down on the bed with exaggerated care, she looked quite a bit more vulnerable without her pajama pants, but wore an excited smile now instead. \"...It was just fine.\"\n\n\"So, uh, truth, Stephanie? Or dare?\" Brian asked, adjusting his pants suspiciously and returning to his seat on the edge of the bed.\n\n\"Dare,\" Stephanie said quickly. \"I'll, uh, you can dare me to do anyth--um, any dare that you choose, I'll... try to do.\"\n\n\"Okay then,\" Brian said. \"I dare you to show me... how you feel about me, without telling me. How you do it, or what you do, is up to you.\"\n\n\"To... show you?\" Stephanie asked, biting her lip. \"Like daring me to... attack you?\"\n\n\"Attack him?\" Kelly echoed. \"The hell kind of relationship do you two actually have?\"\n\n\"Yeah, you have to show me. Like, for instance; I gave my buddy Emily this same dare when we were playing a few years back... So she strides up to me, turns and like, bumps her butt into mine, turns again and cuffs me on the shoulder with her fist, and then gives me the goofiest wink and thumbs up you've ever seen.\" He flashed a dramatic thumbs up, snapping it in close to his chest and jutting his elbow out as he winked at Stephanie.\n\n\"Pfft,\" Kelly snorted. \"I really do want to meet her now.\"\n\n\"It was hilarious, had us all in stitches. Was one of our inside-joke things to do for ages, 'til Chloe put a stop to it.\"\n\n\"I don't think I can beat that,\" Stephanie giggled, \"But, okay, um, I can try...\"\n\n\"Do you want me to stand up for this?\" Brian asked, beginning to rise.\n\n\"No, no... you're fine right there, just as you are,\" she said, motioning him back down as she crawled across the bed towards him. \"Okay, um, here goes.\"\n\nWith a shaky exhalation, Stephanie paused beside him on the bed, still on her hands and knees. The look she was giving him was seductive, in a roughly-hewn, unpolished way. There was fascination and excitement dancing in her eyes as she earnestly admired his body, and as their gazes met the glow of her smile made his heart start racing. Wordlessly, she slid a long, bare leg over his lap and straddled him, settling her weight down atop his body. Before he could collect his thoughts or stifle his reaction, he felt his dick swelling insistently, pushing forward through the wrinkles of his pant-leg to blossom into a full-on erection. Thankfully, it wouldn't be noticeable to Stephanie--yet, anyways. \n\nMost guys became practiced at hiding hard-ons throughout their life, and Brian was no exception. With a subtle cant of his sitting posture, his penis was pressed into his inner thigh as it grew, inching its way turgidly towards his knee. Held in place by tactile tension alone, the tiniest movement would have it springing free and rising right up into Stephanie's panties, and Brian froze completely still. I'm definitely in trouble.\n\nAll the while Stephanie, oblivious to the turmoil she was causing, squeezed Brian into a tight embrace, arching her back and smooshing her chest against him. These small shapes, no more than handfuls, hadn't made much of an impression on him until this moment, but now he couldn't stop thinking about them, about the sensation of those pert little peaks upon him. He realized, almost too late, that she was hesitating, her face just beside his neck, and he couldn't help but gulp.\n\nI'm in so much trouble. If she tries to start kissing me here, I'm gonna... He imagined himself grabbing her buttocks, hands indenting into that perfect ass, and grinding her forcefully against him in a press of half-naked bodies. Mashing her perky little tits against his chest, rubbing up against her through in a tremor of lust that would only lead to...\n\nBut the moment of danger passed and Stephanie leaned back, shifted herself carefully out of his lap, and stood.\n\n\"Uh, I... sorry,\" Stephanie apologized, turning away and hiding her face. \"I, was just uh, I went with my feelings. I don't think it was quite as memorable, but... that's kinda how I feel, a little bit.\"\n\n\"No, no, that was great,\" Brian protested. \"It, um--\"\n\n\"Yeah, looks like it was plenty memorable,\" Kelly remarked, staring. Follow her line of sight, he realized immediately that a prominent bulge had defiantly appeared in the neat lines of his dress pants. He hurriedly tucked himself back down again, giving her a strained smile. Stephanie hadn't noticed it, thankfully, but he'd almost rather that she had seen it rather than Kelly.\n\nBig trouble...\n\n<center>\u2022 \u2022 \u2022</center>\n\nKelly just loved erect cocks. She unabashedly loved their phallic shape, the way they rose up to rigidity, and most of all, their potential for pleasure. She was drawn to even the idea of dicks, to their sweet juxtaposition of degenerate vulgarity and masculine magnificence. As the night pressed on, so did her craving for one, that carnal desire to get brutally fucked by one; really reamed, the kind of violent sex that had her legs quaking and filled the inside of her head with flashes of red light.\n\nAnd Brian has a hard-on, right now. It wasn't obvious. He was more clever than most in how he hid it. Even glancing toward him now, her eyes discreetly searching across his entire form with her peripheral vision, there was no obvious tell anymore, no bulge or tent pitched in his pants. But now she knew.\n\nHe must've been tucking his cockhead up into the elastic of his boxers, or pressing it down into his pant-leg... or something. And I'd have been none the wiser if he hadn't gotten cocky and dared Steph's feelings out into the open, she thought, slightly smirking.\n\nShe'd fully intended to give the stubborn geek an erection all night. Had began to worry, even, that despite his good looks and skilled hands, he was somehow still too socially and sexually primitive to raise a rocket in this situation. She'd been very pleased to discover he'd been concealing the towering shape of a pretty impressive space-flight rocket all this time, packed with thousands of pounds of thrust and undoubtedly with all the force he needed to achieve escape velocity.\n\nThat hidden hard-on was a thrilling representation to Kelly, a manifestation of all the effort she'd put in planning her questions and guiding these geeks on the right course. Despite Brian's attempts at seeming disinterested in taking things further, at staying detached and psychological... he was really getting involved, now. He was being drawn into the game deeper and deeper, emotionally and physically, and every turn he continued playing he was becoming further invested. Her provocations tonight hadn't been in vain; she finally, finally had a healthy response. Of course, she wasn't going to be satisfied with just that. \n\n\"Kell? Kelly?\" Brian's voice startled her out of her reverie.\n\n\"Hmm?\" Kelly answered, realizing herself and fighting to keep her eyes from dancing down his naked chest towards his crotch.\n\n\"She's askin' you,\" Brian said, nodding towards Stephanie.\n\n\"Truth or dare?\" Stephanie asked Kelly.\n\n\"Dare, of course,\" Kelly said, stretching her arms out. \"I feel lucky.\"\n\nThe blonde-and-pink-haired girl hesitated, frowning, before something she wanted to ask occurred to her.\n\n\"I dare you... to tell me a secret,\" Stephanie finally decided.\n\n\"That's kinda daring to tell a truth again, isn't it?\" Kelly complained, looking towards Brian for a verdict. Besides, where to even begin? Should I tell her that Brian got wood 'cause of the way she was sittin' on him?\n\n\"Well... it's a little different. She's not asking you for any specific truth, so it's hard to call it a truth question. She's daring you to tell her a secret, but leaving it up to you what you decide to tell her. You could reveal some shocking thing from your past, or you could end up telling her you don't actually like mayonnaise, something trivial like that. It's clever, a good psychological question, I like it.\"\n\n\"Fine, whatever,\" Kelly shrugged, rising out of the easy chair to bounce her bottom onto the bed directly next to Stephanie. \"Are you ready?\"\n\nStephanie nodded seriously, leaning in so that Kelly could whisper her secret.\n\n\"This weekend, one night or another... the three of us are all going to fuck,\" Kelly confided.\n\n\"Th-that's--!\" Stephanie exclaimed, blushing. \"That isn't, that's not a secret!\"\n\n\"Oh?\" Kelly responded in surprise. \"It's not? You mean, you already knew...?\"\n\n\"N-no! I mean, it's not a secret, because it won't happ--because it's not going to happen. If it's not real, I don't think it can count.\"\n\n\"Oh, it's definitely going to happen. But don't tell Brian yet. I want him to be surprised, okay? Surprised by our little secret.\"\n\n\"I--I could never tell him that,\" Stephanie replied, horrified. \"I mean, I-I couldn't even if I wanted to.\"\n\n\"That's fine,\" Kelly chuckled. \"Secrets lose their value, their power, when more people know them, you know? Stretched between three or four people, a secret becomes gossip. Spread thin between ten or twenty, it's just baseless rumor, right? My turn asking Brian now? Truth or dare, Brian?\"\n\n\"...Dare,\" He decided. \"I don't get to know the secret?\"\n\n\"By the time you find out, it'll be too late,\" Kelly said cryptically, pausing a moment to deliberate her question for him. There were any number of dares she could use that fit her objectives, but the hornier she got, the harder it was not to simply choose the rather direct ones.\n\n\"Okay, whatever. I dare you, kiss me,\" she challenged, looking quite pleased with herself. \"This isn't a psychological question for you--I don't want to see what you'll do given a choice. I don't want you to be a gentleman, and I don't want you to give me some dainty little kiss on the hand. Kiss me, on the lips, open-mouthed, really kiss me.\"\n\n\"That's... uh, well that's a pretty big dare,\" Brian said uneasily, glancing towards Stephanie.\n\n\"Uh, no, not really?\" Kelly said. \"It's actually like, probably the most commonly dared thing in the history of the game, ever? How about it, Steph? Acting as our impartial judge here, is this dare... unfair?\" It is a psychological question, but not for Brian. How do you feel about me swapping spit with your little beloved on a dare, Stephanie girl?\n\nKelly shifted on the bed, bouncing over closer to Brian now. He was wearing an interesting, difficult-to-read expression. He didn't really look pleased, but nor did he look particularly reluctant. Maybe a little nervous? Perfect.\n\n\"Uhm, h-how long, uh, how long would the kiss be?\" Stephanie asked weakly. That's so cute. She's not gonna just okay it, but she isn't brave enough to voice opposition to it yet, either. Am I still not pushing her enough?\n\n\"Just long enough, I guess,\" Kelly answered, tapping her lip thoughtfully. \"Longer than a little peck... and shorter than us starting to date, excluding you from our lives, and bullying you in middle school.\"\n\n\"Th-that's not funny,\" Stephanie stammered, shocked.\n\n\"But that's what you were worried about, isn't it? I'm just tryin' to have fun tonight, I'm not trying to leave you out of anything, Stephanie. Tell you what, I'll even compromise this time. How 'bout a double-dare; why don't we all have a three-way kiss?\"\n\n\"A three-way... kiss?\" Stephanie asked, dumbfounded.\n\n\"Interested?\" Kelly prompted, \"I mean, they're not really as intense as one-on-ones, 'cause there's no room to tilt our heads and get into it. But at the same time, three-way kisses have a certain intensity of their own, you know?\"\n\n\"Do I get a say in any of this?\" Brian asked, giving them a dubious look and being ignored. \n\n\"Or would you prefer to just watch us kiss this time, Steph?\" Kelly asked, her eyes glimmering with excitement. \"Last time it was Brian watching you while I made you feel good, now the tables'd be turned. Have you ever really seen people making out close-up, in person? It can be pretty hot. Or are you the type of girl who politely looks away when others are intimate? Do you... want to see? Or, do you want to join? Take your pick.\"\n\n\"...I'll watch,\" Stephanie decided after some difficulty.\n\n\"Suit yourself,\" Kelly said flippantly, and traced her fingers along the straps of Brian's shoulder holster rig before gripping him by the shoulders.\n\n\"Come at me whenever you're ready,\" Kelly invited, glancing meaningfully across his broad shoulders and then down his bare chest. Then she closed her eyes, slightly pursed her lips, and waited. For a long moment there was nothing, just a silence of anticipation and expectation, a serene void. \n\nOhhhh. Ohh, here he is. Ahh..ohh?! When she felt his lips, she responded, eagerly latching onto him as though he was her lifeline. To her surprise and dismay, she quickly realized that despite all of her confidence and posturing... she was not in control of this kiss. That dizzying, falling sensation had returned, and her innate sense of superiority to these hopeless geeks wavered and then finally began to plummet.\n\nWon't you please just... fuck me already? She began to beg through their kiss, coiling around him and trying to suck his tongue into her mouth. She wouldn't be some higher, celestial being that casually enticed the simple mortals beneath for much longer, she was descending. Shedding her facades and pretenses, her every nerve desperately screaming down through this geek's atmosphere for more. More sensation, more release, more freedom, an overwhelming, aching need to accelerate and advance this destructive crash of their mouths into more than just a kiss.\n\nPlease, just... please?! Kelly was mashing her lips anxiously against his now, frenching him rough and hard. A kiss hurtling with a primordial, insatiable need, more sloppy and impatient than she'd been even when she was a horny teenager. I'm... I'm a good kisser, why am I...? Kelly tried to think, but she was close, so close to this intense impact, that she couldn't stop herself.\n\nScorching lust was burning away at her body and her mind was shrieking with red light. Down towards Brian, closer, closer--a trembling shiver rocked her body as she kissed him, tongue sliding across his in a trail of molten red fire. Close, so close...! That urgent, imminent feeling, the building anticipation for a sudden and breathtaking collision within her had her writhing uncontrollably--\n\nAnd then Brian pushed her away, gasping for breath, and Kelly's mind was sent tumbling, disoriented. Her red-hot meteor of desire had been subverted, mere moments before crashing down in a world-changing detonation, and Kelly felt like her mind was slingshotting all the way back into orbit.\n\n\"Wh-why?\" Kelly panted, realizing her chin was damp with drool. \"Why'd you stop?\" I was so close! In the dim light of just the tableside lamp they were all seeing by, no one noticed the three vibrant locks of bright red now streaking through Kelly's black hair, just behind her right ear.\n\n\"You were 'bout to suck the life outta me,\" Brian explained. \"I mean, damn. If we didn't stop there, we would've... well, things would've definitely, uh, exceeded the dare, that's for sure.\"\n\n\"So?\" Kelly pouted, running a fingertip over her lips. \"Dares are like, guidelines, not hard rules. Once the deed is done, it doesn't mean we can't keep goin'.\"\n\n\"I'm sure Steph doesn't want to see that,\" Brian said.\n\n\"She might? What do you say, Stephanie?\"\n\n\"It's, ah, it's not my turn, I don't have to answer,\" Stephanie giggled, looking flushed, and she inched back from them. Was she that close to us when we started kissing? Well, she doesn't even seem jealous. \"Whether or not you keep going is up to Brian, isn't it? It's his turn to ask you, now.\"\n\n\"Whew, I'd almost forgotten. Dare,\" Kelly decided, not even giving him an opportunity to ask. \"C'mon, gimme a really good one.\"\n\n\"Well... I have one that's not all that great now, but could be really good tomorrow,\" he offered.\n\n\"Oh?\" Kelly asked, quirking an eyebrow. \"Alright, well... sold. What're you daring me to do?\"\n\nBrian stood up, stepping closer, bent down... and retrieved the shipping box Kelly had been interested in earlier, placing it in her lap.\n\n\"Wear this at the convention tomorrow.\"\n\n\"Are you serious?\" Kelly lit up, holding the box as excitedly as a Christmas morning present. \"Isn't it all... super fuckin' expensive?\"\n\n\"Well, no one's gonna want to buy it from me if they can't see what it looks like, right? You'd be doing me a favor by modelling it for me. If anyone compliments you or ask about it, just mention that it's for sale, see if you can get a good offer for it, or at least like, three hundred.\"\n\n\"I mean I guess, but... are you really sure? Aren't you afraid I'm gonna like, run off with it for myself or something?\" With this, with the convention pass, and the room... aren't you a little too generous and naive, Brian?\n\n\"By all means, run off with it, then,\" Brian countered. \"If a pricey dress means more to you than a friend, well, then I'll know exactly what to think, right?\"\n\nKelly felt her mouth go dry. Before today, she would have still considered him a sucker for trusting her so blindly. Now that she was within his gravitational pull, that invisible mass shadow that seemed to draw her full attention towards him, she understood his intentions more completely.\n\nThe dare isn't about the dress, Kelly thoughts, realizations coming together like a constellation pattern in her mind. He knew I'd wear it. It's a gamble, a test. The dress is just collateral, and he's wagering on... on me. Even though I could bail on him tomorrow, take this expensive outfit for free, and laugh at him for it all I want. Yesterday, I would have.\n\nFuck, Kelly thought, frowning. What changed? Why is everything all so different now, getting so complicated...\n\n\"Um, uh, what is it it?\" Stephanie asked, crawling across the bed so she could get a closer look.\n\n\"It's... a costume that he'd bought for his ex,\" Kelly explained, carefully passing her the box.\n\n\"It was gonna be a surprise for her, it's a gothic lolita dress,\" Brian clarified, wincing. \"But obviously...\"\n\n\"That's so cool,\" Stephanie said, reading the invoice. \"Kelly... you're going to look amazing. You'll wear it tomorrow? I can't wait to see how it looks.\"\n\n\"I... yeah,\" Kelly confirmed, her guilty expression fading away. \"I'll take it... the dare, I mean. For sure. Thanks, Brian. Really... thank you.\"\n\n\"Hey, no guarantees that it'll be comfy or anything. You're Chloe's height, but you're a bit more, uh, well-proportioned, than her, and I don't know if the fitting'll be as simple as just unbuttoning part of the bust or something. Ah, anyways, it's your turn to ask Stephanie,\" he said, gesturing.",
        "\"I, um, I think I'm ready,\" Stephanie said, facing Kelly and appearing to muster her courage. \"For a dare this time.\"\n\nI dare you to fuck him, Kelly thought immediately. No, wait. Dare you to put your fingers somewhere inside of me, is that fuckin' psychological enough? Dare you to pull Brian's cock out and give him a sloppy blowjob. To finger yourself. Talk dirty to us and moan. Threesome, right now. The thoughts careening around her head were a helplessly wheeling red starscape and for a moment Kelly felt like she was spinning adrift.\n\nOkay, no. No, Kelly decided. She needed to calm down, Brian had been right earlier. If she gambled too big, she risked having Stephanie fold, or put her on guard and only pick truths. There has to be a proper progression here, that puts us all in just the right position for what needs to happen...\n\n\"Alright then, come here,\" Kelly said, leaning forward in excitement and motioning Stephanie forward. \"I've gotta whisper it to you, we don't want Brian to know just yet.\"\n\n\"Is it another secret, is that, uh, is that the dare...?\" Stephanie asked hopefully.\n\n\"Just c'mere,\" Kelly laughed, realizing she was still sitting directly between Stephanie and Brian. \"And Brian, you shoo away further, go on.\"\n\nStephanie crept forward in trepidation and crouched upon the bedspread, and Kelly leaned in close, cupping both hands to the shy girl's ear.\n\n\"I dare you... to go into the bathroom and take off your panties,\" Kelly whispered, as quietly as she could. \"You're not allowed to put anything else on. Ball 'em up in your hand, come back out, and... give them to Brian to keep.\"\n\nBewildered, Stephanie slowly turned to regard her, eyes wide with shock.\n\n\"Hey now,\" Brian interrupted. \"I get that you want to be all secretive and whatnot, but how can I decide if your dare's unfair or not unless I hear it?\"\n\n\"You hush,\" Kelly muttered, grinning wickedly. \"Well, Stephanie? It's unfair, but is it really too unfair?\"\n\n\"Um,\" Stephanie swallowed. \"It's just... I don't know, uh, if I can do it.\"\n\nCupping her hands back around Stephanie's ear, Kelly began to whisper again. \"I know you can do it. It's nothing but this token gesture, you know? Maidens in waiting giving their gallant knights favors before a battle, and all that. It's like a tradition, an act of courtship.\" Seeing that Stephanie was still unconvinced, wavering with uncertainty, Kelly pressed on.\n\n\"And, you know, he'll love it,\" Kelly whispered, \"To you, they're just underwear, but to him they'd symbolize, like, your sexuality. Your trust, and your affection for him. Of course, I guess you don't have to do it if your unmentionables right now are some fifty-dollar frilly lingerie or something. I don't know what you're wearin', after all. Just remember, it's one thing to be stingy with giving away expensive undergarments, and entirely another to be stingy with your feelings... right?\"\n\nWith that Kelly stopped whispering and leaned back, giving Stephanie a look of expectation. \"Well? That's the dare. Is it too much for you to handle?\"\n\n\"That...\" Stephanie hesitated. \"Is that okay, though, I mean, I'm just wearing a nightshirt...?\"\n\n\"What's the dare?\" Brian asked, curiosity eating away at him.\n\n\"You'll see,\" Kelly said. \"Probably. Or, maybe this is it, and our little Stephanie's going to disappoint you.\"\n\n\"Disappoint me?\"\n\n\"I... don't know if I can do it,\" Stephanie admitted, appearing to steel her nerves as she stood up. Her entire face was red she was blushing so furiously. \"B-but, but I'm going to--I'm going to try.\"\n\nThat's my girl, Kelly thought, nodding in approval as Stephanie entered the bathroom and closed the door.\n\n\"What're you having her do?\"\n\n\"You'll see,\" Kelly said brightly. \"Dunno how long she'll take, though. Make-out intermission? Or hey, maybe a massage?\"\n\n\"Kelly, look... it's pretty clear what you're trying to do here.\"\n\n\"Yeah? So?\" Can you even complain about it?\n\n\"I really don't want Stephanie pushed into everything this fast,\" Brian said. \n\n\"She might end up regretting it.\"\n\n\"That's up to her,\" Kelly said, not relenting in the slightest. \"She can stop and quit this game anytime she wants. Kiddie gloves off, remember? Besides, regretting a mistake can teach you a lot of different things in life, in a lot of ways. Regretting a missed opportunity, though, that only ever teaches you one thing.\"\n\n\"You know, you're really--\" Brian gave her a playful scowl, but left the sentence unfinished, running a hand through his downy hair and glancing at the tableside clock. \"What a night. Can't believe how long we've actually been playing, it's way past midnight already. We need to wind this game down soon, so we can--\"\n\nBefore he could finish, the bathroom door opened and Stephanie stepped out. She stepped forward strangely, using a halting, awkward gait. One hand seemed to be nervously clutching the bottom edge of her nightshirt, holding it in place against her thigh. Fuck me, she really did it. Atta girl!\n\nShe stopped when she reached Brian, holding out her other hand in front of him. It was trembling, and he looked at her in perplexed confusion for a moment before realizing she was trying to give him something.\n\nHe opened up his hands, and she dropped a folded bit of cloth, still warm, into them. He stared at them, dumbfounded for a moment, before looking back up at Stephanie.\n\n\"They're my panties,\" She explained, clamping her free hand over her mouth then in embarrassment. \"The--the ones I was wearing. Th-they're for you to keep.\"\n\n\"...Seriously?\" He unfolded the panties in astonishment, unable to keep his eyes from flicking to her other hand nervously smoothing her nightshirt against her leg. They were cute, bikini-style dark gray panties, with a solid black waistband, and Kelly watched with interest as Brian plucked his fingers at the tiny decorative bow on the front of the band.\n\n\"Thank you, really... uh, damn. To keep? Thank you. But you didn't have to go this far for me, Kelly's pushing too--\"\n\n\"I know,\" Stephanie interrupted, sitting on the bed with exaggerated care. \"I made my own decision, I... wanted to, I want you to have them.\"\n\n\"And that's how it is!\" Kelly sang out triumphantly. \"Stephanie's turn to ask Brian now, I can't wait to see what'll happen.\"\n\n\"Truth or dare, Brian?\" Stephanie asked, apprehensively fretting with the hem of her nightshirt. The garment barely seemed to cover her thighs.\n\n\"Dare,\" he answered, looking from Kelly to Stephanie uneasily.\n\n\"Okay. I dare you...\" Stephanie said, visibly gathering her courage, \"...to go down on me.\" \n\n\"You dare me to... what?\" Brian choked in surprise and disbelief. \"Sounded like you just dared me to...\"\n\n\"What the fuck did she just say?!\" Kelly burst out, eyes wide.\n\n\"I, um... I dare you,\" Stephanie mumbled, confused. \"Today at the convention you said, that, uh, if I ever wanted you to g-go down on me, all I had to do was ask?\"\n\n\"Christ, you said that?\" Kelly snapped her attention back to Brian, baffled. \"The fuck happened to all the blah blah we need to take things slow?\"\n\n\"I, uh,\" Brian said quickly, bewildered. \"That was... Stephanie, you're daring me to go down on you?\"\n\n\"It's okay if you can't, can't um, do it for real,\" Stephanie added in a reassuring tone, seeming alarmed by their reactions. \"I just th-thought, that maybe, since you offered, may-maybe I should ask...? To see what you would do?\"\n\n\"Oh, he can definitely do it for real,\" Kelly exclaimed excitedly. \"This is the kinda dare I've been wanting all night. Awesome, Steph!\" She enthusiastically gave the muddled shy girl a high-five.\n\n\"What do you mean?\" Stephanie asked, looking at the girl strangely.\n\n\"You're really going to allow this dare?\" Brian asked, shooting Kelly a meaningful look. \"Come on, that's... she doesn't really... it's obviously going way too far.\"\n\n\"Well I'm not gonna be the one to shoot her down--hell, I'm proud of her. Are you gonna back out now, after she worked up the courage all night to ask you that? I mean, can you imagine how that'd make her feel...?\" Kelly couldn't contain her exhilaration at the turn of the events and immediately situated herself beside Stephanie. This girl just saved me so much time tonight...\n\n\"Let's just get this out of the way then, okay?\" Kelly cooed, grasping the edge of Stephanie's nightshirt and lifting it up to expose luscious pale thighs. \n\n\"W-wait! What are, you're, uh?! What are you do-doing?!\" Stephanie exclaimed in surprise, stopping the girl's hands.\n\n\"Okay, c'mon, Kelly,\" Brian said, waving his hands. \"She doesn't really, you know... realize what she asked, what it really means. There's no way.\"\n\nThe scene girl seemed to pause, quirking her lip as if just now considering that possibility. Gee, do ya think? I'm not as dense as you weebs.\n\n\"Hmmm... give us a minute?\" Kelly relented, sighing loudly. \"I'll check with her, and really make sure she understands, okay?\" \n\n\"Okay... yeah,\" Brian said, crossing the room and giving them a bit of distance.\n\n\"Here, sit with me like this,\" Kelly instructed in a hushed tone, glancing over her shoulder to make sure Brian wasn't looking. The scene girl sat back against the bed's headboard and opened her legs, helping Stephanie sit cradled between them. \"Okay, now lean back and put your knees up and together in front of you like this...\"\n\n\"But, uh?!\" Stephanie protested, fearfully trying to flatten the nightshirt against her thick thighs. It was futile; with her knees raised in front of her, even though her calves hid her naughty bits from view, there was plenty of naked thigh and butt to be seen.\n\n\"It's fine, don't worry 'bout it,\" Kelly comforted her, adjusting until they were both comfortable. Damn, I could just start kissing and biting her neck again like this.\n\n\"...Kelly?\" Stephanie whispered nervously. \"Brian uh, well, guys can... actually 'go down' on girls?\"\n\nHiding her cheshire grin by burying her face into the pink-streaked blonde tufts of Stephanie's hair, Kelly composed her wickedly gleaming red thoughts and squeezed the other girl's shoulders. \n\n\"Someone told me today,\" Kelly said slowly into Stephanie's ear. \"That luck... is when preparation meets opportunity. Does it really matter whether you knew what you asked or not? We've been preparing you for it all night long. And now, you've opened up this amazing... opportunity.\"\n\n\"Do you wanna get lucky?\"\n\n<center>\u2022 \u2022 \u2022</center>\n\nThere's no way she actually meant it, Brian told himself, trying to push the thought out of his mind. Holding each other, kissing, and even taking clothes off for dares is one thing, but this is...\n\nOf course, it was inevitable that he'd imagine it, at least. He had met Stephanie's vulva face-first in a collision of bodies that had him sprawled out on the ground in the middle of the crowded convention floor. That was how he had first met this girl.\n\nIt hadn't ended there, thankfully. She'd joined him for lunch, flirted and kissed with him, traversed the convention center together for a while. Now she was in his hotel room, daring him to eat her out? He absolutely harbored a strong attraction to her, on many levels, and his mind had idly wandered back to that brief but point-blank introduction to her panties and the plush shapes of her inner thighs all day long.\n\n\"Alright, uh, what are we doing?\" Brian asked awkwardly, somehow getting an ominous feeling.\n\n\"Go on, tell him, Steph,\" Kelly prompted.\n\n\"I dare you, uh, to go down on me,\" Stephanie said, biting her lip and watching him intently.\n\n\"...Do you really understand what you're asking me to do?\" He asked.\n\nStephanie was trying to keep her face composed, but he saw the minute tells of several different expressions coming and going. A vulnerable-looking uncertainty in her eyes, a tiny flicker of the space between her brows creasing, a twitch of her lips.\n\n\"I dare you to go down on me,\" She repeated firmly.\n\n\"You...uh, well, okay,\" he said, flabbergasted.\n\nHe could see the naked outer edges of her thighs curving beautifully out into that curvaceous butt, and if she shifted those defensively drawn legs of hers in any direction, he would see her uncovered intimate places from behind her lovely ankles. He struggled to keep his calm and not stare intently, but it was futile; every graceful line of her slightly shaking body was drawing his eye back.\n\nFlashing a devilish smile, Kelly slipped her hands up Stephanie's knees and pried them open... or tried to; Stephanie flinched at her touch but her legs were firmly locked and didn't budge in the slightest.\n\n\"H-hey,\" Stephanie exclaimed, dropping her voice to a feeble whisper. \"I'm, not, I'm, you know... Kelly, I'm not wearing any panties...\"\n\n\"Uh, yeah,\" Kelly acknowledged. \"Isn't that kinda the point? It'd be pretty tough for him to go down on you if you were still wearing panties, wouldn't it?\"\n\nShe still has no idea what going down on someone means, Brian realized, stifling the urge to smack his forehead down into his palm. Wasn't Kelly going to explain? No... no, of course not.\n\n\"Uh? Yeah, I... yes, sorry,\" Stephanie mumbled, blinking. \"So he'll... see my...?\"\n\n\"Guess he doesn't have to,\" Kelly conceded. \"S'your dare, you want the lights out for this?\"\n\n\"Steph...\" Brian asked, feeling a strange sense of crisis. Why does this suddenly feel less like truth or dare and more like some hostage situation? Do I need to rescue Stephanie?\n\n\"Hhh-hh-I'm-okay,\" the girl exhaled distressfully, her face flushed red. \"It's fine, I-I'll want to see, too. I'm okay. I just, um, give me a minute. I can do this.\"\n\n\"C'mon, then, Brian,\" Kelly's grin only grew wider. \"Get over here and tongue this girl's twat.\"\n\nHe'd been about to speak up in protest when with a shiver, Stephanie's knees twitched and reluctantly pulled away from each other. Slowly, shakily, she spread her legs the rest of the way and opened herself up to Brian's view, her eyes locked steadily on his. It was hard to tear himself away from her gaze to look down towards what she was revealing to him... but of course, he did.\n\nThe lush, plump shapes of her raised thighs drew his eye immediately to the juncture between them, and as she splayed her legs there was a faint wet sound from her slightly parting lower lips in the shocked silence of the hotel room.\n\nAbsolutely fucking amazing.\n\nThough Stephanie's pubic hair was untrimmed, it really wasn't much more than a faint blonde peach fuzz forming a messy halo just above her vulva. Her pale skin looked impossibly soft and inviting to the touch, and her blushing lips revealed the lovely pink of her inner labia. She was very obviously aroused, and the slick line of wetness between her lips reflected light from the tableside lamp.\n\nRealizing he'd been admiring Stephanie appreciatively for a few moments, he gave her a reassuring smile as he knelt on the bed in front of the pair of girls.\n\n\"Yeah, uh, damn. Looks like she's ready to go, for sure. Hope you know what you're doin' down there,\" Kelly remarked, grinning. Stephanie's smile wavered, and she covered her face with both hands in embarrassment.\n\n\"I'll figure it out,\" he answered casually. He was honestly just as confident in his cunnilingus as he was in his massages--and for the same reasons. Chloe's libido had been tempered thoroughly by her socio-political ideas, but she always managed to feel empowered by him going down on her. More and more so, in fact, the more experienced and proficient he became at it.\n\n\"Are you really ready?\" he asked, trying to keep his own excitement out of his voice. \n\nStephanie quickly nodded, peeking through her fingers.\n\n\"Okay,\" he said heavily, taking a deep breath and pausing to gauge her reaction. \"You want me to stop, for any reason, just, I dunno, say something, tap my head, or-\"\n\n\"I'm okay,\" Stephanie said bravely, trembling a little at being so intimately inspected. Her small chest was rising and falling with her every breath. \"Anything you do, I'll, uh, I'll be okay.\"\n\nHere we go. Positioning himself on the bed, he settled comfortably between her knees, and then rubbed his cheek intimately up the inside of her leg. When that coarse but not-quite-stubble on his face made contact with her inner thigh, Stephanie stiffened, and when he began to roll his lower lip against her, wet her skin, pinch it between his lips, she couldn't help but squirm. Nibbling and kissing and teasing his way across that exposed expanse, he slowly made his way closer to the blushing pink folds within her labia, already so wet they glistened.\n\nAs he neared it, delighting in the uneven panting that escaped Stephanie, he held back, pursing his lips and blowing a warm breath softly over her. She spasmed, releasing a startled noise, and he could see her clench and flex with a wet sound right before his eyes. Grinning, he resumed his playful kissing upon her opposite thigh, touching down onto that soft, pale skin and eliciting a whimper of frustration and excitement from the girl.\n\n\"Alright, uh, ease up there, I think we're more than ready for ya, you know?\" Kelly interrupted impatiently, as she peered over Stephanie's shoulder in fascination.\n\n\"Don't wanna rush it, though, either,\" Brian said, looking up and offering a playful smile. \"I want her to enjoy it.\" Stephanie's eyes were clouded and fluttering as she gazed down at him in wonder.\n\n\"But... guess you both want to get on with the game, huh?\" Flashing them a lopsided smile, he lowered himself back down and kissed her directly.\n\nWet. It was one thing to see it, and entirely another to feel her arousal, warm and slippery on his lips, to press a kiss into her softest and most intimate of places. He heard her sudden intake of breath and felt a jolt of surprise travel down her legs. Brian opened up his mouth and gently let his tongue explore, beginning to play along her in languorously slow laps. Her taste, musky but not unpleasant, filled his mouth as he kissed her, and he drank in the subtle nuances and reactions of her body.\n\n\"Ohhhh... ohh-god, Brian,\" Stephanie mumbled. Was she really dripping with wetness like this? The red flush of Stephanie's engorged lips, her ragged breathing, and that dazed look in her eyes led them to think this situation had already spiralled well out of Stephanie's control.\n\nThat's okay, though. I've got her. Enjoying himself, Brian leisurely mapped every bit of her with his tongue. He discovered that enticing place of hers he could ease his tongue into, and let it sink deep inside of her, causing Stephanie to let out a ragged gasp. With care he tenderly played around the shape of her clitoral hood and the tiny bud therein, which he had always thought of as for panic pleasure, but didn't bully it just yet. There were movements that seemed to build up a certain delicious tension within her, and there were motions that seemed to relax her into a state of bliss. Intent on finding all of the individual sweet spots which seemed to send sensation rippling throughout her entire body, he continued, reading all of her subtle reactions.\n\nHope you're ready, Steph, Brian thought, inhaling deeply and gathering his concentration; it was time to start trying to guide her towards climax. Rather than an amateur frenzied licking or frantic stabbing with the tip of his tongue, Brian began to lap at her slowly, steadily, pressing the flat of his tongue against her into a muscular pad.\n\n\"Ah, ah-h, aah, ah?!\" Stephanie responded, immediately slipping out of the sensuous daze he'd lulled her into and trembling as waves of pleasure crashed into her. She rocked her hips in surprise, gyrating them slowly in sync with his own movements. There was something desperate, something delicious about her frantic motions that seemed to surprise her just as much as it did him. I really can't believe I'm doing this, Brian realized, thoughts breaking through his own haze of arousal only with great difficulty. We meet today by accident, an accident right out of an anime gag where she lands sitting on my face.",
        "With broad strokes he tongued her, using slight motions of his head and neck rather than fatiguing his tongue as he persisted, increasing his speed. She turns out to be the sweetest little shy girl I've ever met, makes me wish I'd never wasted those years with Chloe...\n\n\"Ahh-AHHH-ahhh-AHHHH!!\" Stephanie's cries picked up as his tempo rose. \n\nShe even seems to be into me... and now this other girl we just met spends all night trying to make things happen, even now watches with that perverse smile as I tongue-fuck Stephanie on a dare, this is all...\n\n<center>\u2022 \u2022 \u2022</center>\n\nWhat is this, Stephanie wondered, an eerily disjointed thought drifting through the pink haze of fire. My whole head's going straaange...\n\nShe'd thought it had been rather bold and clever, thought that her dare would make Brian bend over her lap and pantomime some sort of going-down motion, whatever that might've been. Kelly would laugh, perhaps make a joke about how it was a shame they couldn't do it for real, and the game would move on. \n\nTo Stephanie's stupefaction, she belatedly discovered that guys could actually go down on girls, and the entire situation had escalated outside of her expectations in a dramatic way. I...I could have stopped, could have explained. But the more I realized it was all actually happening... the less I wanted to stop?\n\nShe peered down again through her fogging glasses at the downy-soft hair of Brian's head nestled between her thighs, lapping at her most private of places. Formerly private, they belonged all to Brian now. In fact, he now knew her places more intimately, more thoroughly than she ever would.\n\nIt was pleasure beyond her ability to express. Brian was wonderfully satisfying an itch she'd never realized she had, and at the same time, drastically intensifying her thirst for more. It was maddening. He was enthusiastically tonguing her naughty, indecent places, her... pussy, and his raw desire for her, this impossibly intimate joining of their bodies, made Stephanie feel sexier than she'd imagined possible. As his steady strokes lashed into her, her hips moved on their own in response and that engulfing pink flame seemed to swallow up her mind.\n\n\"Ah-AHHM-AUUHH-ah-ah-ah-AHHH!\" Stephanie gasped desperately, losing control. Her entire life was burning up. That safe future life she'd envisioned ahead of her was being incinerated; revealed to be so frail and flimsy that it was difficult to even be considered fuel for this fire. Acquiring steady, responsible employment after graduation, focusing her attention only on paying off her loans and stabilizing her life--all gone up in a pink flash of heat and smoke. What would it have mattered how stable my life was, if it was so bleak and lifeless? What cold comfort would financial security be? Any hardship would be an adventure if... if it was with him.\n\nEventually meeting some inoffensive, shy but sensible man and carefully dating him sometime in her thirties, possibly marrying and settling down into some comfortable, quiet life--all a dull mirage rendered to cinders by the flames consuming her. I'd always thought of a future boyfriend as some kind of... faceless, bland, person. Someone distant, someone withdrawn, like me. But Brian makes me feel alive! Even just watching him, listening to him speak, makes my heart race! He doesn't see me as boring and simple. He sees amazing things in me, and he brings those things out of me! And now he's--!\n\n\"She's about to cum,\" Kelly realized in awe, a somehow distant voice in Stephanie's ear.\n\nAt that, Brian abruptly ceased his continuous lapping and wiggled the tip of his tongue frantically into the panic pleasure button--her clit, and triggered Stephanie's orgasm. Her delirious ruminations, already ablaze from that pink inferno within her, were obliterated in the thunderous detonation of a mind-shaking explosion.\n\nRather than stopping, Brian clamped his mouth down upon her and pushed his tongue flat again just below her clit. Changing his bobbing motion to a slight jerking of the head, he slurped his tongue at her as though trying to catch juice rolling down the body of a peach.\n\nStephanie's entire body shook, completely pinning the stunned Kelly back against the headboard. She uttered a final squeak and her legs quivered, kicking weakly. Her pussy quavered, flexing and contracting in the crescendo of pink eruptions that blasted across her consciousness like finale fireworks. Her head awash with light and reeling from the pleasure, Stephanie was knocked completely senseless.\n\n<center>\u2022 \u2022 \u2022</center>\n\n\"Christ, Brian, you mighta blown her brain out,\" Kelly remarked, dazed.\n\nBrian stiffly rose, stretching his shoulders, and wiped his chin with the back of his hand, unable to contain a grin as he surveyed his handiwork. Stephanie had collapsed back against Kelly, and her naked legs still gave an occasional twitch and jerk. Her entire crotch was slick with secretions and saliva, her delicate-looking breasts heaving with each panting breath, her twisted nightshirt dimpled outward with the pinpoints of her nipples. A line of drool went down her chin, and her eyes were glassy and dazed... but none of that was what Brian noticed.\n\n\"When did... Kelly, her hair. When did it...?\" There wasn't a single strand of blonde left to be found in that shoulder-length fluffy tangle of Stephanie's pink hair.\n\n\"Oh my God,\" Kelly realized, eyes widening in shock, yanking a hand out of her own jeans and absent-mindedly wiping them on the comforter. She swore, working her way out from between Stephanie and the headboard. \"I, uh... fuck, I wasn't paying attention... to that, anyways. Dye left over from wearing that headband seeped out even further...?\"\n\n\"I don't think so,\" Brian said, tracing a hand gently down Stephanie's body to slightly spread the girl's thigh. \"Look.\" That tiny patch of Stephanie's pubic hair was also now the same shade of vivid pink.\n\n\"What the--\" Kelly began.\n\n\"Stephanie?\" Brian called, leaning over the girl. \"Are you alright?\"\n\n\"What the hell'd you do?\" Kelly asked, leaning in for a closer look.\n\n\"You were watching the whole time, right? You didn't notice anything... weird?\"\n\n\"I noticed plenty of weird things,\" Kelly rebutted, glancing him up and down. \"You were like, melting muff there. She just came on your face, dude. How'd you do that? I mean, I know how you did it, I've done it once or twice, but never like...\"\n\n\"That's... not that weird,\" Brian said distractedly. \"Her hair's pink, Kelly. All of it.\"\n\n\"I dunno, maybe she has some like, condition or something. Albino?\"\n\n\"Albinism isn't... instantaneous, and as far as I know, it's never bright pink, either?\"\n\n\"Well gee, sorry for not havin' all the answers. You were the one who made her pink. You were the one with her every time it happened, right?\" Kelly pointed out, shifting the rest of the way out from beneath the limp girl. \"Hell, we pretty much know why it happened too. Either it's you touching her or getting her turned on or... something like that.\"\n\n\"I...\" Well, it's hard to argue with that. \"Stephanie?\" Still slightly panting, her eyes were slowly able to flick up and focus on him, but she wasn't able to answer yet.\n\n\"Damn though, uh, fuck having that massage later, can I try getting a little of what she had instead?\" Kelly asked earnestly, \"I don't know that I really even expected anything, but uh, wow, if that feels even a tiny bit as good as it looks...\"\n\n\"I--\" Stephanie croaked between breaths, \"I...\" Still trembling a bit, she'd finally regained control of herself and tried to sit up, a silly smile floating across her face.\n\n\"Stephanie?\" Brian asked again.\n\n\"I... didn't say you could stop yet,\" Stephanie managed finally, breathing out slowly. \"That was...\" Her face still completely flushed and unable to hide her beaming smile, she dreamily met worried gaze.\n\n\"Okay, well,\" Kelly mumbled eagerly. \"Whose turn was it, like, who's asking who next?\"\n\n\"No more turns tonight,\" Brian said, letting out a heavy sigh. \"Stephanie? All of your hair's pink now. And I mean, all of it.\"\n\n\"All... pink?\" She blinked at him slowly for a moment, baffled, before bringing a shaking hand up to hold up one of her pink tresses. A look of concern finally appeared on her face and she looked back at Brian. \"Is it, um... am I... pretty now?\"\n\nThat's all you're worried about? \"Steph, you're beautiful.\"\n\n\"Kiss me,\" she exhaled. \"Please...?\"\n\n\"What?\" Kelly protested, drawing closer to them. \"No, no, hold on. We don't have to stop playing here, we can go a little bit further, can't we? Orrr, we could do... other... stuff?\" \n\nAs Brian knelt down upon the bedspread and lifted Stephanie's chin gently with his fingertips, he could feel Kelly beside him, tracing her hand down his side and across his naked back, her fingers plucking at the leather strap of his shoulder holster. How did everything get so... crazy tonight?\n\nThen he was kissing Stephanie, and he once again forgot about his misgivings. Earlier in the day her kisses had been energetic, excited; but now it was very different. A relaxed, languid and wet exchanging of tongue and slow, erotic slurps. He barely even registered that Kelly was drawing closer, slipping her hands around him. Stephanie's still... completely naked from the waist down, he remembered, feeling his painfully erect dick surge in response to their kiss. She... we could...\n\n\"No, no, not tonight,\" Brian said, snapping upright with difficulty. \"Things are... things would get way out of hand.\"\n\n\"I'm okay with way out of hand,\" Kelly said earnestly. \"And Stephanie, well, she's lovin' way out of hand, from the looks of it.\"\n\n\"I... look, it's almost one in the morning already, we've been... it's been... we don't know what's going on with the hair color thing, and it's gonna be a busy day tomorrow. I'm out. I'm conceding, I'm out of the game.\"\n\n\"If Brian's not playing, then... I'm finished playing too,\" Stephanie decided. \"But, um, it was great, really. It was so much fun.\"\n\n\"So I win,\" Kelly realized, letting out a bitter chuckle. \"Well, really, Stephanie won, but... okay. Us all cuddling up together tonight'll be my consolation prize. And maybe more?\"\n\n\"Can I... put my pajama pants back on?\" Stephanie blushed, remembering she was still naked from the waist down.\n\n\"Yeah, let's all get ready for bed,\" Brian decided, giving her a hand up so that she could wobble unsteadily over towards the alcove with the sink and the mirror.\n\n\"Brian...\" Kelly mumbled, face awash with frustration. \"Are we all really okay with ending things here like this?\"\n\n\"Nothing's ending, Kelly,\" Brian said. \"We're just getting some sleep. This was all only the first day of the convention, you know? AnimeCon runs all weekend.\" "
    ],
    "authorname": "FortySixtyFour",
    "tags": [
        "drama",
        "anime convention",
        "masturbation",
        "oral",
        "cunnilingus",
        "first time",
        "truth or dare",
        "humiliation",
        "mind control",
        "cosplay"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/anime-convention-harem-ch-08"
}