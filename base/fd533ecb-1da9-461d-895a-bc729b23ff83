{
    "title": "A Taste of Submission",
    "pages": [
        "Author's note: This one is a slow build, but the second half is pure sex. I had fun with these characters, let me know if you'd like to see more of them. Also, if you're in a dom/sub relationship and you read anything that strikes you as wrong, I'd appreciate your constructive feedback.\n\nAlice paused under the cafe awning, swallowing hard. She pulled out her phone with trembling hands and opened her post for the tenth time today. Friday, Juniper, Blue, Jane. Yes.\n\nShe tucked errant strands of her short blonde bob behind her ears with both hands, a nervous gesture, and licked her lips.\n\nShe could do this.\n\nThis was not a big deal.\n\nActually, she thought, she most likely wouldn't need to do anything. Nobody was going to show. It would be an afternoon in a cafe, a nice coffee, and, eventually, a chocolate croissant. Not a bad way to spend the afternoon.\n\nA pang of guilt shot through her at the fact that she was spending her Friday afternoon on such a ridiculous task, when Thad really needed her where she belonged, in the kitchen. They had spent the morning planning the workflow of Sunday's charity event, and she pictured him now, his lumbering form bending over the workstation, making a meticulous list divided into \"pantry,\" \"store run,\" and \"farmer's market.\" That was a sous chef's job, not an executive chef. He'd be harumphing while he did it, his eyes squinting at the list. The oaf needed glasses. She had said she had a dentist appointment, and Thad had narrowed his eyes just a fraction of an inch. They had both known it was bullshit, but thankfully, he hadn't called her out on it.\n\nWell, the damage was done, so best make it worth it, Alice thought, gripping the entryway door handle and going inside. She didn't know this cafe well, having purposefully chosen a place she'd been to once or twice before, but nowhere she regularly frequented. She didn't want to run the risk of seeing anyone she knew, and was fully prepared to never step into this cafe ever again after today.\n\nShe ordered a peppermint latte, a holiday special she had seen on the chalked A-frame board outside. She also ordered a chocolate croissant, for here. As she waited, she scoped out the scene, choosing a corner of the room that was, at the moment, completely empty. Not a lot of people went for coffee on Friday afternoons. She wanted to be able to see the entrance and the front windows, but not be right alongside them. To see people as they came in. Which no one was going to do.\n\nThey called her name and she shrugged off her coat and scarf, going back to the counter and dropping a $5 in the tip jar as she smiled and carried her things back to the table. She was going to be here a while. She had put the bill in her coat pocket this morning, having thought of every little thing.\n\nAlice sat against the cushioned back wall, arranging her things. She checked the clock on her phone. 2:56. She had thought, considering the situation, it would be best not to be late.\n\nShe pushed the plate with the chocolate croissant to the far end of the table, and brought the latte towards her. She wasn't sure if she could actually drink it, she already felt too jittery. Pulling out a book from her bag, she set it face up next to her drink. Taking a deep breath, Alice opened her phone to read the ad one, final time.\n\nYoung sous chef curious for a taste of the forbidden. Looking to meet a dom to introduce her to submissive sex. One day only. No money exchanged. If you think you might be the dom for me, find me at Juniper's Cafe on 34th and Washington, this Friday at 3. I'll be wearing blue, and reading Jane Eyre. I'll keep a chocolate croissant on the table just for you. Ask me if I'm waiting for someone.\n\nThen she put the phone away, stowing her purse under the table. She had already set a timer for 4pm exactly. When it went off, she would leave.\n\nAnd then what? she wondered. Go back to Tinder? Finally agree to be set up with her mother's chiropractor? Speed dating at the senior center?\n\nShe shook her head to dispel the anxious thoughts, and took a deep breath, opening Jane Eyre to a random page. It was Jane still at Lowood. She had forgotten how long it took for Jane to grow up. So much about tuberculosis and starvation.\n\nAlice tried to read, her eyes having trouble concentrating on the small, dense text. But she wanted to at least look like she was reading. She had gotten the idea to bring a book from You've Got Mail, a movie her family watched every Christmas. But she couldn't have brought a rose into this cafe. Too weird. So a chocolate croissant instead, a little more apropos.\n\nAlice resisted the urge to look at her phone already, knowing full well that not even ten minutes would have passed. She tried to focus, but every sound from the door or the register made her look up. The baristas were laughing about something, pouring coffee beans from a large sack into smaller containers. The door opened and an older woman entered with a little white dog, waving to the baristas who smiled back. A normal Friday. Nothing to see here.\n\nThe thought occurred to her that perhaps someone might have arrived early to stake out the place and see her when she arrived. She looked anew at the other patrons, about a half dozen or so tables occupied. A man in his thirties on his laptop, hunched over and typing furiously. Two young women in business dress, holding coffees in one hand and gesticulating expressively with the other. Gossip, she thought, smiling. Another older woman, crocheting something, who had laid her yarn down to await the approach of the woman with the dog. A friend perhaps, or maybe her sister. A teenage boy wearing a hooded sweatshirt, the hood up, a heavy pair of earphones over top. He was absently eating something.\n\nNone of them looked like possibilities, Alice mused, trying not to look at the sidewalk outside. Wouldn't it be something if one of the older women came over, or the younger even? What if one of them pointed out her book, asked if the croissant was for them? Just the thought of it made Alice's stomach clench. Jesus, what would she do? Should she have made it clear she was heterosexual?\n\nShe looked back at the men, suddenly praying it was one of them, and yes, the teenager was looking at her now and she squinted, wanting to make sure he was at least fucking 18. She didn't want to go to jail. A boy like that couldn't possibly be a dom. Could he?\n\nThe cafe door opened again and, lost in her panic, she didn't see the newcomer until they meandered over to the counter. A man, tall and broad shouldered, wearing a dark brown trench coat. Thick brown hair. He turned slightly, looking up at the posted menu and pointing at something, and at the sight of his profile Alice felt a bucket of ice water being poured over her head.\n\nWithout a second thought, she picked up Jane Eyre and brought the book right in front of her face, slouching down against the bench cushion behind her. She pressed the book so close against her nose she could smell the musty paper. One hand left the book's spine, frantically tucking loose hair behind her ears.\n\nShe waited, heart pounding, as the seconds passed, more and more sure that he would leave without seeing her. She wasn't sure she'd have the guts to keep on after this. Seeing him had used up all her bravado.\n\n\"Alice, is that you?\" his distinctive, accented voice called out, and she squeezed her eyes tight.\n\nShe lowered the book, a smile already plastered on her face.\n\n\"Mateo?\" she said, forcing surprise into her intonation. He had his to-go coffee already in one hand and was just a few feet from the exit. She had been so, so close.\n\n\"How lovely to see you! It's been so long, what, almost a year?\"\n\n\"Yes, yes,\" she said, putting the book down and sitting up straighter. \"Not since the launch party in February. How are you?\"\n\nHe smiled, the smile gradual and full, like a bloom on his face. He was dressed for business, a grey suit underneath his coat, a maroon scarf. He carried a leather briefcase in one hand. She didn't know anyone who actually carried a briefcase.\n\n\"Oh, you know. I'm well. It's been a busy year. And you?\"\n\n\"I'm fine. Great.\"\n\n\"Which one, fine or great?\" he teased, laughing, and Alice laughed too. She was hating every fucking minute of this. He stood in front of the table, towering down on her from this height. She had forgotten how handsome Mateo was. She knew he was from Brazil, but just seeing him, you wouldn't know quite where he was from. Italy maybe, or Hungary. Somewhere the men were olive skinned.\n\n\"And work, work is good?\"\n\nShe nodded, remembering now the lilt of his voice, the way all the words seemed to string together into a melodious line. One of his silky curls had fallen across his brow, and she stared at it.\n\n\"I am surprised Thad relinquished you for the afternoon, you are always so busy,\" he commented, smiling still. His English was perfect, his accent somehow British sounding. Still, the way he put words together was strange, his vocabulary full of archaic words.\n\nAlice hesitated, unsure how to answer that. She didn't dare mention the fake dentist appointment. Mateo knew Thad, they were friends. What if they saw each other at a holiday party and Mateo mentioned seeing her?\n\n\"Yes, so busy,\" she laughed again, wishing he would just leave. She had gone from fervently hoping for someone to come to now desperately wishing they didn't. Please, dear God, if there was a God at all, please don't make her talk to a Craigslist psycho dom with Mateo right here.\n\n\"What brings you to this corner of town? You are far from the restaurant,\" he noted mildly, taking a sip of his coffee.\n\n\"Oh, just taking a little time off.\"\n\n\"You live around here?\"\n\n\"No,\" she said quickly, and he blinked, his eyes lingering on her face. She was probably blushing. She knew she was being too vague, too weird. He looked down at the table and its accessories.\n\n\"I am intruding, perhaps? I am sorry. You were waiting for someone?\"\n\n\"No,\" she rushed. \"No, please, sit.\" She started to stand up and he waved her away, pulling out the chair opposite her and sitting down. The scrape of the chair legs made a loud sound and several people looked their way, but Mateo paid them no mind, sitting down and stretching out his legs as he put his coffee on the table. He was a tall man, and took up a lot of space.\n\n\"I am coming from my lawyer's, actually. Pesky stuff. Someone suing us over intellectual copyright. It is all nonsense of course, but expensive nonsense, you know.\"\n\n\"Oh,\" she said meekly, not sure what kind of response that warranted.\n\n\"But when I go to his office I always go to the gallery on 36th afterwards, as a treat. I have just come. Do you know it?\"\n\n\"No,\" she shook her head. She couldn't remember the last time she stepped foot in an art gallery when she wasn't wearing a spencer jacket and carrying around a silver tray of mini quiches.\n\n\"Oh, it is exquisite. You should go, you are so near now.\"\n\nShe nodded, noncommittal, feeling how exquisitely awful she was doing in this conversation. Mateo was from an entirely different set, she wondered how he and Thad were even friends. Mateo was no salt of the earth. He was cream of the crop. Self possessed, confident. His hands moved easily when he talked, as if the air itself belonged to him.\n\n\"Are you alright, Alice?\" he asked gently after she made no reply. \"You seem... a little flushed.\"\n\nAlice felt the crimson stain deepen on her neck and chest. Goddamn it. She reached up furtively and tucked some hair behind her ear. Always, the feeling of its silkiness fitting so nicely there brought her a measure of relief.\n\n\"I'm just surprised to see you, is all,\" she explained, and at least it was finally the truth.\n\n\"And,\" she added, pulling at the neckline of her knit sweater. \"It feels very warm in here, don't you think?\"\n\n\"Hmm,\" he murmured in lieu of a reply, still in his coat and scarf. He looked down at the croissant on the table.\n\n\"Not going to eat this?\"\n\n\"Oh, no, I already had one,\" she supplied quickly, feeling the lies multiply in her mouth.\n\n\"May I try it?\"\n\n\"Sure,\" she laughed, swallowing, cursing him inwardly. Now she'd have to buy another one.\n\nHe picked up the croissant and bit in. His mouth was so big he ate almost a third of the delicacy in a single bite. Alice swallowed, watching the muscles in his sharp jaw working as he chewed.\n\n\"It is delicious,\" he exclaimed, covering his mouth.\n\nShe smiled softly at the sight of him wolfing it down, trying not to laugh. She couldn't believe he was actually eating her croissant.\n\n\"And that,\" he said, pointing at her, \"is a lovely shade of blue on you, Alice. I have only ever seen you in your kitchen white.\"\n\nShe felt the blush creep up onto her cheeks, and clenched her thighs. He was just being nice. Guys like him, they just said nice things all the time.\n\n\"Are you sure that you're not waiting for someone?\" he asked, taking another bite of the croissant.\n\n\"No,\" she laughed nervously, glancing at the door to make sure there was no queue of naked men trying to fuck her into oblivion.\n\n\"A date, perhaps?\" he asked, wiping his mouth with a napkin and smiling at her.\n\nShe laughed again, faintly this time, her heart beating fast.\n\n\"Perhaps this croissant was meant for him. The man you are waiting for.\" Mateo said the words nonchalantly, finishing the croissant, brushing his hands and pushing the plate a little away from him.\n\nAlice blinked, her senses on high alert now.\n\n\"No,\" she said softly.\n\n\"I think yes, perhaps,\" he replied, bending forward a little and picking up the copy of Jane Eyre, looking at the embossed title and then pointedly back at her.\n\n\"Oh my God, no,\" she whispered, almost to herself.\n\n\"Hmm,\" he said, cocking his head slightly. \"Not exactly the reaction I was hoping for.\"\n\n\"Oh my God,\" she said again, blinking aggressively, hoping each time she opened her eyes he would be gone.\n\n\"Alice, relax,\" he murmured, setting the book down on the table. He looked at her sharply, a little alarmed.\n\n\"Jesus,\" she swore, shutting her eyes tightly and keeping them shut.\n\n\"You know,\" she said weakly, clearing her throat. \"I really need to get going. I... I should go.\" She opened her eyes just a slit, reaching out surreptitiously for the book, but his hand darted out and gripped her forearm.\n\n\"You should stay,\" he said firmly, and she felt utterly anchored. His hand was so large it wrapped completely around her forearm. Caramel skin against her own ivory paleness.\n\n\"I can't,\" she said softly, her voice tremulous.\n\n\"Why not?\"\n\n\"I... I know you,\" she floundered.\n\n\"Wouldn't it be better with someone you know?\" His words were strung together like a caress, seductive, persuasive.\n\n\"God, this isn't happening,\" she moaned, pulling her arm out of his grasp and tucking her hair back.\n\n\"Why such panic, Alice? I make you uncomfortable?\" She glanced up and he wasn't teasing. His expression was one of concern.\n\n\"Please don't tell Thad.\" The words came rushing out of her and immediately she regretted them.\n\nHe studied her for a long moment before answering.\n\n\"Firstly, you don't answer to Thad. He isn't your father, and you aren't a child. You shouldn't be ashamed of what you are doing right now. It takes courage, bravery. Secondly, Thad and I run in quite different circles, wouldn't you say? Haven't you ever wondered what one circle we might share?\"\n\nAlice's eyes darted to him, then away, his words swirling in her mind.\n\n\"I'm surprised he hasn't tried for you himself, to be honest. But then again, Thad is always so ethical. And you are too good of a chef to risk losing.\"\n\n\"You're joking,\" she scoffed.\n\n\"About what? About Thad the dom or your skill as a chef?\"\n\n\"Thad is... you... you are a dom?\" She whispered the last word as if she was saying cunt in the cafe.\n\nIf she didn't know better, she would say Mateo was struggling hard not to laugh at her.\n\n\"I was on the SubSpace app, just as you.\"\n\n\"How did you know it was me?\"\n\n\"I can't say I knew with real certainty,\" he mused, pulling his chair closer to the table now, setting his elbows down on its surface conspiratorially, as if sharing a secret with her. \"I just got a feeling, the same feeling as when I met you for the first time, and every time thereafter. You have a kind of flavor, and I sensed it in that message. A dom can sense a sub, I suppose. It is probably why Thad is so protective of you, though he would not take you for himself.\"\n\nAlice was breathing hard now, feeling the crimson flush staining her whole body. She felt a bead of sweat between her breasts.\n\n\"Alice,\" Mateo said, laughing now as if he couldn't help it. \"You are quite shocked.\"\n\nShe said nothing, feeling her erratic breath. She had a flavor?\n\n\"Is this the furthest down the rabbit hole you have ever gone?\"\n\nShe heard his question from a long way off.\n\n\"By far,\" she murmured, feeling dazed.\n\n\"Well, there is much, much further to go. Perhaps, little one, you might let me show you what there is to see.\"\n\nAt this, her gaze zoomed back to his face. She was angry now. He was mocking her. This was all just a joke. What a horrible, cruel joke.\n\nBut he wasn't looking at her face. He had bent to rummage in his coat pocket, withdrawing his phone and putting it on the table. He was talking all the while.\n\n\"And yes, while you are courageous and brave, you are also very stupid and naive. If you were my sub, I would punish you for this. What risks you've taken. Any crazy person calling themselves a dom could have come here.\"\n\n\"It was anonymous,\" she protested, her voice sharp. He turned abruptly to look at her, and absorbed her upset expression.\n\nFor a long moment they were both silent.\n\nThen he took a deep breath, and picked up his phone, unlocking it and searching for something.\n\n\"You must make the dom go to a place, Alice. He is the one who dresses in blue, carries a book. That way you can see him from a distance and decide if he is even worth approaching. Here, like this, you are completely exposed. Quarry for the lions.\"\n\nAlice glanced down at herself, vaguely afraid. Mateo set the phone down on the table, face up.\n\n\"And you never mention sex or money. It will attract the wrong kind of man. It's just a conversation, like the one we are having now, a conversation that might become something more, if we both decide we want that.\"\n\nShe narrowed her eyes at him, unsure still if he was just having her on.\n\n\"And you need to ask for a clean STD panel. Always, Alice, and make sure it is recent.\" He gestured at his phone, waiting.\n\nMateo, the playboy tech guy whose whitewashed villa had literal statues in it, was talking about STDs in front of her. Alice shook her head. It was all so surreal.\n\n\"Look,\" he pressed, nodding down at the phone. She took it hesitantly. It was a.pdf dated three weeks ago, with laboratory letterhead, and yes, his name, and a list of STDs in one column, with \"NEGATIVE\" repeated over and over in the other. She set the phone down gently, thinking it probably was worth a whole month of her pay.\n\n\"It is the courteous thing to do,\" he explained, as if it was normal to bump into an acquaintance at a cafe and show them your most recent STD panel. \"And you want a dom who is careful and courteous, don't you?\"\n\n\"I... I don't know,\" she answered honestly.\n\nMateo waited, as if he expected her to say more, but she had nothing else to say.\n\n\"Then what kind of dom do you want, Alice?\"\n\n\"I don't know, Mateo,\" she hissed. \"I can't believe I'm even talking about this with you.\"\n\nHe looked away abruptly, breaking his steady gaze, and she could have sworn she saw hurt there.",
        "Again they were silent, and Alice began to stew.\n\n\"I don't even know if this is what I want,\" she finally broke out. \"I just... I'm tired of thinking about it, wondering what it would be like. So I said, fuck it.\"\n\nMateo said nothing, his eyes drifting now to the front windows. She wondered if he meant to leave. It was what she had desperately wanted only a minute ago.\n\n\"All I know is, I don't want pain,\" she added, picking up Jane Eyre and holding it against her.\n\n\"Define pain,\" he said softly, and when she looked up, his eyes were back on her. Her stomach clenched. Why did it sound sexy when he said that?\n\n\"I don't want to beaten or whipped, or whatever,\" she shrugged.\n\nHis eyes widened by a fraction, and she wondered what he was thinking. He considered what to say before responding. \"Those are not roads I venture far down myself. Though I can push myself if a sub really desires it.\"\n\n\"You said just now you would punish me if I was your sub,\" she countered.\n\nHe fought a smile. \"My forms of punishment are more... subtle.\"\n\nAlice said nothing, refusing to ask him to clarify.\n\n\"I prefer to make my subs wait,\" he supplied.\n\n\"For what?\"\n\nThen he did smile, leaning forward again, placing his hands palm down on the table. They were gigantic.\n\n\"Wait to touch me. Wait to touch themselves. Wait to be touched. Wait for their fulfilment.\" With each phrase he lifted a finger and tapped it gently back down on the table. She guessed there were many other ways he could make someone wait.\n\nShe swallowed. Waiting? That didn't sound like anything she had encountered so far.\n\n\"See?\" he said suddenly, as if in objection to her silence. \"This is what worried me, Alice. You want something, but you think there is violence in it, and fear, and so you're torn. With the right dom, you would never be afraid, not really. Yes, your heart would beat fast and you would feel anxious, the unknown before you, but on the other side of that feeling is not evil or cruelty or shame. On the other side is...\" Mateo straightened, caught up in the feeling of what he was saying, his hands swirling in the air as he searched for the right world. \"An expansion of yourself. A version of yourself you never thought possible. That is what you are afraid of. Metamorphosis,\" he concluded, and she could tell that the word pleased him.\n\n\"What would happen if I went with you now?\"\n\nShe heard the words in the air between them without realising it was her who had spoken.\n\nMateo made a low sound in his throat that sounded suspiciously like a growl, and her hackles raised. His hands came down on the table again, hard, palms down.\n\n\"A sub doesn't get to know a dom's plans.\"\n\nHe seemed incensed now, as flustered as she felt. Was he angry at her for asking?\n\n\"You will need to tell me what you choose, Alice. It is... time sensitive,\" he said in a low voice, and she almost laughed at his choice of words.\n\n\"You have somewhere to be?\"\n\n\"This conversation has been thoroughly enjoyable, but my enjoyment has gone a degree too far. Too much more and I won't be able to walk out of here.\"\n\n\"What is that supposed to mean?\"\n\nHe leaned forward, closer to her, and tapped his pointer finger three times on the table.\n\n\"I am aroused, Alice.\"\n\nUnable to help it, she looked down at the surface of the table, at the place where she imagined his crotch must be. She looked up quickly and saw him watching her, his gaze burning.\n\n\"Does it excite you, Alice?\" he said in a soft, predatory tone. \"Knowing that just the idea of subduing you arouses me?\"\n\n\"I need some water,\" she said abruptly, standing and stumbling away from the table. She didn't look back at him, she just walked quickly in the general direction of what looked like the restrooms. She hurried inside one, whirling to lock the door behind her before bending to lean over into the sink. She felt like she might be sick, or maybe faint. She had fainted once before, giving blood, and it had felt like this, the rushing in her ears, the prickling darkness at the periphery of her vision, warmth in her legs. Blindly she reached for the faucet, turning on the cold water and splashing handfuls of it onto her face and chest. She was getting her hair and sweater wet, but that was the least of her worries now.\n\nThe cold water shocked her system and she stayed there, breathing deeply, drinking the water, rubbing it onto her face. She slid her cold hand up to the back of her neck and felt herself shiver.\n\nShe wasn't sure how long she stood there, or how much water she wasted. Eventually she stood, grimacing at her wild appearance and looking around the bathroom for what scant tools she could find to fix herself. She dried herself off as best she could, using a paper towel to wipe off the mascara under her eyes. After a moment's hesitation she unzipped her jeans, shoving toilet paper down into her underwear to wipe off the copious slick drenching her sex. She held it up to her nose, breathing deeply, before throwing the toilet paper away. She fastened her jeans, turning back to the sink to run her fingers through her damp hair, slowly, methodically tucking it back behind her ears once, twice, three times.\n\nAlice looked in the mirror at the woman staring back at her, and made her decision.\n\nShe strode out of the restroom, making a beeline for the table, seeing Mateo facing the bathroom. He had been waiting for her, watching. She didn't look at him, but went straight to her seat, reaching down for her purse.\n\n\"Alice,\" he began, and she sensed the anxiety in his voice.\n\n\"Let's go,\" she commanded, shoving the book in her purse and strangling herself with her scarf.\n\nMateo stood immediately, the legs of his chair screeching obnoxiously yet again. He slid his phone into his pocket, took out a money clip and tossed a bill on the table.\n\nShe glanced down at it. A $50.\n\n\"I already paid,\" she said, pointing at it.\n\nHe slipped the money clip back into his pocket, looking at her with a serious expression.\n\n\"How much money do you make in a year, Alice?\"\n\n\"You can't just ask a person that,\" she said grouchily, feeling stretched thin.\n\n\"Do you make say, over $100,000?\"\n\nShe snorted. \"I'm a chef, are you crazy? I'll never see that kind of money. Never.\"\n\n\"Is it, over, $50,000?\"\n\n\"Just shut up,\" she said hotly, and his eyebrows rose distinctly. She felt a knot form in her stomach. She knew she was being rude, she couldn't help it, she felt so keyed up. The look he was giving her now made it very clear that a sub didn't speak to a dom that way.\n\n\"Let me guess,\" she grumbled, wanting to go a little too far. \"You make a million dollars a day.\"\n\nHe put his hand gently around her elbow, urging her towards the door. Outside the cafe he paused, turning to her to button up her coat. She stood there docile, her mind awash with feelings and fear.\n\n\"Last year I made a little over $700,000. But this year, it may be different. Come, I am this way.\" He took her elbow again, tugging her down the street. She'd seen his car before, at his house, a white coupe, BMW or something, she didn't know.\n\nOutside the air was brisk, and Alice felt her hair flying. She suddenly felt she must look awful, wet and bedraggled. And she'd taken such care this morning, all for nothing. Mateo unlocked his car, opening the passenger door and ushering her in before getting in at the driver's side. He started the car with a button on the dash, taking out his phone and searching something.\n\n\"Just because you're rich doesn't make you any better than me,\" she said definitively, still thinking about that sum. $700,000 fucking dollars.\n\n\"Of course not,\" he replied offhandedly, as if the idea was ridiculous. He turned onto the main road and began to drive. \"Rich people are detestable mostly. I am sure there are people who find me detestable.\"\n\nShe frowned at this. Mateo was not detestable. A pompous ass sometimes maybe, but not detestable. She'd seen how he'd treated the wait staff at their events, kind, respectful. She was the sous chef, essentially Thad's assistant, and yet Mateo had treated her as if she were a guest, engaging her in long conversations to the annoyance of her impatient boss. Once, she remembered now, he had even asked her to dance, as she stood there in stained white chef's uniform. She had thought he was joking. Thad had told her Mateo was \"a crazy fucker,\" trying to pay them twice the fair rate for their catering. Thad had only relented by sharing the unexpected profit equally with the crew, and buying them a new industrial mixer and dehydrator.\n\n\"I don't tell you about the money to impress you,\" he went on, and she scoffed audibly. Alice heard him growl under his breath, and bit her tongue. \"I tell you to warn you. As a dom with money, I pay for everything related to my submissives. No exceptions.\"\n\n\"Submissives?\" she laughed scornfully. \"As in plural?\"\n\nMateo laughed in return, but his was full of genuine humor. \"A true dom only ever has one submissive at a time. They are too much work.\"\n\n\"Then why do it at all?\"\n\n\"Because nothing gives me more pleasure than taking control of a woman's body, stripping every thought from her mind but thoughts of me, my body, the orgasms I give her.\"\n\nAlice shivered, and not from the cold. Jesus, how could he just say that? She felt utterly unmoored.\n\n\"That includes thoughts of money,\" Mateo added, as an afterthought. \"I don't like my submissives to ever think about money.\"\n\n\"I guess millionaires don't have to think about money much,\" she griped, wondering why she was so bitter now. Shouldn't she be excited? She was in Mateo's ludicrously expensive car, driving somewhere for him to fuck her. She was sure he would be good at it. What was her fucking problem?\n\n\"I was born very poor,\" he said, turning onto another road. Alice wondered where they were going. \"I grew up eating rice every day, sometimes with vegetables, sometimes less with meat. I never thought about money then, because we had none. Then I thought about money every day for many years, until recently. Now, yes, I don't think about it much.\"\n\nAlice had nothing to say to this. She hadn't known Mateo grew up poor. He hadn't struck her as the kind of person who knew how to subsist on ramen and PB&amp;Js the last week of every month.\n\n\"I don't want to go to your house,\" she said suddenly.\n\n\"We're not going there. It's too far away, and I can't wait. We're going to a hotel,\" he replied quickly.\n\n\"Oh,\" she felt her blush returning. A hotel fuck. Just like in the movies. Never once had she gone to a hotel in the middle of the day to fuck.\n\nThey were silent, and within just a couple of minutes they were pulling into an underground garage. The sign said \"Four Seasons Parking.\" Jesus, she thought. This place was like $800 a night. She'd run events here before, a few weddings. She could drape their linen tablecloths all over her body and call it a wedding gown.\n\nMateo deftly maneuvered the coupe into a parking space, and Alice got out before he could open the door for her. They walked together to the elevator that would bring them to the lobby.\n\n\"How can you be born poor and Brazilian and now be rich and British sounding?\"\n\n\"I don't even understand the question,\" he laughed, glancing over at her, his smile warm and broad. She could tell he was excited, and the knowledge made her nerves flutter higher.\n\n\"I thought maybe a British tutor taught you English or something.\"\n\nHe laughed again, rubbing his chin as they ascended in the elevator. \"My father taught me English. He was a thief and a crook from Brighton. He came to Brazil in the 80s to escape extradition. Then he caught my mother, who is Brazilian, in his handsome, charming web, and out of that came seven children.\"\n\n\"Seven?\" Alice exclaimed, but before she could ask more the door slid open onto the most extravagant, gilded lobby. Alice's question died on her lips as she stood gawking, suddenly feeling like a fish very much on land.\n\n\"There's a bar,\" he said, indicating in one direction. \"Would you like a drink while I get the key?\"\n\n\"No,\" she said, imagining a beer there must cost $20. \"I'll just wait here.\" She sank into a plush chair, pretending to examine the global newspapers on the table.\n\nIn only a few minutes he was back, leading her into a different elevator. She looked around, her face burning, imagining all the staff knew she was here to be screwed, but no one seemed to be paying her any mind. They ascended rapidly to a high floor, and the next thing she knew Mateo was locking the door behind them, the lock's soft click a whisper of promise.\n\nSuddenly all her nerves flooded back. She didn't even have the presence of mind to look around what she was sure was a luxurious room. Her eyes were tracking Mateo's movements like the jaguar she now knew him to be.\n\nHe set down his bag and hers, taking off his coat and scarf. She stood between the bed and the open window, Mateo by the bathroom door.\n\n\"During our sessions you will call me sir,\" he began, and her eyes widened. Guess it's right down to business. Time is money, isn't that what they say? The irrational thought threatened to bubble up as laughter in Alice's throat, but she swallowed it down.\n\n\"If at first you forget to call me sir, I will remind you. After a while though, I will punish you. When we are out together in public, call me Mateo.\"\n\nShe blinked, waiting for him to go on. He nodded at her, coaxing.\n\n\"Yes, sir,\" she blurted out. The words felt strange in her mouth, like she was answering a drill sergeant.\n\n\"Good girl,\" he replied softly, and she felt a twinge low in her abdomen. She should be annoyed at that demeaning little phrase, but she wasn't.\n\n\"You always have the right to refuse to do anything I ask of you, and the right to stop anything I do to you. We don't need a safe word, because you will merely say 'no,' or 'stop,' or 'don't.' All those words will make me stop. Today I will not be putting anything in your mouth that would prevent you from speaking.\"\n\nShe thought immediately of ball gags, of Mateo's dick shoved down the back of her throat as he face fucked her. She felt warmth pooling again between her legs. He had said today he wouldn't do it. Would there be a tomorrow?\n\n\"Do you understand?\" he prompted, a bit impatiently.\n\n\"Yes, sir,\" she replied.\n\n\"Take off all your clothes and put them there, folded nicely,\" he directed, indicating a chair in one corner. As he spoke, he kicked off his shoes and shrugged out of his suit jacket.\n\n\"Just like that?\" she asked, disbelieving.\n\n\"Just like that,\" he said with a small smile, continuing to undress.\n\nShe averted her eyes, walking over to the chair and pretending she was alone. She thought about when she would undress at the doctor's office, the neat little pile of clothes she made in the chair. He wanted a pile like that. She shrugged off her coat first, laying it against the back of the chair, then slipped off her ankle boots, propping them up on the seat. Peeling off her socks was rather awkward knowing he was watching her, but she managed. She then sped up, taking off her jeans and yanking off her sweater, feeling the cold air. She wished faintly he'd turn the thermostat up. She folded these, hands trembling a little, stacking them on the growing pile in the chair. Taking a deep breath, still facing away from him, she unhooked her bra, set it down, and peeled off her panties. Her heart was thundering in her chest, and she felt the blush must be everywhere.\n\n\"Come kneel on the floor here,\" she heard his voice, a bit unsteady.\n\nKneel? Jesus.\n\nBut she went, darting a glance at him only to find the place he pointed out, quickly kneeling on her knees on the floor. The carpet dug into her knees. She kept her eyes on his feet. They were bare, but he still wore his pants. In the modicum of time she had looked at him, she had seen his chest was bare.\n\n\"No, not like that. Not like a church girl,\" he laughed softly, and she looked up at him. His eyes were dancing with energy, moving quickly, scanning her body. He still stood in the same place, bare chested with his slacks and belt. His shoulders were so broad, like a swimmer, and his waist narrow, making his frame look like a large V. From his coloring she had expected dark hair on his chest, but there was none. He was more muscular than she had anticipated, lean, but very toned.\n\n\"I forget how new you are to this, little one,\" he mused, smiling. She didn't know any other ways to kneel.\n\n\"Sit back on your heels, and open your knees wide.\" She did as she was told, lowering herself down.\n\n\"Wider,\" he said in a low voice, and she felt her stomach twist as she opened her legs even wider, knowing he could see her pussy.\n\n\"Rest your arms gently on your thighs, your palms open and up.\" She did as he asked. It felt like some kind of yoga pose. She could feel her nipples pebbling in the cool air and resisted the urge to tuck her hair behind her ears.\n\n\"Lower your head,\" he went on, and there was a definite unsteadiness to his gravelly voice now. \"Look at the space on the floor between your knees. Try to breathe easy.\"\n\nShe tried, but it was very difficult. It was good though, not to have to look at him. She would have looked straight at his crotch, sure she would see the outline of his cock now.\n\n\"This pose is called nadu. It pleases me greatly.\"\n\nShe turned the word over gently in her mind. Nadu. Was it another language? For a long moment she simply knelt there, the position not uncomfortable now that her weight had been more evenly distributed.\n\n\"You have such a beautiful body, Alice,\" he said, finally breaking the silence. Alice swallowed, nervous at this praise. \"You are what they call sylphlike. Thin, and graceful. When you are cooking you are graceful too, your movements are sparse and economical. In the kitchen you flow like water, always finding the quickest way. It is a lovely thing to watch.\"\n\nThe muscles of her thighs clenched. She'd never had anyone speak to her like that. He had watched her then, at their events? The idea of it gave her a rush of pleasure. He thought she was beautiful?\n\n\"If you were my submissive, I would have you grow out this golden hair. Have you ever worn it long?\"\n\n\"When I was younger, in culinary school,\" she replied in a whisper, even though he spoke in a normal volume.\n\n\"Sir,\" he prompted her gently.\n\n\"Sir.\"\n\n\"Short hair suits you, but I like my submissives to kneel in nadu with a single, long plait of hair. This is how nadu is perfect. Then I can pull the plait as I fuck them from behind.\"\n\nShe suddenly wanted long hair very, very much.\n\n\"Then again,\" he went on, as if reconsidering. \"With short hair like you have now, a collar would be on perpetual display. That would be something indeed.\"\n\nHer breasts jiggled as her breathing became more erratic. She'd heard of this, women wearing collars like dogs. This was getting crazy. She didn't want a collar. Did Mateo make women wear collars? The question alone made her head spin.\n\nShe spiralled for a while, closing her eyes gently to focus. She waited, but he said nothing more. It felt like several minutes had passed, and Alice started to wonder if he expected her to do something, but then she heard the sound of the shower, and her head rose. Sure enough he was showering, or must be; she could see a trail of the rest of his clothes on the bathroom floor and steam emanating.\n\nSo she waited. She looked down at her breasts, her nipples rock hard, either from the coolness of the ambient temperature or from the anticipation coursing through her. She wished her breasts were bigger, they were modest along with the rest of her thin frame, they wouldn't even fill his hands. She imagined his hands all over her, grabbing her flesh roughly, and she shivered. Her knees were beginning to hurt again, and now the balls of her feet, the carpet dense and scratchy. It was nice though, she had to admit, just sitting here with nothing to do, knowing the man in the shower was preparing to fuck her. All she had to do was wait for it.",
        "Suddenly a vibrant chime sounded in the room, and it only took Alice a moment to realize its source.\n\nFuck. It's 4pm.\n\nInstinctively she shifted her weight, moving to rise and turn it off, but she hesitated. What if he came out of the shower and found her out of nadu? Would he be angry? Would she be punished? She thought the answer was likely to be yes, and it might mean even more waiting.\n\nSo she froze, letting the alarm seemingly get louder and louder, gritting her teeth.\n\nWay to kill the fucking vibe, Alice.\n\nEventually the shower turned off, and Mateo emerged. He had a towel wrapped around his lean waist, and was towelling his hair with another one.\n\n\"What is that?\" he asked, looking around the room.\n\n\"It's my phone, sir,\" she replied over its noise. \"An alarm on my phone.\"\n\nHe strode casually over to where her bag lay. \"May I?\"\n\n\"Yes, sir,\" she said readily, grateful he had asked for permission.\n\nHe reached in and found her phone, turning off the timer. He then clicked the lever on the side to turn on silent mode before slipping it back in her purse.\n\n\"Were you timing me?\" he asked, smiling.\n\n\"No,\" she replied, stifling a laugh herself. \"I set it before I left for the cafe.\"\n\n\"For what?\"\n\n\"So that I didn't look at the time on my phone. I'd stay until the timer went off, and then I'd leave.\"\n\nHe approached her, his gaze warm as it again travelled over the surfaces of her body. It felt so strange to be carrying on a conversation like this, naked and kneeling.\n\n\"You thought no one would come for you?\" His tone was curious, not pitying.\n\n\"I thought it was pretty likely no one would show... sir,\" she corrected him, but he didn't seem to be harping on the title.\n\n\"You know, everything I said about the lawyer and the gallery, it was all lies,\" he admitted, tossing away the towel he had used on his head. Alice frowned, confused.\n\n\"I cleared my day when I read your post. Made it so that I would walk in right at the top of the hour, to prevent anyone else from claiming you.\"\n\nHer blush had previously faded but she felt a rush of heat now on her chest. Mateo, naked and glistening, in a hotel here with her, claiming her. It was unbelievable.\n\n\"You planned it?\"\n\n\"Of course,\" he shrugged, as if it was obvious.\n\nShe didn't know what to say to that.\n\n\"Were you tempted?\" he asked, and she blinked, trying to understand.\n\n\"By the timer,\" he supplied, and she laughed a little.\n\n\"Yes,\" she admitted.\n\n\"Why didn't you get up, turn it off?\"\n\n\"I... uh. I thought you wanted me to stay here.\"\n\n\"Very good girl,\" he murmured, taking the towel off from around his hips and turning to his bag on the entryway table. \"Very good start,\" he added, opening the bag.\n\nAlice's mouth went dry at the sight of his firm ass, and she struggled to contain her breathing now that the moment was nearing. He turned back to face her, and her eyes zoomed straight to his erect cock. He was long and thick, a dark patch of neatly trimmed hair. Suddenly saliva flooded Alice's mouth. She wanted to taste that cock. She wanted to see how much of it she could take in her mouth, in her cunt. She had gone so long without being fucked properly, she had almost forgotten how it felt.\n\nShe remembered to look up at Mateo, who was studying her with a kind of bemusement. He had a condom in one hand, and his maroon necktie in the other. Slowly, and unabashedly, he tore open the condom and rolled it down his impressive length. Then he approached her with the necktie.\n\n\"I would have liked to bring my own ropes,\" he murmured, bending down to her. \"But I thought the sight of them would be too alarming to you, and now I know I was right. So this will have to do for today.\" He spoke softly as he lifted her hands from her thighs, bringing them in front and binding them together with the tie. Alice watched, breathing hard, as the silk tie wrapped around and in between her hands, cinched tight.\n\n\"Now you are a church girl again,\" he chuckled to himself, but Alice only blinked.\n\nHe went back into the bathroom and came out with two long, white pieces of fabric. Alice could barely focus on what they were or what their purpose might be, her attention focused on Mateo's dick swinging slightly at eye level as he neared.\n\n\"This is not true shibari,\" he said, bending down. \"But again, it will have to do.\" He took the white tie and tied it tight around the juncture where her thigh met the skin above her ankle, kneeling in nadu. Looking down at it, she recognized it as the belt from a terry cloth robe.\n\nHer breathing hitched with fear as he finished tying her other leg and he paused, looking at her closely.\n\n\"You want to stop?\"\n\nShe heaved great gulps of air, wishing her hands were free so she could tuck her hair, so she could do anything. This was what she wanted, but could she really do this?\n\n\"Look at me, Alice,\" he beckoned softly, lifting her chin with a single finger. \"You want to stop?\"\n\nShe shook her head furtively, once, twice, and he tsked.\n\n\"No,\" he said sadly. \"I will need to hear you say it.\"\n\n\"Please don't stop, sir,\" the words rushed out, and she heard him exhale sharply, as if he had been holding his breath.\n\nThen he was grasping her by the waist, lifting her up, her body immobile with her legs pinned back. He dropped her on the bed rather unceremoniously, face down, her feet soles up. Her arms were buried underneath her torso and she turned her head to one side so she could breathe.\n\nWithin a moment she felt the bed move with his weight as he climbed behind her, pulling her knees apart and sliding a pillow under her lower abdomen.\n\n\"Let's see if you are ready, sweet Alice,\" he said, his voice thick and dark with his excitement, and she felt his hand brush over her sex. She jerked back instinctively, her hips squirming. She knew she was soaked. She wouldn't be surprised if she had dripped onto the carpet.\n\nMateo made a pleased little moan as his fingers delicately explored her, not probing, only dancing around her entrance.\n\n\"How wet, pretty little sub. How much you must want it. I will take some of your slick for myself.\"\n\nHis voice with his accented lilt, its exoticism, heightened the strangeness of the sensations roiling through her. For a moment there was nothing, and then, the head of his cock poised at her entrance for only a split second before he was thrusting inside, sliding into her slick cunt with ease.\n\nAlice let out a low moan as he filled her, shoving her mouth against the soft, white coverlet. When he was bottomed out in her he paused, and she could hear his erratic breath. Then she felt a hand splayed on her lower back, the other grasping one of her raised feet, and he began to fuck her.\n\nThe pleasure soared high, so intense and so sweet to be filled, to be fucked. Alice moaned again, unable to stop the noises from escaping her, heedless of how she sounded. She was utterly at his mercy, at the mercy of the pleasure he stoked in her, at the mercy of his dick, thrusting into her with force, slamming into her, shoving her body forward.\n\nHe fucked her the way other men had fucked her in the moments before they came, a steady, fast pummeling, his hips crashing into her ass. It felt good, so good that she feared he was already going to climax.\n\n\"The reason I am fucking you this way, Alice, is because I know that deep down, your most urgent need right now is to fuck like an animal. Am I right?\"\n\nHis words poured into her ear like honey. Like venom.\n\n\"Am I right?\" he asked again, his dick sliding back inside her as he spoke.\n\n\"Yes, sir,\" she moaned, shutting her eyes tight.\n\n\"You were so desperate to be fucked that you invited any man to fuck you. And that is desperation indeed.\"\n\nAlice moaned, feeling the shame of the truth burn through her. He was right. She was fucking desperate. She was a cock hungry little whore who needed good dick, any dick. Her pussy felt on fire with it, she could feel his cock so deep she could sense it inside her, spasming at the root of her womanhood as her body clenched already in the first notes of its impending orgasm.\n\n\"So you will not see me or hear me until I have made you come hard,\" he went on, his steady voice in stark contrast to the fever in her brain. \"Let us get that out of the way quickly.\"\n\nShe was crying out, her hips pushing back against his thrusts to get closer. She knew he still touched her but couldn't feel it. It was just his cock drilling into her, the friction of it inside of her so utterly, utterly necessary. She felt delirious with it, crazed, giving over easily to the madness.\n\n\"Do you like this, Alice, my fucking you this way?\"\n\n\"Yes, sir,\" she sobbed immediately, wanting to come so badly. She prayed he wouldn't stop.\n\n\"Do you like it when I tell you why I fuck you?\"\n\n\"Yes, yes,\" she cried on.\n\n\"Good,\" he said, his voice rough now. \"It is important to understand.\"\n\nHis hips took on a degree of added violence with her vocalizations, and the weight of his body pressed her deep into the bed, her hips tilting up to give him access to the deepest recesses of her cunt. She felt the heat of his breath on the back of her neck and the switch flipped, and her climax seized her in its white hot grip. She cried out, the sound loud and primal, arching her back against him, writhing as the convulsions carried away all her rationality. The pure pleasure of it ripped through her like a high, and she cried out again in surrender. Still he fucked her endlessly, never letting up, fucking her through it, past it, onto the other side.\n\nEventually it was too much, her body screaming for relief.\n\n\"Please, please,\" she moaned, and he withdrew. Alice felt immediately empty, even though it was what she had asked for.\n\nMateo gripped her elbow at once, turning her over onto her back, her hands and legs still tight in their bindings. She felt her hair damp against her face, the flush everywhere now, unstoppable. She couldn't look at him, she could barely see the white ceiling. Her vision was swirling.\n\nHe didn't touch her now. She had no sense of where he was, and she barely cared.\n\n\"How do you feel?\" he asked, finally, and his voice sounded far off.\n\nAlice searched for the right word. How did she feel?\n\n\"Electric,\" she answered, feeling a pulse from her pussy as the aftershocks of her orgasm still echoed.\n\n\"Good,\" he growled, and she opened her eyes. He was kneeling on the bed, observing her in her vulnerable afterglow, his eyes hot still, his face triumphant. She glanced down at his cock, thinking surely he must have come with her, but he was still fully erect.\n\nJesus, she thought, glancing back up at him to find him smiling devilishly.\n\n\"This first time I let you come on your own,\" he said, breathing hard as he took in the effects of his efforts: the sheen on her body, the moisture coating her ass and inner thighs. \"It could not be helped. But for the rest of our session today, I want you to tell me before you come.\"\n\nAlice blinked, closing her legs to one side.\n\n\"You know the feeling, when you get high enough that you know you will climax, that it is inevitable, yes?\"\n\nShe nodded dumbly.\n\n\"That is when I want you to say aloud that you want to come. Then I will either give you permission, or I will deny it to you.\"\n\nAlice frowned, breaking his gaze, her eyes drifting to the nondescript art on the wall. A white lighthouse, a tan beach. She was just trying to enjoy this feeling.\n\n\"Being a submissive does not mean you are mute, Alice,\" Mateo snapped, frustration clear in his tone. \"Talk to me.\"\n\nHer attention caught, she rolled to one side, using her elbow to awkwardly sit up. She wished she could straighten her hair, she must look insane.\n\n\"You're punishing me... for placing the ad?\" she asked, tentative.\n\n\"No,\" he replied, surprised. \"You are not my true submissive yet. I cannot punish you.\"\n\n\"Then why would you want to stop me from coming?\"\n\n\"Because while I am dominating a sub, her pleasure belongs to me. I am in control. I gave you that orgasm you are still enjoying now. It is up to me whether to give you more, or not.\"\n\nAlice frowned again, considering this, saying nothing.\n\n\"Tell me what you're thinking,\" he demanded, his eyes darting. \"Does it make sense?\"\n\n\"It makes sense,\" she agreed cautiously. \"But I don't agree. Shouldn't sex be about pleasure? Why would you want me not to come, ever?\"\n\nFor a moment they were quiet together. She wondered distantly how many women he'd been with, how many submissives. Was she just another static doll in a long line of women craving domination?\n\nHe started scooting towards her, and her heart jumped, all her nagging thoughts aside. No matter how many others, he was hers right now.\n\n\"Lie down,\" he said softly, even as he pushed her gently back into a prone position. He laid on his side beside her, working at the knot that bound her wrists. She could feel his erection nudging against her thigh. She admired how unselfconscious he was about his nudity.\n\n\"These are good questions, Alice,\" he murmured, her wrists free now. \"It pleases me how curious you are, how important it is for you to understand.\" He took her wrists in his careful grasp, rubbing his hands against her skin, kissing her hands. Even as he did so his other hand moved down to her thigh, to begin on that knot. His movements, like his words, flowed one into the next, a slow sensual progression that had no end.\n\n\"There are indeed times when it is not advisable for a sub to come. Times when I choose to deny her for her own good.\"\n\nAlice had trouble focusing on the nuance of his answer, his fingers were tracing over her legs, which were tingling with their increased blood flow. His hands ran up and down the insides of her thighs casually, as if to calm her.\n\n\"Sometimes I deny my sub to heighten her pleasure, to draw it out, like pulling a string.\"\n\nHe dangled one of the robe belts over her belly like a cat toy, and she exhaled a short huff that was not exactly a laugh. He looked up, smiling. His eyes still on hers, he reached down for the other belt, still trapped under her thigh. He pulled one end up between her legs and it caught in the lips of her sex, making her tense. She was so sensitive.\n\n\"The waiting is painful, but it is so good. While she waits, she is thinking about the thing she did that displeased me, the thing she is being punished for, and she is deciding never to do it again, because the waiting is excruciating and she wants to come so badly.\"\n\nAs he spoke, he pulled the terry cloth belt tight up between her lips, the soft material pressing against her clitoris. Alice breathed hard again, the feeling not unlike a thong riding up in her crotch but somehow different, sensual. Before, the sensation had all been in her pussy, her clit had barely been stimulated.\n\n\"Then, when I do allow her to come, it is that much more powerful for her waiting. Like a feast for a starving man. She is overwhelmed by the sensation, she loves me so much in that moment.\"\n\nLove? She thought, her mind racing, as he slipped his hand down, massaging her sex, his long middle finger stroking the length of the cloth pressed wholly over her clit. He gently caressed her through its fabric, soft circles, lazy pressure. Alice stared up at the ceiling as she felt the music swell again. She had a dim wish that she was still bound, and immediately wondered at herself for it.\n\nShe tried to relax, focusing on the sharper, more intense waves of pleasure coming from her clit, but Mateo bent his head, taking her nipple in his mouth and sucking lightly. Alice cried out, the pleasure stronger, her body clenching up into it. In response he gathered more of her breast into his mouth, laving the soft flesh with his hot, rough tongue. For a long moment they were suspended like that, Mateo swallowing her breast, massaging her clit. She was sure he could sense that she would come again. He was right. He was giving it to her. When he withdrew his mouth to talk again, she felt a flash of irritation. Damn, the man liked to talk.\n\n\"Other times I deny my sub because she has taken too much already, she is overstimulated without knowing it. She will grow desperate, edgy, restless. She will try to come more, thinking it will ease the feeling, but I know it won't. It's up to me as her dom to recognize the signs that she is overwhelmed and bring her back down, and she cannot come then, for it erases that work.\"\n\nThis isn't one of those times, she wanted to say. Let me have more.\n\nBut it was only breathy gasps that escaped her and he sensed the shift, letting the belt drop and probing her with his fingers, using the bone of his palm to press deeply and rhythmically against her clit. She cried out, arching again, opening her legs wide to give him access. She wanted to touch him with her hands but somehow knew she shouldn't. He wanted her this way, prone and receptive. God, she was going to come again, she was going to explode.\n\n\"There is only one other reason I might like to deny you,\" he growled softly, circling his palm faster.\n\n\"Why, sir? Why?\" she mewled, coaxing him onward, beckoning her release.\n\n\"Because the sight of you like this, little one, primed and hungry for me, is such a beautiful thing.\"\n\nHis words made her dizzy and she arched again, offering her breast to his mouth. He bent, acquiescing, but instead of kissing her openly, this time he caught her nipple between his teeth and bit down slightly.\n\n\"Oh, God, I... I,\" she gasped, trying to say the words like he wanted.\n\n\"Yes, Alice,\" he demanded roughly, his mouth at her ear now, licking, biting.\n\n\"Come for me. It is mine.\"\n\nHe returned to her breast, suckling deep, and the feeling shot straight through her womb and then she was crashing again, senseless with the sweetness of it, thrashing against him, her hips thrusting against his hand as she rode out the climax. He thrust fingers inside of her and she wept, feeling so much wetness there she had a flash of shame. She was out of control. Her vision blurred at the edges.\n\nFor a long time all she could do was breathe and try to discern the edges of her body, reassure herself she was a person, not a living flame.\n\n\"You shall have the tie again. I liked that very much.\"\n\nAlice heard Mateo's voice faintly, as if he was far off, but opening her eyes she found him right beside her. She was unsure how much time had passed, seconds, minutes? He was signalling her to come to the head of the bed, and she struggled to crawl there, feeling weak and sweaty.\n\n\"Mateo,\" she warned, breathing hard. \"I'm not sure how much more I can take.\"\n\nHe smiled that mischievous smile of his, pulling her back to a lying position, taking her hands.\n\n\"That is what we are doing, little sub. We are learning your limits.\"\n\nWhat were his limits, she wondered? Did they exist? Did he just fuck all day, never coming, never seeming mussed or exhausted? She was getting tired, and sleep sounded nice.\n\nHe made quick work of her hands again, tying them in the tie as before, her arms relaxed and heavy. But then he pulled her arms up, over her head, and fastened the loose ends of the tie to the metal post of the headboard. Alice's heartbeat kicked up a pace, feeling the fear edge back into the corners of her vision.\n\n\"Besides,\" he said offhandedly, \"we've only just begun, really.\"\n\nFuck, she thought to herself, glancing over at his dick, throbbing less aggressively than before but still ready for action.\n\nHe moved off the bed, going to the bathroom and turning on the sink faucet. Alice pulled down against the restraints, feeling the thud of the headboard as it thumped up against the mattress. She had just as little leeway side to side.\n\nShe thought then of his earlier words, of when the sex would be too much and she'd become restless and desperate, unable to come and yet desperate for it. She wouldn't have the presence of mind then to stop him. What if he smothered her, or shoved his cock in her mouth? She wouldn't be able to get away, or even push him off.",
        "By the time Mateo returned, drinking deeply from a glass of water, Alice felt herself trembling, goosebumps all over her naked flesh from where the cold air from the vent was blowing on her. Her knees had raised up and she had scooted to the top of the bed in a futile effort to gain more slack on the tie.\n\n\"Water?\" Mateo asked, but she barely heard him. She arched her back, looking up behind her at the tie, trying to see the knot. Could she undo it, if she had to? Probably not, that's why it was a fucking knot.\n\n\"Alice?\"\n\n\"What?\" she snapped, and she could hear the panic in her voice.\n\nHe came to her immediately, not on the bed but bending at the bedside, draping one arm lightly over her torso.\n\n\"You are nervous?\" he asked quickly, scanning her up and down.\n\nAlice nodded, swallowing.\n\n\"Tell me why,\" he demanded, though his voice was soft.\n\n\"What if... what if I want to get out, and I can't?\"\n\n\"You don't trust me to stop, if you tell me to stop?\"\n\nAlice said nothing, not wanting to anger him. She looked up again at the knot, trying to brush hair from out of her face with her arm so she could see better.\n\n\"No,\" he said, pouncing on her silence, coming to stand above her now, peering down at her as she struggled.\n\n\"You can't hold back. You must be honest with me when I ask you a direct question. You don't trust me to stop, if you asked me?\"\n\n\"No, I don't,\" she whimpered, feeling somehow as if she'd failed a test.\n\n\"That is alright,\" he replied immediately, moving to the knot at her hands and working at it.\n\n\"Trust must be earned. Let me adjust it, I don't want you to be afraid.\"\n\nShe felt the moment that her bound hands were released from the headboard post and with it came a rush of relief. There was an undercurrent of excitement there, in being trapped, but she wasn't ready to go there yet.\n\nMateo looked at her closely, gently moving the hair off her face so she could see.\n\n\"Better,\" she exhaled, trying to smile up at him and nod reassuringly.\n\n\"I am not finished with you yet,\" he said, his voice both a promise and a warning. Slowly, as if not to frighten her, he climbed atop her on the bed, letting some of his weight rest over her. He was so hot, and heavy, and it was the most their bodies had touched all day.\n\n\"How about this? I will keep your hands bound, but loop the tie around the bar here, and you will hold it.\" He looped the fabric around the metal post, tucking the tie into her own grasp.\n\n\"So if you want to be released, all you do is let go of the tie.\"\n\nAlice tested this, and she was free easily. Her bound hands didn't bother her at all now, except for the low, constant itch to tuck her hair.\n\n\"Yes, okay,\" she agreed, relishing the feeling of his hard body against her, so warm.\n\n\"I want you to try your very best not to let go though, Alice,\" he crooned, bending and kissing her breasts. \"Your grip on this material, here,\" he said, sliding a hand up the length of her arm to grasp her bound hands, \"it symbolizes your trust in me. And I very much want you to trust me.\"\n\n\"Yes,\" she murmured, letting her legs part to make room for him. His hand slid back down between her breasts as he slid down the length of her body. His hands were so big, they wrapped around her slight curves and spanned her waist completely. She felt the fabric of the tie in her grasp. He might be in control of her pleasure, but she was in control of herself. At least a little.\n\n\"I'll try, sir,\" she added, wanting to show him, and he nodded against the softness of her lower abdomen where he was currently licking and nuzzling.\n\n\"Good girl. That's all I ask, for you to try hard.\"\n\nAlice nodded faintly, her head falling back as he moved, kissing her skin, licking her inner thighs, biting gently the backs of her knees. She trembled again, unaware of these erogenous zones, thankful he wasn't going down on her. That, most definitely, would be too much right now.\n\nHe kissed all the way down one leg, scraping his teeth over the insole of one foot before moving up to the other. She wished she could stroke him, surely he can't be getting enough pleasure out of this.\n\nAs if he had read her mind, she felt the nudge of his cock against her belly as he moved over her, pressing down, wanting to be inside her again. He brushed against her a second time, and then a third, pressing his cock insistently against her opening. She felt his hand there too, and lifted her head to see.\n\nHe was holding his cock in his hand gently, his fingers moving up and down as he looked down at the taut length of her body. She looked at his face and his eyes were glazed over a little, the irises more black than brown now. Something low in her belly coiled to see him this way, hungry.\n\n\"I have wanted this from the moment I saw you, Alice,\" he murmured, touching himself, his cock so close to penetrating her again, but not yet. Again, that clenching somewhere deep inside, deeper than he could ever go.\n\n\"I have thought about you, like this, hundreds of times, when I stroke my cock in bed.\"\n\nShe moaned, her head falling back, feeling overcome suddenly with sensation, both physical and emotional.\n\n\"Fuck,\" she whispered, her face scrunching, feeling strangely like she might cry.\n\n\"Why do you say that, why do you say fuck?\" he whispered, his weight back on her again, his face close to hers to see.\n\n\"You're talking so much,\" she moaned, turning her head to the side.\n\n\"You want me to be quiet?\"\n\n\"No...\"\n\n\"You want to say something?\"\n\n\"No,\" she laughed. \"It's just... it's a lot.\"\n\nHe chuckled softly, planting a quick kiss on her cheek. She realized then he hadn't kissed her on the mouth at all, and the thought was, somehow, oddly painful.\n\n\"I will fuck you quietly for a while then, pretty little sub. Quiet, and slow. Then maybe I will ask you some questions. How does that sound?\"\n\nWithout waiting for her reply, he brought his cock to her slit and pushed inside. Dimly Alice could hear the actual sound of it. She was sopping wet. Her hips opened wider, she was still so ready for him, even though the feeling was dimmer now.\n\nWhore, she thought to herself, and then, Yes.\n\nHe fucked her slowly, as he promised, saying nothing, and it was the reassuring kind of fuck she was used to. Her body had expanded to take him in, and there was no discomfort as he moved, shifting positions. As he fucked her, his hands moved over her, exploring. He liked sliding his hands over her thighs, her stomach. When his fingers brushed her clit she hissed, tugging on the tie to pull herself up, and he moved away. She felt a flash of anxiety. He wanted her to come again, but she felt nearly finished. She wanted him to come now. She couldn't do it again.\n\nHe still said nothing, his hands moving instead to her ass, gliding over and over, his fingers pressing in. She felt his fingertips dip between her cheeks, graze her asshole, and instinctively she twisted away. No one had ever touched her there. She was beginning to understand what he meant by overstimulated, overwhelmed.\n\nHe made a soft sound, not of disapproval, but as if to remark something of note, and she could sense he was struggling not to speak. The idea that he wanted badly to talk made her want to smile.\n\nHe bent forward a little, abandoning her lower half and sliding his hands up to her breasts.\n\nSafe territory, she thought, letting him fondle and play with her. Still, as he squeezed and molded her flesh, his thumbs rubbing her nipples, she felt the distant twinge of pleasure again, followed swiftly with the desire for him to come.\n\n\"What are you thinking right now? Be honest,\" he crooned, apparently unable to be silent any longer.\n\nShe waited a moment before answering.\n\n\"I don't think I can come again.\"\n\n\"Why are you thinking about that?\" he asked, the curiosity evident in his voice. He continued moving, his dick sliding in and out, delicious, familiar friction.\n\nShe sighed. \"I feel... I think you want me to come more. I'm worried you'll be upset if I don't. If I can't.\"\n\n\"You have already come twice for me, Alice, and they were glorious,\" he countered, gliding his hands up and down her thighs. She was glad she had done a thorough job shaving.\n\n\"I am not thinking of you orgasming again. I am fucking you now because it feels good to me. Does it feel good to you?\"\n\n\"Yes,\" she sighed readily, truly sated. \"Yes, it feels good.\" And it wasn't a lie. She hadn't ever simply enjoyed continuing to have sex after she came. After she climaxed, the immediate task was always to get her partner off. But Mateo seemed in no rush to finish. And if he wasn't demanding that she come again, she could admit that the continued feeling of his cock inside her was nice.\n\nHe growled softly, his hands gripping into her thighs. She felt the difference, her body alerted to it.\n\n\"Then stop thinking about what may or may not happen later. Just feel my cock worshipping you,\" he hummed, taking her thighs in his hands and lifting them up, pressing them against her chest. He took one of her feet and kissed the insole like it was her mouth, tickling her.\n\n\"Feel my hands, my mouth,\" he murmured, almost to himself. \"Feel how much your beautiful body has to give me. So many gifts.\"\n\nA lick of flame shot through her unexpectedly.\n\n\"Tell me why you want to be a submissive, Alice.\"\n\nThe question caught her off guard, and she looked at him. Seeing her gaze, Mateo stilled in his perpetual rocking.\n\n\"No,\" she murmured, craning up as far as she could, looking down at where their bodies were joined.\n\n\"You want to stop?\" he asked quickly, removing his hands from her. Still she held tight to the fabric of the tie, binding herself to the bed by choice.\n\n\"No, I want you to keep going. Please.\"\n\n\"I will keep going if you tell me why you want to be a submissive.\"\n\nShe sighed, rather annoyed at his damn need for words. She let her head fall back on the bed and closed her eyes.\n\n\"Work is stressful,\" she said simply.\n\nMateo waited, making only a soft sound of encouragement. He began to move again, sliding his cock in and out at the same pace as before, his hands dancing lightly.\n\n\"I work long hours. Sometimes I go weeks without a day off. And it's a physical job, you know. I'm exhausted from running around.\"\n\n\"You look too tired. You work too much.\"\n\nShe tried not to take offense at the idea that he was telling her she looked haggard right now.\n\n\"It's the nature of the work,\" she protested. \"No great chef ever made it by working only 9-5. You have to give everything, just to get a little back.\"\n\nMateo considered this.\n\n\"Being a submissive is not necessarily restful,\" he said, and she laughed. What a delicate way to say she'd get even less sleep being regularly fucked like this.\n\n\"That's not why.\"\n\n\"Then why?\"\n\n\"When I started out as a line chef, I could just do things by rote, you know? Chopping, prepping, cleaning. You don't have to think about anything on the line, just go go go. But now Thad wants me to take more ownership, he wants me to develop menus, talk with clients, work with the vendors. It's a lot.\"\n\n\"You don't like this extra work?\" He sounded concerned, and she realized how difficult it was to get to the heart of what she was feeling. And how little she'd tried to articulate it, even to herself.\n\n\"No, I do. But I have to make a lot of decisions. I'm the one in charge of every single detail. Without me staying on top of everything, a whole event could fall apart. And it's important stuff, like a wedding. If I fucked even one thing up, then the food at someone's entire wedding is ruined. It's so much pressure.\"\n\nMateo took her knees in his hands, spreading her legs so wide the outside of her thighs touched the mattress on both sides. She'd always been flexible, ballet when she was younger. He murmured his approval to see this, rotating his arms to press her knees down into the bed as he fucked her, putting weight on them. Alice liked this feeling, of being held down to receive him, spread wide open.\n\n\"How does the pressure make you feel?\"\n\nFor a brief moment she thought he was asking about the pressure on her legs, but then remembered what she had been talking about.\n\n\"Stressed,\" she admitted. \"I want to do so well. I want to make Thad proud, and show him I can do it. But I'm not a leader by nature. I hate having to order people around and hassle them for not doing their jobs.\"\n\nIt was the most she'd talked all day, all week really. But the words flowed out of her easily. Mateo was good at coaxing it out of her little by little.\n\n\"And the submissive part?\" he prompted, and she smiled.\n\n\"I want to not have to be in control,\" she said simply, and the pressure on her spread legs increased. She thought of him, of what he was doing for her right now.\n\n\"I want someone to take it all away from me, just for a little while.\"\n\nHe made a low, predatory sound and she looked up, startled to find his eyes fierce and fixed on her face.\n\n\"Have you thought about work much since seeing me in that cafe?\" he asked breathily, pounding into her with more force now.\n\n\"Not at all,\" she tried to laugh, but it died in her throat.\n\n\"Then, it is working?\"\n\n\"What, your dick?\" she tried to tease.\n\n\"No,\" he growled, sliding his hands up to grip her hips roughly. \"My possession of you.\" He thrust into her hard, slamming her body down onto his cock as he penetrated her with an audible sound. She gasped, another stab of deep feeling.\n\nHe kept up his increased pace, and she could see the change in him as he focused on the fuck instead of focusing on her. His own need was beginning to win over his need to pleasure her. She felt it as a kind of victory. Finally, she thought.\n\nHis hands released her hips, one moving back to her thigh, pressing, the other splaying flat against her lower abdomen. He seemed to shift his weight, pushing her down as he fucked her. The feeling was strong, and good, and right. It was different from before, dark and inviting.\n\nHe watched her take his weight passively, unresisting, looking up at her hands as they clutched the tie still. The hand on her abdomen slid up, her torso slick with sweat, coming to rest on her sternum, still flat, still pressing. She felt grounded, firmly rooted to the bed. There was no need to move, she couldn't move at all. Nowhere to go, nowhere else she wanted to be.\n\n\"Can you breathe?\" came his hoarse question, and only then did she feel the constriction in her chest as the weight of his arm prevented her from taking a full breath.\n\n\"Yes, sir,\" she replied, and she saw his eyelids close briefly at her resumption of the formality.\n\n\"Tell me to stop if you can't,\" he commanded, his hips tilting as he pounded into her, small sounds escaping him with every thrust. He was beginning to lose his composure. She could see a bead of sweat on his face.\n\n\"Yes, sir,\" she echoed again, watching the effect of it on his face.\n\nThe hand on her thigh left her, coming to the bed as he leaned forward, his other hand sliding from her chest upwards, wrapping the tips of his fingers around the curve between her shoulder and neck, ever so slowly inching his thumb across her throat. Alice felt a dark thrill of excitement shudder through her, less sure now that her pleasure had ended.\n\nShe tilted her head back slightly, offering her throat to him, and his hips jerked as he moaned, coming down onto her more, penetrating her deeper. Alice felt her fingernails digging into the palms of her hands as she gripped the tie, refusing to let go.\n\n\"I like it,\" she moaned softly. \"I like it, sir.\"\n\n\"Foda,\" he muttered, his thrusts taking on a violent edge with this unknown Portuguese word. She felt suddenly sure she could come again, she would come again, if this could be called coming, what was happening to her now.\n\n\"Yes sir, yes sir,\" she whispered over and over and he groaned, pained, pressing his thumb down. She could feel that his orgasm neared and she welcomed it.\n\n\"So fucking good, Alice. Fuck,\" he grunted, closing his eyes again, panting as he pummeled her. Seeing him lose his self-possession was the most erotic thing she had seen in her life. The weight of his hand deepened and his thrusts became erratic. Alice felt dazed, poised on the precipice of another shattering climax, her breath paused.\n\n\"Please sir,\" she gasped, arching. \"Please, I have to come.\"\n\n\"Fuck, yes, yes,\" he said again, saying the word over and over, and she let his permission wash over her, a different kind of surge blooming inside her. He was a savage thing now, clawing at her body, shoving her down onto his thrusts, over and over. He was grunting, and as she felt her body bow with the intensity of the blossoming heat he threw back his head, jerking abruptly, spilling over into her with a loud cry. In his abandon his hand slid away from her throat and a rush of endorphins flooded her mind, stars prickling behind her eyes. It was an orgasm, and yet it wasn't. It was like she had turned inside out.\n\nHe must have moved out of her, and off, because she suddenly felt lighter, the weight lifted. The sound of their frantic breathing filled the room, discordant and intense. Alice knew she was completely exposed, naked and sweaty sprawled over the bed, but for the first time in her life she couldn't muster the energy to cover herself. She realized distantly that her hands were still clenching the tie. Her grip was shaky now, her hold on the fabric more symbolic than functional. But she stayed there nevertheless. The idea of letting go didn't even occur to her, even then.\n\nInstead, she opened her eyes and turned her head, wanting to see Mateo's expression.\n\nWhat she saw surprised her.\n\nHe was rubbing his face vigorously with both hands, almost aggressively.\n\n\"Shit,\" he cursed under his breath, and her heart gave a throb of pain. He must regret it.\n\nBefore she could think of what to say he sat up, the beauty of his broad, brown back exposed, his shoulder blades in high relief as he bent over. He shifted, standing, and she heard the unmistakable sound of a condom being peeled off. Then he was walking to the bathroom, shutting the door firmly behind him.\n\nAlice waited, her heart thundering now for an altogether different reason. Instinctively, she clenched her thighs together, feeling the cool AC blow over her skin and making her shiver. Still she waited.\n\nLong minutes passed, and Alice slowly came back into herself and the reality of her situation. Mateo wasn't her master. She wasn't his slave. This was the 21st century. He was just an acquaintance who had fucked her in a hotel in the middle of the day, and now he wanted her to go. No surprise there. She knew this feeling well, a man wanting her gone already.\n\nAlice tentatively loosened her fingers, stiff from such prolonged tightness. She let the silky tie slip through them, bringing her bound hands closer to her face for her inspection. Her arms ached as she did so, and she winced.\n\nMateo's adjustment of the tie earlier had undone some of his knotting work, and she could see easily how to unbind herself. She did so slowly, glancing at the bathroom door, half expecting him to open it and scold her for her disobedience. But when he didn't, she let the tie fall, rubbing her wrists absently and patting her unruly hair. It felt like a frizzy halo all around her, and she felt glued to the bed with perspiration. The whole room smelled like sex. Slowly, she tucked her hair behind her ears.\n\nAlice suddenly remembered her ad. One day only. No money exchanged.\n\nHe was only doing what she had wanted, letting her leave without a scene. She sure as hell wasn't going to be found lounging around naked in bed when he came out. God, if he went to the table and reached for his wallet, she'd crawl under a rock and die.",
        "Filled now with purpose she rolled off the bed, feeling all over how sore she would be from his rough handling. She went to the chair with its neat pile, wobbly as she stepped into first her underwear and then her jeans, yanking them up with force. She didn't even bother with the zipper or button, grabbing her bra instead to fasten it, her eyes glued to the bathroom door. Now she would give anything to be able to make her getaway. She had wasted so much time.\n\nShe had her sweater in her teeth as she struggled with her bra clasps when the door whirled open with a whoosh. Mateo stood at the door frame, naked still, another towel wrapped around his waist. Alice's eyes widened, but her hands kept moving.\n\n\"What are you doing?\" he demanded, his eyes roving over her, after first looking for her on the bed.\n\nAlice said nothing, but she froze.\n\n\"Where are you going?\" His voice rang with anger, and he took several swift steps towards her.\n\nSlowly, she pulled the sweater out from her mouth, holding in front of her exposed chest.\n\n\"I thought... I thought I should leave.\"\n\nThe urge to end her sentence with \"sir\" was still strong, but she resisted it. It felt most certainly like their \"session\" was over.\n\n\"No,\" he barked, lunging forward and grabbing the sweater out of her hands, throwing it on the floor. Alice swallowed hard, and felt a prickle of fear. Was he not going to let her leave?\n\n\"Sit down,\" he commanded, and the fear in her turned swiftly to anger. He wasn't going to talk to her like a dog. She felt almost nauseous with the riotous emotions battling within her.\n\nFor a moment they were at a standoff, but then he sighed, bending down for her sweater and sitting on the foot of the bed. He placed the sweater down next to him, looking at it.\n\n\"Please,\" he said softly.\n\nHe looked oddly defeated all of a sudden, the fire in him gone. The sight of it was so surprising that Alice found herself sitting on the bed beside him without thinking twice. She crossed her hands over her abdomen, feeling strange in just jeans and a bra, and looked out at the black TV screen.\n\n\"Alice, I...\" he began haltingly, then stopped. He made a low sound and began rubbing his face again with his hands.\n\nShe didn't like this. Not at all.\n\n\"Merda.\" Portuguese sounded like music to her, but that word at least, she knew.\n\nShe gritted her teeth, hating him suddenly for drawing this out.\n\n\"Look, I'm fine,\" she insisted. She felt exasperated, but her voice sounded weak. \"We don't have to do this. I can just go.\"\n\n\"I don't want you to go,\" came his immediate retort. \"I want you to stay.\"\n\nShe closed her eyes lightly, feeling the anxiety pulse low in her belly. If only she had been faster.\n\n\"But if you want to go, then go,\" he added, as an afterthought, and she felt him place her sweater in her lap.\n\nAlice said nothing.\n\n\"I went too far,\" he said softly, and even with her eyes closed she felt him looking at her now.\n\n\"At the end there,\" he went on, \"I almost lost control. I don't... I don't really know what happened. I'm sorry.\"\n\nThe unsteadiness in his voice made her pause and replay their session in her mind. She wasn't sure how long they'd been here, but all she found in her memory was pleasure-drenched sex.\n\n\"It's okay,\" she replied vaguely, unsure of what to say.\n\n\"No, it's not okay,\" he answered angrily, nudging her. She knew what he wanted. She opened her eyes and looked at him and her breath caught. His gaze was fiery, but his movements were anxious. She almost felt him vibrating beside her on the bed, refraining just barely from shaking more words out of her.\n\n\"You are so new. I took advantage. I swear, I never lose control like that,\" he went on in a rush, beseeching her with his open hands. She looked down at them, frowning, and he did too.\n\n\"I just felt so... connected to you.\"\n\nHis words tingled with a new kind of intimacy and she blinked, feeling their resonance in the air between them for a long while after he spoke. Still he held his hands open, begging for her answer.\n\n\"You didn't take advantage,\" she countered, pushing his hands away. \"Even at the end, you told me to stop if I wanted to. I told you I liked it. I did... like it.\" Her voice trailed off, her brief spurt of bravery already exhausted.\n\nMateo said nothing, looking down at his thighs. He made a low sound of disbelief.\n\n\"I never let go of the tie,\" she reasoned with a laugh that held little humor. She gestured at the open bathroom door. \"Even when you went in there.\"\n\n\"I laid here naked the whole time,\" she said, feeling almost like she was talking to herself.\n\n\"Gripping that damn tie, waiting for you to release me.\"\n\nShe saw Mateo twist to look back at the bed, at the imprint her body had left in the sheets, the discarded tie limp amidst its ruffles.\n\n\"I shouldn't have been so rough, you'll bruise,\" he murmured, regretfully. \"It was only our first session.\"\n\nAlice's stomach clenched at the word. First. Would there be more, then? She wanted to show him that yes, she wanted more.\n\n\"I feel amazing,\" she said, trying for a bright smile, eager to show him she was alright.\n\n\"You do?\" His look at her was skeptical.\n\n\"What, you feel like shit?\" she laughed.\n\n\"No,\" he laughed back in a huff, a smile briefly illuminating his face. \"Far from it. I'm just... rattled, I guess.\"\n\nRattled. Sous chef pipsqueak Alice had rattled the suave, Brazilian millionaire. She felt a flush of pleasure, felt the evidence of it on her ever-present blush.\n\n\"You trusted me?\" she heard him ask hesitantly, and she glanced up to find him studying her intently.\n\n\"I did,\" she nodded. \"I do.\"\n\nHe smiled again then, the beauty of it lingering on his masculine face. The smile made him look young, and sweet, and she felt her heart throb to see it.\n\n\"You still want to be a submissive?\" he grinned.\n\nShe swallowed, looking away, sliding her fingers behind her ears, even though her hair was already securely there. She couldn't answer that while holding his gaze. Was he asking about her predilections in general, or about him in particular? The answer was the same either way.\n\n\"Yes,\" she said finally, barely above a whisper.\n\nFor a moment they sat together in silence, and she felt Mateo tug the sweater out from under her hands. He buried his own hands in its fabric, seemingly unaware of what he did.\n\n\"A lot of submissives,\" he began, stopping to clear his throat and take a breath. \"A lot of submissives will look around, you know, before deciding on a dom. It is a commitment, you want to be sure there is... compatibility. You, Alice, you are very beautiful and sexual, and there will be a lot of doms who want to vie for you.\"\n\nAlice absorbed his words, imagining herself some kind of medieval princess, men in full armor jousting for her favor. It was ridiculous to think men would vie for her. She wasn't sure where Mateo was going with this. It seemed equally likely that he was encouraging her to sleep around as he was warning her against doing so.\n\n\"There are bars,\" he went on, somewhat awkwardly. \"And... and clubs. I could take you there, if you want to. Keep looking around, that is.\"\n\nJesus, was he pimping her out now? The thought of Mateo offering her to other doms like she was a hors d'oeuvre was excruciating.\n\n\"No more ads?\" she laughed weakly, trying to steer the conversation in another direction.\n\nHis head turned sharply. \"Swear to me now, no more ads, Alice.\" The swiftness with which his awkwardness turned to ire was impressive, and she had to fight a smile.\n\nWhen she still said nothing, he had the nerve to point a finger accusingly in her face.\n\n\"Swear it!\" he exclaimed, his face dark.\n\n\"I swear it, I swear it,\" she laughed, throwing up her hands in self defense.\n\nHe growled a little, barely satisfied, and wriggled his fingers back into the knit of her sweater. She glanced down at it, wondering if he was ruining it.\n\n\"You said there was a lot further down the rabbit hole to go.\"\n\nShe heard his sharp inhale.\n\n\"There is, Alice,\" he insisted, looking at her still, though she had turned back to the TV.\n\n\"You have to be careful,\" he went on. \"You... you have to find the right dom. It is the most important thing.\"\n\nAlice waited for him to make his offer, but he said nothing. She took a deep breath.\n\n\"Well, I feel great,\" she said softly. \"You, you made me feel great.\"\n\nHe still said nothing, and she felt her blush deepening.\n\n\"And we seemed... connected, like you said,\" she reasoned, trying to sound nonchalant. She could hear his breathing now, and imagined his fingers digging deeper into the weave of her sweater, rending it beyond repair.\n\n\"Clearly I trust you,\" she went on, as if convincing herself and not him. After every brief spurt of her courage she waited, hoping he would just offer himself as her dom, ask her to be his submissive, for a trial run at least, but he was damnably silent.\n\n\"I'd feel weird going to a random club and finding some stranger. That's practically the same as an ad.\"\n\n\"It is,\" he echoed quickly. \"It's almost exactly the same.\"\n\n\"So...\" she ventured, feeling her face aflame, \"maybe you and I could... meet up again. And you could show me more.\"\n\nHe let out a soft exhale, and Alice felt more emotionally peaked than she had all day.\n\n\"If you even want that,\" she blurted out, feeling embarrassment start to take over.\n\n\"I do,\" he answered not even a second later, his voice declarative.\n\nHer heart pulsed.\n\n\"You probably already have one. A... a submissive, I mean.\"\n\n\"No,\" he spoke again in that terse tone.\n\nStill he said nothing, after blabbering endlessly while they fucked. Alice's frustration flared. Why was he making this so difficult? Couldn't he see that she was floundering? What else could she possibly say for him to just agree to see her again? Did they need a freaking contract? But then the thought occurred to her that perhaps all doms did this. How else would they know if a submissive really chose them, without being commanded into it? So she bit the inside of her cheek for one last sprint of courage, and forged on.\n\n\"Okay, then that settles it. For now. But I am going to be sore as fuck for days, Mateo. No round two thousand right now.\"\n\nShe risked a glance up at him and found the brilliant smile back on his handsome face.\n\n\"What?\" she laughed.\n\n\"Nothing,\" he shook his head, still smiling.\n\n\"You are a remarkable woman, Alice.\"\n\nAlice pressed her lips together tight to stop herself from grinning.\n\n\"Can I at least shower before we leave?\" she laughed again, standing up.\n\n\"Where do you need to be?\"\n\n\"Nowhere,\" she shrugged. \"I figured you were trying to check out.\"\n\nMateo glanced around the hotel room as if seeing its lavish furnishings for the first time.\n\n\"This is a pretty nice room,\" he commented. Alice bit back a sardonic laugh. She bet he thought the Eiffel Tower was \"pretty nice\" too.\n\n\"Do you have to work this weekend?\" he asked. \"What is your next thing?\"\n\n\"I go in tomorrow at 1, to prep for an event Sunday morning.\"\n\n\"Can I have you then, until tomorrow at 1?\"\n\nHer heart gave a twinge at his phrasing. Have her.\n\nHe misinterpreted her pause as hesitation, and went on.\n\n\"I could give you a bath,\" he offered, gesturing at the opulent jacuzzi tub she had spied in the bathroom. The idea of Mateo bathing her was so strange that she glanced down at where he still sat at the foot of the bed, but his face was genuine.\n\n\"I've been an awful dom already, leaving you out here on your own instead of caring for you as I should. You could have a nice soak, and then we could order some food, watch a movie, sleep.\"\n\nIt seemed highly doubtful to Alice that there would be much sleeping.\n\n\"In the morning I could bring you back to your place, and then to work, or, I could drop you at your car.\"\n\nIt was a series of offers that even the Godfather couldn't refuse.\n\n\"Okay,\" she murmured with a smile, shifting her weight and wrapping her hands again around her abdomen, feeling victorious.\n\nMateo broke out in another broad smile and he lunged for her, grabbing her by the waist and pulling her back to the bed. Alice shrieked in surprised laughter, playfully pushing against his chest. In response he rolled more of his weight onto her, pinning her down slightly, and the laugh died in her throat.\n\nHe looked down at her for a long moment, reaching up to brush the hair from her face, carefully tucking strands behind first one ear, and then the other. She felt her smile fade as she watched him do this, feeling something deep inside her twist.\n\n\"As you like it,\" he murmured in explanation, trailing his fingers down her jawline, tracing over her lower lip.\n\nHe paused, bending suddenly to press his lips against hers gently.\n\nIt was a shy kiss, and she smiled underneath it. She felt him murmur something she couldn't quite hear before he kissed her again, and then again, exploratory and sweet. It was as if they were on her front stoop after a first date.\n\n\"So, how does it taste, Alice?\" Mateo asked, his voice a low, joyful rumble.\n\n\"How does what taste?\" she laughed, confused.\n\n\"Your ad. It said you wanted to taste the forbidden. How does it taste? Spicy?\"\n\nShe laughed again, considering the question. \"Not quite. I'd say it is umami.\"\n\n\"What is that?\"\n\n\"When a dish is bland, you add umami ingredients to give it that something you can't quite place. Like adding bone broth, or mushrooms, or fish sauce.\"\n\n\"Sounds a little nasty,\" he teased, bending down to brush his lips against hers again. When he withdrew, she lifted a hand to touch his face gently, as he had done. He looked at her exploring fingers with some surprise.\n\n\"Not nasty,\" she argued mildly, tracing her fingertips over the lines of his face, feeling the expansion of his chest against hers.\n\n\"Rich, multilayered, and intense. Elemental. When a dish is missing umami, you know.\"\n\nMateo turned his head, taking her questing fingertips one by one into his mouth before sucking on them gently. She felt her pussy cramp, in anticipation of still more.\n\n\"Then it seems essential,\" he murmured, taking more of her fingers into his mouth, his tongue flicking over the crevice between her knuckles.\n\n\"Yes,\" she breathed, her legs parting. \"Essential.\""
    ],
    "authorname": "Surfacing1440",
    "tags": [
        "bdsm",
        "dominant",
        "submissive",
        "bondage",
        "anonymous",
        "delayed gratification",
        "hotel",
        "breath play"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/a-taste-of-submission-2"
}