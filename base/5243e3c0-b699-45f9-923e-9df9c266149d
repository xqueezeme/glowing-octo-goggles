{
    "title": "Occultation",
    "pages": [
        "This one is... closer to home.\n\n--\n\nI sipped my beer and stared out of the window, listening with half an ear as Tom and Pete bitched at one another about a fantasy game series they were both over-invested in. Outside, a small mixed group of friends and friends-of-friends sat by the pool, dangling their feet in the water and basking in the sunshine.\n\nKate's parents had gone away for the week so she'd organised a get-together - a relaxed, afternoon drop-in-drop-out drink and snack fuelled meet-up for all of her spindrift friends - in the lovely surrounds of her parents' enormous house, or Ch\u00e2teau McKenzie as the rest of us always wistfully called it.\n\nI grinned at Kate as she flitted through with another bottle of pilfered wine, and raised my beer in smiling benediction as she laughed at the three of us - the \"Three Kitcheneers\" as we had long ago been named. No matter the venue, the three of us would somehow find the kitchen and turn it into our fiefdom.\n\nMainly, of course, because it was usually quieter, so Pete's duff hearing wouldn't exclude him from our chats.\n\nThat and we could hide from the girls we were all too shy and introverted to talk to.\n\nKate breezed through again.\n\n\"Boys, you're being antisocial,\" she lectured us in passing and we all waved sarcastically. She made for the front door and collected three women that I didn't recognise.\n\nThe first two seemed nice enough, but it was last of them - a tall, athletic brunette with a lovely face and a wonderful tomboy haircut - who caught my eye as they walked past; she noticed my glance and gave me an amused wink in passing.\n\nHer brief flash of humour captured my attention right away. Then I snorted at myself for misreading her reaction as interest; she was almost certainly simply another card-carrying member of Kate's Lesbian Army. Fun but unobtainable, for obvious reasons.\n\nBut all the same I watched her when I could, admiring (and, I'll admit it, somewhat intimidated by) the way she so easily insinuated herself into conversations with people she didn't know, befriended them, and then moved on.\n\nShe had a light, easy laugh that rang out often; and an infectious grin that was almost never absent. She mingled happily, sharing her time in small parcels that she offered to everyone.\n\nLater on she came over to me, and introduced herself as Flick (short for Felicity), and I, awkward and tongue-tied, let her know that she could call me Jamie instead of James.\n\nAnd for the next two hours we just talked about nothing, and I was mesmerised her - by the particular blue of her glorious eyes, the copper highlights in her hair, and the way she'd reach out to touch my arm when she wanted to emphasise a point.\n\nShe gave me a warm, extended hug when she left to make 'another engagement', and I was genuinely sad to see her go.\n\nKate, however, had been taking notes. From then onwards, whenever she had a hand in organisation she'd make sure that Felicity was included.\n\nAnd that I was there as well.\n\n.:.\n\nSpring rolled over into summer.\n\nFelicity became a regular feature at parties, barbecues and any outdoor activities such as park runs, beach days or climbs up the mountain. We worked out that she was a family friend of Kate's, and that she'd come back to Cape Town after finishing her degree because she'd chosen the slow life down south rather than the money and career prospects of Johannesburg.\n\nShe was a riot at our parties - she had a large collection of terrible or risqu\u00e9 teeshirts and delighted in wearing the most questionable of these for laughs. She could pun like nobody I'd ever met. Quick witted and always sunny, she became a natural party locus - always surrounded by friends, never alone in the corner. Everyone came away happier from spending time near her, she radiated joy and was almost never down.\n\nAnd she always had a smile and time for me. She'd corner me in the kitchen, quiz me about my day or week depending on when last we'd seen one another, and I'd repay the compliment, using what little bit of conversational ability I had to winkle little things out of her like her surname (Smith), the date of her birthday (August 10), her favourite movie (Ghostbusters) and her favourite colour (Daffodil yellow).\n\nWe became good friends and from there evolved to close friends; she'd call me if she was going anywhere interesting with the kind of people she knew I'd get on well with, and I'd call her if I was going bouldering or beach-walking and wanted simple, friendly, low-maintenance company where I didn't have to pretend to be deep or interesting, where we could walk or climb or run or swim in relaxed and comfortable silence without the artificial need to speak unnecessary words to one another.\n\nFelicity was game for anything - as she put it she'd try everything once.\n\nOur friends began to refer to us as Mr and Mrs Smith, and she'd laugh at them. I'd call them all sorts of rude names, upbraid them at volume, and question their ancestry with all the care and attention to detail that they all expected and demanded from me.\n\nOf course, everyone listened to me, nodded sagely in agreement, and went right on calling me Mr Smith.\n\nAnd Felicity would laugh, and laugh, and laugh.\n\nAnd, eventually, so would I.\n\nLate summer rolled around, and our group set up a weekly evening sundowners gathering on the prettier Atlantic-side beaches of the city; Clifton and Llandudno became our favourite haunts, and Felicity would nearly always be there, and when she was she would always take up position next to me. It didn't matter if she arrived late, a spot would be left free for her beside me by whoever else was there - an act of near-religious faith that she would be along 'soon'.\n\nI have many memories of her, laughing in the dusk, watching me and, sometimes, others as we talked shit into the early evening and watched the southern stars come out over the cold Atlantic waves.\n\nFelicity and I began discussing more private things with one another. I'd bitch to her about work and she'd bitch to me about the career that she hadn't yet managed to launch. We'd gripe at one another about boys, about girls, about the various shoot-downs we both suffered in our abortive quests to find 'the one'.\n\nI knew I could always rely on her to listen to me, and I took liberties with that generosity that would sometimes make me cringe later in remembered horror. But Felicity would just smile at me with those cerulean eyes of hers, and give me the advice I needed even if it was not the advice I wanted at the time.\n\nIn hindsight, I can't remember a time she was wrong.\n\nSometimes, though, I'd catch her watching me. And while she'd mostly be smiling, sometimes I thought I saw the flickers of shadows - hints of some deep-held darkness that she would not voice to me.\n\nAnd to be fair, I spent a lot of time watching her too.\n\nWatching. Wondering.\n\nWishing.\n\n.:.\n\nAutumn came, and the days grew shorter. I'd meet her and a group of her friends for morning walks through the forests above Newlands, the sole guy in a gaggle of young, fit women. I'd get amused looks from other trail runners or walkers, but the girls would be too busy joking or dramatically reenacting Significant Events Of Male Stupidity for one another, and I would be too busy laughing at them to care or even really notice.\n\nI became friendly, then flirty, with one of them - a blonde strumpet named Amanda.\n\nI was starting to wonder if she perhaps liked me, if I should ask her out - when suddenly, without ever finding out why, the invites to the walks with my 'harem' flickered out overnight.\n\nI was upset by that, and spent many hours wondering what the fuck I had done or said (or not done or not said) to offend five different women at once.\n\nBut Felicity still met up with me - between us nothing seemed to have changed, and I was unbelievably grateful for that.\n\nI mentioned it to her once in passing, and she simply responded with a quiet, somewhat abrupt \"It's awkward with friends.\"\n\nThe penny dropped and I learned my lesson. I'd tested our friendship. I wouldn't do it again.\n\nFrom that day on I steered well clear of our common ground, and did nothing with anyone who was even remotely part of our social circle. I began to frequent online dating sites, and went on the occasional dinner or coffee with the more interesting or eloquent women who would occasionally contact me.\n\nNot many did; I was fit and tall, but neither trendy nor interesting enough to warrant much attention beyond a brief first glance.\n\nWhen Felicity asked I'd tell her what I was up to, but I stopped volunteering anything out of fear of upsetting her again. And I noticed that she stopped sharing the more personal bits of her own life with me.\n\nIt took me a long time to work out why she'd done it.\n\nAll I felt at first was a vague sense of betrayal; of something lost that I'd come to regard as mine.\n\nBut then, I've never claimed to be an intelligent man.\n\n.:.\n\nShe found a new job, and her career took off. She kept her haircut, but the style of clothes she wore morphed from the linens and teeshirt she'd always loved to smart business attire, and I had to admit that she looked fantastic in a suit. She flushed bright pink, pleased as punch the one time I mentioned this, and her farewell hug that evening seemed to linger far more than normal. But by the next time I saw her things were back to normal again.\n\nPeople had drifted away over the months and years, but the core of our social group would still meet regularly - at restaurants, at wine farms, and sometimes on the beach when it had been too long and we all just wanted to be around one another and remember our 'golden years' as Kate once laughingly called it.\n\nFelicity would sit beside me, long legs crossed neatly, sipping her wine with an amused smile as she listened to the conversation around us.\n\nShe was quieter these days - not as boisterous, not as likely to drink too much and drag me out of the kitchen to dance to bad disco with her as she once had.\n\nThe hugs she gave me became less frequent, but longer. The looks she gave me were sometimes hard to interpret.\n\nOur phone calls became less frequent, then intermittent, with strange silences in them that left me confused and sad after I'd said goodbye.\n\nI bitterly wondered if she was growing bored with me.\n\nThen a job came up in Johannesburg, and Felicity left Cape Town like a ship slipping her moorings in the night. She left me a short but emotional voicemail to say goodbye, telling me to take care of myself, and that she'd see me around... sometime.\n\nAnd I spent many hours of that evening perched on a rock, high up on the flanks of the mountain, staring woefully out at the city as the darkness drew in and the lights came on, feeling lost and strangely alone.\n\nThe next time I saw Kate, she looked at me like I'd grown a third arm, and wouldn't answer any question that even touched on Felicity and her wellbeing.\n\n\"Why don't you ask her?\" she'd said, acidly, before turning her back on me.\n\nAnd I'd stared after her, no wiser.\n\n.:.\n\nMonths passed in their usual way, and I focussed my energy on work to distract myself from her absence. Somewhere along the line I fell in with some sailors from the Royal Cape Yacht club.\n\nI discovered that sailing (and post-sailing socialising) kept me amused, suntanned, fit and, strangely enough, completely out of trouble of any sort. I was surrounded by bluff, honest men and women who had nothing to prove to anyone but themselves, and their influence weathered a lot of the rougher, more childish parts of me away. I no longer chased other people's leavings in the hope of filling the gaps in me.\n\nI could look at myself in the mirror now without even an echo of self-consciousness. I knew who and what I was, and I needed nobody's validation. I'd made peace with the gaps in my life. Time would smooth the edges of them away as it had with me.\n\nBut I wasn't happy. I was not content.\n\nI missed Felicity like the sun on my face.\n\nI finally worked up the courage to phone her, and caught her in a restaurant with her new social circle; she was offish (and waspish and many other -ishes), but pleased to hear from me nonetheless, especially when I grovelled for not calling her sooner. She told me she'd think about forgiving me for being such a shit friend, and I smiled as I heard the familiar bubbling laughter in her voice. She stole a precious five minutes of her evening to give me a quick summary of what she was up to and to get the same from me.\n\n\"Call me sometime,\" she said softly, before she said goodbye.\n\nAnd I promised myself I would be a man and do so.\n\nBut as the days dragged out into weeks, somehow that sometime never came.\n\n.:.\n\nIt was a midwinter Saturday morning; cold and wet as only the Cape could be, with a brutal storm pummelling the coast and cascades of brown muddy water streaming down off Table Mountain.\n\nI was sitting in my local coffee shop, nursing a morning flat white and my Kindle, surrounding myself with the soft sound of humanity as opposed to the echoing solitude of my cold and empty flat. My friends had all found girlfriends or boyfriends; I was the odd one out, the last man standing, and it was a lonely place if I left myself time to think about it.\n\nI'd just settled in for the duration when my phone lit up; I glanced at it, then scrabbled for it, raising it to my ear.\n\n\"Flick?\"\n\n\"Hey, James. I thought I'd phone you since you're so hard to track down and so shit at phoning me.\"\n\n\"I'm sorry. I'm a truly awful friend.\"\n\n\"Yeah, you are,\" she said softly. \"But I'll forgive you one more time. Where are you?\"\n\n\"Um. Cape Town?\"\n\n\"No shit. Really? Where in Cape Town, you twit.\"\n\n\"At a small coffeeshop in Vredehoek. Why?\"\n\n\"Feel like going ice skating with me at Grand West? At the indoor rink?\"\n\n\"Wait... you're here? For reals?\"\n\n\"Yep. Drove down yesterday because I was not going to risk a flight in this weather. It was mum's sixty-fifth so I wanted to see her. But they're all off visiting friends today and I'm at a loose end... and I've missed you, you soulless bastard. So... I'm heading out there now. I'll wait at the entrance, and if you're not there by... fuck, what's the time... eleven thirty, I'm going to stop speaking to you for good.\"\n\n\"I'm leaving now. See you there,\" I said, as I scrambled to my feet.\n\n\"Don't be late,\" she said, with a laugh. \"See you just now.\"\n\nI downed my coffee, cursing as it scalded my throat. Then I grabbed my jacket, struggled into it, and made for the car park.\n\nI had lots of time to practice my apology as I drove the half an hour northwards.\n\n.:.\n\nShe was standing off to one side of the skating rink's entrance, wearing a tight, form-hugging grey wool dress and a bright yellow scarf, somehow glamorous and exotic despite the grubby blue sneakers.\n\nShe smiled like sunrise as she caught sight of me, and came skipping over like she always had before. I laughed, caught her in my arms, and swung her up into the crushing bear hug I'd always given her when we'd been apart.\n\nShe clung to me, and wouldn't let go at first, but eventually she stepped back and smiled up at me with those blue eyes that had always made it difficult for me to form complete sentences.\n\n\"I'm sorry,\" I said, first to speak and desperate to get my apology in. \"I'm sorry for being so terrible, for being so wrapped up in my own life that I never picked up the phone and reached out to you.\"\n\nShe grinned. \"You're an absolutely tremendous dick, James. By all rights I should give you a spanking.\"\n\n\"Promises, promises,\" I said, in my old playful way, and she laughed at me.\n\n\"Come on,\" she said, \"the session is about to start.\"\n\n\"You do remember how bad I am at this, right?\"\n\nShe grinned. \"It's hard to forget. Don't worry, I'll catch you if you fall.\"\n\n\"My hero,\" I said, sarcastically.\n\nWe swapped our shoes for skates, and I followed her nervously out onto the ice, struggling as always to find my balance, flailing about like a three-legged giraffe while she simply undulated out over the surface as comfortably as a river flowing downhill to the sea.\n\nShe left me far behind as she swept out on her first circuit, weaving gracefully in and out of the slower-moving clods like me. She turned as she passed me, gliding away backwards, grinning and waving as she left me in her wake again. I watched her lean into the corner, enjoying with a pang of bittersweetness the freedom and grace that she carried along with her.\n\nThen, as always, I stumbled and nearly fell, and lost sight of her as I worked on getting moving again.\n\nShe completed her circuit, slowed beside me, and smiled at me as she took my hand so that she could tow me with her.\n\n\"I'd forgotten how good you were,\" I told her.\n\n\"I'm better than I used to be. There's a rink near where I live, and I spend a lot of time there. It's a good place to unwind, to think. To... well. You know.\"\n\n\"You're amazing to watch.\"\n\n\"Uh huh,\" she said, lips curling into a smile. \"Do you say that to all the young women you go skating with?\"\n\n\"Um...\"\n\nShe laughed the light, easy laugh that I remembered so well. \"You're so much fun to tease,\" she told me. \"Always a reaction. I miss that.\"\n\n\"I miss you,\" I said. \"I'm sorry I've been so rubbish.\"\n\n\"I forgive you,\" she said. She spun again, eased slightly in front of me, and took up an easy, languid glide. \"Copy me. Move your legs like this. Bend your knees a bit. A bit more. Straighten your chest. Now... do what I do. Yes. Like that.\"\n\nAnd for the next fifty minutes I ignored my screaming leg muscles, my nerves, and the people who whizzed past us on either side. I had eyes and ears only for her.\n\n.:.\n\n\"Can I buy you lunch?\" I asked her. \"If I can limp somewhere to eat, that is. Fuck me, I'm hurting.\"\n\nShe laughed. \"It uses different muscles, doesn't it?\"\n\n\"You're telling me. I'm going to be broken by tomorrow.\"\n\n\"Hot shower and some stretches,\" she said. \"That will sort you out. What do you feel like eating?\"\n\n\"I was going to ask you that.\"\n\n\"I'm easy. Salad perhaps, or something small. I can't stay too long because I do need to get back to my mum's at some point.\"\n\n\"How about a coffee and some cake then?\"\n\n\"That sounds nice.\"\n\nWe found a small cafe off one of the main thoroughfares, and I pulled out her chair for her, grinning at the amused eyebrow she raised at me. We ordered coffee, and a couple of slices of the various cakes to share between us. She busied herself with the carrot cake, and I sat, watching her for a moment.\n\n\"What?\" she laughed, when she realised that I was staring.\n\n\"You just look... well.\"\n\n\"I am.\"\n\n\"Flick... I really am sorry I was so useless at calling you.\"\n\n\"Mm. You made me very sad, but I got over it,\" she said, eyes twinkling.\n\n\"Well... Kate seemed to have the knives out for me over something.\"\n\n\"Oh. Yeah. That... might have been my fault. Sorry.\"\n\n\"What was it?\"\n\n\"Unimportant,\" she said softly. \"Water long under the bridge. So. What are you doing these days?\"\n\n\"Same old, same old. Apart from taking up keelboat sailing, I doubt I've changed much.\"\n\n\"Oh, nice. That sounds like a fun hobby. Meet any nice girls?\"\n\n\"All married to the nice guys I crew with,\" I said, grinning.\n\n\"And your... dating?\"\n\n\"I'm not.\"\n\n\"Oh?\" she said, intrigued. \"You were quite into that when I left.\"\n\n\"I found other more profitable things to do with my time. Chasing disinterested women turned out to be a fool's game.\"\n\n\"Oh, you're preaching to the choir.\"\n\n\"And you? Anyone in your life?\"\n\n\"What life?\" she said, softly. \"I work fourteen hour days most of the time, and catch up on sleep over the weekends.\"\n\n\"What?! That's hectic!\"\n\n\"City life,\" she said, with a wry grin. \"I'm not sure it was worth the trade. My career's going brilliantly... but I miss being down here.\"",
        "\"It's definitely not the same without you here, that's for sure.\"\n\n\"Mm. I needed to move on from things. Put some stuff to bed. Moving was the easiest way to do it. It worked... mostly.\"\n\n\"Well. I'm glad I got to see you. Thank you for reaching out. You had every right not to.\"\n\n\"Are you actually going to stay in touch with me this time?\" she said, archly. \"Or is our relationship going to be conducted in bits and pieces whenever I happen to be near enough to you for you to bother?\"\n\nI winced, and pushed some cake around my plate. \"That was... deserved, I guess.\"\n\n\"Yes. It was,\" she said, not pulling the punch.\n\n\"I will be a better friend,\" I sighed.\n\n\"You'd bloody well better. A chain's only as strong as the weakest link, Jamie.\"\n\nAnd then the strange bubble of tension burst, and within a minute or two we were laughing about my shocking winter sports abilities, and I was telling her anecdotes about the yacht crew I'd become a member of.\n\nI walked her to her car, and she gave me a long, warm hug goodbye.\n\n\"Take care of yourself, James,\" she whispered.\n\n\"You too, Flick.\"\n\n\"I will if you will.\"\n\n\"Deal,\" I said, staring down at her.\n\nShe made a strange, soft noise, and hugged me again.\n\nAnd as I stood there watching as she drove away, the familiar sadness reformed in my heart and wouldn't leave.\n\n.:.\n\nShe called me at about ten that evening, and I could hear that she was driving.\n\n\"Flick, hey you, everything alright?\"\n\n\"Yeah, just been to dinner with family, but I'm still wide awake so I thought I'd see what you were up to.\"\n\n\"Nothing much. Just watching a movie at present.\"\n\n\"Do you want some company?\"\n\n\"Do you know what,\" I said softly, \"that would be really nice.\"\n\n\"You'll need to tell me where you are. You never invited me back to yours.\"\n\n\"Um...\"\n\nShe laughed. \"Got you. Where are you, James?\"\n\n\"Flat 601 in the Horizons building. Up in Gardens. How far away are you?\"\n\n\"Ten minutes? I think?\"\n\n\"I'll come downstairs. You know where the front entrance is?\"\n\n\"Yeah, I think so.\"\n\n\"Pick me up there and I'll let you into the underground parking.\"\n\n\"Sure thing. See you now.\"\n\nI paused the TV and grabbed my sailing windbreaker from behind the door. I scampered downstairs, and then jogged from one foot to another to keep warm as I waited for her.\n\n.:.\n\n\"Sorry, I wasn't expecting a visitor,\" I said, as I let her in.\n\n\"It's not like I gave you much warning,\" she said, smiling up at me.\n\n\"Here. I'll take your coat.\"\n\nI hung it up for her, then hung my windbreaker up beside it. \"You want something to drink? Glass of wine? Coffee?\"\n\n\"Wine sounds nice. Got anything decent?\"\n\n\"You cut me, Shrek. You cut me deep.\"\n\nShe laughed.\n\n\"I can actually do better than wine. I've got a bottle of bubbles that I've been looking for an excuse to open.\"\n\n\"I can be an excuse,\" she said, fluttering her eyelashes.\n\n\"Sold.\"\n\nI grabbed us both one of my nicer glasses and popped the cork. I poured us both a generous amount, then sealed the bottle with a stopper and put it back in the fridge.\n\n\"Cheers, Flick,\" I said. \"It's nice to finally have you around.\"\n\n\"Only took you several years,\" she said, grinning.\n\n\"So what brought you here?\"\n\n\"I was... at a loose end and wanted to spend more time with you.\"\n\n\"I'm not going to complain about your life choices.\"\n\n\"Good,\" she said. She kicked off her heels and groaned as she stood up on her toes to stretch out her feet. \"Mind if I pull up one of your stools?\"\n\n\"Why not just take the couch?\"\n\n\"Then where will you be?\"\n\n\"In the kitchen, obviously,\" I said, laughing.\n\n\"Then a barstool it is,\" she smiled, as she slipped onto one. \"My God, family dinners are tiresome. So much drama.\"\n\n\"I'm lucky, mine are infrequent and constrained.\"\n\nShe laughed again. \"Very lucky. So then. Let's resume this morning's conversation. Why the lack of any romantic interests?\"\n\n\"No time, no energy.\"\n\n\"Really?\"\n\n\"Kind of. But... I don't know. I feel like I've outgrown the desire to chase after... wait, this sounded better in my head. Um. Rephrase, your honour?\"\n\n\"I'll allow it,\" she grinned.\n\n\"Right. So. The effort to reward ratio was far too low. I wasted huge amounts of time trying to be what I wasn't. Chasing some image of what I thought people wanted me to be, rather than just being what I was.\"\n\n\"And what weren't you?\"\n\n\"An interesting man who was worth getting to know.\"\n\n\"But that is precisely what you are, you silly.\"\n\n\"No I'm not.\"\n\n\"You and I seem to do just fine,\" she said. She took a sip of her champagne, and watched me for a moment. \"I don't waste my time on dull and uninteresting people.\"\n\n\"Yeah... but... with you it's different, isn't it?\"\n\n\"How so?\"\n\n\"With you I don't have to pretend to be something I'm not. You... always saw me for who I was, and never seemed to mind how... dull and ordinary... I am.\"\n\n\"Trust me, Jamie. You are far from ordinary.\"\n\n\"So just dull then?\" I said, smiling at her.\n\nShe grinned. \"You're a kind, sweet, generous man who's just unutterably shit at picking up the phone.\"\n\nI shuffled, shamefaced, and took a sip of my bubbles.\n\n\"I'm not sure whether to feel ashamed or flattered.\"\n\n\"Flashamed.\"\n\n\"Nice one.\"\n\n\"I've never struggled to have interesting conversations with you,\" she said softly.\n\n\"That's because your standards are low.\"\n\n\"Oh, you bugger. I'll get you for that.\"\n\nI grinned. \"You've got to let me land a hit once or twice, you know. Otherwise you just flawlessly destroy me in a battle of wits.\"\n\n\"Not like that's hard,\" she said, grinning.\n\n\"Oh, ouch.\"\n\nI mocked a wound to the heart, and she cackled.\n\n\"I've missed this,\" she said, once she'd caught her breath.\n\n\"This?\"\n\n\"You. Me. How easy it is to be myself around you.\"\n\n\"I've never seen you not being yourself, so I don't know how to judge or respond to that.\"\n\n\"Mm. I can't describe it. It's just... there are no complications when I'm around you. I know who and what I am. When I'm around you the world seems to make sense for a bit.\"\n\nI eyed my glass of champagne, held it up to the light, and stroked my stubble as I frowned.\n\n\"What are you doing?\" she said.\n\n\"Checking for tampering. I think this has been spiked, because I just distinctly heard you say that the world makes sense to you around me, and that cannot possibly be right.\"\n\nShe laughed softly. \"Oh, Jamie, you know what I mean.\"\n\nThe champagne went down quickly. So did the emergency crackers i dug out. By the time we were hitting the second bottle of less-nice bubbles, she'd migrated to one corner of the couch, and I was opposite her.\n\nI'd forgotten just how blue her eyes could be when the light hit them just right.\n\nWe talked about little of importance - mostly memories of walks or hikes or swims we'd done; ponderings and updates on how various friends were doing; who'd got married, who was shacked up with whom from our circle of friends, and what her plans were for the future.\n\nShe was trying to launch her own consultancy, hence the insane days; for a moment the mask slipped and I saw how tired she actually was. I made sympathetic noises, dug a bit into her business, and suddenly, under the influence of too much booze, she ended up spilling her guts about her unwitting affair with a married man.\n\nAnd then her bitterness set in, and it was horrible to see the transformation that came over her.\n\nShe told me in slow, soft sentences how she'd been on the rebound when she met him. She blamed that for the way she hadn't felt the warning signals.\n\n\"He was sweet. And intense. And... and he made me feel wanted,\" she said softly. \"He never told me he was married. I found that out myself, when one of his friends confronted me and called me a homewrecker.\"\n\nI knew Flick well enough to know that that was the last thing she would have wanted to be.\n\n\"So... what happened?\"\n\n\"I broke it off, obviously. But... God, it was horrible. I haven't felt that upset and alone for... for a long time.\"\n\n\"I'm so sorry. I know that's not you.\"\n\n\"No. But... I needed something. Anything. Anything to validate myself. And I chose the worst way. Almost ended knocked up as well, for my sins.\"\n\n\"Wow.\"\n\n\"Yeah. I was stupid. Sorry. I know you probably don't want these details. But... you've always been the only one who gave a shit.\"\n\n\"What are you talking about, Flick?\"\n\nShe lay back into the couch, smiling sadly. \"I was the party centrepiece, Jamie. My role was to be vivacious and happy. Nobody ever stopped to ask me if I was ok, if I needed a hug. Well. Almost nobody,\" she added, with a small private smile for me. \"You were always there for me. Thank you.\"\n\nI shrugged and grinned. \"How could I not be? You were my best friend.\"\n\n\"Were?\" she asked, wistfully.\n\n\"I fucked it up,\" I quietly admitted. \"I can't take my stupidity back.\"\n\n\"Nah. You hurt me... a bit, but I never lost that bond with you. That's how I've often thought of you.\"\n\n\"I'm sorry.\"\n\n\"So am I.\"\n\nShe sat up and reached for the bottle, then made a face. \"Shit,\" she added. \"Are we seriously out of booze?\"\n\n\"Bubbles, yes. Wine, no. But...\"\n\n\"Yeah, I know, it's late. Should probably stop. It's just so nice to let the walls down a bit.\"\n\n\"Flick, listen - you're way too drunk to drive anywhere. I'll put clean linen on my bed and you can crash there, ok?\"\n\n\"Where will you sleep?\"\n\n\"Here on the couch,\" I said, grinning. \"Happens often enough. Let your parents know, right? So they don't worry?\"\n\n\"I'll do that, you put the kettle on. I'm going to have a whore of a hangover, but a bit of coffee will soften the blow a bit.\"\n\nI laughed and walked unsteadily to the kitchen.\n\n\"Jamie,\" she said, softly.\n\n\"Yeah?\"\n\n\"I missed you, you dick. Stop being so useless and talk to me more. Hearing from you makes everything better.\"\n\n\"I'll be better,\" I promised.\n\n\"I'm going to hold you to that.\"\n\nI brewed us a large french press of coffee, and put it on the coffee table. I poured her a cup, black as sin; she blew the foam away, sipped it, and made a face.\n\n\"Milk?\" I asked. \"Sugar? Do these words mean anything to you?\"\n\n\"No. Neither, thanks. Works best this way. I've learned to take my knocks.\"\n\n\"Ugh,\" I grunted, as I copied her. \"Oh, god, I always forget how foul black coffee is.\"\n\n\"Wakes you up though,\" she said, grinning. \"Throw some water down the hatch as well.\n\nShe finished her coffee, made a face, then put her mug down. She shook her head in disgust and made a low, agonised noise, then grinned. \"Done. Another one in a bit and I'll be human when I wake up.\"\n\nThen she stretched her arms up above her and arched her back. \"Ooh. Long day. That's better.\"\n\n\"Still kinking up if you sit still too long, huh?\"\n\n\"Yeah, guilty as charged. Stupid back. I should be doing crunches etcetera but I'm too lazy. You look like you've been hitting the gym though.\"\n\n\"Grinding on winches on a yacht for ten hours a weekend kind of takes away the need for gym.\"\n\n\"Sounds like fun.\"\n\n\"You should come with next time you're down - if it's summer. It's a bit... shit... at the moment and I know you hate the cold.\"\n\n\"Yep, still do.\"\n\nThen she yawned.\n\n\"Woop,\" she went. \"Witching hour.\" She slumped further down into the couch, and closed her eyes. \"I'm not asleep. I'm just resting.\"\n\n\"I'll go sort out the bed for you.\"\n\n\"Need help?\"\n\n\"Nah. Relax.\"\n\n\"Ok. I'll miss you.\"\n\nI laughed at that, and stood up. \"Tease.\"\n\n\"Mm,\" she agreed. \"Go fix my bed, slave.\"\n\nBy the time I returned, though, she was nearly out. I looked down at her, and felt a very real pang that I'd let the distance grow between us through my own heartlessness and laziness.\n\nI bent down, gently touched her shoulder.\n\n\"Flick?\"\n\n\"Mm.\"\n\n\"Your bed's ready.\"\n\n\"Mm.\"\n\nShe lifted an arm dramatically and left it there. \"Carry me,\" she whispered.\n\nSo of course I did. She felt light as a feather, and she locked her arm behind my neck, tucking her face in against my cheek.\n\nI'd be lying if I didn't admit that I felt some awkward and conflicting emotions as her scent wound around me. But I delivered her to my bed without interference, put her down on it, and was just about to ease my arm out from under her and go when she took my hand and pulled on it.\n\n\"Don't leave just yet,\" she breathed. \"Come hold me until I'm asleep. I won't bite.\"\n\n\"Um... but the lights...\"\n\n\"Oh all right. Kill the lights and then come back. Don't even think of disobeying.\"\n\nLaughing helplessly, I complied. I made sure the flat's door was locked and that the lights were off. I pulled off my socks, then slipped slowly in beside her. She fumbled for my arm, pulled it over herself, and whispered \"Cover us.\"\n\nAnd then, when I had, she breathed out a long, slow sigh.\n\n\"Goodnight, Jamie,\" she whispered. \"Thank you for tonight.\"\n\n\"Good night, Flick.\"\n\n\"You... you should call me Fee. Nobody else does any more and... and... I prefer it. I'd... I'd like you to call me it... if you'd like to.\"\n\n\"Good night then... Fee,\" I breathed.\n\nShe sighed once more, and soon she was asleep.\n\nBut I lay awake well into the small hours, saddened and conflicted by the overwhelming urge I felt to pull her closer.\n\nI had been hers for a long, long time.\n\nBut she was not and would never be mine.\n\n.:.\n\n\"Jamie. Jamie. Wake up. Come on.\"\n\n\"Mm.\"\n\nSomeone elbowed me.\n\n\"Jamie, seriously, wake up. It's an emergency.\"\n\nI grunted, opened an eye.\n\n\"Mm?\"\n\n\"Sorry. I really need to wee, and you've got me pinned down. I've waited as long as I could - I'm about to wet myself.\"\n\n\"Oh. Right. Right. Sorry.\"\n\nI groaned and rolled away, and she climbed off the bed and stumbled down the passage. I lay there, trying to disentangle the previous evening, scratching at my face and my itching stubble.\n\nThe toilet flushed, and Felicity poked her head around the corner. \"Hey... are... are you awake now?\"\n\n\"Sort of.\"\n\n\"Good.\"\n\nShe climbed back onto the bed, and lay down beside me, pillowing her head on her arm as she watched me boot up.\n\nI lay, staring at her, once again entranced by the way the dim winter dawn still managed to find some of the blue in her eyes.\n\nShe smelled soft, and wonderful, and safe. I breathed in, tried to fix the moment, then shook my head and rubbed my face again.\n\n\"Thank you for last night,\" she said, once I was somewhat more alert.\n\n\"You're welcome. Um... why?\"\n\n\"It was... it was just nice to have somewhere safe and warm to be. Somewhere where I could just relax for a bit. Without having to worry about... stuff.\"\n\n\"Stuff?\"\n\n\"Unwanted... advances. Expectations. Stuff.\"\n\n\"Of course. You don't need to thank me for that, you know.\"\n\n\"Well... I want to. Listen. It's getting on for eight and I've got a breakfast date that I need to make. I... I really hate to leave you like this but... would... would you mind walking me down?\"\n\n\"Sure. Of course I will. Just... just let me remember how to make my legs work.\"\n\nShe laughed, and rolled off the bed.\n\n\"How are you not hanging like a moose,\" I complained as I levered myself up.\n\n\"It's my innate lightness of being,\" she quipped with a grin.\n\n\"I call bullshit on that.\"\n\n\"Uh huh.\"\n\nI snorted, rubbed my face again, and pulled on a fresh pair of socks. She sat, watching me, amused and content. \"You're not a morning person, are you,\" she said, smiling.\n\n\"No. Not at all. Not even slightly unless there's an excellent reason to be. Like a yacht to crew or a sunrise to watch. But neither's a possibility today.\"\n\n\"Next time we do this I'll try not to schedule an early start. Or if I do, it will be for something that's worth being up early for.\"\n\nI eyed her, decided she was joking, and kept my response light and amused. \"If you give me warning I'll stock stuff for breakfast.\"\n\n\"It's a date,\" she said, softly.\n\nWe walked silently to the lift, and rode down to the basement carpark without breaking the bubble. As the lift doors opened she took my hand, and briefly held it on the short walk to her Volkswagen.\n\n\"So... how much longer are you in town?\"\n\n\"I'm leaving today,\" she said, wistful. \"Hence the early start. I need to go see my folks and Kate, then get moving. But I can't say I'm looking forward to the drive... I might stop overnight somewhere along the way. We'll see,\" she sighed. \"I wouldn't mind having another day or two here, to be honest. But...\"\n\nI squeezed her hand in mine, and she leaned in briefly against me.\n\n\"Give Kate my love, will you? Tell her I'm sorry for being a shit friend to her too.\"\n\n\"I'll tell her. You should go see her sometime, Jamie. Make peace. Not that you need to. But you know what I mean.\"\n\n\"Yeah. I do. I will.\"\n\n\"Right,\" she said softly. \"Time to go. Are... are you actually going to phone me this time? Or is that a lost cause?\"\n\nShe fixed me with a direct stare, and for once I knew that my answer was an honest one.\n\n\"Once a week, at a time convenient to you. Or... more often if you'd like...\"\n\n\"Lets start with once a week and see how that goes. Take... please, take care of yourself. And... thank you for being there for me... last night.\"\n\nI spread my arms, and she came to me. But she wasn't smiling, and the tight, hard, crushing hug she gave me had nothing light and joyous about it.\n\n\"Drive safe, Fee,\" I whispered, tucking my face in against her. She made a small, soft noise as she held me close. Eventually she let me go, stared up at me for a moment, and smiled something that someone else might have mistaken for a smile.\n\nBut I could see that her eyes were sad.\n\nSo I did my best to smile for her, and wave her off with cheerful upbeatness to take the edge off whatever thoughts she was struggling with.\n\nBut after she was gone, all there was left to me to do was to return to my flat, and sit, staring out at the buildings across from me, feeling more lonely and wretched than I could ever remember being.\n\n.:.\n\n\"Kate?\"\n\n\"Jamie? Oh my God. Is that really you? I hardly recognise your voice!\"\n\n\"I'm sorry. I've been unutterably bad. This is me - grovelling at your virtual feet.\"\n\n\"What brought this sudden attack of conscience on?\"\n\n\"Felicity told me to stop being a shit friend. So I'm doing my best.\"\n\n\"Flick talked to you? Oh. That's great news. I'm so relieved.\"\n\n\"Uh...\"\n\n\"Never mind, it's not important. I'm just so glad to hear you spoke to her. Did you know she was down this weekend?\"\n\n\"Um. Yes. She hunted me down. We went ice-skating.\"\n\n\"That's... that's really great, Jamie. Listen, I can't chat long, I'm meeting Stephanie's parents for the first time today and we're about to head out. But... listen, there's a gathering at my parents place next weekend. You should come. We'll chat properly then, ok? Please come, Jamie. I miss you.\"\n\nI smiled. \"Thanks, Kate. That's... that's really kind of you. I'll do my best to be there, and if not I swear I'll make it up to you.\"\n\n\"You'd better! Love you Jamie, take care now, see you soon!\"\n\n\"Cheers, Katie.\"\n\nI hung up, then stared in bemusement at the handset as I mentally replayed the conversation.\n\nThere was a lot of subtext that I simply didn't understand.\n\nI gave up.\n\nI'd no doubt discover the meaning of all these strange cryptic messages when someone started shouting at me about them.\n\n.:.\n\nI kept my word to Felicity, and our Sunday phone calls became the pulse of my life - something that I scheduled the rest of my week around. They evolved into rambling, sprawling things - where we discussed our families, the small victories and losses of our day-to-days, the details that would have bored any external listeners to tears.\n\nBut, to us, it was about the sound of one another's voice, and to me it was the knowledge that she cared enough to spend that time listening to me.\n\nIt was humbling, and I mentally kicked myself many times for taking her for granted over the time that she'd been only an arm's length away. She was my freedom, my person that I could confess stupid, childish dreams to with no fear of being judged.",
        "I told her this, once, and she was silent for quite some time before she delicately changed the subject with a strangely husky voice.\n\nShe'd tell me about parties or events she was going to, and started sending me selfies beforehand so she could have a reliable opinion on her choice of outfit. Not that she needed it, she always looked fantastic - tall, graceful, and wonderfully glamorous.\n\nSo to pay her back I started sending her snaps from the yachts, or when I was on the beach.\n\nShe yelled at me over those, laughing, telling me that it was unfair of me to gloat.\n\n\"So come visit then,\" I challenged her, one early summer Sunday evening.\n\n\"So make me,\" she retorted, amused.\n\nAnd I sent her a photo of a bottle of champagne, and, laughing, she told me she'd think about it.\n\nShe must have - for a total of maybe three minutes - because when we said goodbye that evening, she said she'd see me the next weekend.\n\nI didn't sleep much that night, for many reasons.\n\n.:.\n\nMy phone rang, and I fumbled it up from my bedside table. \"Jamie's body. Hello.\"\n\n\"Are you seriously still in bed?\"\n\n\"Fee. Hi. Yeah. Sorry, late night. Got invested in a book.\"\n\n\"My God. What happened to you?\"\n\n\"Maturity,\" I grumbled, and she laughed.\n\n\"Well. I'm here.\"\n\n\"Here? Where's here?\"\n\n\"In Cape Town. At my parents' place. And... Jamie, I was wondering...\"\n\n\"What?\"\n\n\"I wanted to go walk along Noordhoek beach. So I was curious whether... whether I could twist your arm to escort me?\"\n\n\"Give me five minutes to put on my human suit.\"\n\nShe laughed again. \"I love how you're always up for adventure.\"\n\n\"With you? Always. You're my partner in crime.\"\n\n\"Mm. Flatterer. Pick you up in... call it half an hour, and we can drive the long way around?\"\n\n\"Sounds awesome. I'll slap some fresh paint on and be waiting out front.\"\n\n\"See you now, lover.\"\n\nShe hung up, and I stared at my phone, bemused by her choice of words. Then, laughing, I shook my head. She'd always delighted in pushing my buttons.\n\nTwenty minutes later I clambered into the front of her rental Audi, and reached over to give her a hug.\n\n\"Got your hat and sunscreen?\" she said, smiling.\n\n\"And water and snacks and a towel.\"\n\n\"Good man. Off we go then.\"\n\nWe climbed out of the city bowl, and descended down the Atlantic side of the mountain on the long, scenic coastal roads past Camps Bay and around into the deep, hippie South. I lounged back into the passenger seat, listening with half an ear to the radio and glancing over often at my friend.\n\nShe'd chosen a low-cut peach strapless vest and a billowing white skirt of what looked like coarse-weave linen - good for airflow in what was promising to be a rather warm morning. The straps of her blue bikini top stood out against her skin, and were tied off in a messy bow behind her neck.\n\n\"Enjoying the view?\" she asked, giving me an amused glance.\n\n\"Absolutely,\" I said, with a lecherous leer.\n\n\"Mhmm.\"\n\nShe flushed slightly, and I grinned widely at her.\n\n\"Stop it,\" she laughed.\n\n\"No.\"\n\n\"You're distracting me,\" she protested.\n\n\"That's your fault, not mine. For the record, that outfit really suits you. You look fantastic.\"\n\n\"Thanks, Jamie. That... that means a lot, coming from you.\"\n\n.:.\n\nWe parked in one of Felicity's friend's parents's aunt's uncle's sister's brother's driveways. To be honest, I lost track of the complicated explanation of how she knew the old man who waved and smiled at her, but whatever tenuous connection she had meant that we were close to the beach despite the huge number of cars already hunting parking in the area.\n\nShe picked up a straw hat from the back seat and perched it on her head, then gave me an almost shy smile as she stepped up to my side.\n\n\"Jamie? Thank you. It's really... nice to be here with you,\" she said, softly.\n\n\"Thanks for bringing me.\"\n\n\"You're welcome. Come on, let's get going. It will be nice and cool down by the water.\"\n\n\"How far do you want to walk?\"\n\n\"Remember the old shipwreck? About halfway? I'd like to see if we can get there before it gets too hot or windy.\"\n\n\"Never been there, but it sounds good to me.\"\n\nShe took my hand and held it as we walked down to the beach. I took her sandals for her and stowed them in my small running backpack, and then we set off towards the distant southern hills, sticking to the intertidal zone where the sand was cool and firm underfoot.\n\nA gentle offshore breeze slowly built, and her skirt billowed around her shapely legs as we walked. I tried not to watch her too closely, but I had to admit that she'd been born with a beachgoer's physique - and with graceful curves to her posture that I could not help but desire.\n\nShe really was a stunningly beautiful woman.\n\nAnd my heart gave a sad lurch.\n\nI forced the sadness down and away, focussed on being light and present and with her.\n\n\"You're very quiet,\" she said, glancing at me.\n\n\"It's... it's just nice to be here with you. Just walking. Just... listening to the waves, and the wind. Knowing that you're... spending this time on me and me alone.\"\n\nShe clamped her hat in her hand as a brief gust tugged at it. The waves and the horizon behind her framed her body and answering smile perfectly.\n\n\"I like having this time to spend,\" she said. \"I like... I've always liked doing these simple things with you. I like that you... that you appreciate it. That... you value it.\"\n\n\"How could I not?\"\n\n\"Sometimes you've made me wonder about that.\"\n\n\"I was young and stupid and unaware of how... of how rare and special a friendship like what we had was.\"\n\n\"Mm. You keep saying things that imply the past tense.\"\n\n\"Sorry. I'm still lodged firmly in apology mode.\"\n\n\"Apology accepted. Now stop,\" she said, amused. \"Be present.\"\n\n\"Yes, mistress.\"\n\n\"And stop that too.\"\n\n\"Yes, mistress.\"\n\nShe laughed, and elbowed me gently in the ribs.\n\nWe settled into a moderate gait, climbing and descending over the gentle undulations in the shore, dodging the occasional larger wave that raced up over the sand.\n\n\"It's been years since I was last here,\" I said.\n\n\"Why?\"\n\n\"Too cold and exposed to swim, and nobody to walk or run with. The mountain's closer and a better workout, one of the main routes up starts about a kilometre from my door, and these days I'm mostly in the bay itself rather than on the beach.\"\n\n\"This is my chapel,\" she said, softly. \"There's no other place like it. So I like to come back here whenever I can. Pity it's not safe to come alone.\"\n\n\"Well. Any time you want to, you just let me know.\"\n\nShe glanced up at me. \"I may take you up on that, Jamie.\"\n\n\"You should. I'd love to walk more with you. It's just such a shame you're not based down here any more.\"\n\n\"Are you allergic to Johannesburg?\" she asked, somewhat tartly.\n\nI took a few steps, and sighed. \"Probably unfairly, yes. Lots of family Christmases up there. I just have memories of it being dusty and hot.\"\n\n\"Mm. Maybe you should come visit and get over your prejudices.\"\n\n\"I'll... see what I can do. Perhaps next month? I'm due some leave anyway.\"\n\n\"That would be nice.\"\n\nShe moved in closer, and linked her arm through mine, and I knew that I was forgiven for whatever boneheaded thing I'd just said or done.\n\nI sighed quietly.\n\nSo did she.\n\n.:.\n\nWe sat, staring out at the dark blue water, watching the rollers crash onto the rocks and spend themselves on the shore. I'd wrapped my towel around her shoulders to keep the growing breeze off her; I knew from past experience how quickly she could go from okay to freezing.\n\nI was acutely conscious of her beside me; acutely aware of the gentle pressure of her hip and thigh against mine, of the way she'd occasionally lean in against me as we talked.\n\nAnd what was most maddening was that I was sure that it was innocent on her part. But the constant close proximity to her had my mind freewheeling like a crack-addled hamster that had got into the caffeine pills.\n\nStrange fantasises kept crossing my mind. I felt a strong urge to put my hand on her thigh, to lean in. When our eyes met I had to fight down the desire to kiss her. She'd sometimes lean her cheek against me, and it was almost all I could do not to put my arm around her shoulders or waist.\n\nAnd I was struggling constantly not to try to snatch looks at her moderate but perfect cleavage.\n\nBut I could not square any to these urges with our reality; and I suspected that any such action on my part would firstly earn me an agonising punch to the stomach or worse, and secondly terminate our friendship with near-immediate effect.\n\nSo I kept my answers light, my responses well within the normal zone of at worst 'slightly flirty'.\n\nMeanwhile, my inner chimpanzee shrieked and gibbered and shook the bars of his cage.\n\nFee also seemed ill at ease. She kept crossing and recrossing her legs. She kept fiddling with the fabric of her skirt, winding and unwinding it in her fingers. And she was more flushed than she should be given the chill breeze. She spent a lot of time watching me, rather than the waves. Even when I wasn't talking. And, occasionally, when laughing, she'd forget herself and gently touch my knee.\n\nShe was probably just tired and happy, and felt that she could relax around me. That was my self-preserving deduction, and I clung to it like it were a talisman of protection.\n\n\"We should go soon,\" she said softly, at last. \"I've got to get to another... engagement.\"\n\n\"That's... a shame.\"\n\n\"Yeah. It is. This is the longest and best stretch of uninterrupted time that I've ever had with you. Well. While I was awake, that is.\"\n\n\"True. We did snore the prior one away.\"\n\nShe sighed. \"You know something, Jamie? I miss the simplicity of this when I'm not here. I miss being able to just reach out to you and know you're there. That you'll drop everything at a moment's notice and come along for whatever mad scheme I'm embarking on. Nobody else is as spontaneous with me as you are.\"\n\nI leaned forward, wrapped my arms around my knees. \"Life is a lot less fun without you around, Fee. I've got nobody who will dance with me any more.\"\n\nShe grinned. \"That's because you're so bad at it.\"\n\n\"Oh. Ouch. You wound me, madam.\"\n\nShe laughed, leaned in, and I shivered as she planted a gentle kiss on my shoulder.\n\n\"Come,\" she said, softly. \"Lets go.\"\n\nShe stood, and offered me her hand. She leaned back and pulled me to my feet, but as I started to let go she simply knotted her fingers in between mine, trapping me.\n\nAnd I was content to hold her hand as we turned our backs on the sea and walked away.\n\nShe drove me home, and dropped me outside my building. She hopped out as well, came round the car, and gave me a long, lingering hug goodbye.\n\n\"Thank you for the walk,\" she whispered.\n\n\"Be well, Fee.\"\n\n\"See you... later, Jamie.\"\n\nI stood there like an abandoned pet, fighting the urge to run after her as she drove away.\n\n.:.\n\nI'd expected to maybe get an sms or Whatsapp message from her or something, but when she phoned me that evening I could immediately tell that she was down.\n\n\"Fee? Hey, gorgeous.\"\n\n\"Hey, lover.\"\n\n\"What's up?\"\n\n\"Jamie... I'm... I'm parked outside. Can I... come up?\"\n\n\"Why are you even asking? Of course you can. I'll come down and let you in. Bring your car round to the gates.\"\n\n\"Thanks, Jamie. God, I'm so glad I have you.\"\n\n\"See you now.\"\n\nI grabbed my windbreaker and my sneakers and sprinted down the stairs to the basement of the building. I could see the bright white headlights of her car at the powered gate; I tagged her in with my access card and loped round to a vacant visitor's bay near the stairwell. She parked up, and squeezed out between the car and the adjacent wall. She rummaged briefly in the boot, and emerged with a bottle of red.\n\n\"Spoils of defeat,\" she said softly. \"I thought I'd ask if you wanted to share it with me.\"\n\nAnd then she just came to me and leaned in against me, shuddering, and I wrapped my arms tightly around her and held her for a breath, for two.\n\n\"Fee?\"\n\n\"Yes.\"\n\n\"What's wrong?\"\n\n\"I'm... tired and sad. I just... just needed to be around you for a bit. For one blessed evening of peace before I head back to reality.\"\n\n\"Come on then. Lets get out of this cold.\"\n\nShe was wan and completely out of sorts; I hovered closer than I normally would, and as the lift shuddered upwards she leaned in against me with a sigh. I put my arm around her and kept it there as we made our way down the narrow corridor to my flat's door. I let her in and she said nothing as I got her settled at my kitchen counter, but she managed a small, grateful smile as I poured her a glass of the red she'd brought.\n\n\"So talk to me,\" I said softly, as I poured my own glass.\n\n\"A close friend announced her engagement today. And... I guess... I just got overtaken by a bit of jealousy is all.\"\n\n\"You're not the jealous type,\" I said. \"That's... really abnormal for you.\"\n\n\"Life has changed me, I guess.\"\n\n\"Now that's a crime.\"\n\n\"Are you saying I'm not allowed to feel things?\"\n\nI flinched at the note in her voice.\n\n\"No, Fee,\" I said, staring at her. \"That's not what I meant at all.\"\n\n\"Sorry,\" she said, after a moment. She shook her head and sighed. \"I... it's just... been a rough day.\"\n\nI leaned forward, peered upwards at her, doing my wide-eyed-labrador-retriever impression.\n\nShe snorted, but couldn't help but smile briefly.\n\n\"So talk me through it,\" I said. \"I'm here, and you've got my captive attention.\"\n\n\"Mm.\"\n\n\"I can't help if you don't ask for it.\"\n\n\"I don't want help. I... have to work through it by myself. It's just... I'm... feeling like... stuff is passing me by.\"\n\n\"Stuff?\"\n\n\"Life. I spend so much time working, focussed on chasing one of my dreams... that I have nobody to share it with. And... and that's starting to hurt.\"\n\n\"You have me,\" I said, softly.\n\n\"You know what I mean, Jamie. You're a thousand kilometres away. You might as well be on the moon.\"\n\nShe sighed.\n\n\"Watching Emily tonight... I felt glad for her. But... I felt bitter for myself. Does that make me a bad person?\"\n\n\"No. Not at all. It's human. We all want to belong.\"\n\n\"You don't seem to...\"\n\n\"I'm just far worse at expressing myself, Fee. Just because I can't articulate it doesn't mean I don't feel it... deeply. If I didn't have you I'd be completely alone. So I'm... enormously thankful that I get to have you in my life, such as it is.\"\n\nShe took a long draught of her wine. \"It's criminal to drink this like I am doing,\" she said, gasping a breath, \"But right now I don't care. Right now it's about... surviving this.\"\n\n\"This?\"\n\n\"This... speedbump.\"\n\n\"The bed is yours if you want to stay here tonight.\"\n\n\"I... I do. I'd... like that.\"\n\n\"Ok then, that's settled. Are you hungry?\"\n\n\"A bit,\" she confessed. \"Wasn't... very hungry at the event. Just... nauseated, really. Everything lost its savour all of a sudden.\"\n\n\"Right. I'll get right on that then. My personal mission for tonight is to ensure you come out of it tip top.\"\n\n\"You always take such good care of me, Jamie,\" she said.\n\nAnd she sounded so sad as she said it that my own facade nearly broke.\n\nI dug deep.\n\n\"You're my bestie, and you're welcome,\" I said lightly, smiling over my shoulder at her. \"I... like having you to take care of.\"\n\n\"I should kidnap you and take you back up north with me,\" she sighed.\n\n.:.\n\nShe slowly unwound. Slowly the shadow of sadness dissipated. She began to tease me, which was usually a sign that she was feeling good about life. She devoured her helping of the chicken and pepperdew pasta that I made for us, and took seconds with a happy little groan. Then she curled up on my couch under a grey fleece throw. She watched me, inscrutable as an owl as I cleaned up after us.\n\n\"You're very well domesticated,\" she said at one point. \"Most guys I've had dinner with would leave the mess for the morning at best.\"\n\n\"I like having everything ready. To me there is literally nothing worse than having to wash a pan before I can make hangover bacon. Or, even worse, having to rinse a mug when all I want is a coffee. If I put in the effort now, tomorrow is easy.\"\n\nShe grinned. \"Is that what we're eating tomorrow? Hangover bacon?\"\n\n\"Guilty as charged, I'm afraid.\"\n\n\"I should move in.\"\n\nI laughed at that. \"You'd kill me within a week.\"\n\n\"Perhaps,\" she said, with a smile. \"But you'd love it before I got to murder.\"\n\n\"Uh huh.\"\n\nI finished wiping down the surfaces and washed my hands. Then I retired to my corner of the couch and leaned back with a sigh. I stretched out my legs, and she leaned forward to throw some of the throw over me. Her dress rode up and I flushed and glanced away from the glimpse I was given of the negligible amount of sheer black lace she was wearing under it.\n\n\"Don't mind me,\" she said, softly, as she tugged everything back into place.\n\n\"I really don't,\" I responded, laughing softly.\n\n\"Typical boy, trying to sneak a look up my dress.\"\n\n\"Guilty as charged, I'm afraid.\"\n\n\"Mm. I hope you got a good look at least.\"\n\n\"Just a small one.\"\n\n\"Uh huh.\"\n\nShe shifted her legs onto mine and leaned her head against the backrest, watching me. \"How come you're single, Jamie? What's the real reason? Scared of commitment?\"\n\nI eyed her, sipped my wine, sighed.\n\n\"What is it?\" I felt her foot shifting as she drew idle circles with it.\n\n\"Relationships are... hard for me, Fee. The ones I've been in always felt like I was giving... way more than I was getting. Maybe it's just the type of women I was interested in... back then. But... they always devolved to this point where I'd rather be alone, cold and wet in the mountains somewhere than around them. There was always just too much drama, too much needless conflict about what seemed like utterly insignificant stuff. That's... not a good space to be in.\"\n\n\"Fair enough. You want someone you can talk to.\"\n\n\"Someone like... well, like you... would be nice, yes.\"\n\n\"Are my clones in short supply, then?\" she said. She shifted slightly, leaned back further.\n\n\"I've never met anyone else quite like you, that's for sure. Life's short on goddesses these days.\"\n\nShe grinned, then drank her wine.\n\n\"So. My turn. Why is someone as beautiful and lovely as you alone?\"\n\nShe coughed into her wine, spluttered for breath. She laughed when she could, and stretched over to put her glass down on the floor. \"That's the first time someone's used that adjective on me. Beautiful, huh?\"\n\n\"Stunningly so,\" I said, meeting her gaze. \"You're tall, dashing, glamorous, intelligent, witty... and with those eyes, I'm surprised there aren't corpses of heartbroken men stacked up to the ceiling outside your door.\"\n\n\"Oh, Jamie,\" she said, with a strangely lopsided grin. \"You're such an innocent sometimes. And, anyway, as if I'd want to step over bodies every morning. Eeuw.\"\n\nI grinned at her.\n\n\"I've... wanted someone for a long time,\" she said softly, after a while. \"But... they are... let's call it... unavailable. Emotionally at least. So... I guess I've walled that bit of me off and... tried to move on.\"\n\n\"I'm sorry. That must have been really difficult to have to do.\"\n\n\"It was. And it... still is. I see him occasionally, he seems well though so I... try not to perturb things. I take what I can without hurting him and then leave him. But... oh, it's hard. It's always hard to say goodbye to him.\"\n\n\"Have you ever thought of just telling him?\"\n\n\"I dunno. It would probably scare him off. And... he's never been very quick on the uptake. Even for a guy. He's the least perceptive intelligent person I've ever met, at times.\"\n\n\"He sounds like a complete idiot.\"\n\n\"Oh... he can be a bit dense, sometimes. But... you know what they say. The heart knows what it wants. I can't help how I feel about him. And... I hear guys are just really bad at picking up signals. Anyway. It is what it is. I've learned to... live with what I can get.\"",
        "\"He's a lucky guy, even if he doesn't know it.\"\n\n\"How so?\" she breathed.\n\n\"To have someone like you want him? He's an idiot if he doesn't realise.\"\n\n\"Top me up, will you?\" she whispered, after a silence.\n\n\"Sure thing.\"\n\n.:.\n\nAnd just like the previous time, I ended up carrying her to my bed, and just like the previous time, she demanded my presence beside her. I sighed long-sufferingly, shed my socks, crawled in behind her, and pulled the duvet over us.\n\nThis time, however, she snuck her foot in between mine, and pulled my thighs up against hers. And then she pushed herself gently back against my chest, sighing.\n\nSo, of course, my idiot body responded in its natural way.\n\nI heard the soft noise she made as she felt me.\n\n\"Sorry,\" I breathed.\n\n\"It's ok. I don't mind. Take it that it's been a while, hmm?\"\n\n\"Yes... but... that's not really it. You just smell... really good.\"\n\n\"Mm. Well, you're nice and warm, and I approve wholeheartedly,\" she whispered. She shifted slightly against me, and laughed again as I grumbled and tucked my face in against her.\n\n\"Sorry. It will go away at some point. Hopefully.\"\n\n\"It's nice to feel appreciated,\" she whispered.\n\n\"Oh, trust me, you are.\"\n\n\"Really?\" she said, amused.\n\n\"Yep. Think mirages in the desert.\"\n\nShe laughed at that. \"Unreal visions on the distant horizon, hmm?\"\n\n\"I guess the analogy doesn't hold that well. An oasis, maybe.\"\n\n\"Oh, so you meant wet and inviting?\"\n\n\"You're not helping.\"\n\nShe pulled my arm tighter around her, and shifted slightly against me again.\n\n\"Fee,\" I grumbled. \"That's... distracting.\"\n\n\"Oh. Is it? What a shame. I really would hate to distract you.\"\n\nShe slowly began to rock her hips back and forward, pressing along me.\n\n\"Fee. What are you doing?\" I groaned\n\n\"Nothing. Absolutely nothing. Just shifting my hips a bit. For exercise. Not my fault you're... mm... against me like... that.\"\n\n\"You're... torturing me.\"\n\n\"Oh. Is that what this is?\"\n\n\"Fee...\"\n\nShe laughed, then pulled her legs upwards and sat up. \"Unzip my dress,\" she said, soft and low.\n\n\"Um...\"\n\n\"I'm overheating and getting uncomfortable in it. Unzip it, please, so I can take it off. I'll do it but it's a real pain to reach behind my shoulders...\"\n\nHardly daring to breathe, I reached out and slowly slid the zip down her back. She sighed out her breath, reached up to her shoulders and, with a slight struggle, slipped it up and off her and discarded it heedlessly onto the floor.\n\nAnd then I let out a panicked whimper as she rolled over to me and I got a view of her small, erect pink nipples behind their screen of transparent mesh and black lace trim.\n\n\"Oh,\" I groaned.\n\n\"I take it that you like the view?\" she whispered, amused.\n\n\"Oh my God. Yes. That is... spectacular scenery.\"\n\n\"Take your shirt off.\"\n\n\"Fee, this is a terrible idea.\"\n\n\"Take your shirt off, Jamie. And those jeans of yours. You can keep your boxers on if you want, but I'm cold, and deprived of anything even resembling touch, and I want your body against me tonight.\"\n\nI swallowed, thought of several salient objections, then abandoned them to the wind and struggled gracelessly out of my clothes. She watched me, flushing slightly, smiling a small smile and waiting for me to settle down again.\n\nAnd as I lay back she shifted in closer to me. I offered her my arm, and she lifted up then settled in against me, head pillowed on me, eyes closed, still smiling that small, private smile. Her thighs were warm against mine, and the lace of her bra tickled against me as she let out a long sigh. She shifted in closer still, and I shuddered as she slowly trailed her fingers over my bare chest.\n\n\"You ok?\" she asked.\n\n\"Um... not really sure, so lets go with... I think so?\"\n\n\"I need to be held tonight, Jamie. I'd... I'd like to be in your arms tonight. If... if this is too awkward or disturbing or... hah, hard for you, tell me, and I'll get dressed and go. But... I'd really like to stay. Here. With you.\"\n\n\"I just want to apologise in advance for the way I'm reacting to you. If I say or do anything even dumber than usual... well... could you just keep it in mind that I'm a bear of very little brains and I've only got enough blood for one of them at once?\"\n\nShe snorted softly. \"Is it that bad?\"\n\n\"Fee... you're a beautiful woman. Probably the most beautiful woman I've ever known. Your body is glorious. And so delightfully soft. And your scent... It's... well. It's a struggle.\"\n\n\"What is?\"\n\n\"The strain of not doing something... dumb.\"\n\n\"Like what?\"\n\n\"Like...\"\n\n\"Touching me?\"\n\n\"Yes,\" I whispered.\n\n\"You have my permission. I'm lonely, Jamie. It's ages since anyone was with me. It would be nice to be... touched... a bit.\"\n\n\"Where?\" I breathed, hardly daring to believe what I was hearing.\n\n\"Honestly? Anywhere you want to. My breasts. My bum. My pussy... if you want.\"\n\n\"Are you... sure?\"\n\n\"We're both adults, Jamie. And I'm... I want you to be with me, to take some of this... sadness... away. Even if it's just for a little while. Can... can you do that for me? Can you just... be there for me? Just for tonight?\"\n\nI stared at her, and as the silence stretched on she frowned up at me.\n\n\"What is it?\"\n\n\"I... just... I don't want to lose you as my friend. You're the most important person in my life.\"\n\n\"So then don't,\" she said, with a small, sad smile. \"Let me be in your arms tonight, kiss me goodbye in the morning, and phone me like you always do. I'll still answer. I'll always answer when... when you call for me.\"\n\nShe reached over, found my free hand, and slowly pulled it to her breast. I groaned as she slipped my finger in under her bra, and she whimpered and shuddered as she rubbed it over her nipple.\n\n\"I need this,\" she whispered. \"It's so hard, being by myself. Just touch me. Just make me feel wanted. Just for tonight. Tomorrow we can pretend that all this was a dream and we can go back to how it was, but for tonight, just... just...\"\n\nAnd I bent forwards to kiss her.\n\nShe moaned, arched hard against me, and clamped my free hand hard down against her breast.\n\n\"Like that, please,\" she begged as she broke away. \"Just... just like that.\"\n\nShe rolled away from me. \"Unclip me,\" she begged, and she shivered as I fumbled at her bra. The straps sprang apart as I released the clip, and she quickly pulled it off herself. She rolled back to me, and climbed half onto me, trailing the small perfect globes of her wonderful breasts over my chest.\n\n\"Fee, my God. You're so stunning,\" I whispered to her, and she lowered herself to kiss me again.\n\n\"Stop flirting with me,\" she breathed. \"You don't need to convince me of anything. I need you. But... but you can't be in me, ok, you can't be in me.\"\n\n\"Ok,\" I whispered. \"Can... my fingers?\"\n\n\"Yes,\" she moaned. \"Those you can have in me. And your tongue. But not... not this,\" she added, as she stroked her hands along the engorged line of my penis. \"Oh. God... I wish you could... but... you'll need to do something else with it. Or I will. But not in me, ok? Promise? We can't. Please, Jamie. Please.\"\n\n\"I promise,\" I panted.\n\nShe shuddered and bent to kiss me again, and she clamped her arms around me as she ground against me.\n\n\"I need you to touch me,\" she whimpered. \"Can... can I lie down? Can you... can you play with me? Just a little. Just a little bit? Please?\"\n\nAnd then she grunted as I levered her unceremoniously over onto her back. I walked my fingers slowly down her belly, then hunched forward, grinding hard against her and groaning as she seized my hand and moved it abruptly down to her. \"No teasing,\" she begged. \"No teasing. Just... just do me. Do me, Jamie, do me hard, please...\"\n\n\"Christ, Fee,\" I moaned, as I fumbled past the crotch of her lace underwear. \"You're... so...\"\n\n\"Famed for it,\" she whimpered. \"So wet for you. Oh.... oh God, yes, in me, please.\"\n\nAnd then she arched back, crying out as I penetrated her hot, tight entrance with first one and then two fingers.\n\nShe clawed at my hand, then at my arm, then arched again as I drove my fingers into her again. She spread her legs, hooked her calf over my hip, exposing herself for me as she squeezed and pinched her nipples and breasts. I kissed her throat, her neck, down to her breasts, pushing my fingers in and out of her, twisting and splaying them slightly inside her, and her moans changed quickly in both pitch and desperation.\n\nI could feel her legs shaking. She was panting, little breaths she fought for each time I pulled back that she then grunted out with each thrust I gave her.\n\n\"Jamie,\" she moaned.\n\n\"Uh huh.\"\n\n\"You're so... perfect in me... all the... best... spots... Jamie... don't stop... don't stop what you're... what you're...\"\n\n\"You... going to come?\"\n\n\"Almost... there... so close...\" she whimpered. \"Don't stop... please...\"\n\nThen she shuddered.\n\n\"Oh god oh God oh God,\" she moaned. \"You're killing... me...\"\n\nI forced my arm under her, gathered her to me, curling my thighs under hers and pushing my rock-hard cock against her bum. I started to frantically drive myself into her, and she stiffened, arching up off the bed, jaw locked open, moaning loud and deep in her throat.\n\nShe convulsed. Her legs locked behind me, pulling me hard against her as she began to groan, grinding against me, the muscles of her body spasming hard and fast on my fingers, every rippling contraction lifting her head and shoulders physically up off the bed.\n\nShe let out a long, breathy moan and slumped backwards. I kissed her breasts, gently nibbled a nipple, and she shuddered as I eased my fingers gently out of her. Then she just lay there, moving ever so gently from side to side as she slowly relaxed.\n\n\"I should have let you do that to me years ago,\" she whispered, when she'd recovered sufficiently to speak.\n\nShe pressed herself against me.\n\n\"Can I see you, Jamie? Will you... take those off so I can at least see you?\"\n\n\"Ok,\" I whispered.\n\nI slowly slipped my boxers down, then kicked them free of my feet. The skin of her thighs was warm against my shaft, and I took a hissing breath as my cock throbbed from the sensation of her skin against it.\n\n\"Mmm,\" she moaned, as she pressed her thigh against me. \"You feel rock hard.\"\n\n\"You could... um... say that.\"\n\n\"How long's it been? Since you were in someone?\"\n\n\"Ages.\"\n\n\"And... self pleasure?\"\n\n\"All the time. Constantly.\"\n\n\"You... like it?\"\n\n\"It's better than... nothing... but far worse than... what you're doing... right now.\"\n\n\"Do you want to... come on me? On my belly? My breasts? Not on my pussy, though, ok?\"\n\n\"Do you... want me to?\"\n\n\"It's on the list of things I'd love you to do... to me. Come... come lie here. Up. Next to me. So... so I can watch. And feel...\"\n\nI shifted slowly out from behind her, and she sighed as she stared down at my body.\n\n\"Can I... touch you?\" she asked, hesitantly, flushing bright pink.\n\n\"Yes.\"\n\nShe reached out, took me in her fingers, and slowly stroked her hand up and down my shaft. She shuddered, then let me go and rolled up onto her knees. She peeled the black lace of her panties off herself, and kicked them away.\n\n\"Lie on your back,\" she told me. I did, and she lifted her knee over me and straddled me. I got a brief, taunting glimpse of her smoothly shaven lips before she took me in her hand again. She started to slowly stroke me and I arched backwards.\n\n\"Fee,\" I whispered. \"You're stunning.\"\n\n\"Mm. I suspect. You're... uhn... just horny and want to... be in my... dripping, tight, hot body.\"\n\n\"You're still... unbelievably beautiful...\"\n\n\"Jamie. Confession time. You know. I would... quite honestly... love nothing better than to put... this gorgeous thing of yours against me, slick you up, and take you all the way into me. There's nothing I want more right now. Nothing. I'd fuck you until I was broken. But...\"\n\n\"I... uh... know.\"\n\n\"So,\" she whispered, as she squatted back on her haunches and slowly stroked me. \"Tell me what you'd do to me. Tell me how you'd do me.\"\n\n\"I'd... love to spread those lips of yours... and lick you until your toes curled...\"\n\n\"Oh,\" she said, shuddering. \"Oh... that sounds delicious.\"\n\n\"Stick a finger in you. Penetrate you while I was tonguing your clit.\"\n\nShe dropped her hand to herself, and slowly teased a finger between her lips, and shuddered again.\n\nI stared at her hand and crotch, at the slight movements I could see her giving herself, the way she'd spread her lips with her fingers to better reach herself. Then I looked up at her. I reached up, took her breasts in my hands and gently began to brush my fingertips along her nipples.\n\n\"Oh,\" she whimpered. \"Oh God, you light fire in me when you do that. Your hands on me are so good, so good...\"\n\nShe squeezed me, and my toes clicked as they curled over.\n\n\"I'd... fuck... I'd push you down. Kiss your body all over. Tease... mm... my knees in under yours.\"\n\n\"Get me nice and... hot and... ready?\"\n\n\"Uh huh.\"\n\n\"Put this lovely head to me?\"\n\n\"Uh huh,\" I groaned.\n\n\"Push it into me, until I... uh... couldn't take any more?\"\n\n\"Uh huh...\"\n\n\"Fill... uh... fill... oh...\"\n\nShe began to grind along my legs, groaning. She hunched slowly lower and lower, and I could feel her thighs compressing against mine. She opened her eyes, staring at some point beyond me, a small frown furrowing her brow.\n\nThen she grunted, hard and deep, and cried out as she fell forward onto me. She writhed against me, my cock hard against her belly, digging into her and slicking the arm she had between us with my sticky pre-come. Shudder after shudder wracked her before she finally slumped down onto me, sweaty and panting.\n\n\"Sorry,\" she groaned. \"Sorry. Wanted to do something for you and... just... ended up being selfish.\"\n\nI laughed and clasped her to me.\n\n\"I enjoyed that a lot,\" I whispered. \"Feel free to do it again.\"\n\n\"Too raw,\" she moaned. \"Need lube to really go to town. Oh. Oh wow, you do it so well for me. Mm. Jelly legs. So delicious.\"\n\nShe levered herself up and off me. She glanced down at my engorged, throbbing, aching cock, and gave a despairing groan. \"God. It's a crying shame to not be able to slip that into me. Oh well. Second best it is. \"\n\nShe leaned forward and took me unceremoniously in her mouth, groaning in harmony with me as she closed her lips on me.\n\nI closed my eyes and slumped backwards; she started to slowly torture me, to ride me with her lips and tongue, while she moved her busy hand on the base of my shaft.\n\nI tangled my fingers in her hair, unable to quite believe the heat of her, the clear pleasure she was deriving from having me in her like this.\n\nShe gasped a breath.\n\n\"God, you're nice in me,\" she whispered, and I moaned my agreement.\n\n\"Just... wish...\" I panted.\n\n\"Uh huh,\" she moaned in answer before she took me back into her and then began to bob up and down on me, working my shaft with her hand and tongue.\n\nMy back and legs locked almost immediately, and it felt like it was only a few brief, amazing, unbelievable seconds before I arched and came, gasping and panting her name.\n\nShe swallowed, coughed, and then gave me a small, private smile. She levered herself up off the bed and scampered off unsteadily to wash and rinse her mouth. Then, suddenly strangely hesitant, she slunk back to the bedroom and lay down beside me, only beginning to relax when I wrapped both my arms around her and pulled her as close to me as I possibly could.\n\nAnd then I just held her and kissed her.\n\nWe didn't speak much. She asked me to hold her; to gently rub my fingers along her neck and back as she tucked her face into my neck.\n\nAnd in almost no time she was asleep.\n\nI, however, lay awake for ages, aching in a different and unfamiliar way.\n\n.:.\n\nI woke and lay quietly, still as deep water. She was still curled up in my arms; snoring gently and utterly relaxed.\n\nI watched her as dawn crawled closer. I watched her as the light slowly grew, as her skin changed tone from coffee to latte to a deeper tone of her usual pale. I watched her, and as I watched her I wondered about her. And about us. I wondered why she'd suddenly wanted this, why she'd needed to be touched and held by me after so long.\n\nHad the thing with the guy she'd said she wanted become or been acknowledged as unattainable? Was I the nice, reliable rebound on the side she could come to who would always welcome her with open arms, grateful for whatever crumbs she deigned to give?\n\nWas I simply a port in a storm? Safe harbour?\n\nSurely not.\n\nShe wasn't that kind of woman. She'd never been that kind of woman.\n\nMaybe it was just a passing thing. Some strange conjunction of the spheres, when her soul and mine had had their one, brief periapsis. Some mad outlier of probability that permitted this night to have happened against all contrary wisdom.\n\nI sighed, and she whimpered softly in her sleep. I watched her face, watched the dream-driven muscles in her brow and cheeks shift and reform. And I wondered what she was dreaming of.\n\nWhatever it was, it would not be of me.\n\nAnd that thought cut deep into me.\n\nWould I trade last night for anything?\n\nNo.\n\nDid I wish it hadn't happened?\n\nNo.\n\nWould I ever be able to forget her, asleep like this in my arms?\n\nNo chance.\n\nWould I ever let her see how much this had damaged me?\n\nNever.\n\nI quietly resolved to go to my grave without ever expecting more from her than this one, perfect gift of her touch.\n\nGod, I loved her so much.\n\nI bit my lip hard, focussed on breathing, fought the bitter flood of sadness away.\n\nIf only things could be different.\n\nIf only someone as perfect and precious as her could want someone as ordinary and unremarkable as me.\n\nIf. If.\n\nIf wishes were horses... beggars would ride.\n\nBut wishes didn't exist in this world, and this fae creature would all too soon stand up, dress, smile at me, and walk out of my life again.\n\nI would always be the one left behind.\n\nI sighed again, then cursed myself as she stirred in her sleep.\n\nShe yawned once, and slowly rolled over.\n\nI watched as her eyes opened slightly, then flicked open wide.\n\nI watched as she rolled her head over to me.\n\nAnd I felt as she took a near silent gasp of air. Not much, but enough for me to notice it.\n\nIt had been a lovely fantasy while it lasted.\n\nTime to pretend again.\n\n\"Hi,\" I breathed.\n\n\"Hi,\" she whispered. \"Um. Just... just checking. I think I remember everything we did. Are... are you ok?\"\n\n\"Yeah. I'm fine,\" I lied, false as Judas. \"I had a really nice time. Are you ok?\"\n\n\"Yeah, I'm good. A bit... um... tender. But... good.\"\n\n\"We didn't... I wasn't in you, if that's what you're worried about.\"\n\n\"I... that's good. I remember, but thanks... for confirming it. And for keeping your promise.\"\n\n\"Sorry. You're welcome. Um... you know what I mean.\"\n\n\"It was... it was what I needed. So... thank you.\"\n\n\"Would you like breakfast?\"\n\n\"No. No... I should... probably get going. I still need... to pack and to... to see some people before I go home.\"\n\nSo be it.\n\n\"Okay.\"\n\nI pulled the duvet back and slipped out of bed. She made a small noise as I bent to pull on my discarded clothes. I shot her one light, gentle smile, noting the flush on her throat. \"Can I at least make you some coffee before you go?\"\n\n\"Please,\" she whispered, as she tried not to stare.\n\nShe was so lovely, and so transparent as she tried so hard not to hurt me.\n\nMy heart nearly broke. But I kept my liar's smile for her.\n\n\"Ok.\"\n\nAnd then I went to the kitchen, and turned on the kettle, and composed myself so that I would not upset her any further.\n\nClearly she regretted everything about our time together.\n\nAnd that hurt almost more than I could bear. But I would not show it, for her sake.\n\nI brewed and poured her coffee and brought it to her while she struggled awkwardly into her clothes. I pretended not to notice the tightness of her pose, the way she seemed to want to speak but somehow couldn't. I tried my best to make it easy for her, to not extend this awkward hell for her one moment longer than it needed to be, being the fleeting breath of courtesy and lightness she needed.",
        "She drank her coffee, and I drank mine, and then I escorted her down to the visitor's parking. She clung to my hand like it was a lifeline for the whole of the brief elevator ride down.\n\nI walked her to her car, with a rictus on my face and ice around my heart.\n\nShe stared up at me, mouth moving strangely, as if she was unable to form words.\n\nTo be fair, neither could I.\n\nSo I opened my arms, and she half fell into them.\n\nI could feel her shivering, and I felt so sorry for her. I wished I could just tell her not to worry about it, that I would treasure what we'd done, but never expect anything more and never breathe a word of it to any other soul. But saying so would break me, and I couldn't.\n\nInstead I just tucked my face into her hair, and breathed in her scent for what I feared would be the last time.\n\n\"Travel safe today,\" I managed to say at last.\n\nShe hugged me hard, then pulled back, staring up at me.\n\n\"Go on. Thank you for the wonderful evening and the... company.\"\n\n\"Jamie,\" she tried, softly, and I knew I was about to break.\n\n\"It's probably best if you go, Fee,\" I managed, far more abrupt and brusque than I would ever have been were I not one breath away from ruin.\n\nShe paled and swallowed hard. She closed her eyes briefly, took a deep breath and straightened her shoulders.\n\n\"I'll call you tonight, then?\" I offered sadly, trying to salvage something from the wreck we'd made of our friendship.\n\nShe smiled, but the smile did not reach her eyes. \"If you like.\"\n\n\"Later then.\"\n\n\"Later.\"\n\nI opened the gate for her, and waved goodbye. She did not look at me.\n\nOnce she was out of sight I slumped back against the wall, and then down onto my heels, just focussing on breathing as the bright white spots danced in my vision.\n\nIt was some time before I could stand, and even longer before I was able to face the seven light-years to the elevator doors.\n\n.:.\n\nI had a long, abject crying fit in the corner of my shower.\n\nThen I somehow forced it all down and away and got myself to move.\n\nI had no choice; it was just me now. I had nothing left but myself. Only I could get over this, nobody else would do it for me. I no longer even had anyone to talk to about it.\n\nI was alone.\n\nCompletely and utterly.\n\nSo be it.\n\nI tanked up on coffee and chocolate to the point of nausea. I installed myself at my kitchen counter and wasted my early morning on a cheap, awful sci-fi novel, hunting escapism with the tenacity of Percival seeking the Sangreal.\n\nI was just under halfway through the brain-numbing nonsense when my phone lit up like New Years Eve and began to skip across my counter top.\n\nIt was Kate. An emotional lifeline, flung to me by Fate. I took a breath, hoping she had time to listen to my stupidity...\n\n\"Hi, Katie,\" I said, trying to sound upbeat. \"How are...\"\n\n\"What the fuck did you do?\"\n\nI blinked as the world shifted under me.\n\n\"Uh...\"\n\n\"What the fuck did you do to her?\"\n\n\"To...\"\n\n\"To Felicity, you bastard! She was just on the phone to me, in tears, because of you! Did you hurt her?\"\n\n\"What... what are you talking about?\"\n\n\"She was crying her eyes out, absolutely fucking inconsolable, said you'd been with her but it had all been a terrible mistake and now everything was ruined and she hated herself. Jesus Christ. Jesus Christ, Jamie, how could you be so heartless as to take advantage of her like that? I thought you were better than this!\"\n\n\"Kate. Kate. Listen. Please. I seriously have no fucking idea what you are talking about...\"\n\n\"Are you seriously going to call her a liar right now?\"\n\n\"What?\"\n\n\"Did you sleep with her?\"\n\n\"Um... kind of?\"\n\n\"For fuck sakes, James!\" she screamed.\n\n\"Kate. You're... you're going to have to explain things slowly to me. All I'm getting right now is that Fee is hurting and it's my fault and you're furious with me about it... but... I'm really, really struggling to understand... why?\"\n\n\"Because she loves you, you fucking tool! In spite of how many times you've stamped on her heart, she loves you!\"\n\n\"What?\" I said, in disbelief.\n\n\"Oh my God! James! She's mad about you! How can you be so blind? She's wanted you since she first met you! She left Cape Town to get away from you, because she thought you didn't want her and couldn't take it any more! And now, what, you've just slept with her and then kicked her out again? You've broken her, you cunt!\"\n\nSuddenly everything clicked into focus. Suddenly, all of my conversations with her rotated into place.\n\nHer cryptic remarks, the shadows I'd thought I'd seen behind her eyes, the sadness, the changes in our friendship...\n\nAll of it.\n\n\"Oh fuck,\" I breathed. \"Oh fuck, no. Kate... I swear to God I didn't know how she felt. I swear I didn't know!\"\n\n\"You didn't know this? How did you not know this, Jamie? She's been all over you since she met you! Are you seriously this dense?\"\n\n\"Yes. I guess I am,\" I said, hunching over as a wave of self-hatred crashed over me.\n\n\"Well, you've royally stuffed it up now. She's broken. You broke her. Oh my God, I can't believe you. You bloody idiot!\"\n\n\"Katie. Please. You can shout later. Where is she? I need to fix this. I need to go find her before she leaves.\"\n\n\"You can't,\" she said. Her rage was gone now, and she just sounded tired and bitter. \"Why the fuck couldn't you just have opened your eyes?\"\n\n\"Why the fuck couldn't one of you geniuses just have fucking told me!\" I shouted back at her, enraged and hurt beyond reason. \"Do you have any idea what it's been like to live like I've had to these past few years, desperately wanting to tell my closest friend how much I love her but too scared to even look at her wrong because I know I'm bad at reading signals and don't want to misinterpret things? I thought she just wanted a little fun, a little human contact from someone she felt she could trust! And that I shouldn't hope for more! Jesus Christ, why can't all you people just speak English to me! I've never understood subtext, and I never fucking will!\"\n\nAnd then I just leaned my head against my counter, groaning, utterly wretched.\n\n\"She's at the airport,\" Katie said guiltily, after a mortified silence. \"She's flying out now. She phoned me just before boarding. You won't get there in time. Oh, Christ, Jamie...\"\n\n\"Fuck my actual fucking life!\" I cursed.\n\n\"Jamie. I'm so sorry. Oh God. I'm so sorry. I thought...\"\n\n\"If everyone had stopped thinking and done something instead, I'd still have my best friend. Thanks, Kate. Have... have a lovely day. Take care. See you... around.\"\n\n\"Jamie, please!\" she began.\n\nI hung up on her, and threw my phone as hard as I could across the room.\n\n.:.\n\nI hunched over my phone's shattered screen and dialled Felicity's number again.\n\nAnd again, I went straight to voicemail. Her plane had landed hours ago, but she was still not taking calls.\n\n\"Fee. If you get this, please phone me,\" I said. \"I've been a complete idiot and I want to tell you that I'm sorry. Everything makes sense now. I am officially the dumbest man alive. I love you. Please... call me.\"\n\nThen I hung up, sat up, and stared out at the deep steel-grey of the distant winter waves.\n\nI couldn't really process how stupid I'd been. How blind. How completely I'd cut myself off from any chance of happiness with her due to stimuli responses learned from my previous fuckups with prior, lesser women. How scared I'd been that I'd lose her.\n\nAnd how... how empty I was now that I had.\n\nI took a slow breath. My chest ached, and I fought down the childish urge to throw my phone as far as I could towards the horizon.\n\nShooting the messenger to spare my pride.\n\nI laughed derisively at myself.\n\nWhat a stupid bastard I was.\n\nTruly, the dumbest, most ignorant fool ever to urge his ungainly bulk across the protesting Earth.\n\nAnd I'd been truly vicious to Kate. I owed her an apology as well.\n\nAnd that, at least, I could accomplish.\n\nI sighed, squinted at my phone, and sent Katie a I'm sorry. For everything. Forgive me.\n\nAnd then I sighed again as the single heart and a crying face came back from Kate, followed by a Only if you forgive me too.\n\nthank you for taking her call and looking out for her\n\nI should have had your back too :( came her sad response.\n\nYou can't be perfect all the time. She's still not answering my calls.\n\nor mine. I'll let you know if I hear from her\n\nditto. x\n\nI put my phone away, and lay back onto the flat rock I'd come to contemplate my Olympic-grade cluelessness on. I frowned up at the clouds that were careening overhead.\n\nI was such a fool.\n\nHow could I not have seen?\n\nBut... it was Fee. She was friendly with everyone. And she'd been my friend. My best friend. And I'd been so scared of losing that that...\n\nOh God. I'd even used those words to her.\n\nShe must absolutely loathe me right now. I loathed me right now.\n\nFuck it. Fuck all of it.\n\nI couldn't fix my broken heart. I couldn't fix hers.\n\nBut what I could do was grind myself into the fucking ground so that I'd have some hope of sleeping tonight.\n\nSleep and exercise. That was the only way through this. I knew this from bitter experience.\n\nI'd just never, ever expected to need to try to recover from such a deadly blow to the very core of me.\n\nI turned, stared balefully uphill at the high grey frowning crags of the mountain, and then I began to walk.\n\nAnd, when walking didn't hurt enough to eclipse the pain in my heart... I ran.\n\n.:.\n\nThe waspish buzzing of my phone woke me at some pitch-black godless hour of misery. I rolled off my face, cursing as my skin stuck to the leather of my couch where I'd passed out in exhaustion. I glared blearily at my phone, trying to interpret the digits and name through the crazy-paving I'd so senselessly inflicted on the screen.\n\nIt was her.\n\nI went ice cold, from asleep to awake in less than a second.\n\nI scrabbled for my phone, nearly knocking it under the couch, frantically stabbing at the fractured green button.\n\n\"Hello?\" I said. \"Hello? Felicity?\"\n\nI sat up, waiting for some response.\n\n\"Fee? Is that you? Please... be you...\" I whispered.\n\n\"I'm keeping my promise,\" she answered, strange-voiced and emotionless. \"Despite my better judgement. I said I'd always answer if you called. Despite what a bastard you were to me, I will keep this promise this one final time. You can thank the vodka for that. Say what you need to say and then go away.\"\n\nI waited for her to finish, and took a long, slow breath.\n\n\"Well?\" she said. \"Say it. Say whatever was so important.\"\n\n\"Did you listen to any of my voicemails?\" I asked.\n\n\"No,\" she said, curtly. \"And I'm going to delete them once we're done here. And your number. I want you gone from my life, James. I've lost too much of it thanks to you.\"\n\n\"Right.\"\n\nI took another long, slow breath.\n\n\"Felicity. You have every right to be angry with me...\"\n\n\"Yes. You're right. I fucking do.\"\n\n\"I was a terrible friend to you...\"\n\n\"Yes. You always have been.\"\n\n\"And I was a complete idiot when you left.\"\n\n\"Is this what you needed to say to me? A complete, itemised list of all your fuckups? We'll be here a long time if that's the case.\"\n\n\"Are you going to listen, or is this call simply to give you a convenient way get some stabs in before writing me off?\"\n\nShe was silent for a moment.\n\n\"So speak,\" she whispered. \"I'll listen this one, final time.\"\n\n\"Felicity. I hurt you through my stupidity. God, I'd give anything to take it back. I was stupid. I should have just told you.\"\n\n\"Told me what, James.\"\n\n\"That I love you.\"\n\nShe was silent a moment, and then she began to laugh. Deep, loud, near-hysterical, bitter laughter. I heard her put the phone down, heard the laughter fade as she moved away.\n\nI sat there, eyes closed, waiting patiently.\n\nIt seemed like it took years, but she eventually returned. I heard something clink down next to the phone, then the staccato noises as she picked the handset up again.\n\n\"You've got some fucking nerve,\" she hissed. \"Using those words to try to get back at me. Bravo, James. Bravo. I didn't realise how twisted you could be. Fuck, I should have taken notes.\"\n\n\"I'm being honest with you, Felicity,\" I replied, soft, measured and level. \"Delete my number, delete my voicemails. It doesn't matter. At least I'll finally have said the words. I love you, Felicity. I have for years. I've lain awake at night more times than I can remember, wondering if I should say anything to you. But I was always too scared. All my past disasters taught me to rather just keep my stupid mouth shut. I didn't want to... to risk not having you in my life at all any more.\"\n\nMy words dropped into a deep well of silence.\n\nI sighed and slumped back against my couch.\n\n\"I know you won't believe anything I say right now. Especially not after... last night. Is it even last night any more? The point is... the point I'm trying to make... badly, clearly... is that until fucking Kate of all people finally smacked me over the head with it... yesterday, I guess it is now... I just... I just didn't know. I didn't know how you felt. I didn't know how badly I'd hurt you. I didn't even know I was hurting you. All I knew was... was that that evening was the best thing that's ever happened in my life. I didn't know you wanted more from me. I didn't... dare to hope that you wanted more from me. So my coldness... my abruptness... I wasn't trying to hurt you. I was trying to let you go before...\"\n\n\"Before... what...\" she asked, softly.\n\nI coughed, tried to clear my throat. I fought for and found control. I took a deep breath, then another, put the phone back to my ear.\n\n\"Before what, James,\" she repeated.\n\n\"Before I broke. Before the... the mask I was forcing myself to wear cracked and you saw... and you saw just how much I was hurting. Or how scared I was that that would be the last time I'd see you. I couldn't tell you. Not even then. I guess I was... clinging to hope that if I just pretended really hard... we'd get through it, and you'd be able to leave with no regrets, and I'd still have you as my friend, if... if that was all I could have you as. But I guess that ship has sailed, now, hasn't it.\"\n\n\"That ship was torpedoed at dusk, exploded in flames, and went down with all hands, Jamie. There were no survivors.\"\n\n\"I'm sorry,\" I sighed. \"I'm sorry for inflicting years of... unthinking... on you. I never meant to hurt you like this, Felicity. I was... I was trying to cling to what I had. I didn't know that you wanted more. And I'd... I'd do anything to be able to undo all this.\"\n\n\"As you said, you didn't know.\"\n\nHer voice was softer now, and I heard her blow her nose.\n\n\"I regret almost everything,\" I said.\n\n\"Almost everything?\"\n\n\"I don't regret... two nights ago. I don't regret what we did. I don't regret finally getting to be with you in some way, however briefly. I don't regret lying awake half of the night with you asleep in my arms. But I do regret not telling you how I felt. And I do regret letting you walk away thinking it meant nothing to me. And I will always, always regret not speaking up when you were still close enough for it to make a difference. I will never, ever stop regretting that.\"\n\n\"Stop. Please,\" she whispered, and now, at last, the years of pain were there in her voice.\n\nI felt like dirt, hating myself for this stupid, unnecessary trauma that I'd caused her. But I had one last thing I needed to say.\n\n\"I love you, Felicity. I haven't always loved you, just mostly always. But I will always love you. Perhaps, one day when we're old, you could... look me up and we could... remember how we were. To be honest... after this I don't expect I'll be... doing much between now and then.\"\n\n\"You're so dramatic,\" she whispered.\n\n\"A bear of very little brain has to do what he can with the tools he's given,\" I replied, sadly.\n\nShe began to cry - soft, horrible little breathy sobs that made me hunch in on myself and pull my knees up to my chest in my own sympathetic agony.\n\n\"Please,\" I begged her. \"Please don't cry, Fee. Please...\"\n\n\"I'm sorry too,\" she gasped. \"I'm sorry for never telling you. I'm sorry for being so angry at you. I'm sorry for running away, for not being braver. I'm... I can't tell you how sorry I am for two nights ago. I should never had done that to you. I have no excuse. I should never have put you in that position without telling you how I felt. I'm sorry, Jamie. I'm so sorry...\"\n\n\"So am I, Fee.\"\n\nAnd then I just sat, listening to her until she was done.\n\n\"So what now?\" I said, scrubbing tiredly at my face, trying to clear my eyes so that I could see something. \"Is this... our goodbye?\"\n\n\"For tonight it has to be,\" she quavered. \"I'm broken. In pieces. I need to go sleep. Or try to. But... but I'd... I'm... Jamie... do you think that... you could maybe... forgive me enough to give me a good morning hello a bit later?\"\n\nI closed my eyes, fighting down the lump in my throat. \"So... are you... are we...\"\n\n\"Still... ok?\" she echoed.\n\n\"Only... only if this leads to a future where... where you can, perhaps, be convinced to... to degrade yourself far enough to go ice skating with me again. And... maybe... let me buy you dinner to say sorry. For everything I didn't do.\"\n\nAnd I smiled through my tears as I heard her soft, tissue-muffled \"I could... perhaps... survive the shame of both of those things.\"\n\n\"What time is it, anyway,\" I whispered, when I could.\n\n\"Oh God oh no fuck off o'clock\" she answered with a tiny, choking laugh.\n\n\"Christ, that early?\"\n\n\"Yeah. It is. Sorry. I got really... really really drunk... and more and more upset. And it all built and built and built inside me until I had to phone you so I could tell you what a dick you were.\"\n\n\"Thank you for phoning to tell me what a dick I was.\"\n\nShe coughed and blew her nose again.\n\n\"So will you phone me in the morning when I'm less broken and you're more okay?\" she whispered, at last.\n\n\"Yes.\"\n\n\"Do you... promise me?\"\n\n\"Yes.\"\n\n\"Don't break my heart again, Jamie. Don't... don't tell me you love me and then leave me hanging in the wind. This really is your final chance. There's nothing left of me to give that I haven't already lost to you. I'm yours to either mend... or ruin forever.\"\n\nShe took a sobbing breath, let out a low moan.\n\n\"I wish you were here now. I would give everything I am for one of your hugs.\"\n\nI closed my eyes. \"So would I.\"\n\n\"Go sleep. I'll... I'll have some coffee and try to sober up and then go do the same. Phone at ten, ok? Give me time to... to find my feet a bit. Ok?\"\n\n\"I'll talk to you in the morning, Fee. Go wash your face and have some coffee. Thank you for phoning me back. I love you.\"\n\n\"Go sleep. I love you more.\"\n\nAnd then she hung up, and I curled up and lay there, simply too tired and relieved to care about anything else for quite some time.\n\n.:.\n\n\"Hello,\" she groaned when she eventually answered.\n\n\"Hey,\" I breathed. \"I'm keeping my promise. As much as I wanted to let you sleep later, you said phone at ten. So I did.\"\n\n\"Oh God, is it morning already?\"\n\n\"Yeah.\"\n\n\"Oh God, no. I feel like death.\"\n\n\"Sorry. Sorry for driving you to such extremes.\"\n\n\"I'm a big girl. I made my own decisions. It's my own fault.\"\n\n\"I share some responsibility.\"\n\n\"As... much as that might be true, you didn't... oh God... tie me down and pour booze down me...\"\n\n\"Fee?\"\n\n\"Nauseous. Might need to worship at the porcelain altar. Just... moving to go sit next to it in case.\"\n\n\"Oh no.\"\n\n\"Shades of student life. It's years since I felt this... bad.\"\n\n\"I'm sorry.\"\n\n\"Stop... apologising... uh... my word, I feel horrid.\"\n\n\"I wish I was there.\"\n\n\"So do I,\" she whispered. \"You could rub my back... oh... oh no. Don't listen Jamie... don't...\"",
        "I didn't listen. I aimed the phone's speakers away from me and tried my best to ignore the visceral sounds of slaughter from the far side. I gave her a few minutes to pull herself together, then brought the handset back to my ear, grimacing in sympathy.\n\n\"Fee?\"\n\n\"Still... alive...\"\n\n\"Wow, you sound rough.\"\n\n\"Hugging the loo. You try to... uh... poised and together... while doing that.\"\n\n\"Are you ok, Fee?\"\n\n\"No,\" she whispered, groaning softly. \"No I'm not. Jamie... you're never to let me drink vodka again, ok? I'm banned from it. Ok?\"\n\n\"Sure thing. I'll exile it from our homes.\"\n\n\"Good boy,\" she whispered.\n\nI heard her gag and spit, and I winced again.\n\n\"Fuck. Ok. I... I think I'm ok now. Think that was all of it. God I hope that was all of it.\"\n\n\"It's been years since I last did that.\"\n\n\"Yeah. Think this is the last time... for a while.\"\n\n\"Have you let Kate know you're ok?\" I asked, softly.\n\n\"No. Not yet.\"\n\n\"She was really worried about you.\"\n\n\"Was she pissed?\"\n\n\"At first,\" I said, with a soft laugh. \"She was speaking in tongues. I've never heard some of those words come out of her mouth.\"\n\n\"Oh, yeah, she was pissed then. Sorry, Jamie. Sorry for doing all this to you.\"\n\n\"I deserved most of it, Fee.\"\n\n\"No. You didn't. And it was massively unfair of me...\"\n\n\"Shall we just start over from when we woke up next to one another? And pretend what's happened since is some sort of fever dream?\"\n\n\"I'd... really like that,\" she whispered.\n\n\"Right. In that case, want some breakfast?\"\n\nShe laughed softly. \"Oh. Not right now, no. Right now I just want you to hold me close and let me bask in your warmth for a bit. I'll sun myself like a lizard against you.\"\n\n\"That sounds like a lovely way to start our Sunday.\"\n\n\"Yeah. It does,\" she agreed, sadly. \"Sorry I was such an angry witch. I could have still been there with you if I hadn't been.\"\n\n\"Sorry I was such an idiot.\"\n\n\"I love that you're so oblivious. It's really endearing.\"\n\n\"Mm. Well, I love you in black lace.\"\n\n\"I'll be sure to wear that again, then.\"\n\nI smiled, then stretched out on the couch.\n\n\"What are you up to today, Fee?\"\n\n\"Resurrection. You?\"\n\n\"Ditto. Might go for a walk up the mountain. Try and find where I left my lungs yesterday.\"\n\n\"What?\"\n\n\"Oh. It's my coping mechanism. I run until I break so that I don't have to think. But yesterday I think I went a bit too far.\"\n\n\"Oh. Can I come with and help you look?\"\n\n\"Sure. Hop on a plane, I'll meet you at the airport in three hours.\"\n\n\"It says a lot about how I feel about you that I'm giving serious thought to that idea,\" she said softly.\n\n\"You've travelled enough for my stupid arse. I'll come to you.\"\n\n\"When?\"\n\n\"When will be good for you?\"\n\n\"Yesterday,\" she sighed.\n\n\"Granted. Um... I can see about getting leave for the end of the month?\"\n\n\"I'd... like that. Maybe... maybe we could go away somewhere. Together.\"\n\n\"You know what? That sounds like a dream holiday to me. I don't even care where we end up so long as I'm there with you.\"\n\n\"There are some thermal spring resorts dotted around here. Perhaps we could go to one of them?\"\n\n\"If it means I get to see you in a swimsuit, I'm in.\"\n\n\"You perve,\" she laughed.\n\n\"Guilty as charged.\"\n\n\"Mm. I'll do some research and let you know what I find.\"\n\n\"We should see if we can find something with a fireplace. I'd love to curl up in front of one with you.\"\n\n\"Stop putting delicious ideas in my head, Jamie.\"\n\n\"Never,\" I said softly, and she laughed again.\n\n.:.\n\nWe spoke every evening after work. I'd get home, eat something, and then wait for her to call me once she'd finished her commute back from gym. Her nightly \"Go sleep, I love you\" swiftly became the central pillar of my life. The days became a week, then two, and still I never quite lost the breathlessness I felt when I heard her gentle \"Hello,\" every evening.\n\nSoon we began phoning eachother in the mornings too, so that our voices would be the first thing we heard.\n\nI put in my leave request, and bought my tickets for a week up north with her. I could hear how happy that made her - that I'd done something for once, instead of always leaving it to her. The flight number was a commitment that she'd never before had from me.\n\nIt shamed me how simple it had been to do, and how happy it had made her.\n\nI promised myself that I'd never again let her do the heavy lifting for me.\n\nBut Felicity had other ideas, and had, as always, been plotting.\n\n.:.\n\nIt was Thursday afternoon, cold but clear, and I was in an especially good mood after my evening run when she phoned.\n\n\"Hey, you,\" I said, as I answered her call. \"You're early tonight. Had a good day?\"\n\n\"Yeah. It was great. But I reckon tonight's going to be even better.\"\n\n\"Oh, really? Why? What are you up to? You didn't mention anything...\"\n\n\"Well. I'm hopefully going to be having a rather nice dinner in a short while. But that kind of depends on you...\"\n\n\"I don't understand.\"\n\n\"I may have done something... impetuous.\"\n\n\"I... still don't understand,\" I laughed.\n\n\"Are you busy right now?\"\n\n\"Me? No. Of course not. Just... staring at a book, feeling somewhat at a loss... and thinking almost entirely about you. As always, just desperately wishing you were here with me.\"\n\n\"Really? So that would make you happy?\"\n\n\"You know it would.\"\n\n\"So... how about you come and let me in?\"\n\n\"You... wait... you're here? Really?\"\n\n\"I'm parked outside, all alone, cold and abandoned. Alas, poor me. I'm wondering if there's possibly a guy anywhere in this town who'd give me somewhere warm to be...\"\n\n\"Don't you dare go anywhere,\" I stammered. \"I'll be right there.\"\n\nI sprinted down the stairs to the basement. I ran round to the gates, saw her waiting, and tagged her in. She was still laughing at me as she parked up, hopped out of her rental car, and skipped around it and into my arms.\n\nI picked her up and swung her around, and she took a deep, shuddering breath as she clawed her way in closer to me.\n\nI held her for a long while, then set her gently down again.\n\n\"I couldn't wait,\" she whispered at last, as she clung to me. \"I couldn't wait until you were going to be up with me. I had to come and see you.\"\n\n\"You're mad,\" I breathed into her neck, and she shuddered as I pulled her harder against me. \"You must have paid a fortune for your tickets.\"\n\n\"I don't care. I just don't care. I needed to be here. I couldn't let another minute go by without being in your arms. I needed to be with you.\"\n\n\"Please understand, I'm not complaining. I'm... I don't have the words to say how happy I am that you're here.\"\n\n\"Good,\" she laughed softly. \"You're learning. Come. It's freezing. I brought some supplies with me - help me unpack them. Then... then take me home.\"\n\n\"Now that's a phrase I could grow to love,\" I breathed.\n\n\"I know,\" she said, with a smile.\n\n.:.\n\nShe leaned on the counter, watching me as I prepared our meal for us. Her champagne glass stood near at hand, refilled from the second of the bottles she'd provided us. Behind her flickered the virtual flames of a Youtube fireplace - a poor facsimile for the real thing, but enough to soften and light the interior of the flat in a manner approximating what we'd both decided we wanted for the night.\n\nEvery time I glanced up, or turned around, she was still watching me, eyes sparkling, lips curved into a self-satisfied smile.\n\n\"You're making me blush,\" I said, eventually.\n\n\"Why?\"\n\n\"Nerves, I think.\"\n\n\"Nerves? Why on earth? \"\n\n\"Because I'm an idiot,\" I muttered, sheepishly. \"It feels like a first date, and I'm... scared of messing it up.\"\n\n\"It is a first date,\" she grinned. \"Just an extremely extended one.\"\n\n\"One or two communication failures aside it's been...\"\n\n\"Really... good,\" she said, completing my sentence for me.\n\n\"Think you'll go home with me afterwards?\" I asked, grinning at her.\n\n\"Oh, I'm trying to make up my mind. You're cute. I might just,\" she said, amused.\n\nI blushed hotter, and she covered her laugh with a sip of her bubbles.\n\n\"I'm sorry for wasting so much of your time, Fee.\"\n\nShe reached out and gently touched my hand with her fingers.\n\n\"Don't, Jamie. Don't apologise for what wasn't really your fault. We got there in the end. It... it was worth the wait for you. I'd... do it again if I had to.\"\n\n\"I'm never going to stop feeling stupid over it though.\"\n\n\"That you can deal with,\" she said. \"Just not too much, and not too often. You're not a stupid man. Just... gentle and cautious. And... modern life makes it hard for thinkers like you and me. Our messages go astray. We know first-hand that it's easy to be hurt, and very hard to get over it and move on. So we try to move... gently. And that costs us, sometimes...\"\n\n\"You always make so much sense. You've always been my voice of reason.\"\n\nShe flushed and glanced down.\n\n\"Ever seen a duck on the water?\" she said, after a while.\n\n\"Um... is this innuendo?\"\n\n\"No. It's waterfowl,\" she retorted, amused. \"Think about it. A duck is calm. Serene even. But under the surface the legs are flailing about like crazy. That's... honestly, that's how I feel around you.\"\n\nI laughed. \"Well, in that case, what does that make me? I can think of several unflattering things...\"\n\n\"You're... a haven for my soul that shields me from harm when the rest of the world is being consumed by chaos,\" she said, gentle and matter-of-fact.\n\nShe looked up at me. \"You've always been the person who I knew would be there for me, no matter what. Thank you for loving me so completely, Jamie.\"\n\nI turned away for a moment, and concentrated just on breathing.\n\nThen I shivered as she took my hand.\n\n\"Jamie? Love?\"\n\n\"Just... need a mo.\"\n\nI cleared my throat, coughed, cleared it again.\n\n\"If you're going to be this serious this early in the evening I'm going to have to break out the port,\" I rasped, as I brushed at my eyes.\n\n\"I'm just... being open. Showing you all of my heart. Now that I know that I can. I... should have done it years ago. Back when I first knew what I felt for you was more than just pure dumb lust. Back when I knew that I loved you.\"\n\nI heard her slide off her barstool, heard the soft clink as she set aside her glass. She walked around the kitchen counter and came to me, and gently wrapped her arms around me as she leaned in to me. I tucked her in under my chin, enfolded her, and sighed out a soft breath as she melted against me.\n\n\"You are my safe place,\" I whispered, and she squeezed me tighter.\n\n\"You are my home,\" she echoed softly.\n\nAnd then we simply stood there, all else forgotten, lost in the simple appreciation of the presence of one another.\n\n.:.\n\n\"I didn't wear lace,\" she whispered. \"I'm sorry.\"\n\n\"Oh no. My heart is broken. I am undone. Alas. It is the end...\"\n\n\"Shut up,\" she grinned. She raised herself onto her elbow and stared down at me. \"I did this on the spur of the moment after I was already on the way to the office. Lacelessness is a small price to pay for me throwing everything else to the wind so I could come to you instead.\"\n\n\"So you literally drove to the airport and said 'Can I have a flight to Cape Town.'\"\n\n\"Yes.\"\n\n\"I love you, Felicity.\"\n\nShe flushed pinker. \"Say that again.\"\n\n\"I love you.\"\n\n\"Again,\" she whispered, shifting even closer to me.\n\n\"I love...\"\n\nAnd she silenced me with a slow, gentle kiss that swiftly became more insistent. She crawled up along me, and then threw her knee over and climbed onto my chest, straddling me and staring down at me.\n\n\"What is it?\" I breathed.\n\n\"Just... savouring this,\" she said, softly. \"Being like this with you, knowing that you finally know that it's you I want. It's been something I've wanted for so long. And I honestly thought I'd never get it. So... I don't want to rush it like I did last time. I want... I want it to be special.\"\n\n\"It already is,\" I said, staring up at her, and she flushed crimson.\n\n\"You know what I mean.\"\n\nShe put her hands to the hem of her teeshirt and slowly pulled it up and off herself. Her old, off-white bra followed suit, and then she sat there, giving me ample time to admire her.\n\n\"Can I... touch you?\" I asked, softly, once I was done staring in rapture.\n\n\"Mm. I like that you ask permission.\"\n\n\"Mortals know their place before their goddess.\"\n\n\"Worship me then,\" she laughed, as she took my hands and raised them to her. She closed her eyes and arched slightly forward as I gently trailed my fingers down over the pale skin of her perfect breasts.\n\n\"Oh, that is nice,\" she breathed. \"Oh, I love that.\"\n\n\"So do I,\" I groaned.\n\n\"I can feel,\" she whispered. \"You're trembling.\"\n\n\"You can't hold that against me...\"\n\n\"No, I'll hold other things against you,\" she grinned. She leaned forward, braced herself over me, then collapsed forward with a shuddering groan as I ran my fingers up over her sides and down her back.\n\n\"Jamie... \" she whimpered. \"Watch out... I'm... ticklish when I'm aroused. It's... a major issue...\"\n\n\"Tell me where to avoid,\" I grinned into her ear.\n\n\"Literally... everywhere sometimes. You'll.... mm... just have to pin me down.\"\n\n\"Ooh.\"\n\n\"Thought you'd like that,\" she gasped. \"Jamie... Jamie... you're...oh god... you're driving me mad by doing that...\"\n\n\"This?\" I said, as I gently stroked my fingers along her back.\n\n\"That. Being touched by you... is literally my... favourite thing. Your hugs have always made me... wet, but this is just like that only... a million times better...\"\n\n\"My hugs made you wet?\"\n\n\"I'd get home soaking. Every time. It was so frustrating,\" she muttered, as she writhed against me. \"So unfair. I felt deprived.\"\n\n\"Now that's something you should have told me earlier,\" I laughed.\n\n\"Uh huh. Uhn. I'm... oh god... no, stuff this... I'm... I'm going to strip now... and... and you're going to... take me... ok? Because this... what you're doing... uhn... is driving me crazy. You should get naked too,\" she added softly. \"I don't want... anything between us any more.\"\n\n\"You're going to have to let me up then.\"\n\nShe groaned and rolled off me, slowly unbuttoning her jeans as I unzipped mine. I flung mine aside and she did the same. \"Pull the blankets up over us,\" she said. \"It's cold and I tense up and that's not going to be fun... Oh. Oh god. That is a big issue you've got there,\" she added, staring at me as I removed my boxers and kicked them onto the floor.\n\nShe swallowed.\n\n\"It's technically your fault.\"\n\n\"Ok. I'll own that one...\"\n\nI shuddered as she reached out to run a finger along me. \"God, I love your body,\" she said, softly. \"Take my panties off for me, Jamie, won't you?\"\n\nI rolled onto my knees, and slowly eased the faded sky-blue cotton down off her hips. I groaned as her shaven mons and lips came into view, and she laughed deep in her throat at me.\n\n\"Surprised?\"\n\n\"Uh. Yeah. God, you look amazing.\"\n\n\"I started shaving again,\" she said, coquettish. \"Thought I'd reward you. Clearly you approve of my pussy like this.\"\n\n\"Oh God, yes. Can I...\"\n\n\"Can you... what?\" she breathed.\n\n\"Touch... you?\"\n\n\"Of course you can. Of course I want you to. Get those panties off my legs and put those fingers of yours to work,\" she added, with a grin. \"I'm just going to lie here and make appreciative... oh... uhn... oh wow...\"\n\n\"Like that?\" I breathed, as I slowly eased my finger deeper into her.\n\n\"So much. So fucking much,\" she groaned, spreading her legs wide for me. \"Oh. Oh God. Take me, Jamie. Take me. I'm yours. Make me come for you. Please. Make me come for you. Then... then put your penis... uhn... in me and make me come again.\"\n\n\"Are you... sure...\"\n\n\"Uh huh...\"\n\nI lay down beside her, and gathered her into me. She hooked her leg over mine and reached down between us to take me in her hand, holding me gently, fondling me as I toyed with her. I kissed her neck, her shoulder, and gently took a nipple between my lips as I played with her.\n\nShe groaned.\n\n\"You are so good in me. Don't stop that. So good. Gonna... just need to...\"\n\n\"Do what you need,\" I groaned.\n\n\"Uhn... ok...\"\n\nAnd then I forced myself against her as I felt her start to frantically play with herself. Her muscles tensed immediately on me, and she let out a low, throaty moan as she changed the angle of her hips.\n\n\"Put those fingers... all the way inside...\" she gasped, and she began to pant as I obeyed and started to thrust them deep into her.\n\n\"Jamie,\" she managed.\n\n\"Uh huh.\"\n\n\"Love you...\" she moaned. \"Love you in me. Love this.\"\n\n\"Come for me, Fee,\" I whispered. \"Come hard for me. Let me feel you come on me.\"\n\n\"Trying... really... hard...\" she groaned. \"Almost... too much... oh...\"\n\nI pushed myself against her again, and she let out a strangled cry.\n\n\"Gonna... gonna... Jamie... Jamie... I'm coming... I'm coming...\"\n\nAnd then convulsions shook her, curled her up against me as she cried and whimpered and ground herself against my fingers, snatching whimpering breaths until she fell back down onto the bed.\n\nShe reached up, scrabbled at me, clasping her hand behind my neck as she pulled me up to her to kiss me, hard and desperate.\n\n\"Lie on your back,\" she panted. \"I want you. Screw being slow. I need you in me now.\"\n\n\"Fee...\"\n\n\"Shh. No. It's fine. Please. I need you, Jamie. I need you in me so badly.\"\n\nSo I clasped my hands around her and rolled her up onto me. She scooted herself down along me, and raised herself up as she positioned me against her. She stared down at me, frowning slightly as she slicked me up. Slowly she lowered herself onto me, and we groaned and arched as one as she took me inside her.\n\n\"Oh... oh god, Fee,\" I moaned.\n\n\"So good, so good, so worth waiting,\" she panted. \"Fuck me, Jamie. Fuck me hard. Don't hold back, please love, don't hold back, just fuck me hard right now, please...\"\n\nShe fell forward onto me, and almost without thinking I began to move in and out of her. She moaned loudly, deep in her throat, and dug her nails into my shoulders. \"Harder, harder,\" she begged, \"don't worry, don't be gentle, that's for later, for now... I want you... uhn... like this...\"\n\nI was panting now, short, frenzied gasps with each hard thrust I gave her. Her thighs slapped on mine, and her hand was busy between her legs once more. She bit me, hard, then shuddered as I groaned.\n\n\"James,\" she whispered. \"Jamie. Don't... don't stop... don't stop, love, that's... so perfect... right there... keep your cock... right there...\"\n\n\"Fee...\" I gasped.\n\n\"You... close?\" she moaned.\n\n\"Uh huh...\"\n\n\"Fill me,\" she whimpered. \"Do it. Fill me. Oh. Oh Jamie...\"\n\nI felt her shudder, and she let out a low, almost agonised cry as she began to come again on my rock-hard shaft.\n\nAnd the groans she gave as she convulsed and writhed against me were all I needed to nudge me over the edge.\n\nI arched up, hard in against her, pulled her hard against me, crying out, mewling into her neck as she wriggled and ground on me and took my pulsing penis as deep into her lithe, wonderful body as she possibly could.\n\nAnd then we clung to each other, panting, gasping for breath as our heart rates slowed and the sweat cooled on our skin.\n\nShe made a small noise and turned her face in against mine.\n\nI kissed her forehead, and simply breathed the scent of her in.\n\nIt was quite some time before either of us felt any need to speak.\n\n.:.\n\nI snorted awake, and I heard her soft bubbly laughter as she shifted against me.\n\n\"Mm. Whu?\"\n\n\"You're really cute when you're sleeping,\" she whispered. \"You twitch and make noises. It's really sweet. I could watch you for hours. Such a shame it's morning already.\"\n\n\"Muurm,\" I grumbled.\n\nShe laughed again and kissed my ear. I made another, different type of noise, and moved in closer to her.\n\n\"I far prefer this way of waking up,\" I managed, at last.\n\n\"To what?\"\n",
        "\"To you leaving early.\"\n\n\"Mm. Yes. So do I. Lazing around, in your arms, naked as Eve and thoroughly used. I like this. I like being yours like this.\"\n\nI tucked my face in against hers, breathed in and out.\n\n\"Fee?\" I murmured, eventually.\n\n\"Mm.\"\n\n\"What can I make you for breakfast?\"\n\nShe sighed happily. \"Nothing just yet. Just be here for a bit. Then you can make me some hangover bacon like you promised me.\"\n\nHer eyes were the deepest, richest blue I could remember, and I lay there, staring at her, entranced and utterly in love.\n\nShe flushed, reached out, gently stroked my stubbly cheek. \"I could drown in your eyes when you watch me like that,\" she whispered. \"God, you warm me through and through. I can't believe I didn't do this earlier.\"\n\n\"Ditto,\" I said. \"I'm such a fool.\"\n\n\"You're my fool.\"\n\n\"Always,\" I agreed.\n\n\"Always a fool?\" she said, grinning.\n\n\"For you? Yes. Mrm. Too early for wordplay.\"\n\n\"You are going to have to get used to it, then.\"\n\nShe nuzzled in closer and kissed me gently. Then she flopped onto her back, and sighed happily.\n\n\"Right. You promised me bacon,\" she said.\n\n\"Heartless. I was so comfortable,\" I grumbled.\n\nShe grinned wolfishly at me as I staggered to my feet and stumbled around looking for something approximating pants.\n\nI paused midway through struggling into a shirt, and stared down at my lover.\n\n\"Fee?\"\n\n\"Yeah?\"\n\n\"Thank you for being impulsive.\"\n\nHer smile was all the answer I needed.\n\nI started to dig the makings of breakfast out of the freezer, and gave her a long, slow kiss as she joined me dressed only in my favourite navy teeshirt that she'd obviously just stolen from my cupboard.\n\nI brewed us coffee and put her cup in front of her, then slowly settled into the start of our new routine with no awkwardness, no hesitancy, just a heartfelt joy that, at last, she was mine.\n\n\"So, Mrs Smith,\" I said.\n\n\"So, Mr Smith,\" she grinned.\n\n\"What shall we do today?\"\n\n\"I thought we might have a slow breakfast. And some slow sex. And a slow shower. And then a slow drive to the beach, and a slow walk along it, with a slow lunch somewhere pretty to follow.\"\n\n\"Now that sounds like a good plan for the day.\"\n\n\"I know,\" she said, amused. \"I came up with it. So. To work now. Feed me. Then bed me. Then clean me, then elope with me,\" she added, smiling up at me.\n\nSo I did."
    ],
    "authorname": "onehitwanda",
    "tags": [
        "fear",
        "oblivious",
        "friendship",
        "growth",
        "love story"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/occultation"
}