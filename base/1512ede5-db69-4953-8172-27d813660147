{
    "title": "The Designer Pt. 03 Ch. 02",
    "pages": [
        "Author's Note\n\nHere is another part of the ongoing story. I had written this a few years back and have brushed it off, and edited the part to assist in recalling previous characters of a much longer story. I'm also considering publishing a reader's guide with some character sketches, and the state of what the character's think they know about themselves.\n\nI hope you enjoy it, this is a bit less story and bit more action than usual. We all need a bit of indulgence from time to time.\n\n- Hank\n\n\"I really didn't want this to happen,\" I thought to myself as I looked down at Megan Little, supine on her desk, legs spread and lifting her hips to meet each of my strokes. I shook my head at the vision, as my eyes lowered to the faces of Shannon and Brooke sucking deeply on their teachers' full breasts.\n\nI grunted as I heard my girlfriend Beth growl in my ear, \"Fuck her Zac, fuck her hard, make her cum!\" as she pressed her full breasts into my back, her hands on my hips guiding my strokes.\n\nOther than the five of us the room was empty, a precondition of mine before I started making out with Beth, was to ensure the doors were all locked. I also figured that any intruders would be overcome by lust before they got close enough to see, even if the door window had their shutters drawn. I had forgotten to check to see if inside the classroom was empty. \n\nThe room was sizzling, I had released my aura and was barely controlling it, trying to limit it to just inside the room. I could feel it shimmer as people passed through the edges of its radius, fighting to not let it enlarge and engulf the school. As it was, the four lust filled women had my body glowing almost golden from their combined arousal.\n\nIt had started as just an innocent kiss between Beth and me just after the school bell had rung, as the last day of exams were finished. All that was left before graduation was largely optional classes the next week followed by a formal graduation ceremony Friday night. As seniors, we didn't have any other classes, most of the next week would be social activities and senior recognition.\n\nBeth and I met in the hallway, and walked to my locker. I made a great ceremony of clearing out all my clutter and tossing it in a nearby garbage can. Then I wrapped Beth in my arms, and kissed her deeply. I lost track of how long we kissed, just how good it felt to kiss her and wrap her in my arms. \n\nI combed my fingers through her tangle of brown curls, feeling her full heavy breasts press into my chest. Lowering one had to grip her full round bottom. I wanted to add a little special kick to the kiss, and I slipped off my ring with its magical gem that restricted my powers and shoved it in my pocket. Then tightened my aura to the smallest orb I could control in the still emptying hallway of the school. \n\nImmediately what started as an innocent kiss became a heated lustful snogging. The remnants of people in the halls, gawked and one girl drawled, \"Get a room,\" as she passed. \n\n\"We should go somewhere,\" I managed to say between kisses, groaning at how Beth's hand had molded around the outline of my rigid cock stroking it through my jeans. I was struggling to maintain control of my powers as Beth succumbed to the lustful bliss that it provoked in her mortal flesh.\n\n\"Just ... quickly... I want you so bad,\" she managed as I took her hand and entered the first classroom nearby.\n\nMs Little's classroom. Ms. Megan Little. The new teacher to the school was in her late twenties. Long amber hair with a bit of a wave, a tight firm ass that looked great in her tight pencil skirts that showed off her firm shapely calves. Her breasts were the perfect teardrop shape, that while she wore a bra to accentuate her cleavage, the word in the locker room is that she didn't need to wear a bra.\n\nAt first I didn't notice Shannon and Brooke were sitting bored in the front row, nor Ms Little who did notice when we entered locked in a steamy kiss. Brooke and Snannon were also seniors like Beth and I, but apparently needed to stay after school to make up for extensive absences. Ms. Little kept meticulous attendance records, and was sure to abide by the rules. She was a first year teacher at our school, so was very careful to follow the rules, and had yet to grow cynical of senioritis. \n\nBrooke was a hottie, and she knew it, black hair in a pixie cut with hypnotic blue eyes, a daring dresser, who flashed me her smooth bare muff in the middle of class once. Shannon was the more conventional popular blonde high school beauty, good enough body to be a cheerleader, but her devil may care attitude left her as aloof and above most high school drama, she had become a good friend to Beth in a few short weeks.\n\nSo that explains how the three of them, and the two of us were in the same room. Although for the first few minutes, Beth and I didn't even notice. I swung her into the room, and pushed her against the wall, pulling and locking the door. I kissed her deeply, while I lifted her top and started to unclasp her bra.\n\nAs soon as the door was locked, I also expanded my aura, surrounding us in the glow of our building sexual energy. She gasped hungrily into my mouth, her hands unbuttoning my jeans, pushing them down and fondling my turgid shaft.\n\nIt wasn't long before I felt a second pair of hands run along my sides and embrace my chest, a full set of breasts pressing into my back. A third pair of hands was pushing my jeans all the way down, then cupping my balls as Beth stroked my length.\n\nI twisted to look who was behind me, but stopped short, losing even more control of my aura as I watched Ms. Little remove her bra and sway her hips as she walked towards us bare chested. I looked down to see Shannon's pale blonde tresses slip between me and Beth, as she started to suckle Beth's firm nipples.\n\nAnother hand gripped the back of my head and I swiveled around suddenly locking eyes with the striking blue irises of Brooke as she pressed her lips to mine, thrusting her tongue between my lips. I groaned and moved a hand away from Beth and wrapped it around Brooke's side, sliding down over her short skirt, then lifting under it to squeeze her ass. Unsurprisingly my fingers soon pressed into her bare soaked pussy lips, and she groaned into my mouth in encouragement.\n\nI felt a mouth on my cock, and pulled from the kiss, looking down to see Beth's sucking hard on my cock, Shannon's lust lidded eyes watching close as Beth licked my cock, then the statuesque blonede moaned and drew closer to lick and kiss along the other side my shaft. Beth pulled back, then guided my purplish head between Shannon's open lips, and I moaned deep as I saw her cheeks hollow as she sucked on the head.\n\nAgain my head was turned, then tilted down, catching the sight of Ms. Little's green eyes before they closed as her lips contacted mine. She had stripped down to her stockings and garter belt, and my hand lifted magnetically to cup her buoyant breasts.\n\nWe were all lust drunk from my magical aura, part of my fallen angel incubus genetic makeup from my mother's side. Our bodies shifted against each other, the four beautiful girls orbiting my flesh, and enjoying every touch. Their nostrils flared as they breathed deep, inhaling the intoxicating pheromones emanating from my seemingly glowing flesh. \n\nMy senses were overcome with the building energy, and I only lightly scanned the four beauties with the mind influencing power inherited from my father's side. I sensed their moral curves light up, and peaks form denoting strong new emotional bonds in their relational profiles. I knew suddenly how my father had formed such solid ties with his family of women.\n\nWe rolled and shifted towards the front of the class as hands, fingers, lips and tongues licked and caressed each other in a twirling frenzy of heated passion. Then I was pressing Ms. Little back onto her desk. Shannon and Brooke sweeping anything on the surface off, then hooking an arm around each of their teacher's legs, spreading her open. Beth pressed me forward between Ms. Little's open thighs. \n\n\"You've wanted her for the longest time, lover,\" Beth whispered in her ear, \"Take her, she wants you, and I don't mind sharing you.\"\n\nI groaned as my swollen head pressed and slipped up along my teacher's shiny outer lips. Her green eyes locked on mine.\n\n\"Yes, oh fuck... please, put it in me!\" whined Ms Little as my stiff shaft slid over her lips without entering. \n\nI slipped my hips back to realign, and Beth reached around me to grip my shaft and guide my head into our teacher's slick tight cunt. Megan Little groaned deeply as her hips lifted to meet my thrust as I sunk in deep. Then I was fucking my teacher steadily on her desk, while my three hottest classmates held her down, and encouraged me. Take that, Van Halen. \n\nShannon and Brooke watched me as they leaned in from the edge and nursed on our teacher's breasts. Their hands gripped her ankles holding her open and spread wide for continuous thrusts. They shifted alongside me then bent over the desk offering me their bare asses. I gripped a firm cheek of each of their asses then slid my fingers to cup each of their cunts. They gyrated as my fingers wormed into their slick folds, and increased my rhythm to match the beat of my thrusting cock. \n\nBeth, behind me, sucked on my ear, then pulled back and slipped past Brooke to the far end of the desk, pulling her dress up and off her body. Naked, she smiled sexily at me, encouraging my indulgence. Then she lifted her knee up to the top of the desk climbing up behind her teacher. Ms Little gasped as I slammed in harder, her head rolled back, seeing my girlfriend's bare lips Megan purred and opened her mouth as she saw Beth's juicy cunt inching closer. \n\nBeth reached forward to grip Megan's fabled breasts, squeezing firmly as our teacher's lips and tongue sunk between her engorged lips. Beth's eyes rolled back as she moaned deeply then rocked her hips to grind her cunt into Ms Little's eager mouth and tongue.\n\nMeanwhile, Brooke and Shannon's hands were busy, sliding down and playing with Ms Little's clitoris as my cock grooved easily in and out. Our moans and groans filled the room. The five of us glowed entranced with supernaturally fueled arousal. \n\nFeeling Ms Little suddenly seize up and shudder, I pulled out of her. I twisted and gripped Brooke's ass, spread her cheeks apart and guided my pulsing cock to fill her slick slit. She moaned and her hips pressed back to take my full length. \n\nBrooke moved her fingers to fill Ms Little's now empty cunt, pressing three in deeply and curling under Shannon's fingertips circling the teacher's clit. The devilish dark haired pixie, pressed firmly and milked into our teacher's g-spot prolonging Megan's orgasm. \n\nAs I fucked Brooke hard, my hands pulling her ass back as I slammed deeper and deeper, the three girls on the desk shifted. Ms Little shifted down towards me and rolled over to bend over the side of the desk next to Shannon. Her mouth sealed with Shannon's as Beth moved and spread her legs, spreading open opposite of the pair. Shannon's golden blonde tresses shook as she parted from the kiss, and leaned between my girlfriend's spread thighs and sealed her mouth against her swollen lips.\n\nI shifted and twisted Brooke back around the corner of the desk to better watch Ms Little, Beth and Shannon. Brooke complied as she moaned with each thrust, hungrily pressing back to meet each of my energetic thrusts.\n\nI watched as Beth tossed her head back feeling Shannon's tongue probing her cunt then her eyes locked on mine. I resumed my hard thrusting into Brooke's cunt, and reached forward to grip Beth's bouncing brown curls and pulled her lips to mine, kissing her deeply, as I fucked her friend.\n\nMs Little turned slightly, her heavy breasts pressed against the flat plane of her desk to face Brooke and kiss her deeply, while the blue eyes minx gasped and moaned with each of my heavy thrusts. Beth whimpered into my mouth as I felt her body vibrate, rolling her hips to grind her needy cunt against Shannon's hungry mouth.\n\nI felt Brooke stiffen then shake tumbling into a strong orgasm, and I pulled out of her clamping cunt, causing her to whine a soft whimper and deepen the kiss with her teacher. I slid around past Ms Little's firm bottom, to align behind Shannon. I gripped Shannon's hip with one hand, my shaft with my other, took a moment to align then plowed in deep, quickly finding the beat to firmly stroke into Shannon's soaked pussy. She tossed her head back and groaned deeply, before shifting back and lapping at Beth's leaking cunt. I stared into my girlfriend's eyes as I fucked her new best friend. \n\nMs Little broke her kiss with Brooke to turn and lean forward, using a knee to lift her sleek form up onto her desk, then moved smoothly up her desk to kiss Beth deeply, sealing her lips to hers and quieting her crescendo of moans. Brooke rolled over and then slid back to her knees at the edge of the desk, her head sliding under Ms Little's toned belly, kissing it lightly as she hooked her arms around her teacher's thighs and then sealed her mouth to her cunt.\n\nI watched in amazement, thinking that any moment I'd wake up from a dream to a cool room and ruined sheets. Instead the room grew even warmer, I paused for a moment, then sensed additional arousal suddenly ramping up outside of the classroom. I mentally shrank in the radius of my aura, wondering how far it had expanded while I was preoccupied with my lustful adventure. Taking an even breath while grinding balls deep inside Shannon I took the moment to check in with all of my partners psychic curves, and found they were all peaking, I could feel their edges approaching.\n\nI gripped Shannon's hip and rutted hard fucking her with full hard strokes. My grip closed and my short nails dug into her flesh to pull her round ass to meet each of my strokes. I felt her cunt contract, then she was groaning into Beth's cunt. Beth moaned into Ms Little's mouth, her hips flexing as she lifted her ass from the desk, and flooded Shannon's face with her clear ejaculate. \n\nMs White thighs clamped around Brooke's cheeks, then broke her kiss with Beth to drop and engulf one of Beth's rigid nipples as they both trembled in orgams. I felt my own peak soaring and the intensity of my powers tripped Shannon and Ms White into their second orgasms twitching and moaning. I rammed deep into Snannon's clenched cunt, then pulled out and stroked my cock feeling my balls tighten and then ropes of white seed pulsed onto Shannon's flexing bottom.\n\nI was spent, milking the last drops of cum from my cock. I slipped back against a wall and slid down the wall to sit down, my back resting against the flat cool plane. My power pulsed as the four girls writhed in the throes of their orgasm and afterglow then slowly began to abate. I watched them roll into each other, their mouths seeking one anothers. Three of them kissed and then licked my cum off Shannon's bottom, then the group of them lowered and crawled towards me. I spread my arms as they all slid against me, patiently taking their turns to kiss me, and thank me with their lips for the bliss we all experienced.\n\nAfter prolonged minutes, I parted from a kiss with my teacher, \"Ms Little,... I... I didn't realize you were in your classroom, I thought it would be empty..\"\n\n\"I think at this point you should call me Megan,\" she smiled, \"and it's okay I think.. technically you are no longer my students.\"\n\nShe paused and looked at me, in the same odd way she had for weeks since I had experimented with my aura. I looked at Beth and she had the same look in her eyes, and that was reflected in Brooke's and Shannon's as well. They were connected to me, all of them, unselfishly. My scans of their curves confirmed to me, they were all happy to be in this moment, all together, with me. Had I just formed my own family, like my father?\n\n\"Anyone up for a swim?\" I asked, wanting this to continue as long as possible.\n\n\u2014\u2014-\n\nLeah - Alyssa's Boudoir\n\n\"Don't you dare stop!!\" Alyssa cried in an unfamiliar voice, and clutched my hair pulling me deeper against her. She ground her dark brown hips into my lapping mouth, the exotic fragrance of her cunt filling my senses, my tongue savoring her unique flavor. \n\nHer words were familiar, but voice was strange. A foreign lilt and timbre mixed with a deep hunger. Her flesh tone darker, caramel colored and smooth. Her darker curly pubic hair made for a different feeling on my tongue. \n\n\"Oh, Leah... fuck yes... I'm going to cum!\" Alyssa announced in a sultry Indian accent, lifting her heel around my side, her anklets and bracelets adding tinkling sounds that went along with her gyrations as she approached her peak. \n\nI pulled my hand up from my own needy pussy and lifted it under my mouth, pressing two fingers inside her and curling inside, driving deep then rapidly jerking up into her, adjusting as I felt her seek the desired friction. \n\nShe tensed as her cunt convulsed and suddenly I was lapping up pulses of fluid with each orgasmic contraction. I savored her unique taste, closing my eyes at the sensation before tilting my eyes up to look up at her. \n\nHer head was rolled back, the deep color of her flesh making her skin seem radiant as she perspired from her efforts. Her full breasts were smaller than Alyssa's normal shape but capped with darker nipples that rigidly stuck out like firm thumbs as her body bucked in tension as she screamed out her bliss. \n\nAs she peaked then relaxed her head tilted forward, her lush black locks surrounding her unique face, her large brown irises looking at me with approval as she panted and caught her breath. Her hands softly combing through my hair, bangles on her wrists tingling joyfully in my ear. The glint of her nose ring in the afternoon light making her different form more obvious. \n\n\"Mmnn, thank you Leah,\" she said slipping from her peak, and drawing my face up past her dark breasts with their small, long stiff nipples, pressing her tongue into my mouth and kissing me with her exotic lips. \n\n\"This you tastes different, and moves different,\" I said sinking into her embrace, enjoying how she felt somehow warmer in the afterglow, \"How often are you like this, you seem insatiable.\"\n\n\"Well, things are crazy right now, and I need to burn some energy\" she said as her shape shifted into the form of a petite asian female with small breasts and silky long black hair. \"Do you need a rest?\"\n\n\"No,\" I said and shook my head, leaning closer to this new form, \"No I do not....\"\n\nCarmen - Kelly's Boudoir\n\nI knelt at the side of Kelly's bed, her heel in my hand as I massaged one of her feet sensually. She was stiff and on edge, something was getting to her, I hadn't seen her this grumpy in many months, if not years. \n\nI had stripped in the Master bedroom, when I heard her on the mesh reach out to me. So I knelt naked, my breasts firm and proud, my thighs open and willing. I was proud of my physique for a nearly fifty year old hispanic woman. I pulled Kelly's foot to the side, and reached for her other foot, twisting her on the bed, so I could continue my massage.\n\nKelly slid completely on her back with a heavy sigh, as she let me manipulate her toes and sole. She seemed to be struggling with issues that seemed to continuously bubble up. I knew Zac's present issues were weighing heavily on her, but there seemed to be more things troubling her. I instinctively moved higher on my knees so I could caress and kneed her lower legs and calves up to her knees. \n\nKelly lifted up on her elbows and peered at me with a soft smile, \"Are you trying to seduce me, slave?\" she asked with an arched brow and a teasing grin.\n\n\"It's not this one's place, Mistress,\" I smiled, \"to presume to seduce my better.\" and then pressed her thighs further apart and worked my hands firmly up her hamstrings. ",
        "She blushed and then grabbed the pendant around her neck and pulled it over her head and free and then leaned and hung it from a hook above her headboard. \n\n\"If Zac can take his off whenever he wants...\" she muttered then laid back and lofted her knees and lifted her skirt to expose her bare sex to me. \n\nThe room felt warmer as she released her supernatural succubus halo, and I felt my own sex clench with spontaneous desire, I didn't hesitate to rise up and bend between Kelly's spread thighs and kiss along her now glowing flesh. \n\n\"May this one indulge in tasting my Mistress' juicy cunt?\" I asked boldy\n\n\"Fuck yes, you may,\" cursed Kelly as she unbuttoned her top and started to disrobe. \n\nI hungrily snaked up between her thighs and pressed my lips to her petals, using my tongue to spread her open and take a long succulent lick.\n\nI heard the inner door to Kelly's room open as my arousal from her blooming unrestrained aura ramped up. I lifted for a moment to see Leah slipping inside with a small asian girl right beside her, seeking the beacon of Kelly's aura with lust written all over their faces. \n\nI felt small unfamiliar hands touching me very familiarly, which made me grin.\n\n\"Mmm, please indulge Alyssa,\" I said as her long nails at the end of slender fingers sunk into my breast flesh.\n\nHer hand gripped a handful of my brown mane, to crane my neck up from Kelly's sex and kissed me deeply.\n\n\"Mmmm,\" Alyssa said in a asian accented voice, then turned to look at Kelly who's flesh had turned brighter as Leah crawled alongside Kelly and helped her remove the rest of her clothes, \"this is going to get crowded...\"\n\nAt that moment, Kelly's front door opened and Jeremiah peered in. His head tilted as he saw the unfamiliar shape of a young asian woman that Alyssa was using, then grinned.\n\n\"Where's Naomi?\" he asked as he slid in gripping Lexi's hand and pulled her into the small room with me.\n\n\"With Nana Betsy,\" Alyssa said with a mischievous grin, adding, \"...for a sleep-over...\" after a pause. \n\nI smiled as even in the throes of lust, Aly and J remained the adults in the group, and ensured their young daughter was safe before succumbing to the delights of the flesh.\n\n\"Let's move to the master bedroom then,\" Jeremiah commanded. \n\nKelly grinned and shifted towards the edge of the bed. Alyssa grabbed my hand, and led me back through Kelly's access to the main bedroom. Lexi hugged Leah as she slipped from the bed, then clung to her as they waited for me and Aly to pass.\n\nI looked back to see Jeremiah lean over and kiss Kelly deeply as she rose from lying back. She wrapped her arms around his neck, and he slipped his arms under her thighs and behind her back, lifting her easily into his arms. The married pair followed the rest of our family into the master bedroom, and a trail of clothes and undergarments puddled in a trail to the large bed as we all slid onto the comfortable surface and enjoyed every inch of each other. \n\nWe lost track of time as Kelly let her full succubus power flow with overwhelming effect. \n\nZac - Driveway to the Jackson mansion\n\nI looked in the rear view mirror as I drove with Beth in the passenger seat. Immediately behind. drove Brooke in her new red convertible, her black hair sticking up in a wild spike as she smiled over at Shannon who was beaming in the passenger seat. Bringing up the rear was Ms Little, Megan, alone in her late model sedan, it was hard to see her clearly but the distances between our three cars showed we were all looking forward to a swim, and maybe more.\n\nWe parked along the wing of the house where the gym and entertainment rooms were, opposite the taller second story where my parents slept. We got out and the four girls gathered around me in front of my car.\n\nBrooke, Shannon and Beth had their swimsuits in their backpacks, but Megan shifted nervously.\n\n\"I don't have anything to swim in,\" she sighed, and leaned against my side. \n\n\"I'm sure we can find you one,\" I said, \"There are six adult females in this house.\"\n\nI looked over at my ex-classmates, \"Go on inside and to the right, you'll see a door to the gym, there is a dressing room you can change into. I'll help Ms... I mean, Megan find something.\"\n\nShe slid her hand into mine, as the three teenagers smiled as they headed off to get changed. I followed the sexy trio in through our main entrance, then peeled to the left, and headed to the stairs to the adult rooms in the second story.\n\n\"I think you should be about the same size as Lexi,\" I remarked as I led up the stairway then turned to the left to Lexi's room at the end of the hall.\n\nI knocked lightly, and then turned the knob to peek in. I saw light shining from deep inside her room, as I slipped in bringing Megan in with me. I approached her dresser when I looked down the hall to the back, and saw the tangled limbs of all my adult housemates moving sensuously on their large bed. \n\nI looked over at Megan, and she was already blushing with arousal and unbuttoning her blouse, her nipples hard and aroused as she bared her chest (having forgone putting on a bra after the classroom tryst.) She looked at me hungrily just before the full force of my mother's power overwhelmed me. \n\nI audibly grunted, as I tried to maintain control my ring was in my pocket as I was still recovering from earlier and thought I had my powers under control. The wash of lust that flowed through us from my mother's aura was the end of any control I had and grabbed Megan to pull her towards me. \n\nWe were busy with removing each other's clothes when I heard footsteps and looked to see Lexi approaching her door, and her eyes widened. I'd never seen her naked, but her firm athletic form made me jolt. She was obviously aroused and was only coming to close the door. When she saw me, however, her gaze shifted to Megan, and she slowed, then with only the slightest pause, she continued directly towards us .\n\nAs Lexi drew close, Megan noticed her, and after a double take, and a gasped, \"it's you...\" gasped then leaned past me. Their arms wrapped around each other and Lexi slid her hand up into Megan's amber hair and kissed her deeply. \n\n\"We were looking for a swimsuit...\" I started then stopped talking as the two women continued to kiss heavily and Lexi pressed Megan back towards her bed and leaned into her until Megan sat on the edge and laid back.\n\n\"I didn't know you were here,\" Megan said softly then was muffled by Lexi's aggressive kissing. \n\nI looked back into my parents room, and saw Leah look curiously towards where Lexi had disappeared, then approached to find out where she had disappeared. Leah's nipples stood out proudly from her full breasts that bounced hypnotically as she entered Lexi's room.\n\n\"Oh Zac,\" she started then looked over to where Lexi and Megan were feverishly making out on the bed. \n\n\"Um,\" I mumbled, \"Want to come down to the pool with me?\" I asked, wanting to at once join with the adults and also get very far away from them, the only reason I was lingering was the grip of my mother's aura, and my own increasing lust.\n\nLeah looked back over her shoulder, then at the pair on the bed, then took my offered hand and nodded. \n\n\"Yeah, I think so,\" she started, \"Your folks will understand...\" \n\nHer eyes drifted as something unsaid passed through her thoughts. She paused then nodded, seemingly to herself, before pulling me back out of Lexi's room down the stairs.\n\nAt the foot of the stairs Beth, Brooke and Shannon were waiting in various bikinis. They looked up and saw me coming down the stairs with a nude Leah leading the way. I could tell they were already feeling my mother's aura as their nipples were all stiff and their hands couldn't stop touching each other.\n\nThe sight of me, with a visible erection tenting my boxers, and the unfamiliar Leah bare naked and flush with arousal sent a non-verbal cue, which resulted in bikinis flying completely off. \n\n\"To the patio,\" Leah said, waving them forward, \"outside, please.\"\n\nI pulled my girls with me and we headed to the shade of the patio and towards the cool waters of the pool.\n\n-----\n\nAuthor's Note\n\nPlease encourage more of this story with your favorites, stars and comments. The muse has me pondering this story on a nightly basis, and I want to write more to satisfy her relentless pestering. It helps to know you, dear reader, want more too.\n\n-Hank"
    ],
    "authorname": "HankDolworth",
    "tags": [
        "group sex",
        "mffff",
        "submission",
        "group",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-designer-pt-03-ch-02"
}