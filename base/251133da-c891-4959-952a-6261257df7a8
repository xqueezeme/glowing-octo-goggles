{
    "title": "A Proper Send-off",
    "pages": [
        "Author's Note: Well, last year I did a Remembrance Day story, this year I'm paying tribute to the American side of my lineage with a Veterans Day story. It's long and the sex doesn't get started for a while but when it does, well, it lasts for a while. Big thanks go out to the super helpful editor who fixed my grammar and punctuation. Any errors in research are mine alone. \n\n*\n\n\"When the going gets tough, the tough get going.\" It was something Sarah's father had liked to say from the back of his auto shop when the work had piled up. \n\nSarah had always taken the saying to mean that when things got difficult, the tough people of the world went about working on the solutions. Of course, as she slammed the metal door on the storage locker down, Sarah realized that the clich\u00e9 could be read another way. \"The tough get going\" could mean the tough folks simply took off when things got difficult.\n\nAs Sarah turned the key to lock up the storage unit, she realized that for the first time in her life, she was leaning towards that reading, just bailing on her tough times. She'd had tough times before, more than most, Sarah assumed. \n\nHer mother had left the family when Sarah was only three years old, leaving her to be raised by her father alone. What that had actually meant was growing up in an auto shop in small town California, raised by her father and around the odd collection of mechanics her father intermittently employed as surrogate uncles. Add in the fact that Sarah had known she was gay from an early age, and she had definitely faced her share of adversity. \n\nShe'd always persevered. Before Sarah was in her teens she'd taken every advantage of her surroundings. She was as talented a mechanic as anyone her father employed and soon he'd actually taken to assigning her work when there was overflow. There was something she found so soothing about the entire process, the way an engine was a simple collection of moving parts that could be diagnosed, repaired and restored. Sarah found a power and a confidence in working with her hands that she'd never had in school trying to remember formulae and dates and times. If she was going to grow up surrounded by men who swore and talked sports and girls, Sarah was going to blend right into that too. At nineteen, Sarah was a match for any of the other grease monkeys when it came to talking football or how to please a woman. Sarah even grew to love the bawdy camaraderie that existed within the place. \n\nThen her world fell apart. Sarah's father died suddenly of a heart attack. Still reeling from the loss of her father, Sarah learned that the business was in bad shape to boot. She'd tried to keep what her father had started going; she was as capable of running the garage as anyone, but the shop was too deep in debt. Sarah soon learned that a nineteen-year-old girl who'd barely made it out of high school was not high on any bank's list of preferred customers. All of her efforts to secure the necessary financing failed and, still in her teens, Sarah had found herself parentless, unemployed and without much in the way of prospects. \n\nAgain, Sarah had persevered. On the last night that Sarah had gone drinking with the other mechanics her father had employed, one of them had mentioned that the Army was always looking for talented mechanics, especially with a war on. A few months later, Sarah found herself at a recruiting office. It wouldn't be easy. Aside from the regular tensions and stresses of active duty life, the military's \"Don't Ask, Don't Tell\" policy meant that Sarah would have to keep her sexuality a tightly guarded secret. It meant that no matter whom Sarah might meet, they'd either have to have a brief fling or conduct themselves in private, risking discharge if she was discovered.\n\nShe managed basic training and specialized training with surprising ease. Sarah had always been tall and with a few extra pounds but the rigors and challenges of army life soon had her in the best shape of her life. Sarah found the physical challenges exhilarating and reveled in meeting them and exceeding them. She ran every day, first for a mile, then two, and now she was at almost five a day. By the end of her first deployment, Sarah didn't have an ounce of unwanted fat on her, her arms were toned and powerful, her legs long, lean and strong. She even had a halfway decent six-pack going when she really went at it. \n\nTo top it off, Sarah found working on Humvees to be as easy as civilian cars, found a vaguely similar sense of camaraderie with the men and women of her unit as she did in the shop--though she did have to artfully deflect more than a few advances--and even bought into the nobler aims of her job. She was serving her country, protecting the land she loved. True, she was well aware of the hypocrisy of protecting freedoms that were, in certain cases, denied to her, but Sarah still dedicated herself to it. In her first three years Sarah received several promotions and commendations for her almost superhuman work ethic.\n\nThen, on her first stretch of extended leave in years, something wonderful happened. Sarah met Audrey, a pretty, slight brunette. Audrey and Sarah didn't have much time before Sarah would be overseas again, but they made it count. They had an intense, thrilling, wonderful few months together. By the end of it, they were saying their \"I love you's\" and making plans to live together as soon as possible. Everything Sarah owned was left at Audrey's house on her next deployment and they were, in all ways, a couple.\n\nThat led to new stresses in Sarah's next deployment. Now she did have something to hide and Sarah missed home powerfully during the long, hot days and the lonely, cold nights. She and Audrey tried to make it work and were successful for two years. Things were looking up. Not only was Don't Ask, Don't Tell repealed, but Sarah was nearing the end of her six-year enlistment. Only one more deployment stood between her and civilian life with her girlfriend. Sarah had come back to the states just a week earlier on her two-week leave. It would be the last time she and Audrey would be together before they were together for good. Sarah had come home thinking that they would spend the first week in bed, as they usually did, and then would spend the next week planning the rest of their lives together. Sarah had even considered buying a ring and proposing, taking a trip to the nearest state where the two of them could have gotten hitched. \n\nSarah laughed at that as she walked from the storage facility. She'd come home thinking about wedding bells. She'd come home, instead, to find her life fall apart yet again. \n\nAudrey had told Sarah, in no uncertain terms, that she had no interest in waiting another year to be in an actual relationship with someone. Sarah had tried to explain her situation, tried to convince Audrey that she loved her and that she was going to be back shortly for their life together but Audrey was having none of it. She'd made up her mind. Worse yet, Audrey had told her there was someone else. Sarah didn't hear much past that. Feeling numb, she'd left Audrey's house, checked into the only motel she could afford, and had spent the last few days in a daze, getting her few meager possessions out of Audrey's house and into the storage unit.\n\nAs Sarah walked the streets of the downtrodden area the storage unit was in, she shook her head at her situation. Again she had nowhere to go. The city was the one Audrey lived in and even then Sarah had only grown to know the neighborhood she shared with Audrey. Sarah didn't recognize any of the street names of the blue-collar area. Sarah felt exactly as she had when her father had died, only this time she was in her late twenties with no prospects and no home. She had four days left before redeployment.  \n\nAs Sarah idly walked through the streets in the direction of her motel, she realized that she needed a drink worse than she'd ever needed a drink before. \n\nAfter a few blocks, Sarah found what seemed to be what she was looking for. It wasn't much to look at. A small, grimy, two-story brick building with dark windows and a heavy door. It didn't look like much, but then again Sarah wasn't looking for much. The sign above the front door read \"O'Flaherty's Pub\" and a smaller neon sign pronounced that they had cold beer. It was enough for Sarah. If she was going to spend her last four days alone and miserable, she might as well spend them drunk. \n\nPulling the door open, Sarah was even less impressed with the interior of the establishment than she'd been with the exterior. At least the bar itself was nice; near ten feet of long, dark wood in front of what looked like a pretty varied collection of liquor bottles. The rest of the place did not do as well in Sarah's estimation. Weak looking tables surrounded by varying numbers of chairs, a few beat-up looking booths. The best seats in the place by far seemed to be the sturdy looking stools in front of the bar. \n\nNot that vast seating seemed required. Sarah knew that even the busiest of bars would not have been packed in the afternoon on a Tuesday, but O'Flaherty's seemed especially deserted. There was only one other person in the bar from what Sarah could tell. An old, rough-looking man in what Sarah guessed to be his mid-fifties sat on one of the bar stools, sipping at a beer bottle and watching the small TV above the bar. \n\nSarah shrugged and took a stool on the opposite end of the bar. She was no snob, she'd been drinking in dives before, and this place seemed especially reflective of her current mood. The idea of being surrounded by young, happy, successful people making a lot of noise made Sarah sick to her stomach. \n\nThe man in the bar took no notice of her. Sarah sat idly for a second, wondering if he was the bartender or just a patron, before the small door at the back of the bar opened. Walking out of it was what Sarah assumed to be a woman with what looked to be nice legs. Sarah had to guess as the person was carrying several stacked boxes of beer, obscuring her completely from the waist up. Confident that service was forthcoming, Sarah turned her attention upwards to the TV. Some sort of trivia show was on. Sarah idly watched as she waited to be served.\n\n\"What'll you have?\"\n\nSarah looked up, intent on ordering a shot and a beer, and was immediately sent reeling. Standing in front of her was the most jaw-droppingly beautiful woman she'd ever seen. She was tall, Sarah guessed her to be almost as tall as she was, with a thick, luxurious tumbling of silken hair. Sarah wasn't much for colours but she'd have gone with a light red or deep reddish-brown to describe it. More than that, there were wide, bright, sparkling green eyes, a cute button of a nose and thick, full, bright red lips. Her face was pale and smooth and made her look barely old enough to be in a bar, let alone working in one. \n\nAnd as beautiful a face as it was, and it was a beautiful face, it paled in comparison to the body beneath it. The bartender was wearing a tight black t-shirt, stretched to what looked to be the breaking point across two of the largest breasts Sarah had ever seen. They sat high on her chest, almost ballooning outward from her frame. Despite their size and heft, they didn't seem out of place on her. Skinny was not an appropriate word to describe the rest of the girl. Her stomach was flat but soft looking and a narrow waist flared out into hips that brought to mind the curved highways of her home state. The jeans hugging them struck Sarah as the luckiest garment in the world. Long, shapely legs completed the package, trailing down behind the bar to a pair of sensible black flats. \n\nSarah barely had a frame of reference for how the girl looked. There was nothing fake or plastic about her like a porn star and she knew the girl wasn't a size zero like most of the supermodels some guys preferred. None of those models had curves like her anyway. Sarah stared in amazement for a second before she caught her composure. \n\n\"Shot and a beer,\" Sarah eventually managed to squeak out. \n\nThe woman smiled at her, nodded and turned around to face the bar. As she did, Sarah got a glimpse of a backside that, if anything put the front to shame. Full and round, curved and toned, Sarah again had to marvel at just how well put together she was. \n\nSarah could feel a strange level of desire build within her. Even if she hadn't gone without sex for a year she'd have felt the heat just from being in this woman's presence. Sarah wasn't much for flowers and hearts. When she looked at this girl, she didn't want to date her or get to know her better; she wanted to fuck her. Sarah wanted to grab her, bend her over the bar and fuck her nonstop until she dropped from exhaustion. Sarah wasn't averse to her own pleasure, but she took a special interest in bringing her lovers to orgasm. There was something about the look, the feel, the taste of a woman as she quivered and screamed with pleasure that drove Sarah sexually. Whenever she saw a woman she found sexually attractive, Sarah immediately would begin fantasizing about how they looked in the throes of climax. Sarah had never wanted to see a girl cum more than the girl behind the bar. \n\n\"Here you go,\" the bartender said as she returned with the drinks, flashing Sarah a sweet smile. \"Want me to start a tab?\"\n\nSarah nodded, still dumbstruck. The mystery woman again turned from Sarah and walked to her other patron.\n\n\"How're things, Jim? Need a fresh one?\"\n\n\"Still working on it,\" the older man replied. \"How're things with Zack or Kevin or whoever it is you're dating these days?\"\n\nThe pretty bartender frowned. \"Over. And I'm the better for it.\"\n\n\"True.\" He nodded sagely. \"He didn't seem up to the task,\"\n\n\"Ugh, I need a man,\" she said in exasperation. \"I mean, look at me.\" The bartender stepped back from the bar, waving her hand over her torso. \"How is it that none of the guys I date are able to take this on?\"\n\nSarah grimaced a little. The woman was straight. Of course she was. Sarah's troubles returned to her in full and she turned her attention to her drinks, gulping the cool, bitter beer down.\n\n\"It's because you date young fellas,\" the man answered. \"Raised on tofu and video games instead of red meat and national service,\"\n\n\"Mmm, so I need an older man, is what you're telling me?\" the bartender said flirtatiously as she leaned towards her patron. \"Think Gladys could share you for a night?\"\n\n\"Kiddo, she'd tear your arms off,\" Jim chuckled mournfully.\n\n\"Poo.\" She pouted before turning towards Sarah. \"How about you? Know any good, available men that you don't want yourself?\"\n\n\"I legitimately don't.\" Sarah knocked back her shot of whiskey. \n\n\"Figures,\" the bartender moaned. \"Such is my lot, I suppose. An instrument such as myself and no Hendrix or Page to make it sing.\"\n\nSarah smiled weakly as she ordered another round. The rest of the afternoon went much in the same way. Sarah drank quickly and copiously as the bartender and her other customer talked and flirted. When the bartender flirted with him, he'd beg off and when he propositioned her she'd giggle and call him a \"dirty ol' perv.\" \n\nIt seemed to Sarah like a well-practiced routine. Sarah was in no mood for it though. She wanted to drink. She wanted to forget Audrey and the Army and her life. As the evening went on, she even managed to do a halfway decent job of it. The bar remained nearly as empty through closing. Sarah and Jim stayed and every now and then another person would come in for a drink or two.\n\nThe night drew to a close and Sarah got up, her head spinning slightly. She'd been drinking solidly for hours and she'd come very close to forgetting every relevant detail of her life. \n\nThe bartender noticed Sarah's movements and walked towards her. \"Done for the night?\" \n\nSarah nodded. She was drunk, but she knew that anything she said would have made her sound ridiculous. Even knowing the girl was straight and man-crazy didn't make Sarah any less self-conscious about looking stupid in front of her. Sarah just reached behind her for her wallet as the bartender put a bill in front of her. \n\nSarah grasped the small piece of paper and flipped it up and immediately saw there'd been a mistake. She'd only been charged five dollars for what Sarah guessed to be at least a dozen beers and just as many shots. \n\n\"You undercharged me,\" Sarah blurted, trying to keep her composure.\n\n\"No I didn't,\" the bartender said confidently as she wiped down another spot of the bar.\n\n\"But I was drinking all night,\" Sarah drunkenly protested,\n\n\"And that right there is the military price for doing so in O'Flaherty's,\" the redhead said with a wink as she turned her head back to Sarah. \n\nSarah shook her head. She hadn't mentioned what she did all day or to anyone. She wasn't wearing a buzz cut or any military paraphernalia either, her sandy blonde hair was just tied behind her in a tight ponytail and she was in jeans and a sweatshirt. \n\n\"Don't be ridiculous, I can pay my bar tab,\" Sarah kept protesting,\n\nThe beautiful girl shrugged. \"It's bar policy, nothing I can do. Especially not this time of year.\" \n\nSarah had to struggle to figure out what the last part of the sentence meant for a second before remembering that Veterans Day was a few days away. It actually fell on the day Sarah was shipping out. Sarah had remembered thinking that it would be apropos that her last night with Audrey would have fallen on the holiday. \n\nThe thought brought Sarah back to her problems for a second and she glumly nodded, reluctantly accepting the bar's patriotic policy. \n\nSteeling herself, Sarah straightened herself up and allowed the redheaded bartender to catch her eye once more. She'd stolen glances all through the day but this time she took a long, lingering stare as the woman went about the business of running the bar. \n\nSarah didn't know if she was trying to make sure the woman was real or was just storing up a mental image for a masturbatory session or some mixture of the two. Either way, the two women's eyes caught. Sarah nervously turned her head as she was caught, the bartender just smiled to herself. \n\n\"Well, I'm off,\" Sarah said nervously, realizing the ridiculousness of announcing her departure to a bar of strangers.\n\n\"Have enough for a cab?\" the bartender asked. \n\nSarah nodded.\n\n\"And you're definitely not driving?\" she inquired sternly\n\nSarah shook her head. The bartender looked her over for a second with a probing eye, as if she could tell if Sarah was lying just by giving her the once over. Apparently satisfied, the bartender gave her a smile and a wink. \"Alright then, have a good one.\"\n\nThe next morning, Sarah found herself in the same spot at the same time. Her hangover had worn off and her desire to drink away her day had returned powerfully. When she woke, she'd briefly considered doing what she could to find a gay bar, maybe try to pick a woman up, but the truth was that even if Sarah were the type to hit the gay bar scene, the possibility of running into Audrey made her want to throw up. So she'd caught another cab to O'Flaherty's early in the afternoon. Sarah didn't know if the same bartender would be there but she figured it was a win-win situation for her regardless. If it was a new bartender, Sarah could sit in the quiet bar and drink. If it was the same girl, Sarah could spend another day admiring the most sexually appealing example of the female form she'd ever laid eyes on. Pulling open the door, Sarah was pretty sure which of the two options she'd prefer. \n\nTo her pleasure, nothing seemed to have changed from the day before. The same older gentleman was on his stool at one end of the bar, the same trivia show was on the TV he was watching and, sitting on the bar with her back towards the door, was a girl that Sarah could instantly recognize as the same one who'd served her the day before. It was just that spectacular an ass.",
        "A tilted head and a smile from the object of her lustful stares greeted Sarah's entrance.\n\n\"Well, goodness me, Jimmy, I now have two regulars,\" she said with some surprise. \"I'll finally be able to buy that Cadillac.\"\n\n\"Yeah, well, I discovered this place before it was cool,\" Jim said cynically, his eyes not leaving the television.\n\n\"You're right,\" she said as her eyes went wide. \"I don't know if I can take the hustle and bustle of being such a trendy hotspot.\"\n\n\"Money will change you,\" Jim agreed.\n\n\"God, it so would,\" she said dreamily, as if imagining her riches.\n\nSarah smiled. For brief moment in her fitful sleep, she'd thought she might have imagined the place, might have imagined both the woman and the bar. As Sarah walked towards the bar she was glad to see that she was wrong. The woman was even more beautiful than she remembered. Now her hair was braided behind her head and her gorgeous chest hidden behind a tight green cardigan. Now Sarah felt like the dirty old perv as she looked at the girl with the same lust. She confidently walked to the bar and took the same seat she had the day before.\n\n\"Shot and a beer,\" she ordered. \n\nTo her surprise, though, the bartender shook her head. \"Nope, can't do it,\" she said. \"You get one day to anonymously drink away your sorrows, but if you're going to spend all of Tuesday and Wednesday drinking here then we're going to talk and figure out why.\"\n\n\"I don't really want to bore you with my problems,\" Sarah said. It was true. She appreciated the offer, even if the sympathetic ear of the bartender struck her as a tad clich\u00e9, but she was not a sharer at the best of times. Sarah had grown up and been taught to tough out her problems, deal with them herself. \n\n\"Yeah, well, tough,\" the bartender said, pointing to a sign on the bar proclaiming the establishment's right to refuse service. \"At the very least you're going to tell me your name and what your story is.\"\n\nSarah nodded. She could do that.\n\n\"Sarah Conover then,\" Sarah said, extending her hand.\n\n\"June Reilly,\" the bartender said, gripping the extended hand. Her grip was firm but soft and Sarah shook it with a smile. \n\n\"June, huh?\" Sarah chuckled\n\n\"Yeah, yeah, I was named after my dearly departed grandmother, so no jokes\" she said, clearly used to having to explain her slightly old-fashioned name\n\n\"No, I like it,\" Sarah said honestly. \"It kind of fits.\"\n\n\"How so?\"\n\n\"Well, you have kind of a fifties pin-up girl look, you know? Marilyn, Mansfield, that sort of thing,\" Sarah said with admiration, looking again at a body that seemed to defy description as well as gravity. Still, as she'd idly thought of June as she'd drifted off to her drunken sleep the night before, a pin-up model from that era struck her as the best comparison.\n\n\"Is that good?\" June asked as she set a beer down in front of Sarah,\n\n\"Oh yeah,\" Sarah exclaimed with, she thought, perhaps a bit too much enthusiasm. June smiled and turned to Jim with a broad grin. \n\n\"See, told you,\" June said, leaning forward to playfully swat at the older man's arm with her bar towel. He reached back into his wallet and pulled out a crinkled five-dollar bill.\n\n\"Yeah, yeah, yeah,\" Jim said wearily.\n\nSarah looked at the exchange with a little confusion. A look that June caught.\n\n\"We bet as to whether or not you were gay.\"\n\nSarah was a little taken back. She wasn't sure she liked being the subject of that bet. She wasn't used to her sexuality being a matter of public discussion and it made her feel a brief flash of panic. Sarah had to remind herself that she no longer had professional reasons to worry anymore about anyone knowing she was gay and she had no other concerns about being outed.\n\n\"Congratulations,\" Sarah said, tilting her beer towards the victorious June.\n\n\"Eh, I sort of cheated,\" June shrugged, tucking the five dollars into the front pocket of her jeans. \"I was on the receiving end of your stares all day yesterday,\"\n\nSarah could feel herself blush a little. She'd tried to been discreet and was disturbed to learn she'd failed so completely. \n\n\"Sorry, I just--\"\n\nJune shook her head. \"Don't apologize, I'm hot, \" June said with absolute confidence in her words. \"People stare at me all the time,\"\n\nSarah had to smile. Both at the exchange and at the confidence on display. Sarah knew that many people considered her attractive. She'd certainly turned down enough fellow soldiers over the years to know she could turn a head if she needed it. Not in a million years, however, would Sarah have stated her own hotness the way June just had. Coming from a woman as gorgeous as June, though, it didn't strike Sarah as conceit or arrogance, just a simple statement of fact. \n\n\"Hey June,\" Jim broke in, \"any chance you could lend me five bucks? I need to pay for my drinks.\"\n\nJune nodded and produced the same five-dollar bill from her pocket, sliding it across the bar to Jim. \n\nSarah laughed. She didn't know why but just being in this bar seemed to put her in a better mood. Even if June wasn't in her future, Sarah still liked the interplay between June and Jim and especially liked having permission to look at June. Sarah found herself thankful she'd found the place. Looking around the bar, Sarah had to admit that her initial impressions of the place might have been a bit unfair. True, some of the fixtures and furniture looked old and worn but it looked authentic, worn-in. It looked like the place that had seen many a good time over the years.\n\n\"So, Sarah Conover,\" June said, \"What's your story? The abridged version, if you like.\"\n\n\"Like I said--\"\n\n\"Like I said,\" June interjected, \"We're going to get to know each other if you're going to be a regular. You can leave out the drinking parts, I just need backstory,\"\n\nSarah thought it over. She could manage revealing something. She tried to give the Cliff's Notes of her life.\n\n\"Well, I'm twenty-six. Grew up in Southern California. Mom left when I was three. Dad raised me in his auto-body shop. Died when I was nineteen. Joined the Army as a mechanic. Served for five years. Have a sixth to go. Found a bar with a nosy bartender.\"  \n\n\"Fair enough.\"\n\n\"How about you?\" Sarah asked\n\nJune shook her head.\"Wasn't part of the deal.\" \n\n\"Fair's fair,\" Sarah insisted, putting her empty beer bottle down on the bar. June nodded and grabbed another from the fridge.\n\n\"Uh, raised here. I'm twenty-two. Pretty normal I guess. Went to art school. Realized photography was not the get-rich quick guarantee I'd always assumed it to be. My Uncle Pat died and left me his bar,\" June recounted.\n\n\"To Patty,\" Jim interjected, raising his whiskey to a small framed picture behind the bar. It was of an older, heavy-set man with a small girl that Sarah recognized as a younger version of her bartender. \"He knew more about baseball and was a faster pourer than his wastrel of a niece.\"\n\nJune reached back for a bottle of the stuff and took a swig herself. \"Yeah, but I'm better scenery.\" June winced at the straight shot of whiskey, even as she nodded her agreement with Jim. She turned back to Sarah to continue, \"So anyways I decided to go with struggling small business owner over starving artist which means technically you found a bar with a nosy owner, not a nosy bartender,\"\n\nSarah nodded. There were things about the story that didn't entirely add up to her though.\n\n\"Wait, if you own the place, then what was the deal yesterday? About the bar policy and you not being able to change it?\" Sarah questioned sharply, proud of herself for catching June in a lie.\n\n\"God's honest truth, I'm afraid. It was in the will, most I can charge anyone in or retired from the service is five bucks\" June said plainly, continuing to wipe the bar down. \"Pat served most of his life before he opened this place. His policy.\"\n\n\"Oh,\" Sarah said\n\n\" I'm not inclined to change the policy, being a grateful patriot and all that,\" June said genuinely. \"I mean, if not for your sacrifices and the sacrifices of those before you I wouldn't have all this.\"\n\nSarah tried to figure out if that were sarcasm at the state of the bar or genuine sentiment. She gave up without coming to a decision. \n\nJune continued \"Besides, even if I were inclined to do so, Jimmy here served with Pat and would totally rat me out to the lawyers if I thought of changing things.\"\n\nJim nodded his agreement. \"Too right I would.\" \n\n\"So, wait,\" Sarah said. \"Me and Jim are the only ones here. And we're both vets. And the most you can charge either of us for drinking all day is five dollars?\"\n\n\"Like I said,\" June shrugged, \"It's a struggling business,\"\n\n\"And you get by, in this economy?\"\n\n\"Eh, it's not all bad. My uncle owned the building outright which includes the apartment upstairs so, you know, no rent either way there,\" June explained. \"And every now and then someone gets drunk and buys one of the photos.\"\n\nJune motioned to the bar and Sarah followed. Sarah hadn't noticed them before but rather than the typical photos of sports teams or bar patrons most places had, O'Flaherty's had black picture frames, filled with images that even Sarah, who cared little for art, found striking. There were various buildings and images of the waterfront, even one of Jim, beer in hand. Sarah had thought of him as just an old drunk but looking at the photo, she saw another side. The photo made him look wise and gregarious and someone who fit perfectly into his surroundings. Sarah had to admire the skill, even if she didn't know how to describe it.\n\n\"Oops,\" Jim said, having turned slightly towards Sarah and then back to June. \"She's looking at the photos,\"\n\n\"I am.\" Sarah nodded. \"They're awesome.\"\n\n\"Plus,\" June said, changing the subject, \"I totally flirt with all of the beer and booze distributors for a discount.\"\n\n\"I'd give you one,\" Sarah had to admit as she took a sip of her beer.\n\nThe banter continued for a while. Sarah found herself relaxing even more, enjoying herself immensely. \n\nJune, for her part, seemed to welcome a change of pace from her constant interaction with Jim. Sarah was plain spoken and smart and June warmed to her quickly. The three of them quipped for a few minutes before they were interrupted as Jim stood up and made his way to the bathroom.\n\n\"Remember, it's accuracy, not speed,\" June called after him as he disappeared behind the bar. She turned to walk to Sarah's end of the bar, propping herself up on her hands and lifting herself up to sit next to where Sarah's beer was. It was the closest June had been to Sarah and she was again reminded of just how attracted she was to the busty younger woman. Sarah inhaled deeply. She wasn't sure how, but even in this place June had the unmistakable smell of vanilla and something else. \n\n\"So let me ask you,\" June said, her voice dropping a bit, \"how did you know you were gay?\"\n\nSarah looked up at her, surprised slightly by the boldness of the question for a moment before realizing it fit perfectly with what she knew of June so far. June did not strike her as being cautious and conservative and had a tendency to speak her mind. If June wanted to know how Sarah had known she was gay, Sarah realized decorum or a lack of familiarity would have held her back. Sarah thought about it for a second before responding somewhat defensively.\n\n\"I don't know,\" Sarah said with a sip of her beer. \"How did you know you were straight?\"\n\nJune was taken back. She hadn't expected that response and had to think about it for a second.\n\n\"Not sure. Just instinct, I suppose,\" June shrugged\n\n\"There you go.\" Sarah tipped her beer in June's direction. She couldn't have summed it up better. \n\n\"Well, okay, sure,\" June conceded the logic. \"But at least you had to have had something where you realized you were outside the norm.\"\n\nSarah thought about it. She was surprised a little by the intimacy of the conversation, but there was something about June that just brought it out of her. \n\n\"Best I can do, I guess, is years back, when I was just starting to work in my dad's shop and some of the other guys brought in a girly calendar. Hung it up, you know?\" Sarah said, remembering something from years back, \"My dad saw it and said to the guys, you know, 'not around Sarah' and all that and I was like 'doesn't everyone like looking at pictures of girls?'\"\n\nJune laughed. Sarah joined her. \n\n\"But that's, you know, not really it though\" June continued, \"I mean, I can appreciate the female form and I can look at a girl and say, 'wow, hottie.'\"\n\nSarah wanted to point out the differences between admiration for the form and being turned on by it, but caught herself. She saw an opportunity to do some of her own digging.\n\n\"And you've never been curious?\" Sarah asked slyly. \n\nJune gave a non-committal shrug. \"Curious about being with another woman?\" June inquired.\n\n\"Yup,\" Sarah said, trying to hide her interest. She very much wanted to hear June admit to an interest. A burning one. One she'd always had and wanted to act on, maybe in art college, but had never gotten the chance and could maybe Sarah help her realize it? \n\nSarah smiled to herself as she let herself get a little carried away with her imagination. June, however, looked fairly disinterested although contemplative.\n\n\"I mean, maybe? But I'm curious about lots of things,\" June said matter-of-factly. \"What's it like to shoot heroin or eat ostrich or go walk for a walk in space. So, yeah, what's it like to bang a chick? You could say I'm curious about that. Not to the point of I gots to have it though.\"\n\n\"Fair enough,\" Sarah admitted, her hopes mildly dashed\n\n\"Besides,\" June said, hopping down from the bar and giving Sarah a terrific view of her bouncing chest. \"Lesbian sex always strikes me as so random,\"\n\n\"How's that?\" Sarah asked, not sure if she should feel insulted or not.\n\n\"Don't get me wrong, I'm sure it's super,\" June said quickly. \"But like with a guy it's pretty straight-forward. We fool around, maybe I go down on him, maybe he goes down on me but sex is pretty clearly the tab-A into slot-B act. With chicks, sex is going to vary, right? Like maybe it's that you two go down on each other or 69 or it's just fingers or it's toys. But sex can mean anything and it seems like it would take a while to get on the same page.\"\n\n\"Sounds like you've thought about it a lot,\" Sarah teased. \"But that's the fun of it. It can be anything. You and your partner can work out what you like with each other and develop your routine together and eventually you find what works for the both of you.\"\n\n\"And that, right there,\" June said, \"is one of the biggest reasons I stick to the menfolk. Because this here,\"June's hands waived over her body, \"is a relationship-drama free zone. I do not get attached and I do not find things out eventually. This machine hits and quits.\"\n\n\"That would make guys the safer bet, I guess,\" Sarah, drawing back on her own experiences, had to concede that no-strings attached sex would be easier to find, especially for a gorgeous girl like June, among guys. \n\nThe day passed with the two women talking extensively about whatever happened to cross their minds. Sarah grew very impressed with June's wit, self-confidence and openness. The conversation occasionally veered into the realm of flirtatiousness but the two kept it light and fun. Sarah had to admit that she was losing track of her troubles. In just two quick days, Sarah had gone from feeling completely alone to feeling like, at the very least, she had a regular bar and a good friend. \n\nAgain Sarah stayed at O'Flaherty's the entire day and, when she made her exit, promised to return the next day. Sarah knew, as she took one last look at the girl behind the bar, that she'd be there on both of her last days of leave. \n\n3. \n\n\"C'mon, seriously, Daddy?\" June asked.\n\nAs expected, Sarah had returned the next day to the pub and had immediately gotten back into her normal rhythm with June. Sarah drank and the two of them traded stories and jokes. For the first time, Jim was not occupying the seat at the other end of the bar and the two women were the establishment's sole occupants. Because of this, their conversation had turned far more personal. They had been trading stories of particularly memorable sexual encounters when Sarah had started one of her own, one designed to highlight how incredible sex could be with another woman. Sarah had not yet given up on the idea of bedding June and wanted to tell a story to put June on the spot.\n\n\"Yeah, a few times.\" Sarah shrugged. \"Get a girl hot enough, fuck her well enough, sometimes she calls you daddy.\"\n\n\"Huh, weird,\" June said as she threw her bar towel over her shoulder.\n\n\"You've never heard of a girl saying that during sex?\" Sarah asked. She knew it wasn't the most common thing in the world but she knew it shouldn't have shocked anyone as seemingly open as June.\n\n\"No, I've heard of it before,\" June said, \"I've just never heard of a woman calling another woman it. Doesn't that, I don't know, contravene the lesbian/feminist bible? Attach masculine terminology to a feminist act?\"\n\n\"Reclaimed as gender-neutral I suppose,\" Sarah said, sipping her beer with a sly smile. If she didn't know better, she'd have sworn she saw a twinkle in June's bright green eyes as the topic was discussed,\n\n\"It's a powerful thing,\" Sarah continued. \"An acknowledgement of submission or, I don't know, just how completely a strong woman can rock your world,\"\n\n\"And you like that, do you?\" June asked turning towards the beer fridge,. \"I don't seek it out or anything,\" Sarah said, finishing her beer. \"But, hey, I can fuck as well as any guy. I certainly don't mind the admission of just how solidly I rang a girl's bell,\"\n\n\"Ah, so that's it,\" June said, putting the beer down in front of Sarah. \n\nSarah looked at her quizzically as June leaned in towards her. June was close enough for Sarah to smell again, that same heady rush of vanilla and what Sarah had placed as jasmine. June was close enough for Sarah to reach out, grab and kiss. Sarah had to fight the urge with everything she had.\n\n\"You picture picking up some straight girl,\" June's eyes narrowed as she continued, her voice softening to a breathy purr, \"seducing her to your wicked ways with your lesbian wiles, then, in the throes of her unbelievable ecstasy she calls you daddy.\"\n\nSarah had to hold back a lump in her throat and grip her beer tightly. The slim, stacked barmaid's seductive tone and look was easily the sexiest thing that Sarah had ever seen. When June had practically moaned the word 'daddy,' Sarah had worried she'd completely lose control. \n\n\"Acknowledging that you've fucked her better than any man ever has or even could,\" June finished, her face almost looking as if it were in the throes of the very ecstasy she was describing. \n\n\"Something like that,\" Sarah managed to get out. June's large, soft lips were just inches from her face now. Sarah wanted to bite them, to suck one into her mouth as she wrestled the girl to the floor and gave June some first hand knowledge of the subject. As she was lost in the fantasy, however, June leaned back from where she'd been leaning over the bar, her look and tone reverting to usual.\n\n\"Nah, I just don't buy it.\" June shook her head definitively. \"I mean, it strikes me as something a little hot to say if you're trying to get a guy to knock you up maybe, but not a chick.\"\n\nSarah had to catch her breath. She caught a wink from June and had to collect herself. Sarah had told the story intending to get June to contemplate how great sex with Sarah could be and, as she typically did, June had completely turned the tables on her. \n\nJune caught the look on Sarah's face and laughed. \"Conover, I gotta say,\" June chuckled, \"it's been a blast having you around,\"\n\n\"Yeah, a blast.\" Sarah nodded, still feeling a slickness between her legs and heat in her chest,",
        "\"How long you in town for?\" June asked, turning away from Sarah. June's question brought Sarah slightly out of her running mind and back into the present. To her surprise, Sarah found that the answer made her quite distressed. When the week had started, Sarah had wanted it to end as quickly as possible. She didn't want to be in Audrey's city or living in a cheap motel. She wasn't exactly looking forward to another deployment, but at the very least she would be back among her fellow soldiers and in the closest thing she had that passed for a home. \n\nNow, looking at the intoxicating sight of June's backside as she bent over to clean another part of the bar, Sarah realized she didn't want to leave. She wanted to be back stateside and she wanted to hang out with June all day.\n\n\"Just today and tomorrow,\" Sarah said glumly,\n\n\"But tomorrow's Veterans Day,\" June noted. \"They're shipping you out on the 12th?\"\n\n\"World keeps spinning on.\" Sarah shrugged, \n\n\"That blows,\" June said, looking down at the bar. \"But you'll be here tomorrow?\" \n\n\"Wouldn't miss it.\" Sarah nodded, thinking that for a second she saw June smile at the news.\n\n4.\n\nSarah sat on what had become her usual stool, sipping her beer slowly. She'd looked forward to her last day in O'Flaherty's, looked forward to one last day of bantering with June, but it hadn't gone quite according to Sarah's hopes. True, Sarah's hopes had involved walking into the bar to find it empty except for June, wearing nothing but high heels and a smile, and so her hopes weren't terribly realistic to begin with, but it hadn't even been the usual pleasantness.\n\nO'Flaherty's was, for the first time in Sarah's brief patronage, full of clients. Not many, a few small groups that probably still only totaled a dozen or so, but it meant that rather than the usual routine of June spending her day talking to her, Sarah watched as June skipped around the bar, delivering drinks. Sarah had gotten smiles when she ordered her drinks, but barely a word in as June darted around her bar. \n\nWorse still, although Sarah knew she was being foolish, Sarah saw that June's flirtations with her had simply been part of what June did with everyone. Just about every male patron that was in the place said something mildly off-colour to June who, with the same sass and charm, returned it in kind. Sarah, in the moments she let herself dream, thought that June's flirtatiousness had perhaps been a sign of her intrigue and attraction. Now, Sarah saw, June was just a flirt. Sarah didn't think any less of June for it, but it was a kick in the teeth. \n\nSo it was that Sarah sat on her stool, watching the minutes tick down on the clock over the bar. All of her bad feelings from earlier in the week came back with a vengeance, racing through her head and practically punching her in the chest. The grind of another deployment, the idea of Audrey with someone else, the realization that she had nothing to come back to, Sarah felt overwhelmed by the negative feelings. She would have drowned herself in booze if it weren't for the growing knot in her stomach that made slow sips of beer all she could manage. \n\n\"Penny for your thoughts?\"\n\nSarah looked up to see June slumped in front of her. She'd been so lost in her self-pity that she found herself not even realizing that June was in front of her. Sarah smiled weakly even as she felt her heart skip a beat. June was wearing a tight black t-shirt, a short, tight tartan skirt and had her hair pinned above her head. Her emerald eyes were only slightly hidden behind thin, black glasses. It was the sexiest Sarah had seen June look yet and her troubles were instantly forgotten.\n\n\"Quarter then,\" June said, \"but that's as high as I go,\"\n\n\"I'm holding out for a dollar,\" Sarah replied,\n\n\"Please,\" June rolled her eyes as she began wiping the bar down, \"like I can't tell what your pervy thoughts are anyway.\"\n\nSarah just raised her eyebrows a little as she took a sip of her beer. Earlier in the week Sarah would have blushed or felt embarrassed, but now she just acknowledged the truth. June seemed to be of the belief that everyone wanted to fuck her and Sarah wasn't going to feel self-conscious about being part of that consensus.\n\n\"Busy day,\" Sarah said, changing the subject,\n\n\"I know,\" June nodded, \"but it was just some guys from the post office. What better way to pay tribute to the service of people like you then by spending their federal holiday drinking away the afternoon?\"\n\nIt was then that Sarah noticed the past tense June had used. A quick look around the once-busy bar told Sarah that the place was empty again. Even Jim seemed to have left or taken a trip to the bathroom. It explained, Sarah thought pessimistically, June's renewed interest.\n\n\"It works for me,\" Sarah said. She smiled though. June may have said the veteran's drinking policy was something that her uncle had passed down and that she couldn't back out of, but Sarah could see that June genuinely believed in the spirit of the day.  \n\nSarah herself was a little more ambiguous. She didn't much go in for the way people would try to put the entire military up for sainthood. She'd been in the Army long enough to see the good and the bad of both the institution and the people. To her, it was a job. True, it was a difficult job that had cost her a lot, but she still squirmed at the idea of being called a hero. \n\n\"Please, you've had maybe two beers,\" June said, recalling correctly. \"Something's troubling you,\"\n\nSarah just shrugged, taking another sip,\n\n\"And I think I've reached my limit of letting you drink in here without getting to the bottom of it,\" June said. There was firmness in her voice that Sarah hadn't really heard before. Still, Sarah was not much for spilling her troubles, even now. \"You've been drinking here all week.\"\n\n\"I just like the scenery,\" Sarah said, trying to eye June hungrily. She hoped a diversion into a naked come-on would change the subject.\n\n\"Oh please,\" June said, not dissuaded for a moment.\"You didn't come in here looking for a fuck. There are gay bars for that. You came in here on a Tuesday morning looking to get hammered. And that's fine enough for an old retired goat like Jim, but you're young, attractive and a day away from being shipped out. So there's a reason behind it,\"\n\n\"Maybe,\" Sarah said, \"but I don't see how crying about it is going to help,\"\n\n\"Ugh, you're such a guy.\" June rolled her eyes. \"Talking things over with girlfriends can help, you know?\"\n\n\"Girlfriend?\" Sarah raised her eyes with a joking smile,\n\n\"Shut up, you know what I mean,\" June said. \"You never know what problems I can help with. And I refuse to let you leave here feeling like you do.\"\n\n\"Well, let's see,\" Sarah said, to her surprise. She began feeling all of the emotions she'd been suppressing all week bubble up to the surface. She felt as though she needed to get them out before she began to actually cry, when she started talking, Sarah felt the words just spill out of her in a rush.\n\n\"I've had to live the last five years of my life terrified that someone would find out I'm gay or else I'd be discharged and not able to do the one thing I've ever been good at. Then, that bullshit ends and I get to come home and spend two carefree weeks in the arms of my girlfriend who I can finally be open with and it turns out she dumps me and was probably cheating on me. I ended up spending most of my leave moving my stuff out of her place. \n\n\"I'm about to go overseas for twelve months more. Which means another year of hard work and getting hassled by any douchebag with a hard-on. When that ends, I now have nothing much in the way of money, a job or a home to come back to.\n\nSarah paused to take a sip of her beer.\n\n\"And to top it all off, I haven't had sex in a year. An actual, solid year,\" Sarah said as a capper. \n\nHer words hung in the air for a brief second before June broke the silence.\n\n\"Shit,\" June said in sympathy, \"that sucks,\"\n\n\"Yeah, tell me about it.\" Sarah nodded\n\nThe words held in the air for a second. Sarah saw June look to the picture above the bar. The one of her and her uncle and then saw a brief smile flash on June's face.\n\n\"That's not right.\" June said defiantly. \"Not for you and especially not today,\"\n\nSarah shrugged. She knew a lot of other vets had it worse than she did, even on today and she was already regretting her bout of self-pity.\n\n\"But there's nothing there we can't fix.\"\n\n\"Oh?\" Sarah said with disbelief. \"How are you going to fix all of that?\"\n\n\"Because I'm Superwoman, bitch,\" June said with a roll of her eyes. \"We can't do anything about the \"Don't Ask, Don't Tell\" bullshit but, and while that was an embarrassment that must have sucked in a way I don't know, at least that's over, right?\"\n\n\"I guess.\" Sarah nodded\n\n\"And there's not much to do about your bitch of an ex, but we all have shitty exes, right? And we get over them?\"\n\n\"True,\" Sarah had to admit this. Just being around June, someone else Sarah had wanted to fuck, had eased a lot of the heartbreak from Audrey. \n\n\"Now I can't give you money because that would mean breaking my lucrative trust fund,\" June said sarcastically. \"And I can't really give you a place to live because it's a one bedroom apartment upstairs, but you're welcome to couch surf there when you get back until you find a job.\"\n\nSarah smiled at the offer. Not the logistics of it, Sarah didn't really see how it would work, but she appreciated the sentiment of it at least.\n\n\"And yeah, the economy sucks and stuff, but I know a few people around who might need a good hand and you're smart and capable so we'll get you on your feet,\" June continued. Now she really did sound confident.\n\n\"Fair enough.\" Sarah nodded. As far as pep talks went, it wasn't a bad one. Sarah did like the idea of coming back and hanging out with June. \n\n\"Which leads us back to your deployment and the sex thing,\" June said. \"And I can solve that.\"\n\nSarah felt her heart skip another beat. She didn't know exactly what June was offering here or if it were more flirting and Sarah had been drawn in before, so she did her best to play it cool.\n\n\"Oh yeah? You know any gay girls on call?\" Sarah said, doing her best to look nonchalant.\n\n\"No,\" June said, leaning in towards her, \"but we are going to fuck. Twice.\"\n\nSarah looked into those green eyes and tried to catch the lump in her throat. For a second Sarah thought she'd imagined it but the look on June's face told her otherwise. June had said it with conviction and seemed entirely serious. Still, it was a confusing offer.\n\n\"Twice?\" Sarah asked, unsure of the meaning, not that it sounded bad to her.\n\n\"Yes, once tonight and then once again when you get back.\" June said. Her voice was determined and only slightly, Sarah thought, quivering with nerves.\n\n\"But you're straight,\" Sarah said, still not believing the offer being made.\n\n\"Yeah, well, I am, let's make no mistake about that,\" June said firmly. \"That's why only twice. Once tonight and once when you get back. To give you a proper send-off and give you something worthwhile to come home to.\"\n\nSarah chuckled. It was a sweet offer and, looking at the way June was breathing heavily, Sarah again felt a swell of sexual desire well up in her. This is what she'd wanted so bad since she'd first laid eyes on June and now it was being offered up to her. Still, Sarah felt the need to continue to question the offer of sex with a gorgeous, voluptuous woman like it was a used car. \n\n\"So, a pity fuck?\" Sarah said, trying to not sound overly keen on the idea. She knew she could go into a gay bar and find a hot young thing and fuck her into whatever state she wanted. She didn't like the idea of being a charity case.\n\nJune shook her head. \"I'm thinking of it as a patriotic duty fuck,\" she said, keeping her eyes locked on. \"It's not right that you go over and sacrifice so much and have so little to show for it. I can't fix all your problems, but I'm more than willing to indulge my moderate curiosity to solve this one.\"\n\nSarah laughed, and tried to look away, but found herself trapped by June's eyes. \"So what, we go upstairs and have a quick, awkward roll in the hay?\" Sarah asked. \n\nJune caught her eyes with a look of smoldering, fierce intensity as she leaned towards her. \"I don't fuck half-way,\" she said, her voice again dropping to its low, sultry whisper. \"If I'm only going to have lesbian sex twice in my life, it's going to be back-scratching, screaming, make-it-so-you-can't-feel-your-legs-for-a-week lesbian sex.\"\n\nSarah let the words hang there for a second. There were no longer concerns on her part about the offer. She was only mildly concerned about whether or not she'd be able to stand without leaving a wet mark on the barstool.\n\n\"Look at me,\" June said, taking a step backwards and letting Sarah's eyes again trail over the mind-blowing curves that June had on terrific display. \"Now unless I'm wrong, you've been looking at me all week like you wanted to tear my clothes off and fuck me until I screamed,\" \n\n\"Maybe,\" Sarah shrugged, hoping to appear non-committal.\n\n\"Right,\" June said with a smirk, \"so now that I'm saying you can, are you going to? Or are you actually going to sit there and spend some more time worrying whether or not we'd be doing it for the right reasons?\"\n\nSarah had to take one last look at June. The thought of even two nights with such a goddess overwhelmed her. But Sarah knew it was something she was going to do, even if it did make a future friendship awkward. Sarah wanted to kiss and suck at June's amazing chest, wanted June's strong thighs to wrap around her ears as Sarah pleasured her. She wanted to fill both of her hands with June's ass as she bounced the redheaded girl to an orgasm on her strap-on. As those thoughts ran through her head Sarah took June's advice and quickly stopped caring about her reasons.\n\n\"I still need to hit the motel,\" Sarah said. \"Pack up for tomorrow.\"\n\n\"And I,\" June leaned in again, \"will close up the bar and be waiting for you.\"\n\nSarah nodded, took one last breath of June's scent and made her way to the exit.\n\n5. \n\nSarah's trip to and from her motel had been made in what seemed to Sarah to be an agonizingly long time. Still, it needed to be done. She had clothes to pack and bills to settle and other matters to attend to. In the back of the cab, Sarah bit her lip as she looked at the small backpack she had with her. That contained one of the other matters. Sarah was not going to let this night pass without fucking June in every way that Sarah wanted to fuck her. She was going to take her time, give June everything she could want in a night with another woman. \n\nThe cab ride ended and Sarah found herself outside of O'Flaherty's yet again, her pack over her back and the smaller bag slung over her shoulder. For a second, Sarah had to stand outside the place and collect herself. \n\nShe could feel the entire year's worth of celibacy burning inside her and felt paralyzed by it a second, as if she needed to remember how it went. That only lasted a second, though, Sarah did not lack in sexual confidence. Along with repairing engines, fucking women was what Sarah Conover did as well as anyone.\n\nShe pulled open the door and saw what nearly made her mouth drop. June was sitting on top of the bar, her back arched and her long, smooth legs crossed and resting on one of the bar stools. High heels had replaced her flats and she'd clearly re-done her make-up. On her face was a look that couldn't have been any clearer if there'd been a caption. It was the come hither look to end them all.\n\n\"How long have you been sitting like that?\" Sarah asked, questioning the nature of the too-perfect pose.\n\n\"Like twenty, twenty-five minutes,\" June admitted, still looking as seductive as ever.\n\nSarah rushed towards her. Any thoughts of appearing too eager were gone. Sarah wanted to fuck June more than she'd ever wanted anything in her life and June was going to know that soon enough anyway. Sarah found herself standing in front of June gazing up at her. \n\n\"You are so fucking sexy,\" Sarah said as she uncrossed June's legs, wrapping her arms around June's waist.\n\n\"Yeah,\" June said, breathless at being touched intimately by another woman for the first time. \"Too bad for you I'm straight,\"\n\nSarah leaned up slightly and pulled June to her; it was a soft kiss, sweet. Sarah didn't want to dive into the sex too quickly, didn't want to go too hard at first. Besides, June's lips were ones she wanted to savour. The kiss was slow and soft, Sarah's pale lips finding June's soft, supple, ruby mouth as inviting as any pair she'd ever kissed.\n\nJune leaned into her. She'd meant what she'd said. She was determined to give this encounter her all. She hadn't expected Sarah to be as soft and sweet with their first touch. After the way Sarah had looked at her all week, she half-expected to already be bent over and right in the middle of it. Sarah's gentleness was proving more powerful than she'd expected. \n\nFor all her exterior confidence, June was in uncharted territory. She'd expected Sarah, with her vaguely masculine air and well-built physique to be rough, more like a guy. She'd thought it would make her first kiss with a woman more familiar and less scary and, while there were aspects of familiarity, Sarah's kiss was unlike any she'd known--passionate and firm, but soft and pliant. There was no mistaking it for the kiss of a man. The only thing scary was how much she was enjoying it. \n\nSarah began to increase her intensity. She didn't want to rush into anything, but the heat within her, the wetness she could feel, was driving her to kiss harder, to open her mouth and let her tongue explore June's mouth. Her hand began running up June's smooth leg, resting on the outside of her thigh and underneath her skirt. Her intentions were to remove whatever undergarments June was wearing and begin immediately. \n\nTo her surprise, however, June broke their kiss and even pulled away slightly.\n\n\"What's wrong?\" Sarah asked, worrying greatly that June was experiencing second thoughts. \n\nThe pained look on June's face told another story. \"Well, I don't know how it works for you lesbians and all, but I've been sitting on a bar for half an hour and my ass is getting numb.\"\n\n\"Oh,\" Sarah laughed\n\n\"I was actually thinking we could, you know, go upstairs and have the sex in my apartment,\" June said, hopping down from the bar. \n\n\"Lead the way,\" Sarah said. She had to restrain herself slightly. She was so caught up in her desire that even June's reasonable request struck her as an agonizing delay. Still, she wanted June to be comfortable. It was a quick trip through the back of the bar to a narrow staircase and then up a flight of stairs. Sarah could feel her heart beating like a jackhammer with every step. Walking up the stairs, with June's gorgeous ass right in front of her, built things to an unbearable boiling point and, as soon as June had opened the door, Sarah was on her again, grabbing her and pulling June in for another kiss.\n\nSarah's kisses were firm, deep and probing. Comfortably falling into her role of taking charge during sex, her hands were firmly planted on June's backside, pulling her towards her. The curves that Sarah had admired the last week were as delightful as hoped. There was flesh to it, firm rounded globes that filled Sarah's hands comfortably without sag or flab, just firm, toned flesh that filled out whatever June wore admirably.\n\nGetting to finally experience June's body, finding out that it felt as good as it had looked, enflamed her, causing her to kiss her lover deeply, with more purpose, and the two of them crashed against one of the walls of the apartment.\n\nJune was quickly allaying any fears Sarah had that their fuck would be passive. June's small hands were on Sarah's collar, pulling her ravisher in towards her. Despite Sarah's more dominant role in the kiss, June was giving as good as she was getting, her soft, full lips pressing against Sarah's with equal hunger, her tongue just as insistent as it explored another woman's mouth for the first time. If Sarah's passionate kiss was one of pent-up hunger and a desire to release as much of her sexual energies as she could, June's seemed to be one of pure, ecstatic exploration. ",
        "Every time Sarah tilted her head or moved her hands on June's ass June seemed at first to be hesitant to alter her experience whatsoever, so lost in the newness of it and seemingly wanting to leave no stone unturned, but whenever a new position was found, when Sarah's lips kissed along the sides of her mouth up to her ear or her hands rested on the back of her firm thighs, June found that she was just as enraptured by the feel of another woman in such a novel fashion and soon became just as attached to the readjustment. \n\nIt was June who began the process of disrobing her lover, her small hands fumbling with the buttons of Sarah's dress shirt until it finally fell open. Sarah quickly removed her hands from June, drawing a light whimper of protest for doing so, to let the shirt fall from her arms before throwing it roughly away and revealing the drab olive green t-shirt beneath. When her hands returned to June's body, now drawing a contented moan as June felt the strong hands squeezing at her butt again, Sarah found that June had opened her legs slightly to her. \n\nSarah moved her leg between June's thighs, letting June wrap her legs around her own. June began grinding herself against the firm, muscular leg, feeling the heat between her legs build as she engaged in a make-out move as old as time. She moaned into Sarah's mouth as she felt the friction build into a dizzying heat. \n\nAnother piece of clothing was shed. This time it was Sarah who stripped herself of her t-shirt, revealing her toned body, her small, perky breasts encased in a sports bra. June, still grinding, had to admire the soldier's physique. \n\nJune had said she loved strength in her men and what June saw and felt in Sarah was strength. Powerful looking biceps, defined abdominals, and hands that June realized had a strength that could only come from wrestling with powerful machinery. That Sarah's body was still undeniably feminine did not detract from that strength and its effect on June in the slightest. The firmness of the kiss, the feeling of the grip on her ass, the powerful leg she was grinding against were all aspects of what June enjoyed best about sex. She was with a strong, powerful, protective lover who was intent on using that strength to ravage June's subtle, sensitive body. That it was a woman, to June's surprise, actually heightened the eroticism of it. \n\nAs if her mind was being read, June felt herself being lifted off the ground and pressed against the wall by those powerful hands and arms, pressing her firmly in place as Sarah's soft lips kissed along her exposed neck and to her shoulder blade. Sarah kept June in place, still grinding against her and reached a hand up to the thin black material of June's shirt, pulling it roughly to the side to expose even more of June's shoulder and black bra strap. \n\nAs soon as the new skin was exposed, Sarah kissed it. June's whole body smelled of that same mix of vanilla and jasmine she'd smelled earlier and Sarah was delighted by it. There really was nothing, it seemed, of June that wasn't purely, exquisitely feminine.\n\nThat thought brought another burning desire to Sarah's mind. June's breasts. Sarah had been so enraptured by the feel of June's legs and ass that, mind-bogglingly, she'd ignored the breasts that had so captivated her that week. As soon as the realization hit her, Sarah immediately flashed back to her first thoughts on them.\n\nI want to bite, suck and squeeze those tits.\n\nSarah reached up and began tugging at June's shirt, trying to untuck it from the tight waist of her skirt. This proved difficult, however, as the material seemed stuck unnaturally by some cruel god intent on denying Sarah her prize. Sarah was a warrior woman, however, and would have gladly slain more than a few such gods for June's favours. With equal parts resourcefulness and strength, Sarah moved her hands from June's waistband back up to the collar she'd stretched. This time, taking it in both hands, Sarah tore the shirt, ripping it at the seams with a strength that even surprised herself until the tattered garment fell uselessly around June's waist.\n\n\"That, ohhh,\" June moaned as the cold air of the apartment rushed to the heated skin of her torso, \"that was my favourite shirt\"\n\nSarah didn't respond. She simply looked in awe at a second at the deep valley of cleavage she was greeted with and the huge, soft orbs of porcelain skin it lay between. Sarah caught sight of a stray drop of sweat running down June's chest, between that very valley, and leaned forward to catch it on her tongue, licking upwards and reversing it's path up to her neck. Sarah marveled at how even June's sweat seemed sweet. \n\n\"Oh fuck,\" June moaned. The feeling of Sarah's tongue, strong and soft as the rest of her, combined with the increasing speed of her own ministrations against Sarah's leg had her near what felt like the edge of a massive orgasm. June could barely believe it. Usually it took every trick in her lover's bag to get her to cum. Sarah was almost going to get her there with making out and dry-humping. \n\nSarah was on a mission of her own. One bra strap was tugged down, then the other. Then the lacy black garment was pulled down over June's arms, the size of the cups becoming even more apparent as Sarah pulled it down, seemingly waiting ages for June's naked chest to be exposed to her. When it finally was, Sarah instantly realized it had been worth the wait.\n\nSarah instantly saw there was nothing fake about them whatsoever. Far too large for anyone's hands, perfectly rounded, teardrop-shaped breasts sat high and firm on June's chest. Pale as the rest of her, June's areola were the lightest pink and capped by smallish nipples a beautiful slightly darker red. Stiff and hard as could be, they provided perfect summits to the heavy globes. Sarah had never seen a pair like them. She had to fight the urge to fall to her knees and worship them.\n\n\"Damn,\" Sarah exclaimed. She had to say something. To not have said something, Sarah thought, would have been like stepping into the Sistine Chapel, staring up at the ceiling and shrugging her shoulders. \n\nJune chuckled a little at Sarah's expression. \"Yeah,\" June smiled that same little confident smile she'd flashed all week, \"they're pretty awesome.\"\n\nSarah looked up and instantly became determined to wipe that little prideful smirk off of her lover's face. She gripped the two breasts in her hands as best as she could. Their size provided too much even for Sarah's large hands and some of the warm soft, titflesh spilled over the sides. Sarah squeezed what she could, however, and relished the feel of her handfuls. They were, as Sarah had hoped, pillow soft, but delightfully surprised Sarah by still being firm to the touch, rebounding perfectly into their place on June's chest when released. Not that she'd wanted to, Sarah had only taken her hand off the beautiful breasts because June's moan at her touch had been her loudest to date and Sarah had briefly worried that she'd been too rough.\n\n\"Too much?\" Sarah asked, apologetically. \n\nJune's face, however, told the answer instantly. As much as June's admirers may have liked the way that her breasts filled out a sweater or spilled out of a bikini and as much as her boyfriends may have loved the feel of them in their hands or mouths, the person who really appreciated her breasts was June herself. They were intensely sensitive to the touch, centred exquisitely at her nipples much in the way her sex spiked at her clitoris. Similar to her preferences elsewhere, June greatly enjoyed it when they were treated softly and sensuously but also, in the heat of passion, when they were gripped roughly, sucked hard. Most of her toys were the two-headed kind that left her a hand free to touch her own breasts. That was how she came her hardest.\n\nSarah took that cue. She let her hands fill up with as much of the heavy breasts as she could fit, feeling the nipples press against the top of her palms and cupped them before squeezing. June moaned again. Her grinding increased speed again. Sarah removed her left hand and replaced it with her mouth. Tenderly, softly, she began kissing the pliant flesh in a circle, from it's top to the underside, letting her tongue trail around in between her kisses. Creating smaller and smaller circles around the nipple, Sarah teased the most sensitive part of June's chest by drawing closer and closer, leaving hot spots where the kisses had been to be replaced with the cool air that would strike when Sarah's mouth moved onto another spot. \n\nJune moaned at the heat and gasp at the cold, all the while grinding harder and harder. She'd found a spot where her rolling hips meant she could put pressure against her clit on the ends of every shift of her hips and the electric jolts coming from both her clit and breasts soon had her panting uncontrollably. She could feel her release just around the corner and was desperate to get there. \n\nJune's moans turned into a near shriek as she felt the first surprising but welcome feel of teeth lightly dragging across her breast. Sarah's licks and kisses were replaced with hungry little bites before soothing licks. Then when, finally, Sarah took a nipple into her mouth, June did shriek. She also spasmed, her long leg kicking out and accidentally knocking over the small table she kept near the door. The bowl full of change and keys crashed to the ground. The noise startled Sarah who darted her head to the sight of the carnage for a second.\n\n\"Don't worry about it,\" June said breathlessly, gripping her fist in Sarah's sandy hair and pulling her lover back to her breasts. \"Just keep fucking going.\"\n\nSarah didn't need to be told twice. She began sucking hard on June's breast, squeezing the other. Sarah rolled the nipple with her tongue, grazed it with her teeth and stuffed it in her mouth as she childishly tried to fit as much of June's massive tit into her mouth as would fit. \n\nJune moaned with every move, marveling at how talented Sarah was with her mouth. The thought brought a shiver to her as she thought of Sarah's talented mouth being applied elsewhere. It was almost a terrifying thought. If Sarah could bring her this much pleasure through her breasts, June worried she may be driven entirely mad by getting head.\n\nSarah was seemed possessed. She'd suck one breast for a while as she groped the other before switching. Paying each one the reverence and respect Sarah thought the works of art demanded. She could tell June was coming close to an orgasm and increased her speed and pressure. \n\n\"Pull down your panties,\" Sarah said commandingly during one of her changes between breasts. \n\nJune nodded as best as she could. It was difficult positionally, but June managed to reach up under her skirt and pull her panties down between her knees as Sarah repositioned herself. June was briefly upset about no longer being able to grind, but her concerns were short lived. \n\nSarah, still sucking and groping, reached her free hand between June's legs. There was no teasing, no tantalizingly slow motions, Sarah simply found the wet opening to June's sex and slid two of her fingers inside. June was hot, tight and incredibly wet and the feel alone almost made Sarah coo with glee. \n\n\"Oh fuck,\" June cried, spreading her legs slightly to allow greater access as Sarah's firm fingers spread her open as they plunged inside. June tightened her grip on Sarah's head. \n\nJune was never a passive lover, however, and her rolling hips now fucked herself onto Sarah's strong fingers. She squeezed herself around the invading digits, heightening the feeling as they began thrusting in and out of her, her copious wetness allowing their rapid plunges and withdrawals. \n\nIt didn't take long. Between the grinding, the suckling at her breasts, the new experience of having sex with a woman and now the intense finger fucking, June felt her knees buckle almost immediately. When the outstretched thumb of Sarah's plunging hand brushed against her clit, June felt herself tighten and spasm and then gush around Sarah's hand.\n\n\"Oh sweet Jesus, oh Christ, oh fuck, oh fuck, fuckity-fuck, FUCK!\" June shrieked as she came. Her cunt, her clit, her breasts, it seemed to have no origin point, just a total release of bliss. She felt herself contract and quiver and tense as she came and, yet, it was like a massive wave of soothing relief washing over her in electric waves. She kept riding the fingers, her scream descending into little whimpers of gratitude.\n\nSarah for her part was blown away by the pure eroticism of the sight. The beautiful girl she was making love to looked almost angelic when in the throes of what Sarah could tell was a pretty epic orgasm. She kept fucking her despite the constrictive grip around her fingers, only releasing when she could feel June's body slow before stopping. She kept kissing at June's breasts although the bites and intensity were now gone, just soft, sweet kisses on the welcome flesh.\n\nJune slowly began to feel her senses return to her. It had been an orgasm for the ages. She couldn't remember one quite as intense. She didn't know how to express it or what she now thought about their coupling and, as it tended to when at a loss, her sarcasm won out.\n\n\"That. Was. Average\" June panted, trying her best to sound deadpan.\n\n\"Average, huh?\" Sarah said as she looked up with a crooked eyebrow. \n\n\"Sure,\" June nodded, her breath coming back but the wide grin on her face appearing almost against her will. \"A solid C performance. C-plus, maybe\"\n\nSarah straightened her back and wrapped her arms around June's waist again, kissing her neck softly. She chuckled a little at June's bravado before giving June a suggestive look. \n\n\"Now?\" \n\n\"Now,\" June said, her eyes twinkling and the smile still firmly in place, \"I'm going to show you how straight girls fuck.\"\n\nSarah felt June's hands on her stomach, pushing her towards the small couch in the living room. Sarah laughed as June did so.\n\n\"Still straight then?\" Sarah asked with some mock disbelief. As much as she wanted to believe that her powers would have converted June as easily as that, she still respected the ground rules that June had set out. \n\n\"Don't get ahead of yourself,\" June said sternly, albeit with some humour, as she pushed Sarah down onto the couch. \"This is a two-time thing.\"\n\nSarah nodded as she landed on the couch. This was her first real time getting to look at June in a state of undress from any distance. With her hair a little rustled, her lipstick smeared, and her t-shirt and bra around her waist, June looked a little messy but, it was a gorgeous, just-fucked mess. \n\nJune realized the state of her dress and began dealing with it. She reached behind her and fumbled with her bra, unconsciously thrusting her chest out in the process. Observing it with awe, Sarah felt as though she'd happened upon the world's most gorgeous stripper. \n\n\"Don't you usually get some music with your strip tease?\" Sarah kidded as she sank down into the soft seat of the couch. \n\n\"Oh shut up,\" June said with some mock annoyance. \"I can't believe you wrecked this shirt.\"\n\n\"It got in my way,\" Sarah said with a shrug, showing no remorse for the death she'd caused. \"I'd wreck a hundred shirts just like it to get to those tits.\"\n\nJune rolled her eyes. \n\n\"God, you really are as bad as any guy,\" \n\nJune disappeared from Sarah's view for a second. When she came back she'd removed her heels and was dressed only in her skirt. Sarah admired the view of the busty, nearly naked girl before noticing that June hadn't reappeared empty-handed. In her hands, being carried gingerly, were a couple of small white devices that Sarah didn't immediately recognize.\n\n\"You don't need to use any toys, you can just--\"\n\nJune rolled her eyes again. She plugged one of the devices into a small set of speakers and brought the other with her to the couch, pressing a button on it as she straddled Sarah's lap. Music filled the room. Soft and sensual R&B with a female voice singing seductively. Sarah had joked about music for her striptease, but she had to admit, this was perfect mood music. June sat up on Sarah's lap and looked at her softly before speaking.\n\n\"Now, you're going to be gone for a while,\" June said plainly but sweetly. \"And you're going to be serving your country. Keeping people like me safe.\"\n\nSarah smiled. While she usually begged off congratulatory statements like that, she didn't mind right now. Coming from a topless June, she willed herself to believe it.\n\n\"And I want you to take a good look at what you're fighting for,\" June continued, gesturing to herself. \"And what you have waiting for you when you get back,\"\n\nSarah smiled and took another pass at those curves before she looked back up and locked onto the soft green of June's eyes. If that's what she was fighting for, Sarah smiled to herself, June was worth a fight. \n\n\"And know,\" June said as she leaned in to kiss Sarah's lips softly, \"that I am very, very grateful for your sacrifice, soldier.\"\n\nThey kissed again. It was softer and more delicate than their previous kissing. June's kiss was passionate, but without a hint of roughness other than the occasionally nipping at Sarah's bottom lip with her teeth. Her tongue didn't force itself anywhere, but it made it clear that Sarah's tongue was what it wanted to feel. \n\nSarah hated to compare it, but Audrey had been entirely passive with her. June was imposing her will of slow, sensuous sex on Sarah and she found it delightful. She felt June's body wrap against hers and Sarah gave into the urge to just enjoy every inch of June's soft form.\n\nHer hands roamed the length of June's body, starting with a gentle caress at the nape of her neck as they kissed before running down the smooth skin of her shoulders, over the sides of her breasts before the narrowing of her waist and then resting a the point where her hourglass hips flared out.. Despite June's relatively normal height, Sarah felt as though her hand's trip along the winding curves had taken a mile.\n\nJune was just happy that they had gotten back to some form of contact. Truth was, she was feeling all manner of confusion at what was happening between them. She had gone into this sure that she was straight, sure that this would be the two-time thing that she'd said. \n\nNow, kissing Sarah on her couch, June was beginning to doubt both of those things. She was no prude and had engaged in similar acts with a handful of boyfriends in the very same spot and manner and, with the exception of the satisfaction an erect cock digging into her thigh and confirming her efforts, June couldn't say that her heterosexuality was preventing her from enjoying this just as much as any other romantic encounter she'd ever had. \n\nAs she felt Sarah's firm hand running along her waist, she was tempted to admit to herself that it was more than that because of the uniqueness of it all. She thought back to the contrast between the masculine and feminine aspects of Sarah's body and began to tug at the sports bra covering Sarah's chest. When it came off, that conflict was heightened for June. Sarah's chest was small but perky and well formed. Sarah, June admitted, had nice boobs. And June liked boobs, issues of sexual orientation aside. \n\nJune leaned forward, mashing their chests together as she pressed her own larger breasts against her lover's. June found yet another aspect of lesbian sex that she found novel and exciting.\n\nStill, June was still tingling from her orgasm and she was tempted to chalk up her confusion to the afterglow of it. She'd started on the couch trying to do much of what she'd have done with a guy but soon realized that would not work and soon switched her methods. June began trying to reciprocate what Sarah had done to her against the wall. Kisses along the shoulder, kisses on the breasts and sucking of the nipples and whatever else June remembered. June was new to it but she was determined that whatever she may have lacked in skill she would not lack in determination to give Sarah the kind of send-off she deserved. ",
        "Her efforts were well appreciated. Sarah's sexual frustration and complete and total lust for June had made it so that June probably could have been a total novice at human contact and Sarah would have simply appreciated the visuals and the effort. \n\nAs it was, June's softer, delicate efforts were simply heightening the desire she'd felt burning for the better part of a year. June's hot mouth on her breasts and body may not have been expert but they were no less gratifying. \n\nJune reached a point where she knew that going further meant really unfamiliar territory. She got off of Sarah's waist and kneeled down between her thighs. Reaching up, June's hands began to nervously fumble with Sarah's belt and pants. June was eager, but she couldn't deny that the new ground didn't make her a little uneasy. She knew from her heterosexual experiences that giving head to a girl, or at least June, was a hit or miss proposition. Unlike a blowjob, where even June's laziest efforts had been well received, eating pussy was not something she felt a great deal of confidence in. \n\n\"You have to tell me if I do something wrong, okay?\" June said softly as she looked up at Sarah. \n\nSarah, who had lifted her hips to help the process of her disrobing, smiled warmly back at her. \"Wow, vulnerable-you is really, really cute,\" Sarah said teasingly although with some truth. This was the first she'd seen of June without all of her bravado and swagger intact. It was adorable.\n\n\"I'm serious,\" June protested, although that statement was undercut with a bite to Sarah's freshly exposed hip. \n\n\"Just go with what feels right, you'll do fine,\" Sarah said sweetly, stroking June's hair. \n\nJune, buoyed by Sarah's words, did just that. Another quick motion and Sarah was naked in front of her. \n\nJune again had to marvel at Sarah's body. Like the rest of her, Sarah's legs were tanned and toned. Feminine but strong. While she was admiring the body, June was somewhat relieved to see that Sarah was well groomed down there, much as she herself was. Not that June had a preference, this was her first after all, but she very much did not like hair in her mouth and that was something that knew no gender barriers. \n\nJune began by kissing Sarah's slick lips, almost as much as she'd have kissed her lover's mouth. It was an awkward move but she did get a small, soft moan from Sarah. June then licked the length of Sarah, bringing a shudder and a moan. Sarah's moans served as June's teacher. Another kiss, this time with tongue, brought a groan. June had worried about the taste but, truth was, she found the taste fine. The more she licked, the more that June actually began to associate the taste with Sarah and the pleasure she was giving. \n\nSarah just looked down in amazement. This was a scene right out of her most preposterous teenage fantasy. June's tongue was swirling inside her, licking deeply. June's tongue worked hard, tasting her depths and providing delicious pleasure along the walls of Sarah's cunt. Sarah felt her legs wrap around June's head, her pussy tighten around the tongue inside her. Sarah had braced herself for some really clumsy, teenage fumbling from June but it seemed that at least some of June's hetero experience carried over. It wasn't groundbreaking for Sarah but it was good. \n\n\"Oh god, it's good,\" Sarah moaned. \"It's really fucking good.\"\n\nJune would have smiled if she could. Instead, she tried to step up the experience. Her hands found Sarah's tight, well-formed ass and grabbed, lifting it, exposing even more of her lover to her eager mouth. June began tonguing deeper, more insistently, not relenting for a second. She began thinking about the things she liked, the head she liked to receive and began to improvise. A hand reached up to caress a breast. Breaks for air were also breaks to nibble a thigh. She made eye contact and got to see the effect she was having as Sarah moaned and bucked in pleasure. \n\nThen, when she had Sarah groaning loudly, June removed her tongue from Sarah's folds and clamped her lips around the small, hard bud of Sarah's clit. Now it was subject to June's insistent licks, sucks and kisses.\n\n\"Fuck yes,\" Sarah exclaimed as she felt the jolting electricity of June's tongue, lips and teeth on her most sensitive spot. \n\nJune was so close to getting her off that Sarah could only pant the one ingredient she knew would send her over the edge. \"F-fingers,\" she panted her request. \n\nJune heard and responded. Her own two fingers found Sarah's opening and began returning what she'd received. June's confidence grew. This was not unfamiliar ground. June had fingered pussy before. True, it was her own and at a different angle, but the difference between fingering herself and Sarah was the difference between driving stick and automatic, not the difference between driving stick and flying a helicopter.\n\nJune quickened the pace of her thrusts and her oral efforts as Sarah bucked in pleasure. She was torn. She wanted Sarah to cum and have it be as intense as her own orgasm but she wanted this sex to last. She did her best to vary the pace, to give Sarah stretches of intense fucking followed by slower thrusts. Sarah was not content to take that passively, however, as her slower efforts were met by harder bucks from Sarah's hips and passioned urges to fuck her harder.\n\n\"Come on, fuck me,\" Sarah said during one of those moments. June agreed. She'd drawn it out long enough. She began licking, taking the nub of Sarah's clit between her lips and applying gentle sucking pressure as her fingers angled slightly and fucked Sarah deeply. \n\n\"Come on,\" June said in a tone and with words that even surprised her, \"cum for me baby, cum for your girl.\" \n\nSarah didn't know if it was June's fingers or her tongue or just hearing June referring to herself as her girl or the more likely mix of it all but it was her turn to do as commanded. \n\nShe came. Hard. \n\nShe bucked and rode her orgasm all the way through. She could feel herself coating June's hands with her copious release and gripped June tighter to her. She felt her toes curl and cramp as her whole body felt as though it was pulsing and squeezing and exploding. \n\nTo her surprise, she felt June's fingers replaced again by her tongue as her orgasm coursed through her and Sarah kept bucking. Riding June's tongue through the course of her orgasm. Soon, her bucks and moans were just little jolts and heavy breathing. June's licking, plunging tongue became sweet kisses.\n\n\"My girl, huh?\" Sarah said. June referring to herself as such was one thing that pierced the cloud of her orgasmic bliss. \n\nJune shrugged her shoulders and her voice was again that of the confident, smart aleck that Sarah had known in the bar. \"Hey, lesbian, straight, I know what to say to make someone cum,\" she said defiantly before tenderly holding her hand. \"Fuck me, I think you broke my fucking fingers.\"\n\nSarah did her best to shrug. She did tend to squeeze hard when she came. She didn't want to hurt June, but she didn't mind a little sting after her response to the question.\n\n\"I wondered why you pulled out,\" Sarah said, dreamily,\n\n\"Yeah, well, that,\" June said with a smile, \"and since this is only a two-time thing I wanted to get as much experience as I could. Now, not only have I had lesbian sex, I've had a girl cum in my mouth.\"\n\nJune's words did rouse Sarah slightly from her indulgence. She opened her eyes and looked down at June, who'd slumped back onto her butt. \n\n\"What do you mean 'now you've had lesbian sex'?\" Sarah asked incredulously,\n\n\"Well, you know, I had a great fucking orgasm, then you had your own hopefully decent one. Sex. We had it.\" June said, looking slightly confused. Sarah sat up, resting an elbow on her knee and stroking June's face before leaning down to give her a sweet, lingering kiss\n\n\"Oh you poor, poor, deprived straight girl,\" Sarah chuckled.\n\n6.\n\nTheir positions had reversed. Sarah was between June's thighs. Her tongue was rolling deep inside June's cunt. Eating her hungrily. Savouring the taste she'd anticipated. She was attacking June's depths, furiously tonguing as deep inside the busty girl as she could manage.\n\nJune was lost in delirious pleasure. Earlier she'd worried about just how intense Sarah would be while giving head. If anything, June had to admit, she'd soft-sold the reality. It was the best head she'd ever had, bar-none. Just when June thought that Sarah had found the right spot, Sarah readjusted and went deeper or shifted angles or moved her attention to her clit and June found she had all number of right spots. Some new ones, even. It was like June's body was a sports car and Sarah was finding new and higher gears. \n\nJune was at a loss for what to do. She squeezed her own breasts, rolled her own nipples around, put her hand in her hair, then in Sarah's hair. She didn't know what to do. She knew she was going to cum, the first time she'd ever cum twice during sex. She knew it felt like a big one too, bigger even than her first. \n\nAnd then it was gone. Sarah withdrew her tongue. June had thought she'd replace it with fingers or just catch air, but Sarah instead sat up and joined June on the couch, pushing her onto her back and kissing her way up from her breasts to her neck. \n\nSoon they were intertwined, kissing and grinding against each other. It was nice, June had to admit, but she'd been so close and it'd been so good with Sarah's tongue inside her that June felt compelled to protest.\n\n\"Wha-what happened,\" June pouted, even as she enjoyed the feeling of her breasts filling Sarah's hands again.\n\n\"Well, I remembered you were straight,\" Sarah said as she kissed June's neck, \"and a straight girl wouldn't want another girl between her thighs, eating her to a screaming, shaking orgasm.\"\n\nJune struggled with the logic for a second. On the one hand it was true. On the other, well, nothing she'd done with Sarah was something a straight girl would have done. Still, to pull back from the height of it just seemed mean. \n\n\"C'mon, please, baby,\" June moaned. \"Eat me? Make me cum?\"\n\nSarah instead stopped her kissing and actually sat up, untangling herself from June completely.\n\n\"Mmmmm, no,\" Sarah said wickedly. \"I think that particular pleasure is what you're going to be looking forward to a year from now,\"\n\n\"You know, I can still tell you to fuck off when you get back,\" June pouted again angrily,\n\n\"Yeah, you could,\" Sarah said as she got off the couch. \"But you won't,\"\n\nJune turned on her side and watched as Sarah walked back towards the door, retrieving the small pack she'd brought with her.\n\n\"And just what makes you so sure about that?\" June asked. \"I'm a fickle thing, my attentions may easily divert elsewhere in your absence.\"\n\nSarah smiled as she reached into the pack\n\n\"Because I've got something else in mind for the memory I'm taking with me back overseas,\" Sarah said as she removed her trusty leather harness from the pack, \"And trust me, I think it'll be right up your alley.\"\n\nJune looked eagerly. She had a pretty good sense of what this was. In fact, when she'd proposed the whole arrangement, she'd mistakenly assumed that with the muscular, slightly masculine Sarah, that strap-on sex would be the number one thing on the menu. It was the assumed similarity of the act that had made June so confident in proposing it. \n\nNow, however, June realized that she might be in over her head. Sarah had fingered her and eaten her out and both had been intense beyond her imagination. She briefly wondered what being fucked by Sarah would be like and realized pretty quickly that her body shivered at the thought.\n\n\"Holy fuck!\" June exclaimed when she saw the actual cock emerge from the pack. Sarah knew it was ridiculous, knew that she'd bought the cock and had no claim to it really, but she felt a little flush of pride at the look at June's face as she examined Sarah's cock. It was long and thick, realistically shaped and hung heavily when Sarah firmly attached it to the harness. A quick tightening of the straps and Sarah found the right spot, right where the small leather nub on the base of her cock would press against her clit. \n\n\"Damn, if I knew something like that could be attached to someone who wasn't a total asshole I wouldn't have had to date Tony Ehlo,\" June said, staring in amazement at the sight of the well-built woman with the massive cock dangling between her thighs.\n\n\"Tony Ehlo, huh?\" Sarah said with mock jealousy. \"Was he bigger than me?\"\n\nJune nervously bit her thumb, as she shook her head no. Tony had been her biggest and Sarah's was significantly bigger, both in length and girth. Sarah's even had what looked like realistic balls attached. Sarah returned to the couch and again found herself kissing June's neck and cupping and caressing her breasts. \n\n\"And you know what I thought the second I saw you?\" Sarah asked as she took delight in the wide eyes and nervous look on June's beautiful face.\n\n\"What?\" June said quietly as she reached out to grasp the thick cock in her hand. She knew it was silly, that Sarah wouldn't feel it, but she still wanted to put it in her hands, put it in some kind of context. \n\nIt felt real. The same sort of heavy, spongy hardness that bigger cocks had. Ridiculously, she began stroking it slowly.\n\n\"I thought, now there's a girl who needs a really big cock to satisfy her,\" Sarah whispered. She couldn't feel June's hands on the cock but she loved the visual. The way June looked equal parts scared and eager. Sarah knew it was one of her more idiosyncratic kinks, but growing up in the garage her first exposure to sex-talk had been guys talking about how a woman looked when she was sucking or stroking cock, what it was like to have a girl really go crazy on a cock. It was why Sarah had wanted to fuck girls with a strap-on in the first place. When Sarah strapped it on, it was her cock, no quotation marks or caveats, and she took delight in the pleasure she could bring with it. \n\nAudrey had been small and slight and Sarah had used a much smaller one with her. June, Sarah correctly guessed, was the kind of girl who a cock this size was built for. Again, Sarah knew some might think it odd, but having that kind of a tool strapped on her waist gave her a pretty heady feeling of power.\n\n\"Lube. I have some lube in the bedroom,\" June said, still stroking at the shaft.\n\n\"If it turns out we need it, go get it,\" Sarah said firmly. \"But to start, why don't you suck it first.\"\n\nJune looked up at her strangely. Even though Sarah's words caused the heat she was feeling to boil, her pussy get significantly wetter, she didn't understand. \"But you won't feel it,\" June said softly as, even as she got between Sarah's legs. \n\nJune found herself loving the way Sarah's voice would turn as she gave orders. She liked a guy who took control in the bedroom and, it was turning out, she loved a woman who did the same.\n\n\"You'd be surprised,\" Sarah smirked. \"And the visual is what's going to give me the energy to give you the fucking of your life,\"\n\n\"I'm just saying,\" June said, some confidence returning to her voice. \"You are to eating pussy what I am to sucking cock and it's a shame you don't get the full experience.\"\n\nIt wasn't easy. The size of the thing made June stretch just to get the head of it into her mouth. Then there was the lack of response. As much as the cock look and felt real, it didn't taste real. It tasted like a dildo. \n\nJune decided to simply follow Sarah's advice. She was lubricating it. She used as much spit as she could, tried to get the entire length wet, licking the parts she couldn't suck. In doing so, she realized she was getting a soft moan from Sarah if she ground the base of the cock against her. Soon June realized what was happening and did it faster, harder. Now she was losing herself in the blowjob. The faster she ground the cock, which she was doing as she bobbed her head, the louder Sarah moaned. She did her best to suppress the instinct to gag and gave it her all. \n\nSarah had to admit it was a terrific blowjob. The visual stimulus alone was great, but June really did grasp how to work the cock to rub her clit. Sarah was more than content to lean back on the couch and let the large breasted, nubile goddess she'd somehow picked up do her thing. \n\nSarah took in the sight, those heaving breasts and those bright green eyes looking up at her, those ruby red lips stretched around her cock and, combined with the rubbing of her clit, enjoyed every second. If she'd had a beer in her free hand she could have died happily. \n\n\"Fuh-fuck,\" June said as she pulled her mouth of the cock, interrupting Sarah's fantasy. She sputtered, slightly, getting even more spit on the cock, her hand rubbing it down to the base.\n\nSarah smiled. As much as she'd been enjoying the sight of June on her knees, it was a diversion. She wanted to fuck her. Still, she thought something needed to be said in acknowledgement of June's game attempt to indulge her kink.\n\n\"That was the best blowjob I've ever had,\" Sarah said, stroking June's hair.\n\n\"You know, you'd think I'd get tired of hearing that,\" June said with a smile as she caught her breath. \"But nope.\"\n\n\"You know, if I were the jealous type, I'd ask you just how many guys had told you that,\" Sarah joked.\n\n\"And if I were the confident, independent, sex-positive type, I'd say it's none of your fucking business,\" June smiled with humour as she stood up. \"So it's none of your fucking business,\"\n\n\"I know,\" Sarah assured her.\n\n\"I'm a healthy woman with healthy appetites,\" June continued with a big smile, \"That's the reason we're here after all.\"\n\nSarah nodded and began to stand up where she was met by June's hand on her chest, pushing her back down.\n\n\"Uh, uh, uh,\" June said, shaking her head and straddling the couch again. \"I'm going to need to start on top to get used to that thing,\"\n\nSarah was not inclined to argue. True, she typically liked to be on top, but she found it very, very hard to argue with June when she was positioned as such. \n\nWith June's hands above her head as she tried to position the cockhead, June's lovely dangling breasts were right at her mouth's level. Taking the initiative, Sarah did her best to catch one of the lovely orbs in her mouth as they passed.\n\n\"Aww, I would have been gentle,\" Sarah said in mock protest before striking gold, sucking one of June's breasts into her mouth hungrily.\n\n\"I know,\" June moaned as she finally felt the cockhead at her entrance and the feeling of Sarah's lips. She looked down and bent her head to Sarah's ears to whisper, \"But I won't.\"\n\nJune sank down, letting the cock penetrate her deeply. She had to moan at the way it spread her open, stretching her. Just the initial entrance had June agreeing with Sarah's assessment of her. She did like big cocks. \n\n\"Holy fuck,\" June moaned as she sank deeper. She couldn't believe the sight of the giant thing disappearing inside her or the feeling of herself being spread wider and wider as it went deeper. Then again, June couldn't ever remember feeling this wet. Sarah's tongue had done so much to get her off she felt almost nothing aside from that hunger to get her rocks off. She felt like she could do anything to get there. \n\nShe rolled her hips, letting herself fuck what was inside her. The pleasure was intense but only fed into her need to go deeper. She kept sinking. Every time she relaxed her legs and sank deeper, she rolled her hips and bounced a little, getting used to the new depths. \n\nSoon she was past where anyone had ever been in her. She marveled at it. She knew it was clich\u00e9, knew it was terrible but this was the biggest cock that had ever been inside her and it felt so fucking good.\n\nSarah kept licking and sucking, squeezing June's breasts together to facilitate the quick switch from one breast to the other. Still, her eyes were firmly on June, loving the sight of what her cock was doing to the younger woman. June looked like she was halfway between screaming and passing out. She rolled her hips slightly, matching June's movements, plunging it inside June rather than letting her sink on her own.",
        "\"Oh fuck, fuck,\" June moaned as she felt the entire cock enter her. She looked down, almost in amazement, to confirm what she felt. She was resting on the soft leather of Sarah's harness. She had to breathe heavily, adjust herself; she felt the tightness within her relax a little as she stretched around the thick cock inside her. Sarah gripped June's waist tightly and began steadying herself. She was going to give June the fucking of both their lives.\n\n\"Now I'm going to fu--\"\n\n\"Uh, uh, uh\" June broke in, doing her best to keep calm and collected despite feeling the fire inside her building and building to an almost unbearable level. \"Now, I'm going to show you how I ride it.\" June began rolling her hips again. \n\nAt this viewpoint, Sarah could see how it looked when June got to work and it was another in the long line of jaw-dropping sights that she'd seen today. Those silky, cat-like hips rolling around, grinding against her harness gave Sarah even more of a jolt than June had managed when she was on her knees sucking. Sarah couldn't quite believe it. Sarah herself had mastered the art of getting herself off while fucking with a strap-on, but it was always when she was in control, when she was controlling the pace. \n\nJune seemed to have figured out a way to do it herself, just with the grinding of her hips. If this was how June fucked, Sarah wondered with amazement how any guy could have lasted more than thirty seconds with her.\n\n\"Oh fuck, yes,\" Sarah exclaimed as June picked up speed, grinding the nub against her clit faster. \n\n\"You like that baby?\" June asked, pleased in part because her efforts were paying off with Sarah's own pleasure and in part because she was fucking a massive, stiff cock with every scrap of effort she could muster. Doing what she needed to get Sarah off was also working double with her. She quickly knew that fucking Sarah was going to go gangbusters. She could feel her own orgasm building and tried to double her efforts, tried to get Sarah there as well. Her plan seemed to backfire. The wonderful fullness, the way the cock scraped against every nerve ending she knew she had in her cunt and a few that had previously gone uncharted, it all multiplied as she did her best to get Sarah off.\n\n\"Fuck, fuck, fuck,\" Sarah moaned. June's increased speed made the nub on her harness feel like a small, stiff finger frantically frigging at her clit. Sarah's first orgasms had been from a similar motion. For a second Sarah was back in her bedroom in her father's house fingering herself to a picture of a large breasted pin-up girl. And she laughed. Never in teenage-Sarah's wildest dreams had she imagined an orgasm like the one she was about to receive, one brought on by a woman riding her cock who brought any of those models to shame. The thought sent a shiver of pleasure from her clit, radiating out through her entire body, a pure blast of nostalgic bliss. These large breasts weren't a photo she was staring at, they were real, full, beautiful, smelling of jasmine and vanilla, bouncing in front of her face, boomeranging so hard up and down as June bounced on her cock Sarah worried they might smack into her own face. \n\n\"Cu-cu-cumming\" Sarah exclaimed as another wave rode through her. This time it was too much. She felt her orgasm rip from her, course through every part of her, starting in her clit and ending in her fingertips and toes.\n\n\"Oh thank fuck,\" June said. She'd been trying to hold her own back, knowing she'd collapse and lose Sarah's if she didn't, but by the time Sarah's hands dug harder into her ass and she saw Sarah scream, June's efforts to hold back her orgasm were like a tiny little beaver dam trying to hold back the Pacific Ocean. \n\nShe gave in to her own orgasm, riding for a bit for her own personal pleasure, before she felt her massive orgasm overtake her. She'd never had a reaction like it. She physically shook with pleasure as she came. She kissed Sarah passionately, frantically as they came together, the two women holding onto each other as if for dear life as their powerful orgasms reduced them to quivering, giggling messes. \n\n\"You are incredible,\" Sarah was the first to speak, tenderly kissing June's forehead as she composed herself. \n\nJune just smiled and hugged Sarah tightly. Her first multi-orgasmic experience had left her incapable expressing gratitude, accepting compliments or speech of any sort. As she lay in Sarah's strong arms, June had to admit that her doubts about her two-fuck rule were getting very real. She knew Sarah still had to leave in the morning and, even as satisfied as she was, the prospect of not getting a repeat performance the next night left her feeling a sadness she couldn't quite describe. \n\nSarah, however, was not done. She didn't know where the strength was coming from but she assumed it was hidden reserves of passion she knew she'd have no outlet for in the coming months. \n\nShe stood from the couch with June still in her arms. June was not a small woman but Sarah seemed to lift her effortlessly. June shrieked and giggled in delight. She'd never been carried before. However, just as soon as it started, Sarah stopped.\n\n\"What's wrong?\" June asked.\n\n\"I don't know where your bedroom is,\" Sarah admitted sheepishly.\n\n\"Second on the right,\" June said with a laugh, nodding her head towards a hallway.\n\n7.\n\nSarah found June's bedroom easily, her weight apparently no problem as Sarah carried her the entire way. To June's surprise and delight, as soon as Sarah laid June down on her messy, unmade bed Sarah had made it quite clear that their lovemaking was not over. \n\n\"I knew I should have set a time limit,\" June said, doing her best to hide her excitement and sound exasperated. The eager way she spread her legs for Sarah, however, made it very clear that she was as anxious to continue as Sarah seemed. \n\nSarah leaned into June and kissed her hard on the lips as she positioned the head of her cock. Sarah entered June skillfully as the two kissed, feeling June moan around her mouth as the cock again found June's willing depths. \n\nSarah could feel the little daggers of fatigue at the corner of her eyes. She knew she didn't have a ton of energy left. As much as she enjoyed the little moans and gasps of June's pleasure as she slowly thrust inside, Sarah knew she would need to end things fast. Besides, Sarah wasn't interested right now in something soft or slow. She wasn't going to let June reassume control either. Her intentions were to give June the fucking Sarah had been saving up for a year and the one she'd wanted to give June ever since she'd first laid eyes on the busty barmaid. Positioning herself expertly, Sarah put June's legs up on her shoulders and began thrusting powerfully and forcefully. \n\nNow it was June's turn to admire Sarah's body mid-fuck. Tensing, June could see those well-defined abs and strong arms using all of their power to deliver the mind-blowing fucking she was receiving. \n\nJune knew of the Greek legend of the Amazons and the image was strong in her mind as she watched Sarah thrusting in and out of her. Sarah was an Amazonian warrior and she was a willing and receptive prize. The relentless pounding of Sarah's cock, however, soon battered her silly fantasies into nothing. June had thought she'd gotten accustomed to the size of the cock when they'd fucked on the couch, but she instantly realized that was very different from having the massive thing fucked into her powerfully. It was a sensation unlike any June had felt, a heady mix of welcome pain and unbearable pleasure that made June want to ask for mercy and beg for more all at once. \n\nJune felt so full of Sarah that she thought that any additional pressure on her body would actually make her burst and come apart at the seams.\n\n\"Oh Christ, it's so good, so fucking good. Fuck me, baby,\" June pleaded. \n\nSarah, however, was somewhat less than satisfied. As much as she enjoyed watching June enraptured and the sight of her massive breasts shaking and slapping together with every thrust, it was an awkward angle and uncomfortable on her knees. Sarah knew that at another angle, she could fuck June even harder. Withdrawing, Sarah gave a hard slap to June's butt.\n\n\"Come on, hands and knees,\" Sarah commanded.\n\n\"Face down, ass up, that's the way you like to fuck, huh?\" June said, somewhat annoyed that her fucking had been interrupted, if even for the second it took her to comply with her lover's wishes. Soon June was on her hands and knees, eagerly looking behind her as Sarah again took up position behind her.\n\nSarah let her hands rest on June's butt, again squeezing. Each time Sarah touched June's glorious backside it felt better, firmer, fuller. \n\nSarah had always wondered about the phrase \"an ass for days\" but June made it make sense to her. She'd gladly spend a few days admiring the firm backside in her hands right now, squeezing it, kissing it. Even fucking it if June was up for it. But that was a pleasure for another day. Tonight Sarah was going to get it all out of her system. \n\nEvery bit of Sarah's passion went into her thrusts as she entered June and began fucking her from behind, every bit of anxiety she'd felt about living in the closet the last six years, every frustration with her life in the Army, every day she'd wanted to be with her girl but was across an ocean, every bit of resentment at her stupid ex-girlfriend. It all fuelled her as she savagely fucked June. Sarah didn't even realize all of the force and passion she was pouring into her fucking until she realized that the bed was shaking as the headboard slammed loudly against the wall with such force that it sounded like lightning crashing. Even that noise, however, was drowned out by June's screams. \n\nSarah slowed a little to make sure she hadn't gone overboard, that June wasn't in the bad kind of pain. As soon as she did though, June shouted at her in a voice that sounded an equal mix of frantic plea and insistent command, \"Don't you fucking dare slow down.\"\n\nAfter that there weren't words, just screams, loud screams trying to express the sensations inside her. Nothing June had ever done, not with herself, not with any guy, not even with Sarah earlier in the evening compared to the feeling Sarah was bringing out in her now. Sarah had been fucking her for five minutes in that position and June was screaming her pleasure as words failed her. She'd started cumming shortly after the fucking began, her third orgasm of the night, and as Sarah continued fucking, picking up speed with every thrust, June's orgasms kept coming. She didn't know where they started or ended anymore. It was just one long, continuous earth-shattering orgasm. Each time she was pushed over the edge, June knew it had to be the last one, but then Sarah would keep thrusting and she'd cum again, more ragged sparks of pleasure erupting in her brain. \n\nThe harder Sarah fucked, the more rapid and intense June's cumming was so June issued another plea, \"Harder, oh fuck, fuck me harder.\"\n\nSarah didn't know how June could take it but there was no disputing what she was looking at. She was jackhammering the entire length of the cock into June's willing body. June was shaking and screaming and begging for more and Sarah was happy to oblige. \n\nJune could feel another massive orgasm inside her, so big she felt as though it would dwarf the rest of them, so big it would have intimidated her if it weren't for Sarah's cock turning her into a lust-crazed monster. She wanted that orgasm, wanted it more than anything she could remember. She would do anything for it. \n\nAs that thought coursed through her, June flashed back to an earlier conversation she'd had with Sarah. At the time June hadn't really understood but now she did. She understood and she agreed and wanted to let Sarah know.\n\n\"Fu-fuck me, Daddy,\" June said softly before repeating herself loudly, \"Fuck me, Daddy.\"\n\nSarah chuckled a little at June's submission and found her last ounce of strength, thrusting even harder. It sent June over the edge. \n\nJune's scream turned into a shriek, almost noiseless, as her body began shaking and pulsing. The orgasm she'd chased slamming into her like a brick wall, leaving her a mess of nerve endings and jelly. June saw stars as a pleasure unlike any she'd known seemed to engulf her. It drained her completely and she collapsed on the bed as it rippled through her very core. Her cunt gushed and spasmed around the huge cock that had given it to her as her body convulsed. It was the orgasm to end all orgasms as far as June was concerned. She felt heavy as lead and lighter than air all at once. \n\nSarah also collapsed, falling onto June's back. She'd wanted to give June every bit of her energy. Release all of her tension through this fuck and, momentarily at least, she felt as though it had worked. She'd had the best sex of her life with the most gorgeous woman she'd ever seen. As far as Sarah was concerned, life wasn't all that bad. She pulled her cock from June and rolled over, landing on the bed beside her.\n\nJune, however, was doing her best to step down from the clouds and stars and find her way back to earth. It wasn't easy but she managed. She stopped shaking, even as she felt a few last pulses of her orgasm slip through her, and also rolled onto her back. She looked over at Sarah who was smiling back at her.\n\n\"Ok, ok, fuck, you win,\" June said, shocked at the fact that words were still within her grasp. \"I'm a fucking lesbian now, you happy?\"\n\nSarah knew that June was trying to sound smart and sarcastic but she just smiled. She wasn't going to force the issue. Whatever they did after this night was in June's hands. Sarah just knew she'd made a pretty persuasive argument.\n\n\"Not bad, huh?\" Sarah smiled as she stared into June's eyes,\n\n\"Not at all,\" June said dreamily. \"A solid B or B-plus.\"\n\n\"Bitch, please,\" Sarah scoffed. \"You called me your fucking daddy.\"\n\n\"I didn't,\" June lied. \"And I'm going to sue you for such vicious and unfounded slander in the morning.\"\n\nSarah was in the middle of thinking of a response to that when she noticed that June had fallen into a deep and contented sleep. She looked over and saw that, on a small nightstand beside the bed, June's alarm clock read three o'clock in the morning. They'd been fucking for nearly three hours straight. Sarah, who knew she still had to wake up in a few hours, grimaced a little before leaning over to give June a tender kiss on the forehead. Sarah drifted into her own sleep, letting June hog the covers. As the joke went, Sarah had the tendency to smoke after good sex.\n\n8. \n\nThe bus station was relatively quiet at this time of morning. Aside from a few stragglers and a couple of fellow soldiers, the only ones there seemed to be Sarah and June. Sarah had managed her few hours of sleep before she'd risen to the beeping of her watch. She'd wanted to let June sleep in, knew June had deserved it after all they'd done the night before, but June would have none of it. June got up with Sarah and had driven her to the bus station. \n\nLooking at her, Sarah still felt her breath being taken away. June probably felt as though it was a plain, simple dress she was wearing and, Sarah had to admit, it would have been on most. On June, however, her curves were hugged tightly and even the modest neckline showed more cleavage than most women could have managed on their best days. \n\nBack at her apartment Sarah had thought about pressing her luck, going in for a goodbye fuck in the morning, but she'd known that time wouldn't have allowed it even if June would have. Sarah also didn't want to come face-to-face with the possibility that, after the heady rush of sex had subsided, June might have firmly stuck to her rule. \n\nSarah knew that June had been right. There was something very valuable about her last memory of the States before deployment being of her one night with June and being reminded that was all it was would have soured it slightly. So Sarah simply straightened her uniform and smiled. \n\nHer brief moment of peace being interrupted by the scratchy sound of the PA. \"Attention passengers, the bus for Columbus will be departing in fifteen minutes. Please make your way to the boarding area.\"\n\n\"Well, that's me,\" Sarah said, smiling at June weakly. Sarah didn't feel anywhere near as bitter as she had before she'd met June. There were parts of her that were even looking forward to be back among her company and fellow soldiers. Still, as strange as it was, she felt a pang of sadness of leaving June. \n\nSarah had to give her head a shake. She'd made fun of Audrey for how quickly she'd fallen for her and now Sarah was fighting feelings of a startling depth for someone she'd only known for four days and who had insisted that theirs was not to be a relationship past two wonderful nights.\n\n\"Well, go then. Proclaim liberty through all the lands and to the inhabitants thereof,\" June said with a smile.\n\n\"What?\"\n\nJune giggled. \"It's from a movie, never mind.\" \n\nAround them, others were saying their goodbyes and shuffling towards the bus. Sarah took another look at June, the last she might take for nearly a year. Same as the first time, Sarah had to marvel at just how beautiful she was, how just the sight of her made Sarah want to throw her down, tear her clothes off that marvelous body and fuck her with all her power. The fact that Sarah had actually done that the night before didn't dull her desires one iota. \n\nAnd there was more, the humour, the sweetness, the take-no-shit attitude. As Sarah tried to steel herself for her goodbye, she knew there was more that she needed to say. She took a step towards June and stared deeply into those green eyes, eyes that Sarah swore were doing their own best to stay composed.\n\n\"June, I love--\" Sarah started before catching herself. Truth was, Sarah herself wasn't sure how she wanted that sentence to end. She definitely didn't want to put June on the spot like that either. She could see June's eyes widen a little before Sarah spoke quickly to try and resolve the sentence she'd left open. \"I loved fucking you.\"\n\nJune's lips spread into her wide smile as she closed her eyes and looked towards the ground.\n\n\"I loved fucking you too,\" June said softly before looking back up at Sarah. \"So hurry back, ok? Because you've got one more.\"\n\nSarah chuckled and nodded. She knew that she needed to catch her bus, knew that everyone else had boarded, which meant they were probably looking at her. Sarah resigned herself to walking away, boarding the bus and leaving June behind for the time being. As she tried to turn to walk away, however, a competing instinct kept her rooted in place, not allowing her to take a step. Sarah knew what that instinct was and how to satisfy it. She felt a tremendous freedom knowing that she could satisfy that instinct without fear of repercussions. \n\n\"Fuck it,\" Sarah said defiantly as she grabbed June in her arms and kissed her. It was a deep kiss, strong and firm. Her hands wrapped around the small of June's back and bent her backwards slightly with the force of their kiss. \n\nJune, albeit taken by surprise, returned the kiss strongly, resting her hands lightly on Sarah's shoulder as their lips pressed together softly and their tongues gave the slightest push. \n\nIt was a kiss that Sarah hoped would say what she hadn't been able to a second before, but even if it failed at that, it was a hell of a kiss. \n\nThe End\n\n-\n\nEpilogue One\n\n\"Specialist Conover!\" shouted the male voice. Ordinarily Sarah would have snapped to attention but she knew the voice. It was just mail call. Still, it did surprise her. The only person Sarah got mail from was her grandmother and a fresh batch of cookies had just arrived a week earlier. \n\nSarah stood up wearily from her table. She'd been trying to enjoy a meal after a long day. She was now two months into her deployment and some of her familiar fatigue, boredom and stress had again crept back inside her. Unsurprisingly, things had fallen apart a little without her and Sarah was spearheading a yeoman effort to clear a backlog of busted Humvees, leaving her drained to the point of exhaustion. She was desperate to get back to her bunk to enjoy a few hours of downtime. She looked up and smiled at the young private delivering the mail and signed for it. ",
        "\"More cookies, I guess,\" the private said as he handed her the small, brown box. \n\nSarah gave a pitying laugh at the predictability of her mail before instantly recognizing that this was not the same old package she tended to receive every few months. The return address was not her grandmother. \n\nIt was, in fact, from June Reilly. Care of O'Flaherty's Pub. \n\nSarah had, much like June had predicted, not been able to forget June or their night together for a single day of her deployment. While there were moments where she was alone and thought back fondly of it, the truth was that thinking of June and the things she could have been doing with her had made her time on the base even harder. The only thing keeping Sarah going on some days was the promise of that second night. \n\nSarah stood up and quickly rushed from the mess. Sarah had been quartered with a mechanic in another unit and she knew that her roommate was working a different shift than she was. That meant June's package could be opened in private. Sarah completed the trip from the mess to her barracks in record time, her heart pounding with anticipation. Arriving at her quarters, Sarah rushed to her room, locking the door behind her for good measure. She didn't know what she was expecting in her package but there was a strong desire on her part to see it privately. Sarah reached for her pocketknife and was soon tearing the brown paper wrapping open, doing the same to the packing tape. \n\nSarah laughed when she got it open. Inside was a small metal tin. Reaching in, Sarah carefully removed the top to reveal stacks of small chocolate chip cookies. Sarah laughed at her luck. She lifted the cookie tin out and set it on her desk.\n\nAs she did, she saw that there was something else in her package. A large manila envelope was packed tightly beneath the cookies. Sarah reached inside for it and could feel it was fairly thick. She undid the small red tie at the back of the envelope and reached inside.\n\nThey were pictures. High quality, glossy, eight by elevens. The first was of June. She was standing against what Sarah recognized as the wall in her apartment where they'd first kissed. The only thing June appeared to be wearing was the olive green regulation t-shirt that Sarah had left behind. June's hands were at the bottom of the shirt, tugging it down, stretching the material over her hips and covering herself. \n\nOn Sarah the shirt had been tight. On June, stretching over her massive chest and being pulled down, the shirt was like a second skin. Sarah could clearly make out the outlines of the puffy nipples she'd so enjoyed having in her mouth. Her red hair was slightly messy and she had no make-up on. She looked, Sarah thought, very much like she had the morning after their night together. \n\nThe other photos were similar. They were all risqu\u00e9 and revealing but not obscene or sleazy. The next was a side shot of June in her kitchen. This time she was in high heels, perfectly made up and with her hair done. There was a string of pearls around her neck. She was making what looked like the cookies she'd sent. The only thing she appeared to be wearing was a thin, white apron and there were patches of white flour on her ample cleavage. There was another with a yellow ribbon and bow around her chest, the material just wide enough to cover June's nipples, and only June's own hands strategically placed between her legs. There were others. One of June as an impossibly busty French maid, caught in an expression of surprise. June in what looked like bridal lingerie and a veil. Each photo had a message written on the back in red lipstick. There was \"34F-24-37\", \"Keeping the home fires burning\", \"Untie my Yellow Ribbon\" and various other sexually suggestive notes. The very last simply read, \"Your very own pin-up girl.\"\n\nSarah moaned half in frustration and half in pleasure. Each photo was one of the sexiest things Sarah had ever seen. Looking at them, how it looked as though June had used all of her skills to faithfully represent the style Sarah had mentioned and how June herself fit so well into them, Sarah could barely believed that what she was looking at was a real woman, one Sarah had been with. The thought brought a familiar heat to Sarah's insides. Suddenly Sarah was very glad she had her bunk to herself for a few hours. \n\nThat was not the only treat for Sarah in the envelope. A disc also fell out as Sarah turned it upside down. Sarah reached for her old laptop and booted it up, cursing the slowness of technology as it creaked its way to life. Eventually though, the machine powered on and the disc tray opened. Sarah inserted the disk and clicked it open.\n\nThere were audio and video files. Sarah's hands were almost trembling as she opened one of the video files. The image on her screen became one of June, standing in her living room and staring into the camera\n\n\"Hey baby,\" June's voice said. \"Hope this picks you up.\"\n\nThe quality wasn't great but Sarah could clearly make out enough. Music came on in the background and June began swaying her hips. Then the clothes started coming off. Sarah hit close. She didn't even know why. She just wanted to see if they were all like that. Sarah eagerly opened an audio file named \"ALONETIME.\" \n\n\"Hey baby,\" cooed June's seductive voice as the file opened, \"I thought maybe, when you get some alone time, after a hard day of dispatching our nation's enemies, you might want to lay back, get comfy, start thinking of me. Of what we did that night. Maybe unbuckle your pants. Remember how you fucked me. How you took me. How you made me scream and moan for you. How you fucked me like nobody ever had. Remember my taste, my sounds, my smells.\"\n\nSarah smiled as she leaned back in her bed. She remembered. It was vanilla and jasmine. She did as the tape suggested, sliding her fingers below the waistband of her fatigues. \n\n\"Remember baby, how I was between your thighs, licking you...\"\n\nEpilogue Two:\n\nIt was ten o'clock. Just another dead Tuesday in a string of them. Jim Keenan was, again, June's only customer. Still, June saw the plus side. If she got rid of Jim she could at least close early. \n\n\"One more for the road, Jim?\" June asked, hoping he might get the hint.\n\n\"Maybe, doll,\" Jim said, his raspy voice slurring only slightly. \"If I can finally convince you to come home with me.\"\n\nJune smiled at their familiar routine.\n\n\"I'd give you a heart attack, Jimmy,\" June said with a wink as she poured the shot of bourbon in front of him.\n\n\"Probably.\" Jim nodded. \"But that's at the top of my list of ways to go.\"\n\nJune laughed as she emptied the bottle, noting she'd have to get another one from the back. \n\n\"Besides,\" Jim continued, \"you're not still seeing that McPhee kid, so what, you finally decided to date what's-his-name? Nichols?\"\n\n\"You're the only guy in my life these days Jim,\" June said with a wink, trying to cover up what her statement meant. It was true, June wasn't seeing anyone. After Sarah, June had tried to get into the swing of things again. She'd gone on a few dates in the first month, but both guys, while nice, seemed utterly pointless to June. The old her might have taken one home just to clear her cobwebs, but June couldn't. It just didn't feel the same anymore. Her hands and her battery-operated toys had been her only lover for the better part of a year now and her sexual thoughts were consumed by her night with Sarah. \n\nJune had tried to break the habit. Tried using her old masturbatory fantasies. But each time they'd left her frustrated and, when she'd break down, she'd again find Sarah in her minds eye. Not just in one of the acts they'd engaged in but in new ones. Fantasies that June found herself having as she invariably would continue masturbating.\n\nThat had been one of the reasons for the package she'd sent. She'd hoped that shooting herself dressed up for some of those fantasies might get them off her mind. Cooking for Sarah before sex on the kitchen floor. Sarah coming home to untie that yellow ribbon. Even the bridal lingerie was the result of the idea of a hetero fantasy June used to have being transferred over to Sarah. June had joked in bed about Sarah turning her into a lesbian, but, more and more, June was starting to believe it was true. Even scarier, June didn't even mind the thought so much. \n\nThat was why now, a few days away from Sarah's return, June was so tense. June didn't know what she wanted to happen. The thought of Sarah showing up in the bar in a few days terrified her. The thought of Sarah not showing up terrified her. June had no idea what to expect or how she'd react. She felt like she was back in school with a book report due and she hadn't read the book.\n\n\"I'm going to go get another bottle from the back, Jim,\" June said, letting the business of running her bar interrupt her sexual identity crisis for the umpteenth time in the last few months. \n\nJune made her way to the back. June stood there for a second, thoughts of Sarah again distracting her from the simple task, before she shook her head clear and grabbed a bottle. She made up her mind to get good and plastered once she kicked Jim out. She stood in the cool back room of her bar for a second before walking out to something she hadn't expected.\n\nStanding in the doorway, large green bag slung over her shoulder, was Sarah.\n\nAt first June thought it was a mirage. Some sort of sex-starvation induced hallucination, but that idea was quickly dismissed. It was Sarah. Tall, well built and pretty, her sandy blonde hair still in the ponytail beneath her camouflage cap and dressed in fatigues. There was no mistaking the girl she hadn't managed to stop thinking about for five consecutive minutes for lunch. She looked harried and exhausted, but no less appealing for it. Absence, it seemed, had really made the heart grow fonder.\n\n\"Days,\" June blurted, trying to think of what to say but not finding much. Eventually her mouth and brain reached some sort of tentative agreement and a passable sentence left her lips, \"You're not supposed to be back for days.\"\n\n\"Caught an earlier flight,\" Sarah said. Immediately June could see that fierce, intense desire in Sarah's brown eyes. The same that had made her feel so uncomfortable the first time she saw it and that had made her feel so sexy when they'd fucked. June felt her heart skip a beat and her mouth dry. \"Don't mind, do you?\"\n\n\"No, I'm just not ready is all,\" June sputtered. This was true. In her fantasies, Sarah had come back to a perfectly made up June who'd planned ahead. June had bought the white bridal lingerie for their next night together. Candles, roses, a bubble bath together, other things. June had planned it all out in her head. \"I look like a mess.\"\n\nSarah walked into the bar, a broad grin on her face. \n\n\"June, you're the most beautiful thing I've ever seen,\" Sarah said as she leaned forward and passionately kissed June. It was a repeat of their kiss at the bus station, hungry but restrained. June felt herself melt into Sarah's strong arms. The kiss lasted longer this time, breaking only when June felt the need to break for air.\n\n\"Even if you're a bit of a tease for that fucking package,\" Sarah winked as she looked down at June.\n\n\"I thought you'd like it,\" June said slyly.\n\n\"I'm here, aren't I?\" Sarah said plainly.\n\nLooking up at Sarah, being held in her arms, remembering Sarah's power and performance in the bedroom, all doubts were erased from June's mind. She knew exactly what she wanted.\n\n\"I was thinking, by the way,\" June said. \"You know how I said I should set a time limit on your nights?\"\n\nSarah nodded. \"I know, I know, we went a long time last time but I'm thinking--\" \n\n\"I'm thinking I've set a fair one.\" June said, interrupting Sarah with a determined voice. \"I'm thinking weeks. Months. Hell, years and years and years if you're inclined.\"\n\nSarah smiled broadly. June could instantly see that her feelings were reciprocated, fully and completely. Lesbian, straight, June didn't give a shit about labels any more. All she knew was that she wanted to be with Sarah, now and for as long as she could see into the future. \n\n\"That's a lot of fucking,\" Sarah said. \"Might even wear me out.\"\n\n\"Well, you know,\" June shrugged, \"I figure there'll be breaks for eating, sleeping, work, taking me to the movies, things like that.\"\n\n\"Sounds good to me,\" Sarah said with a wink. \"Because I meant what I said you know, I loved fucking you.\"\n\nThe words hung in the air for a second. Both women knew exactly what Sarah meant.\n\n\"Me too,\" June said softly, looking down at her feet. Both women knew what June meant as well. As far as romantic moments went, it may not have been traditional but, June had to admit, it fit her and Sarah pretty well. \n\n\"Soooo,\" Sarah said, motioning to her head upstairs. June just nodded and turned back towards the bar.\n\n\"All right Jimmy, it really is time for you to go now,\" June said firmly. The older man rose unsteadily to his feet and walked towards the door.\n\n\"Alright, alright, what's so all-fire important that it's got you so worked up?\" Jim asked as he made his way past the two women, seemingly not noticing their embrace.\n\nJune considered the question, looked at Sarah, then back at Jim.\n\n\"My girlfriend is back from overseas and wants to fuck the hell out of me,\" June answered.\n\nJim grabbed his hat and coat from the rack before opening the heavy door into the cool night air. \n\n\"Well, as reasons go...\" Jim said with a bit of a twinkle before quickly and silently disappearing into the night. \n\nAs they watched him leave, Sarah wrapped her arms around June's waist, kissing her neck softly from behind. \n\n\"Now you, missy, have about thirty seconds to get that gorgeous ass of yours upstairs,\" Sarah said as she placed a kiss just below June's ear and began groping the soft body that had been on her mind for far too long.\n\n\"Mmmm,\" June moaned as she felt Sarah's hands on her breasts. \"Is that an order?\"\n\n\"It is,\" Sarah confirmed.\n\n\"And if I don't comply, I assume I get punished severely?\" June asked breathlessly.\n\n\"You do,\" Sarah said, biting her ear gently. Her words hung in the air several seconds without any movement from June. \"Well?\"\n\n\"I'm thinking. I'm thinking.\"\n\nAnd with that, Sarah leaned down and threw June over her shoulder, lifting her easily, and made her way to the small staircase to their apartment amid June's delighted shrieks of laughter."
    ],
    "authorname": "SweetestThing",
    "tags": [
        "lesbian",
        "busty",
        "june",
        "strap-on"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-proper-send-off"
}