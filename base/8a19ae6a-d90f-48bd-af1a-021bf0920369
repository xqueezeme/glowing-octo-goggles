{
    "title": "The Twelve Zenati Pt. 21",
    "pages": [
        "Authors note: Hello everyone. I apologise for my long absence, but it was necessary. Unfortunately, in my absence, my beautiful, kind and wonderful editor David passed away. I hope those of you who enjoy this series continue to do so despite the loss of David who loved the world of the twelve as much as I did. ~ellie. \n\nPart 21\n\n*****\n\nIt was crowded in the Athenaeum, with both the older and the new table men crammed into the spaces around the long table. It could have easily held two Tables if there hadn't been understudies on the new Table, which almost doubled the number again.\n\n\"I wish Noah was here,\" Genesis murmured to Gideon, as they went to take their seats.\n\n\"You and me both, brother. You and me both,\" Gideon said sadly and shook his head, still feeling guilty about his last heated conversation with Noah.\n\n\"Alright,\" Anthony said, barely raising his voice to gain the attention of the table, which immediately quietened. \"Armando has come to us with some interesting information that I believe we all need to hear and be aware of. If you would be so good as to go through it one more time for those assembled?\"\n\nArmando stood and, once again, went through his story of being approached anonymously to broker a deal to arrest some of the remaining Suebi power players, and what they wanted in exchange for the details of the secret meeting and the location of Hermione's. \n\n\"The club, Hermione's, is an integral piece of information to prove Olivia's version of events, which is being thrown into doubt at present, because none of the men she mentioned has been arrested or even located, for that matter.\" Armando finished his explanation. \n\nThe group sat thoughtfully for a few seconds to digest the information, as was their custom. Still, before any valid questions could be asked and answered, the older men stared in shock, as the youngest of Anthony and Gianni's sons stood angrily and began to rant at them all.\n\n\"For fuck's sake, when are we all going to start being honest with each other? It doesn't take a genius to work out that you have been Olivia's counsel for half a minute and never in public, so this deal came through Noah and, probably, Marcella, who has conveniently disappeared, at the same time as this miraculous deal fell into your lap. Just like the miraculous discovery of Olivia's boat occurred when Marcella was supposedly missing!\" He drew breath but went on before anyone could interrupt his tirade. \"If we don't all start getting on the same page, we will be putting both Noah and Marcella in danger, because we all want what's best. Sneaking around and hacking into her devices and having secret meetings and calls with Noah isn't helping any of us to help them.\" He was practically shouting at the men of his family.\n\n\"Told you,\" Gianni chuckled and shrugged at Armando. \"I thought it would be Dom who called bullshit, but Zanto's always been more sensitive to others than we gave him credit for.\"\n\n\"Sit down, Zanto,\" Anthony said, to his still-angry son. He was pleased to see the courage and strength needed to face down the collective Table and felt pride that his youngest son was finally coming into his own. \"You're right. Together we are strong. But, even with our combined power and intelligence, we didn't find Olivia's boat. Nor did we believe that we'd left any Suebi power-players on the field to restart the game. Marcella did it all, and largely on her own, because every time she turned around, someone in our family was holding her back for her own good. I believed the phrase that she used when she spoke with Armando yesterday was 'imprisoned her against her will'.\" \n\n\"Our combined force almost broke that girl and, for that reason, she doesn't trust us.\" Gianni took over where his brother left off. \"She doesn't trust any of us, including Noah, who is with her only because he blackmailed her. If you push her or him, we lose not only the chance at arresting these power-players who have hidden so well, but we risk losing her, Olivia's best chance at freedom and possibly Noah, in the process. So, if you have hacked into her personal accounts, now is the time to come clean, because I guarantee that something like that will only feed into her fears and distrust of our family.\"\n\n\"It's okay, Zan man.\" Genesis stood up and addressed the Table. \"I asked him to do it. There is something that doesn't sit right about Apollo. Both Olivia and Marcie claim that he would never hurt them, but why go to Perth before coming here? Surely, he knew she was here? I mean, Olivia coming back from the dead was a big deal. He could have called any number of people to find out why she wasn't answering her phone. Instead, he shows up here only after spending a few days in Perth first? Who was he there for if not Marcella?\"\n\n\"There are some very threatening sounding voice mail messages by a man that is not her father, but seems to have the authority to demand that she return home to her family,\" Zanto said, adding to Genesis's reasons for why they had hacked into her devices.\n\n\"We've been working with Nathanael Gambaro to discover who is threatening her, and if there is a link to Apollo Martino,\" Xavier said.\n\n\"As Armando and Noah usually fill the devil's advocate role and obviously can't, at this time, Nunzio? Gideon? Your thoughts?\" Anthony asked.\n\n\"She's a Gambaro, not a Zenati. Same with Olivia. Why are we putting so many resources on the line for them?\" Nunzio began. \"Their own family doesn't seem concerned that they are in any danger here.\" He gave a soft smile, as he heard Genesis growl softly in response. \"In fact, I believe Olivia's parents refuse to accept the fact that she is alive and have had a memorial for her.\"\n\n\"They are curse breakers and that, in itself, is reason enough for us to do everything that we can to help them but, as yet, neither has made a commitment to our family and Marcella, particularly, is not likely to stay, if everything Armando says is true. For all we know, the alliance between Apollo and the men of her direct family could be enforceable under Table law, as the Battaglia stated,\" Gideon mused thoughtfully, not looking at his brother. \"Maybe it's better to cut her loose now, rather than allow Noah to get too much closer to her.\" \n\n\"As far as we know, she has done nothing wrong and broken no laws, since arriving in our city at our invitation,\" Armando said, defending the girl he knew and liked. \"She is strong-willed, stubborn, courageous yet protective, and self-sacrificing for those she loves and cares for. I'd like to think that is something we value in the Zenati women,\" Armando said in rebuttal. \"When Marcella called me yesterday and asked me to meet her, it was to ask for my help to get Noah to return home, because she didn't want him in the danger that she was so willing to put herself in, to prove her sister's version of events during her time with Royce.\"\n\n\"Heh, and did he listen?\" Gianni asked as a few of the men snickered at the proposition that Marcella had put to Armando. \n\n\"My son has always had a little trouble heeding my warnings when he was determined to do something,\" Armando admitted, eliciting a few more chuckles from the men around the table. \"Even as a young boy, he marched to his own set of rules. I didn't even try to do as she asked but told her that he was not a child that could be told to do anything, especially leaving her to face the risks she was taking, alone.\"\n\nDespite all of that,\" Claudio spoke up. \"The fact that there are still Suebi power-players hidden amongst us, and hidden within the AFP if Marcella is correct, is something we can't ignore. I don't imagine Olivia would have wanted to revisit the Royce mansion, nor does she need the money from its sale, so it is no big thing to go along with the wants of the woman who offered the information that we require.\" He looked directly at Genesis. \"This is the opportunity to clear Olivia's name once and for all if it is all true. Is that a chance you are willing to pass up?\"\n\n\"No, of course not, and I agree with following the plan. I am sure that once it is explained to Olivia, she will sign the necessary paperwork,\" Genesis waved away the debate. \"My concern is Marcella and this strange relationship with Apollo Martino. That's why I asked Zan to hack her phone. That's why I am trying to sort fact from fiction. Fairy stories that Marcella told Olivia when they were younger are becoming more like reality, as we discover more information about their childhood. I don't think the woman trusts anyone completely, including Olivia or Vivienne, let alone us trying to win her trust back. I doubt that we ever had it in the first place.\"\n\n\"In the beginning, she trusted Noah,\" Gideon said sadly, realising that he knew the exact evening that trust had been lost, and why. \"Is he really blackmailing her?\" \n\n\"According to Marcella,\" Armando nodded. \"I think there is more to it than that, but I think it's best to let them work that out by themselves. It seems that our attempts to help her are the very things that caused her to leave the hospital and disappear, with a hefty concussion.\"\n\nThe conversation turned to what would happen next. The younger men were all warned that, if they saw Noah and Marcella, they weren't to engage them in conversation. At this point, they would, for all outward signs, pretend that the offer had come through Armando.\n\n*****\n\nMarcella stood at the top of a waterfall that seemed far too high to jump from, despite what Noah had told her and shown her. He had photos of himself and his brothers jumping from the falls when they were younger, and it was true. Taken from the shore of the lagoon that it fed, the falls didn't look very big but, from her vantage point, the rippling water looked a long, long way down. She looked back over her shoulder at Noah, who had stripped down to his underwear, and gasped, quickly averting her eyes again, and then getting mad at herself for her reaction to his near-naked perfection. It wasn't as if she hadn't seen it before.\n\n\"Your jeans will weigh you down when you hit the water, and it's pretty deep near the falls. Better to leave them here,\" Noah said, stifling his grin as he folded up his own jeans and placed them in one of the Quad's storage bins. He turned to her, wearing only his boxer briefs. \"Having second thoughts about the adrenaline junkie life that Stevie was so keen to get started on?\" he asked.\n\n\"No,\" she snapped back, waspishly. \"Haven't I already told you to give me some warning before letting all that ab flab loose on the world? I mean, do us all a favour and eat a salad now and then.\"\n\n\"Sure,\" he chuckled. \"I was just trying to save you from having to give me mouth-to-mouth when I drowned with all that denim on. You know you don't need to find excuses to kiss me. All you have to do is ask,\" he said, moving closer to her.\n\n\"Oh, get over yourself,\" Marcella huffed and, closing her eyes, she tried to channel her alter ego Stevie. She pushed past Noah, moving to the quad bikes. If he could do this, then she could do this. She wasn't going to give him another reason to think that she was a weak and fragile woman. Anything that he could do she could do better, including peeing standing up, if not with the same precise aim. Huffing a second time, she began to strip off her shirt and jeans, regretting the scanty lace underwear that she had chosen to wear this morning. She could do this. She had to do this to prove that she wasn't all talk. He was giving her a day of exactly what she had said she wanted, adrenaline-fuelled fun. She couldn't baulk now, could she?\n\n\"You can just...\" Noah said, from just behind where Marcella stood in her underwear, making her squeal in fright. \"Put your things with mine, in here,\" he said softly, reaching past her to pull the storage bin from the bike. \n\n\"Don't do that!\" Marcella raged at him, before turning her back to him again. She folded and placed her clothes with his. \"Do we have to climb back up to get dressed again?\" she asked, not liking that idea at all.\n\n\"Nope, this is coming with us,\" he grinned, and sealed the watertight bin shut, before removing the holding buckles and picking it up. He held out his free hand to her. \"Ready?\" he asked.\n\n\"As ready as I am ever going to be,\" she said, as she ignored the hand Noah held out to her, and walked back towards the cliff beside the waterfall, and peered down into the swirling water that flowed out into ripples across the lagoon. She could hear Noah walking up on the loose gravel toward her, so she took a deep shuddering breath and then leapt out, in the direction that Noah had shown was the best place to jump, when they had first arrived at the clifftop.\n\nNoah saw her disappear and called out, rushing forward as he heard her scream on the way down. He halted on the edge of the rock platform forcibly stopping himself from following her over. What was she thinking, just jumping like that, without the last-minute reminders of how and where to jump, for the safest plunge into the water?\n\nMarcella fell and, to her surprise, kept falling. She quickly tried to suck in more air just as her feet touched the water and, not having enough time, sucked in water as well, choking her! She scrambled to the surface, feeling her lungs exploding with the need to cough and expel the water. She broke the surface coughing and spluttering, not thinking that Noah would be jumping directly behind her, and started to panic.\n\nNoah saw her surface, spluttering and choking, and launched himself off the edge, still holding the storage bin. The cold water shocked his system, but he moved quickly to the surface right beside Marcella and drew her to him with one hand while kicking out to get them to the shore as quickly as possible.\n\n\"Cough it all up,\" Noah said softly, pulling her over his legs and cradling her close, as he rubbed her back vigorously, trying to ease the discomfort he knew that she felt. He had swallowed water after the long drop on more than one occasion himself when he was younger.\n\nMarcella said nothing as she struggled to get her ragged breathing under control. If there were ever a time for Noah to lecture her about leaping before she looked, now would literally be that time. She groaned, as she continued to lapse into small coughs, as her lungs struggled to get enough air back into her body.\n\n\"Foul ball?\" Noah asked tentatively, still holding her close, as they sat in the sun recovering from the jump. He had thought that it would be an easy jump. He thought that they would jump together, preferably holding hands. Instead, he hadn't given her enough of an explanation of what to expect, and she hadn't held her breath when hitting the water. Still, she had jumped into the deeper part of the lagoon, and that was the best outcome.\n\n\"No, but I reserve the right to change my mind if you plan on making me climb back up that fucking waterfall to get out of this place,\" she sighed, realising that to give it a foul ball would be to say that her missed breath during her jump was all Noah's fault. \n\n\"No climbing necessary. Our ride out of here will be here in an hour or so.\" He chuckled and inspected his watch, making sure of the time. He had scheduled a lot into today, and he was glad that she hadn't just used her power of veto to cancel the rest of the day that he had planned.\n\n\"Well, that's a relief,\" Marcella said, untangling herself from his arms and putting a little distance between them. \"No second base for you though. I'm not entirely sure that you aren't trying to kill me today. It's not like you to encourage any reckless behaviour, yet you haven't lectured me once, even though I took off on the bike before you were ready, and I leapt off the cliff without you. The Noah I know would have pounced on those moments of recklessness and given me his most condescending I-told-you-so. Then followed it with a lecture of safety.\"\n\n\"I've organised this day, with your permission, but you're still in control, Marcella. You have the power to veto this day at any time. Do that, and it ends, and we go back to StarCity. I gave you my word, signed your contract and, while I won't let you push me personally, as you did the other night with all that teasing, I will follow your lead, just as I agreed to do. Part of that is not lecturing you when you take risks, but rather being there with you, to help you through them,\" Noah said, his voice holding as much sincerity as he could muster.\n\nMarcella eyed him carefully and moved further away, coming to her feet and feeling the soft damp earth beneath her. She looked up at the waterfall, looking for the flat rock ledge she had just jumped from. It didn't look that high from down here, and she wondered why she had tried to take a second breath. The water looked clear and inviting as she stared at the pretty granite boulders and large rocks, that made small pools around the edges of the small creek which ran toward the coastline. Or, at least, she assumed that was where it led.\n\nThe bin that they had put their clothes in was resting nearby, and she walked towards it, feeling awkward in only the skimpy underwear. Not that it was much skimpier than her bikini but... her thoughts were interrupted by Noah, as she considered why she was suddenly feeling so exposed in front of him. She'd slept beside him last night, for goodness sakes. She knew that she was safe with him, or at least from him, as long as she wasn't pushing him into a corner, where he had no choice but to come out fighting.\n\n\"Want to see something amazing?\" Noah asked, getting to his feet with her. \n\n\"I guess, but it needs to be more amazing than jumping off a friggin' waterfall,\" Marcella teased, with a smirk.\n\n\"A different sort of amazing. Not so much adrenaline, more awed reverence,\" he explained and held out his hand to her. \n\n\"Awed reverence, huh? Lead on. I can't wait,\" she laughed as if he was joking. She followed him back into the water before a thought occurred to her. \"Aren't you worried about crocodiles here?\"\n\n\"Nah, the salties don't usually get this far inland, and it's patrolled to make sure that they don't nest here, if a stray one does wander up the creek,\" he shrugged nonchalantly.\n\n\"Patrolled by who?\" Marcela frowned. She had thought that they were alone in the middle of nowhere. \n\n\"Wildlife rangers and the jackaroos that work the property. The boundary is fenced, so relax. I've been coming here since I was a kid.\" He turned and grinned at her. \"It's perfectly safe. I guarantee you. I manage the risks, remember?\"\n\n\"What you mean is, I am a risk, and you are trying to manage me,\" she huffed and withdrew her hand from his, to dive into the water. \n\n\"You realise that I haven't told you where we are going yet?\" he laughed as she surfaced. \n\n\"Ah, but you underestimate my great powers of deduction,\" she said and shook her head. \"People always underestimate me. You want to show me something amazing, I am assuming more amazing than the waterfall right in front of us, yet you waded into the water, so I am guessing there is a cave, or at least a ledge, behind the waterfall,\" she said, floating back toward the falls.\n\n\"You would be right, but you should be careful about how you get there. Head to the left of the fall itself, and you'll find a ledge that you can pull yourself up onto.\" He chuckled again. He didn't think he could ever underestimate this woman anymore. Keeping her busy today had the added benefit of not having to worry about what harebrained scheme she would think up next, to risk her life over. Noah dove into the water and swam at a steady pace, catching up to Marcella in time to help her up onto the ledge. His large hands caught her waist, and it felt even smaller as he held her steady while she climbed up. He admired the rounded firmness of her ass and the way that the lace of her panties only served to highlight its curves. He swallowed hard, willing his body to stop reacting as if he was an undisciplined teenager.",
        "Marcella moved along the ledge, eager to see this fantastic thing that Noah had promised. She imagined a small cave that young boys probably made into a secret clubhouse or some such. She turned her head back over her shoulder to watch Noah haul himself from the water and quickly turned away again. No man should look that good just climbing out of the water. She took a few quick steps forward and almost slid on the wet rock surface, but righted herself just in time. She had just regained her balance when she felt Noah's hand come to rest on her hip, helping to steady her.\n\n\"Careful, it can get slippery along here,\" he warned, albeit too late.\n\n\"No shit, Sherlock,\" Marcella huffed again. The man drove her crazy with his fucking risk management. If she had been game enough to stomp along the ledge, she would have, but instead, she stepped carefully, unable to move far enough ahead to stop Noah's hand reaching out to steady her, even after shaking it off twice.\n\n\"Just around this edge...\" Noah cut off as Marcella got her first look at the Cave of Wonders, as he and his family called it.\n\n\"Holy shit!\" Marcella gasped, as she turned into the cave. This was not what she had been expecting at all. She was still standing on a narrow ledge inside the cave itself, looking at a small pool of water that delved back deeper into the cave. Mirrors fixed to the sidewalls and roof, near the entrance, reflected light into the cave, and it seemed like a series of the small hand mirrors were positioned to reflect the incoming light deeper, and make the space much lighter, than it would have been without them. The walls themselves seemed to have been muraled with bright light scenes of mermaids and mermen, and the bottom of the pool, and the edges of the cave, were strewn with dried flowers and seashells.\n\n\"When you were little, you wanted to grow up to be a merman?\" Marcella asked in a teasing tone, flicking her eyes to his, and resisting the urge to let them stray down his body again.\n\n\"Not just any Merman. I wanted to be Aqua man!\" Noah said indignantly.\n\n\"Oh well, that's much different,\" she said, stifling her laughter. \n\n\"Mock all you like, but Aqua man is very cool, I'll have you know,\" he said, indignantly. \n\n\"So very cool,\" she giggled, before stifling it again. She didn't giggle. It sounded odd, even to her own ears, and she frowned. She wasn't some giggling schoolgirl flirting with a boy. Walking deeper into the cave, and bending down as the roof clearance got lower, to inspect where the mural stopped and what looked like childish graffiti started. She ran her hands over the graffitied stones, trying to discern names she might know, when Noah came to her side, hunched over nearly in half in the cramped space.\n\n\"Here's mine,\" he said and pointed to a large N that had been almost covered over by other names.\n\n\"You vandalised this place?\" She raised an eyebrow at him.\n\n\"We all do. It's sort of a right of passage for us Zenati's,\" he chuckled.\n\n\"Well then, I feel privileged being here then.\" She looked up at him, letting her smile show that she was still teasing him.\n\n\"So, you should. This is an amazing cave of wonders, and it holds many of my best childhood memories. All you have to do to be on the wall of honour is jump from the top of the waterfall and swim into the cave. You, unfortunately, went the wrong way so you'd have to jump again to make it onto the wall of honour,\" he said, seriously.\n\n\"You expect me to climb that waterfall in my underwear? Without any shoes or safety equipment? Who are you and what have you done with Noah safety-first-control-freak Zenati?\" Marcella shook her head and began to move back through the cave, to where she could stand upright again.\n\n\"I think it was you who said that survivors learn from their mistakes,\" Noah reminded her quietly, trying to keep his voice as normal as possible, despite the heat pumping through his body as he watched her. \"You also know that I have the scars to prove that I've survived being a dumbass, on more than one occasion. It's about limiting the risks, not stopping you from doing anything!\" He was losing his grip on his temper, or maybe his grip on his libido, but he saw her freeze at the mention of scars and regretted his words immediately.\n\n\"Even when they fade, they still remind you of the lesson, huh?\" Marcella said, her voice heavy with sarcasm. She realised that she had been pushing all his alpha-male buttons this morning and he was starting to lose his famous control. \"It's a shame you never grew out of that dumbass phase. Show me which scar you got jumping off that cliff I just leapt off!\" She smirked to disguise the anger she felt. Her scars were not from doing fun or risky activities. It wasn't fair of him to compare them.\n\n\"You're right. That scar faded long ago, and I still make sure to jump in just the right spot to this day,\" he admitted. He could hear the change of tone in her voice and see the tension in her body, and he knew that his analogy had been the wrong thing to say, but it was too late now. \"Some scars never go away, I guess. The ones that haunt our memories and colour the way we live our lives. My mistakes make me manage the risks these days. I have a friend who knows no fear and spends more time in a hospital gown than out of it. He has started getting tattoos to cover up the deepest of his scars.\"\n\n\"Tattoos? Like biker skulls and crosses? Something meaningful to how he got the scar? Or more like body art?\" Marcella asked, genuinely curious, as she followed him back to the part of the cave they could stand in.\n\n\"I don't know why you would permanently mark your body with a tattoo if it weren't meaningful to you in some way. I have thought about getting one more than once,\" he admitted.\n\n\"Scared of the pain?\" she teased.\n\n\"Scared of waking up a year later and regretting it,\" he amended. \"It's the laser removal treatment that hurts, or so I've heard,\" he chuckled. \"If I told you that I would take you to a tattoo shop today and you could choose any tattoo, would you know definitively what you would want?\" Noah asked.\n\n\"Yep, definitively,\" she said earnestly, noting the surprise on Noah's face.\n\n\"And where would you put this definitive tattoo?\" Noah asked, curious about the resolve in her voice as she answered him.\n\n\"Right here.\" She poked a finger into the soft flesh of the upper portion of her left breast.\n\n\"Wow, you've really given this some thought, haven't you?\" he asked, in wonder. \n\n\"There's nothing wrong with knowing what you want,\" she shrugged, moving to sit at the end of the pool and looking down at the bottom covered in smooth shells and stones.\n\n\"I guess that depends on what you want. Some things are harder to obtain than others,\" Noah moved to sit beside Marcella, feeling the tension drain from the air again. \"Let's go swim and dry off in the sun. Our lift out of here will arrive in less than an hour.\"\n\n*****\n\nGideon sat quietly with Genesis, considering all that they now knew. By true Table law, they, and their fathers, could not refuse the Gambaro Family request for Marcella to return to her home. She was not engaged to Noah, nor had she given any indication that she had more than a passing care for anyone here, aside from her sister and Vivienne. In fact, she had taken great pains to isolate herself from the family, for the most part. Still, the demand hadn't been made to them. The command to return home had been left in the messages on her phone.\n\n\"We need to get Oscar and Nathanael onside. Nathanael, at least, knows the background information now. Oscar could countermand the command if it ever came officially,\" Genesis said, his investigator's mind still working over the details. The gut feeling he had that there was more going on beneath the surface than anyone knew about when it came to why, out of the three sisters, only Marcella seemed to have been mistreated. \"Did anyone talk to the older sister yet?\" he asked Gideon. His gut told him that the older men of the Gambaro Table had tried to cover up the fact that one of their own had mistreated his daughter so badly.\n\n\"Xavier was going to talk to Massimo about it, I think.\" Gideon frowned as he tried to remember the conversation. \"I know that Vivienne was trying to get hold of her at one stage, but backed off when Xavier was making inquiries through the Chairs.\"\n\n\"I want to talk to Noah,\" Genesis sighed. \n\n\"I guess we could talk to Papa,\" Gideon echoed his sigh. They both knew it wasn't the same. Noah was the balance between them, understanding that Genesis rushed headlong into situations, while Gideon sat back and considered all angles before moving. Noah had always straddled the difference between their approaches to situations effortlessly, without forcing his own agenda on either of them, but always somehow making them see other points of view more clearly.\n\n\"And say what?\" Genesis asked. \"That we want a meeting with Apollo? That we want a meeting with the sister? That we want to go to Perth and talk to the people who knew her well. The Aunt perhaps, or her work colleagues?\"\n\n\"Yes, all of that,\" Gideon said as if that was the most logical thing to do at this point.\n\n\"We've been told to drop it. You truly think that Papa will side with us, and help us to keep investigating this line of thought, before the raid on Hermione's is complete?\" Genesis rolled his eyes.\n\n\"It's a week. He would understand us wanting to make plans for what happens after the raid is complete, especially if Noah and Marcella don't return to attend the family gathering. You may get a special pass for Olivia to be there, but I'm not so sure that Marcella would be welcome at the gathering unless she is with Noah, as a couple, not being forced or blackmailed by him to attend,\" Gideon reasoned. \n\n\"You think he would try and bring her to the gathering?\" Gideon asked, with wide eyes.\n\n\"Sure, to an outsider it would seem like any other family reunion,\" Genesis said. \"From what Olivia says, she and Marcella never attended any of the gatherings of the Gambaro family. So they wouldn't understand the intent behind it. At least I don't think so.\"\n\n\"Maybe that's the starting point to talk to Papa. If he confirms that she will be coming to the gathering, then we know that Noah managed to get closer to Marcella and got her to come back,\" Gideon reasoned. \"The truth is that she is the only one who can truly answer the questions we have. Why do all that digging, when you can just go straight to the source?\"\n\n\"That's just my point. I don't think that she or Olivia have any idea what Apollo's real plan was in coming up here and announcing that they were engaged. I mean, why engaged? Unless he was trying to break up any relationship that she had with a Zenati man.\" Genesis tried to explain the unanswered questions still swirling around in his brain.\n\n\"I guess that we all saw how Noah reacted to the news. Not that they had a relationship at the time, but it was still a decent blow-out, leading to a public argument, according to Vivienne,\" Gideon agreed.\n\n\"I think that we have to do this ourselves,\" Genesis said softly, knowing that his eldest brother would baulk at going against the directives of the Family.\n\n\"We've been told to back off, Gen. Let's at least wait until after the raid and see what happens. We could just make things worse for Noah. They are together. We have to believe that he has the answers to your questions, and they will be back, I'm sure of it,\" he said, trying to sound as certain as the words were meant to convey.\n\n\"Fine. The raid is only a few days away, but if they aren't back with answers, I will go looking for those answers myself,\" Genesis vowed.\n\n\"Why, Gen? Olivia hasn't wanted Marcella to be here, right from the beginning. It isn't like she is a threat to you or her, nor is Apollo. Why are you pushing this so much?\" Gideon frowned at his brother.\n\n\"Because, despite everything done to her by her family, including Olivia, she came when we asked. She gave up the independent life that she had forged for herself in Perth and came to protect her sister. Yes, we've argued, and not always seen each other's points of view, but it's obvious now that she took a big risk coming here, and using her family name to protect Olivia from the Suebi and us. I can see why she disapproved of our relationship now. Why she wouldn't want a Table man for Olivia or even Vivienne,\" Genesis grimaced. \"She wasn't happy when she heard the news of the surprise wedding and was quite outspoken about her feelings during the flight to the Kimberlies.\"\n\n\"She was?\" Gideon's eyebrows rose. \"I never knew.\"\n\n\"Noah handled it, and Vivienne spoke to her privately. She accepted that Vivienne truly loved you and wanted the marriage, in the end,\" Genesis reassured his brother. \"The two of you are made for each other. Blind Freddy could see that,\" he chuckled.\n\n\"Curse or not, we've both come out of this whole Suebi attack with the perfect partners,\" Gideon agreed. \"Let's hope it works out for Noah the way it has for us.\" He fell silent for a moment, then looked up at his brother. \"Let's take these next couple of days that we've been asked to stand down as a gift. It's not often that we have uninterrupted days to spend with our loves. I'm thinking of a few interesting scenarios I'd like to indulge in with Vivienne,\" he grinned. \"It wouldn't hurt you to take Olivia away for a day or two either. She loves sailing, right?\"\n\n\"Alright,\" Genesis chuckled. \"I hear you but, after the raid, if we don't get answers, I'm going to look into it further myself.\"\n\n*****\n\nMarcella heard the rhythmic thumping and sat up from where she was lying comfortably in the dappled sun, drying off. The noise was getting louder, and she turned to look at Noah, with a frown.\n\n\"That's our ride out of here,\" he smirked. \"And, as much as I wish that you would stay like that all day, you might want to put some more clothes on. I'm not sure my Aunt would be as appreciative of your underwear as I am,\" he chuckled and moved to the storage bin that he had brought down the falls with them.\n\n\"Your Aunt is picking us up?\" Marcella asked, blinking her eyes widely. \n\n\"Yeah, you can see her.\" He pointed above the waterfall to a small, rounded helicopter. \"She's a better pilot than most of my uncles or cousins. Except maybe Gideon, but he was born to fly.\"\n\n\"I thought you liked to fly?\" Marcella questioned while stepping into her jeans and pulling them up quickly, worried about the view his Aunt was getting.\n\n\"I prefer flying with no engines. I like parachutes, gliders, that sort of thing. Gideon is the one who flies the mechanical beasts of the air,\" he explained. \"Most of us have a pilot's licence though because the family station is pretty remote and it's the easiest way to get to and from it, especially in the wet season.\" \n\nMarcella sat on a rock to put her shoes back on, lacing them tightly. She'd never been in a helicopter before, and she was excited at the thought. When she looked up again, Noah was fully dressed, and although she could never tell him, she felt as disappointed as he had said that he was with the additional clothes.\n\nNoah approached her as the wind picked up and the noise became deafening, and pulled her up into his arms, shielding her face against his chest as he stood with his back toward the landing site. She felt so good pressed against his body like this that he had to scold his newly-reformed teenage libido, for trying to embarrass him again and concentrate on keeping it under control. Only once the rotor blade had slowed enough to become a heavy thump did he loosen his grip on her, and take her hand, leading her toward the landing circle.\n\nMarcella followed him, her heart racing, as the small helicopter came into view. Two people could sit in the front, and there was a small area behind the front seats that could fit two more people. She suddenly felt a wave of panic. It was smaller than she had imagined, and it seemed to have no doors at all to hold them inside. She tried to pull her hand from Noah's, but he gripped her firmly, tugging her along. \n\nNoah felt her begin to battle with the nerves she felt and smiled. When they reached the door of the helicopter, he turned to her and raised an eyebrow, a small teasing smile on his lips. \"Ready?\" he mouthed at her as if daring her to back down now. He saw her draw a deep breath and nod, then, without warning, he picked her up and deposited her into the front passenger seat and watched as his Aunt gave her earphones. He helped her with the harness seatbelt, before moving to the back and climbing inside, spreading his long legs out across the bench seat. As soon as they were secure, the rotor blades began to spin faster. \n\nIt felt like they had sat in the same place for the longest time before the helicopter began to lift from the ground in a slightly unsteady, swaying lift. Marcella's adrenaline spiked, and she gripped the sides of her seat so tightly that her knuckles turned white. She swallowed hard and looked down as she felt the touch of a hand over hers, and she looked back to see Noah's concerned expression. She loosened her hold on the seat and allowed him to wrap his hand around hers and give it a comforting squeeze.\n\nEventually, she got used to the strange sensation of hovering in the sky, being propelled forward by some unknown force, because both Noah and his Aunt, who introduced herself as Shari, spoke about their day so far and what she was up to on the station. It took Marcella a moment to realise she had been asked a question.\n\n\"Will you be coming to the Halloween festival?\" Shari asked.\n\n\"I didn't know there was a Halloween festival coming up. I'm sorry. I've been so busy with work. Today is the first time I haven't thought about it at all until now,\" she laughed. \"Noah is good at distracting me from my goals.\"\n\n\"Even God rested one day out of seven. So, you can come to the festival, and work the other days. I insist. I will even organise your costume for you,\" Shari offered. \"It's my favourite time of the year.\"\n\n\"Costume?\" Marcella gasped. \n\n\"Madrina probably has her measurements, as well as Olivia's and Vivienne's,\" Noah offered helpfully, with a chuckle. This conversation was helping his plans along extraordinarily well. It would be hard for her to turn down the offer now.\n\n\"I don't think...\" Marcella began.\n\n\"Nonsense, lovely. It's no trouble at all to alter one of the many costumes we already have, for you, unless you have something particular in mind. You're so petite that you could be a fairy princess,\" she suggested. Unable to help himself, Noah burst out in full-bodied laughter.\n\n\"She is not exactly the fairy princess type,\" Noah chuckled, trying to rein in his laughter as Marcella turned her scowl on him. \n\n\"Oh, and what type is she?\" Shari asked, amused by the interaction of the young couple.\n\n\"Yes, Noah, do tell. What type am I?\" Marcella hissed at him.\n\n\"Lucretia Borgia, maybe. She's strong, intelligent and knows her own mind. She is someone who knows the social etiquette and rules so well that she can appear to be following them while doing exactly as she likes,\" Noah said. \"She's fierce and protective of those she cares about, and will break every rule there is to keep them safe, including risking her own well-being.\"\n\n\"I'm not that bad, but I will admit that I am more of a warrior than a damsel, if that helps,\" she admitted, sullenly. She couldn't argue anything that he had said about her. In fact, she was surprised by his words. The fact that he saw her as strong and intelligent, and not a weak, fragile woman shocked her more than a little bit. Maybe he was just being sarcastic or facetious, but it hadn't sounded that way when he spoke. She couldn't put her finger on what it was in his voice that made him sound sincere, but there was something there that made her less argumentative than if he had been teasing her.",
        "\"There she is,\" Shari smiled, as the helicopter dipped lower, and she began to line up her decent.\n\n\"Where what is?\" Marcella asked, only seeing the vast expanse of blue ocean below them. \n\n\"Your next destination,\" Shari smiled as she nodded toward a boat that looked too small for the helicopter to land on and she panicked for a moment, wondering if she would have to jump again. \n\n\"You want me to jump out of this perfectly good helicopter?\" she gasped, turning her head to scowl at Noah.\n\n\"No, Lovely,\" Shari laughed. \"I'll land you down there.\"\n\n\"You plan to land on that boat?\" Marcella gasped. \n\n\"I've done it plenty of times, so don't worry,\" Shari laughed again. \n\nRealising that she was still holding Noah's hand, she clutched it tighter, as the helicopter swayed and manoeuvred closer to its landing pad on the roof of the large cruiser. Marcella felt the adrenaline-fuelled panic spike again, and she squeezed her eyes shut for the long minutes before she felt the skids touch down on the solid surface.\n\nMinutes later, Noah was out of his seat and lifting her down from the helicopter, holding her in his arms against his body, as he walked from the landing pad to the stairs leading down to the lower levels of the cruiser.\n\n\"You can put me down. I haven't lost my ability to walk,\" Marcella grumbled, not liking that she took comfort from the strong arms wrapped around her, holding her close to the hard body she acknowledged that she wanted, now more so than ever.\n\n\"If you insist,\" Noah said regretfully, and lowered her to her feet, reluctantly pulling his arms away from her. Once they had descended the narrow stairs, however, Marcella surprised him by taking his hand once again, before he had offered it. He led her to the stateroom, where the overnight bags that he had packed for them were stored.\n\n\"A bedroom?\" she asked drolly. \n\n\"If you would rather not change into your bikini and a sarong for what I have planned after lunch, then I am just as happy to see you in your underwear again,\" he teased, moving past her to show her that the clothes inside the overnight bag were her own. \"I packed for us while you were sleeping in this morning.\"\n\n\"Sleeping in? you woke me up before the crack of dawn!\" Marcella gasped indignantly, making him chuckle. \n\n\"It was worth it so far, though, right?\" he asked.\n\n\"Yes,\" she admitted.\n\n\"No foul balls for quads, or the waterfall, means I get another base,\" he said, his voice dropping lower as he moved closer to her. \n\n\"No foul balls,\" she murmured nervously. She was concerned about what second base might entail. Still, she stood her ground as Noah approached her, admitting to herself that she felt the attraction and wanted him, but that was a totally different thing to actually following through with that want. However, when he reached for her and pulled her against his body, she didn't resist. \n\nPlacing his fingers under her chin, Noah tilted her face up to his and angled it perfectly for his kiss. It was soft, slow and deep, helped along by the feeling of her hands running over his shoulders to link around the back of his neck. One of his hands moved down her ribs and around her hip, to cup her ass, lifting slightly, and pressing her more forcefully against his growing hardness. The other hand lifted to brush over the sensitive skin of her neck and collar bone, as he extended the kiss.\n\n\"I thought about kissing you every moment since that first kiss when I found you in your room at StarCity,\" he murmured. Holding her ass more firmly, and pressing his almost-full erection against her, while his other hand strayed from her neck down to her breast. \"Every time I am with you, I want to be this close, and closer, I want more...\" His mouth lowered again to take hers, sucking her lips and tongue into the kiss hungrily, as his hands continued to explore her body through the fabric of her clothes.\n\n\"More,\" Marcella murmured breathlessly, between kisses, despite her concerns. His hands on her breasts and ass, teasing the skin of her neck, and the deep soul-rending kisses, were making her lose her sense of self-preservation. Untangling her hands, she placed them on his shoulders and pushed him away. His breath was as ragged as her own, and she stood looking at him for a long time before she took another step back. \"More is third base,\" she breathed softly in response to his confused look. She then gathered her bikini and sarong from the bed and walked through the doorway that she hoped was to the bathroom attached to this stateroom.\n\nNoah let out a long breath and ran his hands through his hair once she had gone. He felt like he was losing his mind. He was walking a tightrope between giving her what she said she wanted, and what he knew she needed. He moved to the bag and changed quickly, unconcerned that she would walk back in and find him dressing. He planned for her to see him naked often in the future. He allowed himself a small smile. Today was going well, aside from the initial foul ball for making her wake up so early, she had conceded that the unfortunate swallowing of water was her own fault, for not listening to him more closely, and leaping before she looked.\n\n\"Hurry up. I'm starving, and since you won't let me eat you, lunch is going to have to be the poor substitute,\" he chuckled. He wanted Marcella in no doubt at all as to what he wanted and needed from her, not that he would ever force her. He knew that she had never forgiven him for turning down her invitation to spend the night, so long ago. Now, he knew, he would need to ensure that she was in no doubt at all that he did that for other reasons, not because he hadn't found her enticing in every way possible. If he had known then what he knew now, nothing would have kept him from her bed.\n\n\"Oh yes please, food!\" she said eagerly, as she exited the bathroom, her hair once again falling about her shoulders in long waves.\n\n\"Right this way.\" He held his hand out to her and led her out onto the deck. She blinked at the table, shaded by a tightly-strung cloth awning, that was covered by a sumptuous banquet of fresh seafood and salads, as well as homemade, iced tea and sparkling water and champagne chilling in a bucket of ice.\n\n*****\n\nWhen Gideon had called her and asked her to cancel her plans for lunch, and the afternoon, Vivienne had delighted in the idea of spending time with her husband. It seemed that he was always being called away for family-related business. She had been with Olivia when he had called her, and Genesis had called at almost the same time, telling Olivia that he was coming home for the rest of the day.\n\nVivienne hadn't expected him to whisk her away to this remote cabin after a quick, but filling, lunch at the small caf\u00e9 that he liked on the outskirts of the city. When she complained that she hadn't packed an overnight bag, he had only chuckled and waggled his eyebrows at her. He had led her inside and left her standing to look around the one-room cabin, the bathroom a wet area, only partially-hidden with a half-wall, for modesty when using the toilet, she assumed. She watched as he went to lock the door behind them and return to her, taking her in his arms.\n\n\"I love you.\" Gideon's fingers brushed Vivienne's cheek as he lifted her chin. She took in his broad, towering shoulders, one of the very few men who had ever made her feel soft and feminine. He wore an untucked button-up shirt, with the sleeves rolled up to his elbows. His dark eyes stared down into hers with a heated look, his large hands holding her face between them as he teased her with a long tender kiss.\n\nSmall sounds seemed amplified in the little cabin. The soft hiss of the air conditioning unit. The buzz of the light above their heads and the soft moan that escaped Vivienne's lips, when she thought of the afternoon and evening ahead, with her amorous husband. Something tightened in her gut as she relived how adventurous he was encouraging her to be in the bedroom and any other room that took his fancy, lately.\n\nGideon took her hand and guided her to the bed. Her skin tingled from the contact and the thoughts that were running through her head. \n\n\"You look beautiful,\" Gideon murmured, close to her ear, and kissed down her neck. \"So very beautiful.\" He kissed along her jawline, turning her face to his.\n\nShe tilted her head up to him. Despite his free use of the word, Vivienne still hadn't become accustomed to being called beautiful. Her eyes dropped down to the dress that she'd chosen to wear today. A silky rose-pattern on a black background that provided ample cleavage. Something that she knew her husband admired and enjoyed. It was one of her favourites, mostly because she felt feminine and somewhat pretty in it, despite her oversized body. She kissed him back with equal ardour and turned towards him, placing a hand on his broad chest, pushing him slightly and breaking the kiss so that she could look at him.\n\n\"I'm glad you like the dress,\" She smiled and ran her hand over his chest. \"You always look so handsome. It's challenging to keep my hands to myself sometimes.\"\n\n\"Then don't,\" he smirked, and his hand cupped her jaw, drawing her closer. Her eyes drifted closed when his warm lips touched hers. They brushed lightly at first and then pressed harder as he deepened the kiss. His hand slid to the back of her head, his fingers burying into the gathered strands of her soft hair. When he nipped at her bottom lip, she gasped. And when his tongue slipped inside, dancing with hers, she moaned softly into his mouth again. \n\nGideon continued to kiss her, taste her, until she was moaning and moving closer, showing that she wanted more and that her arousal was building to match his own. He pulled the clip that held the front part of her hair secure on the crown of her head and watched as the soft waves cascaded to her shoulders, and whispered against her ears and cheeks before he brushed them back so that he could see her face, surrounded by the beautiful mass.\n\nHer hand found his thigh and squeezed, eliciting a moan from him, and moved him into action as he helped her scoot back over the quilt so that he could lay her back against the pillows propped on the headboard. His fingers caressed her cheeks and neck, smoothing over her hair as he bent his head to press another kiss to her lips. He was gentle but firm, showing her that he was in control, but in no hurry to rush this moment, either.\n\nVivienne's fingers rose to trace the contours of his neck, across the slight stubble on his jaw, up into his hair, as she returned his kiss. She felt his fingers slide down to her shoulder, over the wide strap of the bodice of her dress, and graze against her bare arm. She marvelled that, even through the dress and bra, she could feel the heat from his touch and ached for more. She almost willed him to cup her breast and ease some of the tension that she'd been feeling ever since they'd left their apartment. He was so close, yet he seemed to avoid any of her erogenous areas purposefully.\n\n\"You taste so good.\" His mouth covered hers once more, before moving to her chin, and along her jawline, to that sensitive spot behind her ear, before settling in the curve of her neck. His nose nuzzled, his tongue licking over her skin. He drew in a deep breath and let it out slowly, with a groan. \"You, your skin, your hair, smell amazing.\"\n\n\"Please, don't stop now\" Vivienne whimpered, her skin tingling as his warm breath travelled over skin wet from his kisses. \n\n\"I don't intend to,\" His voice was muffled as he sucked gently, before biting, and then licking away the sharp pains that resulted.\n\nVivienne gripped his arms, anchoring herself to him. His warm body pressed against her side, but she recognised the signs that told her he was in control of what happened in this cabin. She knew that he would never scold her for taking the initiative, and even encouraged it on some occasions early in their marriage, but her husband liked being in control and, she had to admit, she loved this side of him. Even though his pace was far too slow for her need at that moment, she took a deep breath and closed her eyes, sinking into the sweet sensations he gave her.\n\nHis mouth landed butterfly kisses across her shoulder and throat. When he pulled back, her eyes fluttered open. His eyes were fixed, but she realised that they were no longer on her face. She followed their path to the quick rise and fall of her breasts, pushing against the confines of the dress's plunging neckline. Her gaze returned to his face, just in time to see him lick his lips.\n\n\"If you want to save this dress so you can wear it again...\" His voice trailed off, as her hands immediately flew to the buttons running down the length of the dress and began to undo them.\n\nA soft chuckle escaped his lips as they brushed along her throat again. Slowly, methodically even, they covered every inch of skin. Sometimes, his tongue darted out, making her shiver. Her breath caught as he moved his head, inexorably lower.\n\nWhen his lips caressed the swell of her breast, she gripped the buttons she had made it to on her dress as her body arched up to him of its own volition, seeking more of his torment. The flat of his tongue stroked the flesh above the edge of her lacy bra, and the feeling of wet heat burned into her sensitive skin and brain. She felt his fingers trail along the curve of her cleavage, dipping into the space between her breasts before sliding under the edge of the bra. His tongue followed, and a moan rose from the back of her throat. Her nipples were so hard that they throbbed for his touch but, once again, he veered away from the sensitive nubs of pale pink flesh before making contact. She groaned in a combination of need and disappointment, making him chuckle softly again.\n\nHer body writhed, urging him to go just a little lower to where she wanted it. When she moved her own hands to ease the aching, Gideon shifted against her and grasped her wrist, raising it above her head. He rose enough to gather her free wrist as well and, holding both wrists with his right hand, he lowered his mouth to her breast again and resumed teasing the soft, plump mounds of her breasts, without touching the nipples.\n\n\"Please...oh, please, Gideon...\" she whimpered, not quite struggling against him, but needing more than he was giving. She arched up against his mouth, but he pulled away, looking up into her fevered eyes.\n\n\"What do you want, Beautiful?\" His breath caressed her wet skin and made her ache even more for him. \"Tell me what you want, use the words I like to hear you say.\" His voice was low and husky, telling of his own desires.\n\n\"Oh...\" Vivienne's voice trailed off as she blushed. Why couldn't he just read her mind? Why did he have to make her say it?\n\n\"This, maybe?\" His fingers grazed the underside of her breast through the bra, and she let out a purring moan in appreciation. \"Yes, I think that's it.\" He teased again, and then finally, his hand cupped her breast, squeezing gently. His thumb brushed over the peak. Even through the material, he could see that he had her so wound up that even the small touch sent shockwaves through her entire body.\n\n\"Oh, Gideon!\" Her eyes shot open, and she held her breath, staring at the ceiling but seeing nothing, revelling in the fact that he had finally touched her where she needed him to. She gasped as he moved his hand up and slipped a finger under the edge of her bra, then swept it over her nipple, stroking it back and forth. Heat rushed down her body, and her breathing quickened.\n\nHis lips brushed her ear, his breath making her shiver. She practically panted for breath when his hand slid further inside the bra, to cup her fully. His roughened skin added to her pleasure, as he kneaded her breast, before rolling her nipple between his thumb and fingers.\n\nVivienne turned toward him, her mouth searching for his. He kissed her and pushed her back into the pillows again, echoing her moan, as his tongue swept her mouth to dance with hers in a slow, teasing way.\n\nHe squeezed her breast one last time, then removed his hand. He released her wrists, slid his hands up over her shoulders, and pulled both the straps of her dress and bra down her arms, letting cool air brush over her now-bared chest, making her nipples tighten painfully, rising on the top of her breasts as if begging for his touch.\n\nVivienne shivered as his fingers slid over her breast, slowly lifting her arms back up above her head. When she felt him tie something around her wrists, her eyes opened wide. \"Gideon?\"\n\n\"Yes, Beautiful?\" he asked, as he kissed his way down her arm and over her breast, finally sucking her nipple into his mouth.\n\n\"Oh!\" She forgot what she was going to ask him, her nerves at being restrained wiped away with that one simple action. She trusted him, and she needed him. Her body arched against him, showing how much she needed his touch, and his mouth, on her body, like this.\n\n\"You are so fucking sexy, like this,\" he murmured, moving away from the breast he had just been lavishing his attention on and sitting up, to look at her with a dark, heated gaze that melted her insides. His eyes scanned her, eventually settling over her naked chest, her dress and bra resting just under her bust line. \n\nVivienne pulled gently at her wrists. She had never been tied up so tightly before, where she couldn't easily break loose. There was enough slack to let her arms relax against the pillows, but not enough that she could actually untie herself if she so desired.\n\nHer focus on the soft restraints was lost when he reached under her back and released the clasps on her bra and slid the dress down to her hips. She kept her eyes on his, watching the heat and desire in his eyes as he shimmied her dress down further, revealing more of her body.\n\nHe sucked his breath in when he unveiled the skimpy satin and lace panties, and he paused, gripping her hips and running his thumbs back and forth over the soft material. Resuming his undressing, he practically tore the dress from her and tossed it aside. His fingers slid over her calves, up to her knees, and then down again to remove her heeled shoes.\n\nWith his eyes raised to hers, and giving her a wicked grin, he slid his fingers under the edge of her panties and slowly pulled them down. Cool air brushed against her heat, and she couldn't help pressing her thighs together and squirming, as he sat back and gazed longingly over her now-naked body. He raised his hand as if he were going to touch her, but his hand returned to rest on his thighs. Eventually, he leaned back over her and brushed his lips against hers.\n\n\"Do you trust me, Beautiful?\" he asked her, in a rough, husky voice.\n\n\"Of course, I do. I love you and trust you completely,\" she whispered back, but couldn't help the gasp as his hands moved over her face, and soft cloth covered her eyes, blocking out even the smallest chink of light. She felt him adjust an elastic strap behind her head to keep the cloth in place like a sleep mask. She told herself again that she trusted him, as she felt her anxiety rise a notch higher. \n\nGideon kissed her and moved off the bed, his eyes lingering over her fantastic body, noticing her breath hitch as she found herself alone and wondering what was going to happen next. He smiled inwardly. This was going to be fun for both of them, but building her anticipation was feeding his desire like nothing else had to this point. He loved this cabin because, as he moved to prepare the things that he had brought with him, or asked for, when he told his cousin he wanted to use the cabin overnight, he could still see her and monitor her anxiety. He started by opening his phone and playing the soundtrack to 'Me Before You' softly, placing it on the side table near her head, to hide what he was doing.\n\nVivienne could actually feel his eyes on her. It wasn't that uncomfortable feeling you get when you think someone is watching you and then glance around nervously, trying to locate the culprit. Instead, she felt the warmth of his adoration of her spread through her. He had told her repeatedly, every day, how amazing he found her, how beautiful she was, how much he lusted after her sexy body and, even though she still found it a little hard to believe at times, he had shown her in every way possible that he meant every word.",
        "Her thoughts were just getting the better of her when the heat of his body brushed against her side, and the bed dipped from his weight. She gasped when his cool palm brushed over her right nipple and caressed her breast.\n\n\"Did you miss me?\" Gideon asked with a chuckle, leaning down to kiss her.\n\n\"Yes,\" she breathed into his kiss, wishing her arms were not bound so that she could pull him closer.\n\n\"No more talking. Just enjoy it.\" He kissed her quickly and moved away again.\n\nVivienne nodded and flexed her wrists and fingers in an effort to relax. Then she shifted her hips, rotated her ankles and wiggled her toes. She could hear his even breathing, and she strained to hear anything else he might be doing. Then she felt the lightest touch across both nipples. Vivienne moaned softly as they puckered and hardened, to what they had been before he had left her alone on the bed. The light barely-there sensation moved down, following the curve under her breasts and up her sides.\n\nIt felt like a feather, the tickling lightness of it grazing her skin like the softest fingertips. It flitted across her abdomen, outlined her ribs, and circled her belly. Her hips bucked when the tip grazed the crease between her thigh and pelvis. She shivered as he repeated the motion, moving out over her hip and slowly back again.\n\nGideon revelled in her reactions, as her legs widened when he moved his attention to them, even tickling the underside of her feet before following the same path back up her body. She arched up off the bed, as he once again teased her nipples with the feather-light brush that he held. He took the time to tease up her arms and over her neck, making her squirm and whimper deliciously.\n\nWhen she thought that she could stand the teasing no more, she felt him pull away from her again, leaving her body begging for his attention, and whimpers of need spilling from her mouth. The tickling sensation was back, but it was heavier, wet even, as it caressed her nipples one after the other. It disappeared again, and she felt the brush paint the wet sticky substance over her lips before it disappeared completely. \n\nVivienne licked out, tasting chocolate and wondering where it had come from, but all thought was lost when Gideon lowered his head to her breast. He began squeezing her breast as he lifted the hard bud to his mouth, then started licking and sucking hard on her nipple, as if he was starving. He repeated the process on her other breast as she squirmed, biting at her own chocolate-covered lips.\n\n\"Fuck, Gideon!\" Vivienne cried out as his teeth sunk into the flesh around her nipple as if he was about to devour her.\n\n\"Mm, there's the gorgeous sexy woman I love.\" Gideon moved up the bed to soothe her with kisses and murmurs of love, as he lightly caressed her stinging breast. \"What is it you need, Beautiful?\" he asked, as he laid down beside her again, his hand splayed out across her belly. He considered the other items that he had at his disposal but decided that they had the next twenty-four hours to enjoy each other, so he moved his hand lower on her body.\n\nVivienne sighed, her legs falling open as his fingers delved lower through her soft curls and along the seam of her pussy. Gideon slowly stroked his palm over her outer lips. Occasionally, one of his fingers delved deeper, teasing her as he had done with her breasts, never quite hitting the point she needed him to so badly. His hand paused, cupping over her mound, and two fingers pressed down, spreading the engorged lips and teasing at her entrance.\n\n\"Fuck, Gideon, I need... I need... more,\" she gasped.\n\n\"Yes, beautiful. I know what you need,\" Gideon crooned and circled her clit with his thumb, as the two fingers began pushing inside her. Her hips bucked, trying to force his pace, but he pulled back until she settled again. Moving to murmur softly in her ear, his fingers and thumb worked their magic on her. \"Relax and just feel,\" he crooned, lowering his head to her breast again and sucking hard.\n\nIt was the most exquisite feeling, finally having him touch her in just the way she wanted and needed. Without her hands or sight, she had no choice but to feel every exquisite touch of his hands and mouth. It seemed to take no time at all before her hands clenched, and her body was arching, and striving for release.\n\nShe groaned, throwing her head back into the pillow when he pushed two thick fingers hard and deep into her and then sucked her nipple between his teeth, grazing it harshly. His hand sped up, and the tightness in her belly increased, until she squeezed her thighs around his hand, crying out her climax. His hand stopped, but his fingers wiggled, still buried between her legs, as she rode out her long-awaited orgasm.\n\nWhen she'd caught her breath and was coming down from the high, he rolled away, and sat back up, not touching her again. She could almost feel the heat of his eyes warm her still-quivering body. He growled, long and low. It was one of the sexiest sounds she'd ever heard, and she whimpered in response, imagining the need in his eyes that went along with that growl.\n\n\"Still so needy?\" he teased her with a low chuckle.\n\n\"Yes,\" Vivienne hissed, arching up toward him. She loved the sound of his chuckle when his voice was made so deep and husky by lust. Despite her occasional frustrations at not having her hands or sight, this afternoon was making her hear details and nuances in her husband that she would otherwise have missed.\n\nGideon ran his fingers over her left breast, along the curve underneath, over the soft swell on top, before outlining the areola. He cupped and massaged her breast, his thumb and forefinger pinching her nipple, so that she had to bite her lip to stop from crying out, making him smile softly. He gently rubbed the hard nub back and forth, and then flattened his palm against it, easing the sharp sting of pain. His hand slid between her breasts and grazed over the right, delectable mound of flesh. His fingers played again, electrifying her skin and, when he pinched the nipple as he had done with its twin, she rolled towards him, wishing he'd put his mouth back on it again.\n\n\"So sensitive.\" he breathed, leaning so close that his breath washed over her cheek. His tongue ran along her jaw and moved up to her ear. \"So... fucking... amazing,\" he murmured, as his hand closed over her breast, easing the sting once again.\n\nMoving back down her body, he ran the flat of his tongue over her neck and shoulder to her nipple, revelling in the taste of her skin. He continued his path down her body, moving to kneel between her legs as he licked lower. He kissed her hips and then trailed his tongue down over her soft curls. His arms wrapped under her thighs, lifting them and holding them apart.\n\nVivienne moaned and shivered, feeling his warm breath blowing over her wet pussy. She gasped when his tongue darted out and flicked over her clit, helping her legs to spread wider as he raised her pussy closer to his mouth. His tongue darted out again, and she gasped in pleasure. His fingers massaged her thighs as he licked deeper along the length of her pussy. It was a slow, torturous pace, and she opened her mouth to beg again, promise him anything, if he just gave her more, more of what he knew she needed. \n\n\"Gideon.... Oh... fuck...\" Her words trailed off as he wrapped his lips around her clit and sucked hard, making her eyes roll, and her whole body tremble in pleasure, as another orgasm built like a tornado gaining speed. His hands moved to add to her pleasure, and she cursed her restraints, wishing that she could run her fingers through his hair. She'd never had such an assortment of feelings assailing her all at once.\n\nVivienne came for the second time when his fingers slid inside her again. He stroked and licked her through her orgasm, his mouth remaining latched onto her clit, his hot breath adding to the sensations. When he was sure that she was done he released her, lowering her legs to the bed.\n\nShe was panting. Her body felt on fire as if nothing he'd done so far had satisfied her completely, and yet she felt as if she had run a marathon with him. When he moved up the bed again, she turned her head to where the bed dipped, wanting to kiss him. His mouth covered hers, and she returned the kiss fervently, tasting and smelling her own sweetness on his lips.\n\n\"Relax, Beautiful, just relax,\" Gideon crooned and untied her wrists, rolling her to her belly.\n\n\"But what about...\" She began to ask about his pleasure, his release, when he silenced her again with another kiss, once she was settled on her belly. She felt warm liquid on her shoulder blades, and then the feeling of hands, spreading the liquid out over her skin.\n\nHe kissed her neck and began massaging her back and shoulders. His fingers slid through the oil, his hands gently pressing and pulling at her muscles, drawing moans and groans from deep inside her. These sensual massages aroused her more than they relaxed her and Gideon knew it. This afternoon was all about her, and he planned to ensure that they both enjoyed it. \n\nShe breathed slowly, remembering where else those fingers had just massaged her. When he finished with her neck and upper back, he worked his way along her arms to lace their fingers together, slick with oil. He squeezed her hands then pulled them back up above her head, retying the soft scarves, before working back down to her lower back and sides. She shivered when his fingers brushed against the sides of her sensitive breasts, making her moan louder in pleasure. Once again, he worked down her back, taking a long time on her ass before he began on her legs.\n\nHe finished with her feet and slowly slid his hands up the back of her legs, over her ass, pressing out along the back of her waist and hips and up her sides. His fingers grazed the sides of her breasts again, and then he lay flat on top of her, his mouth against her neck. He brushed her hair away and nibbled her right earlobe, making her moan.\n\nSighing in satiated pleasure, Vivienne wiggled her ass against him, feeling his hardness throb in return. She was hot and bothered despite the massage, and she wanted and needed more.\n\n\"Gideon?\" Vivienne whimpered and wriggled against his hard cock again.\n\n\"Yes, Beautiful?\" He sounded amused. As if he was expecting this. He pressed back against her ass.\n\n\"Please?\" she whimpered\n\n\"Please, what?\" He licked at her neck.\n\n\"Please...\" she whined, trying to decide on the best words to use to get what she wanted and needed.\n\n\"Hmm?\" He stood up, shedding the last of his clothes before he sat beside her again. His hand stroked her lower back and caressed her ass. \"What do you want, Beautiful?\"\n\n\" I want to see you, please let me see you,\" she begged softly. His hands caressed her cheeks, before rising to slip the blindfold off.\n\nShe had to blink several times to adjust to the light in the room. Her eyes drifted down, and she felt the same fluttering low in her belly whenever she took in the hard cock of the man she loved. It lay across his thigh, hard, thick, and she knew he would be hot to her touch if she had her hands free to stroke him. \n\n\"Is that all?\" His hand moved back to her ass and lower, stroking the inside of her thighs.\n\n\"No,\" she whispered and squirmed.\n\n\"What do you want, Beautiful?\" His voice was softer, huskier.\n\n\"You. I want you. Please, Gideon.\" She forced herself to swallow and closed her eyes. \n\n\"This?\" His fingers slipped up between her folds, rubbing against her clit.\n\n\"More.\" Vivienne gasped in pleasure. \n\n\"This?\" He stroked slowly. His fingers delving inside her warm, slick hole. \n\n\"More\" Vivienne pulled her knees beneath her, lifting her ass and exposing more of her pussy to him.\n\n\"How about this?\" His voice was a hot whisper in her ear.\n\n\"Oh, please, yes!\" She cried out when she felt him press his cock against her, stroking it back and forth between her folds but not entering her.\n\n\"What do you want me to do next, Beautiful?\" Gideon asked, wanting to hear the words from her gorgeous lips.\n\nVivienne's tongue froze. It wasn't that she didn't know what to say, but, until she married this man, she had only thought dirty words in her head. She found it so hard to say the words that he wanted out loud, even in the privacy of their bedroom. \n\n\"Do you want me to fuck you, Vivienne? Do you want me to fuck you really slow?\" Unable to hold his own need back for much longer, he gave her the out that she wanted, with his own words. He leaned across her back, his cock resting between her ass cheeks as he whispered in her ear. \"Do you want me to put my cock inside you and fuck you slow and gentle?\"\n\nVivienne blushed deeply and bit her lip as she nodded furiously. Despite being so aroused after all his foreplay, she knew that the first stretch to accommodate his cock would be uncomfortable, but she welcomed it at times like this when she was so ready for all he could give her.\n\nHe chuckled, sat up again, and grasped her hips in his strong hands. He nudged her knees further apart with his own, and, as they slid further apart on the sheets, he pressed slowly into her. He loved this position and, listening to her melodic whimpers. He watched his cock disappear into her warm and welcoming body, so slowly that it was excruciating for both of them.\n\nVivienne burrowed her face into the pillow as, just as he promised, he very slowly stretched and filled her hot, wet pussy to overflowing. She felt the hard, throbbing heat once he was fully inside her and he stilled, before slowly moving, while she adjusted to him and the pleasure she felt. Oh, the pleasure! Tremors rippled through her.\n\nHe worked his way slowly and gently, out a little, back in; out a little more, all the way back in, until he was sliding easily so that just the head of his cock remained inside. With both of his hands gripping her hips, he moved her body, with his strokes easing in and out of her. He got into a rhythm, occasionally stopping to press all the way in, pausing to give an extra-deep push, burying his balls against her ass, making her moan louder.\n\nVivienne lost track of time, just enjoying the sensations - his hands on her body, his cock inside her, her heart racing and the sounds of their combined heavy breathing. She thought that she heard his demanding questions again, but couldn't make sense of them anymore because she was so focused on the increasing pressure building within her, that told of her approaching climax. He had not increased his speed throughout, and that seemed to intensify the entire experience and draw out the pleasure.\n\nGideon shifted his position slightly, to hit that spot that he knew would send her over the edge again, and was rewarded as she lifted her head and cried out for him. She pushed back against him of her own volition now, and he curled one of his hands around her thigh to her swollen clit, determined to force another, bigger, orgasm from her before he was done.\n\nOver and over again, he slid deep into that perfect spot. The edge got closer rapidly as he started stroking her clit, and then she tipped over, crying out in a hoarse, guttural way as her body jerked and spasmed with the waves that rolled through her in a never-ending tide of pleasure. Her head fell back on to the bed, and he continued to stroke, whispering words of encouragement. She barely made sense of what he was saying, but his deep voice was comforting.\n\nGideon gripped her tighter. His hips slammed into her over again, as her pussy gripped and milked at his cock, in one of the longest orgasms he had witnessed her having. His fingers moved, and he fucked her harder and deeper, in an effort to prolong it further. It didn't seem long enough before his balls tightened, and a hot stream filled her deep inside. He growled out his pleasure and frustration, and she cried out with him, her body reaping the rewards of his efforts. \n\nWhile she shook beneath him, Gideon reached above her and untied her wrists, pulling her back against his chest, one of his hands moving around her to cover her breast and caress it. His other hand dropped down to cup her mound, his fingers slipping between her thighs to rub her clit, while he wondered if she could possibly have any more to give him this afternoon.\n\nVivienne came a fifth time. It was nowhere near the high that she had experienced as he fucked her and, at some point, she pushed his hand away from her clit, begging for mercy. Gideon lifted his fingers to her lips, letting her taste her own sweetness, as he scattered kisses along her shoulder blade and just held her spooned against him until her breath evened out and he knew that she slept. \n\nHe smiled, thinking of how well she took to the wrist restraints and blindfold. He would never push her too far. In all honesty, he wasn't into the hard-core stuff that so excited his brothers. He had no desire to hurt Vivienne or make her cry, in anything but pure pleasure. But pushing her, little by little, towards restraints and giving up her control to him entirely, was a rush like nothing he had felt before. Gideon fell asleep thinking about the rest of the time they had in this isolated cabin and what he planned to do with the gorgeous woman, who slept so peacefully in his arms.\n\n \n"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "brothers",
        "dominance",
        "family",
        "submission",
        "romance"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-21"
}