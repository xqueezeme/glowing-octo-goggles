{
    "title": "Holly's Seductive Toes Ch. 02",
    "pages": [
        "As I suspected, sleep did not come easily for me for the next several days. Every time I tried to get some sleep, all I could think about was Holly...about her feet, her delicious love nest, how she pulled me to her and finally gave me my much needed release. Sleep was impossible, even though in my heated state I was constantly engaging in some auto-erotic activity just to ease the frustration. Even after giving myself orgasm after orgasm, I still couldn't get her out of my head (either one!) long enough to get any decent sleep. The anticipation of meeting her again was making me a wreck.\n\nI had the hots for her so bad that I kept her silky stockings under my pillow every night. I spent many long minutes - hours even - sniffing and kissing them, rubbing them blissfully all over my face. Often I licked along the toe seams, and along the reinforced strips to the heels. I remembered how incredible that toe seam looked while she rubbed her feet in my face. I even found myself putting my hands inside them and rubbing the foot portion on my throbbing penis, imagining that it was Holly's sexy toes and soles rubbing me to orgasm. But I was always careful not to get my cum on those stockings. I wanted them pristine...with no scents on them but Holly's. Somehow, soiling them in any way seemed almost sacrilegious. I thought that anything that was lucky enough to be worn by Holly deserved to be treated with the utmost respect and awe. To be honest, I actually WORSHIPPED those stockings, touching and kissing them reverently over and over for hours at a time, wishing her legs and feet were still in them.\n\nSo, sleepless and dog tired, I waited and waited for Thursday to come. The clock never seemed to move. The second hand crawled along with an agonizing slowness that drove me insane minute by minute. My days and nights had become a painful blur of dreaming about Holly and sniffing and kissing her stockings. Nothing else mattered. My dad was worried about my haggard state, but my mom just comforted me as much as she could. She just figured I was in love, and what I was going through was perfectly normal. Ha! If she only knew.\n\nThough my mom thought I was in love, it was much more like lust...even obsession. Once I'd gotten a taste of Holly's incredible feet and soft, lickable quim, I was hooked. I'd do almost anything to taste either of them again. It was all that filled my brain...all that I thought about. I was barely able to get through my classes.\n\nWhen Thursday finally came, I was fumbling all over myself with anticipation. I wasn't even that bad the first time I met her, but somehow PLANNING to meet her again, knowing that I was now officially her \"foot boy\" and \"pussy boy\"...well, that made it all completely different. Besides, she had left me with the promise of introducing me to all kinds of kinky pleasures...mostly hers, of course, but enough left over for me to make me blissfully unaware of the inequity in the arrangement. It wouldn't have mattered if I'd allowed myself to acknowledge that inequity anyway. My submissive side reveled in the idea of giving Holly all the pleasure she demanded, while accepting whatever crumbs of satisfaction she might dole out to me. Those seductive feet and sticky sweet flower - and hopefully at some point the rest of her body as well - were enough to keep me coming back again and again. She was the Foot Goddess of my dreams, now made real and touchable.\n\nFinally, Thursday arrived. I drove to McDonald's. I waited in the parking lot for her to show up. My hands were wringing the life out of the steering wheel. I was sweating and shivering. I kept seeing her slowly, tantalizingly using one foot to remove the shoe from the other. I could almost smell her stockings, the subtle scent of her bare feet. My tongue moved around in my mouth as if tasting the slickness between her legs. I squirmed in my seat, a burning, itching throb between my thighs.\n\nThen I saw her car pull into the entrance. My heart raced. My breathing became labored. I shivered even more. It was almost as if my mind was warning me that Holly wasn't good for my health...that she was planning to eat me alive....chew me up and spit me out. I didn't listen. I didn't care. I welcomed the devouring with open arms...and throbbing loins.\n\nShe pulled her car up in front of mine, rolled down her window and smiled wickedly at me. She was not the least bit surprised to see me waiting there for her. She KNEW I wouldn't stand her up. Still grinning, she motioned with her finger for me to come to her. I could almost see her licking her lips.\n\nAs I opened my car door and got out, my mind was telling me that I was responding to a command not unlike someone who says \"Here, boy!\" for their dog to come to them. As usual, I didn't listen to my brain. Or, again, I didn't care. I was going to enjoy the wicked Holly as much as I could...or as much as she'd allow me to. It was all that mattered.\n\nI closed and locked my door. I walked around to the passenger side of Holly's car, opened the door with a sweaty, trembling hand, and dropped myself weakly into the seat. I was still shaking all over. Just seeing her again was making me burn with desire. I tried not to show it, but that was impossible. Even if I wasn't a walking bag of hormones, Holly would've seen through my act immediately.\n\n\"Hello, foot boy,\" she cooed, grinning that grin that made me sweat.\n\nRemembering her preference, I replied, \"Hello, Goddess.\"\n\n\"You remembered. Very good. Are you ready to please your Goddess tonight, foot boy?\"\n\n\"Yes, Goddess,\" I replied, the words breaking up a bit as I found myself swallowing hard.\n\n\"Wonderful. I've got some delightful things planned for tonight. But first, let's get dinner. And since you're a college boy and more than likely on a tight budget, dinner will be my treat. But...you'll have to pay me back in other ways. I'm sure you won't mind.\" Her grin could've turned granite to putty...except that it had the reverse effect between my shaking legs. Before turning back to the wheel to drive off, she added - to herself or to me, I wasn't exactly sure - \"I've so much to teach you.\" Her pink tongue licking those moist red lips caused my sweat glands to kick even further into overdrive, not to mention OTHER already churning glands that were doing the same.\n\nWith that, she drove off, pulling out of the McDonald's parking lot and onto the main road. It was still light out, and I thanked all the powers that be for that, because I got to look at her as she drove. I didn't even care where we were going. I just wanted to gaze longingly at her. I was finally with her again. What else could possibly be of any importance?\n\nThis time, her long, shiny black hair was curled into a tight bun on the top of her head. Her make-up was the same as the first time I'd seen her, though her eye shadow seemed a shade or two darker...more mysterious. She wore a silky red blouse, very low cut, and extremely tight stretch pants, which I wasn't surprised to see were black. At her ankles, sheer smoky stockings snugly hugged her legs from there to her toes. I couldn't see much above her ankles because of the tight pants, but I imagined my eyes could see those stockings as they kissed her calves and thighs all the way up to Nirvana.\n\nAs I looked further down, below those well-turned ankles, I noticed with surprise - and unexpected pleasure - that, except for the stockings, Holly was barefoot as she drove. My eyes focused on the sheer toes as they pressed down on the metal and hard rubber pedal, noting that these stockings were not reinforced as were the ones I was now lucky enough to own. At least not a thick dark area that fully covered the toes as with the other pair. Rather, this time the toes were as sheer as the rest of the stocking, with only a thin seam that ran along the tips of Holly's toes....toes that were still as brightly painted as they were several nights ago. I watched those feet as they controlled the car...thinking how much the car and I had in common, being so easily and unerringly controlled by Holly's feet.\n\nI heard a laugh, and looked up, reluctantly. \"I always drive barefoot,\" she said. \"You like watching me drive like this?\" she asked, her dark eyes twinkling. As I looked into those mesmerizing eyes, I realized something. When Holly asked you a question, or just expected any kind of verbal response from you at all, her eyes would bore into yours and not waver from them until she got an answer.\n\n\"Well,\" I said, trying to catch my reath, \"what's not to like. You know I adore your feet.\" I was trying to sound calm, even suave, but, in retrospect, Holly saw right through it. I was only fooling myself, and not even doing that very well.\n\n\"Yes, you most certainly do. And I like that about you.\" She paused for a minute, then continued. \"I'll bet,\" she said, the twinkle in her eyes becoming more mischievous, \"you'd love to get down there and kiss them even while I'm driving. Wouldn't you, foot boy?\"\n\nI tried to answer her, in the affirmative, of course, but I found myself needing to swallow. Before I could get my senses about me and reply, Holly plunged onward. \"So, go ahead, if you want to. Get down there and kiss my feet while I drive. Just don't get in the way of my driving.\"\n\nI had missed her feet so much that I wanted to kiss them badly, almost desperately. I looked over at her, wondering if she was serious. Silly me. Of course she was. And I was also silly to think that Holly was \"letting me\" do something if I \"wanted\" to. She made this clear to me almost instantly.\n\n\"Foot boy...I said you could kiss my feet. I'm giving you a rare honor here. If you think my feet aren't worth kissing when I say you can, then we can nip this evening in the bud right now. Do you want to worship my feet or not?\" Her brow had furrowed and the smile was gone. Clearly, Holly did not like hesitation when she wanted something from her \"foot boy.\" I got the picture...crystal clear, and in ultra high resolution. Nothing Holly did was ambiguous at all. She was always straight to the point...like the pointed tip of an archer's arrow.\n\nThere wasn't a lot of room, but I managed to get down on the floor and twist myself into a position where I could get my head under the dashboard below the steering wheel. Straining, I got far enough down near the floor that I could kiss the instep of the foot nearest to me, the one pressing down on the accelerator. I heard Holly giggle somewhere miles above me. \n\n\"Mmm...very nice. You may keep kissing, foot boy. I love how your breath feels on my foot. And when I stop at this light up here, I'll bring my other foot over and you can kiss it, too.\"\n\nAlready lost in kissing her foot, I replied, \"Oh, yes, Goddess.\" Her toes wiggled, and I took that to be a sign of her approval.\n\nTrue to her word, the car slowed to a halt. Over came a second nylon clad foot, the toes caressing the side of my face. Even in my awkward position, I held that foot in both hands and kissed it reverently. I savored it's scent and the feel of the stockings on my hands and mouth. It was a sensual smorgasbord for my eager fingers and adoring lips. Not unexpectedly, I again became lost in her sweet, shapely peds. I ended up nuzzling my face in the warm softness of the undersides of her toes and the ball of her foot, sighing away in my ecstasy. \n\n\"Before the light changes, kiss all ten of my toes. Hurry up, the light's about to change.\" Clearly, she was playing with me, having such great fun with her brand new foot toy.\n\nI kissed ten times in rapid succession, first the foot I held in my hands, then leaning down to kiss the toes of the one now on the brake pedal. I could hear Holly's tinkling laughter above once more.\n\nAs that laughter rained down on me like confetti, I suddenly realized the position I was in. I'd always thought of myself as a proud, strong person. Yet...here I was, twisted at an awkward angle on the floor of Holly's car, my head barely able to squeeze under the dashboard, and I was kissing her feet like an adoring puppy. The thought pierced my brain like a bee sting. My pride had abandoned me in a heartbeat at the simple thought of kissing Holly's toes. That was the exact moment when I fully realized the lengths I would go to to be close to her. It was a sobering thought. Young and cocky, here I was, humbled at Holly's feet. And, surprisingly, it couldn't have felt more right.\n\n\"Now sit up, foot boy,\" her words broke my self evaluation. \"Sit on the seat again. That position you're in looks awfully painful.\"\n\nI sat up on the seat, my back, hips and neck aching slightly. But my eyes were still adoringly locked on her feet. I didn't even see her looking over at me and smiling. With a mocking tone, she said, \"Well, foot boy, what do you say?\"\n\nI was confused. I didn't know what she wanted me to say. I thought for a moment...what would Holly WANT me to say? And then it came to me. \"Thank you, Goddess,\" I ventured, hoping that would make her happy. Apparently, it was exactly what she was looking for. She smiled and nodded.\n\n\"You're welcome, foot boy. Now don't worry, you'll get a much more thorough taste later.\" I could see the satisfied ear to ear grin as she looked forward, guiding us through traffic.\n\nI tried to focus on where we were. We'd been driving a while, and I had lost track of turns and direction while I was on the floor. Holly noticed me trying to get my bearings and said quickly, \"Don't worry, I know where we are. We're not far from the restaurant. Before we get there, there's something else I want you to do for me.\"\n\n\"What's that?\" I ventured, warily.\n\nShe grinned over at me. \"I want you to take your cock out of your pants. Show me that lovely tool of yours.\" When I hesitated, she laughed, \"Well, go on...it's nothing I haven't seen before.\"\n\nStill dazed at the request, I grabbed my zipper tentatively, then looked back up into Holly's eyes. She nodded. \"That's right, take it out. I want to see my foot boy's cock. Show it to me right now.\"\n\nI unzipped. My penis was already pretty stiff after kissing her feet, so I had to pull my opened jeans up and away from it to have room to get it out into the open. When I got it out of my pants, I held it for a second, then let it lay on my lap.\n\n\"Mmmmm...very nice. All nice and hard, too. That's from kissing my pretty feet, no doubt.\"\n\n\"Yes, Goddess,\" I replied, embarrassed and excited at the same time.\n\n\"I like that. Just a few kisses on my feet can get you nice and firm like that. That's so wonderful.\" Almost without taking a breath, she moved on. \"Now,\" she said, \"stroke it for me.\"\n\nAgain I looked at her as if I didn't understand. She simply smirked.\n\n\"What AM I going to do with you?\" she asked, giggling. Then, as if talking to a child, she spoke slowly, enunciating each word. \"Hold...your...cock...in...your...hand...and...stroke...it,\" she stated, boldly as you please. Her eyes were locked on mine as I absorbed what she said. Slowly, my right hand grabbed the already swollen shaft and began to lightly stroke up and down. I was embarrassed as hell, to say the least.\n\nSince she was having trouble navigating through traffic and watching my busy hand, Holly slowed the car and pulled off the road into a small Handi-Stop. She steered to a back corner of the small lot, away from the other cars. I stopped stroking, thinking someone might see.\n\n\"Don't stop,\" she said. \"I love watching you play with yourself. It's so sexy.\" Then she leaned over and kissed me on the cheek. \"You are just soooo much fun, Tom. You are the perfect foot boy. I feel like I can do anything with you.\"\n\nWe sat in that parking lot, Holly watching me stroke myself, and me watching for nosey passersby, for maybe ten minutes or so. Then Holly decided to change the scenario a bit. While I stroked the shaft of my penis, she reached inside my shirt and played with my nipples. She added a little ear licking to the game, also. But, then, just that quickly, she decided on an entirely new way to tease me.\n\n\"Mmmm...I have a wonderful idea, foot boy. Stop stroking for a minute.\"\n\nI stopped. When Holly leaned down between my legs, I thought she was going to take my throbbing cock in her mouth and suck me dry. Silly me. She was reaching down between my legs for something on the floor in front of my seat. When she realized what my thoughts must have been, she grinned up at me, sticking her tongue out and licking just the very tip of my pulsating head. After that, she kissed the tiny slit and sat up, smiling. It was such a wicked smile.\n\nIn her hand she held the prize she'd sought on the floor. It was one of her open-toed, high heeled pumps...a dark red to match her silky blouse. Her grin widened. \"Take your hands away,\" she said.\n\nNo sooner had I removed my hand from my cock, than she eagerly slipped the shoe down over the blushing head. Holding the shoe in her left hand, she grasped my penis in her right. Keeping my engorged tool steady with her hand, she slowly slid the shoe up and down its length, the underside of my shaft gliding along where her soft, warm sole had rested maybe an hour earlier. The top two inches of my cock slipped under the overstrap of the shoe repeatedly, the slim back of the heel rhythmically tapping against the front of my still mostly concealed sack. My pink helmet popped out the open toed area, then slid quickly back down...over and over again...as the amused Holly stroked me gleefully with her shoe. The shoe itself, however, was not the ultimate turn on for me. It was knowing that her gorgeous foot had recently touched where my penis was now rubbing that drove me crazy. And she, of course, knew this full well.\n\n\"You like that, foot boy? You like wearing my sexy shoe on your cock?\" Her smile jeered at me, her eyes mocked me. \n\n\"Yes....yes, I do,\" I forced from my lips, my eyes riveted on the rising and falling shoe as it stroked me.\n\nWhen I was able to look over to Holly's grinning face, I saw still more evidence of her seductive ways. She had purposely positioned herself so that the forearm of her right arm was under her bosom, pushing her breasts up and almost out of her low-cut, flimsy blouse. Somehow, at some unknown time (more than likely while I was kissing her feet earlier), she had unbuttoned the top button of her blouse, and her glorious breasts were now not only almost spilling out, but her large, pink nipples were just about completely out in the open. When I saw this, my firm member became still more so, and throbbed just that much harder against the rising and falling shoe.\n\n\"I'll bet you'd love to come right now, wouldn't you, foot boy?\" Holly cooed, licking her grinning lips.\n\n\"Yes, ma'am...Goddess...I would love to.\"\n\nSuddenly, she sat up, whisking the shoe off my penis. As her stabilizing hand released my shaft, she leaned down to quickly give the head a kiss. Straightening out her blouse, she buttoned it, covering up those peeking nipples. My cock stood there, throbbing at full attention, wanting more. I could barely breathe, and the shock of the sudden cessation of....stimulation...made my whole body shudder. Holly dropped the shoe back onto the floor.\n\n\"No,\" she said simply, \"you can't come yet. If you do, you'll just lose interest. And I have so much more planned for tonight. I'll let you come later, though...if you please me really well. But, then, I'm sure you will.\" She winked and sat behind the steering wheel again. She started the engine, and just that quickly we were back on the road...as if this little diversion had never happened! I was sweating all over, and it felt as if every inch of my body was flushed, not just my face and cock. \n\nDisappointed, I started to put my frustrated penis back in my pants. \"No...leave it out,\" Holly smiled. \"I want to be able to look over at it every now and then. We'll be at the restaurant in less than five minutes. You can put it away then. And don't stroke it anymore, either. You might NEVER get it back into your pants! And after all,\" she laughed, eminently amused with herself as she added, \"it wouldn't do for you to walk into the restaurant with your dick hanging out, now would it?\"",
        "I laughed, too, though my heart wasn't in it. Frustration isn't a good precursor to humor. My launch sequence had been initiated, and the boosters, though not yet at full blastoff level, were nonetheless having trouble powering down. Which, again, amused Holly no end.\n\nI sat there throughout the remainder of the drive with my penis hanging out of my pants. Every now and then, Holly looked over at it, smiling at it's slowly deflating state. Her twinkling eyes would then look up into mine. Her eyes held all the power, mine held only compliance. \n\n\"We're here,\" she said, finally. I looked around and saw the rustic looking restaurant with it's country store appearance. It looked like a large log cabin. \"They have the best food here,\" she said, \"and nice roomy booths where I can play footsie with you.\" She winked. \"Now,\" she said, pointing, \"put that away. I'll play with it later. Right now, let's go eat. I'm famished. But first, gather up my shoes and come around to my side of the car and put them on my feet for me. And open my door for me like a perfect gentleman.\"\n\nI found both her shoes and did as she \"asked.\" I fumbled with the driver side door, because my hands were shaky and still sweating just a bit. When I finally got it open, she swung around on the seat, an amused grin once again inhabiting her face. When I knelt on the asphalt beside her to place her shoes on her feet, she said nothing...but with a sudden flurry of movement, I unexpectedly found my face full of nylon and wiggling toes. Holly laughed gleefully as she pushed both feet into my face, shoving her toes against my nose and mouth, forcing my head backward. I wasn't prepared for it, and fell backward against the door, gaining my equilibrium only an instant before flailing wildly to the ground. Even as I was on the verge of falling on my back on the pavement, my only thought was to protect Holly's shoes from getting dirty, so I caught myself with my empty hand.\n\nNot one to let my surprised state deter her, Holly once again propelled her arrogant feet directly into my face, this time not quite as hard, perhaps, but still determined to have their way. As I gained my balance and focused, she continued as if I'd never been taken by surprise at her dual soles-in-the-face attack. \"Sniff my pretty feet, foot boy,\" she chortled. \"Sniff sniff! Get a good whiff! You know you want to!\" She was excited, giddy. As she mashed my face with her demanding toes and soles, she was laughing so hard that tears began to stream from her eyes and she could barely catch her breath.\n\nI finally captured her feet with my hands and held them firmly. Her shoes dangled by the heels in my left hand, so my right had a firmer grip on her left stockinged foot, just behind her ankle. With Holly laughing in the background, I pressed my nostrils against the undersides of her toes and inhaled their scent. She enjoyed every second of this...very, very much...for she sighed even as she giggled. I was sighing, too, once again bathing her feet with my panting breath.\n\nBut since power was Holly's thing, she didn't approve of the fact that I'd taken control of the foot sniffing. SHE wanted to be the one running the show. So she quickly wrenched her feet from my hands and immediately shoved them back into my face the way SHE thought it should be done. Once again she smashed them into my mouth and cheeks, rubbing her nyloned soles briskly all over my reddening face. Her evil cackle rose in a seemingly never-ending crescendo, which began to worry me since we were in a restaurant parking lot.\n\n\"Mmm...good boy. I just love how eager you are to make me happy. Now you can put my shoes on, and we'll go eat.\" Apparently, Holly's whims were appeased for the moment. But, for just a few seconds before letting me put her shoes on her feet, she rested them on my shoulders, a self satisfied grin on her face as she examined by pink face and disheveled hair.\n\nShe finally lowered her feet and allowed me to encase them in their sexy high heeled pumps. Then I stood up and backed away, holding the door open for her. She got out of the car, still smiling widely, and kissed me on the cheek. Together, we walked toward the restaurant. As we walked, Holly reached behind me and squeezed my ass, openly groping both cheeks one at a time with her right hand. She had a definite spring in her step. She only stopped fondling my butt long enough to smooth out my hair where her feet had made a mess of it. When that was done, her hand returned to its fascination with my buns.\n\n\"You'll love this place,\" she said, \"and I'll want you to kiss my feet throughout the meal. And I'll be playing with you in other ways, too, just to get you hot and horny for later. I love when men are horny. They're so easy to control when they're like that.\"\n\nWhen she saw the concerned look on my face, she added, \"Oh, we'll try to be discreet, of course. But if someone should catch you smooching my toes, I don't consider that a valid reason for you to stop. The way I see it, you should never be embarrassed to kiss my feet...no matter who might see you. I think keeping me happy should be more important to you than your own macho pride. Don't you agree?\"\n\nAgain those dark eyes locked onto mine. They waited for their answer...and it had damn well better be the RIGHT answer, too. My tongue was dry and stuck to the roof of my mouth, so I just nodded my agreement, though a cold shiver shook me to the core. I'd just given Holly, the High Queen of the Underworld, a green light to humiliate me in public if the whim struck her.\n\nI tried again to say something to her - I don't know what, for I knew it was no good to try to contradict her - but we'd gotten to the entrance, and Holly was already looking at me with that \"Well....why aren't you doing such and such?\" look of hers, expecting me to do something. I squelched my unspoken comment, and in a second or two I realized she wanted me to open the door for her. Fumbling again, I grabbed the long wooden rod in the shape of a miniature building log that was the door's handle. I pulled the large oak door open, holding it for her as she strutted through to the dimly lit interior of the Boogaloo Crick Ale and Steakhouse. As always when I was with Holly, I was filled with both apprehension...and a vibrant tingle of excitement.    Thursday evenings were apparently only a moderately busy night for Boogaloo Crick. Although there was quite a bustle of activity going on, there was no wait to be seated. As the waitress was gathering up menus in preparation for seating us, Holly took her aside and spoke quietly to her, glancing over at me as she did. The waitress looked at me, too, then nodded and smiled. When she got us to our table and slid the menus onto it, she looked at me one last time, still smiling. \n\n\"This private enough?\" she asked Holly.\n\n\"Yes, thank you,\" she replied, \"this'll do nicely.\"\n\n\"Great,\" the waitress said, \"would either of you like something to drink to start off?\"\n\n\"I'll have coffee, thanks,\" Holly said, slipping her purse off her shoulder and putting it on the seat of the wood and fabric booth. \"Do you want anything, foot...uh...Tom?\" she asked, covering her amused lips with manicured fingertips at the near slip. With an undisguised smirk on her face, she sat in her seat next to her purse.\n\n\"I'll have coffee, too, thanks,\" I said, sure that I had to be blushing. I looked into Holly's eyes, wondering if the near slip was on purpose or not. Was it an accident, or just another way for her to embarrass and humble me for her own amusement? I sat in my own seat, across from her, still looking into her dark, mischievous eyes.\n\nOne last time the waitress smiled at me...a knowing smile that sent a chill down my spine. When she finally walked away, I could swear I heard her chuckling quietly, see her shoulders bobbing with the force of that stifled laugh.\n\n\"What did you say to her,\" I asked as soon as she was out of earshot, \"when she was getting the menus?\"\n\n\"Oh,\" Holly replied with a grin, \"I just told her you're my boy toy for the evening, and that we wanted privacy...that's all.\"\n\nI looked at her, shocked, though I don't know why that shocked me. My wide eyed look apparently once again amused her, because she said in a motherly tone, \"Oh, relax, I never said you were my foot boy...or that you'd be licking my toes during dinner...or...\" she winked, \"licking something else AFTER dinner.\" Her tongue snuck out between her smiling lips and her eyes twinkled. She was once more enjoying herself immensely. All I could do was blush and look away, embarrassed but turned on more than likely as much as Holly was.\n\nThe next few minutes we engaged in small talk. Holly wanted to know if I'd missed her since our first meeting, and I told her I had. She liked that. She also asked me if I still had her stockings, and I must have blushed when I said yes. She pried and prodded until I admitted that I slept with them and spent a good deal of time worshipping them. Her eyes lit up like neon lights when I admitted that. But she didn't make a big deal out of it...just stored the information, as she did so much information. Holly never seemed to forget anything....especially if it was something that could turn out to be useful later.\n\nI was probably still blushing from my stocking confession when the waitress returned with our coffee. She smiled politely as she handed Holly her steaming cup and creamers, but once again grinned knowingly when she gave me mine. Now knowing what Holly had told her about me, my crimson hue must've increased fourfold as I noticed those informed eyes twinkling almost as impishly as Holly's own.\n\n\"Ready to order?\" the waitress asked, still smiling, looking me up and down as if I was one of the entrees on Boogaloo Crick's menu.\n\n\"I believe we are,\" Holly replied. She immediately ordered her meal and when through, handed her menu back to the waitress. I followed suit, ordering what I wanted. With a slight tremble in my hand, I also handed my menu back to the waitress. I smiled a sheepish smile, and the waitress's returned smile was a tightlipped one that fought desperately to hold something back. I could only guess what. Off she went to give the chef our orders so she could eventually, hopefully soon, bring us our food.\n\nThe waitress wasn't gone thirty seconds when I heard Holly's shoes clunk to the floor. I looked into her eyes and she smiled. \"I see your radar is still working just fine,\" she grinned. I blushed again, but I was by now getting used to being embarrassed in Holly's presence, so I don't think the hue was nearly as intense as in the past. At least my face didn't feel quite as hot this time.\n\nI felt two distinct thumps, one on each of my thighs. I knew what I would see when I looked down, and I was exactly right. But I didn't congratulate myself, because it was pretty much a no brainer. There, frolicking to and fro on my lap, were the two feet I'd come to know quite intimately in just the past few days.\n\nI looked at Holly's twinkling eyes. \"You know what to do,\" she said, \"massage my feet while we wait for our food. And give them a really nice rub...firm and soothing. There's nothing in this world better than a really forceful foot rub. My feet can really use some t.l.c. right now.\" She waited about ten seconds, her smiling at me, and me smiling back...and then giggled, saying, \"Hop to it, foot boy...rub my feet. Get cracking.\" Being bossy seemed to charge Holly's entire body with crackling energy, a kind of kinetic energy that hummed inside her until it found the proper outlet. I wondered with mixed dread and anticipation just what that outlet would eventually be.\n\nInstinct made me look around as I took her feet one at a time in my hands and massaged them. Holly sat back and cooed and sighed, being none too quiet about it. So, though I kept rubbing, I also kept looking around to see if anyone was noticing either my hands on Holly's feet, or her undisguised sighs and moans.\n\n\"Oh, you are such a good foot boy,\" she said aloud, making the hairs on my neck stand on end nervously. A chill shot down my spine as my eyes darted from corner to corner of the restaurant, knowing that SOMEONE must've heard her say that.\n\n\"Oh,\" Holly said, smirking, \"did I say that out loud? I'm such a bad girl.\" She made no attempt to hide her giggle, watching with joy as I squirmed in my seat. Then, in a whisper, she added, \"Is this better, foot boy? After all, I wouldn't want my foot boy embarrassed that he's rubbing my feet in a public place, now would I?\"\n\n\"Holly,\" I fumbled, \"I'm not embarrassed to rub your feet...honest. I'm..well...proud, actually. It's just that...well....\"\n\n\"No need to explain, hon. I fully understand. I just enjoy making you fidget and worry. It keeps you humble. I like my men humble. But, then, you know that. I'll try not to be quite so vocal anymore.\" The wink that followed led me to believe that the impish Holly wasn't being entirely truthful.\n\n\"Oh...thank you.\" I breathed a cautious sigh of relief. Even as I thought I'd gotten off easily, another chill danced along my spine...for Holly was again grinning. With all the grinning this woman does, I thought, how is it her mouth isn't frozen in a PERMANENT smirk?\n\n\"You're quite welcome, foot boy,\" she said, in a louder whisper than I would've liked. \"But, since I was so nice to you, you can be nice to me in return.\" Another shiver backpacked from the base of my skull to the tip of my tailbone. I looked at Holly, knowing I was in trouble.\n\nHer feet jumped from my hands. I looked down, beads of sweat racing downward from my temples. Holly had lifted her feet as high as she could, until her insteps were stopped by the underside of the table. Ten painted toes wiggled as if they were ten independent life forms. I knew this couldn't be good. Or rather...it was bad, but in a wickedly good way.\n\n\"Smooch time, foot boy. Kiss my toes nice. Your firm hands have my toes all jazzed up and wanting more. So bend down and kiss my feet like a good boy.\"\n\nMy head was halfway down to those animated toes, my eyes looking to my left to see if anyone was watching or if the waitress was bringing our food at precisely that instant, as would normally be my luck. Seeing no one, I let my eyes focus on the needy toes. But before my lips were even fully puckered, Holly again switched gears on me.\n\n\"No...wait!\" she said, in another loud, excited whisper. \"LICK my toes! Yes....lick them. Lick all along that seam at the tips of my toes. Oh, that'll be so hot to watch....you licking the toe seam of my stockings. Oh, yes....do lick my toes!\" She was so excited she could barely contain herself. I noticed that her pupils were dilated as she watched her own toes waiting for my tongue. She herself was fidgeting now.\n\nNow I KNEW someone HAD to be watching, and laughing their asses off. But another quick glance about showed me that my public humiliation was once again to be delayed...but how long could I keep outrunning fate?\n\n\"Lick, lick, lick, foot boy! C'mon...my toes are getting impatient. Besides, the waitress could return any second now. And I positively WON'T let you stop licking until you've licked all along the toe seams of BOTH feet, the entire length of it. Even if the waitress comes back, or if other customers come in, you can't stop licking until you're done...so you better get going!\" She was as animated as when she'd shoved her feet in my face in the parking lot. She was so giddy and ecstatic that I just knew she had to be getting wet. And THAT made my inhibitions recede a bit...but ONLY a bit.\n\nStill nervously looking about, I stuck out my tongue and began to lick along Holly's toe seam, my tongue again feeling that now familiar nylon sensation. I licked quickly along the row of toes, from one end of the seam to the other...from little toe to big. Then I moved to the other foot, licking from big toe to small. When I was done, I sat back up and looked around. Thankfully, no waitress, and not customers. My luck was much better than usual. Or so I thought.\n\n\"Oh, you're too quick,\" Holly pouted. Then her face lit up again. \"So...now you have to SUCK my toes. Suck my stockinged toes. Make it a sloppy, wet suck, too. I want to feel it through the nylon. Go on, suck my toes right here in Boogaloo Crick!\"\n\nI looked up at her with a \"hey, that's unfair!\" look. After all, I had done what she asked, but now she was changing the rules. It really wasn't fair...but that meant nothing to Holly. Apparently, to her, \"fair\" was just a concept...meant to be exercised by others, but not by the Goddess Holly. Maybe the word wasn't even in her vocabulary.\n\n\"Oh, all right,\" she sighed, \"you still have to suck my toes, but if you do it before anyone sees, then we'll eat our meal without you having to do anything to my feet. Well, except massage them, of course. That you MUST do. But I won't embarrass you by making you kiss or lick or suck my feet again...at least not while we're in the restaurant. So, go on...suck my toes now...before someone sees.\"\n\nAnother nervous look around, and I plunged her right foot into my mouth, sucking all five toes at once. I did as she wanted, making sure I slurped her toes wetly, while doing it as quickly as I could. Then I did the same to her left foot. The toes of her stockings were drenched with my saliva and clinging to her toes by the time I was done. My mouth vibrated from the nylon and the excited movement of her toes inside it. Looking about again, I wiped my mouth and looked at Holly. She grinned from ear to ear. Satisfied...finally...for now...she lowered her feet back down onto my lap. I couldn't tell which was more satisfying to me...her contented grin, or the long, drawn out sigh that accompanied it.\n\nAnd when I turned my head to the left, I saw our waitress bringing our food. She was about thirty feet away...grinning. I knew in an instant that she must've seen me feasting on Holly's toes. I felt as if my face was in a furnace...hot and sizzling. I even imagined flames and smoke rising from my scarlet cheeks.\n\n\"Here's your order,\" she said, placing Holly's plate in front of her, and then mine in front of me. With a grin and two sly winks - one first at Holly and then one at me - she added, her eyes focused on mine, \"That is, if you're still hungry.\" Holly almost choked, she laughed so hard. I was too embarrassed to laugh, rubbing my red, burning face with my hands and looking sheepishly toward the window. Pleased with her joke, the waitress then asked, very professionally, \"Is there anything else I can get for you?\" Holly shook her head, still recovering from her laughing fit. I just kept looking at the window. The waitress chuckled as she walked away.\n\n\"Well, I think I like her,\" Holly said. \"I do believe I'll give her a nice tip...for her help in finding a lonely, quiet booth, and for her wonderful sense of humor. Don't you think she's just lovely?\"\n\n\"Yeah,\" was all I could say. My mind was still battling the stark vision of my facial flesh melting off my skull in liquid sheets from the heat generated by my embarrassment.\n\nWhat followed was, thankfully, a more normal period of time. We ate like any other couple, enjoying our meal. The only difference was the conversation. Holly, it seemed, could talk about fetish sex and kinky ideas as if she were discussing her favorite cooking recipes or the next week's weather. Most of what she talked about I'd never heard of before. Some of it boggled me, some amazed me, some titillated me. But all of it interested me on one level or another. Holly was a fascinating woman, who spoke openly of her sexual tastes and desires. She showed no embarrassment, no apprehension at discussing almost any form of sex. \n\nIt was truly a learning experience. Aside from what we had done together in her car a few days ago, I had learned more about Holly and kinky sex in that last hour than I had in my half dozen years since puberty had kicked in. She was an incredible person, and was not shy about anything...not even the words she used to describe things. She didn't worry about being \"polite.\" She called a spade a spade. A cock was a cock...not a penis. She talked about things she liked being done to her pussy as if she was talking about which perfume she preferred. She was living, breathing sex...of a decidedly different nature. And I was fascinated, and turned on, by every word she spoke.",
        "A lot of what Holly spoke of, I had fantasized about numerous times, but never had names for them, never knew what they were called. Holly knew all the terminology, knew the title and description of every deviant sex act one could imagine. But she focused on the things that she personally enjoyed, and those involved her being dominant and ordering men around, having them cater to her desires, no matter how absurd or flighty they might seem. \n\nShe especially enjoyed humbling men, forcing them to service her in embarrassing, humiliating ways. She got excited if she entrapped a man into light bondage, but severe bondage was a turn off for her. She preferred body worship, having men drool and slobber over every inch of her ...and being unable to resist her charms, doing whatever she told them to just to be near her. That was something she just loved...using every part of her body to make a man crawl and worship her and then beg for more. And it wasn't just her feet. She was willing to use any fetish a man had to get him down there on his knees adoring her unconditionally like a loyal puppy. And that, she explained, was exactly what she had done with me. She used my foot fetish to bind me to her sexually. And when she found out how much I enjoyed giving her pleasure orally, well, it was another nail in my coffin.\n\nAs the conversation progressed, Holly told me of her future plans for me. She again spoke of things I'd never heard of, but she said she wanted to try. The entire meal was punctuated with talk of things like smothering, face sitting, trampling, 69 (and though I knew what that was, Holly's version, as I was not shocked to discover, had a twist to it), total body worship (she insisted that EVERY inch of her body deserved equal worship...with NO exceptions), human footstools, collaring, body servitude and even, surprisingly enough, hot, raw, straight sex and oral lovemaking. It seemed Holly expected to try EVERYTHING known to man (or woman) before she left this mortal coil. By the time she was done telling me about her desires and needs - and her plans for me in that context - my head was spinning (Well, the upper one was...the lower one was throbbing). I couldn't believe a woman could speak so openly and unashamedly about such kinky, perverse things. My respect, and desire, for her grew a hundredfold in that one incredible, informative hour. And she knew it, too, just from the look of awe on my face. If I hadn't truly worshipped and adored her before, I most certainly did at the conclusion of her verbal foray into kinky dalliances. And throughout every titillating word, between quick bites of food, my hands faithfully pampered her nylon-clad feet.\n\nDessert was light, and we sat there quietly. Holly was drained from her various erotic disclosures. I was just trying to absorb all that she'd told me. The only thing Holly asked of me as we split a large slice of cheesecake, was that I continue to massage her feet. She enjoyed the squishy feeling of the still moist stockings being kneaded into her toes. I didn't even consider arguing. Besides knowing it was futile to even think of denying her, I was more in awe of her than ever, and wanted to do anything I could to make her smile.\n\nHolly saw that look of awe -and yes, worship - in my eyes and knew she had me exactly where she wanted me. She knew I was the perfect clay to mold as she saw fit. And that wicked look crept back into her eyes yet again. That grin that set fire to my groin slunk lasciviously across her lush lips. The twisted glimmer in her eyes would've made the Marquis de Sade proud.\n\nAs I obediently massaged her right foot, her left slowly slid off my thigh to my groin. Her silken toes found the hardness there and her grin, if even possible, widened. With pure evil in her eyes, she used those toes to knead and stroke my swollen member. I sighed. My eyelids fluttered, as if all strength had left them, all the blood and energy feeding them had immediately left and made a beeline for my crotch.\n\nStaring directly into my fluttering eyes, Holly stroked me with soles and toes. My brain had begun to leak. It sputtered and gasped, threatening to cease all thought processes. As it was, thinking was a chore at best.\n\n\"Foot boy,\" she said. It could've been as loud as the amplified notes at a rock concert for all I knew, because only my hands and penis were still working at peak performance.\n\n\"Umm...hmmmmm....yehhh?\" I sighed.\n\n\"I'd like you to take that delicious cock out of your pants again.\" That was all she said. No explanation (as if one was needed). Just as matter-of-factly as you please.\n\nWhen the \"request\" had fully sunk in, my eyes widened. A chill skateboarded down my back, caroming clumsily from vertebra to vertebra. I looked at Holly, sure that I must've misheard her. Again...silly me. Of course I hadn't.\n\n\"What? Here?\" I bumbled. \n\n\"Yes. Right here, right now. While you rub one foot, I want to play with that throbbing sausage of yours with the other.\"\n\nAt first I expected her to ORDER me to do it, but she just stared intently into my eyes. Her gaze pierced my brain, jump starting it. I felt like I couldn't breathe. My whole body trembled, and I'm not sure if it was with fear or lust. I blinked my eyes a few times, then quickly glanced around the interior of the restaurant. I stammered, fumbled and fidgeted. I was amazed Holly would even conceive of such an act...in public! Visions of burly men in blue with shiny badges carting me off like a common pervert were dancing in my melted brain.\n\nBut...nonetheless....I lowered her foot to my thigh, released it from my hands...and unzipped my pants.\n\nHolly heard the soft sound of the zipper and smiled, her eyes dancing with delight. \"Now, like you did before, take that lovely cock out so I can play with it.\"\n\nAs if in a deep trance, I reached into my pants for the second time that night and pulled my swollen penis out of my jeans. I still had enough brain power to again scan the room. No more patrons...no waitress... no one looking. Thank God.\n\nAs if she could see under the table, Holly knew exactly when my cock was free. Her toes found it unerringly, and flicked it from side to side, amusing her no end. After flicking it about for several playful minutes, she settled back into rubbing and kneading it with her toes and sole. It was all I could do to remain conscious.\n\nAt some point, Holly saw that I wasn't going to be able to concentrate much on massaging her other foot, so she modified her plan drastically.\n\n\"Never mind rubbing my foot. I'm going to use both feet to play with your cock. You don't mind, do you, foot boy?\" Her question reeked of sarcasm.\n\nI mumbled something that was pretty much incoherent, to which she laughed. Before the sound of her laughter had even faded, I felt both her warm, nyloned feet rubbing and stroking my hardened tool. My brain seized again. I could feel sparks behind my eyes...not to mention between my legs. I could almost visualize my testicles contracting, gearing up for seminal expulsion. To Holly's credit, she was even able to get her persistent toes inside my unzipped pants to tease and jiggle my sack. How she managed to get her toes beyond and beneath the elastic waistband of my tight briefs in that limited space will always be one of the world's great mysteries. But if anyone was capable of it, Holly was.\n\nShe sat there mercilessly stroking my testicles and shaft with her feet for what seemed a gloriously long time. With her elbows on the table and her chin resting in the palms of her hands, she stared into my eyes, delighting in the lust brewing there. Up and down her nyloned feet stroked my cock, her toes squeezing and playing with the head. In and out of my pants went her teasing toes, slipping under my sack, toes gliding ever so slowly along its surface.\n\nOn those rare occasions when I could focus on Holly, I could see growing passion in her eyes as well. She had begun to lick her lips as she gave me a world class foot job. I knew that if she kept it up, not only would I have the dumbest looks on my raptured face, but I'd more than likely cream all over her silky hose. Even trying to focus my attention on the half eaten cheesecake wasn't helping a bit to stem the tide of careening hormones between my legs. Holly knew all of this, probably even more than I did.\n\n\"Mmm...you like Holly's feet on your cock, don't you, foot boy?\" She snickered. \"Should I let you come right here in the restaurant? Would you like that?\" I fought hard to force intelligible words out of my mouth, not even sure how I wanted to answer that. It didn't matter, anyway. No matter how horny Holly was becoming, she definitely had her own agenda...and it didn't call for an embarrassing orgasm in the middle of the Boogaloo Crick Ale and Steak House.\n\nHolly's eyes burned into mine. Her face had an erotic glow to it. She licked her lips and looked me up and down as if I was a piece of medium-well ribeye steak. She stroked my cock hard and fast, the silky feel of the nylon making me crazy. I surely would've let her give me an orgasm right then and there, but as I said, she had other plans. For her - for now - it was enough that she'd had her way with me, that I'd gone against my better judgment and taken my penis out of my pants in a fairly crowded restaurant to let her play with it like her personal toy. It fueled her fire, but, unlike myself, she'd kept herself just cool enough to know when to stop.\n\nSuddenly, the silky stroking at my crotch stopped. Very far off in the distance, I heard the sound of Holly's shoes sliding around under the table. She was putting them back on. My penis, standing straight up and bobbing hopefully, was eager for more attention...attention that was not forthcoming..at least not for now. It was agony. But, slowly, without the constant attention, it began to deflate and dip downward. This allowed blood to return to my brain. That, in turn, led to my senses returning. And I was slowly able to focus on the Cheshire Cat sitting across from me in the booth.\n\nI knew then that playtime was over...at least until we'd left this place. For a few minutes, we just sat and stared at each other, Holly beside herself with the power of her sexuality, and me trying to recover. Even before she said a word, I knew it was time to leave the Boogaloo Crick Ale and Steakhouse. And I was all to happy to do so. After the cock tease in the car and now again in this quaint little restaurant, I was frustrated to a degree that I'd never been frustrated to before in my life. I felt like running outside and hiding in the bushes to stroke myself to orgasm. It wouldn't have taken much to get me there, either. \n\nHolly's voice shattered my run-and-stroke fantasy. \"That was a wonderful meal, wasn't it?\" she asked, her eyes and lips still grinning at me.\n\n\"Yes,\" was all I could say, staring at her like a moonstruck kindergarten lad, though a sexually frustrated one.\n\n\"How would you like more dessert, foot boy?\" she asked, her eyes drilling into mine.\n\nI knew in an instant what she meant. I smiled at her, sighing from my core, nodding and trying not to drool too heavily.\n\n\"All this sexy talk, and rubbing your cock with my feet, has gotten me so wet I'll probably drip all the way to the car. So, I think we need to leave here right now. We'll go to my place, and then I'll give you something even sweeter than cheesecake to eat. Would you like that, foot boy? And maybe I'll finish that nice foot job I was giving you. I'll bet you'd like that, too.\"\n\nI nearly swooned at just the thought of my lucky face between Holly's legs again, and those soft feet stroking my primed cannon...this time all the way. The \"Yes, Goddess\" I stammered out was more sigh than words, but Holly knew how I felt. That was all that mattered...to either of us.\n\n\"Now, you'd better put that away again. It should be soft enough by now to get it back into your pants.\" Again she snickered, toying with me. \"Zip yourself up for now and let's leave before I forget myself and stroke your brains out right here.\"\n\nHolly signaled the waitress, asking for the check. When the waitress brought it, Holly, true to her word, gave her a generous tip. The two exchanged knowing smiles once again, and the waitress looked me up and down as she had earlier, as if pondering Holly's choice of boy toys. I had no idea if she approved or not, but didn't care. And somehow, knowing that another human being knew I was Holly's personal plaything, well, that was a huge turn on.\n\nI wasn't the only one flushed a red color now. Holly was indeed horny. And I had every reason to believe that she was most certainly going to feed me a second dessert as soon as we got to her place, wherever that was.\n\nGrabbing my hand tightly, Holly nearly dragged me out the door, not letting go of my hand until we got to the car. She didn't even wait for me to hold the door for her, but pointed to the passenger side door as she walked around the car to the driver's side, saying \"Get in.\"\n\nI was already seated by the time Holly got into the car. As she swung her legs in, she didn't stop them below the dashboard, but rather continued swinging them in their arc until they had swiveled in my direction. With a sharp snap of her ankles, she kicked off both shoes simultaneously, one shoe bouncing off my shoulder, the other landing in my lap after ricocheting off the passenger side window.\n\n\"Hold on to those,\" she said, \"I'm too horny to bother with formalities right now. We're going to my place immediately. You ARE in the mood to bury your face in my pussy, aren't you?\" Her eyes were as iron as her will. Even if she wasn't in the mood for so much as the slightest hint of refusal, I would never have refused that offer anyway.\n\n\"Yes, Goddess...I most certainly am!\"\n\nThe iron stare was replaced by softening eyes, and a wide smile. \"Good, because the way I'm feeling right now, you'll be licking me until your tongue needs a splint. And once that immediate need is taken care of, we'll get down to some...experimenting.\" She didn't look at me, but just focused on driving out of the parking lot and into traffic.\n\nMy whole body was like a raging lightning storm.  Holly's look was intense as she drove out of the small lot. I could sense urgency in her. She seemed to be forcing herself to drive, her body tight and determined. She was chewing her bottom lip, squeezing the steering wheel as if she wanted to choke nonexistent life from it. And even through all the lip gnawing, her mouth was curled in a grin of expectation. She was about as horny as a woman could get without jumping the first long, hard object she came in close proximity to.\n\nJust before she entered traffic, she slammed on the brakes. I wasn't prepared for it, and I flew forward from the force of the sudden stop. Holly's shoes escaped my lap, landing quietly on the carpeted floor. By the time I turned to look at Holly, she had already turned to me with that same intense look on her face. The only difference was that her mouth had hardened somewhat, the smile muted.\n\n\"I almost forgot,\" she said. She pointed to the glove compartment and continued, \"Open that up. Put on the blindfold.\" Her words were devoid of emotion, sounding like a cybernetic command from some computer program. I stared at her blankly...blinking like a bewildered cartoon character. Slowly turning my attention to the glove box door, I popped it open and withdrew the soft, black blindfold. Again I stared dumbly. I sat there holding it in my hands, my blinking eyes as perplexed as my brain. After a second or two, I turned to look at Holly, my eyes now non-verbally questioning her.\n\n\"Oh, now, don't worry. I'm not going to kill you and dump you somewhere,\" she said, the smile coming back to her lips. \"In fact, I'm protecting myself. You seem like a sweet boy, and you're deliciously submissive, but you could be the possessive type, or maybe even obsessive, and you might cause me problems down the road.\"\n\n\"Holly, I would never....\" I began, shaking my head.\n\n\"Now, don't take it personally, Tom. But I've only known you what, two days now? If I'm going to take you to my house for some fun and games, I would rather you didn't know where I live right off...not until we've known each other a while and I can trust you. It's just a precaution. For now, you just can't know where I live.\"\n\n\"But, I'm not going to...\" I protested.\n\n\"Tom...this is the way it's going to be, or this ends right here. It's not open for discussion. I'm just not willing to take that kind of risk. So, which is it? The blindfold...or back to McDonald's?\"\n\nOne look into Holly's eyes told me resistance - as usual - was futile. With a heavy sigh, I tied the blindfold around my head, adjusting it over my eyes. Again I blinked, this time behind dark fabric, my eyelashes brushing the soft cloth. I sighed, resigned to this unusual turn of events.\n\n\"This is going to look very suspicious, if anyone should see me,\" I said, \"And what if we pass a police car? Won't they think you're abducting me?\" I couldn't help but smile as I added that last note.\n\nNot one to be outdone, Holly replied, \"If it comes to that...if a police car DOES happen by, I'll tell you to duck down immediately. So, listen closely while I drive in case you need to duck in a hurry. Understood?\" Even through the blindfold, my mind's eye could see her no-nonsense glare.\n\nI sighed again as I said, \"Yes, ma'am.\" I just couldn't understand all the secrecy. Youth always seems to be nearsighted. I was going to make the point that someone blindfolded suddenly ducking as a patrol car passes by would appear even MORE suspicious, but thought better of it. Arguing the point wouldn't do any good at all...especially with Holly in her obviously amorous condition.\n\n\"Great,\" Holly said. \"And if you're a good boy and duck quickly, I'll let you kiss my feet again while you're down there. How's that? A reward for quick response.\" My mind's eye now saw an arrogant smirk on that pretty face. Nothing unusual there.\n\nI was about to reply that that would be fine, when the car lurched forward. It was the most unusual thing I'd ever experienced up to that point in my young life, riding in a car with a blindfold on. But, somehow it seemed perfectly normal and acceptable when dealing with Holly....not the least bit odd. That alone should've told me how firm her grip on me was. I was willing to accept almost anything to be with her and have her be a part of my life. In fact, the more unusual things got, the more I squirmed and looked forward to still other bizarre occurrences.\n\n\"I don't think you'll be having to duck much, anyway, my little foot boy. Once we get off this road, we'll mostly be traveling on back roads. I live out in the boonies, hon. Nice, big private house to play and play and play.\" Her ensuing sigh was so deep and loud that I could hear it even over the din of traffic. And I was willing to believe that if all outside noise ceased completely, I could've heard her heart beating at triple its usual pace, thundering against her chest. I knew she was as stoked as I was.\n\nOn the one hand I was myself sighing with relief at not having to play abductee as much as I'd initially feared, but on the other I felt a shiver down my spine at the thought of being alone with this woman out in the sticks where no one knew where I was. That shiver of fear, however, was thickly laced with growing anticipation. I had no idea what I was truly getting into, but if it included some of the things Holly spoke about at Boogaloo...well...it was no wonder my jeans had a firm, pounding puptent forming.\n\nAfter driving for what seemed a half hour or so, Holly turned off the main road. For the next thirty minutes - give or take - I could tell we were traveling along smaller roads. Traffic became lighter and lighter the longer Holly drove. And for the final fifteen minutes there didn't seem to be any other cars around us at all. It was eerily quiet, in fact...which heightened the mystery and the delicious tingle of anticipation. I knew something amazing was in the offing.",
        "Finally, the car's tires began to grumble a bit as Holly drove slowly along what I at first thought was a small stretch of dirt road, but slowly realized was a rather long driveway. The car slowed to a stop. There were a few seconds of silence. There was a double click...the motor quietly ceased it's hum.\n\n\"We're here,\" Holly proclaimed. \"You can remove the blindfold now.\"\n\nMy hands shook as they removed the dark fabric from my eyes. My pupils quickly tried to shut out the mad rush of light before it blinded me. Having worn the blindfold for so long, my eyes weren't ready for the barrage of sunrays. Between distant trees, the reddening sun had fallen low on the horizon, it's intense rays blazing directly through the windshield, and from there to my unprepared retinas.\n\nBlinking rapidly, I was finally able to get adjusted to daylight again, and I looked through the windshield at Holly's lovely home. It was an average size house, but like the Boogaloo, it was a wonderfully crafted log cabin. A wraparound porch circled three sides of the house, with a dozen solid posts supporting its roof. The cabin itself was two stories high, a large chimney jutting through the slanted roof. All wood... everywhere. No brick, stone or vinyl to be seen anywhere...except the quaint brick chimney. I immediately felt comfortable. I don't know why.\n\nHolly was correct in stating that she lived in the sticks, too. All around the house, in every direction, were tall trees, the sturdy sentinels even lining the length of the finely graveled driveway. Nature chirped and fluttered and rustled all around the house. It was serene...relaxing. In the back of my mind I was thinking that this was all a ruse...maybe a lull before the storm. The entire scene seemed to be some wicked plot to lull my senses, to soften me up for the whims and decadent pleasures of the woman who sat beside me. I felt more than ever like the edible fly blundering into the spider's kitchen...disguised as the most comfortable, serenely pleasant of parlors.\n\n\"Come and open my door for me, foot boy. We need to get started. I'm so horny I could hump a dozen men, and leave every one of them exhausted and drained.\"\n\nThat mental picture set my head to spinning. But I opened my door, stopping just long enough before I got out to pick up Holly's shoes from the floor, and once again walked around to the driver's side and opened her door. Holly swung around to face me as I stood at her door. She grinned mischievously and stretched out her legs, feet wiggling as they'd done earlier at Boogaloo.\n\n\"On your knees, foot boy. Put my shoes on for me again, like a good boy.\" She smirked. \n\nAs I slowly knelt before her, I wondered if I was going to get another faceful of playful soles. Holly grinned down at me, knowing what I was thinking. But, even though she played and teased, giving me moving targets upon which to slide her shoes, her feet did not attack my face and send me reeling back as they had earlier. The adorning of her feet in their slinky shoes, while somewhat of a challenge, occurred without incident. I wasn't sure if I was disappointed or not. \n\nWhen her shoes were firmly on both feet, Holly giggled and leaned forward, tousling my hair briskly and cooing in a baby-talk voice, \"Oh, you're such a gooooood foooot boyyyy...yes you are! Soooo sweeeet to Holly's itty bitty pretty feet. You're my favorite, bestest tootsie boy...such a cute footsie boooyyyy.\" I blushed at being treated like a favorite pet, but my heart raced nonetheless.\n\nHolly again caught me off guard. This time, as I knelt on the gravel, still blushing, she suddenly stood up in front of me. Once again I was knocked back against the open door. But as I started to rock backwards, Holly's hand had reached out, grabbing me by the back of the neck, stopping my backward launch. As I regained equilibrium, I realized that Holly was standing directly in front of me, less than six inches from me. The \"V\" of the crotch of her pants was right before my eyes, and her other hand was rubbing it slowly in a most obscenely obvious manner.\n\n\"Oh, now,\" she said in a voice thicker than molasses, \"my foot boy wouldn't be staring between my legs, would he? Trying to see through my pants? Hoping to see some tasty treat to eat, maybe? Is that what my naughty foot boy is doing?\"\n\nSince I was still blushing from earlier, I can't say I blushed again, so I would have to say my blush deepened, probably more the flush of lust than of embarrassment. I tried to avert my eyes from the crotch of her pants, unsure what she wanted me to do.\n\n\n\"Oh, no....that's okay, my little pet. In fact, here...how's this?\" Holding my head firmly with her hand, she stepped forward, that enticing \"V\" now less than an inch from the tip of my nose. \"Isn't that nice of me, to let you so close to my sweet pussy? Doesn't it make you want to bite through my pants to lick at it like a happy puppy? Wouldn't you LOVE to do that?\"\n\nI tried to speak, but my mouth was dry - odd, considering I was on the verge of drooling. Suddenly, Holly's hand pulled my head forward that last minute distance. My face plunged into the thin material of her pants, my nose and lips landing where her soft, triangular carpet would be if she were naked. She then started slowly rotating her hips, both her hands now behind my neck, holding my head as she gyrated her groin into my face.\n\n\"Reach back and squeeze my ass, foot boy,\" she said. \"Pull me toward you. Help me mash your face between my legs. And sniff and lick me, too. Show me how badly you want what my pants are keeping from you.\"\n\nJust as I reached behind her to clutch her brazen cheeks, she lifted her left leg up and back, resting her foot on the car's doorstep. With her leg thus positioned, she had spread her thighs apart a good foot or more. Thrusting her hips forward yet again, she just about pulled my panting face right up between her legs, grinding and gyrating against the lower part of my face.\n\nShe seemed to be trying to force my head all the way between her legs, and I certainly had no desire to fight it. I held tightly to her bottom, squeezing her cheeks through the pants, kissing and lapping at her crotch like a heated hound.\n\n\"Oh, yes...good puppy...sweet doggie. Kiss it....lick it....rub your face in it hard! Oh, this is making me soooo hot! And I know this is driving YOU crazy, too. When I finally let you take my pants off, you'll lick me soooooooo good! Won't you, my hot little pussy licker? Won't you?!\" She was panting and squirming against me, gasping for air, her fingers digging deep holes and trenches in my head and neck.\n\n\"Yes, ma'am. Yes, Goddess! I'll lick you...sooooo good...I promise! Oh, yes...I'll never...stop licking...you! Never!\" I had no clue of what I was even saying. I was just so lust crazed at that moment that I could only hear my own words off in the distance, not truly understanding them at that particular instant.\n\n\"Tell me...how bad...you want to...eat me. Tell me...you'll do....ANYTHING...if I let you...lick between...my legs! Tell me...foot boy! Beg me...to allow...your hot tongue...deep inside me! Beg to...lick me!!\"\n\n\"Oh, yes...please, Goddess! Please...let me...eat your...pussy! PLEASE...let me...take off...your pants...and lick you...til my...tongue breaks! Please, Goddess....PLEASE!!! I beg you! I'll lick you...sooooooo good...I promise! Ohhhhhhh, pleasssssssssse!\"\n\nOne moment I was nuzzling Holly's frustratingly clothed patch, begging for more, and the next I was flying backward. I landed with a thud, my upper half on a soft, green lawn and my lower half still on the graveled driveway. I looked up at a darkening sky, the fluffy clouds taking on the red and pink hues of sunset. Groggily, I got up on my elbows and looked back toward the car. Holly had once again kicked off her shoes and had already removed her pants. In fact, by the time I was able to focus on her, she was sitting on the car seat and had one leg of the pantyhose off completely and was just sliding the other down over her calf.\n\n\"Don't just...lie there. Get...over here...and help me...get my pantyhose...off!\"\n\nI looked around, as if expecting someone to see us. In spite of my heated state, I was still cautious. I wasn't used to such wonderful things happening to me at all, let alone without some dire consequences to follow. I knew SOMETHING had to happen to stop this incredible turn of events.\n\n\"Oh, relax,\" Holly huffed, still working on her stubborn pantyhose, \"I own...seven acres...around my house. And it's all...posted. Now get off...your ass...and get these...off me!\"\n\nHolly had managed to get her pantyhose down around a single ankle. With eager, fumbling fingers I finished the job, tugging them over that gorgeous ankle and off her foot. This time I didn't think Holly would stand for my usual slow, erotically voyeuristic method of slipping the hose over her foot, so I removed it as quickly as I could. Even so, by the time I had the hose off of her, she already had her panties down to mid calf. Again, I took over from there.\n\nHolly's eyes were shining with lust, even in the dimming light. Just as I tossed her moistened panties aside, she grabbed a handful of my hair and yanked my head forward. It was not a gentle tug, either. It hurt, bringing tears to my eyes. I opened my mouth to protest the pain that leaped through my scalp, but instead found my mouth filled with...moist, pink flesh and soft, fine pubic hair. It more than adequately muffled the cries of agony. In less than a heartbeat, my open mouth gave up it's protest and began sucking and licking wildly. The scent and taste of her drove me instantly mad.\n\n\"Ohhhh.....yes!\" Holly squealed, squirming on the car seat and holding my head in a viselike grip. \"I was...going to...wait till we...got inside...for you to...do this. But...I'm just...waaaaay too....horny. I can't wait. Oh, my....sweet little foot boy...lap it up, baby...lap it up nice. Don't stop....til I come!\"\n\nI didn't bother to reply. I was so hot to lick deep inside Holly that I grabbed the undersides of her thighs and pushed them up, forcing her on her back on the seat. With her left foot braced high up on the rim of the roof and her right resting between the windshield and the door, Holly spread herself wide for my culinary pleasure. I did only one thing...I lapped with a greedy, lustful hunger.\n\n\"Oh, such a...good boy! That's right...lick your Goddess! Lick her...oh, sooooo....good! Good boy!\" Holly squirmed and gasped for air, making for a moving target for my tongue. But I didn't care. NOTHING could've kept my tongue from finding its target.\n\nWith deft fingers I spread her soft petals wide. I saw her glistening opening and dove for it. There was no fumbling at all. My tongue zeroed in, entered her and probed deep inside, all in one incredibly smooth, flawless move. I swooned a bit at the warmth of having my mouth and face in that deliciously humid place once again. I sighed as I lapped inside her, tasting her sugar walls, savoring every sweet lick.\n\nHolly moaned louder by the second. Her thighs quivered and her movements seemed jerky, as if she wasn't in total control of a single one of her muscles. I was moving just as jerkily. Panting and sighing down there between her silken thighs, only my lips and tongue had any kind of finesse about them. I lapped and sucked at her pink folds, wanting to savor the taste of each one. I panted my hot breath over every inch of her dripping pussy. I alternated sucking her flesh and licking with the tip of my tongue. Sometimes slow, teasing licks, sometimes bold, plundering licks. I hoped to keep her off balance with what I would do next. It seemed to work splendidly.\n\nI could hear Holly gasping for air, swallowing loudly, huffing and sighing and moaning. She was squirming all over the seat, barely able to contain herself. I was pretty much on autopilot, devouring her dripping flower like a true gourmet. She was so wet it was like rubbing my face in a handful of musk-scented massage oil.\n\nSuddenly, long fingernails dug deep into the back of my head. Holly gasped, \"Suck my clit...foot boy! Lick it...suck it...bite it! Take it...in your...mouth....right now!\"\n\nI put my lips around her swollen bulb and sucked...ever so gently. The reaction was immediate.\n\n\"Ohhhhhh! Yessssss! There's a.....good.....pussy boy! Ohhhhhhh....ohhhh....ohhhh. Good boy! Suck it...harder. Lick it...nibble it.\n\nI flicked at that burning clit with the hardened tip of my tongue. Holly moaned and squirmed. I put my teeth just around the outside of it, and squeezed gently. Holly's back arched and her thighs spasmed. Her bottom came up off the car seat and pushed her crotch tightly against my mouth. Her hands pulled my head forward as her pussy tried to push it back. My sucking, licking mouth was held captive between the two as she bucked her hips and held my head firmly in place.\n\n\"Ohhhhhh.....sweet pussy boy.....just a....little longer. I'm going...to come....any second now. Ohhhhh, yes baby...suck that clit....suck it HARD...now, baby, now!!!\"\n\nI sucked it hard. With my teeth clenched on it I sucked, flicking my tongue at it rapidly. With a final spasm, Holly squealed her pleasure. Her right foot came off the door and slammed into my shoulder alongside my neck. It didn't distract me enough to stop sucking her clit. \n\nAs Holly screamed, \"Ohhh, yes, baby...YES! YES! YES!!!!!!\" I felt a flood of hot liquid bathe my face. The oily slick that was her sex continued to grind into my mouth. Her bottom hadn't touched the car seat in several minutes as she gyrated and moaned her satisfaction. It was a deliciously long orgasm and she screamed and bucked throughout. I lapped at her flowing juices in between gnawing and sucking her clit.\n\nI didn't realize it at first, but I had gotten such pleasure out of devouring Holly that my pounding erection had decided to relieve itself of its pent up frustration. Soon after she had climaxed all over my panting face, I myself came, volley after volley blasting into my briefs, creating an ever widening stain on both my briefs and my jeans. I didn't care. It felt amazing...incredible. The taste of Holly, her incredibly erotic squirming and wiggling and moaning, and the delightful wickedness of having my hungry tongue between her legs right out in the open before even entering her house...all helped my teased and tormented organs to release pent up passion...albeit in my pants. I didn't care. At the tender young age of twenty, I had plenty to spare.\n\nSlowly, Holly's squirming, bucking orgasm subsided. Both legs ended up on my shoulders as she gently pushed my head away from her twitching, dribbling sex. For a few minutes she just lay there, smiling, licking her lips, waiting for her breathing to return to normal. When she had the strength, she sat up. Since she was drenched between her legs, she sat with her crotch over the edge of the seat, hoping not to stain the fabric of it. I sat on the ground, my legs sore from kneeling on gravel and being bent at the knees for so long. I looked up at her, smiling with pride. She returned the smile, but looking more like a woman who's pet had just performed a trick better than ever before.\n\n\"Oh, my, my,\" she sighed, \"I was right to take you on as my foot boy. That was just...incredible. I'm not going to have to train you at all. I'm very impressed with my good boy. And I'm going to have to give you some nice treats...rewards...for doing such a good job for me. You'd like that, wouldn't you, foot boy?\" She smiled sweetly...genuinely sweetly. She touched one side of my face with her fingertips, so gently I could barely feel it as she traced my face from cheek to chin. Then, in a serious moment - a rarity for Holly - she cooed quietly, \"You really have pleased me, Tom. You just made me feel soooo delicious. I AM going to reward you. Oh, yes...my foot boy has earned a very big reward.\"\n\nThat hushed statement there in the gathering darkness took my breath away....made me woozy. I could tell by the sincere tone and by the choice of her wording that she really was happy with me. And that meant more to me than anything else...the sex, the promise of more, even my own orgasm. Making Holly happy mattered more to me than all of that combined. Her soft touch and the satisfied smile on her face made everything worthwhile.\n\n\"And now,\" Holly continued, the evil grin climbing back onto her face, \"I think it's time to not only give my foot boy his rewards, but also to begin teaching him some wonderful new things. Would you like that?\"\n\n\"Oh, yes, ma'am,\" I sighed. Pathetically, all that was missing was a wagging tail at the end of my spine.\n\nHolly again stood up, hands on hips, letting me look at her predominantly naked form in the encroaching darkness. Standing there with her hands on her hips, naked from the waist down, she looked like a true Goddess, Mistress of all she beheld. She allowed me to look up at her in awe for several minutes before continuing.\n\n\"Good,\" she said, bending down to take her keys from the pocket of her hastily discarded pants. \"Gather up my clothes and follow me inside. We'll only have another hour or two before I have to take you back to McDonald's, so you can be home at a reasonable time. When you come inside, go left into the living room. I'll be waiting for you.\"\n\nClosing the car door, and without a second look at me, Holly walked directly to the front door of her lovely log home. She walked gingerly at first, stepping lightly on the gravel of the driveway, but then strode more boldly as her bare feet came in contact with the soft, trimmed lawn. \n\nAs I bent to retrieve her discarded clothing, I glanced up at the arrogant derriere that swayed hypnotically to the locked door. Her blouse came to just above her tailbone, thereby allowing full viewing of her lush bottom as those haughty cheeks rose and fell in a most enticing rhythm. I grew immediately erect again as I watched her walking straight and proud, without any shame or embarrassment, naked from the waist down, toward what I would soon find out really was \"the spider's parlor.\" I shuddered at the joys I would experience within those walls.\n\nOnce inside, Holly left the door open about halfway. As I walked toward her home, I heard her snicker from just inside the door, \"Don't dawdle, foot boy. Hurry now. We haven't got much time...and there's so much I want to show you. We're going to have so much fun together.\" Though I couldn't see her evil grin, I could FEEL it...sense it with every nerve ending in my body.\n\nThen there was silence. I hurried through the now almost complete darkness, carrying Holly's clothes in my arms. I headed for the warm light of her cozy home. And though it was warm, a chill danced up and down my spine for the umpteenth time that glorious day. I grinned. For I knew that somewhere beyond that door, somewhere within that cozy light, Holly waited to take me to places I'd never even dreamed of before.      \n\nI walked shakily, teetering on wobbly legs as I made the short trek from Holly's car to her home. My vision was blurry...partly because of the sweat dripping into my eyes from my moistened brow, and partly because I was ready to pass out from all I'd experienced....and WOULD experience. Each step closer to that sturdy wooden door made me tremble that much more, breathe that much quicker, teeter that much more precariously.\n\nI stumbled up the two small steps to the doorway, regaining my balance awkwardly on knees that felt like they'd slipped out of their sockets and were just rolling about aimlessly between my calves and thighs. My tongue couldn't keep my lips hydrated. My eyeballs were sweating. I had to keep drawing in deep breaths just to keep from passing out. But I held onto Holly's clothes and managed to make it all the way to the door.\n\nLeaning on the door frame, I peered into the lion's (or should I say lioness's) den. It was warmly lit inside, as enticing as the incredible Holly herself was. I nudged the door further open with my shoulder and walked in, my eyes scanning the rustic, country look interior. I felt immediately comfortable, like I wanted to kick off my shoes, sit on one of the plush chairs with a cold beer and just soak in the atmosphere. No such luck. I wasn't there for MY comfort and pleasure...but for Holly's.",
        "I kicked the door closed behind me and turned to the left as Holly had instructed. Around a slight curve I saw her, already on her knees, bent before the fireplace, lighting the kindling that would in turn ignite the wood that sat patiently waiting its turn to spark and glow.\n\nI nearly dropped Holly's clothes right then and there. Watching her bare bottom bounce proudly from her car to her house was one thing, but seeing that same haughty derriere so fully displayed as she bent to start the fire was quite another. Bent as she was, her red silk blouse had ridden far up over her tailbone, fully offering up her ample tush to my appreciative gaze. Soft, smooth and round, it called to me. It taunted me, made me sweat in my desire to pounce on it. The long, straight chasm between her cheeks had widened a bit from her bent, straining position, boldly showcasing her tiny puckered orifice. It, too, seemed to wink at me. I winked back, but only because sweat had dripped into my eye.\n\nThen my blinking, stuttering eyes followed that crevice to it's very end. Again, I nearly swooned. It was the first (though not the last) time I'd seen Holly's love nest from that angle, pouting proudly beneath her lush bottom. It still glistened with her juices...and my saliva. I stood there ogling it's proud beauty. I had never wanted to run full speed, face first into anything so badly in all my life. The urge to toss aside Holly's clothes, drop my pants and ram my throbbing tool deep inside that steamy slit was almost more than I could bear. If Holly hadn't turned around when she did, I might've tried just that...and ended any future I had with her forever.\n\n\"There,\" she said, \"soon that will be blazing nicely.\"\n\nAs she spoke, she turned around on her knees...giving me yet another mind-numbing view. Still on her hands and knees, but now facing me, her low cut silk blouse gave way to the weight of her ample breasts. I was able to peer down between those succulent orbs as they dangled enticingly in the rather loose confines of her blouse. Holly immediately traced the trajectory of my stare...and grinned widely.\n\n\"Ohhhhh....it seems my foot boy fancies himself a breast man now.\" She licked her lips and then shook her upper body enthusiastically from side to side, jiggling her breasts for my benefit. \"Mmm...wouldn't my foot boy love to have a taste of these?\" she cooed, sitting up and thrusting out her chest. First, her hands cupped her silk-trapped breasts, lifting and squeezing them teasingly. Then, slowly, she unbuttoned her blouse, letting the two halves fall apart, exposing the last of her that had been hidden from view.\n\n\"Ohhhhh,\" she teased, \"such tasty tits, but sooooo lonely right now. Look at these big, suckable nipples, foot boy. Don't they just cry out to be licked....nibbled...sucked? Wouldn't you love to have your lips around them right now? Hmmm, foot boy? Wouldn't you?\"\n\nI fidgeted, shuffled my feet nervously, my eyes torn between staring at those pink nipples and darting about the room, searching for someplace - anyplace! - to dump Holly's clothes so I could shove those tempting globes as far into my mouth as I could get them. I could feel my body spasming, nerve endings firing erratically. I wanted Holly's totally naked body with every fiber of my being.\n\nHolly laughed, amused at my excited state. When she noticed me looking for a place to discard her clothing, she covered her mouth and chuckled even more giddily. Not letting up on the torture, she then lay back on one elbow. She licked the fingers of her free hand and alternately tweaked her nipples and slipped those fingers down below her navel. \n\nI was just about vibrating with the same intensity as a battery operated dildo when Holly finally said with a laugh, \"Oh, do put down those clothes, foot boy. Put them anywhere. Then come here and claim your reward...if you still want it.\" Her smirk was as self-assured as a smirk could possibly be. And why not? She knew that by that point, I'd have crawled over hot coals to get at any part of her.\n\nI turned to my left, saw a large love seat, and quickly threw the pants, panties stockings and shoes onto it. My feet remained stationary throughout the move, as if I was afraid that if I moved too far away from Holly, she'd somehow disappear. \n\nTurning back to her, I took two steps forward, barely able to contain my eagerness. Holly held up her hand, stopping me. She grinned wickedly...a familiar grin that was becoming indelibly imprinted on every memory cell in my brain.\n\n\"Strip,\" she said. \"I prefer my foot boys naked when they pant and drool over me,\" she snickered. \"Besides,\" she chided, \"that way you won't have to come in your jeans again.\" I blushed, realizing she must've finally noticed the wet stain on my pants. However, my embarrassment in no way impeded the speed with which I disrobed.\n\nHolly's eyes picked up every minute detail of my clothing removal, but she felt right from the start that I was doing it too fast, I wasn't being sensual enough for her. \"Whoa...slow down, boy,\" she instructed. \"Undress really slow for me. C'mon, now, be sexy when you strip. Take your clothes off slooooowly...make me hot...make me want you. Just because I think you've earned a reward, doesn't mean I'm going to let you jump my bones like a rutting lion!\"\n\nIt wasn't easy undressing slowly with the naked Holly spread open on her back on the floor only a few feet in front of me. In fact, it was excruciatingly frustrating. And she didn't make it any easier for me, either. That wasn't her style. No. As I slowly removed everything I wore, she squirmed about on the floor, spreading her legs, fondling herself, lifting her legs high in the air and spreading them wide, even stretching her legs out straight and wiggling her toes at me. \n\n\"Oooooh, my sexy foot boy. C'mon, now, hon....dance for me. Prance around like a Chippendale dancer while you strip. Oh, baby, light my fire! And if you want to suck these tits, you'd better do a fine job of dancing for me, too.\" She shook her fists in the air, whooping and shouting \"Strip, baby, strip!\" and \"Take it off! Take it all off!\"\n\nI was embarrassed as hell. After all, I hadn't had a lot of experience dancing at all, let alone strip dancing. I tried my best to accommodate, however, swaying my hips seductively as I removed my clothes piece by piece. I even got into it quite a bit, swinging my shirt around, rubbing it on my chest, running it between my legs (BEFORE I took off my jeans). All to Holly's intense amusement and pleasure. She applauded and whistled, urging on her private male stripper with more shouts of \"Oh, baby, show me what ya got!\" and \"Strut yer stuff, foot boy!\"\n\nThen Holly once again shifted gears, throwing her arms up and waving her hands to get my attention (I was getting more into it with each passing second). With excited eyes and just a touch of drool at the corners of her grinning mouth, the always twisted Goddess of Kink breathlessly offered a new plan. \"Before you take off your pants,\" she clucked gleefully, \"just unzip them and let your cock hang out. Dance around like that for me. Stroke it and make it big and hard so I can watch my stud puppet's meat bounce around while he dances for my pleasure. Then dance around with your hands over your head. I want that cock pointing right out at me while you strut around like a rooster.\"\n\nI couldn't believe I was doing this, but I did...exactly as she instructed. I unzipped my pants and reached in, pulling out my already swollen member. I danced around in front of her, wearing only my jeans now, letting my engorged penis flop around as I hopped and swayed with my hands raised high over my head. Holly giggled her pleasure, but I could also see she was getting aroused.\n\n\"Now get those pants off,\" she said in a no nonsense tone. \"Get them off RIGHT NOW, foot boy! Your Goddess wants to use you for her total pleasure.\"\n\nI tried my best to strip off my pants seductively, but it wasn't easy. Not only because I was already erect, but also because I'd had to move my shorts to one side in order to get my penis to bounce for Holly's amusement, and this caused some slight problems as I tried to get my pants down. Nonetheless, I managed. And, quite pleased with myself for thinking of it, I even turned around and swayed my naked ass for her as I slowly slid my shorts down my legs. Holly approved, sitting up quickly to applaud my efforts and then to lean forward to slap both my cheeks in rapid succession. She even snarled and bit one of them. Her bold fingers squeezed the other cheek with enough force to make the muscle flinch as she growled and nibbled my bottom playfully.\n\n\"Mmmm, my foot boy has quite the sexy ass,\" she laughed. \"Someday, I'm going to have to spank it just for fun.\" She winked up at me, and I had no idea if she was joking or serious, though I wouldn't put ANYTHING past her. While I pondered, Holly aggressively grabbed my shorts from around my ankles and ripped them the rest of the way off me, nearly causing me to tumble to the floor as I danced from one foot to the other. Holly's eyes were ablaze...not just with sexual lust, but with more than a little power-lust as well.\n\nI laughed inwardly, not wanting to come out of my role as Holly's personal male stripper. When she'd sat back again, I whirled around, cock in hand, holding the head in one hand and pretend strumming the shaft with the other hand, hopping forward like Elvis playing his guitar with gusto. Holly squealed with laughter. But after I'd hopped forward only a few times, she stopped me dead in my tracks.\n\n\"That's MY guitar, foot boy,\" she grinned, \"and only I have the right to play it.\" She came over to me again and got up on her knees in front of me. She removed my hands from my piece and replaced them with her own. \"I want to inspect this fine instrument for myself...up close and personal. Just stand there like a good boy and let me play with my toy's....toy\"\n\nThat's when I discovered just how evil Holly was. She played with my penis mercilessly, knowing full well she was driving me insane. She stroked it with a maddening slowness, tracing each vein from base to tip, her fingers barely touching the stretched skin. It felt like tiny bolts of electricity moving slowly along my shaft. She lightly pressed the firmed muscle with rapidly moving fingers, as if she were playing a flute. She got her face so close to it I could feel her warm breath bathing every inch of it, even down to my clenched, primed testicles. Her warm hands cupped and squeezed my sack, delighting in the buoyant feel of it. With amusement, she slipped one finger between my testicles and stroked along the dividing septum between them. And with each new torture, she looked arrogantly up into my eyes, knowing she had me exactly where she wanted me.\n\n\"If I let you come,\" she whispered, \"will you suck my breasts really well for me?\" She cupped my sack and stroked my shaft.\n\n\"Oh, God, yes, Hol.....Goddess\" I forced through clenched teeth.\n\n\"And you'll eat me as many times as I tell you to?\" She stuck out her tongue and licked lightly from the base of my cock all the way to the tiny slit at the head, probing inside it with her tongue.\n\nI was shuddering, having great difficulty breathing, but I stammered, \"Yes...Goddess...yes....yes....\"\n\n\"And,\" she continued, moving my cock to one side so she could lightly lick and suck my testicles, \"you'll kiss and lick any other part of me I want you to....ANY part...no exceptions?\"\n\n\"Yes, Goddess...yes! Please....I need to come so bad...!\"\n\nShe kissed along one side of my shaft, intermittently licking the underside of it and running her fingers oh so lightly along the other side of it. For added fuel, she jiggled my sack and lightly tickled it. It wouldn't have taken much for me to explode at that point.\n\n\"And,\" she plowed on mercilessly, \"you'll do ANYTHING else I tell you to?\" She kissed the head and stroked me more energetically. Grinning, she licked in a circle around that throbbing head. \n\n\"Yesss! Anything, Goddess.....ANYTHING!\"\n\n\"You're sure?\" she asked wickedly, \"even if it's really kinky or if you yourself don't enjoy doing it?\"\n\nI was in no position to bargain. My brain was starting to melt in white hot pulses of goo. And even though my mind tried to tell my mouth to ask \"such as what?\", those trembling lips blurted out, \"Of course, Holly...ANYTHING to please you!\" And so, once again, the small head compromised the judgment of the big one.\n\n\"Mmmm...I like that. But I don't like the taste of cum, so I'm just going to jerk you off for now. Just to get all this tension out of you. You're so incredibly tense, foot boy. Now, why is that?\" She grinned. Looking up into my eyes, she began stroking me furiously, squeezing my testicles and licking my shaft with her flattened, wet, hot tongue. I couldn't take the pressure any more. With a loud moan and a shiver from my chest to my toes, I spurted up over Holly's right shoulder. She giggled with glee at her power over me, stroking my cock, playing with my testicles, watching me explode in molten hot bursts until I was spent. So much pent up desire had backed up in my seminal tubules, that I must've sent a full two dozen blasts over her shoulder before the sticky bursts even BEGAN to subside. When they finally did, it was as if I'd shot my body's full compliment of blood out my penis too, because I became light-headed and weak, teetering back and forth on the balls and heels of my feet.\n\nWhen she saw that my legs were again wobbly, Holly grabbed my hands and pulled me down, urging me to sit on the floor. \"Sit, before you fall,\" she said, smiling. I slumped to the floor, gasping for air and thankful for the chance to relieve my quivering legs of the burden of holding me up. Holly took it a step further.\n\n\"Lie down,\" she said. \"Lie down on your back right here in front of the fire. Relax. Catch your breath.\" She looked down at me as I lay there. She was grinning, and I knew she was already planning more ways to keep me under her spell. Little did I know that having me lay on my back wasn't for MY comfort, but rather part of her next plan. She was always thinking, planning, scheming.\n\n\"Did my little foot boy like his reward? Does he feel good now?\" Her smile was laced with something evil, but I wasn't sure what exactly. Selfishness, I know now. Holly only gave pleasure when it suited her purposes. It was her bait and her hook. It was what kept you coming back for more, no matter how clearly your brain warned you against it.\n\n\"Now,\" she cooed, leering down at me, \"my foot boy has to do for me again. That whole dance and stroking thing got me really horny again, so I'm going to need that hot tongue of yours one more time. Mmm...yes, you do lick sooooo well. And you did promise that if I let you come you'd lick me as many times as I wanted...and any part of me I wanted. So now it's time for you to back up those words.\"\n\nI started to sit up, figuring Holly was going to lay on her back and pull my head between her legs like she'd done before. Her arm shot forward, her hand pressing against my chest. \"No,\" she said quietly, pushing me back down. \"You stay right there. I'll just straddle your head and sit right down on that wonderful tongue. It'll be comfortable for both of us. You can relax a bit...all I'll need is your tongue.\" Her eyes shimmered her evil intent. But when she saw the questioning look in my eyes, she asked quietly and bluntly, \"Tom, haven't you ever had a woman sit on your face before?\"\n\nMy dumb look was her answer. But it in no way affected her decision to go forward with any plans she might have concocted. Once Holly had decided on a course of action, there was no deterring her. To even attempt it was to risk raising her hackles. I can imagine that, more than likely, that would not be a pretty thing to experience.\n\n\"Oh, that's right,\" she recalled, \"before we met you never ate pussy before. How silly of me to expect that you'd had women sitting on your face at some time, then.\" She grinned. I got the impression that Holly was fully aware of my face-sitting virginity. My belief was that she just enjoyed both teasing and talking dirty....both of which she did to perfection.\n\n\"Well, then,\" she smiled, \"you're in for a treat. You just lie there and I'm going to sit right on your head. I'm going to sit facing your legs.\" When she saw the hopeful look in my eyes, she made sure I didn't get my hopes up.\n\n\"No, foot boy,\" she shook her head, \"I'm not going to suck you. You're going to be doing ALL the work. YOU lick ME...and lick and lick....until I come again. That's how this arrangement works. YOU do for ME. And when you're done doing that, I'm going to introduce you to another of my pleasures. After you devour my pussy til I gush all over that talented mouth of yours, I'm going to slide forward just a bit....and give you something else to lick. Now, take a few deep breaths. Once I get squirming on your face, air will be a little hard to come by. So pace yourself. I don't want you getting exhausted until your job is done. And don't panic, sweetie. I'll make sure I don't suffocate you. You just lick and leave the rest to me.\"\n\nI was still back on her statement, \"give you something else to lick,\" and barely noticed her swing her leg over my chest. While I was still pondering, she sat on my chest, her back to me. With only a few seconds hesitation, she then looked down at me, making eye contact, letting me know I had no choice in the matter, that SHE was totally in charge. As if I didn't already know that.\n\nStill wondering what the \"something else\" was that she wanted licked (though with a nagging itch of an idea skulking in the back of my brain), I saw Holly lift herself up off my chest, raising her rump in the air about six inches. She slid herself back, hovering her bottom over my head. I could only look up at it and admire it's beauty. And then, as her lush behind slowly descended, my eyes again saw the slightly splayed crevice between her cheeks and its little puckered orifice. That little hole moved up over my nose toward my eyes as her heavenly slit centered itself over my mouth. And as that awesome pink flower lowered itself down onto my lips, my eyes got one last glimpse of her cute anal orifice. I smiled just as her pussy unceremoniously plopped onto my mouth. And then it struck me as I thought how cute Holly's anus was. It struck me exactly what she'd meant by \"giving me something else to lick\" My eyes grew wide just as her full bottom completely blotted out the cozy light of the fire warmed room.\n\n\"Oh, yeah, foot boy,\" Holly moaned, \"lick me really good. I want to explode all over your face!\" She was already beginning to squirm around on my face, eager anticipation jacking up the power levels in her happily animated rump. At that young age, I never realized a woman could enjoy being licked so much or so often. But Holly was just wild about it. It caused me to wonder...just how much would my penis get to enjoy the hot Holly after all? That thought niggled at the back of my brain.\n\nI started licking, wondering with a series of backbone shivers if my last second revelation was correct or not. With a growing sense of dread, I realized that as soon as Holly came, I'd find out for sure. I started to panic...but not from the lack of oxygen, though that, too, was a contributing factor. Soon, however, the sweet scent of her sticky flower and stolen glimpses of her cheeks as they occasionally allowed in enough light to admire them, had me sighing and feasting yet again on Holly's moist, tasty treat.\n\nMy brain went bye-bye, as the focus of my very existence became the oral pleasuring, yet again, of the wicked vixen who had pompously seated herself upon my naive, college boy smile. I sighed and accepted my fate.\n\nIt's amazing how even the primal fear of suffocation can be completely dispelled by lust. No matter how difficult it became to breathe, my only focus was on the task at hand, and the taste of Holly's dripping wet slit. As she squirmed around on my face, I somehow got my hands up between her thighs, my fingers spreading her so I could get my face deeper into those slick pink folds. I was assisted immeasurably in this lofty endeavor by the eagerly wriggling Holly. Even so, I unrealistically felt as though I could crawl right inside her, entering through those soft folds, climbing in face first, licking every inch of the way. And if Holly had slammed herself any harder down onto my face, that just might actually have happened.",
        "Occasionally, she sat straight up, mashing her light carpet into my face as she wiggled about in blissful glee. Other times she lay forward on top of me, spreading her legs to give me deeper access to her silky cavern. But never was her pussy out of range of my tongue. We both made sure of that.\n\nShe even employed a very successful tactic as I sucked at her dripping treasure. She found that by simply stroking my throbbing shaft or sucking the engorged head, or by fondling my clenching jewels, that she could renew my tongue's energy level, thereby giving it a supercharged burst of power...which made for a delicious surge of erotic pleasure for her as her pussy reaped the rewards. \n\nEven though I was in slit-licking Heaven, it seemed like forever that my tongue buried itself in those silky petals. I could feel that my face was wet and sticky. I was gasping for air, but too obsessed with eating Holly to stop devouring her even for a second. And the sight of her ass rippling and jiggling right in front of my eyes capped off a delicious feast for me. I kept my eyes open as much and as often as I could, even when her bottom started slapping down repeatedly on my head. I just couldn't stop admiring those buns. Only when my passion overcame me did I close my eyes, thereby letting every erg of energy exit my body ONLY through my tongue.\n\n\"Oh...my...\" Holly moaned, \"such...a good...little...foot boy. Wonderful...pussy...licker. You're.... making...Holly...feel so....so good.\" \n\nI didn't know if it was her degree of arousal or if she was being playful in her ecstasy, but when she neared orgasm her cheeks squeezed my forehead between them, effectively locking me in place. Then those cheeks, along with her upper thighs, actually started forcing my head from side to side. Her buttocks had such a strong hold on my head that as she wiggled them back and forth, my head went with them! If I hadn't been so busy trying to make Holly come, and if I'd had enough air, I'd probably have been laughing hysterically at the thought of how humorous that must've looked. \n\nHer cheeks squeezed my face, actually lifting my head off the floor at one point as she squirmed and wiggled. Still I licked my best licks. I suppose it had become a matter of pride and challenge on my part, proving I could keep up with the rollicking Holly. Then her bottom let my head go, and it dropped with a thud to the floor. Immediately, her ass pounced right back down on it, her crotch slamming wetly back onto my still open mouth. Barely a lick had been missed. My brain attempted to register a deep pride at this fact, even as I gasped for air.\n\n\"Oh, God...I love this!\" Holly moaned loudly, grinding her sex into my face so hard that her pubic hairs were irritating my mouth and chin. \"Oh, yes...pussy boy.....lick....lick...LICK!!\"\n\nMy face was assaulted by Holly's drenched flower and rippling cheeks. Occasionally, I could see up her back to her flowing black hair, which had worked loose of its tight bun and was flying unevenly over her right shoulder.\n\n\"Tom....foot boy...my pussy boy...lick me....so, sooooo....deep! I want....to come...all over...your young....face. Oh, yes....yes! I'm going...I'm going to...to...COME!! Oh, God, God, YESSS!\"\n\nMy face was flooded with a long, forceful blast of hot liquid. The sensation was like a tube full of warmed K-Y Jelly being suddenly squeezed onto my nose, lips and chin. Holly's cheeks clenched my face even tighter and everything became dark. I could see nothing but blackness. My only sensations were of warm, liquid pulsations on my face and the lack of oxygen to my lungs. Then Holly started hopping up and down on my face, which allowed me to get quick gasps of air...when I timed it right.\n\n\"Oh....such.....a.....good....foot...boy....you're..fantastic...Tom...just..lick....me....forever!!\"\n\nWith each word she gasped, Holly's ass slammed down onto my face, as if emphasizing each one. She screamed, moaned and squirmed. All the while my face felt hot and sticky...and substantially battered.\n\n\"Oh...my God...I have to....,\" Holly lunged forward, still grinding her sex energetically into my face, and began to suck my penis like some hungry animal. Squeezing, licking and sucking it, she continued to bounce on my face. She couldn't sit still. She came buckets....or so it seemed.\n\nI came too. Holly, true to her statement that she didn't swallow, sensed my impending eruption and moved her head deftly to one side. Once again I sent white hot volleys spurting over her shoulders. I even got to see one or two of them when her manic rump had moved to one side just enough for my eyes to catch a seminal stream soaring skyward. Amidst the smothering flood of Holly's juices, I was rather proud of the strength of that liquid rocket trail.\n\nPride gave way quickly to the desire for survival. I thought I was going to drown in Holly's juices. I reached up and grabbed her spastic ass in hopes of prying it off my face. Her cheeks were so clenched with the strain that they felt like granite covered with flesh. I couldn't pry them away...at least not without causing her substantial pain. Luckily, at that precise moment, Holly slumped on top of me, drained and exhausted. Her body relaxed, and she slid forward enough that her suffocating pussy vacated my wet, irritated face. I could breathe again. I greedily sucked in huge lungfulls of air. At that point, it seemed like Holly's lungs and my own had become the hardest working organs in either of our bodies.\n\nAs we lay there recuperating, I could see Holly's thigh muscles jerking. Even her cheeks spasmed. I gasped between Holly's legs and she breathed heavily on my dribbling member. My face was sore, my testicles emptied of their goods, and I trembled all over....so, of course, I was smiling from ear to ear. Holly was making \"Mmmmmmm...\" type moaning noises down between my legs. We lay like that for quite some time, recovering our wits.\n\nA slight movement of Holly's sweat-moistened buttocks alerted me to the fact that she had recovered enough to begin to sit up. Slowly, she raised herself. She again sat on my chest with her back to me. For the first time since she'd teased me with her glorious mams, I saw the silky red blouse as she let it slide down her back. Then I watched as her right arm reach behind her to grab it away, tossing it aside, finally baring her completely. What a lovely back it was that greeted my eyes.\n\nStill atop me, she turned to the side, enough for me to get a good profile of her left breast. Grinning down at me, she fingered the pouting nipple playfully. She noticed with glee my rapt attention.\n\n\"I really enjoyed sitting on your face, foot boy,\" she said, still fondling her breast. \"And I'll bet you'd like to taste these sweet little nipples now, wouldn't you?\"\n\nI nodded.\n\n\"Mmmm....I'm sure you would. But, first, I'm going to hold you to your promise. You said you'd lick ANY part of me, not just the parts you lust after. And I told you that after you ate me, I was going to slide forward and give you something else to lick. Obviously, that couldn't have meant my tits...because they're waaaaaaaay up here,\" she smirked. \"So....what ever could I have meant?\" There was that wicked, consummately evil grin again. And my earlier ponderings about that very same statement came rumbling like an avalanche to the foreground of my brain again.\n\nHolly slid forward, along my chest to my belly. Then she raised her bottom off of me and held that position, on her hands and knees straddling me. She wiggled her bottom. Looking back over her shoulder at me, her smile was lascivious...more lecherous than the dirtiest of dirty old men.\n\n\"You like my ass, foot boy?\" she asked. I felt a shiver. but I nodded again, nonetheless.\n\nShe lowered the top portion of her body, resting on her forearms instead of her hands. This had the effect of raising her rump a bit higher in the air. Again she wiggled it playfully. She scooted back a bit, her knees moving from about my hip area to just below my ribcage. She lowered her bottom about half a foot, hovering it only a few inches above my face. Again her cheeks spread slightly in that knee bent position. The closeness of her bottom to my face showed her entire crevice - complete with its small, puckered rosette - to my glazed eyes, which fought to focus as that lush ass loomed ever closer to them. I shivered, knowing full well what was coming. As always with Holly, that shiver was ambiguous. Was it a shiver of foreboding...or of eagerness?\n\n\"Well, then,\" her sticky sweet voice drooled, \"if you like my ass so much...lick it. Just like you did my pussy. Lick it long, slow and deep. Leave no stone unturned...if you know what I mean...and I know you do.\" She leered at me, teeth glinting in the firelight. That evil, toothy grin seemed to dominate a good ninety percent of her pretty face.\n\nObviously expecting no refusal on my part, she turned and lowered her head onto my abdomen just above my sticky pubic triangle. She sighed. \"Mmmm...I've always wanted my ass really deeply licked. I can't wait.\"\n\nAgain her bottom wiggled back and forth with anticipation. Again she sighed. The wiggle that followed was a wiggle of impatience. She lowered her bottom again, this time until her tailbone tapped against my nose. Tap, tap, tap.\n\n\"Go ahead, foot boy. Start right down there at the bottom and lick my ass completely. Ohhhh, lick it nice and deep. Lick ALL of it. Oh, yeah, do that for your Holly. LIck her nice.\" The last word trailed off into a long sigh. Even putting aside our obviously D/s relationship, I couldn't bear to disappoint her. I looked at her round cheeks and the warm valley between them. I heard her sighs of anticipation. I considered my predicament, knowing full well I would never disappoint Holly. I just wasn't capable of it.\n\nAgain the cheeks moved with impatience. Holly's forthcoming words conveyed that very impatience. Her voice was smothered in that gruff voice of displeasure every woman gets when she's extremely turned on and something - anything - is delaying her gratification.\n\n\"Now, foot boy. I really want this. Lick me.\" That haughty backside tapped my head again. I took a deep breath. I heaved a sigh of resignation. I looked beyond the curve of her left buttock to see her tightlipped mouth and glaring eyes daring me to refuse. I knew it was no good even thinking of saying no. So, I did what we both knew I would do....\n\nI opened my mouth and stuck out my tongue...\n\nI had closed my eyes and stuck my tongue out as far as I could get it, as if somehow licking her from as far away as possible would mean I wasn't really licking where I was licking at all. Just as I felt the tip of my tongue slip between those arrogant cheeks and make contact with warm flesh, I felt a quick flurry of movement. Stunned and confused, my eyes reflexively opened. Buttocks and crevice alike were gone.\n\nBefore that could fully register on my brain, I felt that same bottom once again plop heavily onto my chest. I looked up and saw the evil one grinning down at me, sitting sideways on my hard-nippled pecs. Those dancing eyes were apparently deep in thought.\n\n\"I almost forgot,\" she said, tapping her upper lip with a well-manicured index finger, \"I told you back at Boogaloo that I'd finish that foot job you were enjoying so much. A promise is a promise....and we don't have a whole lot of time left together. Besides, I do believe you're a little hesitant to lick my backside for me. Sooooooo....I think I can kill two birds with one stone. I think I can make good on my promise AND give you incentive to enjoy your fanny feast all in one clever little move...if I do say so myself.\"\n\nAgain she pondered. Her finger continued to tap her upper lip, which curled more and more into a pleased smile. When that smile became so pronounced that her teeth began to show, I knew she'd made up her mind. Barely able to contain herself - and obviously very pleased with her own cleverness - she licked her lips and let me know what she had in mind.\n\n\"Hmmm....it'll take a little strength and balance on my part, but the rewards are worth it. Oh, yeah, this could be soooo fun. That's it then. Here's what we'll do. I'm going to lower my butt back down over your head like I just did, but this time I'm going to brace myself with my hands on the floor as I hover my behind over your mouth. I'm going to use my arms to keep my ass over your face because I'm going to need my feet down there at your crotch. While you're busy licking my bottom....mmmmm, just the thought of it's making me hot.....while you're doing that, I'll be finishing that foot job for you, just like I promised. And here's the incentive, foot boy. The better you lick my ass, the better I'll stroke that cock of yours with my soft, sexy feet. Now....how does that sound?\"\n\nAll of a sudden, the thought of licking Holly's backside didn't sound so bad. I had almost exploded right there in Boogaloo a short while ago, even with a fair number of staff and fellow diners milling about. I was so disappointed when she stopped that amazing foot job that I thought my brain would seize up and all those precious gray cells would leak out my ears and dribble down my neck. I so wanted to come right then and there. Holly's feet had felt incredible on my throbbing joint and I was beside myself when she said she'd continue it later. This wasn't exactly how I'd pictured it, of course, but I realized that with Holly in charge, I was probably lucky she was keeping her promise at all. My eyes were wide at the thought and I was hardly able to speak. Holly laughed.\n\n\"I guess my foot boy approves of my plan,\" she said. \"It's settled, then. You lick me, I'll stroke that fine cock of yours til you spurt all the way to the ceiling. All right, now, get that tongue ready...because how hard it works for me is how hard my feet will work for your joystick. Here we go!\"\n\nIn yet another flurry of motion, Holly hoisted herself up on her hands, looking back to see that her bottom was hovering exactly where she wanted it over my face. Then she lifted first one, then the other foot, placing them on my thighs on either side of my penis, just a few inches from the already fattening shaft. Her entire weight was on her hands and on her feet, which pressed heavily into my thighs.\n\nShe lowered her bottom so that her warm valley once again brushed against my nose. \"Now,\" she said, \"put your tongue in there and lick slowly from the bottom of my crack all the way to my tailbone. Flatten it out and lick me like an ice cream cone. Go on. When you've licked it a few times, I'll squeeze that juicy cock of yours between my feet and start stroking it. But how nice I stroke you depends on how nice you lick me. So start licking, foot boy. C'mon...chop chop!\"\n\nAll I could see was Holly's ass, shadowy and warm in it's closeness. I so wanted my promised foot job that the realization of what I was actually about to do meant nothing. I wanted those soft soles and squeezing toes all over my crank...rubbing...gliding along...jiggling it and my testicles. Oh, I wanted that so bad.\n\nI flattened my tongue and started at the very bottom of her crack, mere millimeters behind her more tempting pussy. I licked in one long, slow, fluid motion all the way to her tailbone. She sighed and seemed to lose her balance for an instant. But she recovered quickly. She lowered her bottom a tiny bit, pressing it even more firmly against my face. At first I thought her arms had weakened, but when she stopped the lowering motion and held herself firmly in place, I realized that the move was planned, and not a result of her lack of arm strength.\n\n\"Oh, that was soooo nice,\" she said. \"Use your hands and spread me open. Press your tongue in there really deep...lick as hard as you can. Just keep licking over and over. Do it real nice and I'll start playing with your cock.\"\n\nFor some reason, I started counting my licks. Maybe it was because I had nothing else to concentrate on. Who knows? In any event, I was on my seventh lick from bottom to top of Holly's crack when I first felt the stroking between my legs. Soft, warm soles squeezed and caressed my shaft from base to head, slowly and steadily. I sighed into Holly's humid, earthy valley.\n\n\"Oh, yes...good foot boy,\" Holly sighed. \"The better your tongue gets, the better my feet get. Spread me wider. Lick me for all you're worth. Oh, yes....!\"\n\nThat was all she said, and all she needed to say. I spread her cheeks as wide as I could, my besotted eyes not able to really focus. I just saw something hazy and warm that Holly wanted licked. So, lick it I did.\n\nIt ended up being a reciprocal sort of thing. The more I licked her, the more excited she got (and pleased with my effort, I believe), which led to more energetic and playful stroking of my cock by her talented feet. As you might expect, the resulting heightened arousal on my part led to more enthusiastic licking of her needy ass. And so on and so on. More thorough licking begot more stimulating foot action on my glans. A never ending cycle...and a joyous one. Oh, reciprocal bliss!\n\nBefore I knew it, I was licking her steaming butt like a hound, almost snorting as I licked her deep and hard. I could feel the heat of her skin as I licked, my own panting adding to that heat. I found myself squeezing her cheeks with my fingers as I held them far apart with my hands. And, thanks to her stroking feet, I found myself burying my face deep and licking her as if I wanted to lap my way right into her. My head was darting and bobbing as my tongue feasted and probed between her haughty globes. Holly's ass was squirming and trying to grind my battered face into a fine powder.\n\nHer gifted feet stroked and played between my thighs. Her toes tickled and teased my sack, then crawled up my shaft as if they were fingers searching a flute for the holes in its stem. Each toe seemed to have a life of its own, dancing up my shaft as her soles squeezed it warmly. Then she slowly glided her smooth soles along my shaft on both sides, up and down. Both feet slid down to gently squeeze my testicles, then just that quickly climbed back up my shaft to tease and titillate the helmeted head. I was close to blacking out on the one hand, and yet my tongue was super-energized on the other.\n\n\"Oh my.....now go for my opening,\" Holly gasped, blindly pushing her crevice into my face, trying to force my mouth into the spot where she felt her anus was. Her aim was remarkably accurate. Her hole landed on my upper lip, and I quickly adjusted my mouth to encircle it. \"Lick it, foot boy! Stick your tongue deep inside it! Suck on it! Oh my...! Oh, yes....!!\"\n\nHolly's toes were wiggling on the underside of my shaft as her soles stroked fiercely along the sides, squeezing my cock between them. Up and down, up and down, faster and faster. I knew I couldn't take too much more of this. I prayed my tongue could get her to come before I did. I shuddered to think of what might happen if I came and Holly didn't.\n\nI knew there was only one thing I could do. I licked around the tight opening, sucking and slurping on it, tongue lapping and probing. When Holly's bottom started pounding against my face again, seemingly in an effort to force my tongue inside it, I knew it was time to do just that. Grabbing her cheeks so tightly that I though my fingers would break the skin, I finally thrust my tongue inside. Holly squealed and spasmed, her gluteal muscles contracting repeatedly. When I felt warm liquid dribbling down my chin and neck, I knew I'd finally accomplished my mission.\n\n\"Oh, yes! Oh, yes..such a good...good boy!\" she screamed. \"Oh, yes...lap it...all up....all of it! Lick... your Holly...soooo...soooo good! Oh, my...good...good little...foot boy!!\"\n\nHer feet seemed on fire, stroking me as deftly as any two good, strong hands. The fire in those hot soles and toes ignited my cock beyond my ability to hold back. So....I didn't. With my tongue deep inside Holly's incredible ass, I shuddered as I sent tremendous spurts of cum between her stroking toes and high up in the air. My back arched like an oversized horseshoe. My heels dug into the carpet and my ass bounced on the floor as volley after volley creamed from my spurting cock. Holly moaned into the air...I moaned into her ass.",
        "When Holly's orgasm subsided, she temporarily lost the strength in her arms after all, and she briefly sat directly on my face, too exhausted and drained to get off me at first. She sat there panting, her mind reeling and her body trembling. I know...I could feel her behind trembling on my face. Even though I was having a little difficulty breathing with Holly sitting there, I hardly cared at all. I was as exhausted as she was, my once spurting penis now just coughing and sputtering, dribbling on itself. Holly's feet, however, still held it firmly, some of my liquids dripping from her painted toes. Gradually, she relinquished her toe hold on it and slid off of me. Or rather, I noted proudly, she sagged and flopped weakly to one side of me.\n\nHolly fell to my right side, still panting. As she lay there regaining her strength and composure, her bottom was turned toward me, about a foot from my head. I looked over at it, saw the moisture placed all over it by my hungry tongue. I had a newfound respect for that high and mighty ass. What I'd thought would be a terrible experience turned out to be much more pleasant than I could've imagined. Maybe it was because of the foot job, I don't know. But, somehow, Holly's fine derriere was beginning to capture my heart almost as much as her feet had. As I admired it, my mind brought forth memories of just how sexy and tasty it was. I had thoroughly enjoyed that ass. And I found myself hoping I'd get to devour it again. Besides, knowing now just how much she enjoyed having her bottom licked made it seem like a thoroughly worthwhile thing to do.\n\n\"Mmmmm,\" Holly moaned, still on her side, \"that was wonderful, foot boy. That little trick worked very well, I'd say. That is definitely something we'll have to do more of. You never cease to impress me with that tongue of yours.\" She rolled over briefly to smile at me and added, \"And your enthusiasm.\" She winked at me, and then rolled back over on her side. She seemed as if she wanted to doze off. Long, quiet sighs escaped the lips I couldn't see.\n\nI returned to looking at her behind. I felt the sudden urge to hug it and kiss it. To this day I can't explain why. Nonetheless, I did just that. I slid over to that round, soft rump and held it in my hands, kissing it as if it were a long lost relative I'd just seen for the first time in years. I nibbled at it with my teeth and rubbed my face in it, kissing it happily. This all took Holly quite by surprise. And though she was startled by my impromptu lip service to her derriere, it did seem to have the effect of rousing her from her pre-slumber stage. She sat partially up and turned to watch me shower her bottom with affection. Her smile was not the usual wicked Holly grin, but a genuinely pleased, happy smile.\n\n\"My,\" she said, \"it seems my foot boy has grown very fond of my backside.\" She wiggled it for effect, asking sweetly, \"Does this light your fire, Tom? Does my ass now make you as hot as my feet and pussy do?\"\n\nI answered by playfully kissing and licking one of her cheeks. I even sucked on it lightly, as if to give it a hickey to remember my lips by. She laughed and reached back to tousle my hair. \"Ooh, such a frisky little foot boy. So, now I have one more tool to help me keep you in line, huh? You LIKE my ass. Mmm, now that DOES multiply the possibilities, doesn't it? Oh, yes, I definitely made the right choice making you my foot boy. I'm just sorry we're going to have to call it a night soon, or I'd find so many kinky ways to play with you.\"\n\nI stopped kissing her ass and looked up at her. A sad look must've crept onto my face. She tousled my hair again and said quietly, \"Oh, now, don't give me those puppydog eyes. We may have to stop for now, but we'll play again, I promise. I still have many things I want to try with you...and teach you. We have so many games to play, you and I. But, you still live with mommy and daddy, so I have to get you home before they send out a search party for you.\"\n\nShe swung herself around, deliberately raising one leg over my head in an arc as she did, giving me a completely unobstructed - and very close - view of her succulent slit. She let me ogle it for a few seconds before completing her roll to a sitting, and then standing, position. She so loved making me drool.\n\n\"Get dressed, Tom,\" she said. \"If we had more time, I'd have you dress me, too, but that would certainly lead to other things, and we really don't have the time. I'm sorry you never got to play with my breasts like we'd intended, but like I said, time is a factor here. We really must work things better next time, maybe start earlier, or....\" Her face lit up.\n\nI wasn't even fully standing yet when she reached down and grabbed me by the hands, tugging me abruptly into a teetering standing position. Her eyes were glittering brightly in the reflected firelight. They shone impishly. I knew her brain was concocting something deliciously evil. I couldn't wait to hear it.\n\n\"We'll make Thursdays OUR night, Tom. How's that sound? Every Thursday we meet at McDonald's and I bring you here to train you in all sorts of sexy fun. I'll use my sexy foot boy for all kinds of dirty, kinky delights. That sound good?\"\n\nI was still waiting for the kicker, but I nodded my enthusiastic, \"Yes, ma'am!\"\n\nHolly continued, \"BUT...this driving you home thing can get tiresome. For our next meeting, you MUST convince your parents you're staying over a friend's house all night. Then you can sleep here. And that means....\" She walked up close to me, one deft hand quickly grasping my penis and sack simultaneously, and whispered in my ear, \"That means I get to use you for so, so many pleasures hour after hour, all night long. Mmm....and I can think of so many fantastic things to do if we're not restricted by time.\"\n\nI hardened in Holly's hand. She grinned. Her hand teasingly stroked and fondled me. Her snakelike tongue licked her still shiny lips. \"Keep that thought for next time,\" she said, \"and remember to tell your folks that you're staying over a friend's house. Do that and we'll have such an incredible time together. But for now,\" her hand released me, \"get dressed and let's get going before your parents send a S.W.A.T. team looking for you.\"\n\nWatching Holly dress only fueled my desire for more play time with her. But I knew the evening was over. I knew all I could do now was reminisce about this night and wait for the hours to crawl by until next Thursday. It would be another agonizing, sleepless week. But it would be worth the wait come next Thursday. This I knew.\n\nHolly put her pants on without putting on her panties. Those she gave to me as another gift, for me to worship at night along with her stockings. She knew her personal, intimate clothing would help keep me sniffing about for her like a heated mutt. And she was right.\n\nAfter dressing, we both sadly walked out to the car. Holly locked up her home. I held the car door open for her, and she smiled and said, \"Thank you, foot boy,\" and tickled my chin with one long, red fingernail. After I got in on my side, she started the engine. While the engine warmed to a soft purr, Holly reminded me about the blindfold. I saw no need for it, it being dark out and all, but Holly took no chances. She insisted I wear it. I didn't argue. Nothing new, there.\n\nThe entire drive back to McDonald's, Holly found ways to keep me heated. Whenever she stopped at lights or if she was driving for a long period on a highway, she let me get down on the floor to kiss her feet. She also introduced two new ways to tease and frustrate me. While stopped at lights, twice she spread her legs and allowed me to lean down and kiss between them. Knowing that there were no panties beneath the stretchy material of her pants made those kisses that much more exciting. But the urge to chew right through those pants to once again sniff and devour her dewey rose was almost more than I could resist. And for one long stretch on a highway, she allowed me to reach into her blouse and fondle her breasts. She even let me suck the nipples all too briefly. Oh, yes, Holly knew how to keep me panting and drooling for her. Even though I could see nothing with that damn blindfold on, my hands and mouth recorded every texture and flavor, my nostrils every scent. For most of that ride home, I wanted desperately to shove my throbbing shaft deep inside the pantiless Holly.\n\nSo what did Holly do about this? Why, she had me unzip and take my cock out for her again. And for the last twenty minutes or so of the drive, she played with it mercilessly. She had come to think of it - and me - as her personal toy. And so had I.\n\nWhen we finally got to McDonald's, I was a wreck. Holly giggled her pleasure at seeing me so hot for her. She just loved having that power over me...or any man. She had me keep the blindfold on right up to the last second when she pulled up next to my car in the McDonald's parking lot. Only then did she allow me to remove it.\n\nI blinked my eyes, adjusting to the light again. While I was doing this, Holly leaned over, her breasts still bouncing free of her blouse from when I'd suckled them. She came right over to my side of the seat and straddled my legs, lifting herself high and shoving those melons smack dab into my kisser, rubbing them all over my face. When I tried to grab her and hold her tight so I could suck them again, she pulled back. Instead, she sat down on my lap and ground her crotch into my swollen member, still throbbing outside my pants. When my eyes rolled up in my head and my eyelids fluttered shut, she then pulled my face back down into her ample cleavage, smothering me oh so pleasantly. Holding my face there, she continued her grinding in my lap. The scent of her flesh and the warmth of her crotch against mine nearly made me explode right then and there. But again, Holly was only teasing and torturing me.\n\n\"Just a little something to keep you hungry for next time,\" she said, wriggling away from me, leaving me flushed and gasping, ready to beg for more. My head was spinning. As so often happened in Holly's erotic presence, I felt woozy. I could only groan at the loss of her bosom and gyrating groin. She, of course, reveling in her power, smiled wickedly. I could almost believe that the sexual power alone was more important to Holly than even the most mind-blowing of orgasms. In fact, I wondered if perhaps sexual power, moreso than physical stimulation, was what gave Holly her strongest orgasms in the first place.\n\n\"You have to go now, foot boy,\" she said, kissing my cheek softly, almost in a motherly way. Sadly, I dropped the blindfold onto the seat and got out, not wanted to leave her. But, I knew I had to. As I turned from her, fumbling for the door, I felt I wanted to turn and plead for her not to go, but I knew that couldn't be. I knew she'd just quietly whisper, \"till next time, my foot boy,\" and that would be it. So, I opted for salvaging a little bit of dignity from this night, and simply leaving, for now...til we met again in a week.\n\n\"Good night, Goddess,\" I said, reluctantly closing the door behind me.\n\nHolly's hand stopped the door from closing as she emphasized one last time, \"Make sure you tell your parents you're sleeping over a friend's house next week. Then you'll get to enjoy these a whole lot more,\" she laughed, wiggling her succulent mams at me one last time. It didn't even phase her that someone coming out of McDonald's sucking on a milk shake might look over and see her shaking her gorgeous breasts for her doting foot boy. As I thought about it, I came to the conclusion that she might even enjoy that in her usual twisted way.\n\n\"I will, Goddess...I will,\" I sighed, my eyes fixed on those brazen boobs, my mouth hungry for them.\n\nI started to walk back, away from the car door, disappointed to have the evening end, when Holly covered her mouth and began to giggle. I thought I'd done something wrong somehow. Then I followed Holly's amused gaze and blushed, though in the darkness I'm sure no one could tell.\n\n\"You'd better put that away before someone sees it bobbing about down there,\" she laughed.\n\nFeeling my face flush once again, I looked around quickly as I hurriedly shoved my penis back into my pants and zipped up. Flustered, I looked sheepishly at Holly, though a part of me was more than a little excited at having been exposed in public like that. Not that I enjoyed flashing per se, but because I had been thus exposed due to Holly's perverse machinations and because it had amused her. Being exposed in public, for Holly's pleasure, held the same enticement for me as kissing her feet at Boogaloo Crick had...embarrassment or no. It was an open acceptance of her power, her dominance, over me... and it felt so...right.\n\n\"Good night, foot boy,\" she chuckled. \"Dream of me, And I'll see you promptly at 6pm next Thursday\" she winked.\n\n\"Oh, I will, Holly. I surely will dream of you,\" I said to myself. To her, I simply said, \"Yes, ma'am.\"\n\nI closed the door and stepped back, leaning against my own car door as Holly pulled out of the parking lot. As she drove by, she lowered her window and tossed something at me. It was her second \"gift\" to me...her panties. She pouted, saying, \"How could my foot boy forget his Goddess's gift to him? Do my panties hold no interest for you?\"\n\nShocked that I could have forgotten them, I held them close to my chest and blurted my apologies. Holly just winked at me. When she said \"Kiss them,\" I did. I held them to my face and sniffed in their sweet aroma. The wicked one nodded her approval.\n\n\"Kiss them often, foot boy,\" she said, suddenly driving off, her arrogant smirk glowing in the darkness. I held them to my face and sniffed them, my eyes again fluttering to a close. I was hard as a rock again, with no relief - except maybe Holly's panties and nylons - in sight. I had to stand there nearly fifteen minutes before my penis had relaxed enough for me to sit even slightly comfortably behind the wheel of my car. Sniffing and nuzzling her panties surely didn't help matters at all, either. I squirmed in the seat, trying to will away the raging hardon that begged for release.\n\nSitting there painfully in my car, I couldn't help but ponder how all of a sudden Thursday had become my favorite day of the week, a day that had previously meant little or nothing to me, except that it heralded the coming of Friday, the final day of the school week. Now it meant so much more. From that point on, even the mere mention of the word, \"Thursday,\" would - and still does - make me sweat.\n\nFinally, I calmed enough to drive off, still occasionally sniffing and kissing Holly's panties, and praying for next Thursday to come as quickly as possible. And every time I wished for Thursday to be here, the sweat poured again, and I squirmed in the seat.\n\nThat night I spent hours with Holly's panties and nylons, rolling around in my bed moaning and touching myself. But several orgasms later I was still restless and yearning. Sleep finally came, but it was filled with erotic dreams of Holly, her sarcastic, evil grin and her wickedly glinting eyes. Even in my sleep she continued to give me spurting relief. The times that I awoke during the night, between dreams of Holly, I prayed for Thursday to hurry...and the sweating would begin all over again.\n\n  END       \n\n\"Holly's Seductive Toes Ch.2\" - copyright Bacomicfan/Mike, 2003 "
    ],
    "authorname": "Bacomicfan",
    "tags": [
        "seduced by feet",
        "dominant woman",
        "submissive male",
        "foot worship",
        "body slave",
        "body worship",
        "foot",
        "foot job",
        "toe seam"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/hollys-seductive-toes-ch-02"
}