{
    "title": "Dream within a Dream Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 1 - Prologue \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redhead reporterette at 7:00am Monday, August 24th. \"Channel Two News has learned that Lieutenant Janet Dixon-Riordan of the Nextdoor County Police has resigned her position with the Force after allegations of corruption in the drug trade of that county. She protests her innocence, and has filed a lawsuit against the SBI and Agent Sergeant Sharples for defamation of character.\"\n\nBettina continued: \"But no matter the outcome of that, her effectiveness with the Nextdoor County Police's anti-drug units, considered one of the State's very best, has been destroyed. The Nextdoor County Police Chief made a statement saying the SBI was deliberately sabotaging his Department's drug units in order to have the SBI's Narcotics Task Force encroach upon the County's sovereignty. The NCPD Chief also stated that he will never cooperate with the SBI in the future, and that he'll avail himself of Commander Troy and the TCPD's expertise if his Police Force needs assistance. Nextdoor County already has a contract with the Town & County's Crime and Arson Labs to circumvent the need to use the State's Crime Labs.\"\n\nBettina continued: \"It is incidents like these, and deep tensions between the SBI and local law enforcement agencies, that could become a huge issue in the race for Governor. SBI Director Jack Lewis is widely believed to be running, and will announce his candidacy as a Democrat over the Labor Day weekend.\n\n\"The Republican Party has not said who might run against Lewis, but denied that they have approached Town & County Police Commander Donald Troy as a potential candidate. Asked for comment, Commander Troy issued a statement that he definitively is not running for Governor nor any other political office, and that he is not a member of any political party.\"\n\nAs we listened in MCD, I said \"That's not all I said. I told Bettina that I would never run as a Republican after what they did to John Cummings in the last election, and that I consider the Republicans to be cowards and Democrat appeasers. Funny how she left that out.\"\n\n\"Yeah.\" said Detective Joanne Cummings, John's cousin. \"They'll never bring that up if they can help it. They're part of the problem.\"\n\n\"Agreed.\" I said. \"The Democrats, Republicans, and Media are a cartel, a triumvirate of pure corruption.\" Have I mentioned that I have no respect for the political parties, and an even deeper hatred for the deeply corrupt Media?\n\nAt that moment, we received a surprise visitor, as Cindy ushered her older sister Molly into MCD. \"Look who I found wandering in the hallways.\" Cindy said.\n\n\"Hi Molly!\" I said happily, hugging the lovely, pregnant blonde warmly. \"How's the baby?\"\n\n\"Wonderful.\" Molly said. \"How's his dad?\"\n\n\"I'm surviving.\" I said. \"Thanks to all these guys. What are you doing up here?\"\n\n\"I have an appointment with someone later this morning,\" Molly said, \"so I thought I'd stop by and see you guys.\" I could see Cindy out of the corner of my eye; she was as confused and surprised at Molly's presence as I was.\n\n\"Okay,\" I said, \"Well, here's a cup. Have some coffee.\"\n\n*BUZZ!* *BUZZ!* *BUZZ!*\n\nIt was my personal cellphone. My nephew Todd was texting.\n\n\"Hey guys!\" I said. \"My nephew Todd says he's the proud father of a new baby boy!\" Amidst applause, I said \"I'm going to go on up to University Hospital. Captain Ross, you can come see your new first cousin twice removed.\" That meant grandchild of Cindy's first cousin, my sister Elizabeth. Todd's child was also Cindy's third cousin. If you're confused by all that, you are not alone.\n\n\"I'll come along later, and bring Teresa.\" Cindy said quietly.\n\nPart 2 - Births and Deaths \n\n\"Hi Uncle Don!\" Todd said happily, presenting me with a real cigar with a blue bow on it as I stepped off the elevator onto the maternity ward floor of University Hospital. \"Aunt Laura is examining Jeanine. They had to do an episiotomy; he came a couple of weeks late and is 7 pounds, 13 ounces!\"\n\n\"Good grief!\" I said. \"What's his name?\" I asked.\n\n\"Michael Todd Burke.\" Todd said. \"The first name is not my idea, but I'm okay with it.\"\n\n\"Speaking of Michael, where is he?\" I asked.\n\n\"In the waiting room.\" Todd said. \"Since nothing gets by you anyway, I'll tell you that he was not allowed into the delivery room with us, partly because he's not the father, but partly because Aunt Laura specifically forbade it. And he's not wanting to see you, either.\"\n\n\"No surprise there.\" I said. \"How are things between you and him?\"\n\n\"Oh, not bad.\" Todd said. \"He's almost apologetic about Jeanine leaving me for him. I'm not particularly happy about it, but if if's what she wanted, then I won't make an issue of it.\"\n\nWe went into the waiting room, where Michael Burke was. \"Commander.\" he said shortly by way of greeting. \"I'll leave you two alone for a few minutes.\" He left without shaking hands or any further acknowledgement of me.\n\nAs we watched the TV, I heard Priya's commentary on KSTD: \"Tomorrow night at 11:00pm, Lance Priemus is scheduled to be executed by the State for the murder of a black police officer and his wife eight years ago. Local residents will remember the case and the controversial trial that followed.\"\n\nPriya continued: \"Priemus has claimed that he has been denied proper counsel as well as a proper course of appeals. The case was racially charged at the time and during the trial, but the Reverend Joseph E. Williams of the A.M.E. Church has taken up Priemus's cause publicly, saying he should not be executed before the facts of the case are re-examined. He and SBI Chaplain Steven Ikea are with Priemus now, and Pastor Raymond Westboro of the First Baptist Church, of which Priemus had been a member, is also in Jacksonville.\"\n\n\"I don't know why,\" I said to Todd, \"but I feel like I just heard something very important.\"\n\n\"What, the execution of a criminal?\" Todd asked.\n\n\"Yeah.\" I said. \"Something about that is setting off my 'spidey sense'.\n\n\"Uh oh.\" came a voice from the hallway. \"That usually means someone is about to get something made of iron shoved up their butt.\"\n\nIt was Cindy Ross who'd said that as she entered the waiting room, with Teresa in tow. They both hugged Todd as they congratulated him and received cigars. Cindy hugged me in congratulations, also, and I returned it. Todd was then fetched by a nurse and left us in the waiting room.\n\nIt was about 10 minutes later that Laura came and got me. \"You and Cindy can have a couple of minutes. Jeanine is exhausted; it was a hard delivery for her.\" We followed her in the room. Cindy and I congratulated Jeanine, who was lying sleepily on the bed.\n\nThe lovely black woman, Nurse Jones, had been taking the baby's temperature, and at Todd's direction handed him to me. I held my great nephew, who was scrunched up but a very big newborn baby. He had all his fingers and toes and looked healthy. I contemplated the miracle of Life as I handed him to Cindy. After a few more minutes, Cindy and I made our goodbyes.\n\n* * * * * * * * * * * * * * * *\n\nNinety minutes later, I was called on my cellphone by Nurse Jones. I came back up to the Hospital, where Nurse Jones caught me at the front door.\n\n\"There is a woman in the lobby waiting room.\" Nurse Jones said. \"She says she's Todd's family, but when I suggested she go up to the maternity level waiting room, she said she'd wait before doing that.\"\n\nI looked in the lobby waiting room, seeing the backside of a woman covering her face with a shawl. It was her lovely legs that gave her away to me.\n\n\"It's good.\" I said. \"I'll handle it.\"\n\n\"Who is she?\" Nurse Jones asked.\n\n\"Like she said, she's family.\" I said. I walked into the waiting room and in front of the woman. My sister Elizabeth was looking up at me. \"Come on.\" I said, throwing my shoulder forward in a gesture for her to follow me. Silently she did so. We went to the elevators but I went past them to an elevator that normally was not available to the Public. If I'm a Police Commander, I might as well use the power and privilege of it, I thought to myself.\n\nI looked out before getting off the elevator on the maternity ward floor. There was no one in the immediate vicinity. I had Elizabeth go into a small breakroom nearby, then went to Jeanine's room. She and Todd were with the baby.\n\n\"Dad is out getting us something to eat.\" Todd said. \"What's up?\"\n\n\"Bring the baby for a second.\" I said. Todd did not ask questions, but collected his new son and we went into the hallway. Luckily no nurses took note of us as we brought the baby into the breakroom.\n\n\"Mom!\" gasped Todd when he saw his mother. \"Why didn't you just come on up?\"\n\n\"I think it's best I not be seen.\" Elizabeth said. She turned her attention to her new grandson as Todd handed him to her. There was something close to a tear in her eye as she looked down on him.\n\n\"Another boy.\" Elizabeth said. \"Always boys. Carole's the only girl.\" Her words triggered something in my mind, and I was having a reverie as Elizabeth spent a few moments with little Michael Todd.\n\nThe door to the breakroom opened and Nurse Jones looked in. \"Okay, Commander,\" she said, \"we need to get that baby back in his mother's room, pronto.\" Todd took the baby back, kissed his mother, and quickly headed back. I escorted Elizabeth back to the lobby and outside.\n\n\"Thank you, baby brother.\" Elizabeth said, trying not to show emotion. \"I'll be going now. You have too much going on in this God-forsaken County to be worrying about me.\"\n\n\"Well, then... congratulations, Grandma.\" I said to her in a teasing voice. She cut her eyes at me, then nodded and walked off towards the visitors' parking lot. She ducked between some cars, and I saw why: Michael Burke was driving into the lot.\n\nHe strode up to the entrance, carrying two sacks of Egg McMuffins, his face registering surprise when he saw me. \"Still here, Commander?\" he asked, his voice unfriendly.\n\n\"Yep. For professional reasons.\" I said. \"My profession. Congratulations to you. Goodbye.\" With that I strode to my Police SUV as Burke entered the Hospital.\n\n* * * * * * * * * * * * * * * *\n\nMeanwhile...\n\nDetective Sergeant Molly Ross Evans of the Midtown Police Force entered the Nextdoor County Police Headquarters. She checked in at the Duty Desk, showing her badge and saying she had an appointment with Lt. Dixon. A moment later, the beautiful redhead came and got her.\n\n\"Come on to my office.\" Janet said. Once inside, she had Molly sit down. Offers of coffee were politely declined.\n\n\"I'll get right down to it.\" Janet said. \"You might have heard of what happened to me.\"\n\n\"Yes.\" Molly said. \"It was disgusting, malicious. If you need help beating their false accusations, I can contact Commander Troy.\"\n\n\"Oh, I've already talked to Don.\" Janet said. \"He's going to bring the crowbar down on the bastards so hard they'll wish they'd never heard of my name. But in the meantime, I've resigned from the Nextdoor County Force here. With my divorce going through the works, and the publicity over all the crap that's gone down, I need to just get away anyway. And that is why I've called you.\"\n\nMolly looked surprised as Janet said \"You have been recommended as my replacement. If you accept, you'll be the Lieutenant of the Vice Division here, which is 99% drug interdiction. We're not as big as Midtown, we're nowhere near as financially well-equipped as Commander Troy's Police Force, but it's a good job, these are good cops you'll be working with, and the people here in Nextdoor County are good people. Well, there's the rich ones around Lake Reservoir that think they rule the world, but you can handle them.\"\n\n\"Oh, wow.\" Molly said. \"I'm... uh... I'm flattered. I'm also a bit stunned; I wasn't expecting this.\"\n\n\"I know.\" said Janet. \"I also know you're pregnant with Commander Troy's child. And your sister is the Captain of Detectives over there. You'll be a closer to them, a lot closer, without the pesky nepotism laws to worry about.\"\n\nMolly's heart was surging as she realized the personal benefits of the opportunity. \"It sounds great. But I'll have to think about it. I've got a great team and situation in Midtown.\"\n\n\"Tell you what.\" Janet said. \"Let's go talk to the Chief, who is a good friend of old Chief Griswold, then you can meet the people here. And then you can make your decision. I know it won't be easy to uproot from Midtown, but don't close the door on us yet.\"\n\n\"Oh, I'm not doing that.\" Molly said. \"I think it could be a really great thing.\" With that, Janet led Molly to the Chief's office...\n\nPart 3 - The Dream \n\n\"So... what do you think?\" Tanya asked. We were in her office, as she had asked me to come and look at the written questions submitted by Dr. Bonnie Karpathian pertaining to the Black Widow. Some were simply about Angela Harlan. Others delved into Tanya's relationship with Pete Feeley, then her handling of things after his death. The last several questions were about the raid that proved fatal to Angela.\n\n\"Should I have a lawyer look at them first?\" Tanya asked.\n\n\"I wouldn't blame you if you did. Or at least get Paulina to glance at them.\" I said, referring to the lovely Assistant District Attorney.\n\n\"I'm not answering those towards the end.\" said Tanya. \"I'm wondering if I should answer any of them.\"\n\n\"Well,\" I said, \"just between us and the lamp-post, and I'll deny it if anyone else ever asks, but my advice would be to only answer the ones about Angela herself. Don't answer anything about your own state of mind at any time. Maybe I'm paranoid, but...\" I let the sentence hang.\n\n\"I hear you.\" Tanya said.\n\n* * * * * * * * * * * * * * * *\n\nBack in my office, I was working on my computer, finishing some paperwork and looking at the previous day's duty logs. I drank some coffee and leaned back...\n\n... and suddenly I was back in what looked like the hallways of University Hospital, but the rooms were totally empty, and dark... dark like that painful night that Cindy had been shot and I was waiting to hear if she survived it.\n\nDown the darkened hallway stood a woman... and I saw that it was Angela Harlan. She was again nude except for the high-heel black pumps as she strode down the hallway towards me, the heels clicking on the black tiles of the floor, the mane of black hair flowing behind her. I felt like I was unable to move.\n\n\"Things weren't as they seemed to be, were they, Don?\" she said to me, her voice seeming to echo in the hallways, and in my head. \"I wasn't what you thought... and I'm not what you think of me now. And she's not what you will think, either...\"\n\n\"Who is 'she'?\" I asked. Angela just grinned, then turned and walked back down the hallway. I was suddenly right back in my office, everything normal, but seemingly quiet. The matchstick Trojan Horse was seemingly looking at me. I looked back at it for a second, then cleared my head and got hold of my senses.\n\n\"Good grief, what is in that coffee?\" I thought to myself. And then I let myself remember the past few days...\n\n* * * * * * * * * * * * * * * *\n\nAfter the first dream of the Black Widow at my house, I had remembered the envelope of information she had left after her death. The next morning, I went and got Cindy and we descended into the secure basement. We went into the Evidence Rooms and I led Cindy into a back area, filled with boxes. I selected a box and brought it off its perch.\n\nMost closed-case evidence went to the storage facility that was connected to the Courthouse, but this box had remained behind on my orders, because of its special nature. I opened the box, and saw that the contents were still there.\n\n\"This box contains the information Angela Harlan left behind after she died.\" I said. I rummaged through the papers and found what I was looking for. \"This is a list of bankers.\" I said. \"I didn't realize it at the time, of course, thinking it was just potential Black Widow targets. But look at it now.\"\n\nCindy took the paper. \"Mr. Harkins, Second National Bank. Ricky Morris, J.P. Goldman Bank. Hamilton Phillips, Grove & Partners, P.C. Richard Hudson, Reems & Berry Insurance... oh my God, Don!\"\n\n\"Yes.\" I said. \"At the time I thought these just might have been Black Widow targets. What we didn't know then but can see now is that Angela gave us the names of people we now believe may be associated with Superior Bloodlines and/or our Consultant of Crime.\"\n\n\"Some other names are here.\" said Cindy. \"Charles Franklin, City & Counties Bank; Lawrence Kendrick, People's Bank of New York; Henry Boxman, Rainbow Insurance of San Francisco; Perry Richards - DFW Regional Banks, which are in the Dallas-Ft. Worth area.\"\n\n\"Needless to say,\" I said as I photographed the sheet of paper with my personal iPhone, \"I'll be looking into these people.\"\n\n\"What's this?\" Cindy said as she rummaged through the box, finding another slip of paper. \"It says 'found out about the four'. Any idea on that?\"\n\n\"Yes, and I'll tell you about that when we get upstairs.\" I said.\n\n\"How did you come to remember this?\" Cindy said.\n\n\"Just popped into my head.\" I said, not giving my partner the real reason. She peered at me, then turned to put the box back up with what I faintly thought was a look of understanding beyond the spoken word...\n\n* * * * * * * * * * * * * * * *\n\n\"The Four,\" I said to Cindy in my office, with my anti-bugging device full on, \"is a small group of people that originally consisted of Thaddeus Ward of Ward Harvester, Karen Warner Harlan, Coach Brian Harlan, and Angela Harlan herself. When Angela was waxed, my sister Elizabeth took her place in the group. And when Coach Harlan died, he was replaced also... but I'm not sure who replaced him.\"\n\n\"Two men, two women.\" said Cindy. \"Is that a pattern or a coincidence?\"\n\n\"Pattern, I think.\" I said. \"I'm not sure who 'Number 4' is. I was thinking he might be Sharples, then I had an idea it was Thomas P. Cook. And then I get a vague idea it might be our Shadow Man himself... but he'd be extending himself if it was him, so I dunno.\"\n\n\"What's their purpose?\" Cindy asked.\n\n\"Industrial espionage.\" I replied. \"Industrial secrets. They were competition with the Corrigan Cell, among other things. They'd planned to take Dynacorp and use it as a base along with Ward Harvester, but Seth and BOW Enterprises got in the way of that. So now they're using Elizabeth's smuggling pipelines to move technological secrets from point to point.\"\n\n\"So why haven't we busted them yet?\" Cindy asked.\n\n\"Based upon what evidence?\" I countered. \"Hell, I only know they exist because of Angela's note, which I am guessing is the reason she waxed Burleson. For all we have on them, they could be just a foodie and wine-tasting group instead of a criminal syndicate.\"\n\n\"Seems Angela Harlan is much more useful to us in death than she was in life.\" Cindy said, a hint of bitterness in her voice.\n\n\"Don't let Tanya Perlman ever hear this,\" I replied, \"but if Angela had not gone bad... she might have been one of the best Detectives we ever had, or anyone else ever had... present company included. She was onto this stuff before we ever were.\"\n\n\"Yes,\" Cindy said, \"but she did go bad. And I'm going to make sure you don't go bad. This Shadow Man makes people do crazy things.\"",
        "I didn't say anything... but I knew Cindy had just stated an epiphany to me...\n\n* * * * * * * * * * * * * * * *\n\nBack in the present, I was doing my research on my secure-line computer. Every one of the names on Angela's list was coming up all gold and roses, as far as getting evidence was concerned. Their banks all had associations with Gresham & Mason law firms and/or their attorneys. And many of the banks had accounts for 'Victory Christian Ministries' or other groups with Christian-sounding names...\n\nPart 3 - Desperate Chase \n\nThe heat of the summer day only served to add to the stillness and the quiet of the air. I looked out over Reservoir Lake, not even bothering to throw my fishing line into the water, just watching as the man sitting beside me flicked his line with the expertise of a practiced hand.\n\n\"So Chief,\" I said to Chief Griswold as we (really, just he) fished in the lake behind his house, \"what's bothering you?\"\n\n\"You're good, but not that good.\" Griswold replied affably. \"My wife talked to you, didn't she?\"\n\n\"You once told me that a magician should never reveal his tricks.\" I replied. That got a smile from the old Chief. But he was right.\n\nEarlier in the day, I had been working in my office when Helena buzzed me and told me that I had a surprise visitor... Mrs. Griswold. I had her come into my office.\n\n\"Something is really bothering him.\" Mrs. Griswold said to me. \"He won't say what it is, but I know... it's that execution that is going to happen tomorrow. I think he knows something about it, something that isn't right. Could you come and say hello later today?\"\n\nOf course I said I would, and here we were in the early evening, fishing.\n\n\"Well, she's right.\" Griswold said. \"She can read my mind. Happens after years of marriage; can't keep a secret from that woman. You'll find out that about your wife after enough years.\"\n\n\"She already can read my mind. My wife is trained in secrets of the highest order.\" I replied. \"Thankfully, my dog Bowser runs interference for me.\" Griswold chuckled again.\n\n\"Well, we both know that you are the one who the darkest secrets dread the most.\" he said. \"But you're right, something's bothering me. And it's that execution in Jacksonville tomorrow night.\"\n\n\"Why is that?\" I asked.\n\n\"Let me make a short story long and tell it to you.\" said Griswold. \"A few years before you came to the Force, just after the merger and just after I'd become Chief, I came into contact with Lance Priemus. On the outside, he appeared to be a respectable businessman. Behind the scenes, he was a con artist, fraudster, and was using his business as a backdoor pipeline for drugs.\"\n\n\"Captain Malone was in charge of Vice, and the investigation dragged on for some months.\" said Griswold. \"I began realizing something was wrong; it was my first real thought that Malone wasn't on the up-and-up. So I had a few of people I trusted, including Harold Bennett, then-Lieutenant Charles, and our new rookie Detective on the Force, Tanya Perlman, do a quiet investigation. They came up with plenty of evidence to arrest Priemus, and I went to then-A.D.A. Krasney with it. He was willing to bring the case to the Grand Jury, but he gave me another idea instead.\"\n\nGriswold continued: \"I went with Charles to see Priemus. We showed him what we had, we arrested him and took him through booking, but instead of the interrogation rooms, I brought him to my office. We made him a deal: if he became a C.I., and helped us bust the people behind the pipelines, including the dirty cops involved, then his case would be quietly dropped, or we might even give him immunity if he would have to testify against someone big. We'd have five years under the Statute of Limitations to bust him if he turned on us, so that was hanging on his head, too.\"\n\n\"He agreed to do it,\" Griswold went on, \"and for a year we amassed a huge amount of information. Didn't quite get to Malone, but we found names of suspect Uniformed officers, we found a distribution link, we were getting close to the funding. And on top of it, Priemus was becoming aware of someone behind the organization, and gave me the first hint of what you now call the 'Shadow Man', though I didn't know that at the time. We thought we were about to make a major, major bust. And then... it all came apart.\"\n\nI could see the pain on the old Chief's face as he continued, looking out over the lake: \"Priemus was busted over in Westphalia. The story went that he and some friends had been drinking and partying near the City. They apparently drove down to Westphalia, where they were stopped by a black police officer. They got the drop on him, took his gun, put his own handcuffs on him, then forced him into their car and drove him to his own house.\"\n\n\"There, the two men took turns raping the cop's wife in front of him while the woman in their group taunted the cop. Then the cop and his wife were both murdered, and it was a pretty grisly way of doing it, from what I remember.\"\n\n\"Yes.\" I said. \"I heard some details of that.\"\n\n\"Yes,\" said Griswold. \"It was very, very bad. Multiple non-fatal but painful stab wounds over time, causing intense pain, then their throats slit. The crime lab over there came back with DNA from a semen sample, and it was only one guy: Priemus. Apparently the other guy used a condom, and Priemus was too inebriated to notice.\n\n\"That didn't come for few days, though; they got Priemus because the cop had radioed in the license plate when he stopped them, and it was Priemus's car tag number. The cop did not have a camera in his vehicle, by the way.\"\n\n\"So,\" said Griswold, \"everything Charles and Bennett and Perlman and I had been doing was shot to hell. I realized then that I'd violated a cardinal rule of confidential informants: when you develop one, develop another for corroboration... and replacement, if need be. We had nothing.\"\n\n\"To shorten this up: Daniel Allgood joined us in Internal Affairs, becoming the head of it over time. Perlman wanted to keep investigating, but it was clear she was too good at crime scenes to be allowed out of MCD. So you, Don, were not the first to try to corral her into the CSI group.\" said Griswold. I smiled at that one.\n\nGriswold said \"And Malone saw what was going on, and backed off. I got about twelve potentially dirty cops off the Force, cleaned up a lot of the 'soft' stuff going on, like taking bribes to not give out a ticket or to look the other way at a small-time drug transaction in one of T-Square's clubs. Things calmed down for a while.\"\n\n\"So why is this bothering you?\" I asked.\n\n\"It's twofold.\" said the Chief. \"First, there were some real anomalies in the Priemus case, anomalies that would never stand up to Iron Crowbar scrutiny. First, the car tags called in were Priemus's... but it wasn't his car being driven. It was the car of the woman who was with them. The car that was pulled over was light blue; Priemus's car, a different make and model, was black.\"\n\n\"Ooooooo...\" I said. \"Wait a minute. The officer that pulled them over and called it in... wouldn't the radio dispatch have given him that information? He'd see the discrepancy and be more cautious? Maybe call for backup? Certainly he wouldn't be susceptible to being ambushed...\"\n\n\"See?\" Griswold replied. \"It already is not standing up to your scrutiny. But let me go on: after finding the police car abandoned on the road, the Westphalia County Sheriff's Department sent deputies to the home of the officer and his wife, where they discovered the bodies. They then went to Priemus's home and found him there, passed out, and I mean passed out to the point they couldn't really revive him. They took him to the hospital, where he slept it off with an I.V. to rehydrate him, then they arrested him.\"\n\n\"Upon interrogation, Priemus did not remember anything past being at a nightclub with his friends. He said he did have plenty to drink. The nightclub cameras showed him and his two friends, then later showed them in the parking lot getting into the woman's car... with her license plates on the back.\"\n\n\"The two others, the man and woman, were found and arrested. The woman turned State's evidence, and then the other man also took a plea deal.\" said Griswold. \"They said Priemus was the leader; that he'd ambushed the cop, that he was a racist and had the idea to violate the black wife in front of the black husband, and that's what they did.\"\n\n\"Wow.\" I said. \"Did the Westphalia Crime Lab do any toxicology, any blood tests on Priemus?\"\n\n\"Yes.\" said Griswold. \"But it only shows Priemus was legally drunk. No other drugs.\"\n\n\"Yet he was so passed out the officers at the scene could not revive him and took him to the hospital.\" I said.\n\n\"You're already catching on.\" said the Chief. \"It gets more strange. Priemus's lawyer contacted me right after the arrest, and said Priemus wanted to give me some information. Wouldn't tell the lawyer what it was, he would only tell me. So I went over, saying it was related to a case in my County in which Priemus was involved. But the Police there wouldn't let me talk to him.\"\n\n\"And it wasn't a refusal, but excuse-making.\" Griswold continued. \"Stuff like 'oh, he's in with his lawyer right now'... 'oh, he's in his cell for lunch'... then finally they said he was being transferred to a more secure facility... which was the Men's Prison near Midtown, and once he was in there, I was flatly denied access. Always seemed to be the same guard, too, but I didn't realize that until long afterward.\"\n\n\"Channeling your inner 'Crowbar', I'm sure.\" I said.\n\n\"Yes.\" said Griswold. \"And as the case went on, I could see that it was being expedited... and to the point that Priemus's rights were being violated. You remember the Timothy McVeigh Oklahoma City bombing?\"\n\n\"Sure.\" I said. \"He allegedly said he didn't want appeals, and it was the fastest time from arrest to execution at the Federal level that I can remember.\"\n\n\"Exactly.\" said the Chief. \"Some criminals are on Death Row for twenty years, go through layers of State and Federal appeals. But not McVeigh, who they said didn't want and thus refused all appeals. Well, it was the same for Priemus. One of his lawyers told me it was the worst abuse of the appeals process he'd ever seen by the Courts at every level. So Priemus is going to be executed tonight, and there's nothing I can do about it.\"\n\n\"Anyway,\" continued the Chief, with a sigh, \"I told the lawyer that I'd been denied all chances to see Priemus. He said he told Priemus, but that Priemus still wouldn't tell him anything, and said to just forget about it. And all I could do at the time was keep working here.\n\n\"I knew something was wrong, but just could not get to it. I'd get leads on crimes, have my people go after it, only to find it'd already happened and we were too late... or nothing would happen, that we'd been found out and the crime called off. I don't mind saying that I knew it was too much for me.\"\n\n\"So I hired the best people I could find and put them to work. Perlman in MCD wanted to keep working on things, but there would always crop up a case taking her attention. Malone was making some spectacular, really spectacular busts in Vice, but stuff was always just getting through. Of course Malone had Ikea and Geiger working for him, then Croyle came along and I thought she was honest but was being used as a front. It took you to figure out what Malone was up to, favoring one gang over the others.\"\n\nGriswold then began to grin as he continued: \"And then, against all advice, I hired this young woman who'd been a physical fitness guru. I hired her for her physical abilities, to help Tanya if anything went down, but I could tell she had a lot more in her head than she was being given credit for. Malone bitterly opposed her hiring, said he thought she was a dyke-- a lesbian, I should say, to be politically correct-- and I said I had no evidence of that and hired her anyway. That one has worked out very well.\"\n\n\"I daresay.\" I said, knowing how well Cindy Ross had done.\n\n\"But that wasn't my best hire.\" said the Chief. \"When Campus Police Lieutenant Maxwell told me about a certain redheaded guy that had brought in his nephew for drug crimes on campus, had figured out some things they never had any idea about, and who'd been a Captain in the Military Police in the Army Reserve... well, I didn't have to be a psychic like Harvey Eckhart to know I needed you in my Police Force.\"\n\n\"And I appreciate you taking the chance on me.\" I said. \"I wouldn't have missed this for the world. We are getting close to busting one of the greatest criminal operations in history... literally.\"\n\n\"By the way,\" said Griswold, \"Britt Maxwell also told me that from the day you walked into Dr. Fredricson's office, the celebrated sex professor was looking at you as if she was hopelessly in love with you. That's worked out, too.\"\n\n\"Yes, love at first sight... and the feeling was mutual.\" I replied. \"So Chief, why didn't you tell me about this Priemus business before?\"\n\n\"I didn't connect the dots for a long time.\" said Griswold. \"And then you got onto this Shadow Man's scent, and it was kind of in the back of my mind but you were rolling and Malone was gone. In hindsight, I should've remembered and should've said something.\"\n\n\"No biggie.\" I said, knowing that things like this happened. \"In fact, I just came across some old evidence that I had no idea would be so helpful when I first saw it.\" I told him about Angela Harlan's list of bankers.\n\n\"Well, Chief,\" I said as I got up, \"I probably can't stop this execution, but I'll see what I can do about getting information from Priemus. I have a feeling he knows something that can help us.\"\n\n\"Good luck, Crowbar.\" the Chief growled. \"Good luck.\"\n\n* * * * * * * * * * * * * * * *\n\n\"He is growing like a weed.\" I said as I held baby Peter Donald Feeley. I had called Tanya, then come over to her house. Officer Pete Feeley's mother Pamela had retired to her own room to give me a chance to talk to Tanya.\n\n\"So what do you know about that Priemus case?\" I asked.\n\nTanya said \"That's one of those cases where I wish we'd had you with us then. He was a C.I. for us, then got busted on the other side of the State. It looked weird from the get-go, but we had our own stuff to worry about and we didn't have an SBI Reserve then. So we had to move on.\"\n\n\"Anything that he gave you then, that you didn't understand then but think it might be helpful now?\" I asked.\n\nTanya thought about it. \"No.\" she finally said. \"We were using him to get information on drug pipelines. And we got good stuff and made some good busts, or at least Malone and Vice made the busts. But Captain Malone is gone now, so I don't know if there's anything Priemus had that could help us now.\"\n\n\"Did Priemus have any weird habits that come to mind now?\" I asked.\n\n\"The only thing I can remember that struck me,\" said Tanya, \"is that he always went to church. If one didn't know better, one would think he was as religious as Joanne Cummings is now. I always thought he was trying to weasel into the church's confidence and scam them, but who knows...\"\n\n\"Which church?\" I asked.\n\n\"Oh, First Baptist.\" said Tanya. \"Priemus was good friends with Thomas P. Cook, who was a deacon then, I guess 'deacon' is the right word, and also Perry Richards.\"\n\nThat name struck a chord. \"Who's he?\" I asked. \"I don't think I know him.\"\n\n\"Oh, he worked at the County Regional Bank down in Coltrane County for a while.\" said Tanya. \"But he lived up here. He was a handsome man, married but working through several married women in the church. Nothing new there; ask your mother or Elsie Gringer about how much adultery goes on amongst the members of First Baptist and First Methodist churches. Anyway, Perry had a full head of hair, could've been a politician with his made-for-TV looks.\"\n\n\"Sounds like you knew him very well.\" I said with the merest hint of true understanding.\n\nTanya grinned her cherubic grin as she said \"What can I say? I like sex with handsome men, present company included. Anyway, Perry moved to the Dallas area to work with another bank. Coltrane County is boring as hell, of course, and he really jumped at the chance to go to a bigger city like Dallas.\"\n\n\"I see. Someone made him an offer he just couldn't refuse.\" I said. I tickled baby Pete under the chin, making him laugh. \"Well, I better go so you can put this little man to bed. I'll see you in the morning...\"\n\n* * * * * * * * * * * * * * * *\n\nTwo o'clock in the morning, Tuesday, August 25th. I was furiously working on my laptop computer. I had just finished looking into the files Susan Wexler had secreted on the chip in the DVD jewel case. Sure enough, a woman's name was showing up as a C.I. for Susan, but she had been even more...\n\nMy researches were interrupted as my wife came down to the den. \"It's late, darling.\" Laura said. \"Can't it wait until the morning?\"\n\n\"No, honey.\" I said. \"It's about Lance Priemus, who is scheduled to be executed at 11:00pm tomorrow-- actually tonight, now. So time is of the essence.\"\n\nLaura disappeared into the kitchen and came back with a tall glass of ice-cold sweet tea. I expressed my gratitude, then drank it down thirstily. That, of course, gave my sneaky wife time to look at my computer screen and see what I was working on. Good 'Company' agent, she is.\n\n\"Finding anything?\" she asked.\n\n\"First, look at this.\" I said. \"It's the medical examiner's report of the black wife that was raped and murdered. Notice anything strange?\"\n\nLaura read the report. \"Stab wounds to the breasts, nipple cut off, stabbed in her anus with the knife, extensive vaginal damage from the rape... grisly stuff. So what's the issue?\"\n\n\"The vaginal damage. Think two men would do that much damage taking turns a couple of times?\" I asked. \"And here's Bettina Wurtzburg's medical exam that was part of the evidence file on her. She was gang-raped by at least four men, multiple times.\"\n\n\"Pretty similar damage.\" Laura said, looking at the information. \"So yes, you have a point there. Unless one or both of the two men are really well-endowed, that is pretty significant. But I'd have to actually make an examination myself to see for sure. So, anything else on this Lance Priemus?\"\n\n\"He had a connection to a Perry Richards from the Dallas area.\" I said. \"An investigation was opened by the Texas Rangers and the FBI on Richards for money laundering, but they couldn't get anything concrete on him. By the way, you get one guess who gave them the tip on Richards.\"\n\n\"I'm stumped.\" Laura said, not really wanting to play the game at this hour of the morning.\n\n\"One Detective Angela Harlan, who was working down there at the time.\" I replied, then said as I went into a near-reverie, \"You know... Harlan may have been onto the whole Oldeeds child smuggling ring down there, or at least tugging on some threads. She had some involvement in investigating Sharples, who himself was investigating Oldeeds, and she had a list of bankers or insurance people that all are panning out as possible connections to the Superior Bloodlines web.\"\n\n\"Too bad she went bad.\" Laura replied.\n\n\"Yeah.\" I said. \"Laura, I've been meaning to ask you... we've been cutting back on me taking those 'gray viagras' since Wargrave had me put through that brainwashing process... are there any side effects to the pills, or to withdrawing from them?\"\n\n\"What do you mean?\" my wife asked, fully attentive now.\n\n\"I've been having... weird dreams. Almost like visions.\" I said. \"Just at odd times, odd hours, usually when I'm tired.\"\n\n\"What kind of visions?\" Laura asked in her professional, professorial voice.\n\n\"Just... well, it's like someone is talking to me, telling me things.\" I replied. \"Then I follow what the voice said, and a good lead shows up.\"",
        "\"Well,\" Laura said, \"you were under tremendous stress at the time you underwent that process, you've been subjected to levels of these drugs for some time. Tell you what, after you get this Priemus thing worked out, come to my office Wednesday morning, and I'll run the usual battery of tests. It'll be for my research, too, and you're due in for that anyway. And then you can walk down the hall and talk to Bonnie Karpathian about the Black Widow case.\"\n\n\"I am not looking forward to that.\" I said.\n\n\"I understand.\" Laura said. \"Anyway, come on up to bed and get a few hours sleep, okay?\"\n\n\"I'll be there in a minute.\" I said, and Laura knew that 'a minute' would not be a minute as I said \"You'd be surprised how hard it was finding the names of the two people with Priemus the night of the murder. I finally got a 'Danny Ellis' and his wife 'Dora Ellis'.\"\n\n\"What happened to them?\" Laura asked.\n\n\"Danny went to prison for his role in the murder.\" I said. \"Surprisingly light sentence for accessory to murder, then paroled out after just three years for good behavior and jail overcrowding. That issue of early releases was what got the Democrat defeated and Val Jared elected Governor, by the way.\"\n\nI went on: \"Anyway, Ellis got out, then got blown away in the City during a drug raid... led by one then-Lieutenant Susan Wexler. One of her officers shot Ellis. It was ruled a good shoot, but records after that are sealed, and I don't have time to bust through that right now.\"\n\n\"What about his wife?\" asked Laura.\n\n\"Dora Ellis.\" I said. \"Turned State's Evidence in the crime. Blamed Priemus all the way. Said her husband was abusive towards her and she was too scared to not go along with them, but her husband was just Priemus's lackey, too. Husband corroborated that he was abusive towards her, surprisingly enough. She said Priemus led the whole thing, acted like a savage beast the entire time, and she was as scared of him as she was her husband. Divorced the husband while he was in jail, then went off the grid. Hasn't shown up since.\"\n\n\"Remarried?\" Laura asked.\n\n\"Maybe,\" I said, \"though I've found no record of that yet. I'm missing something...\"\n\n\"You're tired.\" my wife said. \"Come on, it's bedtime.\" I relented, closing down the laptop and letting my wife escort me upstairs to bed.\n\n* * * * * * * * * * * * * * * *\n\n\"Commmannnderrrrrrr...\" I heard the voice say as I thought I was sleeping.\n\n\"What, Angela?\" I asked in my dream state.\n\n\"She's not what she seems.\" said Angela's voice. \"What was her maiden name, by the way?\"\n\nMy eyes popped open. I was in my bedroom, my wife asleep beside me. I sat up, then got up and rushed back downstairs. I think Laura woke up, but she didn't come after me.\n\nI got onto the computer and looked. Dora Ellis. It took a while... her DMV records seemed to be missing in this State, but a blanket search found DMV records in California... \n\n\"Oh my God.\" I said quietly. Her maiden name was 'Dora Boxman'... she was the daughter of one Henry Boxman of San Francisco... whose name had been on the Black Widow's list...\n\nPart 4 - The Long Wait \n\n6:00am, Tuesday. I'd called the Chief and asked him to come into his office early.\n\n\"You want to go down to Jacksonville to try to talk to Priemus before they execute him?\" Chief Bennett asked.\n\n\"Yes sir.\" I said. \"I've uncovered information that I need to ask him about before he's executed tonight.\"\n\nThe Chief peered at me. \"Don, you were up all night working on this, weren't you?\"\n\n\"Yes sir.\" I said.\n\n\"There is no way in hell I'm letting you drive, then.\" said the Chief. \"Of course you'll take Captain Ross, and I'll personally work with Croyle and Perlman on anything they need. But I want you to take Martin Nash, too. He and Ross can take turns driving.\"\n\n* * * * * * * * * * * * * * * *\n\nTo get to Jacksonville, the easiest and fastest way was to go by the four-lane highway to Midtown, then the Interstate towards Southport. Martin Nash was driving, and at 9:30am we arrived at the State Capitol. I'd called ahead for an emergency appointment with the Governor, which he'd quickly accepted.\n\nAs we were ushered into the Governor's private office (as opposed to his public office with the big conference table), I said \"Governor, may I introduce my partner, Captain Cindy Ross?\"\n\n\"Why you certainly may!\" exclaimed the Governor. \"It is such an honor to finally get to meet you, Captain. I've heard so much about you and your accomplishments.\"\n\n\"Thank you, sir.\" Cindy said politely as she shook the Governor's hand. \"And this is Detective Martin Nash, one of our best officers on the Force.\"\n\n\"Ah, yes, I think I've met you, Detective Nash.\" said the Governor. \"But it was at a reception with FBI officers in the City, if I recall.\"\n\n\"Yes sir.\" said Martin Nash, who then quickly added \"My girlfriend works with the FBI and I escorted her to the reception.\"\n\n\"Ah, I see.\" said the Governor, and I'd noticed his eyes squinting, as if trying to remember something as he peered at Nash. Then Jared remembered our presences.\n\n\"Ah, please, sit down, have some breakfast with me.\" said the Governor, directing us to a table where there were four place settings. Some eggs, bacon, biscuits, and fruit were on the side table. This was not ceremonial: the Governor filled his plate and made sure we did the same. I was hungry and took the opportunity to eat a good plate full of eggs and bacon, as did Martin Nash, following my lead. Cindy stuck with the fruit.\n\n\"So, Commander,\" said the Governor, \"I'm glad you were able to come early. Things are going to explode later today as that execution in Jacksonville draws near. The Media always makes a huge mockery of Justice, making us look like butchers for following the law and carrying out a death sentence. They love to concentrate on my role as Governor, which will be to confirm that no clemency is being given and telling them to proceed.\"\n\n\"I understand, Governor, and I appreciate you making time for us.\" I said, \"And the execution is why I'm here. I have two requests of you, related to each other. I really need to talk to Lance Priemus before he is executed. Can you get me a pass to see him? And can you delay the execution for any length of time so I can spend some time talking with him? It's vitally important to one of my cases.\"\n\n\"I'm sure that it's important, since you came here like this.\" said the Governor as he ate. \"I can try to get you a pass to see him, but the Prison System can deny you access anyway. It's a pretty rigid system when someone is on Death Watch, which started 24 hours before the time of the sentence being carried out.\"\n\n\"What about a delay?\" I asked.\n\n\"That... is far more difficult, I'm afraid.\" said Governor Jared. \"A stay of execution may come from the State Supreme Court or the US Supreme Court, but that's not likely. Judge Leahy of the Appellate Court in your area is usually rabid about issuing stays of executions, and the State Supreme Court has to rap his knuckles and override him. But he actually announced he'd be taking an extended weekend out of State, and won't be back until Wednesday. I'm really stunned at that one.\"\n\nThe Governor continued: \"As to me, I could stop the whole thing, give him clemency, commute his sentence to life in prison. But there's two reasons why I have to reject doing that. First, you all know I ran for Governor as a law-and-order candidate, and I believe in the Jury System and the Courts that gave this sentence, and I believe it should be carried out. If I try to delay it, that might open the door to a rush of appeals and make a mockery of the whole process.\"\n\n\"What if he's innocent?\" I asked. \"What if he was set up?\"\n\nThe Governor peered hard at me. \"I know you're not one of those wishy-washy types that would ask that just to delay or hinder the sentence from being implemented. And you're probably the only person in the State right now that I would even listen to if you have some evidence to back up your assertion.\" Nash and Cindy were peering at me as hard as the Governor was.\n\n\"Well, sir,\" I said, \"it's not really an assertion. There are some strangenesses, some issues that I've found, but I don't have anything solid that I could take to a Court to get a stay. And no, I wouldn't tax your patience to take my word on a whim.\"\n\n\"It's too bad about the timing.\" said the Governor. \"But I'll call down and try to get you inside to see him.\"\n\n\"I'd appreciate it.\" I said.\n\n\"Maybe you could pretend to be a preacher and get access to him.\" said Cindy.\n\n\"Except that all three of those preachers already down there know me personally.\" I said. \"So Governor, what is the second reason you said you can't stop the execution?\"\n\n\"Purely social politics.\" said Jared. \"Black civic leaders were all over this case from the beginning of it. White-on-black crime. Priemus actually got the 'aggravated murder' and the death penalty because the victim was a police officer, but the Black civic leaders concentrated on the skin colors... they don't have that many white-on-black crimes anymore, since the FBI all but wiped out the Ku Klux Klan decades ago.\"\n\n\"So they really pushed this one hard.\" continued the Governor. \"Reverend Williams is the only one making a case for Priemus's innocence. And if I were to even delay the execution for anything but hard evidence showing his innocence... I don't have to spell out what the Media will make of that, do I?\"\n\n\"No sir.\" I said emphatically. \"You do not.\"\n\n* * * * * * * * * * * * * * * *\n\nIt was already beginning to be a madhouse at the State Prison at Jacksonville. A gathering of people, mostly young, were outside. They bore signs that protested the death penalty in general, some of them calling Governor Jared 'the butcher of Westphalia' and such stuff. There was also a group of mainly blacks, who were eager to see Priemus die for murdering a black police officer, and their signs were pretty ugly towards him. Fortunately, the well armed guards were able to open a corridor so that we could drive my Police SUV inside the compound.\n\nThat was the easy part. Once inside, the Warden of the Prison came up to us.\n\n\"The Governor called, but unfortunately it's out of even my hands. Only lawyers and clergy meet with the prisoner. His family will get to see him about 9:00pm tonight, but that's it.\" said the Warden. \"I'm sorry, but once that Death Watch clock starts, it's really tough.\"\n\n\"I understand.\" I said to the Warden, then turned to Cindy and Martin and said \"We're stymied.\" We were shown into a waiting room, which had magazines and a television, which was showing one of the cable news networks. We sat down to wait.\n\n\"Okay, Commander,\" Cindy said quietly, \"you slept most of the way to Midtown, then to here. What's up with this?\"\n\nI said \"I'm not saying he's an innocent man, but I think Priemus was set up to take a fall. I think he may have been drugged, and either participated in the crime not knowing what he was doing, or he was unconscious and they jacked him off and put his semen in the dead woman's vagina. The license plates mysteriously changed from the time the car left the parking lot at the bar to when they were pulled over. Priemus's appeals have been expedited and squelched like none I've ever seen before. And last but not least, Appellate Judge Leahy took vacation time right when this was happening, which is a 'Jupiter leaving its orbit' kind of strange.\"\n\nMartin Nash said \"With respect, Commander, that's a pretty large number of people conspiring to put a man to death.\"\n\n\"Yes.\" I said. \"And I am wondering why they're bothering to go through with the whole thing. Hell, it'd have been easier to shoot the man in the back of the head, dump his body, and be done with it. The guy was on the periphery of a drug cartel; it'd be attributed to a drug-related execution.\"\n\nI got out my iPhone and showed my officers a photo. \"This is Dora Boxman Ellis, the woman who turned State's Evidence on Priemus. She may show up around here, and I'd be greatly interested in talking with her. So if you see her, give me a head's up.\"\n\nJust then the Reverend Joseph E. Williams, black pastor of the A.M.E. Church in my Town came into the room. He was wearing a light grey suit similar to what I often wear, with a black shirt and his white clerical collar around his neck.\n\n\"Why Commander Troy!\" he exclaimed. \"They said you were here.\" He surprised me by turning our handshake into a hug. \"Hello Captain, Detective.\" he said to the others. \"Why did you all come down here?\"\n\n\"I'm hoping to talk to Priemus before they execute him.\" I said quietly. \"Anything you can do to help me with that?\"\n\n\"Uh, let's sit down over here.\" Williams said, leading me to a nearby table that had a couple of chairs. Once we were seated, he said, his voice barely above a whisper, \"There is no way I can get you inside to talk with him. The prison is on lockdown. He's isolated in the death chamber area. He wants to talk to his lawyer alone, but they won't allow it; there is always someone in the room with them. I've sat with condemned men before, and I've never seen anything like what is going on here now.\"\n\n\"Why do you think that's happening?\" I asked.\n\n\"I have no idea.\" said Williams. \"Look, Commander, I know you've been investigating that White Supremacy group that Malone was part of. I know it, the whole black community knows it. And they're saying Priemus was part of that group and that is why he raped that black officer's wife in front of him then murdered them both. But I don't buy it, not all of it. And I don't want to see an innocent man go down for something he didn't do, not like this.\"\n\n\"Do you think you can ask him some questions for me?\" I asked, hating to do this, but desperate to somehow get a question to Priemus. \"Just one, really. Ask him who his ultimate boss was, who the 'Shadow Man' is. I think he'll understand if you ask it that way.\"\n\n\"I'll try, Commander, I'll try.\" promised Williams. \"I don't know if I can get any alone time with him, though. Chaplain Ikea sticks to him like glue; I don't know why. Then Pastor Westboro comes in and out. He was one of the pastors of First Baptist when Priemus attended services there, and he came down right when I did. I've been trying to help the lawyers get Priemus a stay, but it's been so tough that even your crowbar can't pry us anything to crawl through.\"\n\nJust then another figure came in, wearing a clerical collar, tall and slender, curly hair a bit messy. It was the ever-loathsome Steven Ikea. I had not seen him since the day I physically destroyed him at Ward Harvester a year before.\n\n\"The Lord's blessings upon you, Commander Troy.\" Ikea snarled sarcastically. \"May He forgive you your hideous sins. Still carrying that filthy instrument of the Devil, I see.\" He was talking about my red crowbar, which the prison officials had allowed me to bring inside with me. In fact, we were still armed with our guns, too.\n\n\"And about to use it on you again, Ikea.\" I replied.\n\n\"Your day will come, Commander.\" said Ikea levelly. \"And it will be a glorious day watching you receive the Lord's vengeance for your iniquities. The Lord will smite you down as you helplessly wave that crowbar in defeat.\"\n\n\"Ah now, Chaplain Ikea,\" said another voice, belonging to the man that had entered the room. He was wearing a black shirt and black pants, and the white clerical collar. He was taller than Ikea, as tall as me, and his beak nose under the spectacles he wore was unmistakeable. It was Pastor Raymond Westboro of the First Baptist Church, and Town & County Councilman as well. \n\n\"Forgive the Commander his crowbar.\" said Westboro. \"It is his Palladium. What would he be without it?\"\n\n\"Yes, Pastor.\" Ikea said shortly, looking darkly at me. \"If you'll excuse me.\" With that, Ikea stalked out of the room.\n\n\"I'll go see if I can get a word in with the prisoner.\" said Rev. Williams quietly as he got up. He also left the room.\n\n\"Ah, Commander, Captain, and Detective Nash.\" said Westboro, his bright eyes looking over us. \"I must say I'm surprised to see you here. Protesting the execution of the prisoner?\"\n\n\"No, Pastor.\" I said. \"We were hoping to talk with the prisoner before his sentence was carried out. He once operated in our County, and I was hoping he'd clear up a few small things before he meets his Destiny.\"\n\n\"Ah yes, I remember.\" said Westboro. \"He seemed to be such a stalwart member of our Flock. His fall was most saddening. He has repented of his crimes, and the Lord Jesus's forgiveness will shine for all to see as he goes to his Reward. But you, Commander, you're not a forgiving man, are you?\"\n\n\"Depends.\" I said. \"But my job is to enforce the Laws of the State, solve crimes, and protect the good People of the County... many who attend your church, Pastor.\"\n\nWestboro chuckled. \"Yes, that is true. By the way, they're serving lunch in the cafeteria, and I do suggest you eat, as they will not serve dinner due to the impending execution. If there's anything I can help you with, please let me know.\" He left the room.\n\n* * * * * * * * * * * * * * * *\n\nIt was a long wait. We did eat lunch in the last half hour the cafeteria was open. I noted that a number of off-duty guards were eating, as well as some staff and people who had been allowed in to watch the execution.\n\nI did stroll down the hallways. looking around. As I came to the area that was the first locked-door checkpoint to the jail, I noticed one man staring me down. He was a bit overweight, but probably fit enough underneath like Sergeant Rudistan on my Force, but his face was chubby and he had a drooping mustache like Dick Ferrell.\n\nTo my surprise, the other guards melted into the interior of the prison, leaving this man 'alone' with me, albeit on the other side of the door of iron bars.\n\n\"People usually try to break out of here, not into here.\" he said. \"Don't even think of trying it, Mr. Iron Crowbar.\"\n\n\"Trying what?\" I asked affably.\n\n\"We're not idiots, Commander.\" he said.\n\n\"You have the advantage of me. What's your name?\" I asked.\n\n\"I'm Watch Captain Lockhart.\" he said. \"This is my prison. I am in charge here, I run it. And you're not getting inside... unless you want to commit a crime and come in wearing an orange jumpsuit instead of carrying that red noodle in your hand.\"\n\nThe effrontery was amazing, I thought to myself. What was up with this guy? And I knew I had something of a reputation around the State, but he seemed to really know who I was and why I was here.\n\n\"I'll pass on that.\" I said. \"You have a nice day, Captain Lockhart. I'm sure we'll be seeing each other again soon.\"\n\n\"For your sake, you better hope not.\" said Lockhart.\n\nGoing back to the main room, I saw Nash and Ross playing chess on Cindy's cellphone, taking turns with their moves. They looked up at me as I came in.\n\n\"Well, no chance of seeing Priemus.\" I said. \"They have encased him in hoops of iron, and there is no way to pry him out to talk with him.\"\n\n\"What were you hoping to get?\" asked Cindy.\n\n\"Names.\" I said. \"The Shadow Man's name, in particular. Maybe some top lieutenants in the organization.\"\n\nNash asked \"Sir, do you find it suspicious that there are no less than three Reverends here with him?\"\n\nI replied \"Ikea is the one I'm not feeling. I can understand Westboro, who knew him before, and Priemus may still be a member of First Baptist. Williams has been working on the legal angles of the case. Ikea? That's the strange one.\"\n\n\"He hasn't learned any manners since the last time you saw him... and whipped his ass.\" Cindy said.\n\n\"Which I think you witnessed despite being on restricted duty, if memory serves me correctly.\" I said. Cindy knew full well what I was saying by that. Nash didn't know the whole of it, nor of what Cindy had been carrying slung on her shoulder, nor what had happened in the metalworks classroom of Town High School later that night.",
        "\"A beautiful piece of work, it was, too.\" Cindy replied, deadpan straight, not rising to the bait.\n\nPart 5 - The Executioner's Song \n\nAs evening came on, the waiting room began to fill up. Priemus had little family, just some cousins. They stayed in there a while before being asked to go to another part of the prison. Some reporters that were being allowed to witness and report on the execution had been shown into the waiting room with us.\n\nPriemus's lawyer came out right around sundown. He was youngish, probably still idealistic. He introduced himself as Jeff Nations and said he was headed out to make one last try at a stay of execution. He then left. Some moments later, Reverend Williams and Pastor Westboro came into the room. Only State Chaplain Ikea was allowed to stay with the prisoner on his last walk to the execution chamber.\n\n\"I never had a chance to even speak to him.\" said Williams quietly to me a few minutes later. \"Guards just would not leave us alone, even after I protested... especially after I protested. Something's up, Commander, something's up. And I think you know that.\" I just nodded, then thanked Reverend Williams for trying on my behalf.\n\nThe crowd outside was getting a bit larger, many burning candles. It was not as large a crowd as I'd seen on newscasts in the past; this case had not really generated much Media interest beyond excoriating Republican legislators as bloodthirsty savages determined to use the death penalty to scourge the populace. Yeah, I'm exaggerating; and yes, I hate the Press.\n\n\"Ladies and gentlemen,\" said a youngish man in a suit with very black hair, \"I am Assistant Warden Cox, and I am here to brief you on what is going to happen tonight, barring a stay of execution. The prisoner is having his last visit with his family, and will be served his last meal in about half an hour. He requested steak, chicken tenders, and pizza.\"\n\n\"After the last meal, he will be escorted by the Warden, prison guards, and and the Communications Officer, who will receive any messages if there is to be a stay of execution. The prisoner will also be escorted by the SBI Chaplain Ikea on his final walk to the death chamber.\"\n\n\"The prisoner will be strapped to the table, and then three drugs introduced into his body via two tubes, one in each arm.\" said the spokesman. \"The first drug is a sedative that will render him unconscious. The second is a fast-acting paralytic, which will cause the muscles to stop working completely, including the diaphragm. The third is a potassium compound that will stop the prisoner's heart, rendering him instantly dead.\"\n\n\"In this State, there are three men behind a wall that have three buttons to push in front of them. They will push these buttons in order at the same time. Only one button actually delivers the drug, and the whoever's button delivered the first drug may or may not be the one to deliver the second drug when the second buttons are pushed, and so on. Are there any questions?\"\n\n\"Yes.\" said a reporter. \"I'm John Hardwood, KXTC News. Lethal injection has been outlawed by several States as being painful, and therefore cruel and unusual. Will this prisoner feel pain as he is executed by the State?\"\n\nThe young man replied \"There has been controversy over the painfulness of this procedure. However, if properly done it will be painless for the prisoner, and death will be pronounced quickly. Yes?\"\n\nA reporter from the City asked \"Will you be in touch with Governor Jared the entire time, in case he changes his mind and gives clemency to the condemned man?\"\n\n\"Yes.\" said Assistant Warden Cox. \"We are in touch with the Governor, who of course could stop the whole procedure at any time. We're also prepared to receive and act upon any stays from the Courts, should they come. Any other questions?\" There were none.\n\n\"Okay, we'll escort you to the witness room now. Police officers with weapons will be required to clear them and have plastic ties placed on them.\" This was done to my weapon as well as Cindy's, Nash's and several other officers in the room. Some of these officers were from Westphalia, here to witness the execution of the man the State and a Jury had said had murdered one of their brothers-in-blue.\n\nWe were then led down a long, darkened hallway. There was an occasional window to the outside, and I could see the group of death penalty protestors along the outside fence, the candles shining brightly in the darkness of the night.\n\nThe witness room was like a small theater room, with rows of chairs with armrests. The family was at the front left, and the reporters dominated the front rows of seats. I and my fellow officers sat near the back. The Reverends Williams and Westboro were near the door, to my right. Watch Captain Lockhart was also in the room, standing by the door as if guarding it.\n\nThere was a TV in the witness room. It had been turned to the news, which was of course about the impending execution. Another TV beside it was closed-circuit, available to neither the Press nor the Public. It showed the hallway the prisoner was walking down, the Warden leading, the Chaplain beside him reading Scripture out loud.\n\nOnly the Warden and Communications Officer came into the death chamber with the condemned man. The Prisoner, Lance Priemus, seemed calm, but there was a sheen of sweat glowing on his brow. He did not resist as he was strapped onto the table.\n\nThe Communications Officer was holding a telephone to his ear. The television screen of the media broadcast was showing in every detail possible that Governor Jared was on the phone, was denying clemency, and ordering the Warden to proceed.\n\nThe Warden read from a script the Court order to put Priemus to death, then asked if the prisoner had any last words. Lance Priemus looked up at the window, and I prayed that he would shout the name of his traitor, the Shadow Man. But he only shouted \"Deuteronomy 32:35!\" then let his head fall back to the table. The Warden left the room.\n\nThe closed-circuit TV showed the three guards ordered to press a button. It actually just dripped a saline solution, to make sure the lines were clear. Then the guards were ordered to press the first of the three buttons.\n\nThe prisoner was looking straight up at the ceiling. I watched, expecting him to close his eyes, but I saw his face getting red, then redder.\n\n\"AAAUUUUGGHHHHH!! AAAUUUGHHHH!!\"\n\nPriemus screamed, his arms and legs fighting the straps as he tried to move. He was obviously in tremendous agony. None of us had noticed the guards had been ordered to press button two, which they'd done. After seconds more of screaming, the prisoner fell unconscious. Then the guards were ordered to press the last button, which they did with an unlimited capacity for obedience.\n\nI'd felt Cindy's hands grasp my shoulder and squeeze it as she watched the horrific scene in front of us, followed by her burying her face in my arm; she could not bear to watch. I glanced around the chamber, seeing Nash's mortified face, the shock on the faces of the reporters... and in one person, the merest hint of a gleam of the eye.\n\n\"Something's gone wrong!\" I heard someone shout. \"Something's not right here!\"\n\nFor Priemus, it was finally peace. It was anything but peaceful as reporters tore at the door, almost knocking down the two ministers as they rushed to leave and get the story out. I noted behind the glass that prison officials, including the Warden, were scurrying about, and that the room was becoming like a disturbed ant bed.\n\nI saw that the doctor was checking on the prisoner, making the certification that meant that whatever secrets he'd held were now gone. Lance Priemus was dead.\n\nIt is amazing how slowly politicians act... until their jobs are threatened. I saw the Warden and his young assistant come into the witness room, their bulging eyes staring at me. Other police officers and guards had been looking around in confusion, but followed the the Wardens' look, and I soon and suddenly felt many pairs of eyes looking right at me.\n\n*BRING!* *BRING!* *BRING!*\n\nThe cellphone ringing... was mine. Seeing who it was, I answered it.\n\n\"Yes, Governor?...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/dream-within-a-dream-ch-01"
}