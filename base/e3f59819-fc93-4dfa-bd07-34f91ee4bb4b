{
    "title": "The Curse of the Succubus",
    "pages": [
        "Prologue: An excerpt from The Case of the Red Corset, by Doctor Tobias Jefferson, July 1895\n\nThe door finally splintered under my repeated shoulder barges and I stumbled into the bedroom, brandishing my old service revolver. My eyes tried to adjust to the near darkness, the only light source being dawn's faint glow coming through the open French windows. Fiennes came in after me, his keen eyes locating our target while I stood blinking.\n\n'There, Jefferson, do you see? Beside the bed!'\n\nQuickly, I followed Fiennes' pointing finger to the four poster bed on the far side of the room. The Lady Genevieve lay naked and pale on top of the covers. For a second, my heart thudded violently in my chest as I thought her to be dead, and then I saw her stir slightly. A soft moan, of what sounded like pleasure, escaped her lips.\n\n'Thank God, Fiennes, she still lives. I must tend to her,' I lowered my revolver and moved forward.\n\n'No! Keep back, Jefferson,' he braced his hand against my chest and bade me to keep still. Then I realised it was not the bed he pointed to, but a darkened corner of the room. 'The devil still walks among us, I fear.'\n\nAt first I fancied I saw nothing amiss, and that the pressure of this strange case had cracked the senses of my dear friend. Then, amidst the dark recesses of the room's corner, I swear I saw a wickedly lascivious smile, pearl white teeth, blood red lips and nothing more. I gasped and Fiennes merely nodded as she emerged. The hourglass outline of the most exquisitely beautiful woman came forward, the night slipping away from her like oil. She was utterly naked save for a red corset. And yet, despite the impossibly narrow waist, flared hips and vast bust, I somehow knew this corset was mere decoration, and that without it her shape would remain as stunning as before.\n\nWere it not for my friend's steely dedication to the execution of his duties I would have died that day. The infernal creature ensnared me with her rapturous beauty, and so I did not mark her passage across the room until Fiennes let out a battle cry and caught her unawares with a blow to the neck.\n\nThe two struggled then, the creature's inhuman speed and strength matched by Fiennes' skill at the Eastern martial arts. Several times I tried to fix a clear shot with my revolver, but I was thwarted by their ferocious wrestling. At last, Fiennes threw her clear past the French windows and onto the balcony. I took aim and fired; however, at that precise moment, the Lady Genevieve threw herself across the room with an anguished cry.\n\n'No, don't hurt my mistress!'\n\nThe bullet shattered a window pane and nothing more. I grasped the flailing woman with one arm and aimed again. This time, Fiennes put out his hand and lowered my arm.\n\n'Your shot will have no effect against this type of devil, I fear, Jefferson.'\n\n'Are we to give up now, Fiennes? We have the beast at our mercy.'\n\n'Not at all, Jefferson. We must look to the very force of light itself to vanquish this evil,' his arm swept outward to the horizon. The sun had begun to crest the land, and morning's light pooled across the countryside like molten gold.\n\nThe monster cast a glance over her shoulder at the rising sun. Instead of making any attempt to flee, she began to incant quietly. The constant stream of words was inaudible from inside the room. Suddenly, she stopped. Again, that wickedly seductive smile played across her lips just before she burst into white smoke. The smoke quickly vanished and the corset fell to the stone flagging of the balcony. The sun had cleared the horizon now, lighting up the natural majesty of the countryside, once more free from the ravages of the demoness known as Mila.\n\nChapter One: Jordan\n\nJordan slammed the caf\u00e9 door shut and locked it with such angry force the key almost snapped. This was the third time this week she had been asked to close up. It wasn't even her responsibility, it was Vanessa's. But Vanessa had been leaving early each day, and their boss had also been leaving around the same time. The young blonde waitress huffed off down the darkened city streets, annoyed that those two snuck off to fuck while she had to do all the work. \n\nThe thought of the gorgeous Vanessa entwined, hot and naked, with her well-chiselled boss sent a quiver of excitement through Jordan. No wonder he asked her to close up, it's not as if anyone waited for her to come home. She sighed, wishing there was someone for her inside her apartment; wishing there was someone inside of her. \n\nJordan came to a stop, realising she had taken a wrong turn somewhere, the shady streets and black shop fronts unfamiliar to her this late in the evening. Anger flared up again, and at the same time her eyes were drawn to the brightest light in the street. It came from a clothes store which was still open. Jordon recognised the name, HP Teller -- they sold decent clothes at low prices because it was last season's fashion thrown out by the trendier shops. That's what she needed, she realised, a whole new look. Jordan went in.\n\nThere was no one else there, apart from a bored looking brunette woman behind the counter. The tall sales assistant looked up from the paperback novel she was reading and gave a curt, professional smile. She watched Jordan over the oval rims of her designer glasses for a moment, and when she saw the blonde move off toward a rack of dresses, she went back to her book.\n\nJordan flicked idly through a rack in the corner of the shop, occasionally plucking out an item from the random assortment of summer dresses, party frocks, and blouses. None of it appealed; she didn't have the busty figure these dresses needed to look good in, and the prices were still a little much for her. She was about to give up when she pulled out a corset from the rack.\n\n'Now this is cute!' she declared happily. It was out of place amongst the dresses, but Jordan wasn't thinking about that. For a moment she wasn't thinking about much, as the store around her faded away and she drank in the corset's beauty, how good it felt in her hands, the deep red silk of the panels sensuously smooth against the brush of her fingers, the exquisite black lace of the edges sending a rush of excitement through her body, the strong bones running through it promising to give her body a heart-stopping shape. She had to have it. 'Let's see how it looks.' Jordan almost ran over to the changing rooms to try it on.\n\nInside the changing room, she pulled her loose pink t-shirt over her head, ruffling the short, spiky blonde hair. Jordan glanced wistfully at her semi-naked self in the mirror. It wasn't that she was ugly, she knew, just so average in places: a cute face, but not stunning; no visible fat, but neither was she curvy, her breasts coming in at a meagre B-cup and her arse flat to look at; and all of this was delivered in a perfectly standard height of 5' 5\". Well, with any luck, the corset would exaggerate her physique a little, she thought.\n\nThe last time she had tried on a corset it did nothing for her, so it was odd she should be so excited by this one. It seemed to whisper to her, promising to do wonderful things to her body. She picked it up and started to fasten the clips. Unlike the last corset, which had been a struggle even with the help of the sales assistant, the red corset flowed around her contours, almost escaping her hands and doing the work for her. When it was fitted and laced up, she stood up to admire herself in the full length wall mirror.\n\nShe was pleased with the result. It seemed custom made for her. The small corset hugged her outline, moulding itself to her contours, cinching in her waist slightly and leaving an enticing gap of an inch or two between the bottom of the corset and the hem of her blue jeans. 'Not bad at all,' she complimented herself as her eyes moved up. The top of the corset pushed her modest breasts upward, making them seem more impressive. \n\n'Plus it makes my boobs look...' she paused in astonishment. As she watched, her breasts grew within the confines of the corset, the two mounds now pressing together as they swelled an entire cup size. If she hadn't been so amazed, Jordan might have also noticed her honey blonde hair darken slightly. Instead, she was too busy watching her breasts grow, '...bigger!'\n\nShe reached out to clasp them, to confirm what her eyes were telling her. Their growth didn't cease, the volume of flesh constantly expanding within her corset. The corset itself continued to keep the breasts securely held, stretching with them and holding them firm and upright. As her hands caressed and squeezed her D cups, she felt a tingling sensation spreading throughout her body. It flowed out to every nerve, lighting up the pleasure centres in her nipples, clitoris, and deep within her pussy. \n\n'Oh my God!' she moaned as a wave of sexual bliss suddenly hit her. She screwed up her eyes as the sensations overtook her, failing to see her lips deepen from their natural colour to a rosy red, or even feel her light brown hair flow down her back. Her boobs had engulfed her hands entirely, and gone from small bumps to rivalling the size of her own head by the time the growth slowed.\n\nBefore Jordan could recover and properly marvel at her heaving chest, or question what was going on, the heat surged through her body again. This time the thrilling sensations spread from her buttocks. Her hands gave her bosom one last caress, making them jiggle spectacularly, before trailing sensuously down her sides. Jordan traced a new outline this time; no longer was she straight up and average. Her body had curves! The waist had become impossibly narrow, while the hips flared out as wide as her shoulders. In moments she had gained the sort of body that Dita von Teese and other straightlacers spent a lifetime honing.\n\nIt took longer for her to trace down her body, as slow inches were steadily being added to her to height. Finally, her hands reached her cheeks in time to feel them fill out. Unlike the magical corset, her jeans couldn't cope with the pressures of her new body, and the tops of the perfectly round orbs slipped free. She kneaded the firm, pliable roundness of her behind, each squeeze sending a jolt of pleasure straight to her pussy. By now she was very wet and very horny. The sensations had reached melting point and her body began to tremble with delight. A visible darkness began to spread outward from her crotch across her jeans.\n\nJordan didn't see this, nor did she see her hair fill out, the wavy chestnut brown locks reaching as far as her elbows. Her now-perfect, bee-stung lips pursed together as she mewled, 'Mmm...feels...feels so...' she breathed in expectantly, the mountainous cleavage thrusting upward as she arched her back and screamed out as the orgasm exploded, 'Oh! So goooood!!!'\n\nOutside the changing room, the sales assistant looked up quickly from her book at the sound of the ecstatic scream. For a fleeting few seconds she felt a curious thrill, and a quick tingle rippled through her body. It quickly dissipated as professional concern and hesitation warred within her, the need to do her job or leave well alone what may be an odd situation both seeking dominance.\n\nRight now, Jordan didn't give a damn what anyone else thought. A second orgasm was already building within her, and this one was beginning to feel like the Big Bang of cumming. She now felt attuned to the changes in her body, and as the strands of hair blackened and lengthened to the small of her back, as her skin lightened and became blemish free, the fire in her loins grew even hotter. She came agonisingly closer to reaching the ultimate peak.\n\nThe dark spot at her crotch had turned her jeans black as far as the knees, causing the trouser leggings to fuse as it seeped downwards.\n\nJordan stroked her breast with her left hand and reached out with her right. She was close to cumming but it wasn't happening! The white heat was becoming too much to bear. Desperately she reached for her crotch with her right hand. Instead of her jeans she found she wore a long black skirt, reaching from the base of her corset to the floor. She tugged at it furiously, trying to hitch it up so she could access her pussy and finger herself to orgasm.\n\nIn the end, she didn't need to as her entire being suddenly exploded. Orgasm after orgasm rippled through her with such mounting force she began to feel disembodied. Blinding white light gathered around the edges of her vision. The last, big one came: she breathed in suddenly and sharply, screwing up her eyes as an ecstatic scream escaped her lips, every nerve buzzing with a million volts of sexual bliss and the blinding white light consumed her.\n\nJordan never enjoyed the slow, gradual come down as the fire reduced to a warming glow. With her mind battered senseless by impossible pleasure, she could put up no mental resistance when Mila possessed her body. The demoness escaped the corset she had cursed that night she battled Fiennes, and entered Jordan's altered being. Mila grinned at her success, revealing her newly formed fangs framed by her blood red, pillowy lips. Matching red eyes, the pupils shaped like the eyes of a hungry tigress, marvelled at her stolen shape. It was almost perfect, but not quite.\n\nMila focussed the last of her dark energies and a final shudder rippled down her body from head to toe. As it travelled, the changes to her new body were completed. The chestnut brown hair became supernaturally black, seeming to absorb the light around it as the ends grew out to the top of Mila's well-rounded buttocks. Skin became as smooth and pale as marble. Breasts juddered as they filled out a few more inches, somehow defying gravity to remain firm and upright even as they dwarfed her head. The waist lost another inch and the hips gained it. The shudder carried on down her legs, lengthening them so she now stood a foot taller than before Jordan put on the corset, and completing the transformation of her jeans into a luxurious, long black skirt.\n\nThere was a knock on the changing room door. 'Is everything alright in there, miss?' the sales assistant asked, concern audible in her voice. \n\nMila tore her hands and eyes away from her luscious new body as The Hunger made itself known in the depths of her cunt. 'Come in,' she commanded, her voice as rich and husky as honeycombs.\n\nThe sales assistant opened the door tentatively. She had heard stories from other colleagues about the things weird customers got up to in changing rooms, and she half-expected something disturbing on the other side. She stopped in the threshold with a quick gasp. The young, slim blonde wasn't there; instead, she came face-to-boob with Mila. The assistant looked up at the taller woman and immediately felt weak at the knees. A surge of desire electrified her pussy as she took in the physical presence of the living goddess. Every aspect of Mila's body was forged for wanton sex and lust.\n\nMila smiled, pleased that she could still steal the hearts of mortal beings so easily. She had been trapped for a long time in the corset and she had questions, as well as other needs. Mila reached out a slender arm and cupped the assistant's chin with her fingers. Long, red fingernails caressed the assistant as Mila drew her in closer. With her other hand, Mila plucked at the name badge on the brunette's chest: it read 'Antonia'.\n\nOn a subconscious level, Antonia wanted to run away and never look back. All of this was impossible for her. Yet, as her face drew nearer to the porcelain-skinned, heart-wrenching beauty of Mila's, and two magnificent breasts pressed against her, Antonia's resistance became compliance. Their lips connected. Mila savoured the victory, as easy as it was, and played with Antonia, gently sucking and nibbling her lips. Then, Mila's tongue plunged in, invading Antonia's mouth and claiming the sales assistant obedience forever as the exciting sensations overcame the girl. \n\nSomething felt odd for Antonia, in a pleasing but different way. Mila had begun to gently suck on Antonia's tongue. Antonia felt a sense of lightness, of troubles and worries draining away, but also more than that. A last attempt at struggling to break free bubbled up from Antonia's core as she realised the demon was draining her knowledge.\n\nMila's fingernails sliced through Antonia's work shirt and bra, revealing her pert breasts. Mila set to work caressing and pinching Antonia's nipples. The girl melted away again as the pleasure took over and she let the last of her hard-earned intelligence be siphoned off, leaving her content and empty-headed forever.\n\nThe she-demon eased off Antonia and let the girl's knowledge assimilate with her own. The gap of over a hundred years filled in. Mila was delighted with the course of history. 'You used to hunt my kind,' Mila smiled wickedly at the girl, 'and now you practically worship us, with your fiction and films. I think I'm going to like this century.'\n\n'Are you, like, going to suck my blood?' Antonia asked. \n\n'Don't let the fangs fool you, my dear. If I suck you dry, it will be in an entirely different way. Now hush, my little...' Mila searched her conquered knowledge for the right word, '... bimbo. Hmm, no, you're not quite the bimbo yet.' \n\nMila bit down into Antonia's breast with her fangs. The sales assistant gasped as pleasure, not pain, coursed through her veins. Changes were carried along with it. Like Jordan before her, Antonia transformed: her breasts inflated, imperfections vanished, brown hair turned blonde and broke free of the scrunchie to fall down her back, legs lengthened and lips puffed out. When it stopped, the petite sales assistant had become a blonde goddess, built for sex. \n\nAntonia stretched languidly, her large breasts falling free of the torn shirt. She smiled as she shrugged out of her clothes. Catching sight of the name badge pinned to her top, she giggled, 'Like, I think I'll call myself Toni.'\n\nMila held her finger to the blonde's puffy pink lips to silence her. 'You have far more important uses for that pretty mouth.' Mila unfastened her skirt with a deft flick of her wrist, letting it pool to the floor around her ankles, and guided the enthralled bimbo to her naked snatch.\n\nThe demoness moaned whorishly as the inexperienced but enthusiastic bimbo plied her tongue over her mistresses' clit, releasing Mila's century-long pent up frustration and swiftly sending her to orgasm. When the pleasure had subsided, Mila pulled Toni to her feet and traced her blood-red fingernails down her body. Toni gasped as a long fingernail grazed against her clit. 'Not bad, my sweet little bimbo. Now let me show you how it's really done.'\n\nA little while later, Mila stepped out into the night in Jordan's stolen body, lusting for revenge on those who had caused her to sleep for a century. The next morning, the manager of JP Teller arrived early and found a store that hadn't been locked up the previous night, with a blonde beauty gently masturbating in a changing room. For a second, he thought about calling the police. That thought disappeared when the hot harlot spread her legs and said with a smile, 'I know how it's really done. Would you like me to show you?'\n\nChapter Two: Mila\n\nMila stood at the steps of the Central Library. Looking at the unchanged edifice of the grand library, with the same fluted columns and silent lion statues lying to either side of the doors, she felt a brief pang of nostalgia for her era. Then it passed and a sly smile sashayed across her lips as she saw one of the many reasons for preferring this time. The iron-bound oak doors creaked open as a female librarian stepped out. Her white blouse and dark skirt were considered formal work wear for the early 21st century, but Mila was used to a century where dresses covered neck to ankle, so the bare forearms and calves sent a shiver of anticipation through her.",
        "The librarian, Vicky, was a recent graduate from the adjoining university. In her early twenties, she was keen to rise up the career ladder and seize a senior position, before wangling a new job in a world renowned library. She loved books, and had specialist knowledge of medieval texts; however, she harboured a secret passion for romance novels, the trashier the better. The librarian was no repressed wallflower waiting to be transformed into a sex-kitten, but she played the role well. Peering over glasses she didn't need at cute boys in the library, teasing whoever cared to look with flashes up her short skirt as she climbed ladders, and bending down to pick up dropped pencils, she loved the clich\u00e9s her job afforded her. \n\nAll too often a young, muscular rugby or football player from the university team would wander in, a king on the field of competitive sport reduced to a frightened gazelle amongst the towers of books. As he searched aimlessly for the book he needed for a particular paper, Vicky would play the demure, timid librarian, helping the day's young Adonis regain his masculinity as she subtly flirted, toying with him until inevitably, as they all did, he begged for her number. \n\nSometimes Vicky did it for the chase, gave a fake number or threw away theirs; other times, she was hot, already fired up from an erotic lunchtime read of one of her romance novels, and she would lure the prey into the library basement, to become 'helpless' at his vigorous advances.\n\nToday had not been one of those days. It had been hectic, after several other librarians called in sick. It had been a good time to show her talents to the Head Librarian, and reach up to the next rung, but it also meant she had the dubious privilege of closing up late and going home alone. Vicky locked up and turned sharply, landing face first between two mountains of pillowy cleavage.\n\nMila smiled, her long tongue licking out across blood-red lips. She was pleased to sense carnal desires running deep in the modest looking girl. The librarian lay somewhere between plain and attractive, an unfortunately forgettable kind of beauty, with auburn hair tied up in a bun, mahogany brown eyes behind thick rimmed glasses, and five and a half feet of height. \n\n'I'm hoping you can help me find someone,' Mila said huskily.\n\nVicky stepped back, extracting her face from between Mila's gorgeous breasts with a hint of regret, and looked up at the tall demon's face. It took all of the feisty librarian's willpower to stammer out a refusal, 'The library is closed, you'll have to come back tomorrow.'\n\nMila delicately removed Vicky's glasses and cast them aside. She fixed her gaze with her ruby red eyes. 'Nothing, and no one, is closed to me,' replied Mila, turning the handle of the heavy library door. Mila's eyes flared for a brief moment and Vicky hung there, eternally caught in the moment. Part of her mind questioned how the door could be opened when it was locked, while the rest of her didn't care -- she just wanted to submit to this impossible goddess. The darkness of the library revealed itself and Mila gently pushed her new thrall inside.\n\n'I'm looking for the descendants of Thaddeus Fiennes and Tobias Jefferson,' Mila ran her fingernails up Vicky's right arm, 'find them for me, and I will reward you.'\n\nVicky practically ran toward her computer terminal in her eagerness to please her mistress. The two traversed the library in near darkness, the librarian knowing the way intimately, the demoness needing no light. When Vicky went to sit down and switch on her terminal, Mila flung away the chair. \n\n'You will stand; I wish to be entertained while you work.'\n\n'Entertained? How?' The librarian asked, before suddenly yelping as her skirt was torn away from her body.\n\n'Work,' Mila demanded. Vicky accessed the computer and began searching for references to Fiennes and Jefferson. Meanwhile, Mila ran her hands over Vicky's lithe thighs and buttocks. She cut away the laced panties with a flick of her nails and gently probed the wetness emanating from between Vicky's legs. The librarian stifled a moan as she brought up genealogy archives.\n\nMila unfastened her own skirt and began to trace tiny circles on the nub of her clitoris. She worked faster and more frantically, huffing with effort as her clitoris grew. It popped out an inch, which Mila took between her fingertips and started kneading, seemingly pulling it outward. It thickened as it took on length, blood pulsing through it and expanding it with throbbing currents until Mila let out a loud cry and it exploded into full size: a ferociously thick and long cock, blessed with a blood-dark and angry head.\n\nThe demoness gripped it and went to insert it into Vicky's quivering snatch, but the height difference between the short librarian and the Amazonian goddess caused a problem with positioning. Mila's frown switched into a leering grin as she placed a hand on Vicky's butt and squeezed hard.\n\nThrough all of this, Vicky had worked diligently. Even though she wanted to face her mistress, to see what was going on, to embrace and kiss her, she continued to plumb the depths of the internet and the university archives. However, when her mistress gripped her backside and she felt an itchy tingling up her legs she couldn't resist looking down.\n\nVicky blinked in astonishment. Her legs, once short, pale, and a little thin, were swiftly changing. The muscles became toned and richly developed as the legs grew longer, the skin taking on a creamy cappuccino colour. The keyboard and monitor grew farther away as Vicky's height increased, inch by inch, until she stood just shy of six foot.\n\n'Perfect,' Mila said, admiring the toned ass which had been brought closer to her and in line with her own pelvis. She positioned the cock and thrust in, striking deep into Vicky's vagina. The librarian fell forward in surprise, sending the keyboard flying. Mila continued to thrust, though with softer strokes this time, and bent over to pick up her surprised thrall. The demoness reached her hands around to Vicky's breasts and pulled her back up.\n\n'Work,' she whispered into Vicky's ear, her thick, full lips brushing against the librarian's earlobes. A spasm rippled through Vicky's crotch as she reluctantly tapped out another search into the computer. Mila's hands continued to play with Vicky's breasts, questing for her nipples over the fabric of her work shirt, until they stopped.\n\nMila pulled herself back, drawing her hands over the shirt and ripping it open at the buttons. The long, sensuous fingers traced their way over the well-filled bra underneath. 'Naughty girl,' Mila chided. She dived her fingers into the bra and plucked out two 'chicken fillets'. Without the artificial padding, the librarian seemed almost flat chested. 'Do you dream of having bigger breasts?' Mila asked.\n\n'Yes,' Vicky moaned, partly in answer to the question, partly in response to the huge shaft plunging deep into her burning core.\n\nMila tore away the bra and what remained of the shirt, then pinched the girl's pink nipples with her fingernails. Vicky bit her lip to suppress screaming out at the sharp pain. The demoness continued to pinch, and started pulling on them hard. Vicky's small breasts became pinched and taut as they were pulled outward. Mila adjusted the rhythm of her thrusting, taking a slower, more powerful pace. As her hips banged into Vicky's arse, sending out a meaty slapping sound through the library, a wave of pressure rode upward from Vicky's cunt toward her chest. Each thrust caused the taut breasts to round out slightly as they filled outward from chest to nipple. Mila kept pulling, pinching and thrusting, and Vicky watched as the breasts slowly expanded, increasing through the cup sizes until they blocked her view of the keyboard beneath her.\n\nMila let go of the sore nipples, which had now puffed up several sizes to match the vastly increased bust. The two mammaries fell down against Vicky's body with a heavy thud. 'I think they need some support,' Mila said. She reached down and picked up a handful of paperclips off Vicky's desk. She pressed her hand against Vicky's right breast, barely cupping the huge orbs of flesh.\n\nVicky cried out as she felt a hot stinging pain in her nipple. When Mila removed her hand she saw a silver ring piercing emerging from her nipple. It seemed to have no release. The demoness cupped the left tit in her hand and again, Vicky felt a white hot pain. When the hand moved away it revealed an identical ring piercing. \n\nMila scooped up a whole handful of the paperclips and ran hands down Vicky's back. The librarian yelped in barks of pain and pleasure as she felt stinging sensations trace two parallel lines down her back. She was unable to see the series of silver rings that now decorated the cappuccino skin. The demoness picked up a roll of sellotape and it transformed to a spool of burgundy silk ribbon in her otherworldly grasp. She deftly threaded the ribbon through the rings in Vicky's back, creating a corset of flesh. Mila yanked the two ends of the ribbon, tightening the skin around Vicky's torso and lifting her massive mammaries.\n\n'We aren't done yet,' Mila purred. She brought the ribbons over Vicky's shoulders and laced them through the nipple rings, crossing them over at the chest and bringing round the back of the librarian's neck. Mila finished it off with a bow. The two melon-sized orbs now hung in pert defiance of gravity. Mila gave them a quick squeeze and continued her thrusting.\n\n'Have you found them?' she growled impatiently.\n\n'Let me cum!' the librarian screamed in ecstasy. The high voltage sensations coursing from her cunt through her nerves were shorting out her brain, making the task almost impossible.\n\n'Find them first, then I'll reward you,' the demoness hissed, punctuating her order with a firm slap on Vicky's buttock. Vicky panted loudly and retrieved the keyboard. Within a few minutes, each an agonising eternity of being kept on the brink of orgasm, she found what she was looking for.\n\n'Thaddeus Fiennes: no descendants. Tobias Jefferson: one living descendant,' Vicky managed to say between the powerful thrusts that kept threatening to tear her in half. Mila picked up her pace and raced toward the finish line. Her demonic cock-clit exploded, gushing unlikely amounts of pseudo-cum into the librarian's womb. Vicky screeched in pure bliss and collapsed across the desk. Mila studied the information on the screen and smiled a devilish grin. Doctor Genevieve Jefferson was the remaining link to Tobias Jefferson, and she was close! She worked at the university in the physics department. \n\nIt was late, and Mila doubted the young Jefferson would be at her laboratory now. There was plenty of time to have more fun with the librarian. Vicky lay slumped across the desk, a hot, sticky mess quivering with the aftershocks of her orgasm. Mila traced a long fingernail along the creamy, sweat-glossed skin of the girl, catching her nipple and causing her to thrash in ecstasy. The librarian hit the keyboard and a picture of Genevieve Jefferson flashed up. It caught Mila's eye and she scowled. Revenge was close, she couldn't become distracted now. The demoness gathered her flowing black skirt and put it back on before heading out once more into the night.\n\nChapter Three: Genevieve\n\nDoctor Genevieve Jefferson leafed through the creamy pages of the old journal. Growing up on her family's estate, it was an object she had been intimately familiar with; at least on the outside. It was forever kept locked behind glass in the study, a treasured family memento from the days of Fiennes and Jefferson, the celebrated detective duo of the Victorian age. \n\nTobias Jefferson had compiled his adventures with Thaddeus Fiennes across several volumes but it was this one that remained out of public sight, a family secret for reasons unknown to Genevieve. Until now. \n\nWith the passing of her grandmother last month, it had been handed to her by the lawyer responsible for dealing with the will. A neatly written letter came with it, an explanatory note from her dear grandmother. Genevieve sighed, putting it down for the moment. It had been an untimely distraction from her experiments. \n\nThe university laboratory was dark. Only Genevieve was still at work and she hadn't moved from her desk for some time, so the motion activated lights had fallen dim. In the middle of the lab she could make out the shape of the two transporter pads. Principally it worked and was capable of transporting a person from one pad to the other within nanoseconds. Range increased the time but not by much. The significant problem was that the scanner could only handle either organic or inorganic matter, not both at the same time, and not different types of organic matter. So, while test subjects succeeded in moving across space in a nanosecond, they always arrived naked. Their clothes remained behind on the departure pad. \n\nIt was, arguably, a small price to pay for instant transport. The problem ran deeper, though. Contact lenses, tooth fillings, false teeth, pacemakers, artificial hip joints -- none of these made the journey with their owner. It was an inadequacy that had to be rectified. \n\nShe reached for a set of print outs when she heard a rhythmic sound unknown to this part of the university -- high heels striking against the tiled floor. It grew louder, then paused briefly before the door to her laboratory swung open. A female figure stood in the near darkness, surveying the laboratory and finally fixing a look on Genevieve. \n\nThe outline was impossibly proportioned, almost a caricature of a human rather than a real person, the archetypal hourglass all cartoonists strived to portray. Two separate thoughts struck Genevieve at the same time. The first was that she thought she saw a wickedly lascivious smile, pearl white teeth, and blood red lips in spite of the darkness. The second was that she noticed the lights hadn't tripped on as the visitor strode with long, sensual legs across the laboratory toward her. \n\nGenevieve rose suddenly. The lights snapped on. The newcomer stopped in the middle of the floor. They studied each other in silence, one with the eyes of a scientist, the other with the eyes of a huntress.\n\nGenevieve quickly estimated that the strange woman was 6'6\" in height, her measurements 40-22-40, the breasts perhaps 4000cc in volume. It never quite occurred to Genevieve, the lifelong professional, just how incredibly breathtaking the entire package was, a collection of sums that added up to something far greater. There was also a sensation of recognition tickling her mind, like she had heard or read about this woman somewhere before.\n\nMila smiled, basking in the gaze of her prey while returning the favour. She admired the scientist's tall, willowy appearance, narrow features and pale skin. It leant her an ethereal, fae-like look. It had indeed been many generations since she last battled the forefather of this progeny, a far more earthy and stocky creature. No, in fact, Genevieve Jefferson looked more like...\n\nRecognition came to them simultaneously.\n\n'You! You're the one from the journal, the demoness who disappeared.'\n\n'And you're not the one I was expecting. I would know the child of Fiennes anywhere. Why then are you called Jefferson?'\n\nGenevieve glanced involuntarily at the journal. 'Tobias Jefferson and Lady Genevieve could not conceive... shortly before his death, Fiennes approached them with a child which he claimed was his and they adopted him. They kept it a family secret.'\n\n'I had hoped to destroy the Jefferson line this night but the bastard descendent of Fiennes is a far more fitting prize. It was he who ruined me that night.'\n\nThe quick wit possessed by Fiennes also flowed through his distant offspring. Genevieve knew she was in great danger; the creature before her may have seemed like a vampish pornstar, dripping with sexuality rather than violence, but the hidden casebook of Tobias Jefferson told of the demon's strength and ferocity. When Mila took a step toward Genevieve, the scientist moved also, keeping workstations and safety rails between the two. \n\nMila grinned, licking her lips with her long, sensuous tongue while sizing up her prey. 'Perhaps I won't kill you,' Mila said as she slowly strutted along the laboratory floor, the toned muscles in her long legs flexing subtly beneath the creamy white skin. 'I might let you live. At every sunset, you would rouse me from slumber with your tongue on my clit, and at sun rise, after my day is done, you would clean me off again.'\n\nGenevieve glanced momentarily at the closest teleport pad. There was a third -- it was no use teleporting objects from one end of a room to the other, after all. In order to test the capable range, they had constructed a third unit in a spare basement on the other end of campus, exactly one mile away. It would be enough of a headstart...\n\nGenevieve stumbled as a forgotten bag caught her leg. Papers and office detritus was sent flying as Genevieve fell, but at the last moment she caught herself against a workstation. Mila arched a slender eyebrow as she watched the small catastrophe unfold. Amidst the chaos, a switch was knocked from 'B' to 'C'.\n\n'You seem a little upset by that idea, Fiennes. Perhaps it would be a mercy to let you live, and either a dreadful bore or a great risk to me in due course. I should not underestimate your bloodline again. No, I shall break that which you value most -- your mind. I will fuck you endlessly, over and over; I will show you great pleasure. For a moment, you will even come to love me, and then I will send you over the abyss. From then on you will be a hot and horny whore, pawing at any cunt or cock who comes near you, begging to be filled with anything just for a moment's release.'\n\nGenevieve measured the distance from where she stood to the teleporter pad. She would need to step away from the cover of the workstations and into open ground, within reach of her huntress. She needed to distract the demoness and bluff past her. 'Quite soon I'll have what's left of you under a microscope.' \n\nShe threw another switch. The safety lights came on, a gentle signal light sending pulses of amber across the laboratory. It was hardly apocalyptic or even dazzling; it was the bare minimum required by health and safety. Powerful electrical currents and mechanical reactions pulsed beyond the range of human senses, but it was enough to unsettle the demon. She paused momentarily and Genevieve slipped away from the desks towards the teleporter pad.\n\nIt was a utilitarian piece of equipment, measuring precisely two metres by two metres, and just under four inches high. A sheet of obsidian plastic covered the surface, mirroring the ceiling unit above it. \n\n'What are you doing, Fiennes?' the demoness pouted. \n\nGenevieve didn't respond, not now. She couldn't afford to. There was a safety mechanism built in to the teleportation sequence -- it worked 60 seconds after it was activated, in order to prevent anything or anyone being accidentally teleported.\n\nIt was obvious the demoness sensed something was wrong. She seemed tense, her colossal bust rising and falling in hypnotic rhythm. Genevieve fought off the urge to become entranced by the mountains of ripe flesh that cascaded over the brim of the corset.\n\n'Come here, my pet; I have a fine use for that tongue of yours.'\n\nGenevieve trembled slightly at the honey sweet tone of the impossible goddess standing in her laboratory. How would it feel to give in...?\n\nFive seconds to go. Genevieve inhaled, clearing her mind of all thoughts apart from the counting. Mila paced around the teleporter pad, keeping a wary distance from the potential trap. Then Genevieve stepped on to it. \n\nIn an instant, Mila knew she had read the situation wrong. She burst forward with inhuman speed. Genevieve stared incredulously, still counting. Three... the tall demoness flashed across the room, long, powerful legs making great strides... two... Mila leapt into the air... one... they collided together, Mila crashing with breasts and arms into the willowy doctor, sending them both tumbling off the pad and... flash",
        "...into the darkness of an unlit basement.\n\nGenevieve felt the weight of the woman on top, her breath shallow and rapid. She felt soft, naked flesh against her own. Apart from the gentle rise and fall of two large, pillow-soft breasts that almost covered Genevieve's face, there was no other movement from the figure on top of her.\n\nCautiously, the scientist rolled out from underneath Mila. Suddenly, the automatic lights flickered on. Instead of the pale skinned, amazon physique of the deadly demoness, Genevieve saw a young blond woman. Though far less exaggerated than the outlandish proportions of the demoness, the blond still possessed an erotic hourglass figure.\n\nA soft moan came from the girl. She rolled over, breathing rapidly, eyes fluttering and hands roaming down her skin. In spite of the cold basement, the girl radiated heat, her lightly tanned skin shining with a thin layer of perspiration. With increasing desperation she tweaked an engorged nipple and played with her clit.\n\nGenevieve blinked in astonishment. Where had Mila gone? Where had the girl come from? Had there been an error with the teleportation? They were both where they were meant to be, and naked as expected.\n\nHer ancestor, the legendary sleuth, would have applied cold logic and rational thought to solve the puzzle. But then, Fiennes didn't have a blond sex kitten suddenly reach up with questing hands and a hot tongue. \n\nJordon, now free of her possession by Mila, was still reeling from the sexual overload built up by her body's former owner. She eagerly sighted Genevieve, who stood naked and bewildered in the empty basement, and lured her down to the smooth, cold floor. \n\nAny resistance or fear of the demoness' return faded from Genevieve as a pointed tongue deftly split her soft, fuzzy peach and riffed against the bud of her clitoris. She sighed and collapsed into Jordan until limbs and tongues became entangled into a knot that wouldn't come undone for several hours.\n\nChapter Four: Vicky\n\nThe librarian bucked her hips. The pace looked savage, reckless almost, as she rode up and down with blurring speed onto the sore cock of her partner. Her hands dug nails deep into his muscled chest, drawing out tiny beads of blood. Her recently enhanced tits would have slapped violently against her face at this speed if it wasn't for the restraining properties of the ribbon corset given to her by her mistress. \n\nBeneath her was a university student Vicky had seduced and lured into the deserted library with promises of wanton sex. Promises she had delivered all too well. The encounter with Mila had left Vicky feeling drained and hungry. The young student had been all too keen and shot his load disappointingly early into Vicky's quivering snatch. Oddly, she had felt a euphoric rush as his cum pumped into her, and could almost sense it being absorbed into her body. Not a single drop leaked from her tight pussy afterwards.\n\nThe student grimaced at the ferocity of the pace. His cock throbbed; it felt engorged way past its regular size and felt like it was going to explode. Only the intense pressures of the librarian's vice-like cunt seemed to be keeping it together. It had long gone past pleasure and well into the domain of pain for the lad.\n\n'Let me cum,' he begged.\n\nVicky grinned wickedly. 'No. You're being punished. You need to learn better control.'\n\nThe student made a last ditch effort to save himself. He reached up to throw his assailant off. Vicky smiled pitifully; though she was now ramming her hips down with the speed of a hummingbird, she was in complete control. She squeezed her vaginal muscles tighter around the base of the young man's shaft. He yelped. Vicky took his hands and placed them on her breasts, guaranteeing his weak-willed compliance.\n\nVicky had plans on drawing this out for as long as possible, at least until she couldn't stand her own hunger, when sudden relief came for the student. A piercing scream cut through Vicky, bringing with it waves of dread and terror. A brief visual flash burned itself on her vision, of a laboratory, and her mistress battling the Great Enemy, being lured into a trap and then... nothingness. The vision ended but she still sensed her mistresses' voice, whispering to her from the laboratory.\n\nWhen the psychic cry had hit her she had lost control over the student's cock. It had burst like a water main, sending gallons of white, sticky fluid deep into Vicky's womb. The librarian rode it out, drawing some of the lifeforce from the student. \n\nWith her newfound vigour, Vicky quickly dressed and headed for the physics department. Even if she didn't already know the way she would have been pulled toward the lab; she could no less ignore the irresistible Call of her mistress that a compass could point anywhere but magnetic north.\n\nCarefully, she snuck into the laboratory. There was no sign of her mistress or the Great Enemy, Genevieve Jefferson. The Call was louder now and came from the other side of the room, from the trap she had seen in her vision. \n\nA bundle of clothes lay on the raised platform. The majority was a pile of a regular clothes -- jeans, a shirt, ladies underwear and a lab coat. What instantly caught Vicky's eye was the unmistakable red corset of her mistress. She tentatively reached out for it. Her fingertips brushed the soft silk material and a surge of raw power flooded her mind. The thoughts and knowledge of her Mistress filled her, dominating her completely.\n\nTrancelike, Vicky retrieved the corset and carried it back to the library. She descended the depths of the archives until she hit an old basement storeroom deep among the old library's foundations. Sweet whispers from the corset guided her actions. Vicky seemed to watch herself as a passenger in her body as her hands followed the instructions given by Mila, slowly drawing three arcane circles on the floor of the storeroom. A circle of warning... a circle of protection... and a circle of healing... whispered the dark voice trapped within the magical confines of the corset.\n\nNow sit in the centre... commanded Mila ...and connect yourself with the circle of healing.\n\nThe librarian knelt on the bare stone floor. Her hands moved of their own accord, peeling away all of her clothes with the exception of the ribbon which laced through her irremovable piercings. The clothes were thrown outside the circle and both hands roved down her cool, sensitive skin, eliciting tiny purrs of ecstasy. Being dispossessed within her own body heightened the sensations caused by her hands -- it was as if they someone else's.\n\nThey are someone else's... the voice responded in her mind... they are mine, and soon your body will belong to me entirely.\n\nThe Vicky who had existed before the arrival of Mila struggled from somewhere deep within her own consciousness. A mocking laughter reverberated around the inside of her head. Treacherous hands obeyed the demon's orders and put on the corset. It morphed and flowed around the supernaturally endowed contours of Vicky's body, lacing into place with unnatural ease. \n\nIt had been less than a day since Mila was released from the corset and had possessed Jordan. That in itself had been costly, and the subsequent battle had left Mila crucially weakened. She no longer had enough power to take full control of Vicky; not yet.\n\nVicky's hands quested to her crotch. Both hands worked to full effect, rubbing her clit and fingering deep into her pussy, causing rivulets of hot juice to spill on to the floor. The growing puddle struck one of the chalk lines and the entire inner circle lit up with an eldritch glow. With the build-up of the impending orgasm, Vicky could sense a huge pressure on her very consciousness, gradually pushing against her. Darkness began to fill her mind. At the very last, as her orgasm hit the peak, she saw one last flash before nothingness consumed her -- the face of Mila.\n\nEpilogue: Three months later\n\nJordan slammed the caf\u00e9 door shut and locked it with so much angry force the key almost snapped. Her boss was still sneaking off to fuck Vanessa, and Jordan was still left to lock up. The demoness' enhancements had soon faded, leaving Jordan looking exactly as she had done before. The events of that night were a vague memory for her, more like a dimly remembered nightmare. That same night a librarian had gone missing and a male student had been found in a coma; Jordan just hoped she had nothing to do with it. \n\nThis time, instead of searching for new clothes, Jordan decided to go straight home. A willowy figure stood outside her flat, wearing a long, suede overcoat. Even outside the lab, Dr Genevieve Jefferson carried herself like a scientist.\n\n'Hi,' Jordan greeted her. She blushed slightly. They had seen each other once since the night, and that had been in the presence of the police to give a follow up statement. \n\nThoughts of their carnal night of lovemaking bubbled up to the surface of her mind. Genevieve nodded by way of greeting and betrayed no emotion.\n\n'Erm... would you like to come in?' Jordan entered her flat and Genevieve followed. 'Can I get you a drink, Dr Jefferson?'\n\n'Call me Genevieve, please.'\n\n'Wouldn't Jenny be less formal?' Jordan teased lightly.\n\nGenevieve shrugged and walked around the flat, inspecting and evaluating the contents of the small studio apartment. It was in a state of mess as usual; Jordan rarely had guests. Jordan poked around the kitchen for something to offer her guest. 'So how's er... the teleporter?'\n\n'I handed in all my research notes. We solved the inorganic/organic matter disparity but we couldn't maximise the range beyond 1.1 miles. My assistant is taking over the project -- he wants to work to a principle of local matter disassembly and remote reassembly which he believes won't be limited by range. I had ethical concerns with the project.'\n\n'Because of the potential destruction of the soul and/or mind that might happen?'\n\nGenevieve stopped pacing the room and fixed the shop assistant with an impressed look. Jordan smiled and offered her guest a cup of tea. 'Yes,' she answered. 'It had never bothered me before; I never believed in the soul. I am -- or perhaps was -- a physicalist, confident that the perfect recreation of the body on the other end would not pose a problem, but after that night.... Now I wonder what else there is... I can't focus on physics anymore...'\n\n'\"Tis magic, magic, that hath ravish'd me,\" Jordan quoted quietly.\n\nGenevieve looked quizzically.\n\n'Marlowe's Faustus,' Jordan answered.\n\nTo one corner of a coffee table stood a small pile of antique trinkets. Genevieve homed in on these and picked one up. 'These don't quite seem to fit in with the rest of the room.'\n\nJordan sat down and hugged her own hot cup of tea. 'The demon possession left some small mark. I seem drawn to certain objects, sometimes people and places.'\n\n'What kind of people, places and objects?'\n\n'Magic ones,' Jordan replied, quickly followed by, 'supposedly. They all came from an antique shop that claims to sell artefacts that have a history in the magic and occult.'\n\nGenevieve put the trinket down. 'I'm going to start a new research project. This world of magic needs to be put under the microscope. I could do with an assistant.'\n\n'No,' said Jordan. She stood up and drew herself close to Genevieve. 'Not an assistant. An equal research partner. I know you're a brilliant physicist but I'm not just some dumb shop bimbo.'\n\n'Agreed. Let's begin with this magic shop.'\n\nJordan laughed, 'It's late. They're closed. How about we start tomorrow? And in the meantime, you can buy me a drink.'\n\nGenevieve and Jordan left the flat for a nearby bar. An observer, hidden in the darkness, might have noticed subtle hints in their body language that displayed the interest they showed in each other that went beyond the professional. That hidden observer might even have smiled wickedly, pearl white teeth and blood red lips briefly flashing before fading back into the night. "
    ],
    "authorname": "EddieFuggles",
    "tags": [
        "succubus",
        "bimbofication",
        "possession",
        "demon",
        "breast expansion"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-curse-of-the-succubus"
}