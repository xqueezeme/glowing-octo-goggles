{
    "title": "Mommy's Little Knob Gobbler Ch. 02",
    "pages": [
        "Chapter 2: Cum Eating and Getting Caught ... Again!\n\nAuthor's Note\n\nThis story is a work of erotic fiction featuring themes related to gender non-conformance (crossdressing/feminization), jack-off instructions, cum eating, a young man's exploration of his sexuality, and some increasingly inappropriate familiarity between mother and son. All characters are at least 18 years old. If this sort of thing isn't a turn-on for you, then I recommend you move on and find something else more suited to your liking. If it is your cup of tea, then by all means please get out some quality lube, put on your favorite pair of panties, and enjoy!\n\nExplore. Be safe. Have fun. Don't try the inappropriate bits at home, or at all!\n\nThanks to dj19_78 for kindly helping to edit this!\n\n============\n\nChapter 1: A Boy and His Panties\n\nMom (June) walks in on her 18-year-old son (Steve) masturbating in one of her favorite pairs of panties. Initially furious with him for stealing her panties, she confiscates them and storms off. Later, after discussing things with her friend Karen, June concludes the right thing to do is to give Steve some of his own panties so long as he understands it's not ok to steal hers. Unbeknownst to either of them, they've both begun to see each other in a new light and are secretly fascinated, though resisting temptation...\n\nAnd now...\n\nChapter 2: Cum Eating, and Getting Caught... Again!\n\nSteve bolted to his room; both sets of cheeks burning as he clutched the gift bag to his thundering chest. Mom had just given him the best birthday present he could have imagined -- a week late, sure; but still easily the best present ever.\n\n'Not what I was expecting!' he thought as he ran. He'd been sure she was going to let him have it when she'd called him downstairs. Instead, she'd let him have them...\n\nHis whole world was spinning. In just a few short minutes he'd gone from only knowing she was too pissed to talk, to understanding why she was actually upset, to realizing she was fundamentally OK with him and what he liked -- so long as he'd respect boundaries of course.\n\nSteve flew up the stairs, taking them two or three at a time -- his rock-hard cock pointing the way with a tent in his jeans. He hadn't even realized he was hard until mom pointed it out while he was hugging her. Embarrassing, sure; but what did she expect giving him a bunch of sexy panties of his own?\n\nOnce in his room Steve closed and locked the door, turning back to lean against it as a wave of relief flowed through him. He caught his breath, his brain buzzing with thoughts of what had just happened.\n\nOpening the pink gift bag he peeked inside again, as if to check and make sure what had happened had really happened.\n\n'Yep! Those are her panties' he thought with a grin. 'Well, they were her panties... They're mine now!'\n\nThe reality of her gift was still sinking into him. He had his own panties, and he could enjoy them anytime he liked. Even more amazing was that his mom knew and was just fine with it.\n\nDumping the bag out on his bed Steve gasped when he saw these were not just any panties either. Nope. It was a mix of sexy thongs and tangas, with a couple of cheeky Brazilians thrown in for good measure -- easily some of her best panties, and each one a personal favorite of his.\n\nHolding up a particularly sexy red and black pair, Steve's mind went back to their earlier conversation recalling what she'd said to him.\n\n\"You like them, don't you? I thought you would...\" his mom's voice echoed in his mind.\n\n\"How did she know!\" he exclaimed in amazement. It was as if she'd let him pick these out for himself.\n\nSetting the sexy red and black pair aside, for now, Steve returned his attention to the colorful pile of panties strewn across his bed. Mixed in was a small bottle he hadn't noticed before.\n\n\"Well, well, well! What have we got here!\" Steve said picking up the silver and purple bottle. The label read JO All-In-One Lavender Fields Sensual Massage Glide. Flipping open the cap, he inhaled the floral fragrance.\n\n\"Sensual indeed!\" he said perusing the label as his thoughts returned to his mom's parting words.\n\n\"...Why don't you scamper up to your room, try on some panties and take care of that lump? That's what you want to do right now, isn't it?\" his mom's sweet voice echoed for him.\n\n\"Thank you, mommy...\" he whispered to himself almost like a prayer; then with a sigh of relief, he began to strip.\n\nSteve tore off his \"boy\" clothes discarding them in a heap at his feet until he stood naked and erect, ready to try on his panties. Almost quivering in anticipation he reached for the sexy red and black pair...\n\nThe pair he'd picked to christen first had a bright red fine mesh in front with cute little nubby knots in a grid pattern. The back was even sexier with black lace in an ass-hugging Brazilian cut. \n\nTurning toward his mirror, he could see himself standing there, panties in hand. His rock-hard cock aching to be touched. Slowly he stepped into his panties, reveling in the silky feel of the fabric as he pulled them up. His heart raced as he watched them close the distance to his almost painfully hard cock.\n\nWhen they got to just under his butt, he did a little jump to settle his hinny into the back, then ever so slowly he drew them over his balls covering his aching cock in the fine red mesh of the front. He could see every vein and ridge of his cock through the translucent material as he laid back on his bed, slowly caressing himself.\n\nThe black lace back of his panties hugged his tight butt while the sexy red front did its best to contain him, ultimately failing in the attempt. Looking down, Steve could see the head of his hard cock peeking out from the waistband of his panties with the rest of him visible through the translucent front.\n\nThe thought that these were now his panties sent a shiver up his spine making his cock tremble with desire.\n\n\"...don't come back down here until your balls feel like raisins!\" his mom's voice echoed in his mind.\n\n\"Yes, mommy...\" he whispered as he reached down fishing his cock out from the side of his panties. He was going to need full access to his complete package for the task at hand...\n\n\"Alexa! Play Jack Off Tunes!\" he commanded. He wanted something now with a nice strong beat.\n\n\"Playing Jack Off Tunes from Steven's Spotify Account\" she cheerfully complied, a rhythmic techno beat starting up from her speaker.\n\nSteve was trying to wrap his head around his new reality even as he wrapped his hand around his cock. He lay on his bed, his heart pounding in his chest in time with the rhythmic beat of the music.\n\n'Mom knows I like panties... and she's ok with it. She's actually ok with it!' he thought as he caressed his hard cock teasing the taut skin.\n\n'More than ok... She gave me some of her sexiest panties and a bottle of lube, then basically sent me to my room to beat off!' he thought, gently stroking himself.\n\nHe'd been afraid his mom was going to let him have it earlier; so afraid she was upset over catching him jacking off in her panties. He knew now he'd gotten that part wrong. It wasn't the panties, or the jacking off; just that he'd stolen them from her -- and she'd solved that problem by giving him his own panties.\n\nRemembering the lube, he reached for it flipping the cap back open and drizzling some on his erection. The lavender scent drifted up to him as he watched the clear liquid bead up before being smeared around by his stroking hand. His cock glistened with lube.\n\nSteve's mind was blown. There were just so many things to process in his new reality. The fact that he could wear his panties whenever he liked. That his mom knew! That she was just fine knowing he's up here, right now, dressed in pretty panties, stroking his cock. He was sure she'd be assuming he was furiously wanking by now. Just the thought that his mom knew what he was doing, what he was wearing, and was fine with it blew his mind sending a shiver of excitement down his spine.\n\nSteve pictured his mom in his mind. She was probably still downstairs in the living room, sitting on the couch. Maybe she'd poured herself a glass of chardonnay and was sipping it while watching one of her shows or possibly reading a book.\n\nNothing could be further from the truth...\n\n* * *\n\nJune stood just outside of Steve's room. She'd given him a few minutes' head start, but once she heard the music start she could resist no longer. She'd crept upstairs to just outside her son's room where she was listening intently. She knew what masturbation sounded like and this was not it.\n\n'What's going on in there?' she wondered. Had she done something wrong?\n\nJust then she heard a low plaintive moan that could mean only one thing. Stevie was touching himself. She wondered which panties he was wearing. She was certain he'd be wearing some, though curious which pair he'd selected first. The light pink ones with white dots maybe? Those were the most feminine in her mind. The sexy black ones with the little red bows? Those were the best of the lot. Regardless, he was most certainly in there naked except for some panties, stroking his big, beautiful cock...\n\n'Big, beautiful cock?' She thought. 'Did I just think of my own son's penis as a beautiful cock?' June cringed.\n\n'Oh my god, what is wrong with you June Simpson! You are definitely going straight to hell!' She thought as she leaned back against his door, a tiny little moan of her own escaping her lips as she felt her pussy gush.\n\n'It's not my fault!' She told herself 'His cock is beautiful! And it's just so big, too; just like his father's, maybe even larger...' Mike had not been small in the cock department by anyone's standards; but on Stevie's body, a cock like that looked positively enormous.\n\nJune listened to her son masturbating in his room. Karen was right, of course. June had no problem with Stevie masturbating, and now that she'd let go and given him the panties -- his panties, she corrected herself -- she could see she had no issue with that part either. If anything he just seemed even cuter in her mind. Her special boy!\n\nJune wanted Stevie to enjoy himself. A young man should explore his sexuality, not just assume whatever society says is \"normal\". There were far worse things he could be doing, and this way he wasn't going to hurt anyone, or catch a disease, or risk a teen pregnancy, or any of the thousand other ways a young man could fuck it all up.\n\n'Plus', she thought, 'a cock that nice deserves to be sucked and fucked and worshiped until it cums in buckets all over your face...'\n\n'Oh. My. God! June, you are so going to burn in hell!' She thought, catching herself imagining Stevie's panty-clad cock, so like her husband's... a cock she realized she desperately missed...\n\n'This is a job for Bruce.' She thought as she quietly pushed off from the door taking herself and her drooling pussy with a mind of its own towards her room and the big black dildo her late husband had given her before he left on his last tour...\n\n* * *\n\nSteve was getting close now, but something was bothering him.\n\nLooking down he could see his glistening cock alongside the sexy front of his panties. He had a perfect view of both his cock and his panties. The sexy red front looked so good, and the black lace wrapping around from the back felt positively amazing -- like a tender caress of his ass while he was stroking. But still, something wasn't quite right...\n\nAs Steve's gaze dropped lower it stopped at his hairy legs protruding awkwardly from the sexy panties.\n\n'Duh!' He thought as he realized what was spoiling the view. 'Hairy legs just don't go with panties.' he realized, concluding the same was true for the hair around his cock too.\n\nAs his body hair was distracting him from the job at hand, he refocused his attention on his throbbing cock and the oh-so-cute and very feminine panties he was wearing. That was safe territory, he thought.\n\n'That's it,' he thought. 'Focus on your cock... Your big hard sexy cock...' he told himself.\n\nReaching down with his left hand he grabbed his balls pulling them down -- making his already hard cock stick up proudly. 'Yeah... that's it... Cock... Cock and panties...' he thought.\n\nHis balls were already boiling as he began stroking harder -- the lavender scent of the lube filled the air as the tempo of his stroking matched the rapid beat of the electronic dance music playing on his computer. The music was building to a crescendo and so was he. Stoking even faster, he kept pace with the music. He wasn't about to hold back now!\n\nSteve's legs trembled as he let out a low moan and jets of cum began shooting from his throbbing cock. It was like his cock had transformed into a glorious penis-shaped cum fountain. Hot ropes of cum flew up only to come crashing back down, splattering on his chest, hips, and panties. Some of it wound up right back on his cock acting like extra lube for his hand.\n\nLicking his lips, Steve watched as ropes of sweet cum fell back onto him landing everywhere. He was clearly going to have to work on his aim. He kept pumping until there was no more left, then lay back catching his breath.\n\nOnce the song ended, he released his grip on his now deflating penis lifting his sticky cum covered hand up to where he could see it. The memory of his mother's voice came back to him once again as if she was right there in the room.\n\n\"I want you to personally clean up every mess you make!\"\n\n'Well,' he thought, 'there's no denying this is a mess you've made.' With that, he brought his cum covered hand to his mouth. His lips parted as he extended his tongue and proceeded to perform his \"cleanup duty\".\n\nSteve noticed he was moaning again as he licked up his cum. This was a different sort of moan, though. Not the 'I'm about to cum' sound he'd been making a minute ago, but more a 'damn this is delicious' sort of sound.\n\nSmiling, he proceeded to scoop up every rope and strand of cum he could find, eagerly feeding them to his mouth. Finally, he pulled off his panties, bringing them to his mouth to suck out the cum that had landed there and begun to soak in.\n\n'Now that's what I call christened,' he thought. 'I'm definitely going to need to work on my aim though' as he considered what he could do next time to maybe get more of it directly into his mouth.\n\n'Maybe I could suck my cock?' he thought with a mischievous grin. Tucking over, he tried to see if he could reach. Nope, not even close. Maybe if his cock was hard, but even then, he'd probably need to be a lot more flexible.\n\n'Yoga!' he thought, remembering his mom's weekly yoga class. 'That's what I'll do. I'll ask mom if I can join her yoga lessons... Maybe if I get good enough, I'll be able to get my cock all the way to my mouth!'\n\nWith that, he jumped up and headed for the shower to shave from the waist down.\n\n* * *\n\nJune was reclining on her bed, her legs stretched out before her as she teased herself with Bruce. Her pants lay in a heap by the bed; she'd torn them off as soon as she'd gotten inside her room and the door closed. One hand was manipulating Bruce, while the other held her panties to the side with her thumb free to work her clit.\n\nShe was playing the head of her big black dildo up and down the wet folds of her pussy, teasing herself as she thought about what had gotten her into this hot and bothered state.\n\n'He's in there right now masturbating... in my panties...' She thought knowing full well those were his panties now; still, thinking of them as being hers made it even more erotic for her.\n\nJune had always thought of her \"Stevie\" as being more 'cute' than 'handsome', but certainly good-looking no matter how you cut it. Knowing he was wearing panties changed her perception of him from \"Steven\" to \"Stevie\", and now she couldn't take her mind off the thought of him in those cute panties.\n\n\"I bet he looks so cute... in my panties...\" she moaned aloud, picturing him in the pink pair with white dots. Speaking the words aloud made it seem even more real and intense to her than merely thinking them had.\n\n'I bet his fist is wrapped tight around that big fat cock of his... stoking... pumping...' she thought, unable to keep herself from visualizing her son masturbating in \"her\" panties.\n\n'I shouldn't...\" she said to herself, even as she place Bruce at the entrance of her wet and willing pussy.\n\n\"God! What's wrong with me?\" She whimpered, unable to stop herself. 'Why does this turn me on?' June knew she was too far gone now. Her pussy demanded to be fed, and there would be no denying it.\n\n'Don't think about Stevie! Don't!' She scolded herself. 'Think about Bruce! Think about his big fat cock fucking you!' She thought as she pressed the dildo into her hungry pussy as if to make the point. She was determined to divert her thoughts from her son. It didn't work.\n\nAs she slowly filled her hungry pussy over and over with Bruce, it was visions of Stevie's hard cock that filled her mind. Stevie's big, fat, hard cock demanding her pussy; so like his father's...\n\n'Such a beautiful cock!' She thought, unable to resist.\n\nShe wasn't teasing herself now; she was fucking herself. Looking down at Bruce she could see he gleamed from having been inside her.\n\n'I bet he's lubed himself up... His big hard cock all shiny with lube...' she thought looking at the gleaming phallus fucking her.\n\nUnable to stop now, she played with her clit as she fucked herself with Bruce. Her mind swam with visions of Stevie in panties, stroking his big hard glistening cock. She could picture it so clearly in her mind, throbbing and ready to go.\n\n'No, June! Don't!' She screamed to herself as she flicked her clit furiously, but it was too late; her orgasm was inevitable at this point and her mind was locked on one thing.\n\nJune could feel her orgasm building. It had started with tingling down in her toes, quickly progressing up her flanks. Now her back was arched and her head thrown back, her pussy on fire with lust. Her whole world existed only in her very core, and he was penetrating that core relentlessly.\n\nJune gasped as the wave of her orgasm crested through her. Shuddering, she climaxed with Bruce lodged deep inside her.\n\nHer breathing as ragged as if she'd just run a marathon, June relaxed back into her bed. Little tremors running through her like the aftershocks of a pussy-centered earthquake.\n\n'Jesus, June, you need to get laid...'\n\n* * *\n\nAs the week progressed Steve became more comfortable with his new reality. He'd rearranged his dresser to make room for his panties and dug into his new chores. It seemed like a more than fair trade to him. He'd also been practicing his aim, but so far that hadn't noticeably improved.\n\nThe more he thought about it, the more certain he became that Yoga was the answer. His mom had been telling him it did wonders for flexibility and endurance for years. If he could just get good enough with it, he'd be able to get his cock in his mouth and aim would be irrelevant.\n\nAt first, he tried watching some videos online and practicing, but that hadn't delivered the results he wanted, so he resolved to take it up a notch.\n\nThat night, after dinner, Steve made his move.\n\n\"Uh, mom. I've been thinking. Could I join you for Yoga tonight?\"\n\n\"Yoga, huh? To what do I owe the honor?\" June asked, a curious expression on her face.\n\n\"Oh, just thought it would be good for me. You know, healthy exercise.\" Steve responded evasively.\n\n\"Are you sure honey?\" June asked. \"Yoga isn't like going to the gym or running or other types of exercise. In the session I go to, it's mostly a bunch of ladies my age doing it.\"",
        "\"Yeah, I'm sure. I think Yoga would be a great way for me to get more flexible while staying in shape.\"\n\n\"Well, it will certainly do that! You may find it's more strenuous than you expect though, but if you stick with it I can promise you It'll do wonders to help you stay limber\" June said.\n\n\"Of course, you'll need a mat and a proper workout outfit. I've got some old purple yoga pants that might fit you and you can use my old mat until you get one of your own. It's pink though, is that OK?\" June asked.\n\n\"Sounds perfect!\" Steve said with a gleam in his eye.\n\n\"Purple yoga pants and a pink mat is perfect, huh? Is this like wanting panties? You know it's OK to ask for things you'd like to have sweetheart.\"\n\n\"No!\" Steve blurted. \"... I mean, sure -- yoga pants sound like fun; but I do want to try yoga. I've been thinking about it, and I think yoga is just what I need.\" Steve insisted.\n\n\"OK, but if you just want a pair of yoga pants you can have my old ones, or I'll buy you a new pair. You don't have to go do yoga with me just to get a pair of yoga pants if that's all you want\".\n\n\"Thanks, mom, but I think yoga is just what I need. I think I'll like it and I'd like to do it with you!\" He added emphatically.\n\n\"OK, mister, you're on! Let's go get you fitted for some yoga pants. If you play your cards right I might even toss in some workout panties...\" June said with a wink.\n\n* * *\n\nSteve found the feel of his clingy yoga pants surprisingly pleasantly on his freshly shaved legs; as if his entire lower body was one giant erogenous zone. Drawing his fingers up his thighs toward his ass he marveled at how it made his skin tingle, goosebumps rising in response.\n\nSeeing himself in his mirror, he was amazed at how well his mom's old yoga pants fit him; how they accentuated the curves of his calves and his tight little ass. She'd tossed in some light-weight cotton thongs to complete the package, so now he had his own workout panties too.\n\nTurning so he could see his butt directly in the mirror he checked himself for pantie lines. The tight purple yoga pants clung to every curve leaving little to the imagination, but the peach thong mom had given him was thin enough to hide completely.\n\n'Damn, these things do make my butt look nice!' He thought as he admired himself in the mirror. 'From behind, I look like just a girl from the waist down.' the thought arousing him, much like wearing panties did.\n\nFrom downstairs he heard his mom call up for him.\n\n\"Hurry up or we'll be late!\"\n\n\"Coming, mom!\" He called back as he scooped up his yoga mat and headed her way.\n\nSteve felt a mix of excitement and nerves building inside him. Back in his room, he'd felt feminine and confident checking himself out in the mirror, but now that he was headed out dressed as he was he felt both nervous and aroused. Anxiety and excitement propelling him, he raced down the stairs.\n\n\"Whoa! Slow down\" his mom said as he rounded the corner at the base of the stairs headed full speed for the door. \"Let's take a look and make sure you're ready.\"\n\nSteve paused, uncertain what to do, a deer in the headlights look on his face.\n\n\"Turn around!! Let's see!\" June cheerfully prompted him, twirling a finger in the air as if to demonstrate.\n\n\"Well, don't you look cute!\" June said as he slowly spun about, putting himself on display. He could feel her gaze upon him as if she was caressing his butt while he turned.\n\nWhen he got fully back around to face her he saw her expression had changed and her eyes were fixed on his crotch. Unsure what to do, he waited and watched as she licked her lips, her gaze intent.\n\n\"What's wrong?\" He asked, concerned he might have done something wrong.\n\n\"Well,\" she said softly, her eyes still fixed on his crotch. \"If we had more time, I'd send you back to your room to take care of the lump in your pants...\"\n\nSteve blushed, realizing immediately what she'd locked eyes with. 'Damn, these yoga pants!' he thought as he hastily tried to arrange himself better. It didn't help.\n\n\"Since we're running late you'll just need to think happy thoughts for now, OK?\" She said lifting her gaze to meet his eyes. \"Can you do that for mommy?\"\n\n\"Sorry mom, I'll work on that,\" he said.\n\n\"Yeah, I bet you will... but save it for later, ok?\" She winked at him. \"Let's go, you'll be OK once we get there and get going. You'll see!\" She said cheerfully.\n\nSteve worked on his \"yoga breathing\" on the drive over, June coaching him on relaxation techniques as she drove. That and not being under her gaze seemed to help; by the time they got there, he felt like he was ready to step out of the car without embarrassing himself.\n\nOnce inside the studio June showed him where to stash his shoes and cellphone, then introduced him to some of her friends. He'd heard her mention most of them before, so now he was able to place names to faces.\n\n\"OK, now this is important,\" she told him. \"When we go into the yoga room it's a quiet place, so keep your voice low and keep talking to a minimum. Remember, yoga is about more than just exercise, there's mindfulness, meditation, breathing, etc. You'll pick it up as we go along, but just be respectful and quiet, OK?\"\n\n\"OK, got it. Keep quiet and be respectful\" he replied, nodding.\n\n\"You can set up with us,\" she said, indicating her friends Trudy, Beth, and Michelle. \"Once everyone is ready, then Sarah will lead us through the exercises.\" With this last part, June pointed toward a petite young woman across the room.\n\nLooking where she'd pointed Steve saw a ridiculously cute young woman with long brown hair in a ponytail standing next to several ladies about his mom's age. Steve's eyes were immediately drawn to her shapely ass and fantastic legs. He could hear his mom talking, but couldn't take his eyes off her butt, which she kept turning in his direction\n\n*Thwack* June thumped him, getting his attention.\n\n\"Eyes back here, bozo; it's not polite to stare,\" June whispered, admonishing him with her no-nonsense look. \"Now pay attention!\".\n\nBlushing, Steve focused on his mom, though the temptation to steal another glance at Sarah's fine ass nagged at him.\n\n\"We'll start with some breathing to warm up, then Sarah will be leading us through various poses. She'll demonstrate each one and we just follow along.\"\n\n\"I should warn you, Sara will push us -- most of us have been doing this for a while. If you can't do a pose the way she did it, then just do your best or drop into Child Pose -- no one will judge you, OK?\"\n\n\"I'm ready! Let's go do some yoga.\" Steve said eagerly.\n\n\"Ok, then follow me,\" she said leading him into the yoga room.\n\nOnce inside Steve rolled out his pink mat next to his mom's, picking a spot between her and Michelle. Trudy was one row ahead in front of him, and Beth was right behind him. Feeling safe with his mom and her friends around him, he relaxed and just worked on his breathing as the class organized itself.\n\nSarah kicked things off, leading the class through breathing exercises then into a series of poses, each one harder than he'd expected. He'd watched some videos online to try to prepare, but holding the poses proved to be harder than it had looked.\n\nSteve found his gaze darting around the room, watching others to see what he should be doing with each pose. He was looking right ahead when they moved to Down Dog; his eyes locking onto Trudy's round bottom...\n\nAs if in response to his gaze, Trudy began tensing and relaxing the muscles in her butt and thighs. Steve could feel himself hardening in response, unable to remove his gaze from her heart-shaped ass.\n\n'Don't get hard!' He told himself counterproductively. It didn't work. He could feel his hardening cock pressing into the soft yoga mat below him as he strained to control himself.\n\n\"Pssst!\" Just hissed at him to get his attention. \"Relax! You're trying too hard!\" She whispered.\n\n'Trying not to get hard is more like it' he thought as he closed his eyes to prevent himself from staring at Trudy's sexy ass. A butt he now realized was very much like his mother's. A woman's figure, not a girl's -- captivatingly curvy...\n\nSarah moved the class into the Wide-Angle Seated Forward Bend pose next, forcing him to open his eyes to see what he should be doing. Big mistake.\n\n'DontGetHard! DontGetHard! DontGetHard! DontGetHard!' he thought frantically as Trudy spread her legs wide and bent forward, flexing her already tight buns as if for his benefit. It was too late. He'd seen her now, and even if he closed his eyes he'd still be seeing her bent forward like that in his mind.\n\n'Not now!' He thought as his cock stiffened uncontrollably in his clingy yoga pants.\n\nSteve turned his gaze to his right - anywhere but Trudy's amazing ass, and immediately noticed Michelle's glorious breasts straining against her shirt as she leaned into the pose with her chest thrust out. We're her nipples hard? Two hard little bumps were visible through the thin fabric of her shirt...\n\n'God! She's stacked just like mom!' he realized. As if sensing his gaze she moved her eyes up to his and gave him a wink.\n\n'Not helping!' He thought to himself as Sarah called out the next position -- Upward Dog. The whole class moved into the pose placing their butts high in the air, with their hands and feet on the mat.\n\nOnce again Trudy's glorious ass was thrust towards him so he tried looking to his left where his mom was. Of course, this just treated him to a nice view of her heavy breasts hanging down.\n\nGlancing up his eyes locked with hers and he saw her smirk knowingly then signal with her eyes toward his crotch.\n\n\"I see you're enjoying this\" she whispered. \"You might want to adjust your shirt though...\"\n\nGlancing under himself he saw his shirt had fallen exposing the lump in his yoga pants from his fully hardened cock. Steve tried to tug his t-shirt back in place so it might hide the evidence, but it was too late for that as Beth let out a poorly stifled giggle -- clearly amused with his predicament.\n\nSteve fought with his shirt trying to keep it situated to hide his arousal, but the constant barrage of new yoga poses kept the battle running. Being surrounded by sexy voluptuous women didn't make it any easier. \n\nBy the end of the class, Steve was worn out, though still hard. All he wanted at that point was to get out and go home, but his mom wanted to stay and chat with her friends. He tried to hang back avoiding attention, but it didn't work.\n\n\"So, what did you think of yoga? Did you enjoy it?\" Trudy asked. \"Wanna come back for more?\" She said with a wink.\n\n\"Uh, yeah. It was harder than I thought it'd be\" he admitted.\n\n\"Yes, it was quite hard tonight, wasn't it?\" Beth agreed sweetly.\n\n\"The hardest I've seen in a while\" Michelle added with a grin.\n\nBlushing, Steve was sure now they'd been deliberately teasing him and enjoying the show.\n\n\"Knock it off you guys, or I won't bring him back!\" June admonished her friends, then turning to Steve she hugged him and said \"You did great, sweetheart.\"\n\nSteve could feel his mom's soft breasts pressed into him, and his hardness pressed between them in the embrace making his blush deepen.\n\nOnce free of his mom, Trudy swooped in for a hug of her own, whispering \"cute pants...\" in his ear, as she squeezed his butt.\n\nAfter that, each of the ladies insisted they get a hug too before June dragged him off.\n\n\"Hope we get to see you again next week!\" Beth called after them as they left.\n\nSteve could hear them giggling as his mom hurried him out the door and toward their car.\n\nJune waited until they were in the car and safely on their way home before addressing the obvious.\n\n\"So, you definitely like wearing yoga pants...\" she said with a wink. \"Did you enjoy the yoga too? Would you like to continue?\" She asked. \"You don't have to keep doing it if you don't want to.\"\n\n\"No, I liked it, mom. I want to keep doing it\" he insisted, thinking about his original motivation and how desperately he needed a blow job right then.\n\n\"Well, don't worry about the girls. They all noticed your... predicament... and, well, were pleasantly amused -- but they're just teasing you. Usually, they're very nice.\"\n\nBlushing, Steve said \"Uh, yeah. I kind of picked up on that.\" There it was. Everyone had noticed his erection.\n\n\"Let's get you home so you can take care of that properly, OK?\" June said sweetly. \"Next time I'll allow more time before we leave so you can deal with it before the lesson. Would that help?\"\n\nSteve nodded mutely, not quite believing what he'd heard. This new reality was both weird and wonderful.\n\n\"OK, so that's settled then. Wednesday nights we've got yoga together and you're to masturbate beforehand to help control your reaction to wearing tight yoga pants!\" She said reaching over to gently pat his \"predicament\".\n\nSteve blinked, uncertain what to say.\n\n* * *\n\nOnce home, June sent Steve to his room before heading to the kitchen to pour herself a glass of wine. Sipping it, she wondered which sound she'd hear first, a shower running or Stevie's masturbation music. She didn't have long to wait -- it was the music.\n\n'The boy has his priorities!' She thought.\n\nWith her glass in hand, she snuck up to his door to listen in. Soon she was leaning back against his door as she sipped her wine, listening to him masturbate; her hand shamelessly busy with tasks of its own.\n\n'God, I shouldn't be doing this,' she thought, knowing full well it was wrong to eavesdrop on her son masturbating, and yet unable to stop.\n\n'Why does my willpower crumble whenever I think of his big fat cock?' She thought, knowing what was to come. She'd listen, become powerfully aroused, retreat to her room, and give Bruce a workout -- fighting off thoughts of Stevie's beautiful cock just like the last time.\n\nShe'd already given in and admitted to herself that's what he had in his pants -- a Big Fat Cock.\n\n'Stevie has a big fat cock -- not a penis, a cock' she thought. 'And now all my yoga friends know about it too.' She saw how they were looking at him. She'd looked for herself, and god was it a nice one.\n\n'Who wouldn't' she told herself. 'He's so damn cute... too damn cute... It's just not fair that he's my son...'\n\nTonight was going to be different from last time in at least one respect. She was going to treat herself to a nice hot bubble bath, and Bruce was most definitely going to join her. Bruce had a handy suction cup base, and she planned to attach him to the tub wall. She'd sip her wine while playing with him, then she'd fuck herself senseless.\n\nIt didn't take long before she heard Stevie reach his climax. Considering how long he'd been hard tonight it was a wonder he hadn't popped when she'd patted his cock in the car. That move had 'Wicked June' all over it, but she'd barely put up any resistance, and now she had not only the sight of his hard cock in her memory; she had the feel and warmth of it too.\n\n* * *\n\nWhen Saturday finally rolled around June set about doing the laundry like usual. Unsurprisingly there were not any boy's underwear in Stevie's hamper, just the pretty things he'd been wearing under his clothes -- and no doubt masturbating in too.\n\nAs she separated the delicate items, she noticed none of his panties seemed to have any cum stains on them.\n\n'That's odd,' she thought. 'He is masturbating in them, isn't he? Where's the cum?' She wondered.\n\nShe'd fully expected to find panties in his hamper, but she'd expected them to be cum stained and crusty, so this was both a relief and a mystery since they didn't look badly used at all. She'd been expecting to need to presoak them at least, but these looked cleaner than if she'd worn them herself.\n\n'Is he pre-washing them before he puts them in the hamper?' She wondered, not wanting him to feel shame for liking what he did.\n\n'He shouldn't feel like he needs to hide this from me' she thought.\n\nOnce the laundry was done and folded, she placed his panties in plain sight on the top of the pile; then for good measure, she added a heart-shaped note that read \"Enjoy your me time sweetie!\"\n\n'There,' she thought. 'That'll let him know it's ok.' June dropped off the clean and folded laundry on Stevie's neatly made bed -- the note displayed like a cherry on a Sunday.\n\n\"He's certainly keeping his room tidy now,\" June observed as she departed.\n\nThe following week was the same; June found herself eavesdropping regularly on Stevie's daily masturbation sessions. She'd figured out his routine -- he wasn't being particularly subtle about it. Sometimes he'd even announce it by saying he needed some \"me\" time and heading for his room.\n\nThe note had done its job; Stevie seemed much more relaxed about things now.\n\n'Maybe the yoga is helping that too?' She wondered, glad she'd agreed to let him join her with that.\n\nOn Wednesday, per their arrangement, she sent him to his room to \"take care of things\" before getting ready for yoga. This didn't leave her time to take care of herself, but she did get to enjoy listening to him.\n\nCuriously, it didn't have quite the effect she'd hoped. He did seem to hold off his erection for a while, but by the end of the session he was sporting another mighty one; her friends were giggling like girls. Naturally, they each wanted a hug at the end of the night so they could cop a feel.\n\nJust like the last time, Stevie made a beeline for his bedroom with music before shower; June following discretely behind once the music had begun.\n\n'We've got to stop meeting like this...' she teased herself, as her fingers invaded her panties. She was already primed having eavesdropped on him earlier, then watching as he got hard during yoga; now here he was back at it, and her resistance was crumbling.\n\n'That boy is insatiable!' She thought, one hand at her breast with the other busy down below. She could hear him in his room, little moans and cries escaping as he worked himself up in time with the music. She was following the same driving beat herself as visions of his hard cock danced through her mind.\n\nWhen she heard him climax June had to bite down on the heel of her hand to stop herself from crying out aloud with him. If she didn't get to her room pronto there wouldn't be anything left for Bruce to take care of tonight, so off she scampered.\n\nWhen Saturday finally rolled around she found that, once again, his panties didn't seem all that \"dirty\" -- certainly no visible cum stains.\n\n'He's masturbating often enough there should be a pile of cum soaked panties or socks or something coming out of his room,' she thought with a frown.\n\nLifting a pair of his panties to her nose she took a hesitant sniff, the mystery deepening.\n\n'OK, these panties have seen some cum, but where's it going?' she wondered, having detected a trace familiar smell.\n\nThis week she placed a note atop his freshly laundered panties that simply said, \"Have fun sweetie!\".\n\nShe was determined to make sure he knew she approved of him, but where was his cum going? Was he masturbating into a tissue and then tossing that out? Maybe it had something to do with his added house cleaning chores and generally keeping things tidy?\n\n* * *\n\nSteve had noticed that if anything his new reality had made him even hornier. He hadn't thought it possible, but his mom's encouragement was driving him wild. The little notes she'd been placing on his clean clothes were like icing on the cake. As sexy as wearing panties felt, those just amplifying everything. He was feeling more feminine each day, and his mom's overt acceptance was a big part of it.\n\nAt one point he noticed his mom lingering outside his room while he was stroking. He thought he heard a faint moaning or maybe crying coming from the hall outside his room. Looking that way he saw a shadow blocking the light from the hall under his door. Someone was standing right outside his door blocking the light from the hall, and there was only one someone that could be -- mom; but why was she crying?",
        "He stopped what he was doing -- this was freaking him out. Was mom secretly not ok with all of this? He didn't think so -- she'd never lied to him so far as he knew, and everything she'd said and done seemed to indicate she was genuine OK with it.\n\nHe lay there gently caressing his erection, keeping it hard while keeping it quiet as he listened. No more moaning or whatever that was out there, so he resumed stroking, listening carefully as he did so.\n\nAs he resumed stroking he heard a light gasp. That was no moan! It sounded more like the tender noises a girl makes in some of the better pornos he'd seen -- not the wham-bam-thank-you-ma'am stuff that just treats all women like meat, but the kind where the guy really makes love to the girl. More believable... More real... Whatever it was, this was like that!\n\nPicking up speed, Steve cut loose making more noise -- his fist flying up and down his well-lubed dick. As if in response, the noises coming from the hall increased in tempo too. It was almost like a glorious feedback loop! I do more, you do more! You do more, I do more! It was like they were in sync! This was intense!\n\nSteve couldn't see what was going on in the hall, but he could hear enough and certainly imagine it. In his mind she was leaning back against the door as she listened to him; her legs were parted, and her fingers busy. That last part had to be true he realized based on the positions of the shadows coming through under his door! Someone was out there, it could only be mom, and her feet were spread apart.\n\nSteve was staring at the crack under his door, watching those shadows, thinking about what must be going on right outside his door when his orgasm hit, catching him by surprise. One second his balls were tingling, then, before he could even slow down to savor the moment, his back arched as he came.\n\nSteve's orgasm exploded through him sending his cum rocketing up the column of his cock. It was as if his fist was a pussy and he had to bury his cock as deep as he could in it. His cum fountained skyward, at least three feet in the air, only to fall back down in a glorious splatter reaching as far as his neck and all over his chest. His moan turned to a roar.\n\nThe noises from the hall quickly subsided after that; the shadows disappearing with them. Mom must be retreating down the hall he figured, headed either to her room or back downstairs.\n\nListening closely, Steve could barely make out the soft sound of his mom's bedroom door opening, then closing as he cooled down from his orgasm. And oh, what an orgasm that had been! Who knew having an audience could be such a turn-on? This was a kind of approval transcending panties, lube, or sweet notes of encouragement.\n\nWith the show over, Steve turned his attention to the new task at hand -- clean-up.\n\nAs usual, he began with the cum that had landed on his hand collecting the last bits that had puddled around his cockhead and were just now beginning to run down over his fingers. He casually and patiently licked up every delicious drop, then went about scooping up more wherever it had landed.\n\nThere was quite a bit that managed to fall back on his panties, which would mean he'd need to suck those clean later before putting them into the hamper. This also meant he'd probably end up giving himself an encore orgasm, watching himself lick and suck his panties clean while beating off again later. He'd learned that was a side benefit of his clean-up duties, clean-up turning him on like a sexual perpetual motion machine until he had no more to give.\n\nIn the meantime, he reflected on what had just happened.\n\n'So, mom gave me panties and lube, then basically tells me to jack off...' he thought. 'Now she's listening in? When did this start?' He wondered. Could this have been her first time? Would she do it again?\n\nOver the next few days, Steve experimented with making sure his jack-off sessions coincided with times his mom was home. Sometimes he'd announce them, saying things like \"I think I could use some \"me\" time\", or just \"I'll be up in my room if you need me\". Usually, his friend the shadow would come for visit. Sometimes she'd show up right away and leave a little early. Sometimes she'd show up a bit later and stay to the end. Invariably the louder he got, the louder she'd get too, and she always discretely headed off to her room when she left.\n\nOnce he tried a more direct approach, boldly announcing \"Damn, my balls feel full! I think I'll go jack off...\" That one got a reaction!\n\n\"Language, young man!\" June reprimanded him sternly. \"That's not how we talk in this house.\"\n\nSteve blushed deep red, knowing he'd overstepped the boundaries -- his mom did have standards after all. He scurried off to his room blushing, but even then the shadow visited his door once again!\n\n* * *\n\nJune couldn't believe the audacity of her son.\n\n'He's got no shame!' she thought as she touched her nipples through her blouse while sneaking her left hand into her already soaked panties. While she did want him to feel comfortable being himself, that didn't excuse being so crude! If he was smaller, she'd have turned him over her knee and swatted his pretty little panty-covered butt...\n\n'What the hell is wrong with me!' She thought, the image of her son's shapely posterior in the tightly clinging pink lace Brazilian she's given him swimming into her head. 'I bet the front can't even contain his big fat cock... The head is probably peeking out right now and his stoking music hasn't even started.'\n\nJune spread her feet apart for easier pussy access as she leaned back against the door -- her customary \"masturbation post\". The more often she gave in to the urge, the harder it had become to resist. Invariably it led to a serious workout for Bruce, and it's not like Stevie even knew she was out there -- she'd been very discrete! Sometimes she'd have to bight down on the heel of her hand to keep from moaning too loud, but other than that first time when he'd stopped unexpectedly for a bit he seemed to be consistently absorbed in his hobby.\n\nHe was probably tuning out every other thing, just fixated on his big fat cock, glistening with lube as his tight fist slowly stroked up and down, gradually picking up speed... June had imagined Stevie's masturbation so often the mental picture was becoming completely real for her. But where was the cum going? She'd searched his room and could find no evidence of spent tissues or crusty cum-stained socks, and it certainly wasn't ending up in his panties...\n\nAs June leaned her back on her son's door, the fingers of one hand dancing across her engorged clitoris, she resolved that as his mother she'd find a way to figure this out... For his own good... She could ask him, but what if that made him feel self-conscious? No, she had a better idea, but that would have to wait for next Saturday...\n\nWhen Saturday finally arrived, June was ready. Almost like clockwork Stevie made some silly excuse and headed for his room. Soon, a rhythmic hip-hop beat was coming from his room, and she knew he was at it.\n\nJune calmly walked into the laundry room scooping up the basket of clean clothes, a fresh stack of his panties neatly placed on top. Making her way back to the hall she gently set the basket down and waited, enjoying the sound of her son satisfying himself in his room. She had no idea why that pleased her so much. Maybe because his cock reminded her of her late husbands -- and that had been such fun for her to play with!\n\nAs his tempo picked up and he neared his climax, she hefted the laundry basket back up balancing it on her hip, and got ready. Finally, she heard him moan in triumph, doubtlessly ejaculating. She counted to three silently, then opened the door and barged right in...\n\n\"Laundry service!\" she announced as she strode purposefully into his room. She wasn't two steps in before she stopped dead in her tracks.\n\nAs expected, Stevie was on his bed, his legs splayed, wearing nothing but a sexy black lace thong with cute little pink bows. His cock and balls were on display pulled out from the side, but his hand wasn't on his glistening cock, it was up at his mouth and he was busy licking it clean!\n\n\"Oh! Sorry, sweetie! I didn't realize you were... uh... busy...\" her voice trailed off, the words she'd planned to use stuck in her mouth as she struggled to process what she was seeing.\n\n\"Mom! Boundaries?\" Steve yelled.\n\n\"Uhhhh... Of course! Silly of me.\" June stammered, unable to take her gaze off his impressive cock. \"Go ahead, dear. You can go back to doing whatever you lick... er... like I mean. I'll just put these over here for you...\" she said as she backed towards his dresser. She could have turned to head that way, but she found herself transfixed and unable to tear her gaze from him.\n\nTaking the whole scene in she realized her son was now completely shaved from the waist down as well. 'So that's why my razors have been getting dull so quickly...' she realized.\n\n\"Go ahead, sweetie...\" June continued as she slowly shuffled back. \"Just keep doing whatever it was you were doing when I interrupted... Pretend I'm not even here!\"\n\nSteve had stopped licking his fingers, but it was clear what he'd been up to. There were streaks of cum across his face where he must have gotten it. Desperately, June forced her gaze away from his face only to find herself staring at his glistening cock again.\n\n\"Mom! A little privacy please?\" Steve demanded.\n\n\"Oh, yes! Of course!\" she said as she spun around, her short skirt flaring up as she did. Without a thought she bent over to place the basket on the floor and retrieve his laundry from it -- unconsciously presenting him with a spectacular view of her ass as her skirt rode up to reveal the peach thong clinging to her moist sex.\n\nJune was so flustered it took her a little while to get all the laundry into her arms so she could stand up and place it where it belonged. Once done she turned back around facing him, her eyes once again locking onto his magnificent cock.\n\nStevie's fist was back around his cock and an almost painful expression was on his face. He was stroking himself again!\n\n\"I think you forgot something...\" he said, his eyes just slits.\n\n\"What's that, dear?\" June replied, still staring at her son's cock as if she was addressing it and not him.\n\n\"The laundry basket?\" Steve asked.\n\n\"Oh, yes! Of course!\" June said -- the only words reliably able to make it through her brain.\n\nJune spun about again to similar effect, bending over to pick up the basket, finally realizing what she was doing as she did it.\n\n\"This basket?\" she asked breathlessly as she bent forward at the waist again, placing her hands on the basket for support. June blushed at her brazen display. She could feel the warmth in her face, knowing full well what she was doing.\n\n\"Is there another one?\" Stevie asked as his stroking became louder. They both knew what they were doing now.\n\nIn her heart, June knew she deserved this. She'd ogled his body and now he was returning the favor.\n\n'Why is this so wickedly delicious?' she thought, filled with an intense mix of shame and lust.\n\n\"I don't think so...\" she said, holding her pose for him. She could feel his eyes upon her, making a shiver run down her spine. How long could she keep this up?\n\n\"Oh look! I think there's some lint on your carpet... I'll just get that for you...\" she said, buying them both some more time.\n\nJune didn't even bother feigning to picking up carpet lint, she just flexed her leg muscles clenching her ass for him. The unmistakable sounds of male masturbation filled the room; Stevie's tempo picking up quickly. She didn't need to look to know his cock was fully hard and standing at attention.\n\n'Oh god, June! What are you doing' she thought shamefully. 'You're literally displaying yourself for his masturbatory pleasure... and your pussy is on fire? What's wrong with you!'\n\nJune could feel the heat of his gaze on her panty-clad ass. She knew a large wet spot was forming on the crotch of her panties; her pussy betraying its arousal for him to see.\n\nJune's legs weren't going to be able to take much more, and judging from the sound neither could Stevie's cock. He was wanking at full speed now, the rhythmic slapping sound filling the room with the blatant confirmation of what her precious boy was doing.\n\n'I'm going to have to up my yoga,' June thought as her legs began trembling; she knew they wouldn't be able to take this pose for much longer.\n\nReaching up she placed her hands on her hips to pin her skirt up out of the way. Once her hands were in place she slowly stood, releasing the tension that had been building in her legs while keeping her ass in full view for him.\n\n\"You know the deal mister, if you make a mess -- you clean it up!\" she announced firmly, her panty-clad backside still toward him. Standing now, she could see his stunned expression in the mirror above his dresser.\n\nWith that, Steve let out a deep moan as his cock exploded in his second orgasm of the evening -- his eyes locked on his mother's ass as the memory of her bent over filled his lust-addled brain.\n\nHis orgasm finished, June slowly turned about -- careful to fix her gaze on Stevie's face rather than his beautiful glistening cock.\n\n\"I want there to be no cum stains anywhere in here. You're to lick up every drop!\" She knew exactly why Stevie's panties were always so clean, and she was going to make sure he kept them that way from now on.\n\nJune stood there patiently waiting until Stevie once again lifted a cum covered hand to his lips, dutifully licking up \"his mess\" under her watchful gaze. The look on his face, priceless.\n\n'He's been cleaning them all right' she thought. 'Well, if that's his thing, I'll let him know it's perfectly OK.'\n\n\"Every drop, mister! Don't miss any!\" June said with a cheerful smile and a gleam in her eye.\n\nOnce he was done and blushing a bright crimson in his cheeks, June announced \"That's very good! Now I want you to be sure to do this every time, OK? Not just when I'm here to watch you.\"\n\nWith that she departed, making a beeline for her room to give Bruce a workout.\n\nTo Be Continued...\n\nCumming Soon:\n\nChapter 3: Chastity Consequences, sometimes punishment is its own reward\n\n============\n\nEnd Note: Thanks for reading my story! I hope you've enjoyed it. If you've gotten this far and liked it, please vote! If you'd like to leave comments, those are always welcome too. I'd love to hear what you liked about it, but also where you think perhaps it could be better.\n\nThanks,\n\nPW"
    ],
    "authorname": "Panty Wrangler",
    "tags": [
        "panties",
        "feminization",
        "cum eating",
        "18-year-old",
        "cum",
        "milf",
        "mother",
        "masturbate",
        "son",
        "big cock"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/mommys-little-knob-gobbler-ch-02"
}