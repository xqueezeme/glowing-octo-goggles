{
    "title": "Starlight Gleaming Ch. 21 Pt. 01",
    "pages": [
        "This partial chapter takes place the morning immediately following Chapter 21 part 1.\n\nThanks to TerrytheTraveler and StoshB for lending a hand with catching errors. Any gaffs, typos, dropped words, usage errors, omissions, commissions, permissions, WTFs and OMGs are totally my fault. Enjoy!\n\nIzel Gets Married\n\n* * * * *\n\nPart 1 -- Decisions\n\n* * * * *\n\nWhen my alarm went off, I quietly eased out of bed. Fortunately, I wasn't entangled with either Janetta or Calia. As usual, Janetta was on her belly, her arms around her pillow. Zinja lay close to her, totally relaxed.\n\nChecking behind me, I saw Izel curled up in Calia's embrace, and by the look on the noblewoman's face, she was resting peacefully. Without the agitation and anger she had when she arrived, the older woman looked much prettier. Calia herself appeared asleep, yet somehow also alert, so I wondered how much real sleep she was getting.\n\nQuietly closing the door to the bathroom to cut down on the noise, I did my business, brushed my teeth, and then got into the shower. Within a few moments, I heard someone else using the toilet. Then the curtain slid open and I turned to see who had joined me. To my surprise, it was Calia. She gave my naked body an interested gaze.\n\n\"Okay, I'm impressed. She seemed pretty determined to keep you close to her. Were you that way all night?\"\n\n\"Pretty much,\" she said, then yawned. \"I think I will need a nap later this morning.\" Sidling close, she leaned up and we briefly kissed.\n\n\"How did you manage to get loose?\"\n\n\"Happy thoughts. But it probably won't last too much longer. I did what I could to help ease her mind, but she's really stressed about her brother and your answer. Her dreams were most unpleasant, and I had to keep redirecting her and giving her reasons to focus on the positive.\" She yawned again.\n\n\"You were able to read her thoughts? That can't have made for very restful sleep.\"\n\n\"It... was busy, but necessary. She was nearing exhaustion. But right now I don't want to talk about her. I want to enjoy some personal private time with you. What do you say? I scrub your back and you do mine?\" Her hands went around my waist, sighing as she leaned into the crook of my arm.\n\nI was nearly done, but a good back-scrubbing sounded good. Then I saw how tired she was. This reminded me of Sowitwee's concern that she was overdoing it, and her own comment that she was going to need a nap later.\n\n\"You know what? A good backwash sounds like a very good deal. It never ceases to amaze me how many good ideas you have. I'll do you first.\"\n\nGiving me an impish grin back, she grabbed the soap and a loofah. \"You have good ideas, too. However, a majority of your ideas entail penetrating nubile female flesh and rocking their world. And yet I can find nothing wrong with that.\"\n\nI snorted. \"It's because I have a magic poke stick and you're a nubile young woman.\"\n\nShe burst out laughing. \"True enough. I do love it when you use your poke stick, as your captain calls it. Ixma is definitely nubile. I'd say I'm more full-figured.\"\n\nWhen I reached for the items in her hands, she looked surprised, but then readily moved near the showerhead and I got to work. After scrubbing and massaging her back, her face lit up when I picked up the shampoo. Working the suds into her hair, her eyes closed and her mouth opened slightly as she moaned in pleasure. Like Janetta and Zinja, Calia liked having me wash her hair. Smiling to myself, I suspected Ixma and Cholan would love the experience as well. Maybe like something we could do after making love.\n\n\"I'm sure they'd love it,\" she murmured.\n\nI chuckled. \"You aren't supposed to be listening in on my thoughts, young lady.\"\n\n\"But it had such a tempting color, I couldn't help it.\"\n\n\"Thoughts have color?\"\n\n\"Sort of? Yours was a little lusty, but mostly pinks denoting love and affection. I couldn't help myself. It was very nice to experience. Of course, I like hearing your thoughts. You're considerate and intelligent and I'm interested in what you're thinking, and I love you. It feels good knowing you are close by in case I need a smile or a hug from you. Even when I'm sleeping in the room across the hall, I can sense you in the background. It's comforting to me.\"\n\nI had her turn to rinse.\n\nShe bit her lower lip. \"I don't mean to pry. I just want to make sure you're doing all right.\"\n\n\"I'm not upset, Calia. I trust you.\"\n\nHer smile was radiant. Then it vanished as she frowned with concern. \"Cholan had a migraine again last night? That's not good. I'll look into it. She's nearly done with her thyroid treatments, and like Zinja and your captain, she's in her menses. Cholan has had headaches before, but not so severe as when you saw her. It's possible that now that her thyroid is working as it should, her estrogen levels are now out of whack.\"\n\n\"Do you think she'd like me to massage her lower back, too?\"\n\nShe lifted her hair and rinsed again. \"I'm sure she would love that, but best ask first. Both menses and migraines can sometimes be sensitive to touch because their nerves are already overwhelmed. However, even if she's feeling miserable, you spending some time with her would do much to brighten her spirits. She's still grieving for her parents, mourning the fact that they can never reconcile now. Even just being able to sit near you when she's feeling sad helps her cope. Cholan really is a sweetie at heart, and I cannot believe how badly they treated her. It's a miracle she's so well balanced.\"\n\n\"I can think of another woman who's also remarkable for the same reason. Kind, generous, loving, and attentive. You might know her.\"\n\n\"Yes, thank you, but don't change the subject. I do what I can when I can sleep with Cholan, but she's your woman and you are her man. It's you she needs the attention from. When she's wrapped up in your big, strong arms, she feels safe. In the meantime, I'll see what can be done about her headaches. Hopefully, some dietary changes will work.\"\n\n\"You think that can help?\"\n\n\"I do. She has another genetic treatment due at the end of next week. I'll see what we can do about requesting a hormone panel done. I'm not a medical professional, though, and I might not get anywhere. Did you know the Imperial Medical University at Cuzco is looking into matching regional dietary patterns to DNA profiles? It's a fact that both genetic heritage and nutrition play important roles in health. They have a major research project going, looking to see if a correlation can be found not just between diseases and DNA but also to see if and how both DNA and diet may play a role in disease prevalence. It's fascinating stuff.\"\n\nPicking up the loofah and soap, she turned away, lathering up her arms.\n\nI stepped close, sliding my arms inside hers. Taking the soap, I lazily lathered up my hands. Glancing sideways at me, she then tracked my hands as they rolled the bar, building up a lather. When a soapy hand reached up to wash her breasts, she bit her lower lip. Setting the bar on the dish, I began kneading her mounds.\n\nCalia leaned back against me, sighing. \"Oh, gods.\"\n\nSoaping up again, one hand continued working on her hardening nipple while my other hand drifted down, leisurely cleaning her belly. Like re-reading a passage from a favorite novel, my fingers and palms knowingly brushed over her skin, coaxing a response from her sensitive places. Then dropped my hand on her belly and moved down even lower. Calia sighed as she shifted her legs apart, giving me access, and I lovingly caressed the hood protecting her engorging clit.\n\n\"Ranji,\" she murmured, just before her breath hitched.\n\nFeeling the exquisite sensations whenever my cock slips inside a woman are wonderful, and at times breathtaking. It's empowering to understand that my body is deep inside hers, and we're both enjoying that intimate union from two different perspectives. Me, to part her tender, yielding flesh to the deepest part of her core, and for her to accommodate my presence while I conduct my intimate exploration in a pleasurable manner for her. Sometimes passion drives us to thrust and pant and grapple as we both rush toward mind-searing, heaving release. Just as wonderful are the longer sessions, when we aren't in a hurry, savoring the fact that I'm hilt-deep inside her, touching all those secret places, and she's happy being stretched and wrapped around my hard cock, and both of us move just enough to keep the arousal pitched so that our union lasts and lasts until we can't stand it any longer.\n\nQuickies can be fun, no question. However, sometimes those really good orgasms are the reward you get for being so into making your partner squirm and buck and cry out from the pleasure, the intense throbbing release is a sudden yet welcome surprise. One of the first things Calia taught me is that making love is not something you do once, but rather must be made over and over again to refresh the emotional and physical bonds.\n\n\"I love you so much,\" she gasped. Leaning back, she whimpered as she slowly rocked her hips, rubbing her rear against my erection.\n\nI had teased awake a need within her, and now I focused on fanning that heat even higher.\n\n\"Ooh, that feels so wonderful. You're making me ache for you, Ranji. If you do much more, my love, I'm... oh, yes, I need your hard cock inside me, and... oh, gods that's good.\"\n\nI felt her belly trembling. Leaning down, I kissed along her neck, letting her feel my teeth along her sensitive skin, and she groaned. I slipped two fingers into her tender entrance where just inside I found thicker juices pooling. \"It has been a while since we've been together, hasn't it.\"\n\n\"Nine days since you last spread me, my lord, and made me experience the wonder of your love. Mmm ah!\" She moved with more urgency, pressing my shaft between her butt cheeks, savoring the feel of my hardness for her.\n\n\"That long? Really?\" Determined to make up for my neglect, I nibbled along the other side of her neck.\n\n\"Partly my choice,\" she said, then gasped. \"The others, they need you, too.\"\n\nMaking slow, large circular motions at the top of her mound made her breath catch, then her breathing deepened. Calia pulled my other hand close as if trying to wrap my body around her and surround herself with my presence.\n\n\"Light of my day. S-star of... my night. Oh. Oh, yes! I have missed... hmm... missed seeing the desire in your eyes... ah! That hungry look you get... when you're ready to push into me. Filling me with your undeniable presence. Feeling... feeling your sure and knowing hands... You're so hot and so hard, Ranji.\"\n\nLooking back over her shoulder at me, I leaned down and we kissed with growing urgency. \"I have a lot of girl-come saved up just for you. All of it, ohhh... ready to coat your hard shaft and balls with my love.\"\n\nI switched breasts, and the other hand drifted south for its own turn between her legs.\n\nCalia sucked air as she widened her stance. \"Yes, Ranji! Oh, my sweet love, I need you! Please, take me!\"\n\n\"Oh, sweet Calia, you're really wet, aren't you,\" I murmured into her ear.\n\n\"I want you so much. The emptiness between my legs, it aches to be filled by you. Please?\"\n\nMy own control was slipping away, urging me to impale Calia with my hard shaft. And once embedded within her tender flesh, I wanted to spear deep into her heat and ravage her slick, tight center, hammering my cock into her core until we exploded in heart-pounding bliss together. Fast or slow, I knew Calia would appreciate either approach. For both of us, it was much about the penetration as it was about seeking mutual release.\n\n\"Grab the wall, Calia.\"\n\nLeaning forward, she braced her hands on the shower wall while arching her back, tilting up her rear to reveal her dark, puffy lips and the entrance to her pink tunnel. Glancing over her shoulder, her face was full of urgent need.\n\nWith one hand firmly holding her still, I ran my swollen crown along her slick groove, coating my tip, making her moan with anticipation. Lined up, I grabbed her hips and pressed firmly into her slick, yielding heat. Her head dropped, sucking air. Three hard strokes, each thrust claiming more territory within her exquisite interior. With the fourth stroke, I was fully buried within her snug sheath, savoring the feel of her hot, wet lips pressed against my balls.\n\n\"By the gods, I love sliding inside you!\"\n\n\"Oh, goddess,\" she gasped, shivering. \"You're so hard and so deep! I feel so full and it's so heavenly!\"\n\nA moment for both of us to adjust to our union. As I felt the urge to pound into her core grow, I held her hips firmly, taking in the trembling of her eager body before me. As my tip caressed the gateway to her womb, she gasped, clenching around my length.\n\nSlowly at first, I began slowly thrusting into her. Soon, the pace sped up. Thrusting harder. Faster. Firmer. I buried myself inside her again and again, my hands setting the pace, pulling her back onto my hips, flattening her rear while my balls slapped against her tender vulva. Each thrust opening her pussy to accommodate my demanding presence. And she met each thrust with her own. Pushing off and slamming back. Again, and again.\n\nCalia's pants and appreciative cries were the sweetest music to my ears. Each drive is a goal to push as deep into her rippling sheath as I could reach, and each time her body eagerly engulfed me within her own, swallowing me down to my root.\n\nRelishing the heated caress of her silken core, I grunted at the pleasure of our connection. Even over the sound of the shower, I heard as well as felt her stretched, squelching pussy-lips swallowing me from crown to balls.\n\n\"Harder, Ranji! Harder!\" she cried out.\n\nBucking harder into her center, her pussy began to tighten, and I felt my own release rapidly building.\n\nThen I remembered her request that I spend elsewhere until I was sure about her.\n\nAt that moment, she filled my senses. I loved Calia, and I realized then how dearly. I wanted nothing more than to plunge my hard cock deep into her willing pussy. Hold her against me and grip her close while fully hilted inside her. I needed to push deep into her center while emptying every wriggling drop I had right at the gateway to her womb. Determined even, to look her in the eyes while I coated her insides with my sperm.\n\nYou want to look me in the eyes...?\n\nPulling out, I spun her around. She gasped at the sudden emptiness. Pushing her up against the tile wall, I pressed between her legs. Using my hand, I found her gaping tunnel and shoved hard into her tight sheath. She gasped at the renewed invasion. Another cry as I bucked harder, going for more depth. Using both hands to grab her cheeks and lift, I shifted left and right and back again as I tried to go even deeper still.\n\nPlundering her treasure while her legs wrapped around me, I heaved and thrust into her center. As her fingers dug into my back, I paused a moment when we were face to face. An ardent, rough kiss, and then I pulled back, only to plunge again into her depths. A wordless cry that deepened into a groan as she tried to rub her clit against me and then found success.\n\nOh, yes! Just like... so very... very good! Oh, by the gods. Ranji. Ranji! Ah!\n\nRapid thrusts met by flesh eager to envelop everything offered. Breathes short and hearts pounding, our hips worked in a frantic yet perfect, synchronized union, and I rapidly ascended toward release.\n\nHer eyes closed, heaving for air. Oh, my love!\n\n\"Gonna fill you!\" I grunted. My balls tightened, nearing the precipice, and I willfully careened over the edge.\n\n\"You what?\" Her eyes snapped open. Stared at me, her eyes wide.\n\nMy cock swelled, and I shoved hard up into her, pushing and grinding to get as deep as I could, spraying rope after rope of my semen into her depths.\n\n\"Oh, gods! Ranji!\"\n\n\"I love you, Calia!\" I grunted. \"Take it! Take it all!\"\n\nWaves of pleasure burst from my balls as the pulses fired into her core, flooding her channel. As I ground against her, her eyes closed and her pussy spasmed around me, clenching and releasing, clenching and releasing, her hips rolling against mine.\n\nAnd suddenly new sensations flooded my being. As my balls twitched and my cock throbbed and sprayed my seed, I felt a growing heat just beyond my firing tip, where the semen pooled, surrounded by convulsing wet flesh. As more semen collected, the heat spreading outward, tension spiked and then exploded, sending more waves of bliss blasting outward. All around this hot bar ensconced deep within, muscles undulated, gripping and releasing, gripping and releasing as ecstasy vibrated, and the intense brushing of her cervix beneath my crown as it moved and dipped into the semen.\n\nUnion, and connection, and almost a sense of one-ness.\n\nEach pulse of my ejaculation was met with a matching explosion just beyond my cock. As I felt the urge to press deep while firing into her core, I also felt her joy and satisfaction of receiving my seed spreading throughout Calia's body, accompanied by the joy and satisfaction that she had pleased me.\n\nI nearly dropped her, it was that intense.\n\nHoly gods, that was incredible! Is that really what she feels when I'm inside her?\n\nThe physical link faded -- it had only lasted for a few seconds -- but the aftermath was impressive. What remained was a profound and pervasive feeling of love between this woman and me. I didn't just see it in her eyes. I had actually felt her emotions for me. It had been intense and warm and passionate and welcoming. I felt her responding to my love for her.\n\nIt also strengthened my resolve.\n\nOh, my dearest, sweetest love, that was amazing. I love you so much!\n\nThen she giggled. I see you got a glimpse from my side. Yes, that's a bit of what it feels like when you come inside me.\n\nHer brown eyes opened, and I saw love and wonder looking back at me. Ranji, you came inside me! Does this mean you have finally made up your mind about us?\n\nPressing my forehead to hers, I kissed her slow and gentle.\n\n\"Your abilities... it was very much of a surprise. And yes, I have made up my mind. Calia, what you're doing for Yalcamara and Stimmi is a wonderful and generous act.\" I brushed my lips lovingly across her cheek, up across her forehead, and then down the other side. \"I look forward to seeing your belly swell with new life as you honor our friends. Once their child is born, I want -- no, I need the rest of your babies to be ours. Yours and mine.\"\n\n\"You do?\" Joy filled her face, and she peppered my face with kisses. \"Oh, my sweet, sweet love. Yes! Yes, and yes! As many as you want, Ranji! To love you, take care of you, and have your children is what I have wanted most for ever so long!\"\n\n\"You need to be free so our children are freeborn.\"\n\nShe sniffed, nodding. \"Yes, my lord. I will agree to you setting me free. It's important that our children be freeborn. Perhaps then you will finally know that I stay by your side because there is nowhere else for me but with you. I will proudly bear your children because I love you and... okay, I'll admit it. I also want to see what kind of babies you and I can make together. I want to love them and raise them with you. I bet they will be strong, virile, intelligent, caring, and honorable -- just like their father.\"\n\nMy cock decided it was done. It rapidly shrank until it slipped out.\n\nShe dropped her legs and stood.\n\nI drew her into my arms and we kissed again, slow and passionate. We were old lovers, but in some ways, there was now a newness between us. Maybe it was the deliberate decision that she and I planned to have children together. Or, more accurately, it was me finally coming around to what she'd already decided years ago.",
        "Rather than being alarmed at her growing powers, I was comforted by them and by her.\n\nWe grinned at each other as we cleaned our groins and rinsed. She turned off the water as I stepped out.\n\nShe suddenly pouted. \"Oh, shoot! I was going to wash your back. You distracted me with your winsome ways!\"\n\n\"It's okay, Calia,\" I said, chuckling, handing her a towel for her hair and another one to dry with. \"You take care of all of us really well. I liked giving you some personal attention. Besides, if I distracted you that much, I must have been doing something right.\"\n\nShe gave me a serious look. \"Remind me to thank the woman who taught you how to make love because she did an excellent job.\" Then she snapped her fingers. \"Oh, wait! That was me!\"\n\nWe both laughed as I took a towel for myself.\n\n* * * * *\n\nPart 2 -- Negotiations\n\n* * * * *\n\nIzel stood naked in the doorway, watching us exit the shower. Her long dark hair hung loosely and slightly tangled, bereft of the fancy ribbons, precious stones, and carved beads that had adorned her intricate hair styling the day before.\n\nCalia and I stood naked as we dried ourselves.\n\nI gave Izel a short nod by way of greeting.\n\nOnce I had my back and legs dry, I slowly turned around. As her charms were already on display, it seemed only fair that she get a look to see what I had to offer her in return. So after I hung up the towel to dry, I paused to allow her a good look.\n\nBy her reaction -- she licked her lower lip and her eyes dilated -- she apparently liked what she saw.\n\nThis older woman was a stranger to me, and after the bluster of her arrival followed by the chaos of the nearly successful assassination, I still knew next to nothing about her -- other than the fact that she wanted to marry me to avoid being forced into a marriage she objected to. In return, she had offered her loyalty and access to unspecified wealth and power.\n\nThe latter two benefits were what Janetta wanted. Calia had not explained her reasons, but her instant agreement that I should accept pretty much sealed the deal for me.\n\nI should have spent at least part of the previous night researching what I could about the woman. However, I'd been exhausted by the time I finally laid my head on my pillow. The round trip to Sugarland, the assassination attempt, Nariya having her baby, grabbing some dinner, squeezing in some quality time with Ixma and my daughters, and then giving Janetta and Zinja massages to help ease their discomfort. I could have taken a dozen stim-tabs and I don't think I could have kept my eyes open a second longer.\n\nWell, to be honest, I'd had nothing to do with the baby. That was totally Wit and Nariya's doing. I might have been there when he was made, but that didn't count because I was busy at the time myself.\n\nEven though it had added to the overall night's chaos, I couldn't get over how cute little Daydo was, with his squinting eyes, little black strands of hair on his mostly bald head, those little puffy cheeks, and his super tiny fingers. Oh, my gosh, they were so tiny! I knew humans are wired to see those droopy cheeks and melt inside. I had to admit, those cheeks worked pretty damn well.\n\nWit and Nariya had had a rough go of things. It was nice to see them both so happy. No, happy was too sedate. Ecstatic was closer to the mark, with a healthy dose of pride and wonder and love all thrown in together.\n\nAs for Izel, even though I planned to marry her, I considered doing a background check once I was at work. If for nothing else, getting a list of the players because of her becoming a part of this family would be helpful.\n\nIzel's eyes roved over me.\n\nI was fit enough, but my muscles never showed clearly defined forms like some men are naturally able to do.\n\nThe woman was a beauty, no question. She had smooth skin and her face was both symmetrical and feminine. She was Zinja's age or maybe even a tad older, yet her breasts rode high, her rear was smooth and firm, legs were toned, and her skin was tight and smooth. Of all the women in my household, only Janetta was more beautiful.\n\nBut those are all physical details. Zinja, Ixma, Cholan, and Calia were each beautiful in their own way. Maybe because I was a man, I found that women had an intrinsic loveliness by simply being women. With the exception of Janetta, Izel might be more beautiful and more refined than my other lovers, but the joy in sharing the union of our bodies together was only part of it; it was their hearts and their personalities that made it love and not mere affection or simple lust. I knew I wanted to grow old with each of them by my side. Indeed, I couldn't imagine any of them not being in my life. Whatever happened, I would protect them, love them, and do my level best to make each of them happy.\n\nIt had only been little more than a year, but we had a lot of shared history together. And kids, too, with more being planned. Izel, on the other hand, while beautiful, was an unknown. She might be charming and funny and a good woman yet we might not be able to stand living together. What then?\n\nSomething must have flashed across my face because Izel suddenly looked unsure.\n\nPushing past memories aside, I walked over to the sink. After a quick combing of my short, wet hair, I lathered up and began to shave.\n\nAs if finally becoming aware of herself, Izel stepped fully into the room, turning to Calia. \"You're his Personal Servant, aren't you. I remember the attack yesterday. It was only yesterday, wasn't it? Good. You attended my wound, and then you caught me as I fell.\"\n\nFrom the mirror, I saw Calia put up her towel on the rack to dry. \"Yes, to all your questions.\"\n\nIzel briefly examined the mostly absorbed Nu-skin patch on her lower forearm. \"Since we are here and not at a clinic or the hospital, you were obviously able to handle what happened. First, I wish to express my sincere thanks for saving my life.\n\n\"However, some things trouble me. I've been injured before, and this wound feels different. My arm was opened about five or six inches. It should ache from the laceration, yet it feels perfectly fine. In fact, there's no pain at all. You will tell me what happened after I passed out, and I demand that you leave nothing out.\"\n\nCalia paused while she dried her hair, giving me a glance. Then she faced Izel. \"Isn't it enough that you are alive and hale? You were taken to the master suite as an honored guest, Lady Izel. You shared my master's bed, where you slept through the night, safe and undisturbed while you recovered from your injury.\"\n\nIzel just stared at her.\n\nAs Calia hung up the second towel, I reached over to the spare brush she kept stored next to my things in the bathroom, and as she approached me, I handed it to her.\n\nShe smiled briefly at me, then faced Izel again. \"Very well. After you were cut, the apostate priestess was stunned and subdued, then taken outside. I'm sure you were unaware that she carried a bomb inside her body. The stun beam triggered a timer on the bomb. Once the guards tossed her onto the front lawn, she blew up. Trooper Cawbos described it as 'one bloody, fucking, gods-awful mess.' Had that woman blown up inside the house, serious injuries would likely have been the result, not to mention the huge mess to clean up afterward.\"\n\nI blinked at that and nicked myself. It wasn't bad, so I ignored it and resumed shaving. Calia's words made me think over my own recollection. I'd been at the edge of the dining area and Cawbos had stood beside the cruiser parked by the street. Cawbos had spoken loudly, but at that distance, I'd barely heard him. I had thought Calia fully absorbed with healing Izel. More, the wall of the foyer should have deflected the sounds, further limiting the ability of anyone in the kitchen to hear the trooper's words.\n\nMaybe the healing process made her more aware of what was going on around her?\n\nCalia sectioned off some hair and began brushing out the long strands. \"The knife that the priestess used on you was coated with nauyaca venom. I see you are aware of how deadly that is. Since you came here seeking my lord's protection, I assumed you wanted to live. Terra and the captain applied a tourniquet, which kept the poison confined to your lower arm, making it easier for me. I was able to neutralize the poison, but the effort left me exhausted. I barely remember my lord carrying me upstairs. The captain herself carried you, and we were placed in bed side by side. You crawled into my arms, and there you spent the night, safe and sound.\"\n\nBased on what Ixma said, Calia had been easing Nariya's pain throughout the day. It explained why my friend had been worn out by the healing. However, her abilities also seemed to be growing. Maybe, like muscles, they grew stronger with use?\n\nCalia set the brush down in its usual place, her hand lightly caressing my shoulder before moving to face the noblewoman's questioning. \"You are a beautiful woman, Lady Izel. However, when you arrived, you were afraid for your life, and even with your beauty, your exhaustion was apparent to me. A good night's sleep has not only helped you heal but has also erased some of the worry lines from your face.\"\n\nShe briefly scrutinized Izel's face, then nodded in approval. \"If I may be so bold, I would recommend more rest as you are able. A few days of uninterrupted, restful sleep will go far in making you feel good as new.\"\n\nIzel took a breath, then narrowed her gaze. \"I will take your advice into consideration. I guess it was fortunate that you have nauyaca anti-venom here. But you don't, do you. Why would you? This isn't even a part of the world where those serpents normally inhabit. I'm also curious as to how you knew it was poisoned and what kind it was.\"\n\nCalia replied, \"I knew about the poison the same way I knew about her intention to kill you. The same way that I knew you the instant I saw you that you were a good woman in serious trouble and needed our help and my lord's protection. As for healing, I am fortunate to have some small skills. Your own desire to live played a large part in the speed of your recovery.\"\n\nI had paused and thus managed to avoid a second nick.\n\nThe noblewoman stared at Calia for several long seconds, then dropped her gaze. \"I am well acquainted with nauyaca vipers and their venom. By your modesty, you apparently prefer anonymity rather than fame, though I daresay if you continue to do more such acts of healing, your gift will not remain a secret much longer. My logical mind demands proof for all your claims, but from what I see in your eyes, I believe everything you've told me is the simple truth. I will respect your wishes. The fact remains I would have died without your help and both of us know it. You serve Lord Kandikan, but you have earned my personal gratitude. If you wish a boon, I pledge to honor any reasonable request as I am able. I'm currently at a disadvantage, but I expect -- or rather hope that will turn around soon.\"\n\nGiving her a friendly smile, Calia added, \"Terra and the captain also helped render aid to you, and did so without thought of reward. Still, if you are truly set on granting me a boon, then all I ask for is your friendship, Lady Izel. In return, I offer you mine. I am but a Personal Servant, but my master values me and my counsel. You came seeking protection by joining my lord's household. Being friends would be a good thing for us both. Besides, I think you are in need of good friends. Especially right now.\"\n\nStartled, Izel glanced at me, then nodded thoughtfully. \"Indeed, you are bold. And intelligent as well.\"\n\nCalia gave a partial bow. \"You're too kind, Lady Izel.\"\n\nIzel snorted. \"Knowing a skilled healer is always useful, and being friends with one would seem to be even more prudent, especially considering last night's events. Your ability to read others, too, intrigues me greatly. You may address me in private by my first name. And you're right. I do have a need for good friends. However, what I need most is a strong husband to protect me from my enemies, foremost among them my own brother.\"\n\nCalia smiled kindly. \"I am honored and look forward to you and I becoming friends, Izel. Welcome to House Kandikan.\"\n\nIzel shook her head. \"So much was happening when I arrived... I recall now. Your name's Calia. Funny how it just came to me. I find myself in the same state as when I crossed the threshold. You said I slept with you last night?\"\n\n\"I did say, and you did,\" Calia answered carefully.\n\nI rinsed off the razor, adding, \"Concerned for your recovery, we put you into our bed. Because Calia was worn out, I laid her down beside you. That way, if either of you had needed assistance during the night, I was right there to help. You scooted right into her arms, embracing her in your sleep. When I checked this morning, you were still there. You seemed determined to keep her close.\"\n\nMore surprise crossed Izel's face. \"I see. I saw the Air Service captain and the other woman still in bed asleep. Calia? Do you normally sleep in the same bed as your lord?\"\n\nCalia gave me a wistful smile before answering. \"Whenever and as often I can. However, my lord was away for many months and has only returned this spring. During his absence, Ixma and I took to sleeping with his children to reassure them and to ease their night terrors, and usually sleep with them. However, if I'm needed, I do provide comfort and sleep in other beds. Last night, you needed me more than they did.\"\n\n\"Remarkable,\" Izel commented. \"I must admit, that was the most restful sleep I've had in weeks.\"\n\nI turned around, wiping my face clean with the wet washcloth. \"I'm pleased you slept well, and are feeling better this morning.\"\n\n\"I am quite impressed by the hospitality I've received thus far, Lord Kandikan. Please don't take this amiss, but you appear quite youthful. I'm told you are just past twenty, yet you are already a full commander. I also notice your daughters are remarkably well grown.\"\n\nI leaned my rear against the counter. \"Your information is good. I turned twenty-three a few months ago. Sisi is six and Mina is four. Do you find that children grow incredibly fast?\"\n\n\"Indeed!\" she exclaimed, refusing to meet my eyes.\n\nI knew what she thought, that I had must have begun breeding Zinja as soon as I was able to get my pubescent cock hard, and once that was done, I next bred Ixma. Well, too many people like to think the worst. I was tired of explaining my daughters were adopted, and it wasn't really anyone else's business. I'd come to realize that each time I piped up and said they were adopted, I verbally implied that Sisi and Mina weren't really mine because I emphasized their special circumstances. Anyone who mattered already knew the situation. Everyone else could take a flying leap. I didn't care who sired them. What mattered was those girls were my kids. Mine. Full stop.\n\nJanetta entered the room, moving quickly to the toilet. Lifting the lid, she pushed down her shorts, sat with a sigh and let loose. I noticed the red-stained pad lying in the gusset.\n\nWithout a word, Calia reached behind me into a cabinet, quickly extracted some items, and moved to Janetta. As Janetta lifted her head to speak, Calia set the desired items on the nearby shelf within her reach.\n\n\"Thanks,\" Janetta mumbled.\n\n\"Happy to help, Captain.\" Calia moved to stand near me and started braiding her hair.\n\nIzel took that in before speaking again. \"Lord Kandikan, have you thought about my marriage request?\"\n\nThis Nahua noblewoman had steady confidence, and I suspected that when left to her own devices, she was both strong and determined enough to see that things were done to her personal satisfaction. Maybe there was some truth to the reputation of Nahua women having more fire in their hearts than other women. However, even if she was, she was also conditioned by her upbringing and culture to submit to the wishes of the men around her. Hence her current predicament.\n\nWhile I had decided to accept the advice from Janetta and Calia, there were things I needed to make clear to Izel before we proceeded any further.\n\n\"Yes, Izel, I've thought about it. To be honest, I was initially opposed to--\"\n\n\"Please, Lord!\" she exclaimed, taking a step closer to me in her alarm. \"I beg you to reconsider! I'm desperate. Six days ago I was compelled back to my ancestral estates on a pretext of a dire family urgency requiring my presence. Immediately upon my arrival, however, I was forcibly confined to my old rooms at the main estate, my movements curtailed, and even outside communication forbidden to me. My brother, Kirfan, informed me that a new husband had been secured, and in a matter of days, I was to be remarried. I was a widow, and by custom, I'm allowed a year to grieve before even considering remarriage. He informed me I was to remain under his custody until the marriage ceremony was completed. Not only was I not even consulted, but I was also appalled by the man my brother picked. This man has a reputation for being cruel to his women servants who are compelled to his bed. Worse, there are rumors he's tied to the criminal caste. Kirfan laughed at my protests, telling me I should be grateful due to the scandalous circumstances of my becoming a widow! When I slapped him, he stopped laughing and I was... punished.\"\n\nHer eyes turned bitter and desperate. \"I never loved the general, but I did my duty as his wife, and I remained faithful even as he was not. After more than twenty years of loyalty, I should have been allowed to live the rest of my life as I wished. Fortunately, I bribed a servant and managed to get an outside link. Those I managed to reach were unwilling to interfere in what they said was a family matter and none of their concern. The only one who spoke to me with a sympathetic ear suggested I seek you out. You are unmarried, Lord Kandikan. Please, let me become your wife!\"\n\nI frowned. \"You did not need to go to these extremes. I am a security officer in the Imperial Air Service. I protect people all the time without expectation of reward from those we aid. I can and will protect you without the necessity of marriage, Lady Izel.\"\n\n\"You do not know my brother,\" she replied. \"I suspect part of his deal was an infusion of cash in return for obtaining me in marriage -- one I had no say in and never should have been arranged. Kirfan seems to have a red finger when it comes to making investments. As long as I remain unmarried, I believe my brother will seek to abduct me and enforce his will. I'd... rather not endure any more of his punishments again.\"\n\nCalia gave her a sympathetic look, her hand lifting, nearly reaching out.\n\nJanetta finished adjusting her shorts, then flushed the toilet. She walked over to the open sink between Izel and me and washed her hands. After drying them, she turned around, leaning against the counter next to me. \"If not for your brother's actions, would you have remained at Cuzco?\"\n\nIzel lowered her eyes as she nodded. \"Yes, I would have remained. I had work that occupied my time, providing some satisfaction, and I was left largely to my own devices. If I return to Court, my brother's men will simply take me and carry me off. The one friend I have was constrained by her oaths from intervening without Imperial permission, and it was she who sent me here to you, Lord Kandikan. She told me that he is a man who gets things done.\"\n\n\"Who says these things?\" Janetta demanded.\n\n\"I'm sure you're aware of the Black Orchid, Commander of Imperial Security? She mentioned Lord Kandikan last summer.\"\n\nJanetta said, \"Explain that statement as well.\"\n\nI was curious, too.\n\nIzel nodded. \"The Empress likes to watch video dramas. The Vengeful Hand of the Emperor is one of her favorite shows. I know she and the commander met at least once in person, and the Empress was impressed with her. Rumor is they sometimes exchanged correspondence. Her Majesty said she could tell there were at least three different women playing Black Orchid in the dramas, based on their voices and mannerisms, even from a distance. The woman she met in person, however, was her favorite, and she would re-watch certain episodes, with those of her household sometimes keeping her company.",
        "\"Earlier this year, it came to the attention of Her Imperial Majesty that a senior officer at High Guard was involved in a murder attempt on the Black Orchid. She was quite angry that anyone would even consider such a base act. I was there when she contacted Lord Bantochi, the Air Marshal. I was present later, too, when she dispatched part of her personal Household Guard to arrest the man accused of the act and return him for direct examination.\"\n\nThat Voyacherno was involved in the assassination attempt was unsurprising. \"The man who was arrested. Do you know what happened to him?\"\n\nIzel frowned. \"I will share what I know with you, Lord Kandikan. However, I seriously caution you or anyone else here about sharing it with others.\"\n\nI almost laughed. She was obviously unaware of Supay's actions at High Guard as of late.\n\n\"Go on,\" Janetta encouraged. \"Tell us what happened to him.\"\n\n\"Two days after her company of household guards returned from completing their instructions, Minister Supay came to the palace and demanded an audience with the Empress. The Empress never calls him by name but instead refers to him as the Devil, and so do the rest of us. At this particular meeting, I and three others were in a nearby alcove listening in. The Empress had several of her guards beside her, and more guards waited in secret with us as we hid from the Devil's view. Even in her own suites, the Empress never allows herself to be alone with him. This time, he did not even acknowledge her status as Empress! Instead, after barging in without being properly announced, he said he knew she had an officer of the Air Service as her prisoner, and he demanded that as Minister of Imperial Security that she release the prisoner to his custody at once. The Devil's tone was entirely disrespectful to the Empress! And a man with lesser power would certainly have died for such insolence.\n\n\"By way of reply, she told him that televising the exploits of Commander Orchid had been an inspired idea, and she commended him for the invention. The dramas were popular with the common folk, and encouraged them to look to the Emperor for justice. Stopping the creation of new videos, therefore, had been a mistake. The Empress then revealed that she knew about his orders to murder all the women playing the Black Orchid.\n\n\"The Devil replied, 'Not Maretta, I didn't, and I resent your words. Maretta was loyal. Committed! The others were all traitorous, filthy whores unworthy to breathe the same air as their betters. Now, where is my cousin?' To which the Empress answered that the man he sought was nearby, in the commode, even as they spoke.\n\n\"Storming over to the bathroom, the Devil pounded on the door, demanding he come out. When no one answered, he opened the door. Then he shouted to the Empress, 'What game are you playing at? There's no one in there! Where is he?'\n\n\"The Empress stood and asked, 'Did you lift the lid, Minister?'\n\n\"He stepped into the room and then began yelling and swearing. There were loud crashes and the sounds of glass and ceramics breaking from within the chamber. The Devil destroyed many valuable items in his rage. Meanwhile, her guards drew their weapons, prepared for his return. At last, he stormed out, his face dark with anger, and he shouted at the Empress again. Can you believe it? The Empress! He shouted, 'You had no right! No right at all. Imperial Security is my concern, not yours!'\n\n\"The Empress told him coldly, 'How dare you! I am the Empress of Chimorro! I am the Emperor's Second in Command of all Imperial military forces! That man was examined under Truth Drugs by members of a military board of inquiry, found guilty of capital crimes, and paid the price. Do not ever presume to tell me what I can and cannot do, Minister!'\n\n\"The Devil snarled as he stepped toward the Empress, but her guards jumped between them, and it was then he saw the many weapons arrayed against him. Furious, the Devil stormed out of the room.\n\n\"I don't think she meant for us to hear, but before we were dismissed, she stared at the still open doors, saying, 'With the Devil loose among our people and the Black Orchid gone, it falls to an Empress to act as the Emperor's Vengeful Hand of Justice. And, by Inti, act I will.' The Guard Captain, however, cautioned her that the Minister was dangerous to antagonize and still had the Emperor's favor. She asked her mistress to be especially cautious when traveling, which she agreed to.\"\n\n\"He was inside the commode itself?\" exclaimed Calia, obviously disturbed by the notion.\n\n\"Not the whole body,\" Izel replied. \"Just the skull. It was affixed to the front of the bowl with the mouth open. Right after it was installed, the Empress insisted on personally using the commode. Afterward, she declared it made a mundane body function especially satisfying.\"\n\nAt Calia's troubled look, Izel explained, \"It serves a practical political purpose. The man tried to kill someone favored by the Empress of Chimorro, and now his skull is in her commode. The Empress may not be able to issue edicts, but for those at Court able to perceive it, the lesson is loud and clear.\"\n\nJanetta nodded in approval. \"Just after he returned to High Guard, Kandikan did the same thing, Calia. Tonca hurt you and he tortured Ixma for days. After Tonca was killed, Kandikan had his body staked out on the shore to feed the birds and crabs.\"\n\n\"He... he was an evil man. I understand the necessity of his death,\" Calia replied sadly. \"I'd just rather not focus on the end results.\"\n\nIzel, however, gave me a speculative look.\n\nJanetta raised her eyebrows at Izel. \"Your story about the Empress makes me curious. If you're so connected, why didn't you appeal to her directly for help?\"\n\n\"I'm known there, but I'm not part of her inner circle. Besides, the Empress has been in seclusion for the past three weeks, nearing the birth of her fourth child. In the last two months, in three separate incidents, food testers at the palace died from poison, resulting in increased security procedures. Compounding this, the Devil tried to pin two of the attempts on her personal guards, but the Empress has cameras everywhere to prove their whereabouts, and her guards always travel in pairs. Those accused also readily submitted to Truth Drugs under examination by the military and were proven innocent. Most of her Household Guard is either Atahualpan from Inharana or they are Quechuan, and all of them are fiercely loyal to the Empress.\"\n\nI raised my eyebrows. \"Her guards, do they by chance speak Atahualpan?\"\n\n\"They do. Why do you ask?\" Izel looked at me with interest.\n\n\"When her Household Guard traveled with us, I heard them say a phrase and I don't know what they said. It wasn't Quechuan. Now I wonder if it was Atahualpan.\"\n\n\"I speak the language passably well,\" she confirmed. \"Her personal troops use the language for security purposes. But they also use their own sign language, which they are careful to hide from outsiders. To get by a checkpoint, you need to know both the daily password and the signed phrase. Only those deemed loyal enough are entrusted to travel alone within that part of the palace where the Empress resides. All others are escorted about by her guards.\"\n\n\"I believe the phrase was, Ha! Karana so ako kahn, Prosan Chaya!\"\n\nShe smiled at me. \"Ah, yes. I am familiar with that phrase. The word is eko, not ako. It means Attend! Our lives by your will, Empress Chaya! It's a phrase with a lot of historical meaning for the Empress and her guards. If you'll permit me to explain?\"\n\nI gestured for her to proceed, curious to learn more about the Empress, and indirectly, a bit more about Izel herself.\n\nJanetta, her face stoic, folded her arms, and waited patiently.\n\n\"Nearly three centuries ago,\" Izel began, \"the newly formed Empire pushed south, going to war with the tribes living in what is now Inharana state. The Harana, Metocanni, and Atahualpans met the Imperial forces at the battle of Simat Kor Talkai or Blood River Pass. After several hours of fighting, the Harana were overrun and the Metocanni were forced to retreat, leaving the Atahualpans and their queen defending the pass itself -- cut off and surrounded. Despite this, the queen's forces were entrenched and they fought fiercely, especially her personal guard, making the Emperor of Chimorro pay in blood for every inch of ground. Many of the Emperor's finest warriors were killed, and many of his advanced armored vehicles were destroyed as well.\n\n\"The Emperor called a temporary truce, allowing both sides to retrieve their wounded. He loathed the idea of losing more of his own men and his new war vehicles, but taking the pass was critical to his war of conquest. He was also on a timetable, for snow was expected, and the Emperor wanted to be at the lower elevations when that happened. The longer the queen's army kept them there, the greater the likelihood that other tribes would rally and join the fight, and force the Emperor to abandon his southern campaign.\n\n\"In spite of the setback, the Emperor found himself admiring the fighting spirit of the queen and her warriors, especially her elite guard. They were all women and were distinguished by purple dye on their chins and necks. The Empress' Household Guards wear purple uniforms in homage to those elite warrior women. Does this story sound familiar, Captain? No? It's worth knowing.\n\n\"The Atahualpans were greatly outnumbered, so the queen asked her people, what was their will? Surrender and become another conquered tribe serving the Empire? Or fight to the end, dying a free people? Our current Empress is the fourth named after that queen's fiercest warrior, General Chaya. Mortally wounded, the general answered her queen with 'Ha! Karana so eko kahn, kier Proka!' It translates to Attend! Our lives by your will, mighty Queen! With those words, General Chaya reminded her that she was their leader, while simultaneously calling on the Atahualpan warriors to uphold their sworn duty.\"\n\nIzel paused a moment, letting the story sink in.\n\n\"The queen's warriors took up the chant, repeating it over and over until it echoed up and down the pass. After the noise died down, the Emperor realized their resolve, so he made an offer. He had queens and princesses to warm his bed, he said, but the queen of the Atahualpans and her warriors had impressed him. If she joined him, she would become his Empress and their people would enjoy a place of prominence in the Empire. Oaths were made, and she and her warriors joined forces with the Emperor. Atahualpan tradition says that on the morning after their impromptu wedding, there were bruises, scratches, and bite marks aplenty between them, as well as healthy respect. Less than a year later, she bore him a son and his heir.\"\n\nSuddenly I nodded in recognition of the participants.\n\nIzel continued her tale. \"The new Empress did not stay at home but through the years she fought at his side, skillfully commanding forces in the field, forcing tribe after tribe to join the Empire. Twelve years later, in a rather famous event, the Emperor was fighting a campaign to conquer northern Je State when he was suddenly attacked by a new army on the field. A large contingent of Atlantean forces, bent on stopping the Empire's growth, had arrived to relieve the northern Je defenders, and the Emperor soon found himself hard-pressed between two hostile armies.\n\n\"The Empress learned of her husband's dire situation. While engaged in her own battle at the time, she efficiently withdrew her forces, prevented them from chasing after by blowing two important bridges and rushed to the Emperor's defense. Within two hours, leading her advanced forces, she engaged the Atlanteans in battle. After five long and bloody hours, the rest of her command arrived and began to reinforce battle lines with heavier combatants. The fresh troops turned the tide and scattered the Atlanteans, driving them from the field. Together, they forced the northern Je defenders to surrender. I'm sure both of you warriors recognize the names of the Emperor and Empress by now.\"\n\nJanetta nodded. \"Emperor Chambaca III, and Empress Tlilibasa. The battle of Su-Jon-Ree. She used that victory to end the requirement that women warriors be chaste.\"\n\n\"You seem well versed on the subject, Izel,\" I observed. \"What exactly did you do at the Imperial Court?\"\n\n\"I read reports, looking for trends and patterns, and when asked, offered options to problems. My lord, I will show you my worth by offering up two additional bits of information that may help guide you in the future. General Chaya's body was cremated where she died, and they added her ashes to the memorial built to commemorate both the battle and the alliance. Our current Empress makes an annual pilgrimage to the site, though for security reasons, the exact date varies. The second item is that the Empress listened with great interest to the events regarding your arrival here, Commander, including the attack by the Greys, the firefight with Voyacherno's men, and your duel in the temple with Captain Tonca. The person who relayed that information is the same person who sent me to you. Captain Abeeya Tsocotchi. She spoke of you with respect, my lord, saying you were a good man. For her, that is no small thing.\"\n\nCalia raised her eyebrows. Janetta pursed her lips and took a deep breath, absorbing the news.\n\n\"You have a gift for telling a story,\" I told Izel.\n\nPleased, she gave a short bow. \"You are too kind, my lord. Stories are grand and useful in their own way. Context helps us understand our current problems better, and perhaps help us avoid repeating past mistakes. I also hope that I have provided some measure of entertainment while making you more favorably disposed to my plight.\n\n\"I find I am compelled to remind you of my current situation. Please, my lord! The general lost his duel with you. You can claim me right now! I freely offer myself to you by right of conquest. Lady Tlacotli is a noblewoman. She can witness you taking me and making me your wife.\"\n\nIzel dropped to her knees, desperation on her face. \"I'll crawl if it will help persuade you. I'll beg. I'll kiss your feet and put your heel on my head! I'll do whatever you ask of me. Marry me and I will swear before the gods to look after your interests as if they were my own. I know how to be a good and loyal wife. Please, save me, my lord!\"\n\nI watched Izel struggle to maintain her composure.\n\nJanetta, her arms folded, looked at me. \"It's the same as yesterday. It's a win-win situation, Kandikan. You protect her from her brother and she brings you access to powerful people, land, and wealth. You should do this, Kandikan.\"\n\nSighing, I pursed my lips. \"If left to my own devices, I would say no. Not that Izel doesn't deserve to be married, but rather because I already have five lovers and it bothers me that I do not do enough by any one of you. I am also concerned because I should discuss this with Cholan, Ixma, and Zinja, so that at the very least I can reassure them their situation will be unchanged. I love and trust you both. Janetta, the fact that both you and Calia want me to do this means a great deal.\"\n\nI reached down and pulled Izel to her feet and looked into her eyes. \"I want men and women to get used to the idea that both participants have a say in whom they have sex with. One day, I hope it will be illegal everywhere, regardless of station, regardless of gender, for anyone to rape another human being because both must have the right to consent.\"\n\nReaching out, I gently brushed my hand along Izel's cheek. She was startled by the gesture, but then seemed calmer. \"Tell me, Izel. Did you consider suicide before deciding to come to me?\"\n\nShocked, and then embarrassed, she looked away, her answer full of pain. \"Yes, I did. But with me in charge, there are some lands and people that are safe from my brother's depredations. If I died, they would revert to him.\"\n\n\"I'm glad you chose to live,\" I told her, cupping and turning her chin back so that her eyes again met mine. \"Changing the way people think takes time. Ideas are seeds that need nurturing until they become apparent and then become accepted as a given truth. When your friends told you your situation was a family matter, they lied to you, Izel. And, for the women who used that excuse to you, they lied to themselves as well. If you were a child that would be one thing, but even a child's call for outside help should be answered with an inquiry by the community.\n\n\"However, you are not a child but a fully grown woman with adult children of your own! And yet, because you are a woman who asked for help against a man who is your brother, they refused to get involved. Now that you are widowed, and I presume your brother is the eldest male, he assumes he can decide your fate without your consent because he is a man, and nearly everywhere it's the men who make family decisions. By his actions, he also implies that as a woman, you are unfit to decide for yourself. The excuses that your situation is family business is the false covering that hides their own, similarly helpless situation. If they help you, it threatens the power held by their husbands, and that cannot be allowed to be challenged. So they lie to you and themselves and thus preserve peace in their own household.\n\n\"Claiming a woman by right of conquest assumes a woman is not a person like a man but is instead property. Something to be owned by the man. If a woman is property, she can never be a partner and the word 'wife' is simply another word for slave. Property needs a man's protection and cannot object to intolerable situations. Sadly, our laws reflect this backward attitude. Under this type of thinking, a woman's rights and her happiness are at the sole discretion of the husband or the father -- and not based on her intrinsic rights as a human being.\n\n\"People strongly associate me with the Protection Order, a declaration that says that regardless of rank or power, sex must be consensual. The Protection Order indirectly implies that women are human beings, and therefore have feelings and rights on par with men. It also implies that both women and servants are not property. And that is why I must absolutely refuse to claim you by right of conquest. Izel, if I take you to be my wife based on conquest, I undo the moral basis of the Protection Order. I undermine the right of anyone to say no.\"\n\nJanetta looked troubled even as she nodded solemnly. \"You're right, Kandikan. I only saw the immediate benefit of adding a powerful ally to our family, and I was so eager to go along with Izel's plan, I did not consider the long-term consequences. Whatever else happens, I do not want to go back to what we had to endure before.\"\n\n\"Izel, we will be married in a legal ceremony officiated by a sanctioned priest,\" I told her, and her face was awash with relief, and tears spilled down her cheeks. \"I will inquire with the Chaplain's Office later this morning to see who's available and what I can do to expedite matters. In the meantime, I can at least do this. House Computer, begin recording for a legal filing.\"\n\n\"Recording, Commander,\" the computer responded, the voice coming from speakers hidden about the room. \"Timestamp embedded in the file. Please identify witnesses for the record.\"\n\nIzel wiped her eyes and sniffed, her attention entirely on me.\n\n\"I am Ranji Kandikan, Commander, Imperial Air Service, assigned as commanding officer to the 602 Air Security Regiment, High Guard War Base. Present is Lady Janetta Tlacotli, Captain, Imperial Air Service, assigned to the 233rd Interceptor Group, Leader of 3rd Flight. Also present is Lady Izel Ocot\u00e9pan of Nahua State. The fourth person present is Calia, my Personal Servant.\"",
        "I put my hands on Izel's shoulders. \"Lady Izel Ocot\u00e9pan, before the gods, from this moment forward, I, Ranji Kandikan, formally offer you sanctuary within House Kandikan. You entered my home freely and you are free to come and go at your pleasure. While you are my guest, you are welcome at my hearth and table, and I will provide a safe place for you to lay your head. I also pledge to provide such accommodations for your servants and retinue suitable to your noble rank as I am able -- although current space considerations may require they abide elsewhere for the time being. I promise we'll work something out, Izel. In any event, I also pledge to protect you to the best of my ability against any and all who intend harm to you or attempt to compel you against your will or best interests, even against members of your own kith and kin. Thus before the gods do I swear.\"\n\nHer eyes blinked a few times, then she exhaled as more of the tension left. \"I... Thank you, Lord Kandikan. That is most generous. I, Izel Ocot\u00e9pan of the Nahua, immediately accept your offer of Sanctuary without reservation and swear before the gods, I do so without coercion or duplicitous intent in my heart to you or any who reside within your House. I will abide by your instructions to me while receiving Sanctuary, knowing you have my best interests at heart. Thank you, my lord.\"\n\nI nodded to Janetta and Calia.\n\n\"So witnessed,\" they said.\n\n\"Computer, cease recording. Copy to the commanding officer, 602 Air Security Regiment; copy to Imperial Air Service, Personnel Division; copy to General Rikoletsi, Commandant, High Guard War Base; copy to Captain Bilan Monaycote, 716th Mobile Infantry; and copy to my mother, Shanti Kandikan.\"\n\n\"Recording stopped, Commander. Copies made... and sent.\"\n\nJanetta snickered at me, shaking her head. \"I'm the only one in that recording with a stitch of clothing on in that official recording going to all sorts of official people. You are a shitload of complications, Kandikan.\"\n\nI blushed as I realized she was right. Nudity wasn't a big deal, but legal video recordings were usually done clothed. Ah well.\n\nCalia also shook her head at me. \"This will not go over well with your mother, my lord. She's going to call as soon as she gets this. Your father and your brother, too, will want to know more details. What shall I tell them?\"\n\n\"Tell them the truth, Calia, but be diplomatic about it. I will do my best to keep Izel here and to protect her. My mother and Bilan both complain I don't keep them informed. Well, if things get complicated, at least they will know who Izel is. If nothing else, I will explain and answer questions during this coming weekend's video call. If I need to send Izel to my parents to keep her safe, I will do so.\"\n\nIzel looked puzzled. \"You have a brother? I thought you were an only child.\"\n\n\"Bilan is my blood-brother,\" I explained. \"Now, there are some rules and expectations you need to be aware of, Izel. There are five women here who are my lovers. Janetta, Calia, Zinja, Cholan, and Ixma. You will become my wedded wife, but I will not put aside any of them, for each of them has a special place in my heart. It's my hope that you and I will become friends. Perhaps we may even come to love each other. Janetta Tlacotli is Mistress of House Kandikan and will remain so after our marriage. Your status will be second after Janetta. Calia is our House Manager. She's good at that job. She is also my friend and my lover. Besides her healing skill, you will find that she gives very good advice. I ask that you please work with her. I love my daughters dearly, and you should be introduced to them as a new aunty. Zinja, Cholan, and Ixma are Janetta's ground crew.\n\n\"Now for us. Izel, once we are wed, you become mine. When someone becomes mine, I do my best to protect and take care of them. You have my promise that I will treat you with respect. I do not believe in hitting within my house, and that includes servants. If that has been your relationship with your own servants, it ends now. The exception to the hitting is when we practice martial arts. If you do not know any and wish to learn, you will be welcome to join us. Calia, for example, doesn't fight, but she does the katas for the exercise. Another important item. I will never force you to have sex against your will. However, I believe proof of insemination is required to legally bind the marriage. I don't think we can get around that requirement. But after that, we'll talk. I'm sure there's more, but I think those are the most important parts. The rest we can work out later. Do you have any questions?\"\n\n\"Many,\" she answered, \"but I think you are preparing to leave, aren't you. I can wait.\"\n\n\"You're right, I have to go to work and I'm running late. Maybe the others here can help answer some of those questions. I'll be back as soon as I can.\"\n\n\"Gods of North and South, Kandikan!\" Janetta exclaimed. \"She's your intended wife, not one of your recruits. Before you take off, at least hug the woman!\"\n\nI held out my arms.\n\nIzel gave me a shy look, then embraced me.\n\nCalia put her hand on Izel's shoulder. Leaning in close, she murmured, \"It will be all right, Izel.\"\n\nRanji! She... her brother! He hurt her, and... he did it several times a day, trying to breed his own sister! Ugh! He reminds me of Tonca, Ranji! These are her memories, but even so, there's that same level of cruelty and arrogance about him. She's afraid she might be pregnant and is ashamed to bring it up. She's not, thank the gods. Oh, Ranji! The man her brother picked for her is Garan Bayloks'mec, brother to the man that Yalcamara shot!\n\nI just gave Izel an extra squeeze to reassure her.\n\nZinja snuck in, taking her turn at the toilet. A somber Calia moved behind me and retrieved supplies for the tall Oexecan mechanic. Zinja quietly thanked her.\n\nHolding me close, Izel seemed content to remain where she was.\n\nLeaning down, I murmured, \"It's all right, I know what your brother did to you. It makes no difference. You will become my wife and I will protect you, Izel, and I will do everything in my power to keep you safe.\"\n\nShe suddenly burst into sobs, shivering as she clutched me tightly. I kissed the top of her head and rubbed her back. Calia worked her way into the embrace and took over, murmuring soothing words.\n\n\"Stay here, Izel, and stay inside until I return.\" I gave Janetta a glance and headed into the bedroom.\n\nJanetta followed me. \"What did you say to her?\"\n\n\"That I knew what her brother had done to her. He took her against her will, Janetta. Over and over. He tried to put his child in her.\"\n\nShe scowled. \"His own sister? By the gods, if he tries to come here, I'll cut off his balls. If he crosses the street and I see him, I'll cut off his balls. What a fucking loser!\"\n\nI got into fresh gym clothes. \"It happens, Janetta. It happens a lot more than people are willing to admit. You... no, not right now.\"\n\n\"What? Talk to me, Kandikan. Don't shut me out.\"\n\nI stopped what I was doing and faced her.\n\n\"It reminded me of Deedee. Last month, Lieutenant Sisi Beytindl, her friend from Paxilman Hospital, finally visited Deedee's grave. Then she wrote a nice, long email thanking me for arranging for the trip, and for giving Deedee such a wonderful grave marker. Then she told me some things that Deedee had kept from me.\n\n\"Deedee's father didn't believe in birth control. As a result, their slave woman became pregnant several times, and each time the child was born, her father killed it. Then Deedee became pregnant. Despite her pleas, her father punched her in the abdomen several times, trying to get her body to abort. It didn't work. When the baby was born, she pleaded for him to let her baby live. While she watched, he drowned her child. On her sixteenth birthday, she ran away from home and enlisted. To her father, she was a female to be used. His property. It never occurred to them that because she was their child, they were supposed to protect and love her. Did you know, when her father was notified of her death, his response was literally that she should be tossed out with the rest of the garbage?\"\n\nShe gave me a hard stare. \"What do you want me to say, Ranji?\"\n\n\"I guess I don't need you to say anything, Janetta. I just wanted you to know the Protection Order is for all of you. I just wanted you to know that.\"\n\nHer face softened. \"I know, Ranji. That's a big reason why I love you. If I could, I'd marry you in an instant, but I can't. But I can be Mistress of your House, and am proud of that role.\" She took a deep breath and shrugged. \"Since we're still grounded, I think I will call my CO, explain what's going on and take a personal day. I'll talk to my team about Izel and we'll help her get settled. See if we can figure out where we're going to put her, her servants, her guards, and all the many bags of luggage I'm sure she owns.\"\n\nI smiled. \"You are the most beautiful woman in the world, Janetta Tlacotli.\"\n\nShe leaned against our shared desk. \"What are you going to do, besides working out and finding a chaplain?\"\n\n\"Put alerts on her brother and Bayloks'mec. Too many variables to really plan things out. However, I will make some contingency plans. High Guard War Base is not the same place that it was last year. If either one of them tries anything, they will be in for a very rude surprise.\"\n\nJanetta grinned, but I also noticed her eyes had a predatory gleam to them. \"I think it's long past time I serviced my pistols and my knives. I want to look my best at your wedding.\"\n\nGlancing at my watch, I said, \"I need to go. I'll be back as soon as I can.\"\n\nI moved toward her, but she put her hands up. \"You can kiss me, but don't touch the goods! My nipples hurt like little pieces of sharp glass, and my tits aren't much better. I don't want to even talk about the bloody mess going on down below.\"\n\nCupping her face, I kissed her slow and gentle, rubbing her cheeks and edges of eyebrows. \"My beautiful, wonderful, fierce warrior.\"\n\nJanetta hummed with satisfaction after our lips parted. \"That was real nice, Kandikan. And, hey! You aren't those men. You aren't. You're what stands up for what's right and good about our country. You also have good, decent men working with you. Keep in touch, will you?\"\n\nAnd like that, she made me feel better.\n\nZinja came into the room, giving us a questioning look.\n\n\"Relax, Zinja. We're staying in today.\" Janetta walked around the desk and fired up her laptop.\n\nThe Oexecan woman watched me as I approached her.\n\nI cupped her face, and gave her a nice, slow kiss, too. Then slowly kissed around her face before giving her another one on the lips.\n\nShe sighed while giving me an arch look. \"As much as I enjoyed that, Commander, I haven't even brushed my teeth yet, and a girl likes to be at her best when her man kisses her.\"\n\n\"As if I needed more incentive to practice farming with you. Tilling your furrow, breaking up the soil, and mixing in my seed. Taking my time to make sure it's been worked over really well.\"\n\nZinja licked her lips and blushed.\n\nJanetta snickered, then set to typing.\n\nCalia and Izel entered the room, and at Izel's direction, Calia opened one of the suitcases.\n\nAs I gathered up my things, Janetta called out to me. \"Not so fast, Kandikan. You gave each of us a kiss, and I know you bonked Calia, but you know what? I don't think a hug is enough. Izel's going to be your wife! Before you give her engine a going over with your poke stick and squirt her full of your man juice, I think she should at least get a nice kiss. Not a polite one. The kind she would tell her girlfriends about.\"\n\nIzel blushed, and I felt the heat rising up my own face.\n\nCalia raised her eyebrows at Janetta. \"How do you know we 'bonked'?\"\n\n\"Because you pretty much glow and get all smiley and bouncy afterward. Are you going to deny it?\"\n\nShe shook her head and Janetta grinned in triumph.\n\nIzel looked at me. \"It's all right. You gave me a good hug. I know you have to go.\"\n\nHowever, when I reached for her, her face brightened and she slid into my arms again, snuggling close and lifting her face to me. Gentle at first, she shyly responded. When my tongue pushed at her lips, she blushed as she opened her mouth to let me in.\n\nWhen we broke apart, she was breathing heavily, her eyes dilated. She licked her lips and murmured thoughtfully, \"You taste good.\"\n\n\"I haven't presumed too much?\"\n\nIzel shook her head. \"No, I like this. You give good hugs, my lord.\"\n\n\"My name is Ranji. I expect you to use it. Unless you have another name you prefer, I will call you by your given name.\"\n\n\"All right,\" she replied. \"Ranji. Names are important. What does yours mean?\"\n\n\"Defender,\" echoed all three women. They looked at each other and then grinned at me.\n\nI shrugged. \"My parents picked it. At the time, I was too young to provide any input.\"\n\nIzel giggled.\n\nJanetta smirked. \"You may not know it, Izel, but Ranji is considered the hottest single male officer at High Guard War Base. Everyone will forget about your buggering late husband, and will wonder what charms you used to land him.\"\n\nSurprised, I asked Janetta, \"You know about the contest?\"\n\nMy prickly pear rolled her eyes. \"Puh-lease! Cholan is the best e-man I've ever seen, and she's a bonafide early warning system when it comes to scuttlebutt. Zinja and Ixma aren't layabouts either. They keep their ears open and their mouths closed. Well, Ixma isn't so quiet anymore, but it's all weird stuff about animals mating and having babies.\"\n\nZinja looked at her officer with amusement.\n\nGently pushing on Izel's shoulders, she reluctantly let me go. \"I'm going to be late. Call me if you need anything.\"\n\n\"Bye!\" they called out.\n\nI headed downstairs where I met up with my bodyguards, Corporals Laylandi and Menali.\n\nSowitwee was putting on his jacket, but I told him, \"No. You stay here. Lady Izel's brother could be here anytime between now and over the next few days. You have the shotgun here still? Plenty of cartridges, too? Good. I want you here to provide a little extra firepower here in case he tries to come here directly. In the meantime, spend time with your wife and get to know your son. You'll start back up again next week.\"\n\n\"Yes, sir,\" he replied, taking his jacket back off. Nariya, nursing her child, looked pleased he was staying home. When he stood next to her, she wrapped her arm around his, leaning against him.\n\n\"Oh, and Wit?\"\n\n\"Sir?\"\n\n\"Zinja used that stunner and she saved them all. If you hadn't given her that, it would have been a lot worse.\" Moving over to him, I held out my hand. He took it and we shook hands. \"Thank you and well done, Sergeant. Well done, indeed. Please see that her device is fully recharged, will you?\"\n\n\"I will, my lord.\"\n\nLaylandi headed out to start up the cruiser. Menali let the other two troopers know we were departing.\n\nAfter taking a couple of bottles of water from the fridge and tossing them into the gym bag, I headed out.\n\n* * * * *\n\nPart 3 -- Details and More Details\n\n* * * * *\n\nAs we drove, starlight gleamed all the more brightly in the moonless night sky. The eastern horizon began to lighten as dawn approached. The Vedans believed Ushas, goddess of the dawn pulled back the great glittering mantle of the heavens so as to allow Surya, the god of the sun, to begin his daily ride across the heavens. The day's weather report predicted it would be on the warmer side but with a slight breeze.\n\nMy first call was to Dispatch, putting out a BOLO for Kirfan Tenochtitl, Lord of Nahua State, and for Garan Bayloks'mec of Chinze State. \"I don't want them arrested, but I do want to be notified if they or their agents enter High Guard War Base, no matter what time it is. Oh, and this is important. Please make sure they are informed of the Base Protection Order.\"\n\n\"BOLO and Protection Order notification confirmed by the main gate and by Ground Security, Commander.\"\n\n\"I also want everyone who enters High Guard War Base to be examined by the NCO Scout helmets. I don't care if they are personal bodyguards, priests, children, everyone. No exceptions.\"\n\n\"Swing shift Watch Commander was furious that someone with a bomb made it to your home, sir. She has already issued the same directive, and it was countersigned at nineteen-hundred-twenty hours yesterday by the War Base Commandant. Gate Security Protocols revised and in place.\"\n\n\"Thank you, Dispatch.\"\n\n\"Anything else, Commander?\"\n\n\"No, that's all. Kandikan clear.\"\n\n\"We're all glad you and your family were unhurt, sir. Llam nuqan. Dispatch clear.\"\n\n\"Llam nuqan,\" echoed both troopers from the front seat. Menali watched me in the rearview mirror.\n\n\"We work together,\" I replied. \"Indeed, we do.\"\n\nI pulled out my phone and gave Jay a call. He was already at the gym. \"I'd heard you had some activity last night. Is this a last-minute cancellation?\"\n\n\"You aren't going to get out of it that easy, Jay.\"\n\nHe laughed. \"Since you're so weak and frail and needed extra time to get here this morning, I'll just have to content myself with some stretching and exercises.\"\n\n\"Katas or sparring?\"\n\n\"Half and half?\"\n\n\"You're on, Jay. I'll try not to hurt you too badly.\"\n\nHe laughed again as he hung up.\n\nThe troopers drove me there, and once I was in the gym locker itself, they stayed close, keeping out a watchful eye.\n\nGym time was fun, and after exchanging a few bruises and breaking out a sweat, it was over too soon. Because he was still recovering, Pen was unable to join us. Jay and I worked on teaching refresher basics as well as a few new moves to some field troopers.\n\nWhen Mack and Akama relieved Laylandi and Menali, the latter two went to the lockers and dressed down, joining a class on basic hand-to-hand skills.\n\nAfter some hot showers, Jay headed home while I got dressed and headed to work. When I arrived, I checked in with Pen and I spent the next hour getting an update from him on the most urgent reports, delegating tasks, and general updates.\n\nThen, unexpectedly, Pen got up and closed the door to his office. \"Ranji? Can I ask a really personal question? I mean, it's really personal.\"\n\nI grinned at him. \"Well, you can ask--\"\n\n\"But you don't promise to answer. Yeah, yeah. This is serious. It's... well, there's no easy way to say this.\" He took a deep breath and then exhaled. \"Breena said on the way back from Cop\u00e1n, she watched you and Cholan being intimate. She said you used your mouth on her pussy? Is that true? You really did that?\"\n\nI grinned at him, trying my best not to bust out laughing. \"By the gods, Pen, yes, it's true. Cholan loved it, and I tell you I enjoyed making her come on my face. She's a small woman, so I like to get her really wet before I enter her. If a woman enjoys herself when you have sex together, she's more likely to initiate it herself. More important, I do it because she likes it. It's personal and intimate, and I get to focus totally on her enjoyment, and she loves the attention as well as the pleasure. Why do you ask?\"\n\n\"Breena, uh... well, she wanted me to do that to her. I told her I had to think about it.\"\n\n\"I know what the priests say, Pen, and you know what? It's total shit. Has she sucked your cock?\"\n\n\"Yes, she has.\"\n\nRaising my eyebrows, I looked at him. \"Pretty intense, isn't it.\"\n\nHe flushed a little as he nodded. \"Breena swallowed my seed, then she smiled at me and said she liked how I tasted. Tanti told me she wants to try it, too, and asked if I minded if Breena was there to give her pointers.\"\n\n\"Here's some things to consider, Pen. When a woman sucks your cock, she's making you the focus of her attention, and all her attention is on making you feel good. She's immersing herself in your smell and your taste. It's also a bit of a control trip. Everything she does makes you lose your mind a little with how good it feels. As she learns your body, learns how you respond when something feels really good and others not so much, she gains more control of how much pleasure you receive. Think about that. While she's giving you pleasure, she's also in control, and you've given that to her. Part of the pleasure, Pen, is from the trust given and returned by your partner. And, most women are geared to taking care of others. It's part of that maternal instinct. She gets satisfaction just from making you feel good. When she sucks your cock, it's a gift, from her to you.",
        "\"The reverse is also true. When you use your tongue and fingers on and in a woman's pussy, it's as intense for the woman as it is when she sucks your cock. It's a fact that women tend to be slower to arouse. If you're in them from the start, unless they're wound up tighter than a drum, chances are you'll reach your peak and you'll leave them hanging. A selfish lover doesn't inspire repeat intimacy. It makes them feel used and frustrated, which in some ways is worse than neglecting your partner. When you leave them frustrated, it's like a man getting hard, but never being allowed to come. If you make sure the woman gets her pleasure too, she'll want it again, and she'll want it from you. Giving her oral sex first is a way to make sure she gets to come, too.\n\n\"Now there are some who are able to mutually lick and suck each other at the same time. I can't do that, because if I'm focused on her, I'm blocking out distractions, including her mouth on my cock. If I'm paying attention to her mouth on my cock, I'm not paying attention to her responses to what I'm doing to her pussy. Yet I have no problem with intercourse and paying attention to her responses. Everyone is different. There are general rules, but what works for one person might even be a turn-off for someone else. Part of it is watching and listening for her responses to what you do. But you should also talk. Nothing works like simply asking what she likes, and if you're going to eat her pussy, let her tell you what she likes. You'll learn about the woman better that way.\"\n\n\"You've really thought about this. Gods, Ranji. No wonder you have five lovers and they're always happy to see you!\"\n\n\"Sex and making love is learned, Pen. Sure, the basics are easy. Poke, thrust, and come. But I was a really selfish lover when Calia first came into my life. She was very patient with me, and she taught me so much! Have you had any classes on anatomy?\"\n\n\"Just the basics for first aid and for hand-to-hand combat.\"\n\n\"You know what a clit is, right?\" I asked.\n\nHe shook his head. \"Never heard of it.\"\n\n\"Ever felt a little bump at the top of a woman's pussy?\"\n\n\"Oh, yeah,\" he said with a grin. \"The magic button.\"\n\nI snorted. \"I think that's a rather apt description. The clitoris is the anatomical word for it. Did you know there are eight times more nerve endings on a woman's clit than there are on the head of a man's cock?\"\n\n\"What?\"\n\n\"It's true. When you are face to face and your groin hits the top of her mound, it sends shock waves of pleasure through her center. A woman's clit is solely for sexual pleasure. Once she's near release, she might get there from some hard thrusting, but not always. While every woman is different, most won't come from penetration alone. If you ignore her clit, you will likely leave her hanging, and that's not a good thing. That's where oral sex can really help. It'll get her hot for penetration. That's not to say that you haven't pleased your women so far. Excitement with a new partner can help you please her because her own arousal is already high. As you become used to each other, you just need to make sure she gets enjoyment, too.\"\n\nI grabbed a sheet of paper and roughly sketched out a pussy, labeling the main parts as I went. Then, to clarify some things, I did a side view as well. For the next half hour, I talked and Pen listened intently, periodically asking questions along the way.\n\nWhen his admin Jodana gave two short raps and then opened the door, Pen hurriedly snatched the paper and turned it over, turning bright red in the process.\n\n\"Commander, Lieutenant... uh, am I interrupting something?\"\n\n\"No. Ahem, no, of course not. We were just talking about a special project,\" Pen said evasively. \"Why?\"\n\n\"Because you're blushing, sir. Commander? Lieutenant Ja-See says she has a meeting soon, and she says she needs to see you beforehand.\"\n\n\"Thank you, Sergeant,\" I said. \"Tell her I'll be right there. Dismissed.\"\n\n\"Yes, sir.\" She closed the door.\n\nI grinned at him. \"She's right. You are blushing.\"\n\n\"Not funny, Ranji. This is really personal stuff.\"\n\n\"Yeah, it is. Be as clean as you can for each other, that's just common courtesy for your partner. Pen, use this as a chance for you and for Breena and Tanti to learn what makes you and them feel good. Anatomy, advice, and books will tell a lot, but everyone is different. What will probably help you is to ask them to masturbate in front of you, and pay attention to what they touch and how they touch, and for how long. Ask them what gets them excited, too. You can even ask them to talk about what they're imagining. It's one way to have foreplay that she is sure to enjoy.\n\n\"Remember, even if you're pretty hot, it's not a contest to see how fast you can make them come. Rather, you are showing her that her feelings and wants are important. Holding them and some kissing afterward is important. Gods, I enjoy that, too. Janetta calls me a pervert, but she really likes it when I do her. Coming inside a woman is amazing. Seeing her face when she comes and calls out my name? No lie, Pen. I feel like I'm the king of the world.\"\n\n\"This is a lot to absorb. Still, I appreciate you taking the time to talk to me. Thanks, Ranji.\" He took the drawing and put it into his laptop satchel.\n\nStanding up, I picked up my own satchel. \"Calia's putting together some classes requested by some of our female troopers. Maybe you should consider attending, and bringing Breena and Tanti along.\"\n\n\"All right, I'll talk to them and see what they say.\"\n\nI paused by the door. \"Oh, I should tell you that I'm getting married soon.\"\n\n\"What?\" Pen jumped up from his seat. \"Married? To whom?\"\n\n\"She's new. Lady Izel Ocot\u00e9pan.\"\n\n\"That's the general's widow! The rumor mill has been rife with how she went to your house last night and requested you marry her. You're actually going to go through with it? And how does Lady Tlacotli feel about this?\"\n\n\"Actually, both Janetta and Calia said I needed to accept. It's basically a political marriage, but Izel made a good case. Her brother is trying to force her to marry Garan Bayloks'mec, and we know he's part of Supay's criminal network in Cop\u00e1n. I've already given her Sanctuary, so if they try to take her by force, I can legally intervene against her brother to protect her. Marriage will give me the right to shut down her brother's marital plans for her.\"\n\nI shook my head. \"I never thought I'd do a political marriage, yet here I am. I'm going to call the Chaplain's Office in a bit and see how soon it can be done. I'm planning on a quick ceremony as soon as it can be arranged, so we can stop her brother. Later, we'll have a formal ceremony and throw a big party for the 602 and any others who wish to participate.\"\n\n\"I have a hard time believing Lady Tlacotli endorsed this. Whenever I see you two together outside your home, she sticks really close. Even when you're kissing one of the others, she may not show it, but she pays attention, Ranji.\"\n\n\"Well, Janetta didn't know who she was at first, but once she recognized Izel, she insisted on the marriage. Both of them are Nahua, and Izel is a really big deal in their state.\"\n\n\"If you get a date and time, let me know?\"\n\n\"Of course. I'll let you and the rest of my command staff know the details.\"\n\n\"Since you're having a private affair first, I assume you want me to keep this quiet?\"\n\nI shook my head. \"You don't have to keep it quiet, but at the same time, I'm not ready to broadcast it just yet. I thought I'd confer with my staff as to a good date and time for the public party afterward. Hopefully, too, I'll have a sense of Izel, too. In the meantime, I'm expecting her brother to show up soon, so things might get complicated. Hopefully, there won't be any violence, but we'll see. As for Izel, she might want to stay here, or she might prefer to return to the Imperial Court at Cuzco. We'll see what she wants to do.\"\n\nThen I raised my finger and pointed it at him. \"Now as for you, Lieutenant Fortri, I heard they had to put you back in the tanks to repair your ribs a second time. You better knock that shit off! Jay and I miss being able to work out with you.\"\n\n\"Yeah, I'm being good,\" he answered. \"I just get a kick from playing with Breena's boys. They are so starved for attention like you wouldn't believe.\"\n\n\"I think I have a good idea. I love getting hugs from my girls! Hug them. Show them physical affection. Touching them will help reassure them. Treat what they say with respect. Read to them. Play with them. Yes, even with the building blocks. Talk to them. Test their understanding. It will show them they matter to you. Before you know it, Pen, you will be their dad. In the meantime, I want you back on active duty. How many days do you have on light duty remaining?\"\n\n\"Five. The ladies had a talk with the boys, and we're being very careful.\"\n\n\"Fair enough. And, Pen?\"\n\n\"Yeah?\"\n\n\"I'm happy for you. Seriously. I know it's an instant family, but when you came to the birthday celebration, you looked content and it made me feel really good to see that. I know Breena's still adjusting and her self-esteem has taken a battering, but I truly wish the best for all of you. You deserve some happiness.\"\n\nLeaning back in his chair, he gave me a beatific smile. \"I really am happy, Ranji. First time since before I entered the service. I know some will say it's too soon, but I'm already thinking about making it permanent.\"\n\n\"Both of them?\"\n\n\"Yeah. I mean, Tanti fires me up and we click so well together. But she also likes having her sister close. And she told me some of what Breena went through. In a lot of ways, it's like what we went through, so I have a basis for understanding. Besides, Breena is falling over herself trying to be attentive, and I really am enjoying my time with Breena's boys. I've even learned how to hold Si\u00e9nte. Both of them say seeing me hold the baby makes them hot.\"\n\n\"Are you having any trouble with nightmares?\"\n\n\"No more than normal. A few restless nights sometimes, but no screaming and no sleepwalking, and I'm fine during the day. How about you?\"\n\n\"The same,\" I answered. \"If I'm feeling out of sorts during the night, I reach over and grab whoever is closest, hold her close and inhale her scent. Breena might not know what to do, but like you understand when she feels off, she will understand it when you do, too. If you start having problems with sleep or get the shakes, talk to me. And you know Jay will listen, too. Just don't try and hide it.\"\n\n\"Same goes for you, too, you know.\"\n\n\"If you do decide to make your relationship with them official, you'll need to talk to them about it, so that they are at least warned.\"\n\n\"Thanks, Ranji. For all of it.\" Then he turned his focus to reports on his desk.\n\nI started to leave, then turned back, and Pen looked up again.\n\n\"Something else, Commander?\"\n\n\"Is your family still giving you shit about Jay?\"\n\nHe just nodded.\n\n\"How will they react to you marrying the Yakalme sisters? We recovered some jewelry from Breena's ex, but I don't think what they have is very valuable. Wit's father, Daydo, is a jeweler. Maybe I'll have him look at what she has. Anyway, dowries are supposed to provide a cushion for the woman so that if things don't work out, she's not left destitute. The reality is the husband usually feels free to dip into her money, and the woman rarely even gets a say, much less object to what he does. I object to dowries because it comes across like the man is being paid to take the woman of her parents' hands. Tanti and Breena are Guild Caste, but they're poor. You think your parents will give you grief about taking them as your wives?\"\n\nHis jaw worked a bit, then he sighed. \"Probably. They aren't noble, which is fine because I'm not the eldest. But you're uncannily spot on. If they don't have a decent dowry, they'll just add that to my friendship with Jay as another of my 'failures' since enlisting.\" He looked up at me. \"When we got here, Jay and I took an oath and became blood brothers. It's old-fashioned, but you seem to inspire that in us. Living up to the Warriors Code, doing the honorable thing when needed. If anything happens to me, Jay will step in and take care of them.\"\n\n\"I didn't know that. Congratulations to you both. Bilan is my blood brother, and he's been solid. My parents love him and his family, and his boys call them grandpa and grandma. When you decide you're ready for marriage, I'll provide the dowries for Tanti and Breena.\"\n\nPen sat back in his chair and frowned. \"No, please don't. That's too much. Besides, I'm not marrying them for money. I... huh. I guess I am marrying them. But no, I don't want you to do that. I earn enough to provide for all of them. I want to take care of them on my own.\"\n\n\"I hear what you're saying, Pen. But hear me out. Cholan's not my wife, but I love her a great deal. Tanti and Breena are her sisters, and she really loves her nephews and niece. The boys have asked me to be their Uncle Ranji. When she gets big enough, I'll be Si\u00e9nte's uncle, too. It's tenuous, I'll grant you, but I'm using that to claim to be their male relative. They have no other close family left here. For you, Tanti, and Breena -- you don't have to use the money at all. Put it away or invest it. But if your parents give you grief, you'll have it to show. I am able to afford it, and it'll make me feel good.\"\n\n\"What about their inheritance? Their parents had a nice home in an upper-class neighborhood.\"\n\n\"Gone. Lieutenant Laroks looked into it for me. The parents were charged as traitors in absentia and the land sold. Three guesses as to who claimed the proceeds from the land sale.\"\n\nPen scowled. \"The Minister?\"\n\n\"Got it in one. So let me do this. It's as much for Cholan as it is for her sisters. They've told Cholan they want to fix their relationship. Maybe it'll help, maybe it'll muck things up, but High Guard -- and now you -- this is their chance for a new start. Besides, it'll be like you'll be my brother-in-law once removed or something.\"\n\nHe laughed. \"All right, you make a good case. Better not come any closer, though. I'm feeling a sudden urge to kiss you.\"\n\nI grinned back at him. \"I consider myself so warned. Are we good?\"\n\n\"We are.\"\n\n\"Have a good day, Watch Commander.\"\n\nOpening the door, I exited, and after a brief smile and nod to his admin, I headed to my office, passing around the rows of desks occupied with busy support staff and troopers writing up shift reports one index finger at a time. Some of the NCOs were using voice-recognition software, speaking quietly into headset mics.\n\nJa-See rose from her own desk as I approached. Once inside, she quickly gave me updates. The new joint Ground and Air Service closed-circuit camera team called Secure Watch was integrating nicely. The joint Dispatch services were folding over to Ground Security, while Secure Watch was to be overseen by Air Security. Both units would have people from both services. We were still working out how to improve security coverage with our field troopers.\n\nNew areas of coverage were added as more cable was laid and new cameras installed, greatly expanding our ability to monitor more portions of the war base remotely through Secure Watch. Some higher traffic areas were also being marked for traffic signals to replace stop signs, and we were coordinating these efforts with Ground Service Mobile Construction.\n\nThe suggestion that we integrate our CID units was still under evaluation.\n\nBut in the main, Ground Security and Air Security were getting along, and generally working well together. Oh, there were still a few suspicions and even some with residual hard feelings from the previous year, but we were making good headway.\n\nJa-See then made a comment that got my attention. \"Lord Kirfan Tenochtitl will be arriving in Capisco later this afternoon, Commander. He's been granted a diplomatic visa for his trip through the Seven Nations to High Guard. The Commandant's Liaison Officer was notified only half an hour ago about his impending arrival, so they are scrambling. The diplomatic paperwork came via the Ministry of Imperial Security. However, no word as to whether the intended groom is with him.\"\n\n\"Thank you. Do you have an idea of his earliest arrival time?\"\n\n\"There are sixty-three in his lordship's party. Because it's so large, the Seven Nations are taking care there are no incidents. Lord Kirfan has also made inquiries as to the whereabouts of his sister, Lady Izel. Estimates are they will reach High Guard by seventeen hundred hours at the earliest. Do you have a plan, Commander?\"\n\n\"As of this morning, Lady Izel officially has Sanctuary at my home.\"\n\n\"Indeed? That should prove interesting. You might want to consider moving Lady Izel's people from the VIP area. It might prove tempting for Lord Kirfan to take out any guards she might have. They might kill the servants, too, if they plan to truly isolate her.\"\n\n\"Thank you, Lieutenant. That's a good idea. Suggestions as to where to put them? I was already pretty full at my place beforehand. In fact, I don't know many she even has in her retinue.\"\n\n\"Seventeen. Nine armed retainers and eight servants. Make it a score to account for any of her own personal possessions? And, she might want to bring in more of her people from Nahua State down the road. She does have an estate at Cuzco as well as her lands in Nahua.\"\n\nImpressed by her intel, I nonetheless sighed. \"Hopefully she and I will get a chance to talk before she adds to her retinue here at High Guard. Otherwise, I'll figure something out. Right now I've got other priorities.\"\n\nI got up and asked Hanami to step into the office. While she entered, I opened my laptop and searched for my copy of the Notice of Sanctuary. When I found it, I encrypted it and sent a copy to Tik\u00fan Travel, along with a note about the intended groom as well as my intention to wed Lady Izel at my earliest opportunity.\n\nWhen Hanami seated herself, I said, \"Please contact War Base Housing and see what kind of accommodations are available for Lady Ocot\u00e9pan's retinue. An empty barracks for a full platoon is fine. We need them moved from the VIP guest area before this afternoon. Please explain that Lord Kirfan's people and Lady Izel's people may not behave themselves, so moving them before Lord Kirfan's arrival is a requested priority from me. If you have any issues, ask to speak to Captain Uturuunco and ring me.\"\n\n\"Anything else, Commander?\"\n\n\"Yes. Contact Emilo at the VIP compound for me, and ask him to let me know when he's available. You can text his response to my phone. That's all.\"\n\n\"Shall I order your breakfast, sir?\"\n\n\"All right, yes, I could do with a meal. Thank you, Hanami. Would you like something to eat, Lieutenant?\"\n\nJa-See shook her head, glancing at her watch. \"I appreciate the offer, Commander, but I don't have the time this morning. I need to get going.\"\n\nHanami got up and exited the office.\n\nJa-See also rose from her seat. \"The Imperial Security Station at High Guard has been inexplicably vacant for quite some time. Tik\u00fan Travel is sending some people to fill some of those slots. Considering the current situation with the Minister, they will be arriving undercover so that nothing happens to them while they are in transit.\"\n\n\"How many?\"\n\n\"Initially five. An officer, a sergeant, and three enlisted. You'll have to find space for them to set up, Commander. Eventually, you should have at least two full platoons working at a war base this size. Tik\u00fan is looking, but there is a shortage of reliable agents at this time.\"\n\n\"We'll put them in Air Security uniforms for the present, and assign them to Tactical Ops. Getting them oriented here and finding desk space will be your job. Do we have an ETA?\"\n\n\"Indeed? Very well, sir. As for their arrival times, all I've been told is that it will be sometime over the next two weeks. Once they do arrive, all of us will need to sit down together, Commander.\"",
        "\"When you're looking, my preference is that we set them up here, but I'm open to having them at another location. Lieutenants Fortri and Raltikon will involved as well. Anything else?\"\n\n\"Not at this time, and I need to leave for my meeting with Ground Security. Door open or closed?\"\n\n\"Open is fine.\"\n\nWithout another word, she left.\n\nChecking my email, I saw a status update from Dr. Jehantli.\n\nThree of the students with severe burns, including Makhelchel's niece, had already been treated and released. Emilo's son, Kosumo, had spent several hours in the nano-tank and had not only recovered from his coma, but was able to sit up and converse. Still weak, Kosumo was staying overnight in the hospital for observation. The other three critical cases, including his daughter, were scheduled for treatment the next day. The reporter Sammi Reo, after she was checked for electronic devices, was going to be allowed to observe one of those nano-treatments, a rather rare event. I had to believe she was probably one of a very few foreign nationals to see such a medical procedure.\n\nGeneral Rikoletsi and I had conversed, and our endorsements to the War Minister and Air Marshal, and her seeing the process had been okayed. Good PR for the Empire was important right now. And, to go with it, Reo was going to announce that a small, select group of needy patients from the Seven Nations would be treated at the facility, initially one person per month, with a team of physicians from the Seven Nations making the selection list of candidates, with Dr. Jahantli having final selection approval.\n\nAs for Emilo's group, the remaining students would be treated in between other previous appointments through the coming week, with the last ones being seen at the middle of next week. The doctor was kind enough to send me a schedule. I wrote back and thanked the doctor and his staff for his work. Then I sent an email thanking Captain Uturuunco for her excellent efforts in taking care of the parents and injured students, with a copy to General Barankoshto. Then I sent her a separate one thanking her and her office for arranging new quarters for Izel's people so quickly.\n\nI had cleared out a sizeable portion of my inbox by the time Hanami returned with breakfast. She washed out my mug in my personal latrine and then filled it with fresh cahault.\n\nHanami let me know that Emilo was currently at the hospital visiting his two children, and that he would be notified about my call upon his return. In the meantime, the remaining students had been taken shopping at the Commissary for supplies, entertainment apps, and whatnot, and the charges billed to my account. One of Sergeant Chita's staff had gone with them to supervise and to help keep expenses down. Security reported that Reo, her cameraman, and the Public Relations Media Specialists were taking plenty of photos and video of the whole event.\n\nI picked up the food, examining it. \"What's in the sandwich wrap?\"\n\n\"Shredded tapir meat with shredded lettuce, cheese, chopped pineapple, and chili sauce.\"\n\n\"Sounds good. Thank you, Hanami. Did you get something for yourself?\"\n\n\"I did, sir. Thank you.\" She stood by the entrance. \"Door open or closed?\"\n\n\"Closed for right now.\" I took a bite and started chewing. It was pretty good.\n\n\"Enjoy your meal, Commander,\" she said as the door closed.\n\nBetween bites, I wrote up a summary of the previous evening's events, starting from my arrival home with Janetta and Izel's arrival, including the death of the priestess, Izel's near death, the acceptance of Sanctuary by Izel, and this morning's agreement to marry her to protect her from her brother.\n\nNext I scanned through the shift reports from the troopers, finding plenty of references to Calia's declaration about the evil Tzinco, her gruesome death, and Calia's subsequent healing of Izel.\n\n\"Shit,\" I muttered. I marked those reports as Restricted.\n\nWith something like this, the smart thing would be to simply erase those bits and move on. But I thought my father might find the originals interesting. Encrypting the files and my summary, I sent a copy to him, promising myself that I'd work on the originals tomorrow. I wrote a reminder on my e-calendar just in case because as much as I hated to admit it, even with Hanami keeping watch, I was finding that some of the little things got away from me. It was those things she wasn't privy to that seemed to suffer the most.\n\nGoing through the summary again, I edited it for more formality while removing most of the references to Calia, and then forwarded the copy to General Rikoletsi as well as to Tik\u00fan Travel.\n\nA new general had been appointed to oversee the Air Service units here at High Guard, but he'd only arrived two days prior. I had yet to meet him face to face, and I couldn't recall his name. Scrolling through the address book by title, I found him. Ah, there it was. Field General Tellek Ulee'ar, Air Service CO at High Guard. Forwarded a copy to him as well. Then, to be politic, I wrote a brief email welcoming him to High Guard, briefly introducing myself, and expressing my desire that we could meet soon for lunch.\n\nGetting a fresh cup of cahault, I sat back down in my chair. If Izel's brother and his people became violent, it would help if General Rikoletsi already knew there might be an altercation. Considering that Kirfan had kept his sister incommunicado while a prisoner, chances were he would engage with a surprise attack using overwhelming force to recapture her if he could do so, and then beat feet back to Nahua State. With so many armed men coming with him, he might try that even on an Imperial War Base.\n\nI also explained to the Commandant about plans for a more formal wedding ceremony at a date to be established later -- sometime after her brother was dealt with -- so as to give people time to adjust calendars if they wished to attend.\n\nAs a warrior officer, I didn't need to ask anyone's permission to get married. Enlisted had to fill out paperwork, but for a warrior officer, marriage to a civilian was considered private House business, and one simply listed any names, identification, and the like and notified Personnel. All that mattered was that one did one's duty. The exception to that, of course, was if you married foreign nationals. Then things got sticky. Fortunately, not my concern.\n\nThat got me thinking about the supporting cast. The job of the best man was to stand by the groom and make sure no one interrupted the ceremony, especially any agitated family of the bride. Likewise, the bride would have a respected woman to ensure she was not there under duress. Naturally, I thought of Bilan, but this was way too last minute for him, especially with him being so far away. Besides, Izel might decide this should be a long-distance marriage, and if so, I didn't want to make Bilan come all the way to High Guard with the Atlanteans making things hot just to attend a political marriage. I next thought of Jay and Pen. Pen needed rest, and Jay should be in the middle of his sleep cycle.\n\nThen I blinked, and then laughed aloud.\n\nDoyya!\n\nWhy not? She was my Second, and would easily be available. I trusted and valued her a great deal, and I considered her a trusted friend. Her being my best man would send a message, too. I'd talk to her about the ramifications, but the more I thought about it, the more I realized she was the perfect choice.\n\nAs for Izel, maybe we could get Janetta to stand as Izel's warrior matron. It would make clear to everyone here at High Guard that Janetta approved of the marriage, and hopefully would help with...\n\nWho was I kidding? Once I got married, the gossip would go crazy.\n\nWhen I called the Chaplain's Office, I presented myself as enquiring for a friend about openings to do a simple marriage ceremony. The priests to Inti, Huitzilopochtli, and Tezcatlipoca were booked solid for the next couple of weeks. It seemed weird to have a priest of the sea god Caratachoc officiate since I was neither a marine nor a sailor, so I didn't even consider that temple at all.\n\nXiao, the fifth chaplain, turned out to be a priestess to the Jade Goddess. Surprisingly, her voice was a smooth alto-bass. She informed me she was well-versed in performing marriages, especially mixed marriages that took into consideration tribal and family needs. \"So what tribes are the bride and groom?\"\n\n\"The bride is Nahua. Uh... the groom is happy with whatever is required. Within reason, of course.\"\n\n\"That didn't answer my question, Commander.\"\n\nI sighed. \"All right. The groom is me. Vedan.\"\n\nShe gasped, then actually giggled. \"No shit! The hottest, most eligible bachelor at High Guard is getting married? Be still my palpitating heart! Does this mean you've finally persuaded that sexy jaguar pilot of yours to give up flying and start making you some cute babies? With your combined coloring and bone structure, and especially if they inherit your killer blue eyes? Oh, please tell me it's so!\"\n\n\"You know about Janetta?\"\n\n\"Of course, Commander!\" Priestess Xiao exulted, speaking quickly. \"Just last month there was a long, informative article in the Armed Services Times about the new Nano-tech Treatment Facility. It featured an interview of the facility director, Doctor Jehantli, who got a promotion to go with his new assignment. In the interview, he told all about how you built the facility to help the men and women posted here at High Guard, to help take care of the long backlog at the Naval Hospital. There was also that heartwarming story about those cute little children, Tambo and Piya, who you personally intervened to save. Both of their pictures were so adorable! While the mothers were anonymous, they were absolutely effusive in their praise for you. And there was a deliciously romantic piece on how you paid for the new facility from your private fortune and had it dedicated to Captain Tlacotli's father. The many romantic hearts here at High Guard are all aflutter about how much you must love that woman to do something like that for her. The gossip lines have been simply burning since that story was released. Did I say burning? I meant scorching, Commander. Scorching.\"\n\nThen she took a breath and continued at a slower pace. \"So tell me, who is the very, very lucky woman who landed the very eligible Commander Ranji Kandikan? Is that hot captain of yours leaving the service for a life of happy marital bliss? You two look so cute together, and it's fitting, too. She was third runner-up for the hottest female officer.\"\n\nI cleared my throat. \"Uh, no. Captain Tlacotli is staying in the Air Service, and we're staying together. No, the bride is Lady Izel Ocot\u00e9pan.\"\n\nA sharp intake of air, followed by a five-second pause. \"I don't think I heard you correctly. Could you please repeat that, Commander?\"\n\n\"The bride is Lady Izel Ocot\u00e9pan.\"\n\n\"As in the widow of--?\"\n\n\"The same,\" I confirmed.\n\n\"You aren't having me on, are you?\"\n\n\"Not at all. I'm being totally serious. And the sooner the marriage is done, the better.\"\n\n\"I hadn't even heard she was back at High Guard.\" Then she paused before continuing, and this time her voice was a little sharper. \"This isn't a marriage by right of conquest is it? She wasn't even at High Guard when you and the general fought your duel. Tell me the truth, Commander, because I would be so disappointed if it were, and that opening this afternoon just might have been a clerical mistake.\"\n\n\"I'm sorry?\"\n\n\"Our goddess believes in men and women having their respective spheres,\" she said sternly, \"but our divine Mother also is quite clear that women are not property. Your Protection Order has received the church's endorsement both here and abroad. I mention the Order as often as I can in my sermons, and there's a copy posted outside our chapel.\"\n\n\"Priestess Xiao, if I had done such to Lady Izel, there would be no reason to even call you. Lady Izel demanded that I take her thus, but I refused. No, this marriage is to protect her.\"\n\n\"That's a good point. Still, I want to hear the short-and-sweet version when you get here, Commander. And don't try to shine me on. I have an excellent shit detector. I want both of you here at fifteen hundred hours. I'll interview you together and then her separately. If I'm satisfied, the marriage will begin at fifteen-thirty hours.\"\n\n\"Thank you.\"\n\n\"Because this is short notice and you tell me it's urgent,\" Xiao warned, \"we won't have time to do anything fancy. I have another couple arriving in at seventeen hundred, and I will not make them wait. The Jade Goddess does not recognize rank or caste. Also, this is important. It's nothing against you, Commander, I tell this to all couples because it's required.\n\n\"After the vows, under Imperial law, you must penetrate her pussy with your cock and inseminate her in order for the marriage to be legally binding. Also, oral and anal ejaculation will invalidate the ceremony. A few men tried that trick, penetrating all the woman's holes and finishing elsewhere but inside the pussy. That left the woman's reputation in ruins and her unmarried. We no longer allow those situations to happen, and we have armed guards within the temple to ensure such men do not escape punishment. I assure you, no threat is intended, and with your reputation, I'm sure we have nothing to worry about. When you're alone in the marital chamber, you and she can do whatever you both agree to, but at the end of your time limit, you must coat the outside of her womb with your seed. I'm not going to watch, but I do need to see semen dripping out of her, and visual evidence that her pussy has been worked over, and it needs to be filmed in case it's challenged in Imperial Court. Legally, only the judge can view the film record.\"\n\nI felt my face heat up. \"I understand, Priestess Xiao. Thirteen hundred hours. We'll see you then. Goodbye.\"\n\nI shook my head. Seven hells! The gods of Chaos must be pissing themselves with laughter.\n\nGetting up, I wandered out and over to Chita's office, which was empty.\n\nHer admin, Suhanee, feathering her fingers through her purple hair as she looked up. \"Said she had an early lunch with Captain Lovyanchiti, Commander. Something about hankering after some clams? She said she'll be back in about an hour. Unless you need me to page her?\"\n\nHanami, her face almost burgundy, coughed as she glanced at her co-worker.\n\nSuhanee looked up at me, shocked with sudden realization. \"Clams? Oh, sir, you don't think...?\"\n\n\"Aaaand, I think it's best if no one discusses what the sergeant meant, much less even thinks about it or says another single word about it even when they're off duty.\" I dug into my wallet. \"Here's a twenty. You and Hanami enjoy a meal on me.\"\n\nSuhanee took the cash. \"Thank you, sir. We'll think of you at lunch!\"\n\nConsidering the betting pool, I wasn't sure Suhanee's promise was an improvement. Returning to my desk, I closed the door and called Doyya.\n\nShe picked up on the sixth ring, answering like she was out of breath. \"Yes, Commander? I, uh... I was just getting ready to step into the shower.\"\n\n\"I want to borrow you this afternoon.\"\n\n\"What? Wait a moment. Chita, please stop! It's the commander, and I'm putting him on speaker. Could you repeat that, sir?\"\n\n\"I want to borrow you this afternoon. I'm sure you're aware Lady Izel stayed the night at my place. I've already given her Sanctuary, but she's convinced us that she needs to be married to be safe from her brother and from the man her brother wants her to marry. Get this, the man he picked is the brother of the man Yalcamara shot. Yeah. Calia and Janetta have both told me I need to marry her. We're heading to the temple of the Jade Goddess at fifteen hundred hours. I'd be honored if you would be my best man.\"\n\n\"But I'm not a man!\" she protested. \"Besides, what about Lady Tlacotli?\"\n\n\"Izel is here only with a small retinue. However, you raise a good point. I'm going to suggest that Janetta be warrior matron. However, if Janetta insists otherwise, would you be okay with being Izel's warrior matron?\"\n\n\"Holy shit!\" Chita exclaimed. \"Hey, wait a minute! Did you say matron?\"\n\n\"Whatever you need, Commander. And I'm honored you asked me. And good catch, Chita. Sir, Captain Tlacotli is unmarried and has no children, so the proper title is warrior maiden. For that matter, sir, I'm not married either. If you call the captain a matron, she might get peeved, and having seen that before, I know it's not a pretty sight. Lesser mortals have not survived the experience. The men might not understand, but I guarantee you that every woman who hears about it will. Warrior maiden, sir.\"\n\nI blinked. \"Thanks, Doyya. You're right. I don't think that would have gone well. Once again you save me from a fate worse than death.\"\n\nChita snickered in the background. Doyya said, \"Unless you have something else to add, I'd better make some phone calls for shift coverage.\"\n\n\"Good call. And, of course, it wouldn't be complete without my Regimental NCO in attendance. I'm planning on doing a more formal ceremony later, after Pen heals and I have a chance to let Jay attend, too. Are you enjoying your seafood?\"\n\n\"Sir?\"\n\n\"Chita told others here she was going to have a clam sandwich for lunch.\"\n\nChita herself began howling with laughter. \"I love me some of that special dipping sauce! Did I say dipping? I meant dripping!\"\n\nDoyya replied hotly, \"Oh, she did, did she? Goodbye, sir. Chita? I'm gonna--\"\n\nChuckling to myself, I refilled my mug with cahault and finished the last of my late and very cold breakfast, I spent the next hour catching up on important projects and signing off on status reports. Potato wedgies are definitely better hot.\n\nIn between work, I managed to arrange for Calia's emancipation papers to be drawn up. Since I already had a rapport with Captain Kilfoor at Ground Service JAG, I contacted him, and he was amenable to the work. He told me it would only take a couple of days to file the paperwork. To my surprise, he then informed me that since I was now a full commander, I was entitled to a much-reduced cost in emancipation fees. Instead of seventy-five thousand credits, Calia would become a free woman for a mere five thousand, which included both his costs and the JAG court fees.\n\nHanging up, I sat back in my chair, savoring the news. Rank had its privileges. Opening my account, I transferred the funds to Kilfoor. On a hunch, I checked Calia's bank account and seeing it had a balance under five hundred credits, I transferred in fifteen thousand more. A quick scan of the other women's accounts showed they were pretty healthy. Still, I added an extra thousand to each.\n\nAfter our return from Cop\u00e1n, I had replaced the funds Cholan had spent on her parents. She and Janetta had both loudly argued with me against it, but I had insisted. I told them both I understood their position, but what was important to me was that each of them were to have the means to take care of themselves if anything happened and I wasn't there. \"It's my decision, and neither of you has a say in it.\" As I recall, all the women were very vigorous in their need for me the rest of that week. Not enough sleep, but there were satisfied faces.\n\nI secured my laptop, checked to make sure my desk was locked, grabbed the gym bag, and locked my office.\n\nMy aide, Hanami, was just returning to her desk. \"Oh, hey! Here's the address for Lady Izel's people, sir! And don't forget about your meeting with Commander Topak at C&amp;C at thirteen hundred hours!\"\n\n\"I just sent him the status report he wanted,\" I told her. \"Call him up right now. Give him my apologies and reschedule the face-to-face for next week. If he asks, tell him there is a large party of important VIPs arriving at High Guard tonight, and chances are they won't be friendly, so I need to make some preparations just in case.\""
    ],
    "authorname": "TJSkywind",
    "tags": [
        "aliens",
        "alt history",
        "atlantis",
        "consensual",
        "early earth",
        "military",
        "native",
        "poly"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/starlight-gleaming-ch-20-pt-01"
}