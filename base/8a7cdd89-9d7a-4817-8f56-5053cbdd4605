{
    "title": "My Little Ventrue Pt. 07 Ch. 17",
    "pages": [
        "~~Antoinette~~\n\nJack had seen her. She knew he must have. And yet, he gave chase into the forest, with Beatrice over his shoulders. So committed was he to his plan, to his need for revenge, that he would ignore her approach, the Prince of Dolareido, and his lover, to pursue it.\n\nIt was not Jack she saw. It was the curse, a relic from ages past, from those infuriating striges and their obsessive need to disrupt the lives of Kindred. The curse. The damned, bloody curse, that crawled into her thoughts all minutes of the night. Of course her love would use its power to achieve his goal, for vengeance, to settle the ghost of Julias over his shoulder, and the very real ghost of his sister. She knew it would happen, and yet, she was still surprised.\n\nThe carnage the curse had wrought was extreme, and she stared in nigh disbelief as she came closer to the forest. One hundred, two hundred, perhaps three hundred feet wide, a clearing of destroyed trees and shredded earth. And corpses. The corpses of crows and rats, but corpses nonetheless, thousands of them. Only Jack could have summoned such an army to his side, and only a battle between him, hunters, and S\u00e1ndor especially, could have created a field of mayhem such as the one she walked through.\n\nShe checked back over her shoulder for Mark, or perhaps someone else. There had been someone else nearby, a young Kindred, but she did not see them, eyes locked onto S\u00e1ndor as they had been. Mark, on the other hand, she knew was to follow behind her. And he was, though he stayed away, far away, a lowly creeping skeleton covered in grime, insects, and gore. One could barely see his shifting shadow in the darkness of the night.\n\nA werewolf leapt down from a tree, Othello in her arms. She looked at Antoinette as she set the man against a large rock, near the center of a rather disturbing clearing connected to the zone of destruction. Fire awaited her, but the gargoyle made quick work of the flames, flattening them with his palms, one after another. And, unless her eyes deceived her, the nightmare itself began to fight back against the flames, trees regrowing when she was not looking, and grass rising from the ashes. In the clearing with the gargoyle, corpses were crucified to trees, and perhaps a dozen hunters lay dead in the burning grass.\n\n\"Prince,\" S\u00e1ndor said, \"Jack has...\" Sighing, the beast pointed to the forest with one hand, while his other three continued to squash the fires as if flame had no power over him. Perhaps it did not. Blood coated his mouth, and Antoinette did not need to guess whose it was. Jeremiah's clothes, or what remained of them, were on the ground about his feet.\n\nAzamel lay beside S\u00e1ndor. Breathing, alive. Good. Antoinette would have questions, once she had a moment to process what was happening.\n\n\"I will be back, and I will deal with this insanity,\" she said.\n\nShe took off into the woods, and Daniel followed. Once again, she had arrived too late to help in the battle, and found nothing but the remains. But, perhaps if she caught up to Jack, she could influence the outcome of the curse's actions. Without a doubt, it was the curse enacting its will to create such chaos, and while Jack may have been willing to let it unleash its will, in order to achieve victory, he would not be able to stomach the carnage it might force upon him.\n\nPast the clearing, she noticed a man sitting behind a tree. The others must have known of his presence, but did not react to him. Harcourt then, the hunter Jack had mentioned in his message to her. She decided to leave him be, and kept after Jack's trail. \n\nShe and Daniel came to a dead stop, as a black wave of thick water oozed and boiled between some trees. An aura of dread, of fear, of death and of power flowed out from where it bubbled on the ground, and Antoinette steeled herself as she dashed toward it. Mark? It was similar, and yet Mark was but an ant compared to the aura that buried her. She knew that presence. Here? How? Why?\n\nShe expected a confrontation, of wills or of fists, but as she slipped past the twisting trees and found the spot where the ooze bubbled up from the dirt and grass, she found the ooze vacating. It slipped back into the earth, and it took something with it. Someone? An old woman with sickly thin limbs, and a tattered dress, disappeared into a black void.\n\nAnd then, Black Blood was gone. It was Black Blood, it had to be. The cold air, the sense of decay and death, as if someone had distilled a cemetery, its tombstones and mausoleums, into perfume. It could only be that blasted spirit. But it was gone, and had taken someone with it.\n\nElen. The shaman. The flesh witch.\n\nShe bit down her teeth, and followed after the curse currently controlling her little Ventrue. Black Blood and Jacob could be dealt with later. For now, her love mattered more.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nSneaking in the shadows with her injuries was difficult. She was injured, in pain, and ravenous. No more blood flowed through her, and she was forced to run on fumes to power her Cloak. No choice. If she let Athalia stop her, this opportunity might slip away. She had to, even if she had to drain herself until she fell into torpor, she had to do it. At this moment, nothing else mattered.\n\nJack shook his head, snarling. \"Athalia, you know damn well she has to die. She's a hunter, and\u2014\"\n\n\"Beatrice!\" the skeleton shrieked, and lifted her giant skeleton head to look around. Beatrice froze solid. She knows you're here. Not like you could hide from a monster of darkness, in darkness. Do it now, before she stops you. \"I know you're in here. The shadows will not hide you from me. I will\u2014\"\n\nBang.\n\nThe hunter beside Angela went down, and her blood splattered against the wood behind her. Beatrice had aimed well, and the bullet went straight. The hunter went down like a bag of sand, a hole in her head, and chunks of her brains everywhere. It was a church in a nightmare, so, it felt kinda proper to fill it up with murder. Angela yelped and jumped back, like a frightened animal.\n\nAthalia, the giant, black, alien skeleton thing with no legs, turned to face her, shock somehow chiseled into her bone face. Triss looked at her from halfway along the wall of the church, outside the pews, pistol hanging at her side.\n\n\"Thought I might need this,\" she said, \"cause my legs are all fucked up. In all the chaos, especially when S\u00e1ndor showed up, the real S\u00e1ndor, and broke Jeremiah's ritual, it was easy to take a moment to find a gun.\" And she knew how to use a pistol like this. You checked the slide and flipped the safety. Easy.\n\n\"Beatrice, do not\u2014\"\n\nJack stepped up to the woman, the huge monster creature, and glared. \"Athalia, the only reason I haven't broken you in two, or Dominated you and made you move, is because you're a creature, like me, like Trissy, like all of us. But if you don't get out of my way, I'll do more than break you. I'll make you watch.\"\n\nTriss winced, and looked away from the skeleton monster. Jack, this curse Jack, may have had more going on in his head than Triss realized, but that didn't change that he was so fucking twisted, it made her sick. Twisted, cruel, and sick. Jacob paled in comparison to how fucking mean the kid was, and the shit he was willing to do to make his desires a reality.\n\nAsking him to Dominate some kine, and bring them to Jacob for the execution and ritual to the Crone, may have hurt Jack, but this Jack must have enjoyed it.\n\nTriss looked to Angela, who clutched her knife in front of her, eyes wide, and panic ripping through her. This was the fucking cunt who killed Jack's sister, and nearly killed his mother. This was the psycho who stood with Jeremiah, shoulder to shoulder, when the man threw away the lives of his hunters, for a shot at killing Azamel. This was the bitch who killed her Superman. Triss was going to enjoy killing her.\n\n\"You're a fucking monster!\" Angela said. \"All of you! Fucking monsters, every last one of you. You kill humans, you eat them, you hunt them and you infect them! Monsters! Monsters! Monsters!\" Tears were in her eyes now, and she almost tripped over her fellow hunter's leg as she stepped further back. \"You killed Jeremiah! My father!\" She knew she was trapped. She knew the only reason Beatrice hadn't shot her too, was because getting shot to death was too quick a death for her. She knew the only thing standing between her and a painful, torturous end, was the monster in front of her, her mom, the monster she'd been looking to kill for years.\n\nThe struggle was blatant on her face, and Beatrice couldn't help but smile as she took a step closer.\n\n\"Angela, please!\" Athalia turned more, until she was looking at Angela on the stage. \"Please, I'm trying to help you! I know I couldn't help you before. I know I... that I ruined your life, daughter. Please, let me help you now, before these\u2014\"\n\n\"Fuck you, monster! You're not\u2014\"\n\n\"I am your mother, Angie!\"\n\n\"Don't call me that!\" The hunter's voice rose so high, it silenced them all. They all stood frozen, stunned, as Angela took a step closer to the stage edge, undoing her retreat seconds before. \"Jeremiah is the only family I ever had. And now he's dead! Killed, by monsters. All of you, you're nothing but monsters.\" Tears flowed from her eyes until they dripped from her chin. \"We would have done anything to make sure you all died. If I had to kill hundreds, thousands of innocents, to make sure your kind were wiped out, I would! It'd save more lives, in the end. And you!\" She pointed to Jack, eyes wide, hand shaking. \"You. You're the worst thing I've ever run into, ever dealt with. You\u2014\"\n\nBeatrice shot her in the stomach. The shock on Angela's crying face was delicious, for a second. As the weeping girl fell onto her ass next to her dead friend, Athalia turned and lunged for Beatrice. She didn't get far. Jack grabbed a pew, a long, heavy slab of wood, and slammed it down on the skeleton monster. Wood shattered, splinters and shards going everywhere. He hadn't been gentle, and Athalia crashed down into the floor of her nightmare church. She didn't get back up.\n\nBeatrice looked down at the skeleton monster, who had one of her huge arms outstretched, reaching for her. Triss was on the outside edge of the church, though, and as long as she stayed that way as she walked toward Angela, the monster couldn't reach her. It was hard, damn hard, to not look down at Athalia, as she marched toward her daughter, but she managed. Angela was the target. Ignore Athalia. Nothing else mattered.\n\nBefore Athalia could recover and get back up, Jack came around to her face, and met her eyes, her strange, skull eyes with small glowing white dots in them, and snarled.\n\n\"Do not move from this spot, and do not interfere.\" His voice was resonant, filling the church with far more bass than the little guy should have been able to summon. But, he did, and Triss felt his voice roll through her as the curse stared down into Athalia's soul.\n\nThe monster did not move.\n\n\"Please... Jack... she's my daughter.\"\n\n\"Your daughter killed my sister, and my sire. Your daughter stabbed my mother. Your daughter has slaughtered... I'm wasting my breath, aren't I? I could describe a thousand atrocities your daughter's committed, and it just wouldn't matter, would it?\" He squatted down in front of Athalia's huge, strange, alien skull, and shook his head like an annoyed dog trainer. \"Where's Fiona? What'd you do to her?\"\n\n\"Nothing. She's... in Azamel's lair, waiting. I told her Jeremiah was likely to go there.\"\n\n\"You really wanted to save Azamel, didn't you?\" Triss said. Fiona, spider monster Fiona at least, was supposed to help with the assault on the hunters if things went into the dream. They did, and instead of getting her help, Athalia told Fiona to stay out of the way, essentially. At least if Fiona was in Azamel's lair, she might have been able to help the old woman if Jeremiah had gone there.\n\nChrist, Athalia had risked their lives on that gambit. If any paranormals had died on this assault, Triss probably would have shot Athalia in the head, because she kinda deserved it. But maybe Athalia knew Jack, the cursed Jack, would be able to handle whatever Jeremiah threw at him. The whole time, she'd been looking for an opportunity to save her daughter, even if it meant they all died. It was hard to hate her for that, even if she did deserve the hate, and worse. She was a mom, doing mom things.\n\n\"... yes, I did. Azamel's been our caregiver, and we owe her much.\" The skeleton monster shook her head as her massive claws dug at the church floor. Did she have a way out of this nightmare chamber? Cause it certainly seemed like a dead end. Maybe she expected Angela to accept her help faster. Maybe she had another escape route, from this chamber into another, and into another, and into another, and Jack had simply caught up faster than she'd hoped.\n\nAs Athalia began to sob, the joy Triss felt drained away, until all that was left were the sounds of the weeping monster. It was a fucking sad night, for everyone. Try as she might to be elated over this, to find the joy she had moments before, Triss couldn't wipe away the cold feeling in her gut that only grew with every moment.\n\n\"She's a monster!\" Angela said, spitting blood over her lips as she did. \"You... you all are... monsters... every last one of you. Fucking monsters. You killed Dad. You... you...\"\n\n\"Please don't kill my daughter, Jack.\"\n\nJack stepped over Athalia like stepping over roadkill, and made his way toward the stage, and Angela. \"She's got to die,\" he said, speaking to Athalia, eyes on Angela, \"and you know it.\"\n\nAthalia may have been bound by Jack's Dominate to not move from her spot, but that didn't mean she couldn't turn around and watch the two vampires closing in on her daughter. She was crying. In her monster form, it didn't sound like sobs, but a strange, grinding rasp, quiet, and unnerving.\n\nJack and Beatrice stood on the stage, and looked down at Angela. She still had her knife, and she held it in front of her with one hand, like she'd be able to use it in a fight. But, she was sitting on her ass, back to the wall behind her, and her blood was pooling down the fingers of her other hand, pressed to her gut.\n\n\"Do you know who I am?\" Beatrice said.\n\nAngela hocked up a nasty, bloody bit of snot and saliva onto Beatrice's pants. Triss could have dodged it, even with her busted legs barely held together by what little vitae she had. But, something about the moment, the scene before her, of a defeated, crying human expending their last ounce of effort to spite her, demanded she let the hunter have her final act of defiance.\n\n\"I'll take that as a no.\" Beatrice squatted down in front of Angela, ignored the corpse next to her, and glared. She had a good glare, when she stared hard with her snake eyes. It was enough to unnerve other Kindred, let alone a bleeding kine. \"Beatrice. In the hospital, when you were going to kill Jack's mom, you killed a vampire named Julias. Julias was Jack's sire. He was also my lover.\"\n\nMaybe Angela realized what Beatrice had realized, that in this final moment, some rules weren't to be broken. Angela got to have her last moment of heroic defiance, and Beatrice got to have her evil villain monologue speech.\n\n\"Vampires don't have lovers. You have\u2014\"\n\nBeatrice snarled, loudly, until she felt her guts threaten to spill from how tight her abs clenched. She jammed the barrel of the pistol against Angela's forehead, hard enough to pin Angela's head to the wall. The bitch dropped her knife with the impact, and once her brains probably stopped rattling around in her head, her eyes opened wide, meeting Beatrice's.\n\n\"He was the love of my life, you fucking bitch! He was my everything. My... everything.\" Like a tidal wave, everything she'd been keeping down slammed into her. The sound of his voice, the touch of his fingers, the way he held her from behind and set his chin on her head, the way he told jokes, bad ones, the way he could be loving and soft one moment, then imposing and powerful the next.\n\nIf she'd been blushing life, she'd have cried tears, as she held the gun to Angela's head. This person was the reason the greatest thing she'd ever had in her life was gone, this fucked up psychopath, this broken woman, this idiot. All Angela was, was a disturbed kine who'd met up with a fucker named Jeremiah. He'd slipped into her life, filled the parent role, and channeled her fucked up brain into being a hunter.\n\nWith a gun to her head, Angela froze, but the defiance in her eyes didn't leave. Beatrice thought that, just maybe, Angela would break, and become a sobbing baby who'd whine and beg for her life. She didn't. As the cruel, harsh reality of a gun against her head sank in, Angela's face changed into something Beatrice never expected.\n\nShe looked relieved.\n\n\"Don't shoot her,\" Jack said, grin growing as he stared down at the woman. \"At least not yet. Come on, she killed Julias. I was there. She ordered another hunter to shoot him dead, when the man had given everything he could to save my life, Jack's life, and my mother's. She executed him, Beatrice. The man was on his knees, spent and ruined.\" He squatted down next to her, mad smile growing wider as he looked the woman in the eyes. \"We should have some fun with her at least. I can make her pull her intestines out, one foot at a time. I can make her do worse. I still owe her for torturing me.\"\n\nBeatrice slowly turned her head from Angela, to the demon next to her. Tony, Viktor, they'd been fucking assholes, but even they didn't talk like that. What the fuck.\n\nAnd now that she was here, with a gun pressed to the head of the woman who ruined her life, the idea of torturing her was fading away. Dancing in her blood, delighting in her pain, none of that appealed to her anymore. Maybe it was because Jack was next to her, providing a very clear image of what it'd be like to completely give into her Beast's dark urges. Or maybe it was because Athalia was forty feet away in the center of a creepy church, crying as inevitability finally came crashing down. Or maybe it was because Angela was nothing more than a rabid animal, deranged and violent, and needed to die.\n\nThere had been satisfaction, for a little while. Beatrice loved watching the fuckers get destroyed by Jack, but that part was over. Now it was just slaughter. She thought she wanted that. She thought she wanted to string Angela upside down, and slit her throat, after thoroughly beating her within an inch of her life. She'd plant Nightmares in the girl's head, if she could get past the warding on the woman's body. Jack could get past them easily, and he'd happily make her torture herself to death in ways Beatrice probably couldn't even imagine. And she thought she'd love that. Now, in the end, she knew she wouldn't.\n\n\"Do it,\" Angela whispered. Her voice was a wavering mess, on the verge of sobs again, but never breaking. Even as tears continued to stream down her face, she kept her eyes open, glaring at the two vampires. \"Do it.\"\n\n\"Alright...Angela.\" Triss lowered her head, stood up, and pointed the gun at Angela once again.\n\nThe world froze, as it had a habit of doing the past couple years. Often, something big would happen, something dangerous, something epic, something deadly, and everything would freeze as her brain tried to understand and process the sensory overload. But, this wasn't like those times. This was like that one other time the world froze for her, when she saw Jack's face, seconds before he told her Julias was dead. This was the world freezing because it'd grown so cold, it had to. This was the god damn universe telling her, forcing her to feel with agonizing cruelty, the reality of what was happening.\n\nA final tear dripped off of Angela's chin, and Triss pulled the trigger.",
        "The bullet hit Angela's head, and came out the back end, with all the horrific detail Triss didn't want to see anymore. She forced herself to watch, forced herself to meet Angela's dying gaze, and watch the light leave her eyes as her brains splattered the wall behind her. The pistol fell from her hand. The world ceased to be for a few seconds, an empty void of nothingness left in the wake of the gunshot. Vengeance had. Mission successful.\n\nAll she felt, was cold.\n\nThe pistol hit the wood of the stage, and Athalia shrieked. Her alien voice, fucking freaky as it was, sounded a hundred times worse as the Begotten erupted into horrible cries of rage and sadness. So much for victory. So much for feeling satisfied. All she could feel, was the cries of agony of Athalia, and not because of empathy. She didn't care about Athalia, not a lot, at least, but the mother's desperate screams captured the empty feeling overwhelming Triss's insides. This sucked.\n\n\"Trissy, really?\" Snorting, Jack kicked Angela's leg, hard enough that it snapped up over her other leg, and hip. Crack. \"We could have had fun with her. I was looking forward to making her rip her fingernails off.\"\n\n\"You said you wouldn't kill her, if she was defeated!\" Athalia screamed.\n\n\"And you said you'd come help us catch her.\" Jack turned on his heel, like he was dancing, and marched over to Athalia. \"We could have died, because of you. Give me one reason I shouldn't\u2014\"\n\nThe church doors opened. Beatrice knew who it was before the two became visible. The presence of the two vampires approaching the church had been massive, and obvious.\n\nThe Prince and the sheriff stepped into the church, Daniel first, with his ridiculously long sword held ready. Antoinette was only a foot behind him, and Triss smiled as she realized the Prince wasn't wearing any shoes or socks. Well, it did kind of make sense. Shoes, even combat boots, paled in comparison to the grip and feedback actual feet provided. And it wasn't like stepping on broken glass or a nail would stop an elder.\n\n\"Annie! Dan. Didn't expect you guys to come with Azamel. Didn't expect Azamel to get involved at all, really.\" Jack offered the two of them a small wave, before he unleashed a heavy kick into the enormous skeleton monster's skull. If he'd been heavier, he could have put more power into it, and likely pierced the bone. But he only used enough strength to send the huge skull away from him several feet, and earn a grunt from the still weeping mothe\u2014woman.\n\nTriss stayed on the stage, and watched the train wreck unfold before her. Daniel looked ready to fight, eyes locked solidly on Jack. Antoinette looked like she was ready to deliver a hard speech in a board meeting. Both looked ready to kill.\n\n\"Where's Elen?\" Jack said. \"I left her on the ground, when I knew you two were following me. Tempted to kill her, but, you know, she could be useful.\"\n\nThe two elders looked between each other, each offering only the tiniest sliver of shock through their expressions, before they both solidified to stone again.\n\n\"Jack,\" Antoinette said, taking several steps forward. \"The battle is over. Jeremiah is dead, and... so is Angela.\" Her guard was up, weight on the balls of her feet, and vitae coursing through her. Didn't need Auspex to feel the power flowing from her. She'd come ready for a fight, and for a moment, Triss couldn't figure out why. Did she expect to fight Athalia, or the two final hunters? No...\n\nShe'd come ready to fight Jack.\n\n\"Yeap. Mission successful. Though I'm wondering about this bitch right here.\" Again, Jack kicked Athalia, this time one of her enormous arms. Same result. Her arm flung away from the impact, crashing into some pews and knocking them over. If there was any wiggle room in Jack's Dominate for her to try and resist, or at least not flop around like a dying fish, she didn't use it. She lay there, sobbing, and turned her head toward the stage.\n\nThis whole fucking night sucked, and it was only getting worse.\n\n\"This is... Athalia, I imagine,\" Antoinette said. \"What has she done?\"\n\n\"Tried to save her daughter. Bailed out on helping us. I'm thinking, I'll break every finger in this monster body of hers. Teach her to\u2014\"\n\n\"Jack.\" Antoinette came closer, and stared down at the boy as she came within arm's reach of him. \"She was a mother who wanted to spare her daughter. And you should spare her.\"\n\n\"What? Why the fuck would I do that? She\u2014\"\n\n\"Jack.\" She came in closer again, until only a foot separated her from the tiny, shirtless Ventrue. \"You would not harm Athalia.\"\n\nJack stepped back. Triss couldn't see his face from where she was on the stage, but the body language was clear: startled, and then annoyed.\n\n\"Are you shitting me, Prince? She nearly got my crew killed. I could have died. Me. Me! I could have died because of her selfishness.\" The hypocrisy of the statement was probably lost on the curse.\n\n\"Jack... she is just a mother, who wanted to save her daughter. Surely you must be able to understand that.\"\n\nThe kid swung his arm out in front of him, dismissing her words as if they were utter insanity. \"She's a fucking... traitor... and...\"\n\nIt didn't come quickly, like Triss thought it might. Slowly, as if waking up from a dream, Jack looked around at the mess around him, the destroyed pews, the weeping monster, and the two bodies on the church stage. It was a sickening scene, and Triss found herself taking a step away from the two dead kine, as if she'd committed a crime. She hadn't, she knew that, but that didn't change that the scene of the two dead hunters was a sobering sight.\n\nSobering for more than just her. Jack looked up to her where she was, still on the stage, then to the bodies, then to Antoinette and Daniel, then back down to Athalia.\n\n\"I... I uh...\" He teetered for a moment, before reaching to grab his side, as if he'd been stabbed. \"I... I'm not... I won't...\" His other hand found his head, and he rubbed his hair in that way he always did, as he stared down at Athalia. \"I... won't... won't...\"\n\nAfter taking a deep, pointless breath, Beatrice walked through the pews, down to Athalia, around her, and then to Jack. \"It's over, man. It's... it's over.\"\n\nJack looked up to her, eyes wide with panic. He blinked a hundred million times, before looking to the stage again, and the two corpses there. It was a long moment of silence, except for Athalia's sobs, before Jack, trembling, took a few steps closer to Athalia's giant skull.\n\n\"You're... released.\"\n\nThe skeleton creature sat up, stared at the small boy standing beside her, and the world froze again. The tension was there, Triss could feel it, a string ready to snap. If it did, Athalia would attack, maybe try and slice Jack open. Maybe try and slice her open? Unless someone jumped in the way, Triss would get cut to ribbons if the giant, half-body skeleton creature nailed her with one set of those claws.\n\nAs the monster got up onto her hands, and her strange bone wings spread out behind her, she stared at Beatrice. And, Beatrice met her gaze, for a few seconds at least. There wasn't much to say. 'I'm sorry I killed your daughter'. 'Be happy I didn't torture her'. 'Be especially happy I didn't let Jack torture her'. 'I hate you for defending your psychopath offspring'. 'I can't imagine the pain you're going through'. It'd have all been empty words. There was no way anything Triss said could have come across as anything other than insulting, pandering, bullshit.\n\nThe best she could manage, was a few seconds of eye contact with the strange monster, and her two white dots for eyes inside her large, shadowy eye sockets. Then, she lowered her gaze, and lowered her guard as well. Yeap, she was done. Take your shot, Athalia, if you really want it.\n\nThe skeleton stared at her for many long, painful seconds, before she walked past her. She had no legs, so her huge hands were her legs, and her palms didn't make a sound as she walked across the church floor toward her daughter's corpse.\n\n\"We... we should... go,\" Jack said. Jack, the real Jack, the original, and not the curse that made Beatrice want to run in the opposite direction every time they met eyes, said that. Thank god. Thank fucking god. \n\nIt was over. Fucking finally, it was over. Are you happy now, Julias? Probably not.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nAre you happy now, Julias? Did I do good? Was it worth it?\n\nWhether Athalia left the gateway open, or had reopened it, he didn't know, but the hole in the grave was still there. Daniel went in first, then him, then Antoinette and Beatrice. As they jumped in, he could hear Athalia screaming in the church, weeping, and shrieking. It sounded like his sister did, his ghost sister, the wailing screams of a banshee.\n\nHe was going to be sick. He was a vampire, a corpse, and unless he Blushed Life, he wasn't going to be vomiting. But even without the Blush, he felt sick, to his bones, to his soul. \n\n\"I was... awake,\" he said, once the four of them were back in the forest of S\u00e1ndor's nightmare. \"Aware, I mean. I... I saw everything. I remember everything. I\u2014where's Elen?\"\n\n\"We can discuss the shaman later,\" Antoinette said. \"But know that she is detained.\"\n\nJack looked up at the white-haired vampire, and caught her glance for a moment. There was something there, in her gaze, that told him she wasn't saying everything, and hiding even more than was obvious.\n\n\"Triss, you good to walk?\" he said, looking back over his shoulder.\n\nHe almost wished he didn't. Of course she'd seen all the shit he'd done, the destruction he'd created, and the pain he'd inflicted. Hell, she'd probably been hoping he'd have been as nasty as he was, at first. As the mission went on, he could see her resolve waning, the more people died, the more horrible things got. And at the end there, when he'd tried to goad her into having a torture-fest, that conversation stuck out in his memories and made him sick. Really, really fucking sick.\n\nAngela was dead, though. Beatrice killed her; even got to have some final words, too. He felt happy about that. Athalia was devastated, and he felt horrible about that. Jeremiah was dead, killed by S\u00e1ndor, who apparently had more reasons than they realized to want the man dead. He felt good about that. But, Azamel had been seriously injured by Jeremiah and his crazy ritual. He felt sad about that. Much as Azamel was a bitch, she wasn't nearly as bad as Jeremiah thought she was.\n\n\"Yeah, I'm good,\" Triss said. She tried to meet his eyes, but it didn't last. Thinking the same thoughts he was, probably. Mission successful, but it didn't feel as good as they'd hoped.\n\nIt took a few minutes to get back to the clearing where all the shit had gone down. The fire was out, and the smell of cinders was in the air. As they broke through the walls of trees and into the open space, the damage the fire had done, and the much greater damage Jack and S\u00e1ndor's Horror had done, looked like a scar on the land. If it'd been real, people would have assumed a bomb had gone off, a big one, the kind used to blow up large buildings. But it wasn't real, and even as Jack walked toward the clearing where S\u00e1ndor stood, he noticed some of the damage was repairing itself. It was subtle, hidden, but in the corner of his eyes, he could see the trees regrowing, reforming, along with the grass.\n\nMulder and Scully came to him, as he knew they would. When they perched on his bare shoulders, they weren't as gentle as they should have been, and he winced as their claws scratched his skin. But it was understandable. They both crooned and crowed, and rubbed their heads against his neck and ears.\n\n\"I'm fine, guys, I'm fine.\" They didn't seem convinced. Or maybe, they were happy he was back, and not the other Jack. \"You guys were great tonight, really great. That... that other... Jack, he... he didn't...\" With a heavy hand, Jack gestured to the dead rats and crows that littered the forest floor. \"Don't listen to other Jack, if it puts your lives on the line, ok?\" They both nodded, as if they knew who other Jack was, and what kind of villain he was. \"Do me a favor, if you're up to it? Get Aaron, Jen, and her prisoners, ok?\"\n\nThe two crows nodded, and took off. Mulder remained for a few seconds though, and Jack could see he was hesitant to leave him; worried, about him. Jack leaned his head toward the bird, and nudged his nose into his friend's neck until the bird eventually took off.\n\nWith both birds gone, he scanned the clearing for his crew. Harcourt was hiding behind a tree, but in reality, everyone was just ignoring him for now. Clara, in her human form, stood by the altar, and she was looking over Othello, who sat against the side of the big rock. He was still in torpor, but at least he was out of the tree, and the hole in his chest seemed smaller than the branch he'd been skewered on would have left. Maybe Clara gave him some of her blood.\n\nMore surprising was Damien, and Fiona. Judging by how Fiona scooped Damien off the altar rock and clutched him close, borderline panic blatant on her spider legs and clutching arms, she'd just arrived. She wasn't crying, but she was close, and she trembled a little as she clutched the vampire tight to her body.\n\n\"Jack!\" she said, turning her head to stare at him; he thought. She had no eyes, so knowing if she was staring was hard to do. \"Jack, you... you're...\" Vrall's voice was so different to Fiona's, it took a second for him to adjust.\n\n\"Angela's dead,\" he said, and he couldn't keep a sigh out of the proclamation. \"All the hunters are dead.\" Barring those still in the city, or captured. No need to bring them up and ruin the victory.\n\nFiona's smile brightened, and she nodded before tightening her grip on the vampire. \"And Athalia?\"\n\n\"Alive, and unharmed. And...\" His head dropped again. Neck pain was in his future, if tonight continued as it did. \"She tried to save her daughter, but... but...\" She could have attacked him, in the church. She didn't. Much as she loved her daughter, she wasn't willing to attack Jack. At first he thought it was because she was afraid of the curse, but in retrospect, Athalia would have fought a volcano if it meant saving her daughter, under normal circumstances. No, she didn't hit him, because he wasn't her enemy.\n\nAnd they'd killed her daughter anyway. He winced and glanced back at Triss. She had the same look in her eyes he knew he probably did. Guilt. They shouldn't feel guilty. They'd saved other Kindred from these hunters, and got revenge on a woman who was a psychopath and needed to be put down anyway. Guilt was the last thing they should have been feeling. But the sounds Athalia had made, and the destroyed look in her alien eyes, had been horrible.\n\nThe whole fucking night was horrible. \n\nThe gargoyle turned to face them, but once he saw them, and the blood covering them, he looked satisfied. He got to his knees beside Azamel, and set one of his many hands on her side.\n\nAzamel. Jack gulped as he stepped around her titanic leg, and moved in front of her. She was on her side, breathing, but it didn't sound good. Who the fuck knew what a monster like this would sound like when breathing normally, but she sounded exhausted, and beaten. Her eyes were open, and Jack shivered as he came in close to her face, and those huge eyes. Her tusks were big enough that he had to step around them, as well.\n\n\"How you doing, Azamel?\" he said.\n\nThe elephant creature tried to laugh, a quiet \u2014 relative to her usual noises \u2014 trumpeting noise, before her trunk went still again. \"I live.\"\n\n\"You sure?\" He offered his best, goofy smile, anything to ease the tension and sorrow grating at his insides. \"You look like hell.\"\n\nA quiet chuckle from the monster announced his success. \"Yes, but I do live... for now.\" She tried to sit up, but even with four hands pressing on the grass, she couldn't get her body upright.\n\n\"Are you\u2014\"\n\n\"I will heal, little vampire. But it will take time, and I... I...\"\n\nHe winced as his head dropped, again. She didn't need to say it. The soul ritual or whatever the fuck it was may not have been completed, but that didn't change that Jeremiah did some damage to her, and not just to her, but her her, the stuff underneath the skin. She was wounded down to the soul, or her Horror, or whatever. They weren't wounds that healed like flesh, and she didn't know if she'd recover.\n\n\"S\u00e1ndor,\" he said, \"how are you feeling? I... should apologize. The curse, it\u2014\"\n\n\"I am free,\" the gargoyle said, bass-filled voice almost enough to make Jack's teeth rattle. \"Thank you.\" As if Azamel's exhaustion was contagious, the gargoyle fell onto a knee, before slumping onto his side against a tree, beside the giant elephant monster.\n\n\"I would have killed you, if that continued much longer,\" Jack said. \"Er, I assume if I kill your Horror, you\u2014\"\n\n\"Yes. That would kill me.\" He shook his head, and his mighty horns grazed against the tree behind him. It was quickly becoming obvious the gargoyle didn't enjoy chatting. A stoic dude. \"Azamel explained the curse to me. I... You have my sympathies, Jack.\"\n\nThe big gargoyle had sympathies, for him? The creature whose family had been killed by Jeremiah, and had been a slave to the man for who knew how long, was pitying him? The words struck Jack cold, and he took a deep breath as he tried to ignore the Beast in his guts.\n\n\"Thanks...\" He tried to look at Antoinette, who seemed content to follow and listen, but a quick glance was scarring. Despite the obvious anger he could feel, her frustration that he'd done something this stupid, it wasn't the most powerful emotion he could sense from her. She wore her mask, her Prince mask, as she always did, but he'd been around her for two years now, and could recognize the more subtle things that told how she truly felt. She could have probably hid those ticks, if she wanted to, but she didn't. \n\nThe truer emotion she was feeling, was more pity, redoubled by S\u00e1ndor's comment. She was pitying him, the same as the Begotten was. Every time she seamlessly avoided stepping on any of the bird, rat, or hunter corpses around, she looked to him through the corner of her eye, and bit her bottom lip slightly. Not in the sexy way, but in the 'oh god my poor love, how will he ever survive this?' sort of way.\n\nIn the past, it'd have pissed him off. Now, he was starting to think, he could accept a little pity. Just a little. After all, he was going to be pitying Athalia until she was likely to kill him.\n\n\"Clara,\" he said, and he walked over to where she sat, next to the unconscious Othello, against the altar rock. \"You ok?\"\n\n\"Yep.\" She saluted him, and even met his gaze. He wished she hadn't. There was something there, something new in her eyes, something that replaced the borderline flirtation she usually held when looking at him. For a second, he thought it was concern, and it was, but that was mostly buried under something else. Fear. Not a lot, not enough to overpower her expression, but he recognized fear.\n\nGod damn it.\n\n\"Um... hello.\"\n\nThey all turned around, and looked at the tree they all knew Harcourt had been hiding behind. He hadn't moved from there, since helping Damien. A frightened animal knew better than to move, when escape wasn't an option. They played dead, or bit anything that came close. Playing nice, on the other hand, wasn't the usual, but it was Harcourt's only choice if he wanted to live.\n\nOnce everyone slowly settled their monstrous gazes on the hunter, he froze solid, and for the life of him, Jack couldn't help but smile a little. Three monsters, four conscious vampires, and one werewolf, any of which could have taken on multiple hunters at once. And all of them were looking at Harcourt like he might be an enemy. Poor guy.\n\n\"Harcourt's the reason we were able to pull this off,\" Jack said, looking to Antoinette. \"We made a deal. There's two other hunters spared, and\u2014and there they are.\" Jennifer and Aaron came down along the village road, and while Aaron kept his cool, Jennifer did not. Her eyes were wide with fascination and fright as she looked the surroundings up and down. They kept the two hunters in front of them, and the two hunters looked more terrified than anyone else, by far. They were no threat.",
        "Two crows flew overhead, and Jack smiled up at Mulder and Scully as they found a perch on a tree nearby. Too many unknown faces around for them to feel comfortable on his shoulder.\n\n\"Marge! Dennis!\" Harcourt ran out to meet them as they bordered on the forest edge. Daniel reached for his sword, but Jack threw the man a quick glance. He wasn't in a position to boss a sheriff around, and\u2014maybe he was? Maybe he was strong enough to beat Daniel in a fight? No, he refused let the curse twist his thoughts. Logic, civility, they were his tools, his best tools.\n\nChrist, how easy it was to let power corrupt. Make a decision you think is the right one, and instead of dealing with others and red tape, simply brute force your decision onto everyone else with that power. It was fine as long as it was done with good intentions, right? The birthing thoughts of a tyrant.\n\nDaniel met his gaze, and held it for a couple seconds longer than Jack thought he would. For a moment, the possibility that Daniel would act and kill the three hunters was very real. But, Antoinette said nothing. She folded her arms across her chest, and watched the three hunters, ready to kill at a moment's notice, same as Daniel. To them, the hunters were the only threats in the room.\n\n\"You promised them amnesty?\" Antoinette said.\n\n\"I... yeah, basically. For Harcourt, and at his request, any hunters that laid down their arms.\" And now the tricky part, following through on promises he hadn't been in a position to make.\n\nJennifer ran to Beatrice, wrapped her arms around her, and squeezed. Aaron ran to Othello, and shook the man a few times by the shoulder before sitting beside him. Fiona guarded over Damien, clutching him tightly to her dark, beautiful spider body. S\u00e1ndor sat by Azamel, exhausted and, unless Jack was reading him wrong, ready to pass out. He might have even been ready to cry, if he'd been alone. Considering what he'd just done, and what Jeremiah had done to him, Jack wasn't surprised. Harcourt, and Marge and Dennis hugged each other in the chaos, and they were crying, Marge loudly, and the two guys doing their best to keep their tears silent. Christ, what a mess.\n\nAnd Antoinette could see it, too. It was a mess, a huge fucking mess. Decisions could be made later.\n\n\"I will take the three hunters into custody,\" she said. \"I will talk with them, and we will see what I allow.\"\n\n\"Fuck, really?\" Harcourt said. The reality of his situation was finally sinking in, the adrenaline of the action fading away. \"I thought, since I helped Jack that... um... I guess we don't have a choice, do we?\" He wiped away a tear, recovering quickly from his emotional reunion, but it was obvious he was terrified of what Antoinette might do to him.\n\n\"No. You do not. Understand that Dolareido is my city, hunter, and you three are prisoners of war. It is only by my good graces, and Jack's impulsive actions, that you survive our encounter at all.\" She came a step closer to the hunter, glared ice daggers into his eyes, and the man visibly shrank. \"Daniel, take them to the tower, and imprison th... constrain them, in the first floor cells.\" Well, at least she took a stab at some measure of civility.\n\nHarcourt looked to Jack, but Jack nodded back to him, confident. As long as the hunters didn't know some sort of weakness about Dolareido they could exploit, Antoinette would be lenient. Daniel probably less so, but he wasn't the one making the decisions. \n\nDaniel stepped up to the three hunters, and they quivered. They'd surrendered to a powerful and terrible enemy, as far as Marge and Dennis were concerned; it was painted on their faces. One wrong move, and they'd get sliced up, Kissed to death, or embraced against their will. A bunch of bullshit that wasn't accurate, at least not in Dolareido, but Dolareido was unique. According to Harcourt, vampires could get pretty nasty in other cities.\n\nYeah, as if the curse hadn't just unleashed a whole bunch of nasty for all of them to see. And now, when he looked to the hunters, he could see fear. A mountain of fear. A fucking galaxy of fear. As much as Marge and Dennis looked at everyone, especially Antoinette and Daniel, with considerable fear, they looked at Jack with abject terror. In the past, it'd have made him happy to know the hunters feared him so. Now, it only added to the nausea eating at him.\n\nElen's whereabouts itched at him. She couldn't have gotten up and walked away, not with a body like that. Someone had to have come and taken her, and the only people capable of that, Jack was looking at. No one else was in the nightmare. Right?\n\nAntoinette had dismissed worrying about her. Had she taken Elen somewhere before coming into Athalia's nightmare? No way, no time. Did someone else come? The portals were still open, and\u2014\n\n\"Oh shit! Are the doors still open?\" Jack said.\n\n\"The door I opened still is,\" Beatrice said. \"I can close it by ending the ritual. And it'll probably close with sunrise, anyway.\"\n\nAaron shook his head. \"The one Jeremiah cut open isn't. It closed the moment I stopped holding it open.\"\n\n\"Don't worry,\" Fiona said. \"I can take us out. Or... or S\u00e1ndor can.\" The spider woman looked \u2014 again, Jack could only guess she was looking \u2014 at Azamel, and sighed. \"Azamel will want to stay in the nightmare, for now, until she... heals.\"\n\n\"Yes, she will,\" the elephant said with the labor of someone breathing on one lung.\n\nIf there was any doubt that Azamel wasn't deeply injured, Fiona wiped it away. Azamel was hurt, badly. And fuck him, after all this, it was a sour note that really jived with the sour mess he'd left in Athalia's chamber, minutes ago. \n\nWhat was that old line? Gotta take the bitter with the sweet? For once, it'd be great if it was just sweet, and not bitter.\n\nGod, he missed candy. Heh, random thought.\n\n\"Surprised you didn't see me, Prince, when you showed up,\" Aaron said. \"I was in the... I guess I was literally in the wall, behind you. More in the flesh chamber, than in the nightmare. Could barely see through the hole.\" The nightmare did keep trying to go back to its original state, so that made sense.\n\nThe Prince considered that for a moment, tapped her chin as she looked at Aaron, before finally turning to Jack. \"Jack, come with me. The rest of you\"\u2014Antoinette turned and faced the unusual group\u2014\"should go home. S\u00e1ndor, I freed you from my cell, but if you remain in Dolareido, you will still be under my rule. If you decide to stay, visit my tower as soon as possible.\" Slowly, she turned to look back at Beatrice, who was sharing a weak hug with Jen. It looked like she wanted to hug harder, but the poor girl was beat to fuck. \"All Kindred present will visit my tower tomorrow night, understood?\"\n\nIf Othello were conscious, Jack got the impression he might say something stupid, like 'you're not our boss'. And then Antoinette would promptly break his arm, given the ice Jack could see in her eyes. It was true that, while none of them were members of the Ordo Dracul, the Prince was still the Prince, and they all had to answer to her. Normally she'd go through their bosses, but she was here, in person, and it was perfectly within her rights to dole out some orders, and punishment, if she felt like it.\n\n\"S\u00e1ndor,\" she continued, \"can you open a doorway to... somewhere convenient?\"\n\nThe gargoyle nodded, before gesturing to the rest of them with one of his many hands. \"You all can... stay, if needed. It's... been a long time, since others have...\" His voice trailed off, and he held still as he looked down. Completely still, like a statue. \n\nThe gargoyle, despite the booming bass and almost hidden rasp underneath his voice, talked casually, if rather unemotionally. It was strange. When something that big and ancient-looking spoke, you expected to hear something regal. And he did, a little, in how calmly he spoke, and how clearly he roared when killing Jeremiah. But now that the battle was over, he'd grown quiet, stern, and curt.\n\nPoor guy. He'd lost his son and wife to the fucker, and was turned into a tool. Killing Jeremiah, literally eating Jeremiah, was the ultimate revenge, and yet he still looked broken, and defeated. His wife and son weren't coming back. Mary wasn't coming back either, and neither was Julias. Revenge soothed the aching rage Jack felt in his guts when he thought of Angela, thought of her corpse with a bullet through the skull, thought of the cold body that couldn't hurt him or his loved ones anymore. Soothed, but didn't heal. He felt drained, and tired, just like how he knew Beatrice felt, and S\u00e1ndor too.\n\nAnd while Angela's corpse couldn't hurt him anymore, it could still hurt Athalia, hurt her like a dagger through the soul.\n\nBefore they left, Daniel walked around and collected the various artifacts, the strange occult items that'd been handed out to the hunters, and the big book that looked like someone with a chainsaw for a hand had read from it. Groovy. Well, it made sense they'd want the items, and better they take it, he supposed, than them just sitting around. And, better them than Jacob.\n\nJack looked to Beatrice one last time, before he followed Antoinette in the direction S\u00e1ndor pointed.\n\n~~~~~~~~~~~~~~~~~~~~~~\n\nUp the road, into the castle, and into the hallway they'd all come from. This time, leaving the hallway was as simple as opening one of the doors within, and stepping into a dark room. From the dark room, they opened another door, and voila, they were in Antoinette's Elysium Tower, in the hallway outside of the cell he recognized as S\u00e1ndor's.\n\nJack and Antoinette went first. Daniel and the three hunters followed behind. The sounds of their gasps was enough to make Jack smile a little, but the smile vanished when he caught a glimpse of Antoinette's icy stare. She was angry in that special way only a lover could be, but also combined with the anger mastered only by bosses, and queens.\n\nMaria and Michael were going to be livid with him, but also happy. He'd produced results. He'd done what everyone else had been failing to do. He'd defeated the hunters, and had gotten revenge. The first would earn him great esteem with the Invictus, and the second would seal his reputation with the First Estate as a Ventrue to not be trifled with. The issue was smoothing over his rashness with Michael; Maria, not so much, since she was officially no longer a true member of the Invictus. Michael held the reputation of the Invictus in great importance, almost the most important thing, and Jack was sure he could appeal to that side of him.\n\n\"You're... not going to kill us, are you?\" Harcourt said.\n\n\"I am a woman of my word,\" Antoinette said. \"You hunters believe us vampires soulless brutes, who indulge in murder for the joy of it.\" Sighing, she shook her head, and motioned down the hall of black marble. \"Do not think so highly of yourselves. We have souls, hunters, and that is how some of us are capable of enjoying murder. It is also how some of us refuse to give into such blood lust. Be happy we do have souls, hunters, else little would stop me from simply killing you to protect what is mine.\"\n\nAnd with that, Daniel took the hunters. They looked a bit stunned, on top of all the stunning they'd been getting all night, but said nothing as the vampire in the trench coat with the big sword guided them along.\n\nSoon, Jack was alone, with Antoinette, in a long hall of marble. The stone felt especially cold, and Jack struggled to keep from looking down. He failed, and looked at his filthy shoes. Filthy, but not filthy. The dirt was fading, dissipating, in a not dissimilar manner to Kindred blood, just without the tiny bits of flame and ash. It was material from the dream world. Made sense it'd fade away.\n\nUnfortunately, the damage to his clothes did not. He was shirtless, didn't have his weapons, and his pants had large tears cut into them. And now that everyone was gone, he did notice, for a tiny fraction of a second, an intrigued look from Antoinette. She liked what she saw. The look was replaced with frustration and annoyance instantly.\n\n\"Your phone?\" she said.\n\n\"My phone? I\u2014shit. It's still in the nightmare.\" Along with all my other gear. \"Guaranteed it's shattered.\"\n\nSighing, Antoinette withdrew her own, and began texting. It was funny, watching her use a smartphone. He almost expected her to give orders to a servant to do it for her, or for her to use speech-to-text, since that'd be more in line with giving orders.\n\n\"Your mother is now aware you live.\"\n\n\"My mom. Right... right.\"\n\n\"You are to meet with her in thirty minutes, in the recreation room on floor B5.\"\n\n\"Yes sir!\" He stood up straight, rigid, military posture, and saluted. But attempts at humor failed, unable to melt the ice wall standing before him.\n\n\"Let us go to my room, to speak privately. When we are done, you will speak to your mother. And then, you may contact the Invictus however you wish.\"\n\n\"Right, right.\" Sighing, he followed after her, down the many stairs into the deepest parts of her tower. The safe door was open, and once he stepped in, she pulled the enormous door closed, sealing them in her master bedroom.\n\nHe knew Antoinette wouldn't hurt him, but for a moment, he felt like a boy trapped in a cage with a tiger.\n\n\"Sit,\" she said, and she gestured to her bed. Gulping, he did just that, and waited for the inevitable verbal lashing. \"The hunters are defeated?\"\n\n\"Yes.\"\n\n\"I saw many corpses, some crucified upon trees.\"\n\n\"The ones on the trees were already there. And all the dead hunters on the ground in that clearing, Elen killed with her magic. I killed a few before that, on the way to that clearing.\"\n\n\"Ah, oui. I found one corpse at the door to the village, from S\u00e1ndor's castle.\"\n\n\"That one was Clara. I killed some others. You know I killed the hunters helping Angela. I killed some in the flesh chamber, too. But the majority were killed by Elen to fuel her rituals.\" Antoinette had Elen's knife now, since the old woman had dropped it when fleeing, but he doubted it was special. The book, on the other hand, must have been, and deadly powerful, if Antoinette could read it. And all the other artifacts, maybe they had special powers. \"I'm pretty sure Elen can do everything she does without any of those artifacts though, or she can create more.\"\n\n\"I see. Then... I find it terribly frustrating that Jacob has her.\"\n\nJack blinked at her, stood up, sat back down, and winced. \"Elen disappeared, didn't she?\"\n\n\"In a way. I noticed the presence of Black Blood, and her disappearing body. I can only assume Jacob, or perhaps Black Blood alone, came to the dream, and stole away the shaman when the chance presented itself.\" With a sigh to mimic his own, she came to sit next to him, took his hand, and set it on her lap.\n\n\"Fuck. I knew Black Blood could penetrate dreams, I just... I didn't think\u2014\"\n\n\"You did not think at all, my love.\" She stared down at his hand, but her expression softened considerably. Soon, she was stroking his knuckles with her left hand, while her right held his hand against her leg. With her head aimed down, her hair flowed down over her shoulder on the opposite side of her head from him, a white curtain reaching down to her other leg. \"So obsessed with defeating the hunters, you forget that other threats could take advantage. Forever the Carthians seek to hit the Invictus when they are weak. Forever, Jacob stirs chaos, and invites struggle to my city, in his barbaric need to weed out the weak. And... and, I know that you know, my love, about the unseen presence that lurks within my city, something powerful and deadly, with unknown intent.\"\n\nHe winced again, and looked down at her hands, same as she was for his. Damn it, she did know. He knew she knew, and he knew she knew he knew, but they'd never really said it, talked about it, and laid it out in the open. It wasn't the vampire way. Better to keep secrets, than to spread them and lose a valuable tool. Worse, better to keep the mouth closed, than have a loosed secret get someone killed.\n\n\"And... and because I went full ham attacking these hunters, I\u2014\"\n\n\"You created chaos, and these factions could have taken advantage in any number of ways. What if Garry had discovered what you were doing, my love, and arranged for troubles to befall you? Your curse may be strong enough to protect you, but what of your friends, Damien, Beatrice, Fiona, and Clara.\" The word Clara came out of her mouth with the tiniest hint of venom. \"This unknown thing that hides within my walls may have struck out in this madness. Or, Jacob may have... as he did.\"\n\nA slow, cold chill worked up through Jack's body. Jacob would have happily waited, while Jeremiah killed more vampires and monsters, until an opportunity presented itself for him to benefit. And to Jacob, anything to shake up the peace of Dolareido was a good thing.\n\n\"It's Jacob though. We can trust him, a little, right? I've seen him... seen him at his worst, I think, and I don't think he'd actively harm Dolareido. He loves this city, in a strange way.\"\n\n\"Do not underestimate the man's ability to deceive. And, do not underestimate an elder's desire to control and dominate.\" Her right hand slipped away from his, and slid over his shoulders. \"I can understand your actions, my love. For all my anger and annoyance with your brashness, I can both understand, and appreciate what you have done tonight. A great thorn has been removed from my side, and only time will tell if Jacob's actions will be a detriment to my city.\"\n\n\"But, uh, you seem pretty angry. Like, I'm half expecting to get staked and thrown in a dungeon, Antoinette.\"\n\nThat managed to pull a smile from her. Good. He was really getting worried.\n\n\"I am beyond livid... but not with you, not truly.\"\n\n\"Say what?\"\n\nHer right arm hugged him in close, tight to the side of her chest. \"Were you in your elder years, it would be easier to explain. My kind naturally incline toward decisions that pit time against our enemies. Rashness and bravado is how most young Kindred die, Jack. Of all the fates that can befall neonates, it is hastiness that has destroyed the most.\"\n\n\"But, I knew with the curse that I'd be able to\u2014\"\n\n\"And perhaps, that is what has angered me, Jack. To know that you willingly embraced its power, this mark of the Strix, terrifies me. Striges are our enemies, Jack. They exist to create chaos, and suffering. They exist to spread their destructive view that Kindred must be predators, and kine can only be prey; at least, so one Ordo hypothesis proclaims.\" She got up, and started to pace, one arm hooked under her breasts while her other, elbow held by the other hand, moved about in the air as she talked. A professor, giving a lecture, pacing around in front of a white board. \"It angers me to no end, that these trials fall upon you, a neonate barely out of his fledgling years. You should be deferring to your sire, who would then defer to the leader of your covenant. I can guarantee you, little Ventrue, that Michael would have voted against this attack, in favor of something safer.\"\n\n\"But more people would have died! I didn't have time to debate it, or get a second opinion. We only had hours, and\u2014\"\n\n\"I am not finished.\" Again she glared at him, and he froze. Gulp. \"People die. We accept that. It is in our best interest to make decisions that have the greatest chance of success, with a calculated loss. Surely you understand that. From the many conversations you and I have had, my love, I have come to know your mind, and I appreciate your ability to think logically. For all the words of poets and the courageous, life rarely rewards carpe diem. Those who take the path less traveled, those who pounce upon opportunity without looking where they leap, those who believe strong will and determination will lead them to success against their obstacles, fail. They, in overwhelming droves, fail, and often die. Life is cruel, my love. Do you understand that?\"",
        "He nodded as he looked down. Christ, she was reading his mind.\n\n\"Yeah, I understand. And... and for once, I felt it was worth the risk. With the curse, I knew I could do it, and... and...\" His face disappeared in his hands, and he leaned forward until his elbows rested on his knees. \"I had to do it. I had to stop them. I had to... to get her, Antoinette. I had to get her.\"\n\nThe great elder, done with her lecture, reached down, took his hands, and nudged them aside. He looked up, and she smiled down at him, a mix of pity and knowing on her face.\n\n\"You did, my love. Revenge has been had. Are you satisfied?\"\n\n\"No! No, I'm... I'm not satisfied. I feel horrible. I feel sick. I... fuck, the things I did.\"\n\n\"The things it did, Jack.\"\n\n\"I let it. And for a bit, a part of me liked what it did. Fuck, I told a guy to cut his own guts out.\" He shivered as he looked away. To Dominate someone to the point they'd not only commit suicide at order, but do it in torturous manner, was a level of Dominate he doubted many Ventrue ever managed. \"And, fuck me, it's not even that that's bothering me. Killing those hunters, even in the brutal way I did, that's not what's eating at me.\"\n\n\"What is?\" She sat beside him again, and resumed her previous position, hooking her right arm over his shoulders and pulling him to her chest.\n\n\"Killing Angela. Or rather, letting Beatrice kill her. You showed up, and the things you said, about Athalia...\" It was enough to shatter the curse's grip on him, just like last time when he saw his mother in the hospital. \"It wasn't supposed to be like that, you know? It wasn't supposed to be this... execution scene. It was supposed to be a battle! We were supposed to take her down in a big fight, and it'd be... I don't know, epic I guess.\" At least, that's what he'd been expecting. The curse, on the other hand, had been expecting to put Angela through some twisted shit, like a regular Jigsaw, but worse. \"But we didn't do that. We executed her like a wild dog, while her mom watched, screaming and crying.\n\n\"Fuck,\" he continued, \"I sound pathetic, don't I? You're centuries old, and must have been through a lot of horrible shit, right? This must sound like... it must sound trite.\" That borderline sounded like an insult about her age. Shit. He winced, but managed a small shrug as he smiled up at her. \"You know what I mean?\"\n\n\"I do, my love. I do. Another harsh reality, is that revenge is never a glorious battle, where the party seeking vengeance wins through grit and effort. And it is never the delicious dessert many others think it will be. Revenge is a messy affair at best, a colossal nexus of ruin at worst. Perhaps most surprising, is how revenge will always involve others, whether you wish it to or not.\"\n\n\"Athalia.\" He gulped down the rising bile in his throat he knew wasn't there. \"I've... really fucked up, haven't I? I let Jacob capture Elen, and I've strained our relationship with the Begotten and Uratha.\"\n\n\"Perhaps.\" Her voice had a hint of anger, but also a touch of contemplation. She was looking for something from him. He knew what.\n\n\"And I've strained our relationship. I made you worry. Hell, I made Mom worry.\"\n\nBingo. With a subtle smile, she nodded.\n\n\"I will not punish you, my love. And I do not imagine Michael will either. For all your rashness tonight, you defeated the hunters without a single casualty. While it frustrates me to no end that you gambled, the reality is that your gamble paid off. We will worry about Elen another night; Jeremiah and Angela were the threats, while she was but a tool.\" A very scary tool. \"And, while that blasted spirit has taken the shaman, I acquired many artifacts tonight to add to my collection.\"\n\nHe blinked at her, and the smile she gave him made him shiver again, for a completely different reason. It was easy to forget sometimes, that the Prince was a dragon, a member of the Ordo Dracul, and she was devoted to her covenant, a covenant that did secret things in the dark. Now she had Elen's book, and her artifacts. Just because she wasn't as nasty as Jacob, didn't mean Antoinette didn't do her own dangerous, maybe even nefarious things in secret.\n\n\"Can we... not talk about unusual, spooky, magical things for a while?\" he said. \"No talk about the curse, or Cr\u00faac rituals, or flesh magic, or magic of any kind? Kinda just want to do the vampire thing for a while. Normal vampire stuff.\"\n\n\"Normal... vampire stuff?\" she asked, an eyebrow raised. \"I received word from Elaine not long ago. She will arrive in three days. With the hunters defeated, I believe I will host a ball, both in her honor, and to celebrate your victory.\"\n\n\"A ball? Like, last time?\"\n\nAntoinette laughed and stroked his buzzed hair. \"Yes, though with, perhaps, less sex. I do not wish to scare my new childe with such displays, yet.\" A thought danced along her eyes, he could see it, and she looked up before tapping her chin with her left hand. \"I would not be surprised if Jennifer tries to escalate that situation, in an attempt to push Beatrice past her sorrow, now that vengeance has been had.\"\n\n\"I doubt it'll work. When Beatrice killed Angela, she was... she was pretty...\" Broken.\n\nBut, sad as that was, sad as he felt he felt about Athalia, and about how Angela died, and the thousands of animals he sacrificed, he smiled. Yeah, tonight sucked. It really sucked. Clara, Triss, Othello, and Damien all nearly died. The slaughter had been a hectic mess that didn't go the way any of them thought it would. Azamel was injured, and might die. And Athalia lost her daughter, something Jack doubted she'd ever forgive them for. But for all that shit, he had so much to be happy about. Stop being a dumbass, stop focusing on the negative, and look at the positive.\n\nHe smiled because Damien saved S\u00e1ndor. He smiled because the hunters were all dead, every one of them except three, who were now prisoners, and some leftover drifters. He smiled because none of his friends or crew died. He smiled because Julias's murder had been avenged. He smiled because, now, he could begin to heal, and so could Beatrice. Maybe his mom could, too.\n\nAnd, maybe his sister could, too.\n\n\"And, I would not be surprised if Elaine attempts to escalate the situation in a similar manner. She will delight in teasing you, knowing that you are my lover.\" She chuckled, a hearty sound rich with joy and memory, and she shook her head to dislodge it. But her smile remained. \"I feel that, perhaps, I corrupted her when we were younger.\"\n\n\"Wait, you corrupted her?\"\n\nAntoinette nodded. \"Indeed. We visited each other dozens of times in our most promiscuous years. I taught her much of the joys of sex, and how to relish each orgasm with precision and delight.\"\n\nJack stared at her, and gulped. \"So, um, you've... slept with her.\"\n\n\"Indeed, hundreds of times.\"\n\nAntoinette's story about the orgies she'd had with kine, when she'd owned her own castle, now suddenly included another vampire, another dominant figure doing things in the middle of all that flesh. Good god.\n\n\"With kine around?\"\n\n\"Oui, though there were many times no kine graced our bed, and we had only each other for company. She is quite talented in the erotic arts.\" She said it like it was the most casual thing, that her ex-girlfriend from centuries past, was someone she'd fucked a fucking fuckload. When she saw his expression of shock, she laughed again, and rubbed his buzzed hair. \"You have nothing to fear, my love. We were never romantic with each other. Friends with benefits, as it is said. But I know Elaine, and she will tease you for the game of it. Be careful with her.\"\n\nFriends with benefits. Uh oh. The phrase hit a note in his head, and he couldn't help but sit up straight. And naturally, Antoinette noticed, and the evil grin she donned struck him still. He knew that grin. That was her 'I've thought of a new personal barrier of yours to shatter, my love' grin. Double uh oh?\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nHe woke up with a jolt, sat up straight, and regretted it instantly. Through the pain, he reached for his sword. Gone. He reached for his pistol. Gone. He reached for his silver knife; still there.\n\n\"Calm yourself, Damien,\" a familiar voice said. Half of him shivered a bit at the sound, and another half relaxed as he attached a person to the familiar voice. Vrall, Fiona's monster half. Fiona was here.\n\nDamien eased back, and felt his spine press to a rock. A turn of his head showed it was the altar he'd been shot on. Beside the altar and beyond it, was a gigantic creature, looming, two massive horns donning its... his head. S\u00e1ndor. If the gargoyle was just standing there, not trying to rip him in half, then Damien had been successful in freeing him.\n\nA smile sneaked onto his face as he looked around some more. Yes, there was Vrall in her spider silk dress. She was hovering over him, her eight spider legs pressed to the grass, and her two human arms reaching down and stroking through his hair. Beside him was Othello, and Clara in her human form. She had a knife in her hand, and was leaking blood from her wrist into Othello's mouth.\n\nOh. Clara had given him blood. The last time he'd awoken from torpor, he'd had to fight a mild vitae addiction, and partial Vinculum with Beatrice. A werewolf's blood would elicit no such reaction, and from what he could gather, it was potent blood. The hole in Othello's chest began to close almost immediately; not completely, as it was a large wound, but a day's sleep with some wolf blood in his gut would heal that, Damien was sure.\n\n\"Thank you,\" he said to Clara, licking his teeth the moment the words were out. He could still taste her. It was different from both kine and Begotten, richer, and so full of life it was almost overpowering.\n\n\"Don't sweat it. You did good, real fucking good.\" Clara put the knife away, and gestured to S\u00e1ndor. \"Tall, dark, and handsome over there owes you his life. Well, he would have, but he saved our asses. So, kinda even, I guess.\"\n\nDamien grinned slightly, and looked to the gargoyle. \"Is that so?\"\n\n\"It is,\" Beatrice said. She was sitting on a nearby rock, one of the stones in the center of the clearing. Jennifer and Aaron stood beside her. \"He interrupted Jeremiah's ritual, which you missed. Fucker nearly killed Azamel.\"\n\n\"Is Azamel\u2014\"\n\n\"She lives,\" the gargoyle said. And then said nothing. The creature's voice boomed, and Damien found himself staring at him for more than a few seconds, before he looked around yet again.\n\nClara chimed in. \"She's been hurt badly. Mark says she's going to stay in her lair for a while. He helped her get back.\" \n\n\"What of the hunters? Jeremiah, and Angela?\"\n\n\"All dead,\" Beatrice said. There was no joy in her voice, and that confused Damien. Why wasn't she happy?\n\n\"Mission successful then?\"\n\nThe Nosferatu nodded. While she was sitting on the rock, she had her left arm out and draped over Jennifer's shoulders, as if she'd fall over any minute. She looked like she might.\n\n\"Yeah, mission successful. The Prince showed up with the sheriff, and took Jack out of here, along with Harcourt and the two hunters who surrendered. She took Jeremiah and Elen's shit, too.\"\n\n\"What of Elen?\"\n\nShe shook her head. \"Don't know. She didn't have her, and Jack didn't kill her.\"\n\nHe tried to sit up again, and again regretted it. Looking down revealed many holes in his chest, mostly closed but not completely. The rifles had pushed their bullets straight through him, so healing wouldn't be as bad as it could have been, but it was still a painful task, and he looked forward to sleeping come sunrise.\n\n\"She escaped?\" he said.\n\nBeatrice shook her head. \"From the look I saw on Antoinette's face, I... I don't think she did. I don't know where she is, though. Maybe the sheriff took her when we weren't looking.\"\n\nHe shivered again, thinking of the magics the strange shaman had done. The symbols carved into the flap of flesh he'd ripped apart would never fade from his mind. The sight of the corpses on the trees calling out his location, and the sound, wouldn't either. The corpses were silent now, but still there, and he grimaced as he looked at them, before back to the spider woman stroking his head.\n\n\"The hunters are defeated,\" he said. \"I... I think that means we won?\"\n\n\"Yep,\" the werewolf said, getting to her feet. Her wrist wound didn't close as quickly as it would have if she were in her werewolf form, and Damien glanced to it for probably a little longer than he should have. A lick of his fangs earned a subtle, but very real jerk of his hair from Fiona, hidden so the others wouldn't notice. Ok, yeah, don't go staring at other girls, even if it's just because you're hungry.\n\n\"S\u00e1ndor,\" Aaron said, walking over to the colossal creature as if he was walking over to just another vampire. \"The others said you ate Jeremiah.\"\n\n\"I... did.\"\n\n\"Do you eat the flesh of humans to sustain yourself?\"\n\nThe titan shook his head, and began to walk around the clearing circle. He had no trouble scooping up corpses, one per hand, and setting them in a lone spot by the clearing edge. He wasn't so big that a human body fit into his palm like a fork, but he was fifteen feet tall, and was big enough he could scoop each up and hold them, like a human holding oddly large dolls. If the humans were alive, it would have been terribly uncomfortable, their own weight causing them to folding like pretzels around his fingers and palms.\n\n\"I... feed, upon those I hunt. They must know that I hunt them, and it is that fear I feed on. I... often eat the flesh. I often must.\" With time, he collected all the bodies, including the ones crucified to trees, and sighed as he looked down at the pile of dead.\n\nIt seemed obvious that the man didn't like who he was, or at least didn't like how his Horror operated. Fiona had to feed on the fear of the guilty, and it only worked if they deserved to be punished. A more specific taste, but she didn't have to literally eat and kill her prey. She only did that if she wanted to gorge herself. If S\u00e1ndor literally had to hunt and kill \u2014 or eat \u2014 his prey to sustain himself, that was a far harsher hunger to satisfy.\n\n\"Jack,\" Damien said, \"or the Prince, should be the one to welcome you to the city in an official capacity. Has he, or did the Prince when she was here?\"\n\nThe titan nodded, a lazy and tired motion, before he started digging up the ground with his claws. The earth gave way to his fingers easier than it should have. His nightmare, his rules.\n\n\"Yeah, Antoinette told him he had to drop by for a sermon,\" Beatrice said. \"But, he doesn't need a fucking lecture. He's here. He\u2014\"\n\nIt was Damien's turn to shake his head. \"You know the Prince is going to want to speak to him, explain the rules to him.\" Blinking, Damien looked to the gargoyle. \"That is, of course, if you plan to remain in the city. It's not your home, is it?\"\n\n\"It isn't. And for now I... I will... remain within my lair.\"\n\n\"It is nice in Dolareido,\" Vrall said. \"Now that the hunters are dead, there is only peace in Dolareido... of a sort.\" She smiled down at Damien, leaned down, and kissed his forehead. He tried to lift his head so he could properly kiss her, but craning his head back didn't agree with him, and he stopped the motion short before he could ruin the moment.\n\nOnly when Fiona pulled away, did he notice Beatrice looking at him. There was venom in her eyes, and sadness on her face, and when she noticed him noticing her, her eyes fell away. Or maybe, it was when he noticed her noticing both him and Fiona, that she looked away. Right, Julias.\n\nSomething had happened. Something, while he was deep in his forced torpor, had destroyed the joy he would have otherwise expected to see upon learning the hunters were defeated. No one looked happy except for Fiona, and even she seemed worried. Did everyone care for Azamel this much, or was it something else? Jeremiah was dead, dead at S\u00e1ndor's hand, and yet the gargoyle seemed morose. Angela was dead, surely at Beatrice or Jack's hand, and yet Beatrice seemed quite defeated.\n\nWas this how he'd have felt, if he'd managed to kill Antoinette and Daniel, when he assaulted the Elysium Tower? If the revenge he'd wanted for so long had been obtained, would he have felt defeated for acquiring it? Perhaps, especially once Lucas's madness became obvious.\n\n\"Can you help me up?\" he asked.\n\n\"Of course.\" Vrall held him up, and he hooked his arm over her shoulders. Her feet, or rather, pointy blade things, never touched the ground. If she did try to walk on them and them alone, she'd likely sink a foot into the earth, considering how sharp they looked. But with her eight spider legs, enormous and smooth, jutting out of her back and tapping along the ground around her, her foot points stayed an inch above the ground, hovering.\n\n\"I'd love to get a drink,\" he said, \"but I need to speak to Michael and Maria.\"\n\nThe werewolf, of all people, was the first to get up and agree, nodding. \"Makes sense. Burning resources hunting for hunters that aren't a problem anymore\u2014\"\n\n\"No, wait,\" Damien said. \"That isn't true. Harcourt said there were hunters still in the city, maybe a dozen.\"\n\nBeatrice shrugged, as if the effort to lift her shoulders was colossal. \"Harcourt will deal with them. And the ones that don't listen to him won't be a big threat without Elen to let them cheat shit.\"\n\nTrue. The shaman's magics allowed the hunters avenues of attack and retreat that bordered on cheating.\n\nHe laughed, and leaned the side of his head toward Vrall. His temple met one of her gorgeous horns, rather than meeting her actual head, but it was the side of the horn, and he set the weight of his head against it.\n\n\"It's hard to relax, isn't it?\" he said. \"I'm trying to relax, about our success, but a part of me is telling me I shouldn't relax, that I should keep my guard up.\"\n\nHe shouldn't have said that. Everyone looked at each other, and where he should have found shock or confusion, he found only knowing eyes. They all felt the same way, and while he'd only thought Fiona and Jack were in the know about the mysterious threat lurking within Dolareido, their expressions suggested otherwise. Everyone knew about it, or knew about something.\n\nLovely."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "paranormal romance",
        "vampire",
        "werewolf",
        "monster",
        "romance",
        "romantic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-07-ch-17"
}