{
    "title": "Obsessed With Anal",
    "pages": [
        "Dear Readers,\n\nThis is a story that I immensely enjoyed writting. It has a bit of everything in it except quickies. I hope that you all enjoy it. Comments are appreciated!\n\n~M\n\nChapter 1\n\nI loved masturbating. My problem was that I loved it more than having sex and it was getting frustrating. I didn't want it to be that way but I couldn't seem to help it. I figured that it was just something wrong with me. \n\nOne of my problems was that I was always dissatisfied after sex. Two minutes after my guy left or went to sleep; I was masturbating to get myself off. It wasn't that I didn't cum during sex, but the orgasms that I had during masturbation were so much stronger that sometimes I did not even want sex. \n\nThis was making me stay horny. I liked sex but I was sure that if I could have great orgasms then I would love sex. I hated to admit it but my problems with sex were entirely my fault. I just could never express what I wanted and could never let go entirely. When I masturbated I could let my fantasies go crazy and didn't have to be shy about them. \n\nI was always too shy to voice my opinions about sex with whoever I was with. I never initiated sex. I never told them about what I wanted to try. It was always up to them. Therefore, I was always bored during sex. I just didn't want to have to tell my guy what to do. I felt like they should want me enough to explore and figure me out. \n\nI felt bad that I was always so horny. Some of my boyfriends got frustrated and felt that I needed to initiate sex. I just could not do it. Part of me felt like it was my guy's responsibility to take the reins, but another part of me secretly felt that I would just go completely wanton if I began to assert myself sexually. My fantasies were always on the kinkier side and truth be told, they scared me a little.\n\nMy fantasies tended to range from tender love-making to full out bondage. I'd never tried anal but it had been a persistent thought for a while. Besides the fact that I was shy about sex, I also wanted to save something for when I got married. I wasn't a virgin but there were a lot of things that i'd never done. I wanted to keep some mystery and experience everything with the person i'd spend the rest of my life with.\n\nUnfortunately, I wanted more and more out of sex but was getting the same results. I began masturbating more and having sex less. I hated the fact that I was compiling my grocery list or wanting to watch tivo while having sex. While masturbating I was beginning to fantasize more and more about doing anal.\n\nI noticed that the pornos that I watched were beginning to lean more towards doing anal. I had bought them without consciously knowing why. It was getting so that it was my only fantasy when I masturbated. \n\nPretty soon anal was all I thought about but I wasn't into my boyfriend enough to do it with him. Plus, I really did want to save that for whenever I got married. Now my problem was that I was horny no matter what I did. I would have sex and masturbate afterwards. I would masturbate but then feel empty.\n\nI realized that I needed an outlet for my pent up desires and I needed it soon. I felt like I was turning into an absolute hornball. I guess I just loved the idea of achieving the ultimate orgasm and that is what made me stay so horny. However, the reality of my situation left me jaded and feeling like sex was overrated. \n\nWith that being said, I decided to dump my current boyfriend. Don't get me wrong, I knew that the sex was more of my problem than his, but he was a jerk on top of it. I was willing to try going without a man, but I was still so horny that I upped my masturbation to three times a day. \n\nI knew that deep down I did not enjoy sex as much because I had a hard time just letting go and letting my body feel everything. In my fantasies I could be as loose and free as I wanted. In reality I was uptight, shy, and unsatisfied. I didn't even know where all of my buttons were so I knew that without me speaking up, whomever I was with would not hit them. \n\nI figured that I was obssessing over anal because it would help me give up control in an area of my body that I really had to trust someone with. I thought that it would break through my shyness and my control. I wanted to have a complete sexual experience and I couldn't do that if I remained so uptight. I had wanted to wait until marriage but I needed a solution fast. I was spending more time taking showers after masturbating than enjoying the life I had. \n\nI guess its past time that I introduced myself. I am Kristen; I'm 23, 125lbs, 5'2, with curvess in all the right places. I have all natural 34DD breasts. I am a thick girl, but I work out to keep it all toned. I have shoulder length brown hair with small facial features. My eyes have a slight Asian slant that I thank whoever my ancestors are everyday for them. Finally, my lips, perhaps my favorite feature, are the only thing on my face that is thick and lustrous. I am of African descent. I was pretty sure that I wasn't one hundred percent African-American, but that is neither here nor there.\n\nI had decided to enlist the help of my best friend. He had been my rock through all of the bad relationships and I knew he would help me out. I knew that what I was about to ask him might put a strain on our friendship, but I was desperate and I knew that he would eventually forgive me. I called him up and asked him to come over. We were the odd couple. He was tall and lanky, blonde spiky hair with bright blue eyes. That is about where the oddities stopped. I could talk about anything with him and I had, everything except my growing obsession with doing anal. I needed to butter him up, so I made his favorite pie, chocolate cr\u00e8me.\n\nHe walked in and sat down. I placed the pie in front of him and gave him a fork. He dug right into the center and began working his way out. Wow this guy could eat. It never ceased to amaze me the amount of food he was able to put away. I walked over to the couch while he ate. I was flipping through channels when he swiveled around on the barstool and asked, \"What do you want Kris?\" Damn, half of the pie was gone. He had chocolate on his mouth and I smiled.\n\n\"Jake, what makes you think I want something?\" He rolled his eyes at me and pointed to the quickly diminishing pie that he hadn't stopped eating yet. \"You made my favorite, you only do that when you want something, so spit it out.\" I handed him a napkin and went back to the couch. I wasn't sure where to start.\n\n\"I need your advice on something and i'd like you to listen to the whole thing before you say anything.\" He just nodded and kept eating.\n\n\"I know why I end up dumping or being dumped by all of my boyfriends. It's as if I have this block or wall when I have sex. I am too afraid to speak up and tell what I want, partly because I feel that they still wouldn't get it right, and partly because I don't think that it would break down the wall anyway. I have a problem letting go. I want sex to be an experience that I can lose myself in. I find myself thinking of all the things I need to do while i'm having sex, and sometimes i'm putting together my grocery list or thinking about tivo during sex. I'm so frustrated, that's the real reason I don't have a boyfriend.\"\n\nI risked a glance at him and he was starring at me with his fork poised in the air. Damn, I had shocked him already. I thought he would at least be stuffed off pie and lulled into a false sense of security before I started springing the big stuff at him.\n\nI held my hand up to signal to him that there was more. He arched his eyebrow but thankfully said nothing. \n\n\"I've been thinking about this for some time, and I think that I have a solution. You know that I have had this fascination with anal sex, but you also know that I wanted to wait until marriage. I've decided to let go of that conviction because now its all I can think of. I think that letting myself be vulnerable enough to have anal sex will knock down the wall between sex and me. So what do you think?\"\n\nHe had all but forgotten about the pie and that was not a good sign. \"Kris\", he sighed, \"I don't think that your problem can be solved with anal sex. You're a romantic to the fifth power. I think if you really love someone then you won't have this problem and I know that if you don't wait to have anal sex then you'll regret it.\"\n\nI felt like crying. \"I know Jake, but that doesn't help me now! I'm so horny all the time and I don't know what to do about it because sex is no longer satisfying. I don't know what to do. It is getting to the point where all I think about is getting my ass split open over and over. I've never told anyone, but i'm scared that if I do let go then i'll be a slut. That i'll want it and need it all the time and that i'll do anything to get it. I don't know how to do anything half-way. Either I am unsatisfied because I hold back or i'll be a slut because of an overactive sex drive. You know how I feel about love and marriage; I just can't be a slut.\"\n\nI didn't even know that i'd started to cry until Jake handed me some tissues and came to sit by me. He wrapped his arms around me and kissed my temple. It was a comfortable position that we had been in countless times before. I leaned into him and was vaguely aware that he seemed much larger than his lanky frame suggested. \n\n\"Ok so I understand now. Why don't you go out and meet a nice guy, make sure you trust him and then ask him to help you out. You're a sexy girl, i'm sure that you can get someone. And once you really trust them, you can reconcile within yourself that not waiting until marriage was something that you had to do for your wellbeing.\"\n\n\"J, you know I don't trust people easily. It would take forever for me to get that close to someone. Plus, with all the jerks out there, they would tell me they love me just to get at my ass. I just don't want to risk it.\"\n\n\"Kris you aren't giving yourself a lot of options. I know i'm more of a sounding board than any actual help, but you've painted yourself into a corner. You want sex, but sex is not satisfying. So, you want anal to try to shake things up, but you don't trust anyone to pop your anal cherry and you don't want to wait for love anymore. Have I missed anything?\"\n\nThis was my chance, it was now or never. My heart was racing and if I were light, I swear that I would be blushing beet red. \"Yeah Jake, you did miss something... I trust you.\" I starred at him head on and he moved to the other end of the couch. His mouth was partially open and the look would have been comical had I not been so nervous. \n\n\"This is what you wanted. You didn't want my advice, you want me to... to... you know! You can't really want me to do something like this. We have never gone there and for good reason. You don't love me, we don't like eachother like that i'm not even your type. Plus, i'm gay! I just can't.\"\n\nI rolled my eyes and thought, not the gay thing again. \"Please Jake, I know that we're best friends, and I have respected you a lot by not prying into the whole gay thing, but I just told you something really deep and important about me so I thought it would make you come clean about being gay. Fact is, I do not think you're gay. For whatever reason, you don't date, but I still don't think you're gay.\"\n\nHe was turning beet red by now. Oh man, I never wanted to embarrass him or argue. \"Why would you say such a thing? I wouldn't admit to being gay if I wasn't, what kind of person does that?\"\n\n\"I know, I just figured that it had to be something big in order for you to lie like that so I didn't push. However, you can't deny that you get an erection looking at women. How many times have you plumped watching something on television? And there have been numerous times that you were erect without there being a male in sight. How do you explain that?\"\n\nHe hung his head and I knew that there were tears in his eyes. I hugged him and he just sat limply holding me back. \"I just can't tell you, I hope you understand. No, i'm not gay, I don't know why you didn't call me on it before, but i'm glad you didn't. I don't know if I can help you with your problem. There are so many reasons for me to say no, reasons that you don't even know but i'll think about it.\" He got up, got the rest of his pie and walked out.\n\nWell, that didn't go like I wanted it to but it wasn't a complete disaster. At least he remembered the pie.\n\nChapter 2\n\nI had heartburn. I'd had it since Kris came to me with her proposition. She couldn't have stumped me more if she'd told me she wanted to try women. It had been a week and I still hadn't seen or talked to her. She knew I wasn't gay, man it was a relief but it also filled me with a sense of dread. Now that she knew for sure, she wouldn't have far to go to find out the truth. I just couldn't see going to her and saying, \"Hey Kris, I told you I was gay so that you wouldn't know that I'm a twenty-three year old virgin who is in love with you.\" \n\nShe'd even seen me get erect. Man, I couldn't be more embarrased. At least she hadn't guessed that it was her who made me plump up. She hated to wear underwear when she was at home so everytime I was at her house I saw nipple or the roundness of her ass uninhibited by jeans or almost anything for that matter. Most of the time I could ignore it but when she was overly excited she tended to jump and skip. It was like softcore porn for me. I just sighed and took some tums.\n\nWhen I first met Kris, we were on the same floor in the dorms. We became friends almost instantly seeing as both of us were English majors. It was fun to have someone to just talk to who didn't want me to go to some party and fuck anything that moved. I know college is supposed to be the craziest time for students, but we were the only sensible ones. We gorged on ice cream and every kind of movie imaginable. In our second year of college, I started to fall for her, but being her friend, I knew that I was nowhere near her type. I'd only seen her date dark skinned guys and no, I don't mean just inside her own race. So far, she'd dated a Cuban, a Hispanic, and an Indian amongst a host of black guys. All of which were large football types. I couldn't be more different. \n\nIt wasn't as if I was trying to be a monk or something, but in high school, i'd gone through a really awkward phase. I wasn't exactly a geek, but i've never been extremely big. Needless to say, I had an inherent shyness that didn't enable talking to girls a lot. When I met Kris, I think we clicked so well because she didn't pressure me to date or even get laid. She was just supportive of me in all my decisions. Then all other girls started to pale in comparison to her so I just stopped dating. When Kris called me on it, that high school shyness returned and I chickened out. I told her I was gay. That may not seem like the easy way out but trust me it was. I knew she'd leave me alone about it and she did. \n\nWhen I saw that she'd made my favorite pie I knew she wanted something. I never told her that she really didn't have to butter me up because there was little I could refuse her, but on the other hand, who'd pass up free pie. When we were in college it used to be vending machine snacks but after we moved into our respective apartments, it became lip-smacking pastries. Normally when she made my favorite, whatever she wanted was big. This time it blew the roof off. \n\nI knew what I wanted to do, but I wasn't sure that I had the courage. My plan would enable me to lose my virginity with the woman of my dreams while keeping my dignity by not letting her know that she was the woman of my dreams. It wasn't that I didn't want her to know... eventually, but I planned to take advantage of the opportunity. She opened the door to Pandora's Box, but in order for me to win the ultimate prize; I had to be really clever. I planned to make her fall in love with me without even realizing it. All I had to do was not chicken out. \n\nChapter 3\n\nI knocked on her door fifteen minutes after telling her that i'd be coming over to talk. When she opened the door, I handed her the plastic box with three of her favorite sweets. \n\n\"Oh My God! Are those dark chocolate covered strawberries?!\" She groaned and started mumbling about her thighs while digging into the tart treats. Seeing what her lips were doing to that chocolate had me damn near groaning myself.\n\nFinally, I said, \"Yeah, it's a peace offering, i'm sorry for running out that last time.\" \n\nShe started shaking her head and waving to signal that it wasn't a problem. \"I knew you'd need some time to soak it all in, so I understood.\"\n\nYou have no idea, I thought. I rubbed my palms on the front of my jeans and braced myself for what I was about to say. \"Kris, i've made a decision about what you asked me.\" She was on her way to the third and last strawberry when she stopped, tongue out strawberry raised. She looked at me and then replaced the treat into the carton and put it in the refrigerator. She came back from the kitchen, sat on the barstool and simply said, \"Ok\".\n\n\"I've decided to help you out as you put it, but there are some stipulations.\" I got up and started pacing. \"There is something about me that you don't know. Something that is important if you still want to go through with this. It's what I couldn't tell you before and partially why I told you that I was gay.\" I moved over to the window and looked out into the nothingness that was night. With my head down, I told her as much of it as I dared. \"I'm a virgin Kris. I've never even had oral.\"\n\nWhen I turned around her eyes were like saucers and her mouth was wide open. I continued anyway. \"You know all about how I was in high school. I never really had a girlfriend. When I got to college, I figured things would be better, but they weren't. Waiting in high school to get a girlfriend made me realize that I wanted my first time to be special. I dated once we got into the dorms, as you know, but they thought I was weird for not trying immediately to get into their pants so it never worked out. You and I are such good friends because you didn't ask too many questions. Since then it's pretty much been the same story. The older I get, the harder it is for women to understand that I need more than just a physical connection, plus it isn't the hottest thing to be a virgin at my age.\"\n\nShe got up and walked over to me. \"I admit that it's a shock, but it explains so much and now I understand. You have nothing to be ashamed of. You waited until you were mature enough to respect and be able to cherish something that we all wish we had waited for. It makes you special not weird or a freak and any girl who can't see that is a fool.\"\n\nShe made her way over to the couch and placed her head in her hands. \"That does put a different spin on my problem. Now I don't want you to help me. You should wait until you find someone special.\"\n\nI couldn't help my reaction; I cupped her cheek and whispered, \"You are special, very special to me.\" I pulled myself back and sighed. \"Besides Kris, I trust you too. I never wanted to wait until marriage and who better to teach me than someone I can trust with this very dark secret.\" I was so playing her and she knew it, but she started it.\n\n\"So...\" she gulped, \"you're basically saying that we both need something that the other can provide, and since I asked you because I trust you, you finally decided to tell me the truth and ask me to do this for you. You realize that there is no way that I can refuse you now, that is, if I still want you to help me.\"\n\n\"Kris, it's a win-win situation because we trust each other. It couldn't have worked out more perfect if we'd planned it.\"\n\nChapter 4\n\nWow, what a revelation. I was trying not to stare too hard at Jake. It took guts to stick to your guns and not let people persuade you into doing things that you don't want to do. The fact that he trusted me with this and even enlisted my help spoke volumes about him. I thought I knew him. If I were honest with myself, I still knew him, but I certainly had a more clear picture of my best friend. I couldn't help but get a little hot when he said he trusted me enough to take his virginity. I mean who wouldn't?",
        "I looked at him, I mean really looked at him. It's amazing how you can not notice changes about people when you see them often. He had stubble, damn I barely knew he shaved. His skin was always baby bottom smooth. He seemed to be filling out his clothes more and his forearms were corded with muscle. I wondered what the hell else i'd missed. I smiled at him and he smiled back. Were his dimples always that deep? Man I needed to pay more attention. \n\n\"What stipulations do you have?\" He jerked his head back up and had a blank look on his face for a minute. When he remembered what he needed to, he blushed. His blushing was cute, I knew now that it spoke of his innocence and I liked that. I waited patiently for him to begin again. I wasn't sure that i'd like it, but fair was fair. \n\n\"Ok, so stipulations... well firstly if we really are going to go through with this, then I don't think you should be out there looking for Mr. Right. Let's get you together and then you should be able go on and live a completely sexually active life. Once your so called wall is down, then having regular sex with some Joe Smoe you call a boyfriend shouldn't be a problem\" \n\nWell that sounded reasonable. While it wasn't like we'd be in a relationship, I had never been able to wrap my head around sleeping with more than one person. It was why I had never done a threesome.\n\n\"Secondly, i'm not some boyfriend you're afraid of expressing things to. You'll have to speak up. We have to be completely open about what's happening, especially while it's happening. Next, this is going to be about physical feelings. You want to be able to let go and I want to know what makes women tick. This has to be no holds barred. If you want to do something intimate, don't try to hold yourself back. You are your own worst enemy. Trust me enough to give in to your urges. That's where we'll start.\"\n\nWow, all I could think was that he really should go into public speaking. His argument was so clear and concise that I couldn't help but agree. That didn't mean that this would be any easier. There was something that I had wanted to do. I thought up this crazy scheme but I didn't even really know if I could go through the whole sex thing. I'd never even thought of Jake sexually and that might be a problem.\n\nHe was still over by the window. I got up and walked tentatively towards him. When I was standing right in front of him, I looked into his face. He was starring at me questioningly. I reached up, grabbed his shirt and pulled him gently into our first kiss. His lips were soft with a slight plumpness. He exhaled softly and cupped my face. He peppered my lips with light kisses and then began to lightly lick at them begging entrance. \n\nI was becoming swept up in the sensations. There was an innocence in his kisses that touched something inside of me. I sighed and let his tongue enter my mouth. His tongue was like pure silk. His lips molded to mine perfectly and his tongue was doing a battle of wills with mine. I was losing oxygen, but oh what a way to go.\n\nHe pulled back just enough for us to gulp some air. He laid his forehead against mine and whispered, \"Does that answer your question?\" All I could do was nod meekly. I was still holding his shirt because I didn't want him to know my knees were wobbly and if I let go I might have crumpled to the floor. \"Well at least I don't have to teach you how to kiss.\" We both smiled and he kissed the tip of my nose. \n\nHe moved towards the door saying that he should go, but before he left, he just turned and starred at me. \"Why don't we have a movie night? You know, like we used to have before we got real jobs. You supply the movies and i'll supply the goodies.\" And with that, he was out the door. \n\nIt didn't bother me that he hadn't said when or where, that was a given. I had the extensive movie collection and the large screen TV. In college, we always did movie nights on Fridays so I knew he'd be at my house some time after five that evening. What bothered me was that I was shaken to the core over a kiss and he'd said nothing about it. All I could deduce was that it wasn't as memorable for him as it had been for me. What the hell was that all about? \n\nChapter 5\n\nI couldn't find a movie! What the hell was wrong with me?! I had been snippy for two days. I needed to get a grip. I was treating this like a relationship and it wasn't. I hadn't talked to Jake since that night which was nothing out of the ordinary, but it bothered me. Not only did it bother me, that kiss sent my libido into overdrive. I won't even disclose how many times i'd masturbated since then. Oh, he was definitely going to be spending the weekend. He just didn't know it yet.\n\nWith that reconciled, I got to the task of picking the movies. Four movies were customary and any genre except those that we absolutely abhorred was acceptable. First, I chose one of my favorite love stories, 'The Mirror Has Two Faces', and all I can say is that Barbara Streisand is a genius. Next, I pulled out one of Jake's favorites, 'Die Hard with a Vengeance'. Truth be told I loved this movie too and i'm a huge Bruce fan, but I let Jake hold on to his fantasy that he knew more about Bruce than I did. My third choice was a newer release, but it wasn't chosen for how much we love the actor's. I chose 'Shadowboxer'. It was my awesomely bad pick. The best thing about the movie was that I got to see Cuba's ass, and that might have been a body double. When I normally would pick a bad movie, we'd sit and pick apart what went wrong in the film. Sometimes we'd never even make it to the end. Lastly, I picked the ultimate comedy, 'American Pie'.\n\nWhen Friday came, I was nervous as hell and I didn't know why. I had the movies on deck, the margaritas were ready for mixing and I was in movie watching wear. We both always wore pajamas when we watched movies. We tended to fall asleep after all the alcohol anyway. \n\nHe showed up bearing gifts from the gods. Chocolate, chocolate chip, butter pecan, and cookie dough ice cream. Nachos from Rubio's, chips ahoy, the regular of course, gummy bears, twizzlers, and last but not least Doritos, in three different flavors. I was in love. \"You spoil me.\" He laughed and started putting the ice cream away. \"We're gonna be sick after all of this, we aren't freshmen anymore.\" I agreed, we'd either be sick or fatties. It was ok though, I had an idea of how we could work it off, but that was for later.\n\nI showed him the movies and he immediately knew my reasons for choosing each. I liked that being such good friends meant that sometimes we didn't really have to communicate to know what the other was thinking. I needed to remember that fact; otherwise, i'd just keep getting flustered over stupid kisses. He had on his movie watching wear and it must have been so funny to see him at the grocery store and Rubio's with a t-shirt and pajama bottoms on, but then again he'd probably just looked like a college student. \n\nWe laid out the nachos and snacks, I mixed up the margaritas, and we settled in to watch the movies. It was so much fun, it was like old times. I was a little disappointed that he hadn't tried anything, but a part of me was glad that he hadn't ruined movie time. If he kissed me anything like he'd done before, i'm not sure that i'd ever look at movie watching the same again. I was having enough trouble trying to ignore how large his chest seemed. It's like it just sprang out of nowhere.\n\nBy the fourth margarita and the middle of the third movie, we were damn near passed out. I barely had the presence of mind to turn off the television, go get Jake a pillow and blanket and stumble into my bedroom. I woke up hours later splayed across the foot of my bed. Damn, I guess I hadn't made it as far as I thought. I groaned as I tried to sit up. \n\nJake came in with a steaming mug of black coffee. \"Good morning sunshine.\" \n\nWhat the hell? Did he not gorge on just as much junk and alcohol as I did? \"What the hell is so good about it?\" I grumbled.\n\n\"Awww Kris, don't be like that, I had a great time last night. I don't even have a hangover. The sun is shining, the birds are chirping, life is great.\" \n\nI could have strangled him. \"Go to hell Jake, but before you do that could you get me some aspirin and make me some breakfast? PPPLLLLEEEAAASSSSEEE?\" I gave him my most pathetic face. I didn't have to do much; I was already looking pitiful as it was. He rolled his eyes and came back with a plate. Yum, eggs, toast with strawberry jam, and orange slices. I could have kissed him. This reminded me that I hadn't brushed my teeth, Yuk. \n\nOnce I was human again I wondered why Jake was still at my house. He'd even changed clothes. Where had those been? \"I see you made yourself comfortable.\" \n\nHe blushed a little. \"Yeah, well I figured you'd want to start this sooner rather than later so I cleared my weekend.\" So much for my grand seduction, I thought.\n\n\"Kris, i'm as ready to do this as i'll ever be.\" He took my hand, kissed the back of it, and then kissed my palm. \n\n\"Ok Jake but I don't want to use condoms. I'm clean and I know you are, plus i'm on the pill. I think we should start with you. Once you're comfortable with the whole experience, then we can learn together for me. The first part is really simple... I want to suck your dick.\"\n\nChapter 6\n\nI was in heaven. After that kiss I was walking on cloud nine and I know she was as shaken about it as I was. I knew she was pissed that I ignored it, but that was all a part of my plan. I loved spending time with Kris. It was fun to be around someone who was completely themselves around you. \n\nShe couldn't hold her liquor for shit and was far more gone than I was although I never let her know that. I liked to watch her sleep, call it a guilty pleasure. She was sprawled across the foot of her bed passed out. It wasn't a pretty picture but it warmed my heart anyway. \n\nOnce she looked like Kris again, I just couldn't wait but the last thing I expected her to want was to suck me. I became instantly erect and gulped audibly. I didn't know what she was used to as far as packages went but I hoped she wasn't too disappointed. \n\nWe started with a kiss, so much like our first one except that this one kept escalating until we each were fighting for dominance. We had begun to undress each other while we were kissing but I needed to see what was going on. I had only been dreaming of something like this happening for oh, a couple of years. \"Undress me and then yourself,\" I told her. My shirt was already half way unbuttoned. She stood back and just looked at me. She looked for so long that I began to get a bit uneasy, that is, until I saw that her eyes were completely glazed over with lust. I almost came right then.\n\nShe removed my clothes without touching my skin. Even when she took off my boxers, she gently pulled them down at the sides. It was slow and sensual. I guess everything would have been sensual to me, but I knew from experience that girls didn't really take their time. \"... you'll last longer.\" She'd interrupted my thoughts and I didn't even hear her. She knew that I was lost and she laughed as she started running her hands over my torso. \"I said that me sucking you off the first time will let you last longer for the actual act.\" Hell I didn't care what her reason for doing it was. \n\nShe stepped back and began undressing herself. It was like watching the ultimate Christmas gift being unwrapped. As each part of her came into view, my eyes glazed over a little more and my breath became ragged. Her breasts were large with large brown nipples. I could see myself filling my palms with her mounds and drowning in them. I think I became a breast man at that moment. \n\nMy lips seemed dry and my mouth was even drier as she removed her pants and panties. As she took her pants off, she turned around so that I could see that she was wearing a thong. She paused to look at me and then began removing her thong. I didn't think that I could get any harder but I was wrong. With her standing in front of me in all her naked glory, I burned the image into my brain just in case this whole thing blew up in our faces. \n\nI didn't have to think too much about it though because she started walking towards me. She started licking my nipples while caressing my torso. It was incredible. She began laving my belly button and I tensed knowing what was coming. I wasn't sure that i'd make it once she took me into her mouth, but I prayed that I could enjoy it for at least a little while. She began lighting tiny kisses along my length and I was trying not to think about the fact that she was the only one I had really ever wanted to do this. \n\nMy cock was enveloped in warmth and I couldn't breathe. She was slowly taking my whole length and seemed to be totally engrossed in just my cock. I didn't think a lot of women liked giving head this much, so either I was misinformed or I was just lucky. \n\nI felt her moan and realized that she had taken me into her throat. I was moaning and groaning loudly by now and I was already getting close. She must have sensed it because she tripled her movements and began rapidly engulfing my cock from the root to the tip. I could barely catch my breath. Why the hell had I waited to do this? \n\nIt was beyond incredible and the last time she shoved my cock to the back of her throat I started cumming. This was so different from masturbating. I came harder than I could ever remember cumming and she was swallowing it all! She was still lightly licking me as I softened. I just needed to sit down, I was trembling. She led me to the bed and I think I fell asleep.\n\nChapter 7\n\nHe was so cute! I could tell that he was nervous and truth be told, I was a little nervous too. I got to do with him, everything that I wanted to try and I couldn't wait until we went even further. His kisses were even more potent than the first time and I knew that I was going to have fun doing everything else. He didn't know it but I loved sucking cock, but not just anyone's cock. There had been boyfriends who didn't ask and I didn't tell. I had to feel that I could trust the person and who better to trust than my best friend? I could act out all of the fantasies that i'd ever had and it would be ok.\n\nIt seemed like his cock was made for my mouth. He was about eight inches with a nice girth. I knew he must have been a little nervous about his package but I had no complaints. I didn't normally deep throat but this time I couldn't help it. I know its mean but I felt that sometimes a guy didn't deserve to get my 100%. Jake deserved for it to be done right, plus I got off knowing that he was getting grade-A head. I knew I had done well when he all but passed out afterward.\n\nI couldn't help but remember my reaction to him. I'd never felt lust like that before. Maybe it was just that he was a virgin. I didn't have to be nervous about what I knew or didn't know. I could just be me and none of my imperfections mattered as much. \n\n\nJake's body was so not what I expected. I knew he was lean, or at least I thought he was. He was all muscle. I usually liked my guys a little beefier but this was surprisingly not a problem for me. He was still lean, but not in the scrawny way that i'd always thought. The idea of all that hard muscle sliding against me had my eyes glazing over. I'd loved sucking him off more than anyone else and he held off longer than I'd expected him to. \n\nWhile musing over what happened, I went to brush my teeth. I wouldn't have had a problem kissing him but I didn't know how he felt about it. I returned with some water for both of us but he was still asleep. I laid down next to him and he immediately rolled towards me. His arms draped over me and it felt really nice. \n\nI'd never had someone just instinctively reach for me, even on a subconscious level. He nuzzled my neck and sighed, but was still asleep. I couldn't help myself; I wriggled so that we were completely spooning. I began slowly grinding into him and I heard him grunt. He held me even tighter and it just felt so right but I didn't want to think about that too much. \n\n\"What are you doing to me?\" He asked.\n\nOops, I was busted. I blushed and turned to look at him. He was smiling sleepily at me. \"Sorry, I just wanted to know if you'd react in your sleep.\" He rolled his eyes at me and kissed me softly. I had to sigh. I felt so comfortable with him that I'd almost forgotten we were naked. \n\nHe asked, \"What do you want to do next?\" \n\nHmmm, I thought about having him eat me out, but I was beyond ready to feel his hard meat filling me. \"I need you inside me, but I want you to explore me first. Find out what you like and what I like.\" It had always been my fantasy to have a man explore every inch of me and I hoped he would deliver. \n\nHe smiled mischievously at me and flipped me so that I was lying on my stomach. Uh oh, I wasn't sure that I was going to like his explorations. I was ridiculously ticklish and most guys hadn't been able to touch me in certain places without me feeling the need to laugh or jerk away. My feet were one of the worst places and I usually ended up kicking whoever was touching my feet. Jake knew this but it didn't seem to bother him. I was so nervous about him touching me all over that I almost didn't realize that he was massaging my feet. I finally relaxed when I didn't have the urge to kick or jerk back. \n\nMy toes felt warm. When I looked back, Jake was sucking my toes. I was almost ashamed to admit that no one had ever sucked my toes before. I was wet and damn near dripping from just that. I heard a moan and was startled to know that it was me. Jake licked one and then the other foot. It was weird that I was so comfortable with him. I was burning with need. \n\nHe'd lightly bit each calf and even licked the backs of my knees. I thought I was going to go crazy. That was the most sensitive and ticklish part on my body and now I knew that it was also a source of sensual pleasure. I moaned, \"oh god\" and he doubled his efforts on the other leg. While doing this he'd been slowly kneading my thighs. \n\nHe moved up and began biting my ass. This was so hot but before I could get that thought out of my head, Jake split my cheeks and started licking at my crack. I gasped loudly and almost came from the sheer naughtiness of it. \n\nHe started licking my hole and I felt myself pucker. Now I was the one not breathing. He didn't do that for long and I was glad because I didn't know how much more I could take. He bit and licked his way up to my neck and I almost lost it again. I knew that I definitely could cum from stimulation on my neck. All I kept saying was, \"oh my god, oh my god!\" He flipped me over and started at my collarbone while gently running his hands along my stomach. He gingerly reached down to brush my curls. He dipped a finger in and brought it up to taste me.\n\nHe got a funny look on his face and then almost dove onto my pussy. He quickly trailed kisses down my torso, but still taking the time to bury his head in the cleft between my breasts. He kept smelling his fingers. I'd never seen anyone so enthusiastic about the taste of pussy. \n\nI didn't want to guide him because I figured he'd done so well so far, there wasn't much that I figured he couldn't figure out. He stuck his nose between my legs and just inhaled deeply. He licked all around my opening and then started to lick hesitantly and I wanted to push his face into my mound but I held out. He started to tongue fuck me and it was only making me hotter. He was like a vacuum with my juices because he was lapping them up like he was starving. When I would moan loudly at one technique, he would more enthusiastically go at it. \n\nWhen he started sucking on my clit, I almost jumped off the bed. He kept sucking on my clit but he inserted first one and then two fingers into me. \"Oh God don't stop\" I screamed at him. I didn't think I would cum at first but he proved me so deliciously wrong. I always cum for a long time and he rode each wave with me. It was incredible! My fantasy had nothing on him.",
        "I was still trying to catch my breath when he came up to my face level and asked, \"So how'd I do?\" He grinned and knew that he really didn't need an answer. \"Are you sure that you're a virgin?\" \n\nChapter 8\n\nI woke up to grinding on my piece. I couldn't believe i'd fallen asleep. When Kris said she wanted to finally do the deed, I thought i'd be able to bend steel I was so hard. Exploring her was just an added bonus. I wasn't going to waste the opportunity to touch and remember every inch of her. Each time I touched her somewhere she would suck in her breath. It was odd, I felt more comfortable touching her than she seemed to be with me touching her. I wanted to taste every inch of her so I started at her feet with the intention not to miss and inch. I was having a wonderful time finding her spots. \n\nI tentatively dipped my finger into her honey pot and damn near had a heart attack. I had to have more of that. Once I settled between her legs I felt at home. Her scent was intoxicating. It was her and lust and unlike anything i'd ever witnessed. I wasn't sure that I could make her cum but when I found that she liked being fingered and having her clit sucked, she started bucking and I was just trying to hold on for the ride. She went stiff and then a gush of her juices came down and drenched my face and fingers. She completely went limp and I gently lapped up all of the juices I could find. When I came up for air, I could smell her on my face and I almost didn't want to wash my face.\n\nShe was still huffing and trying to catch her breath when she asked, \"Are you sure you're a virgin?\" I couldn't help but smile, I knew i'd done well. I got up to wash my face and get a warm towel. I came back and opened her legs. I was hit by the heady scent of female cum. I couldn't help but taste her a little. I think I was hooked. She pushed her legs together close to her chest and moaned, \"No, please, not again, not yet, just let me rest.\"\n\nI arched an eyebrow at her but her eyes were closed and she still looked like a limp noodle. \"Don't worry baby, I know you're sensitive. I'm just gonna run a warm towel over you, I know it's soothing.\" \n\nI didn't mean to use the endearment and when she sat up on her elbows I thought she'd call me on it. \"How do you know so much about sex if you're a virgin?\" I didn't know whether to blush with embarrassment or feel irritated.\n\n\"Look Kris, just because I haven't actually done anything doesn't mean I haven't thought about it and read up on it. I know that not everything works for everyone, but there are things that seem consistent. I never wanted to just fumble around when it came to sex. Whenever I finally did the deed, I always wanted to be good at it. I don't have any on the job training, so to speak, but i've read every manual that there is.\" \n\nI had finished with the towel and began tracing small circles on her thigh while I was talking. It seemed that I couldn't stop touching her. I hoped that if this didn't go the way I wanted to then we could still be friends, but I wasn't confident that-that would be the case. We hadn't even had sex yet and I was already addicted.\n\n\"I'm sorry Jake, this is more new to me than I expected. You've already done things to me and with me that i've never done. You have this enthusiasm about not just sex but intimacy also that no guy has ever had with me. You just made me cum harder than I ever have and it just doesn't make sense that you're still a virgin. You could have any girl that you want and i'm positive that women would appreciate your no holds barred approach to sex.\"\n\nI had a moment of sadness. Sure, I could have any woman except her. I guess she couldn't have known that I was going through this for her. I thought if I was more experienced then maybe my confidence would go up and maybe i'd feel I had a chance. \n\nHer breathing had evened out and I was more than ready to be inside her. I lazily traced her opening while lying against her. It felt so right being with her but if she hadn't seen me as anything other than a friend then I wasn't sure she ever would. I needed to shake myself out of my funk and just be in the moment. \n\nThere were no more words as we began kissing. I settled myself over her and she immediately opened her legs so that I was settled and nestled right where I wanted to be. I tapped my meat against her opening and she arched into me. I let the tip of my cock poke lightly at her opening. I was smearing my pre all against her opening. I was so nervous because it felt so good and I wasn't even in yet. \n\nI slowly started to push in and I had to stop to just breathe in and out. The feelings gliding along my cock were indescribable. I eased in until I was sheathed to the hilt. I was completely flushed and had to groan. I felt bad because I knew I wouldn't be able to make it good for her. There was no way that I could touch her anywhere else and not shoot off. She clenched around me and I gasped, \"don't move.\" I had shut my eyes tightly against the sensations that were assaulting my body. I just refused to shoot off in like two seconds. \n\nOnce I felt a little more in control, I moved a little and began thrusting. If I felt that the initial entrance was incredible, then actually thrusting in and out of her tight warm, moist center was sending me completely into orbit. I looked into her eyes and there was a slight amusement in them. \n\nI was lightly thrusting into her and she was gingerly meeting me with each thrust. I felt in control enough to lean on my elbows and forearms so that we were flush against each other. I tried not to think about her breasts being mashed against my chest. I began licking her neck and she groaned but making her hotter was like a double-edged sword. The more I made her squirm and moan, the more she thrusted and clenched onto my piece. \n\nShe started rubbing her clit and it was so erotic. I knew that for her to cum I had to hold out but I didn't know how much longer I could. She started humping upwards in earnest and I involuntarily bit her neck. It sent her over the edge as she stiffened and clenched tightly on my cock. She was moaning loudly but when I heard her yell, \"Oh ssshhhhiiiiiitttttt\", I lost it. I couldn't take it anymore and I thrust as hard and rapidly as I could and then it happened. White lightening danced in front of my eyes and I shot what felt like a gallon of cum into her womb. I almost wished she wasn't on the pill and that these were different circumstances but I was losing consciousness so my thoughts were scattering.\n\nChapter 9\n\nWhy was everything he did so cute? When he first entered me I could tell that he was trying hard not to cum. I never expected him to slow down and take his time but he'd been full of surprises already. All of the thoughts I had for what I wanted to try went out the window as soon as he entered me. I felt full and complete for maybe the first time in my life. Everything we were doing had a semblance of newness to me. \n\nI couldn't help but arch into him but he told me not to move. I was trying not to thrust but he was slow stroking me so well that it was extremely hard not to. I loved seeing the range of emotions play across his face as he experienced the ultimate intimacy for the first time. It was very intense. \n\nHe bit my neck and my nerve endings started zapping. I didn't think I would cum both because i'd already had a catastrophic orgasm and because he was a first timer. Imagine my surprise when I found another orgasm building. It was even more intense than the first one. He came almost immediately after and it only served to prolong my orgasm into pleasurable aftershocks. \n\nHe collapsed on top of me and I couldn't even be mad. Truthfully, his weight felt nice on top of me and I felt like a sack of noodles anyway. This left me a little time to think. I hadn't had experiences like this since, well, ever. My orgasms had been so intense that I almost passed out. I seemed to be experiencing as many firsts as him and the thought was disturbing. Had I been doing it wrong or something? Why did I feel so at ease around him sexually? I'd even let him cum in me, something that shocked even me when I suggested it. It felt so wonderful though. \n\nI rolled him off me and went to give myself a quick clean up. I did the same for him and he gave that same content sigh that he'd done after I sucked him off. I climbed into bed and was asleep in minutes. I awoke tangled and entwined with Jake. How had that happened? \n\nWe were both lying on our sides facing eachother and both of his arms were around me. One of his hands was cradling my head and his chin rested on the top of my head. Our legs were tangled together with the sheets woven in between. We couldn't get any closer. It was so intimate that it almost brought tears to my eyes. Why hadn't any other guy been so into me, even if it was just sexually? I sighed forlornly and I felt Jake move.\n\nHe rubbed his cheek against my head and then kissed my forehead. \"What's wrong Kris?\" \n\nI didn't know if I should tell him my troubling thoughts but we'd promised to keep it honest. \"Jake it's never been like this for me and i'm not really sure why. It's kind of freaking me out that no other guy has been into figuring me out sexually. You did it on the first try and it's a little scary.\" He just held me tighter and I felt so secure that I nearly wanted to cry again.\n\nChapter 10\n\nWhen I woke up the first time, it wasn't because I was necessarily uncomfortable but something just wasn't right. Kris was asleep but she was almost on the polar opposite side of the bed. I was cold or maybe empty. I couldn't really articulate what I felt in my semi-conscious state but when I pulled her to me, I was instantly calmed and fell back asleep. When I awoke for the second time, it was because Kris was wriggling. Then she gave that sigh and I knew something was wrong.\n\nShe told me why and my heart started pounding in my chest. This was going better than I expected. Who would have thought that this crazy plan could have made her see any revelations? Truth be told, I didn't even think that she needed anal but if she admitted that then she'd also have to admit that there was more than sex between us. Instead of telling her anything, I just held her tighter.\n\n\"Make love to me Jake\", she whispered and I was only too happy to oblige. I treated her body with the reverence that i'd always thought should be common in lovemaking. Instead of using my tongue this time, I used my fingers to trace every inch of her. By the time I finally entered her, we were both so wound up that we pounded into each other in a frenzy. She met me stroke for stroke and with each of my grunts, I heard an accompanying moan. Our kisses went from light and airy to hot and passionate. I couldn't get enough of her. I pounded furiously into her and our climaxes hit both hard and fast. She let out a shriek with my name embedded and I yelled out.\n\nI didn't want to move. She was clenching my softening piece and I was still pulsating inside of her. I nuzzled my face into her neck loving her scent. Before I knew it, I was plumping up again and slowly thrusting into her. \"Well what do we have here?\" I laughed and told her I couldn't help it. I wanted to stay inside of her forever, but it was time to do some stamina training. I flipped us over so that she was on top and let her work her magic. This gave me a completely different sensation. She ground her pelvis into mine and I could do nothing but gasp.\n\nShe knew what she was doing and I was trying my best not to get too far along. It was difficult because I got to see her reactions to everything. The image of her arching backwards should have been bronzed it was so beautiful. \n\nShe was driving me crazy but I knew how to make her crazy too. I pulled her to me and began licking her neck and ear. I started humping up into her and she began whimpering. I loved that but I had more tricks up my sleeve. I licked my fingers and then began tracing circles onto the back of her knee and I held her to me with my other arm. She began bucking wildly and then I bit her. I've never heard a scream like that. It was primal, guttural, and so fucking sexy. I felt her juices run down my cock and I blew up into combustible flames. \n\nI held her to me as her breathing evened out. I quickly noticed that she had started breathing differently and she was shaking. I tried to lift her up but she held me tighter and wouldn't move. I realized that she was crying. \"Kris, sweetheart, why are you crying?\" \n\nI rubbed her back and kept kissing the top of her head. \"I don't really want to talk about it, Jake. I'm not really sure what it is anyway.\" \n\nI thought about it, I didn't know whether to push the issue or to let her stew about it. I decided to push it just a little. \"Kris, you know you can tell me anything. Maybe we can figure it out together but you have to tell me what's wrong.\" She leaned away from me and I got a good look at her face. Tears had streaked down her face and her eyelashes were spiked with moisture. I couldn't help but kiss each eye repeatedly. \n\n\"Jake it's this... you... how i've felt every time we've come together like this. It is so different from any other sexual experience that i've had; I don't know how to handle it. I've never yelled out like that and I never thought I would. Yet here I am and every time it seems like I react more and more. You're acting like a pro and i'm acting like the virgin. It's just freaking me out.\"\n\n\"It's probably just because I want to know all there is to know about what makes you tick so that I can put it into practice on whoever I decide to be with. It's just different because I actually want to know and not just get off. It will be ok Kris. Now let's take a bath.\" With that, I didn't even look back as I disengaged from her and went to run some bath water. I knew she was probably upset that I dismissed what she was feeling as just my enthusiasm but she needed to brood. I wanted her to come to the conclusion that we were made for each other on her own.\n\nChapter 11\n\nI was seething! I had just had the most amazing experience of my life and he thought it was just beginner's luck! It had to be more to it than just that. Even if he did just want to know all there was to know about sex, my reaction wasn't in the deal. It was so much more than just finding the right technique. He was so gentle but he also seemed to know when I needed it hard and fast. He was so in tune with me that it was as if he could read my mind. \n\nI thought back to my original reason for starting this and I thought how different things had turned out. I'd all but forgotten about control. From the first time we'd done anything, my body was completely invested. I didn't have any other thoughts in my head except the feelings coursing through my body. I didn't even need to put any of my crazier fantasies into play because he was making reality so pleasurable. I was completely satiated after each episode. Truth be told, I hadn't thought about anal since he'd eaten me out. It seemed silly now to think that something like getting anal would break down the wall between me and sex. I'd probably still be uptight and then i'd regret doing it. \n\nThat led to a whole other line of thinking. If I didn't think I needed anal anymore, it was only because I was getting it so good from Jake. What was going to happen when he felt secure enough to find a girlfriend? The thought made my heart hurt and I didn't know exactly why. \n\nI had a dilemma. I wouldn't need to break my promise about anal if I could keep doing Jake, but Jake would only keep doing me until he was totally secure about sex. What was I going to do after that and did I really want there to be an after? I mean, there had to be a reason for me to be so into the sex. \n\nI had to shake myself out of my sullen mood as Jake came into the room telling me that the bath was ready. He strode into the room naked as the day he was born. He looked totally at ease and I wondered how he'd be with another woman. The thought made me frown. I felt like he was mine, which was utterly ridiculous, and I didn't really want to think of him with anyone else. \n\nWe lazed about in the fragrant water, soothing our sore muscles and relaxing until we pruned. He made sure I was completely clean and it wasn't necessarily sexy, but it was intimate on a level that I had never achieved with anyone else. I took that time to trace every inch of him. It was something so erotic about a hard body with suds on it. I don't have a problem with my body, but I did usually have some nervousness. This was not the case with Jake. While in the bath we didn't speak, but we exchanged slow kisses that were like drugs they were so intoxicating. We nipped and nibbled each other but otherwise just held each other close. \n\nWe toweled each other off and our stomachs chose that moment to growl. We laughed and I had to stop and try to remember when we'd last eaten. \"What day is it?\" He laughed and answered, \"Um, I think it's Sunday, like mid afternoon.\" \n\nDamn, so we had been going at it for over a day. That was quite an accomplishment. I went to fix us something to eat but I figured we could get by on some quick fixes. I popped in some bagels, put on some coffee, and sliced some fruit. He came in and looked at our impromptu meal with a frown. \"Maybe if you triple this it'll be enough to make up for the calories we've burned. You know this is less than a snack for me.\"\n\nI rolled my eyes, \"Ok garbage disposal, make yourself something else, i'm fine with this.\" He finished in record time and started on the rest of the ice cream. He was making it look so good that I got a spoon and dug in too. \"You're gonna make me fat with all this junk.\" \n\nHe looked at me and arched an eyebrow. \"No one told you to eat this,\" he said, waving the carton in front of me. \n\nIt was odd to me that we were acting as if everything was normal. I expected things to be different between us, but he was the same old Jake and I was looking at him like he had horns growing out of his head. I had thought that the aftereffects would be different. \n\nI realized that I sort of wanted him to be as addicted to me as I seemed to be to him. I frowned noticing that this wasn't the case. I hadn't planned on feeling anything except maybe lust. It wasn't as if we were dating or in a relationship but I couldn't help but want him to be attached to me. This was so not what I bargained for.\n\nChapter 12\n\nIt was like I could see the wheels turning in her head. She'd occasionally frown like she was in deep thought. I knew she was uneasy or upset but I figured the more upset she was, the more she'd try to hash out her feelings and then the more she could come to some revelations. I was about to make it worse for her but I hoped it would work out in the end. \n\nI finished the ice cream and went to put the rest of my clothes on. I came out and she almost looked aghast. She quickly recovered and stood up. \"Leaving so soon?\" I wanted to stay with her but that wouldn't help me win her. I kissed her slowly and made up some report that I supposedly forgot to finish and left. I didn't think she bought it but I knew she wouldn't call me on it. \n\nI didn't talk to her for the next two days and it was killing me but I hoped that the whole 'absence makes the heart grow fonder' thing would work. I got a phone call that Wednesday that nearly blew my socks off. \n\nBefore I got the phone to my ear good I heard, \"WHAT THE HELL IS WRONG JAKE!!\" I was taken aback and if I hadn't been sitting then I might have fallen down.\n\n\"Whoa, hello to you too. What do you mean what's wrong? Nothing's wrong, is there something wrong with you?\" She was still yelling when she answered. \n\n\"Hell yeah, you give me some bogus ass story about a report and then I don't hear from you for over two days, what's up with that?\"",
        "\"Nothing, look, I thought you were upset, so I figured you needed to be left alone. Plus, the phone works both ways Kris.\" \n\n\"Yeah well, you're supposed to be learning all there is to know about sex and i'm supposed to get my ass reamed. How is that supposed to happen if you just walk out?\"\n\nWhoa, I knew I was getting there now. \"Kris, is this just because you're horny? I know you said that being horny all the time was part of the problem. Just talk to me, was I bad or something?\"\n\nI heard her gasp, \"God, no it's not that. You were... just... I don't know... it was incredible, but now, I just don't know.\" She trailed off, and I was getting worried. I thought she was crying and i'd never meant to make her cry. \"Look Kris, just sit tight, i'm on my way.\"\n\nFifteen minutes later I was on her doorstep and my anxiety had grown ten fold. \"What's wrong, and don't beat around the bush. Whatever this is doesn't have anything to do with how we started out. I don't think it's about me learning about sex or you getting anal. Just talk to me.\"\n\nI'd started out on the doorstep, but when she opened the door, she just walked to her bedroom and sat on the bed. She had been crying. She looked so sad sitting in the middle of her bed with her arms around her knees. I sat across from her and rubbed her arms.\n\n\"A week ago I could have told you with confidence that I needed to masturbate after every time I had sex. One night with you and not only do I not masturbate afterwards, but I can't get off from masturbating. I've tried for the past two days and all I could think about is how it felt when we did it. This isn't working out at all like i'd hoped.\"\n\nI gathered her to me and laid down with her. \"Isn't this what you wanted? You didn't like the fact that you weren't satisfied and it seems like you are so what's the problem?\"\n\n\"Yeah Jake, i'm satisfied, but for how long? You wont be around forever, especially when you decide to get a girlfriend, and where will that leave me? I've never felt like that during sex. I finally find the perfect orgasm and it's only a temporary situation. I don't want to need you like this but I haven't felt like this before and I'm scared that I never will.\"\n\nI laid flat on my back to let the information soak in. I should have been thrilled that she was thinking along these lines but I wasn't. \n\nIt seemed that she couldn't even entertain the idea of love between us. I was sure that she was falling for me or at least recognizing that she loved me but I hated the idea that she didn't really want to love me. It was almost as if this was all happening involuntarily. Like she had no choice. I didn't want it to happen like this but I guess since I had never been her type she couldn't fathom falling for me. It was disconcerting to say the least. \n\nI didn't know what to do. I could tell her that I wanted a relationship with her but she probably wouldn't believe me. I wasn't sure if I could put it all on the line. I didn't want my feelings stomped on because she was afraid to face facts. I still had to do something though. \n\n\"Kris don't worry about that. I'll always be here for you and you know we'll figure something out together. Who knows, maybe you just got rid of that wall because you trust me. Maybe it will be fine with the next guy because of it.\" I knew I was letting my plan go down the toilet. Call me crazy, but I didn't want her affection if it was forced out of her. I rocked her to sleep and held her through the night.\n\nChapter 13\n\nWhy is it that you always think of the perfect response after the fact? When Jake suggested that with the next guy I might be okay, I couldn't help but wonder if I even wanted another guy. Why should I go to another source when I had a perfectly good one already? Maybe I was just too afraid to voice that. \n\nIt just didn't seem right that I only wanted him for sex though. I mean he was a great guy, but we weren't even each other's type. I couldn't see us working out in any other capacity except sexually. With that being said, I felt like my body was turning on me. Even though I was upset when Jake came over, my body was zinging in his presence. It made me even more upset that I seemed drawn to him and it didn't help that he seemed completely unphased. I knew it was wrong of me but I wanted him to be as freaked out as I was.\n\nI still couldn't believe i'd called him ranting. He was such a great guy for not cursing me out. All day at work I was trying to think of a way to make it up to him. I decided to make him dinner that weekend. I wanted to surprise him so I just showed up with the goodies. I hoped he wasn't upset about me just dropping by. \n\nI rang his doorbell and he took a moment to answer. I was getting a bit apprehensive by the time he opened the door. He was sweating... profusely. I had an insane moment of jealousy but quickly realized that he had on workout shorts and tennis shoes.\n\nI was standing in the door with my mouth open. Sweat was glistening off his hard body and he was breathing hard from exertion. I could almost feel his body heat and it was driving me crazy. My libido went into overdrive and I almost felt light headed. \"Kris? What's going on? What are you doing here?\" \n\nI was trying not to smell the scents rolling off him, it was making me so crazy. \"I... uh, made you dinner... as an apology for being a bitch and yelling at you.\"\n\nHe looked a little shocked and then smiled a little. \"Well don't just stand in the door, set up and let me take a quick shower.\" I was almost relieved that he wasn't going to be all sweaty anymore; I was fighting some serious urges to jump his bones. \n\nI hadn't been to Jake's place in what seemed like forever. He had changed some things. He had new furniture with a dark masculine decor. I saw a couple of pictures scattered around his apartment. There were family photos, but mostly there were pictures of us. There was one that really caught my eye. We had gone to a local concert with some friends and someone had snapped some pictures. I didn't remember seeing this one though. I was beaming into the camera and Jake had his arm slung around me with a beer in his hand. What was odd was that he wasn't looking into the camera; he was looking at me like... like he was into me or something. \n\nIt was odd but I didn't want to read into it if there wasn't anything to it. I looked at the rest of the pictures but there weren't anymore like that one. I figured that I was just over analyzing but I couldn't help but wonder what it would be like if he were really into me. Instead of weirding me out, it just made me smile. I thought it would be kind of cool. I mean, it seemed like I was into him even though I had never previously thought of him like that. I couldn't deny that I was completely drawn to him and that the thought of him moving on was really starting to wear on my nerves. \n\nHe came out smelling fresh and spicy. He pulled me to him kissing me softly. \"This is a great surprise, but you don't need to apologize to me. You know that I understand.\" As he whispered this into my ear, I felt like I was melting. If he didn't stop I was going to really jump his bones and to hell with the food. \n\nHe chose that moment to go sniffing around the kitchen. \"This smells so good Kris, what's for dinner?\" I had fixed baked chicken, apple stuffing, and green beans. He groaned as I told him what we were having. Then he got this gleam in his eyes and told me to sit everything on the coffee table. He lowered the lights, poured some wine and sat on the floor in between the couch and coffee table. \n\nHe motioned for me to follow him and we sat facing each other in the confined space that he'd created. I looked at him hesitantly and he jut told me to trust him. He cut some chicken, scooped some beans and then some stuffing all onto the fork. It was the perfect bite. I didn't think anyone but me was interested in eating this way but maybe I was wrong. \n\nHe fed it to me and I got a little panicked because he only prepared my bites like that. It was such a little thing to notice, but it might as well had been huge. He noticed how I ate, no one ever paid attention to me like that. He kept feeding me and I felt like I was losing it. I felt something blossoming in me that far surpassed anything i'd ever felt for anyone.\n\nCould it be that I was falling in love with him? I thought about why I was so comfortable around him. It wasn't that he was just gentle, but he was intimate with me as more than just a lover. He was... loving? He was romantic in a way that was natural, not obligatory. It was like he wanted to touch me and kiss me, not just as a way to get to the sex. It was completely foreign to me and that's what threw me for a loop. \n\nI had been starring mutely as he fed himself and me. I was so stupid. My body knew it long before my head had a chance to catch up. But where did that leave my heart? I didn't want to lose his friendship but I was quickly coming to realize that I didn't want anyone else to have his love either. I was pretty sure that being his friend would no longer be enough. I just had to convince him of that.\n\nChapter 14\n\nShe attacked me! I'd thought something was off during dinner but I guess I was wrong. She damn near inhaled my dick. I had been semi-hard during dinner but as soon as she dove for my dick, i'd been standing proud. I didn't even question the why of it; I was just trying to catch up to the sensations that were coursing through my body. \n\nI didn't want to cum like this though. I needed her naked and I needed to be buried inside of her. I pulled her up to look into her face. She was flushed from lust and I had to groan. I pulled her up with me and quickly stripped both of us naked. \n\nI laid down on the couch and brought her down on top of me. She felt perfect in my arms and as I eased into her, it felt like coming home after a long journey. She was gasping and moaning, but I wanted to try something that I hoped would have her gushing cum like a geyser. \n\nWe were kissing furiously and as I was pumping and she was so wet that I could hear squishing noises. I lifted her up off me and she started whimpering. Man I loved her. I pushed two fingers in and out of her to coat my fingers and she started moaning again. I eased myself back into her and then began rubbing her juices in her crack. I moved back and forth between licking my fingers and wetting her crack. When she was sufficiently wet, I started tapping at her opening.\n\nShe was almost yelping now. I started working my finger into her ass. She was bucking, grunting, and squealing into my ear. I got my finger in to the knuckle and then started slowly pumping into her from both ends. When she came, it was like nothing i'd ever seen. I didn't even think people could cum that hard. She was spasming and thrashing so wildly that she tried to push off my cock. I held her tightly so that she couldn't move and pumped furiously into her. \n\nI got the crazy idea that I wanted to make he cum twice so I slowed my thrusting as she rode out her orgasm. Before she'd even calmed down all the way I sat up and carried her to the bedroom still sheathed in her moistness. \n\nI pumped slowly until she started responding again. I lifted her legs until her knees were almost touching her chin and I started a torturously slow pump. I wanted her to feel every inch as it invaded her. She was almost purring by now. I wasn't through yet though. \n\nI straightened her legs until her feet were at the same level as my face and I started licking her feet. I sucked on each toe as if it were a feast. I reached down and began massaging her clit. I lightly bit each toe and she started shrieking. It was so hot. I barely held on until she came. As soon as I felt her muscles clench tightly around me I thrusted as fast as I could and stopped breathing as I came. \n\nI laid down and gathered her close to me as we came down off our high. \"Kris, is it always like this?\" \n\nShe was quiet for what seemed like forever. \"No Jake, it isn't. In fact, it's never been like this for me. This is how I always wanted to feel during and after sex.\" She sighed long and hard and then turned to me. \"I think that I love you.\" I don't know why but I got really angry. \n\n\"Kris you think just because the sex is good then you're falling for me. Don't chalk it up to that.\" I got up and started dressing.\n\n\"No Jake, it's not just good sex, it's beyond great. You told me that I didn't really need anal, that I just needed someone that I could or did really love for sex to be enjoyable. Well, the sex is beyond enjoyable so why can't it be because I love you?\"\n\nI just had to gawk at her. \"I can't believe this! You love me because the sex is great. That doesn't make any sense. You know that love has to be about more than just the physical.\" I'd never been so angry. I now knew what it felt like to just be wanted for your body. I wanted to get away from her but seeing as we were at my house, that wasn't really a possibility.\n\n\"Jake it isn't that! Sure I love the sex, but when I thought about it, I couldn't imagine anyone else having and sharing with you what we have.\"\n\n\"So now I see. You don't want anyone else to have your fuck toy, so you tell me you love me just so i'll stick around.\" I didn't care that this was my house; I was getting ready to leave anyway. She grabbed my arm and pushed me onto the couch. Then she sat on me. I was at a disadvantage because she was still naked. I was trying not to look at her but she was sheer perfection in my eyes. \n\n\"Ok just shut up and listen. I don't want anyone else to have you because of the gentleness and care that you've shown me. Every other boyfriend i've had I always found something wrong with them or them with me. I know everything about you and we're still friends. Speaking of friends, i'm pretty sure that I can never go back to just being your friend. I don't want you to fall in love with anyone but me. I've never felt this way about anyone else. The only way that I can describe it is that I need you, now and for as long as you want me.\"\n\nChapter 15\n\nI couldn't believe that I just put it all out there but I was sure that he would have left me alone otherwise, and in his house to boot. He was so angry. It would have been sexy had I not been so worried. At first, I didn't understand why he would be angry that I told him I loved him. Then he started ranting and it seemed that I was just making it worse. \n\nEven when I sat on him, he was just starring off into space. The muscles in his jaw were rigid. I figured that he was upset thinking I only wanted him for the sex, but that was the original arrangement anyway. Maybe he did want me. He finally looked at me and I saw lust but I also something else. What it was I couldn't tell you.\n\n\"Are you sure?\" He flared his nostrils, a clear sign that he was trying to hold in his emotions. \n\n\"I'm sure Jake, but you'll have to help me, i'm new at this love thing and I may not always get it right.\" He let out a small smile.\n\n\"You know, I guess that I have to come clean. The only reason I even agreed to do this was because i've only ever wanted you. I thought we were made for each other from the start but I needed you to come to that conclusion on your own.\" \n\nHe looked at me and so much of what had been happening made sense. \"I love you Kris. I have for what seems like forever.\" \n\nNow it was my turn to be shocked. \"Wait! So were you or were you not a virgin? And how can you love me when i'm not even your type?\" He looked at me like I rode in on the special bus. \n\n\"Kris, of course I was a virgin, I wouldn't lie about something like that. If I were like that then I would have said that a long time ago. Plus, how can you ask if I love you. Think about how it is every time we make love. For me that's what we're doing. I give you everything that I have because I love you. And don't say you're not my type because you don't know what my type is. If you say that you're not my type then I could say the same for you. How could you love me?\" \n\nBy now I was feeling pretty good about the situation. \"Well, I love you for a lot of the same reasons that we're friends. You know how crazy I can get and yet you're still always there when I need you. Which is more than I can say for my other boyfriends. To top that off, the sex is great but beyond that, I feel complete when we do it. I haven't even had the problems that prompted me to come to you. Truthfully, I don't even need anal. I just need you. Plus, I don't really have a type. You should have noticed that I date all kinds. I'll admit that they do seem to be football types, but you've changed that.\"\n\nWith that, he kissed me hungrily and held me tightly through the night.\n\nChapter 16\n\nKris and I really hashed it our over the next couple of days. Between work, dinners, talking, and loving we were both exhausted by the next weekend. We just laid in bed watching TV and movies. It was so homey. We decided to just be together. Yeah she was my girlfriend, but what she didn't know was that I was determined to make her my wife. \n\nOver the next couple of months, Kris and I became closer than ever. While it was true that we loved each other, we still had to get used to each other in the relationship. I didn't care what we had to get through as long as she was still mine at the end of the day. \n\nWhen I decided to pop the question, I was nervous as hell. I decided to toy with her a bit. I started yelling for her. \"Kris, baby, let's watch a movie!\" \n\nShe came in holding her ears looking at me like I was crazy. \"Sheesh J, I was only in the other room, not China. What movie are we watching?\" She skipped over to the couch and plopped down next to me. \n\n\"Just wait and see.\" She was going to hate me or kill me for this, but if I had to go then i'd go with my ring on her finger.\n\nShe saw the opening credits and her eyes went wide. \"J you know I can't watch this movie. I've only seen it once and I only bought it because he's my favorite actor.\" I held her to me and let the movie play on. \n\nI'd chosen 'Armageddon' with Bruce Willis. A movie that Kris adamantly refused to watch because Bruce dies at the end. She was a major crybaby for movies. I knew i'd be seeing waterworks. She watched the movie in abject horror as it drew closer and closer to the end. \n\nThere were tears running down her face as the last scenes closed. She looked at me with a mix of anger and disbelief. Then she tackled me yelling and cursing me out. It was great. I was trying not to smile but it was hard. While we were wrestling she got out, \"You better have a damn good reason for making me watch that! And you better make it up to me!\" \n\nHere was my cue. I pinned her to the couch and looked into her angry tear streaked face and said, \"Of course i'll make it up to you baby. How's this?\" With that, I slid off her and onto one knee. I whipped out the ring box and asked, \"Will you marry me? If you do, I promise that you can make me pay you back for the rest of our lives.\"\n\nShe was crying in earnest now, making me think that it maybe wasn't such a good idea. Before I could say anything, she looked up at me and smiled. I took that as a good sign. \"As long as you let me put you through some painful experience for this you've got a deal.\" I whooped for joy. I twirled her around and kissed her repeatedly. \n\nAs I held her tight, I couldn't help but ask, \"So that's a yes right? Because I don't want you trying to slip through any loopholes.\" \n\nShe laughed and it was the most joyous sound i'd ever heard. \"That, my dear Jake, is definitely a yes.\"\n\nEpilogue\n\n\"So Mrs. Riley, are you ready?\"\n\n\"Oh My God Jake if you don't fuck me right now i'm going to kill you!\" I couldn't help but chuckle at how far we'd come. She got to keep her vow of not doing anal until she got married and I got to fulfill my dream of just being with her. She was the only one for me. Plus I got to be with the uncensored Kris. She was so vocal now that she was blowing me away half the time. ",
        "Since we'd been married, we had started to experiment with butt plugs. I didn't want to hurt her, but she wanted anal, so we graduated from the smallest plug until they were roughly the size of my cock. \n\nShe finally told me why she wanted anal in the first place. \"J, I want you to be able to take me in any hole, anytime, and any place. I don't want there to be any orifice that you can't take your pick of.\" That was somewhat shocking but who was I to complain?\n\nWe had finally gotten to the point where I didn't think i'd hurt her if we did anal. She had gotten tired of fingering long ago and we were both ready to move to the next level. I kissed her while slowly working the plug out of her ass. I was a little larger than the plug so I knew she would still be tight. I could hardly wait. I wanted to face her so that I could see her reactions. \n\nShe was lubed and ready to go but I added to it by pumping into her moist dewy pussy a couple of times before I breached her bud. I almost didn't want to stop but I was more excited about fucking her in the ass. \n\nI slowly pushed at her bud until the head of my cock popped in. It felt like my first time all over. I guess it was really a first. This was a tightness that could not be rivaled. We were both breathing hard. Me from not trying to cum and her from having my tool lodged in her ass. I felt her relax and I slowly started feeding her my cock inch by inch. \n\nIt was slow going because I didn't want to hurt her. Once I finally was seated to the hilt I began kissing her and pumping ever so slowly. As she grew accustomed to the feeling of me in her ass, I began picking up the pace. \"Don't let me hurt you baby, talk to me.\"\n\n\"If you stop i'll scream.\" That was music to my ears because I could definitely see that this was going to be a favorite activity for us. Her eyes were closed, her breathing was rapid and her nipples were peaking. I didn't think she could take hard pounding so I kept it fairly slow. Kris was starting to show signs of frustration but nothing short of her begging would make me move faster.\n\n\"Baby please fuck me hard. I've waited so long for this and I want to really feel it. Your big cock feels so good. It doesn't even hurt. Make me cum baby, please!\" Aw damn, she knew what begging like that did to me, it turned me savage and I started to pound harder and harder. She just met me thrust for thrust. I pinched both nipples and she started yelping. I lifted her leg and bit her calf and she purred. When I leaned down, changing my positioning, to lick her neck she went crazy. \n\nShe snaked her hand between us to massage her clit and started bucking wildly. I thrusted as hard as I could and listened to her shriek my name over and over. Her ass clenched my dick in a vice grip and I couldn't hold off any longer. I blasted my seed along the walls of her anal cavity and she went into mini spasms.\n\nWe were still trying to recover when my softening piece slipped softly from her with a slight sucking sound. We both sighed and I got up to get a warm towel. I had to make sure that I didn't hurt her because if I did, i'd never forgive myself. \n\nI ran the warm towel over her making sure she was soothed. I cleaned my piece off too and as I returned she began giggling. \"My ass is gonna be sore for a week, and I doubt that i'll be able to walk straight.\" \n\nI sat down on the bed and kissed first her nose and then her forehead. \"That's ok because next week i'll be back to pound you again so that your ass remembers me for another week.\" \n\nShe looked up at me with nothing but love, \"You promise J?\" \n\nI settled her next to me as we began to drift off to sleep. \"Forever and always baby... forever and always.\"\n\n~The End~"
    ],
    "authorname": "mochakink",
    "tags": [
        "first time",
        "masturbation"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/obsessed-with-anal"
}