{
    "title": "Lost Empire Ch. 60",
    "pages": [
        "0001 - Tempro\n\n0003 - Conner- Thomas\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship) - Lucie\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara - Mara\n\n0999 - Zan\n\n--\n\nUngrown - unnumbered\n\n-\n\n3 - onboard Tempro awaiting Shelby\n\n1000 - Sherry - lost at the moment\n\n---\n\nZimmel just sighed when Lucie told him that they still had to find Sherry. \"I've got one simple question for you.\" He stated. \"Just how in the hell are we going to get Sherry, when all three of you are without your trans-warp?\"\n\nLucie made a grimace at Zimmel then stated, \"I'm not the military one here. You should have several good ideas.\"\n\nAgain Zimmel rolled his eyes at Lucie, \"I'm good, but I'm not the emperor. He's the genius not I, what you think just because I am in the military I am that smart? Give me a break lady!\"\n\n\"The emperor obviously sent you because he thinks you have what it takes to help us. So... help us!\" Lucie told Zimmel a little exasperated that the man was still sitting there.\n\n\"Look, the only thing I can think to do is haul all of you back to where the fleet is. Then all three of the ships can re-gen.\" Zimmel suggested.\n\n\"NO!\" Lucie almost shouted. \"I can barely hear her. We have to find her now, before she is too weak to hear.\"\n\nZimmel was about to respond when the image of Derrick appeared before him. \"I suggest that you transfer her over to Ace and get a move on. All three of the ships still have their hyper drive. Therefore they can start back 'til you can catch up with them.\" \n\nClarity seemed to come to Zimmel as he nodded, then bowed to Derrick. \"Alright Ace transfer her to the bridge.\"\n\n\"Compliance prime,\" came Ace's reply, a moment later a startled Lucie was standing on the bridge of Ace.\n\n\"Please advise Ace where to go Miss Hartwell.\" Zimmel told Lucie as she looked around her mouth agape.\n\nNodding Lucie stated, \"Go forward she's close though I'm not sure how close.\"\n\n\"Moving to intercept, all scanners set for the new homing signal the emperor has equipped us with.\" Ace replied as they started to move, the other three ships taking off for the galactic edge then towards the fleet.\n\n--------\n\nDerrick could only shake his head as he watched his mother, grandmother, and finally Shelby. They were more than excited about the coming royal wedding. He really didn't see what the big deal was. He'd have to ask Mary when he got the chance.\n\nHartwell could only smile at his friend's frustration. Little did the commander know this was nothing compared to what was to come. Trying not to smile he could see the major fight that was going to take place. The commander wasn't about to wear the frilly clothes that he knew the empress and his family were going to want him to wear.\n\nAs he shook his head Hartwell got an alert. It appeared that Onai was about to re-emerge with an answer to the commander's question and request. Let's just hope it didn't have anything to do with the death of Dempsy. That might lead to an all out war to save him. I hope it doesn't go that far.\n\n\"It appears that I am needed elsewhere Sire,\" Hartwell said as he bowed drawing a groan from Derrick.\n\n\"I take it Onai has signaled that she has finished talking with her father,\" Derrick asked.\n\nHartwell's mouth dropped open a moment then he nodded. \"Though she expressed a desire that she be escorted around by Norman, I still feel I should be there in case there are questions asked that he can't answer.\"\n\nDerrick's hand went to his chin as he sunk deep into thought. \"That does appear to be a good point. As you can see I don't have a chance in Hades of getting out of here too soon. Alright I want an open link to you at all times. I need to know as soon as possible what answer she gives. Don't be surprised when I appear, so to speak.\"\n\n\"As I remember your appearance put a damper on things escalating further. I do believe that it should again. I will keep an open com. Sire.\" Hartwell stated bowed then he winked out.\n\nDerrick was about to sit to eat when he received a call. \"Shelby? What has happened?\" He asked a little afraid that Shelby had been damaged again along with the others.\n\n\"We successfully defeated the force of the Tendrax. I am afraid that they gave us no chance to negotiate. Miss Hartwell had a suggestion that I think the commanders should hear.\" Shelby told him.\n\nA moment later both Commanders Kimison and Rayburn were bowing to Derrick who was rolling his eyes. \"You called us sir?\"\n\n\"It appears that Miss Hartwell discovered something during the last battle.\" Derrick relayed to the men. Both men looked around for Lucie then turned to Derrick with puzzled faces. \"Shelby? If you please relay to us what you and Miss Hartwell discovered.\n\n\"Yes Derrick.\" Shelby stated drawing both men's attention. Turning to both of the men Shelby continued, \"Miss Hartwell thought it prudent that we all go in battle ready, all weapons, shields at the ready. She also had our hyper drives on, ready to go at a moment's notice. After we decimated their fleet Miss Hartwell and I noticed that when Zan got upset he had trans-warp. It was only a few seconds but he saved both Miss Hartwell and me.\"\n\nBoth men were writing every word Shelby said as fast as they could. \"Does he...\" started Rayburn when Zan broke in.\n\n\"It appears that I have fifty percent of my trans-warp. I have already started my re-gen, I am sorry I wasn't better able to protect you and Miss Hartwell, mother.\" Zan stated his head low.\n\n\"You did exceptionally well Zan, just as you did for Sherry, never doubt yourself. As for Miss Hartwell, she'll soon see that her anger was misplaced. You'll see Zan.\" Shelby stated.\n\nA small smile crossed Zan's face as he slowly turned toward Derrick. \"I have to agree with Shelby Zan. You did as much as you could. In this last case you went beyond your duty.\"\n\n\"Thank you Sire, that means a great deal coming from you. May I make a request Sire?\" Zan asked causing Derrick to stop a moment. Zan and Shelby had by far more of their emotion circuits open, he guessed it was possible.\n\n\"I always listen to all of you Zan. I am glad to see that your circuits are more open now. Please ask I'll do what I can for you.\" Derrick replied causing a huge smile to cover Zan's face.\n\n\"I know that Ace is a good ship, though as we found out we are slightly behind this race with some of our technology. Since I still have part of my trans-warp may I request that I go back? I want to make sure that prime Zimmel and Lucie remain safe as they retrieve my wing mate. I...I feel it is my first duty to make sure they return.\" Zan stated.\n\nDerrick had been tapping his lips with his pointer finger the whole time. My god he thought, Zan has just demonstrated more courage and honor than most of the humans he knew. Looking over Zan's specs he started to say no. Well over fifty percent of his weapons were useless though a few were almost re-gened. He had only seventy five percent shields, his light shield was practically none existent.\n\nLooking back at Zan he could see an almost pleading look on his face. Again Derrick was about to say no when he finally agreed. He was already stretched thin at the Duke's planet. If he pulled another ship those bastards on the surface might very well escape. Then there was the fact that if they were attacked this was a one way journey. He wasn't about to want to lose another ship-.\n\nIt was a damn hard thing he had to do. It was bad enough that Zan WANTED to go off on this mission. Derrick said a silent prayer as he turned to look at Zan. \"Alright, BUT I want constant reports from you. I also think that you shouldn't engage unless you have no choice. I mean it Zan disobey me on this, you'll be sitting in the yards for the next few battles. Do I make myself clear?\"\n\n\"Yes Sire! I'll do my best to bring all of them home.\" Zan replied with a wide smile.\n\n\"I hope all goes well Zan.\" Shelby told him with pride on her face. \"Remember you can't travel more than one half second, then you'll need at least a minute to recharge.\"\n\n\"Thank you mother I will not forget.\" Zan replied as Shelby nodded then Zan winked out.\n\nDerrick let out a breath that he'd been holding. \"I hope I see him again. I don't feel good sending an injured warrior back into battle.\"\n\n\"I know Derrick though he would have tried several times to go 'til I am sure he felt that you would relent.\" Shelby replied. \"You know he will be as careful as he can. Remember Sherry is involved he has great motivation to succeed.\"\n\n\"I know all of this Shelby; I am still having a feeling of foreboding about all of this. With all of the Tendrax ships that we have destroyed, they have to know by now that we are involved. I just hope that they don't have any other surprises for us.\"\n\n\"Perhaps then, with him watching them, Zimmel, Lucie, and Ace will fare far better.\" Shelby responded.\n\n\"It's my hope that is true Shelby. I don't want to lose any more of you. The time I thought I had lost you was almost too much for me.\" Derrick told Shelby.\n\n\"Too much for you?\" A voice behind Derrick said startling him out of his ruminations.\n\nDerrick turned to see his mother, grandmother, Shelby and the holo-gram of Mary staring at him.\n\n\"I was referring to when I thought I had lost Shelby for good. It was almost too much for me.\" Looking at Shelby he continued, \"I love her, you more than I have ever been able to put into words. The loss of one of you would nearly kill me. Losing the both of you would surely end me I know for a fact.\"\n\nShelby smiled as she came forward to hold Derrick close as he started to tremble. \"Derrick,\" Shelby started after a few minutes when they had separated. \"I have a small request, actually we all do.\" Shelby indicated his female relatives and Mary. Biting her lip Shelby took a big breath as she took a garment bag from Derrick's mother. Opening it up, she pulled out a grand though extremely frilly shirt out of the bag.\n\nDerrick's eyes got large then his brow knotted into a frown that grew deeper with each second. \"NO! Not only no, HELL no! I refuse to be made a mockery of as the leader of this empire.\" Growling Derrick started to leave the room when Shelby grabbed his arm.\n\n\"You haven't seen all of the grand selection we have made for you.\" Shelby stated.\n\n\"GRAND! That? No I am not a pompous little twit like so many of the nobles are. I will not lower myself or my men and the empire wearing that piece of garbage! I am not a self important little ass. I am here for the empire not myself, if that were the case I would more than deserve to be removed.\" With that Derrick exited the room with Shelby and his relatives following close behind.\n\nMary let out a sigh as she shook her head; she'd thought he'd object though not this vehemently. 'Well,' she thought, 'this wasn't going to be solved too soon.'\n\n--------\n\nAdmiral Hartwell appeared on the command deck of his small ship. He'd been surprised when the commander had given it to him. After all that had gone on with him rescuing his sister he was still in shock he still held his rank and position.\n\n\"Welcome back onboard Admiral,\" came the voice of the ship's A.I. \"All is prepared for departure Admiral.\"\n\n\"Thank you; please proceed to rendezvous with EIG ship Celeste. Also, please connect me to her, Permute one.\" Hartwell said as he moved to the command chair.\n\n\"Compliance Admiral.\" The ship's A.I. said. There was a wind-up of the engines then the small craft winked out. \"I have Celeste Admiral.\" The A.I. stated a moment later. \"Audio only sir.\"\n\n\"So your holo-system is still offline, I'll have to put in to have it looked at again Permute one.\" Hartwell said with an irritated shake of his head.\n\n\"Yes Admiral?\" Came Celeste's voice.\n\n\"I need a situation report of all that is happening pertaining to our mission.\" Hartwell stated.\n\n\"Sir, as of yet there has been no activity outside the parameters that have been established. No aggressive action has been detected toward any in the fleet. The representative Onai sent a message that she will be ready within an hour to speak to the emperor's representative, if not the emperor himself. She has stated that she will have a message from her father.\" Celeste relayed.\n\nHartwell was nodding to all of this, \"Alright, I should be back on board within thirty minutes. Please have my quarters ready when I arrive.\"\n\n\"Yes Admiral, also the emperor just notified me that he sent the damaged ship Zan back to watch over primes Zimmel and Lucie. It is an honor to call him my brother.\" Celeste stated proudly.\n\nHartwell's head snapped up at this news. \"Zan?! Wasn't he damaged in the last Tendrax attack?\" A now worried Hartwell told Celeste.\n\n\"I am reading that half his weapons are offline. Most are on one side that he used to block an attack on mother and Prime Lucie. His sub-light engines are only at eighty percent. He has full hyper-drive, plus he has at his last transmission fifty point five percent of his trans-warp. He's not at his best though I estimate he has enough destructive ability to provide cover,\" Celeste reported.\n\nHartwell shook his head, had Zan lost what little sense it had? We'll just have to see, Zan had engaged the Tendrax more than any ship and person except for his sister Lucie. Even as confident as he was in all the ships, the thought of actually losing his sister frightened him. Saying a small prayer for her and the ships he looked over the plans of the Duke's planet.\n\n--------\n\nIt was almost an hour later that Onai Sakuta was finally ready to depart. It had been a hard three day discussion with her father and the Jitaku council. As angry as she was with Kimon, there was no denying that he still held a huge place in her heart. With a sigh she stood as she finished her prayer, if Kimon wasn't careful he would be severely injured. Then there was the task force the council was willing to launch to bring him home for punishment if she didn't do this correctly.\n\nHer pilot bowed to her as he awaited orders from the master Onai. As sternly as she could she told the man, \"You will remain here with the ship. No one is allowed on board 'til I return.\"\n\nBowing almost to the floor the male responded, \"Hai masuta.\"\n\nNodding her head she stepped toward the airlock. It had taken all she had to convince the council, though especially her father to let her continue as she felt best. She had actually taken up for Kimon explaining he had been doing all he could to restore the honor of himself and his family. It was only in the last few months that he had achieved that. He was also working closely with and for the emperor. With a smile she remembered how fast her father had changed his thoughts when hearing the honor the emperor bestowed on her family and the Jitaku as a whole.\n\nEntering the airlock code she watched as it started to slide open. Taking a deep breath she hoped things went well today. Everything would come to the surface today one way or another. She hoped that Kimon really was as good as she'd seen.\n\nStepping out she was again met by the same five men as before. Onai took a step forward then was impressed as all five bowed low. Hartwell nodded to Norman when they had all straightened up. Bowing again he stated, \"We are honored to have you visit us again.\"\n\nOnai's eyes wore a pleased expression as she bowed again to Norman. \"We thank you for the honor all of you have shown to us.\" Turning she addressed Hartwell, \"I have received an answer to that which the emperor asked.\"\n\nA moment later there was a shimmering before all present as the image of Derrick appeared. All bowed to him even as Onai went to her knees. \"Please arise Onai Sakuta. I have been waiting anxiously for this answer.\"\n\nOnai nodded her head without looking up setting a small device on the deck. The device started to hum then the image of an older oriental man appeared.\n\nThe older man saw Derrick then bowed, \"Dear exalted one. I am Isamu Sakuta leader of my clan and the Jitaku council. We are greatly honored by your words of us and our planet. Much discussion has gone into our decision both surprising for and against Masuta Kimon. The fact that it was the Masuta Onai that was for him was surprising.\"\n\nDerrick was nodding not saying a word which seemed to impress the older man even more. 'Now,' Derrick though, 'we'll see if what she had said had indeed helped.'\n\n\"As stated before after much discussion, it was decided that a test of Kimon's skills will be forth coming.\" Here he pointed to Onai, \"My daughter Masuta Onai will administer this test. Therefore it is with a heavy heart that we set this test as one to utter defeat.\" Here he turned to Derrick. \"I know you have Kimon busy with duty; we do require him present for this.\"\n\nDerrick nodded as he said, \"Celeste please present Colonel Dempsy before us.\"\n\nTHREE DAYS BEFORE _____________________\n\nColonel Kimon Dempsy had visited Lieutenant Greeson in med bay after he found himself alone. Upon entering the room he saw that Greeson had already administered more than thirty pressure point adjustments. Even though he wasn't in much pain he saw that she had indeed got him with the triple-triple.\n\nLooking down at Greeson, Dempsy nodded as he threw a knuckle to Greeson's neck then twisted. Greeson's eyes popped open as he screamed his body convulsing a bit then falling back to the table.\n\nBarely able to hold his eyes open, Greeson spoke, \"Master, I apologize for not doing better. I...\"\n\nDempsy held up his hand to quiet Greeson. \"You did far better than I thought you might. The fact that you got through her defenses for a moment proves that you did listen to me.\" Here Dempsy bowed to Greeson causing the young man confusion. \"You have bestowed great honor upon me, Master Sakuta, and yourself. I am afraid you might not make it to the contest between Onai and myself though I hope you can.\"\n\nDempsy left going to his room to meditate. An hour later he started to practice moving faster and faster. At the end of the first day covered in sweat he shook his head. He was moving far too slow she'd kill him after an hour. I must get faster if I am to survive.\n\nThe end of the second day he was again covered in sweat. Nodding he was three times as fast though he wasn't sure he was fast enough. Taking a deep breath he laid down to rest a few hours then began again. The beginning of the third day Norman knocked on Dempsy's door. Not hearing anything Norman started to open then the door. Remembering the last time he did this he hit the floor before the door was barely open.\n\nA swish of air of air sounded above him right about where his stomach would have been. Laying there a few moments a hand appeared to help him up.\n\n\"I am glad you remembered my Shin'yu. I would not have forgiven myself had I harmed you.\" Dempsy stated.\n\nNorman started to walk into the room then stopped. The body odor and heat practically pushed him back out the room. Shaking his head he turned to look at Dempsy. \"Though I am sure you know Onai sent a message that she will be emerging later today. Might I make a suggestion?\"\n\nDempsy nodded to Norman wondering why the man was talking in the hall. \"Yes, my best friend anything you think that will help me. I always value your council.\"\n\n\"Good, first I suggest you take a shower, you my friend are rank as can be.\" Dempsy's eyes went wide as he suddenly noticed the rancid odor of blood and sweat. \"I also suggest you wear your best Gi. I have a feeling you're in for the fight of your life.\"\n\nDempsy bowed to Norman issuing profound thanks, \"I expect no less from her, as I am sure she does from me. I will be ready Shin'yu.\" With that Dempsy closed the door immediately, and then went to wash his body of the past two days. Finished he cleaned the room then sat to meditate and pray.",
        "He'd been at a calm peace perhaps two hours when he felt the IMT. Still in a seat position he bowed to all there keeping his head on the floor.\n\nHe was suddenly shocked when he heard a voice from the past he never thought he'd hear again. \"Masuta Kimon, you are hereby challenged, a fight to utter defeat. Much of your transgressions have been forgiven. Your student has also helped to restore the honor of your family, the clan, your master, and the Jitaku people. Almost all has been forgiven save for one item. Onai has been chosen to administer your punishment since it was her more than any other the injustice was done to. I and the clan will watch this contest, with respect to his Lordship. No death only defeat, combatants prepare your selves!\"\n\nOnai nodded as did Dempsy who finally looked up to face Onai. Moving to the middle of the mat they both bowed never taking their eyes off their opponent. They both stood stock still as everyone seemed to be waiting for something.\n\nA noise at the door drew everyone's attention as a Greeson appeared with his ribs taped. Derrick smiled, it had almost taken an act of god to get him released early, and though unknown to Greeson he'd have to return when this was over.\n\n\"Ah! It is good to see that your student has come to observe.\" The older man stated then his face turned hard as he turned to both Onai and Dempsy. \"No one may interfere, no one may stop this, begin!\"\n\nDempsy and Onai started out slow throwing a few blows as they got a feel for each other. Just as suddenly both seemed to fade as they began to move far faster. Greeson's head was moving all over the place as he was following them at first. A bright light blinked briefly on the mat as both combatants were suddenly still.\n\nDempsy was expecting almost anything from Onai. It was no surprise when she did a flash hit, then she tried to catch him with a second that he easily avoided. Stopping he watched as she missed by a few meters\n\nOnai nodded her head to Kimon, so he was taking this as serious as she was. Good she thought, moving faster she was pleased when she doubled her speed he not only matched it he moved even faster catching and ripping the shoulder of her gi. Stopping she looked at the material in Kimon's hand, and then she smiled as she moved in for her own attack only to be rebuffed.\n\nGreeson had seen the move that Onai had tried it reminded him of their fight. Then as they started to move faster he started to lose track of them, then they almost vanished from his sight when they moved. Shaking his head they were well beyond his skill apparently they were going even higher.\n\nThey had been at it for two hours now. Neither had a hit yet except for the cloth Dempsy had gotten. There was a sound of a solid impact then Dempsy was flying toward a wall. Cursing himself he landed short looking back at Onai. Walking back he bowed to her as they resumed the contest.\n\nA few minutes later there was another solid impact as Onai was flying backwards. Landing her right arm dangling she growled then bowed to Dempsy. Chopping a spot in her neck she was able to move her arm some, though she feared one of the arm bones was cracked.\n\nAs the fight moved into its third hour neither had gotten a clean hit. Dempsy over reached a short move as Onai took the opening catching Dempsy in his upper leg. Limping away Dempsy noticed that her right arm was hanging again. Pinching a spot on his thigh he felt the pain recede. Shaking his head he thought they were going to kill each other at this rate.\n\nTrying to flex her right arm she barely winched as she again chopped a spot on her neck. Smiling at Kimon she was satisfied that he'd kept up with his art. Then a thought came to her, was it possible? He couldn't move that fast now.\n\nSmiling larger she had just decided what punishment she'd subject Kimon to when she was declared the victor. Adjusting she set up for the one move she knew no one could beat.\n\nDempsy saw her adjust something was up, she had obviously decided that she had a move that could defeat him. Rushing toward him as fast as she could Dempsy almost fell prey to what she was doing as she got in close throwing three rapid hits. Then even faster she threw a second set, astonished when he blocked all three she'd started on a third set when Dempsy whirled out of the way throwing his own set of rapid hits, the second set catching her low in her ribs.\n\nOnai's eyes went wide as she felt the rib break then a second along with it. Dempsy backed away a grimace on his face. Looking at his old master he stated, \"Do you declare me victor?\"\n\nThe older man was about to open his mouth when Onai stated, \"No! I can fight still.\"\n\n\"Really?\" Dempsy said as he walked to her, and then pushing her forehead with a finger, watched her fall.\n\n\"Do you concede defeat?\" The older man asked.\n\n\"I...\" Onai started then groaned from the pain that was starting to spread.\n\nDempsy leaned down whispering in her ear. Her eyes went wide as she groaned again then she spoke up, \"We concede to Masuta Kimon Dempsy.\"\n\n\"Good,\" Dempsy said as he ran a hand down her back pressing in three places. Bowed to the older man. \"Masuta Sakuta may I continue that which I never did with your Daughter? I still have deep feelings for her as I am sure she does for me.\"\n\nThe older man was deep in thought as he thought about the almost violent way that his daughter had argued for Kimon. Yes he had to agree there was no other for her as he was sure there was none other for Kimon.\n\n\"Yes Kimon Dempsy, when you both are finally healed you may continue.\" Then the older man looked at his daughter trying to sit up. \"That is if my daughter still shares these feelings with you also. What say you daughter? Shall we continue the joining?\"\n\nHiding her face she took as deep a breath as she could trying to hide her excitement. \"Yes father, please continue the joining.\"\n\n\"Good then all is settled.\" Looking at Dempsy then Onai, Dempsy nodded.\n\n\"Celeste transfer Onai to the med bay.\" Dempsy said then collapsed. Damn he thought I guess she got me with that third set.\n\n\"Transfer them both,\" Dempsy heard Norman say.\n\nWell Derrick thought, that takes care of one situation, even as an invader alarm started to go off."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "violence",
        "fantasy"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-60"
}