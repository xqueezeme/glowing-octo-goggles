{
    "title": "Lady in Red Pt. 02 Ch. 24",
    "pages": [
        "Gwen had an uneasy feeling after finishing her conversation with Steve. She knew he wasn't the type to overreact, and he seemed genuinely concerned about the ship sailing near the coast of Somalia. With that in mind, she made her way to the bridge. The captain greeted the beautiful young doctor warmly.\n\n \"Captain, I was just speaking with my fianc\u00e9 and he's concerned about pirates along the coast of Somalia. He suggested that we sail farther out, rather than hug the coast.\"\n\n \"Ms. Anderson, I have been assured by both the U.N. and the government of Somalia that we would be absolutely safe in these waters. We're on a humanitarian effort and even lowly pirates respect that,\" reasoned the Captain.\n\n \"There's another reason we will not be sailing to deeper waters. We've had a small fire in the engine room and repairs need to be made before we can continue. We should be back under power by daylight, or shortly thereafter. There's no need for alarm,\" assured the Captain.\n\n Gwen headed back to the room she shared with Charlotte and Cheryl, feeling no better about the situation. She had learned to totally trust Steve's assessment of every situation. He always seemed to understand what had to be done and how to do it. Charlotte and Cheryl were already asleep when Gwen slid under her covers, still troubled by her conversation with Steve.\n\n Gwen awakened to the sounds of gunfire. She sat up in bed to see that Charlotte and Cheryl were also awake and as concerned as she was.\n\n \"It must be pirates!\" exclaimed Gwen. \"Steve was worried about them. We should have never come this close to the coast.\"\n\n \"Let's get dressed, and keep the door locked. Maybe there aren't too many and the crew will fight them off,\" reasoned Charlotte as Gwen hit the speed dial on her phone while Cheryl picked up her camera.\n\n \"Steve doesn't answer!\" cried Gwen. \"I'll call Mom and see if she knows where he is.\"\n\n As Paula watched the attack with her family in real time at Marsh's Landing, her phone rang. The ID showed it was Gwen calling! \n\n \"Mom! I can't reach Steve! Our ship is under attack, probably by pirates. Is he there?\" blurted Gwen as soon as her mother answered the call.\n\n \"Steve's preparing to board your ship right now,\" responded Paula as calmly as she could. \"He, your father, and the other men are on helicopters not far from your ship. We're watching it on TV. Just stay hidden and wait for the men to reach you.\"\n\n \"Steve's here? With Dad? Thank God!\" replied Gwen. \"We'll keep the door locked and wait. Oh, no! The pirates have opened our door. They're.....\"\n\n Paula had put her phone on speaker so everyone could hear the conversation. When the call suddenly went silent, tears began trickling down numerous cheeks. They waited to see if Gwen would resume the conversation, but she never returned to the phone.\n\n \"Steve's getting ready to board that ship, and there are a lot of guys with guns waiting for him!\" worried Kate. \"They're going real fast and the damn pirates are shooting at him. How's he going to manage it without getting killed?\"\n\n The women were still in their pajamas, with Gwen speaking to her mother, when the locked door suddenly clicked and several men with guns strode into the room. They looked at Gwen and grinned knowingly. The largest of the men grabbed Gwen's arm and hauled her from the room as the other men did the same with Charlotte and Cheryl, but not before Cheryl had managed to turn on her video camera to record whatever she could.\n\n The women were pushed onto the main deck where a huge man stood waiting. Gwen was used to being around large men. Jared was over six feet six and extremely powerful, but the man standing before Gwen was much larger!\n\n Looking past the man, Gwen could see armed men going through the pockets of dead crew members strewn about the deck. Pirates were everywhere she looked, although many of them carried no modern weapons. Those without guns waved knives and machetes as they searched the vessel for more victims.\n\n The huge man was bare-chested and his amazingly toned body glistened in the morning light. He saw Gwen's disgust at the actions of his men and he laughed.\n\n \"Even us poor, lowly pirates have internet,\" he chuckled. \"We've been waiting for the Lady in Red to arrive in our waters. You are to be married shortly. My gift to you will be a strong son.\"\n\n As he spoke he extended his hands and ripped Gwen's pajama top from her body. Then he squeezed Gwen's breasts as his men held her arms so she was unable to cover herself. Without conscious thought, Gwen spat into the man's face.\n\n The giant instantly backhanded Gwen and then brought his hand back across her face so his palm spun her head with the force of his second blow. Blood began flowing from Gwen's split lip and from a nasty cut on her cheek.\n\n Reeling from the blows, but still defiant, Gwen again spat blood on the man, this time hitting his chest. \"Steve Hammer will kill you for that!\"\n\n \"The famous Steve Hammer? I only wish he were here so he could watch me breed his woman, just before I killed him with my bare hands,\" stated the giant confidently. \"You would see which one of us is the better man.\"\n\n Suddenly a U.S. Navy jet roared overhead. It was so low that the deck vibrated as the aircraft began climbing rapidly. Once the decibel level dropped, the unmistakable sound of helicopters became clear. Men in a helicopter to Gwen's left began firing into the teaming mass of pirates on the main deck. \n\n Gwen noticed quite a few pirates had gathered on the other side of the ship and were firing at something not yet in her line of vision. Suddenly another helicopter came into view as it swung in a tight arc toward the ship. Two men on that craft opened fire at the pirates that had congregated on that side of the vessel. As the helicopter completed its turn, Gwen saw a rope ladder was extended almost horizontally from the craft. At the end of that ladder was a man! He held to the bottom rung with one hand as he fired an assault rifle into the pirate hoard with the other! \n\n The momentum of the helicopter turning had been imparted to the figure on the ladder. He travelled very rapidly as he was whipped toward the ship by the turn of the helicopter. Suddenly, he released his hold on the ladder and was propelled feet-first into a large group of pirates. Men were sent flying backward as the human cannonball crashed into them. In a matter of seconds the man's speed had been drastically reduced. He rolled over several times before he came to his feet. As he stood, he pulled two handguns and began a withering assault on the pirate ranks. \n\n The stunned pirates finally regained their bearings and those with firearms began shooting back. That was when Gwen saw more boots hit the deck as men began dropping from the ladders lowered by the two helicopters as they hovered just above the ship. Gwen saw the last man to drop to the deck very awkwardly and smash into a life boat near the railing. She recognized that the man as her father! Meanwhile Steve, joined by his friends, was decimating the pirate ranks. \n\n \"It looks like you'll meet Steve pretty soon,\" yelled Gwen to the pirate leader over the din. \"But I guarantee he won't be friendly!\"  \n\n Steve and his friends had quickly developed their plan of attack as they approached the stalled hospital ship. The helicopter with Jason, Jared, Billy, and Pete was to make a pass over one side of the ship, shooting as they went. It was hoped that it would distract the pirates enough that Steve wouldn't be shot to ribbons as he attempted to board the ship.\n\n Steve was to climb down to the end of the rope ladder. The helicopters had no winches and no ropes for rappelling, so the ladder would have to do. The pilot was to go in low and suddenly turn into the ship while Charlie and Chip fired at the pirates closest to the side. The quick turn would not only accelerate Steve, but cause him to suddenly gain altitude to clear the side of the ship. That would reduce the amount of time he would be in the sights of the pirates as he rapidly rose from just above the water to the height of the deck.\n\n Steve had been surprised at the speed he gained as he arced around and headed toward the deck. He gritted his teeth as he forced himself to maintain his grip on the ladder with one hand while he fired into the pirates with the rifle in his right hand. He released the ladder when he was certain that his momentum would carry him over the side of the ship and into the pirates.\n\n He bent his knees as he hurtled feet-first toward his surprised adversary. He kept firing his rifle until it was jarred from his hand when he began making contact with the bodies of the men in front of him. He heard, and even felt bone and cartilage breaking and separating as his boots hit man after man, some in the torso, and some in the head. Slowed by the humanity he had crashed into, Steve rolled over several times and came to his feet. As he stood, he pulled his handguns and began firing. He felt bullets strike his vest. It quickly became obvious that there were more pirates than his group had anticipated. Steve knew he could never kill them all before they would shoot him down. Suddenly, he heard Chip's voice behind him.\n\n \"You get the fuckers in front and I'll take these bastards!\" \n\n Then within a few seconds Jason, Charlie, Jared and Pete were on the deck, firing steadily into the rapidly decreasing number of pirates. Steve flinched when he saw Ted hit the deck hard and bang into a nearby lifeboat. Billy moved next to Ted to help him stand. Steve returned his concentration to the men he was fighting. Many of the pirates still standing were coming at him with knives and machetes. Steve found himself wondering if that was better, or worse than having firearms. \n\n Steve felt the presence of a man behind him. He turned to see a man about to bring his machete down on his head when he heard a loud roar from a short distance away. The man with the machete flew off to the side, blood seeping from numerous wounds. Ted was standing a short distance away with a shotgun, the barrel still smoking, clutched in his left hand. Steve nodded as he quickly replaced the magazines in his guns. \n\n The deck was littered with dead and dying pirates. Those that were still standing suddenly decided the fight was not going the way they had hoped. They began dropping their weapons and raising their hands. Jason and Jared began directing those that could still walk to form a group by the railings. \n\n Steve searched the ship with his eyes and finally saw a bloodied Gwen. A giant of a man held her by a handful of hair. In his other hand, he held a large knife, which he had placed against Gwen's throat! Steve felt both rage and fear well up and churn inside his gut. \n\n Considering what he had been told about 'The Butcher', Steve dropped his guns to the deck and pulled his vest over his head and dropped it near his guns. Unarmed and shirtless, he strode toward the huge man.\n\n \"I've heard you've never lost a fight,\" declared Steve in the sudden stillness of the morning. \"I'm here to put an end to that claim. Are you man enough to face me?\"\n\n The giant grinned broadly as he simply shoved Gwen away, dropped the knife, and strode toward Steve. \"This is going to be fun. I'm going to kill you with my bare hands, and then take your woman.\"\n\n \"Butch!\" spoke Chip from behind Steve. \"Make sure you get the rules straight before you start the fight!\"\n\n At first, Steve was confused by Chip's reference to Butch. Then he remembered how he and Chip had watched 'Butch Cassidy and the Sundance Kid' on several Saturday nights while stationed on the base in Cuba.\n\n \"Right! What are the rules of the fight?\" asked Steve as the big man stopped a few feet in front of Steve.\n\n \"There's only one rule,\" laughed 'The Butcher'. \"The first man to die, loses.\"\n\n As the pirate leader finished his statement, Steve kicked him in the groin as hard as he could. When the man brought his hands down to his crotch, Steve moved in and began whipping punches into his midsection and chest. Steve had spent a lot of time on the heavy bag during his workouts with Jared and was confident that no one could long endure the punches he was throwing.\n\n That was when the man backhanded Steve so hard that he fell backward and to the deck. 'Big Ben' moved forward to kick Steve, but he rolled over and quickly jumped to his feet. The two men circled for a short time before Steve moved in and again delivered hard punches to Chancellor's midsection. Steve knew that staying close prevented his opponent from getting his full strength and momentum into a punch. \n\n Steve had seen the blood and bruises on Gwen's face. His anger consumed him as he swung his fists into the bigger man. He had never wanted to hurt a man like he wanted to hurt this one. He channeled his anger, rather than let it control him. He fed off it, and used it fuel his efforts. \n\n He remembered his father teaching him as a teen that when he was up against an opponent of superior strength, he had to be smart. \"Hit him where he lives\", was the expression his father had always used. \"Don't break your hands on a man's head. If he can take a punch, you'll be dooming yourself by hitting him in the face. Work on his heart, stomach, kidneys, and lungs; where he lives!\"\n\n Suddenly 'The Butcher' managed to land a blow that staggered Steve. Sensing Steve was in trouble, Chancellor lumbered after him. Somehow, Steve managed to stay away from the bigger man long enough to shake the cobwebs from his head. Once again, Steve moved in, pummeling the larger man's torso and chest with punches thrown as hard as Steve was able.\n\n \"Why doesn't Steve hit the guy in the jaw?\" asked Ted through clenched teeth as he held his aching arm.\n\n \"Because it would only hurt Steve's hand,\" responded Chip. \"He knows that he has to wear the guy down. I just hope he does it before the bastard takes Steve's head off.\n\n Ted was in pain from his obviously broken arm, but he couldn't stop watching the battle between the two powerful men. He had never witnessed such savagery and brutality. The sounds of flesh being viciously and repeatedly struck were something he'd never forget.\n\n The cameraman in the helicopter above had zoomed in on the two combatants and the world watched in horror and amazement.\n\n \"Jesus! Is he going to fight that monster?\" wondered President Rosen aloud as Steve and 'Big Ben' squared off on the deck of the ship. His question was quickly answered when Steve kicked the larger man and moved in to begin pummeling his midsection. The President of the United States watched the battle in stunned amazement, along with millions of people around the globe.\n\n Those watching from Marsh's Landing were literally on the edge of their seats as the battle raged on the screen. Groans filled the room whenever Steve hit the deck. Sybil sat next to her mother in silence as she watched Steve battle the much larger man, before finally speaking.\n\n \"He's doing this for her, you know,\" stated Sybil softly, but loud enough for all of the others to hear. \"That brute hurt Gwen, and now Steve has it to do. He'll never allow another man to touch her like that as long as he lives. He'll kill that damn stupid pirate. Just watch.\n\n \"But it isn't enough to just kill him. The world has to see and learn what happens to any man, no matter how big and strong he is, that harms Gwen. Steve will kill him with his bare hands! He's the Warrior and he's fighting for his Queen!\"\n\n Once again, Chancellor managed to land a haymaker to Steve's face. Steve stumbled backward as he wiped the blood from his eyes. His head ached and his ears had a constant ring. He had never fought a man as tough as 'The Butcher'. Realizing that he couldn't allow the pirate to catch his breath, Steve moved back in and once again began hammering Chancellor in the torso. \n\n As he watched his best friend battle his huge foe, Chip contemplated simply shooting the man in the head to prevent Steve from suffering any further injury. The only thing that stopped him was the knowledge that Steve would never forgive him. Chip was beginning to worry about the outcome of the fight. He had never seen Steve defeated. When the battle had begun, Chip was confident that Steve would destroy the larger man quickly. That hadn't happened and now Steve was beginning to tire. Chip promised himself that if Chancellor managed to get Steve down and in a position to kill him, he would shoot the big man and apologize to Steve later.\n\n Steve suddenly changed tactics and struck 'Big Ben' in the knee with a vicious kick, forcing the big man to limp backward. Steve lashed out again and struck the same knee. The impact jarred Steve's leg, but the pirate remained standing. Once again, Steve moved under the wild swings of his opponent and launched another series of body punches. \n\n Steve was as surprised as anyone when Chancellor suddenly dropped to his knees with his head hanging down against his chest. His breathing was extremely ragged as he gasped for air. Steve immediately brought his right foot around and struck the larger man squarely on the chin, turning the brute's head. Seeing his opening, Steve stepped in behind the kneeling pirate, grabbed his hair with one hand and his chin with the other. Then he intentionally, and brutally, snapped the huge man's neck!\n\n \"You lose, Mother Fucker!\" rasped Steve as Chancellor's body dropped to the deck. Steve proceeded to grab a hand full of the dead man's hair and drag the inert body toward the railing. Everyone watched in amazement as Steve grabbed the man's belt with one hand, a fistful of hair with the other, lifted the body chest high, and threw it overboard!\n\n Steve slowly turned; staring at the rest of the pirate crew as he painfully walked toward them. Jason quickly spoke to his captives. \"You men grab your friends' bodies and toss them over the side. Then jump over after them. If any of you are still here one minute from now, you'll be shot where you stand.\" \n\n Enough of the men understood English to translate for their comrades that didn't. There was immediate activity as pirate bodies were tossed into the ocean. A pirate stood looking at a badly wounded fellow pirate, unsure of what to do when Jared walked over, lifted the wounded pirate and proceeded to fling him over the side. The pirates understood the message and began removing the wounded. Within two minutes, there was no sign of any pirate presence on the ship, except for numerous blood stains scattered about the deck. Jason counted 15 bodies of crew members\n\n Steve had staggered past the stunned pirates and up to Gwen, who was being supported by Charlotte. As he drew near, Gwen sobbed and wrapped her arms around Steve's bloodied body as they both slowly collapsed to their knees.\n\n Seeing that Steve was in no condition to make decisions, Jason signaled for one of the helicopters to land on the deck. The sea was calm and it had no difficulty touching down. \n\n \"Jared, get Gwen on that chopper. Chip, help me load Steve. Once we get those two in, Ted and Pete need to climb in. They're both hurt. Chip, you ride with them. The rest of us will take the second helicopter. They must be getting low on fuel, so let's get moving!\"\n\n \"I should stay and help the injured,\" protested Charlotte weakly. \n\n \"We're going home now, Charlotte. You're going with me right now,\" stated Billy emphatically. \"Besides, I need you to take care of my arm.\" Charlotte nodded meekly in agreement. \n\n \"What are the ramifications of Hammer killing that big son-of-a-bitch?\" asked Rosen as he watched the second helicopter lift off the hospital ship. \"What kind of fallout will there be?\"\n\n \"Sir, if I may speak?\" asked a crusty Marine General who had witnessed the entire battle with President Rosen. \"He's added to his legend. I wish to hell he was a Marine. The world just saw the very best America has and now they know just how goddamn good our best is!\"",
        "\"What will other countries think? Steve Hammer just stepped up to a badly injured man and killed him in cold blood,\" argued one of Rosen's older civilian aides. \"We can't condone that behavior.\"\n\n \"That was a battle to the death between two real men,\" shot back General Hopkins. \"It was a war situation. Those damn pirates killed a lot of innocent people. God only knows what they did to those women! Hammer did what needed doing.\"\n\n Cynthia Rosen had been sitting in the back of the room, watching the drama unfold and listening to the ensuing conversation. She immediately joined the discussion.\n\n \"If you do anything but praise that man every which way possible, it'll all come back to bite you on the ass,\" suggested the First Lady with some emotion. \"There's a man that flew thousands of miles, hung with one hand from a ladder on a helicopter, and was pretty much launched into a hostile, armed group of killers. He did it willingly to save his future wife! He risked everything for her. He fought a massive, deranged murderer and yes, he killed him. By doing so, he made the world a better place and saved the most respected, popular, and beautiful woman in the world.\n\n \"This is a no brainer. I guarantee that every woman that saw that battle will have wet panties whenever they think about what Steve Hammer was willing, and able to do for his lover. You need to come out strongly in support of his actions. It would be far better to argue with your allies than turn your back on America's royal couple, especially after tonight.\"\n\n \"Cynthia and General Hopkins are right,\" agreed Rosen. \"To hell with anyone that doesn't feel Steve had cause. That wasn't cold blooded. That was the heat of battle. That bastard would've killed Steve in a heartbeat if he had the chance. The United States will back Steve unequivocally in this. Alert the press that I'm going to make a statement. I want to be if front of this situation.\"\n\n The quiet at Marsh's droned on for what seemed like a very long time after Steve threw the dead Chancellor from the ship. Cheryl's father, who had been invited to the private room with his wife, finally broke the silence. \n\n \"Jesus! Steve just killed that big bastard, then lifted him up, and tossed his body into the ocean! He's got to be the toughest son-of-a-bitch on the planet!\"\n\n \"Look at Dad!\" pointed out Kate. \"They're helping him into the helicopter. He's been hurt!\"\n\n \"So has Pete!\" exclaimed Becky. \"Jared practically lifted him into the chopper.\"\n\n \"Billy's bleeding quite a bit,\" worried his mother. \"Look at the blood on his arm! \n\n \"Jared, Chip, Charlie, and Jason look okay,\" observed Lisa with some relief. \"Can you believe what those guys just did? They defeated a small army, and Steve killed the guy that was supposed to be the toughest man in the world; and he did it with his bare hands!\"\n\n \"I probably shouldn't feel this way, but I'm glad Steve killed him,\" confessed Paula. \"I can't even think about what that monster did to Gwen. She was practically naked! She had blood on her face. I just hope she's okay. \n\n \"Ted was holding his arm, so his injury shouldn't be life threatening, if he doesn't bleed too much. I don't know about Pete and Billy, but Steve must be in a lot of pain by now. That Chancellor hit him hard enough to kill most men.\"\n\n TV and the internet were consumed with videos, photos, and descriptions of the pirate attack and the aftermath. Sentiment around the world was on Steve's side. Very few people questioned his decision to kill the powerful pirate.\n\n Jason had guessed correctly when he suggested that the choppers were getting low on fuel. By the time they set down not far from the Red Lady, they were running on fumes. As soon as everyone climbed aboard the company aircraft, the pilots pointed her homeward by way of London, where they stopped to refuel. \n\n The sun had only been up a couple of hours when two helicopters flew low over Sparta and landed on the high school athletic field. The citizens of Sparta had been waiting for the group's return and a huge crowd had gathered by the time the copters came into sight.  \n\n Eight convertibles were parked nearby and the weary travelers were escorted to the vehicles by the young ladies of Sparta's varsity cheerleading squad. Paula, Lisa, Kate, Jordan, Becky, and Naomi were already seated in six of the cars and hugged their men as they joined them in the back seat. Billy and Charlotte climbed into one convertible while Steve and Gwen took their place in the last car. Cheryl and Jeff continued to video Steve and Gwen as they gingerly climbed into the automobile.\n\n \"I agreed to this because Dad said he was doing okay and could wait half an hour for what will probably be surgery on his arm,\" explained Gwen to Steve. \"Pete's arm has stopped bleeding. He wanted to do this, and Billy insisted on it. His cuts will require stitches, and it looks like you may need a few, as well. \n\n \"You and I are a sight, but Mom said that everyone was so proud of you guys they simply had to show you how much. It's going to be a little embarrassing, but it's really important to everyone in Sparta that they welcome their heroes back properly. You guys are legend!\"\n\n Gwen's lip was grotesquely swollen and she had a gash on her left cheek, while Steve's face was discolored, with several lumps already formed, and once again, he sported a beauty of a shiner. \n\n The cheerleaders pulled out a huge banner and paraded it around the returning heroes before moving to the front of the column. The banner was professionally made and it read 'The Spartan Nation Proudly Welcomes the Return of our Queen and Our Warriors'.\n\n Before they reached the end of the football field, they were driving through a narrow lane in the midst of a sea of humanity. American flags were proudly displayed and waved as spectators yelled and shouted their pride and approval of the heroic actions of its most famous citizens.\n\n The high school cheerleaders led the procession as the small parade slowly made its way through the main street of Sparta. The couples in the car smiled, waved, and greeted many of the people they recognized in the huge crowd.\n\n Gwen was embarrassed when so many of the people in the crowd gasped when they saw the battered faces of the couple. Tears flowed freely as locals began to realize the scope of the ordeal endured aboard that hospital ship so far from home. \n\n As the procession proceeded through the crowd, women would go into prolonged curtsies and men would bow as Gwen rode past them. Gwen had become somewhat used to the gesture, but tears ran down her swollen cheek as she smiled crookedly and waved to everyone.\n\n The procession traveled four blocks to the entrance of the hospital driveway. People were four and five deep every step of the way. As Steve carefully helped Gwen from the car, the crowd became very loud. Screams, whistles, yells and applause filled the air. Out of habit, Gwen took Steve's left hand in hers and raised it up in a salute, only to have Steve gasp and quickly hunch over.\n\n \"I'm so sorry!\" apologized a mortified Gwen. \"I forgot about your ribs for a second. Please forgive me!\"\n\n The crowd had gone totally silent when it became apparent that Steve was obviously in considerable pain. They clearly heard Gwen's immediate apology and waited for Steve's reaction. Steve slowly straightened back up and carefully pulled Gwen close. He then proceeded to gently kiss her swollen lips in front of everyone as the yells and applause once again became deafening.\n\n Steve finally released Gwen, who flashed a bizarre looking smile to the crowd, took Steve's hand, and walked with him into the hospital. Once inside, Steve found Paula crying as she clutched Ted's good arm to her bosom.\n\n \"Paula, you need to know that Ted came through for me in a big way. He's a true hero and there'd be no wedding if it hadn't been for his quick actions, even while suffering from a badly broken arm. Your husband, along with our friends saved Gwen, Charlotte, and Cheryl from a damn nasty situation.\"\n\n Paula looked at Gwen's face, and then at Steve's as tears started pouring even faster. \"I was so frightened when Gwen called and that horrible bastard took her while she was speaking to us on the phone. We watched it all. I can't believe how brave you men are! I'm so proud of my husband and my daughters' friends that I can't express it.\"\n\n Gwen, Charlotte, and Cheryl were warmly greeted by the rest of the women in the family. Then they heard a familiar voice.\n\n \"Okay, the reunion is over. Orderlies have wheelchairs for anyone with injuries of any sort to sit in and be wheeled to the ER,\" directed Laura. \"Most of you know how it all works. God knows we've had more than a little experience with Steve, Billy, and even Ted. Pete, welcome to our facility for the first time, and I hope the last. Gwen, or should I say Doctor Anderson? You're included in the free ride to the ER. We need to x-ray your face and take care of your cut. Okay everyone, let's get this started!\"\n\n As suspected, Ted required surgery to repair his badly broken arm. Gwen had three small stitches, while Billy needed almost two dozen on his arm where a knife wielding pirate had slashed him just before Billy managed to dispatch the man to hell. Pete had a bullet pass through his triceps. He required antibiotics, a thorough cleaning of the wound and bandaging. Steve had several cracked ribs and a hairline crack of his cheek bone, along with numerous contusions, abrasions, and bruises.\n\n All of them spent the day and that night in the hospital, mostly for observation, as well as an opportunity to rest. Steve had fallen asleep shortly after noon and didn't wake up until six the next morning. He thought that he was recovering nicely until he tried to sit up. That action reminded him of his cracked ribs. \n\n A nurse was walking by his door and saw him struggle to sit on the side of the bed. \"You look a lot better today, Steve. The doctor will be in before long to see how you're doing. What you did for Gwen was the most romantic, courageous thing I've ever seen. I knew you guys had something special even back in high school.\"\n\n \"Sandy Johnson?\" asked Steve as he recognized his old classmate. \"How have you been? I see you're a nurse now. Tell me about yourself.\"\n\n \"You always had a way of making others feel important,\" smiled the young woman. \"I received my nursing degree about four years ago and worked out of state until this hospital opened its new wing. Then I got a job here and I love it!\n\n \"I'm engaged to Ned Turner. He was a defensive lineman on the championship team. He's an accountant now. He had an interview scheduled with Gwen's father, but that's been postponed, as you can imagine. Most accountants around here don't jump from helicopters and battle pirates on the open seas.\"\n\n \"No, I think Ted's one of a kind,\" agreed Steve. \"Are you guys going to come to our wedding?\"\n\n \"You must be kidding! The whole world's going to your wedding! I know you can't tell me, but rumor has the Royal couple, the Russian President, the President of France, former President Hanson, President Rosen, Senator Chatham, and dozens of other politicians and world leaders all coming to Sparta!\n\n \"You guys have done us proud. Gwen is being called Sparta's Queen. She's so modest, generous, and sincere that almost no one feels jealous about it. I was reading some stories on the internet before I came into work. You're called the Warrior, and you'll protect your Queen with your life. \n\n \"You're like a billionaire, a movie star, a recording star, a football star, and the best looking guy in the free world. But with all of that, you remembered me and took the time to ask about my life. I don't know if you realize how that makes people feel. Everyone in town loves you for it. You, Gwen, your friends, and family all act like regular people and treat everyone as equals, even though you're extremely wealthy and successful.\"\n\n \"I guess that means you're coming to the wedding?\" chuckled Steve. \"Please save a dance for me, if it's okay with Ned. It's great to see you again. I almost forgot what a bubbly personality you have. Tell Ned I'll put in a good word for him with Ted, although I can't promise it'll help.\"\n\n \"You will? I can't wait to tell him what you said!\" replied Sandy. \"Somehow, I think you might have some influence with your future father-in-law. Mr. Anderson really seems to like you a lot, but that's no surprise.\"\n\n Just then, a tall man in scrubs walked into the room and Sandy became all business. When the doctor carefully pulled Steve's hospital garb away from his chest to examine him, she let out an audible gasp.\n\n \"Is it the bruising, or the amazing musculature that caused that reaction, Nurse Johnson?\" teased the doctor. \"It looks like you've been in a life and death struggle with a real titan, Mr. Hammer. The fact that you're the one I'm examining indicates your foe didn't fare nearly as well. \n\n \"I watched that battle in real time while sitting on my sofa enjoying a cold drink,\" revealed the doctor. \"It was incredible! My wife thinks it was the most romantic thing she's ever seen. Apparently, fighting and defeating a huge killer to defend your lady is way up there on the list of things women find desirable.\"\n\n \"This woman certainly does!\" came Gwen's voice from the doorway. \"He, Dad, and the other guys arrived in the nick of time. Then Steve somehow got that brute to drop his knife that he held to my throat. I'll never forget that battle and how incredibly tough Steve is.\"\n\n \"I watched it with Ned. He thought that Chancellor guy was going to win. I told Ned that you'd not only beat the guy, but you'd kill him for what he did to Gwen,\" chimed in Sandy.\n\n \"Sandy Johnson?\" asked Gwen as she suddenly recognized the young nurse. \"How have you been? You're a nurse here in Sparta now? It's so good to see you!\"\n\n \"I should have curtsied,\" replied the slightly nervous nurse. \"I forgot since we were in a lot of the same classes in school. I'm sorry.\"\n\n \"Please, don't say that,\" insisted Gwen. \"If people feel better doing that for some reason, it's okay, but I'd prefer that they didn't. I'm not a queen. I'm just the same as you and the rest of our classmates.\"\n\n \"I don't think that's even close to accurate. You're a huge movie star, a congresswoman, and extremely wealthy. You help people less fortunate all the time. You've saved a lot of lives with your generosity. Please let us enjoy having a Queen. It's especially cool because it's what the folks in Sparta want, not some birthright, or privilege. As I was just telling Steve, you're our Queen and he's the Warrior, just like those movies you guys made.\n\n \"Remember that I was in the gym when those terrorists attacked. I saw what Steve did, and what you did as soon as the shooting stopped. At our graduation, I was the one that gave up my seat so Steve could sit on the end. Am I glad that I did! I've seen what you two can accomplish, and it's way beyond what the rest of us mortals can do!\"\n\n Feeling uncomfortable with the topic, Steve made an effort to change it. \"Sandy is engaged to Ned Turner. He's an accountant now. He had an appointment with Ted, but that was before Ted decided to partake in an adventure by flying to the Indian Ocean, jumping from a helicopter onto a ship, and saving my life. It sort of put his business on hold.\"\n\n \"Ned Turner is your fianc\u00e9? He's a great guy! I'll talk to Dad about him. I'd be very surprised if he didn't find himself working in Dad's office pretty soon,\" promised Gwen. \"When's the wedding?\"\n\n \"We're getting married in August. It won't big a big affair like your wedding, but we think it's going to be pretty nice. We're having the reception in Marsh's banquet room. Would you and Steve come? I didn't invite you because I was afraid that it would look like I was trying to pander to you since we haven't seen each other since high school.\"\n\n \"I think that we'd love to go to your wedding and I hope that you come to ours,\" replied Gwen quickly. \"We just have to clear that date on our calendar, which I'll take care of in a few minutes. Maybe Steve and I could sing a couple of songs at your reception, if you'd like?\"\n\n \"I can't believe this is happening!\" bubbled the young nurse. \"You'd do that for us? I can't wait to tell Mom what you said. Small wonder you're our Queen! That'll be one of the nicest things anyone has ever done for me.\"\n\n \"Now that we have Nurse Johnson's social life, and her fianc\u00e9's career on track, let's get back to the matter of Mr. Hammer's health,\" suggested the doctor with a big grin.\n\n Steve and Gwen left the hospital and returned to their house shortly before noon. They were relaxing by the pool when Gwen's phone rang. She spoke on it for several minutes before turning to Steve.\n\n \"Amber Stahl's in Sparta and would like to do an interview with us for tonight's news magazine show. It would be live, an hour long, and with a five second delay. Are you willing? We'll look pretty bad still, but there are so many pictures of us looking like hell out there already, it won't make much difference.\"\n\n \"Sure,\" replied Steve. \"If we can do in Valhalla. I don't feel like leaving Asgard. I'm pretty stiff and sore.\"\n\n That evening, Amber was seated across from Gwen and Steve at a large, solid wooden table in the great room in Valhalla. Amber had asked for an audience to be present so she could show people's response to Steve and Gwen's interview. She also planned on allowing members of the audience ask some questions. There were just over a hundred local citizens, along with Gwen and Steve's close friends watching the interview. Once her cameraman signaled that he was ready, Amber began.  \n\n \"Thanks for agreeing to this interview, Gwen and Steve. First, tell us how you're both doing. You still carry the marks from that situation on the African Coast. Are you okay? And is the wedding still on schedule?\"\n\n \"We're doing fine, although we don't look like it right now,\" responded Gwen. \"I had a few small stitches in my cheek and Steve has three cracked ribs and numerous bruises and contusions, but we're determined to stay the course!\"\n\n \"Steve, everyone wants to know how you managed to arrive on scene so fast. You were in Sparta the last anyone knew. Then we hear there's trouble on the African Coast and you come flying to the rescue.\"\n\n \"I spoke with Gwen in the afternoon and she mentioned that their ship would be sailing along the coast of Somalia. That information concerned me, so I decided to take a precautionary trip to East Africa. Our amazing friends and Gwen's father insisted on going along. By the time we landed, it was known that the pirates were intent on attacking the hospital ship, so we climbed into the two helicopters and did what needed doing,\" responded Steve calmly.\n\n \"You hung from the ladder of the helicopter as it swung around over the ship. You were actually propelled into the waiting group of armed pirates. The video shows you shooting a rifle as you clung to the ladder with one hand. When you came to a stop on the deck, you immediately stood with two handguns blazing. Is all of that something you practiced as a SEAL?\"\n\n \"Not really,\" chuckled Steve. \"We made our plans as we approached the ship. I'd like to add that Chip dropped to the deck and was covering my back within a few seconds of my standing up. Jason, Jared, Charlie, Pete, Billy, and Ted all jumped into the fray immediately. I wasn't alone by any means and wouldn't have made it out alive if it hadn't been for the courage and skill of the others.\"\n\n \"So you had no idea there was a problem when you began your journey? It was simply precautionary?\" asked a surprised Amber. \"Gwen, were you surprised when Steve boarded the ship?\"\n\n \"I had been on the phone with Mom since I couldn't reach Steve. She told me that Steve was approaching the ship in a helicopter and that she was watching the whole thing on TV. I was stunned! That was when Chancellor's men unlocked our door and took us to the deck where he was waiting. So, at that time, I knew Steve would be arriving pretty soon. ",
        "\"Looking back, I realize now that I really shouldn't have been that surprised when Mom told me he was about to board the ship. He's always taking care of me and keeping me safe. I've come to accept that he's amazing, and that he does things no one else can.\"\n\n \"Gwen, your father suffered a broken arm in the battle. We all know he's an accountant with no military training, yet he went on this extremely dangerous mission. He was also wounded the time you recovered Steve and Chip Martin in Iraq. Did you ever think your father would be capable of such heroism?\" \n\n \"Growing up, he was always there for me and my sisters, but we pretty much took him for granted. The evening that he gave Steve 'The Talk' as it's now known, my perspective of him began to change. Then one evening Steve found me and brought me home after an encounter with a less than polite man, Dad actually punched Steve! That really caused me to revaluate everything I had believed about my father.\n\n \"He saved Lisa during the attack at our graduation and went to Iraq with us to find Steve and bring him home. He's stepped up every time there's been trouble. Dad is an accountant, and a very good one, but he's an even better father and husband. Kate, Lisa, Jordan, Mom, and I are extremely proud of him.\" \n\n \"Steve, you fought a brutal hand-to-hand battle with Chancellor, the man known as 'The Butcher'. You ended that struggle by deliberately snapping his neck and throwing his body overboard. Was that planned? Do you feel you were justified? If you had it to do over, would you still kill the man?\" asked Amber.\n\n \"Yes,\" was Steve's simple reply.\n\n \"When did you decide to kill him, and why?\" prodded Amber.\n\n \"When he held a knife to Gwen's throat. She was obviously dazed. She was topless with blood running down her cheek and her lip swollen and bloody. His fate was sealed at that moment.\"\n\n \"There are some critics that think you've proven yourself to be unreliable, that you're 'a loose cannon', unable to control your anger,\" pushed Amber. \"How do you respond to that?\"\n\n \"I would ask the wives, daughters, and sisters of these critics if they would prefer that the man in their life allowed someone to beat and rape them while he searched for legal remedies. Ask the families of the dead crew members if I was too harsh on the man that killed their loved ones in cold blood. Chancellor and I knew exactly what we were getting into. Men have fought to protect their women and families since the beginning of time. Protecting Gwen is my duty; my purpose in life.\"\n\n \"What would have happened to Gwen and the others if that man had killed you in that brutal battle?\"\n\n \"Watch 'Butch Cassidy and the Sundance Kid' for the answer to that one,\" responded Steve with a slight grin. \"Gwen is destined for greatness. Somehow, for some reason, she's fallen in love with me. I'll always do everything within my power to keep her, our family, and our friends safe and healthy. I'll never stand idly by when she's threatened. That's my promise to her, and to everyone watching this,\" stated Steve almost defiantly. \n\n \"You certainly don't waffle on that subject!\" observed Amber. \"Gwen, President Rosen went on television shortly after the attack to state his unequivocal support for Steve's actions. Did that surprise you at all?\"\n\n \"Truthfully? This is the first I've heard of it. But, it doesn't surprise me, since Steve, Dad, and our friends acted exactly as men should. I'd have been surprised if he didn't support Steve completely,\" replied Gwen.\n\n \"Steve, it was almost exactly eight years ago that I interviewed you and Gwen as you prepared to enter the Academy and Stanford. I asked Gwen if your relationship would survive when you two were to be separated by so much time and distance,\" recalled Amber. \"Gwen told me then that 'time would tell'. How did you two do it?\"\n\n \"I never felt like we wouldn't be together, and we never lost sight of our goals. Gwen is the one woman in the world that I want as my wife, and I'd wait until Hell froze over if I had to,\" replied Steve as he smiled at Gwen. \n\n \"I think the past couple of days have demonstrated why I'd never be unfaithful to Steve,\" beamed Gwen. \"He's proven his devotion and love as much as is humanly possible.\"\n\n \"Gwen, can you tell us some of the famous guests that you expect to attend your wedding Saturday. The rumor mill has been working overtime. The list is a Who's Who of the most powerful and famous people in the world.\"\n\n \"I can tell you that we invited everyone that cared to come,\" smiled Gwen around her swollen lip. \"Our friends and neighbors will be here. I think there will be some well known people in attendance, but they can decide if they want to reveal their plans to the world. We just hope that we get enough people to fill up the LiR building.\"\n\n \"Steve, it's been reported that Lady in Red Productions is granting the rights to televise the wedding to any network or station that donates five million dollars to a charity you designate. How has that worked so far?\"\n\n \"Pretty well, Amber. We've had nine networks and independent stations take us up on the offer. Stephanie explained it all to me a few minutes ago. We have a list of charities and are on the tenth one now. Our local hospital received the first donation. Larry Carson's 'Help a Veteran' received the second one. We feel really good about our wedding helping people in need.\"\n\n \"That brings me to my next question. You're actually performing a two hour musical production as a lead-in to the wedding! I've never heard of this being done before. Obviously, it's one reason so many stations want to broadcast the wedding of the century. Gwen, can you give us an idea of what to expect?\"\n\n \"I've hardly had time to go over it with Charlie and Jordan. We have three days to learn our parts, and our songs, so I'm a bit nervous about that. Luckily, a lot of what we'll perform will be our hits and popular concert numbers. I guess it could be considered a musical production of our lives from when we met right up to the wedding.\" \n\n \"Let's take some questions from the audience,\" suggested Amber as she pointed to a young woman near the front.\n\n \"Gwen, are you going to wear a white gown for your wedding?\"\n\n \"That's a very good question!\" laughed Gwen. \"I prefer that my choice for a gown is revealed to everyone at the wedding, and not before, but thanks for asking.\"\n\n \"We saw pictures from the ship during and after the big fight,\" chimed in another young woman. \"How does your future husband stay in such good shape? He's even more ripped now than he's been in his movies!\"\n\n \"Steve has a nutritionist handling his diet and he's been working out a lot with Jared so he'll be ready for football,\" responded Gwen as she smiled at Steve. \"I do think he's in absolutely amazing shape and looks great. You saw the pictures. How did he look to you?\"\n\n \"To me?\" gushed the woman. \"He's like a fantasy. His body is perfect!\"\n\n \"Let's get to a few of the males in the audience,\" laughed Amber as she pointed to a young man that Steve guessed had to still be in high school.\n\n \"I just saw on my smart phone that the night before your wedding, Bill Hardy is going to broadcast what he says is the truth about the pirate attack. He's advancing the theory that Gwen Anderson insisted that the captain keep the ship close to the coast. He claims that he's going to show viewers how she's lied about everything that happened. He states that Chancellor was set up by your company to garner publicity for you both. Gwen pretty much lured the pirates in to their death, and the fifteen crew members that died were just collateral damage. How do you feel about Hardy's attack on you and Gwen?\"\n\n \"We don't care to respond to anything that he....,\" began Gwen before Steve politely interrupted.\n\n \"Excuse me, Gwen. If Hardy plans to malign you so viciously, I feel compelled to put an end to his senseless, petty attacks.\n\n \"Stephanie? Could you quickly verify what this man has just told us and get back to me immediately?\" asked Steve as he spoke to Stephanie, who was sitting in a front row seat. \"If it's factual, we'll proceed to dismantle Hardy's career. Now, let's get back to the interview.\"\n\n \"Who will you maid of honor and best man be?\" asked an older woman sitting farther back.\n\n \"We really had a long discussion about that since we have many dear friends. We finally decided that Kate and Chip would be asked first and they graciously accepted,\" beamed Gwen. \n\n \"Where will you go for your honeymoon?\" asked a middle aged man from the audience.\n\n \"We're going to spend our honeymoon in the place we love the most. In other words, right here in Sparta!\" revealed Gwen. \"We had planned on traveling to some exotic place with sand and sun, but after all that's happened to us lately; we decided that we just want to relax with our family and friends. What more could we ask for than what we have right here?\" \n\n \"Thanks for the very good questions,\" stated Amber to her audience. \"Gwen, will you be having children?\"\n\n \"I sure hope so,\" answered Gwen quickly. \"If we're blessed with two or three kids, we'll be extremely grateful. Imagine little Hammers running around town!\"\n\n \"Steve, how do you feel about Gwen being referred to as Sparta's Queen?\" quizzed Amber.\n\n \"I think that Gwen has qualities that royalty should possess,\" replied Steve thoughtfully. \"I can see why she would be considered our Queen. I know that it's not a real title, but it's an honor to be referred to in that way. Gwen has earned that sort of love and admiration from much of the public, so I'm good with it.\"\n\n Just then, Stephanie waved to catch Steve's attention. She was grim faced as she nodded meaningfully to him. Steve nodded back and turned to face Amber.\n\n \"I know that you and Bill Hardy work for the same network, so I hope this doesn't adversely affect you, but I've decided to bring Hardy down. His planned attack on Gwen's integrity, as ridiculous as it is, cannot and will not go unanswered.\n\n \"Bill Hardy was a reporter for a local San Diego station until the tsunami that struck Indonesia in 2004. The story of his struggles as he was swept away by the ocean that day helped propel him to national prominence,\" recapped Steve calmly.\n\n \"The truth is that he was in a small hotel in Darwin, Australia the day that the tsunami struck Indonesia. He watched the news on a TV in the bar with a couple of Australian nationals. Only after the tsunami's damage was complete did he travel to Indonesia. He apparently cooked up the story about his struggle for survival. I'm instructing Stephanie to place the file we have on Hardy on our web site right now. He keeps accusing Gwen of lying. She does not lie, ever, but he does. He's brought this on himself.\"\n\n Amber was stunned at Steve's revelation and had no idea how to proceed, or if her network would even broadcast Steve's comments about Hardy. Her producer gave her the sign for a commercial break and she quickly announced that they were breaking for words from their sponsors.\n\n \"Jesus, Steve! Couldn't you have warned me about that?\" demanded Amber. \"I know that jackass really pissed you off, but that was a live interview!\"\n\n Before Steve could respond, Amber's producer pulled her off to the side and had a short conversation with her. She nodded to the man and returned to the table where Gwen and Steve had remained seated.\n\n \"It got through,\" admitted Amber. \"We were on a delay, but by the time the editors realized the ramifications of what you were saying, they were too slow to stop it. That was broadcast across the country. Hardy's own network just broke the story about how he lied to the world about his adventures in that tsunami! I know you must have all kinds of proof to make an accusation like that publically, but that was rough! \n\n \"We're coming back from break in thirty seconds. Please don't say anymore about Bill Hardy, okay?\" insisted Amber.\n\n The last half hour of the interview went by with no further mention of Bill Hardy. It was obvious that the audience was very much behind Steve and Gwen, their hometown heroes. Once the interview ended and Amber signed off, people hurried to speak to Gwen and Steve. \n\n \"You really stirred things up,\" chuckled Stephanie as she showed Steve her IPad. \"Look at how the press is feeding on Hardy already. He was never well liked by his peers, but he had power. Thus, he was feared by a lot of people.\" \n\n \"That jackass just learned a hard lesson, and I bet a lot of others will take heed,\" predicted Jordan. \"If you attack Gwen Anderson in any way, Steve Hammer will take you down! I thought everyone had already figured that out, but apparently both Chancellor and Hardy were slow learners.\"\n\n \"Yeah, Steve was pretty pissed at Hardy, wasn't he?\" agreed Gwen before changing to a happier subject. \"Stephanie showed me that video you and Charlie put together for 'The Boys are Back in Town' and it was great! You managed to make it sound country, but still keep its old flavor. I love how you show the guys getting off the choppers looking all strong and manly in their tight tee shirts after that struggle with the pirates. That 'Guess who got back in town today' line was perfect, and 'them wild eyed boys that had been away' was totally appropriate. Those guys were on a mission, and they were wired. \n\n \"I really liked how you showed the scene where I slapped Steve's face from our first movie with 'this chick got up and she slapped Johnny's face'. The whole thing was so well done and you and Charlie absolutely nailed the music part. It'll be huge!\"\n\n \"Thanks! We just released it and it should start playing in the next day or two. I didn't want to step on your wedding, but I knew the video would really be popular, especially with the pirate thing fresh in everyone's mind,\" admitted Jordan.\n\n \"I have some more news,\" interrupted Stephanie. \"The ABS network has agreed to pay our price for the first ever network showing of the Queen and Warrior trilogy. They agreed, as long as we'd guarantee to provide the movies so they could play them Friday, Saturday, and Sunday nights. We've deposited the money and transferred the films. I thought Steve was crazy for holding out for so much, but he got it, even though it's taken over six years. They're going to show 'Rise of the Queen' Friday, and then on Saturday they'll broadcast your wedding before showing 'The Rise of the Warrior'. Sunday night will be 'Rise of the Empire' and I think it's darn smart marketing strategy. People will love watching those movies the very weekend of your wedding, especially so soon after Sparta's 'Warrior' showed the world why he's a legend.\n\n \"Some of the other networks are showing your other movies and we just may sell the broadcast rights to 'Billie Jean'. NBS wants to play it Monday night. They don't want to compete with the Queen and Warrior movies, but they want to strike while the iron's hot, and that iron is red hot right now. Because it won best picture at the Oscars, it'll demand a high price, especially since it was in theaters just a few months ago.\"\n\n \"Gwen, I've received word that the Royal Couple will be coming to Sparta on Thursday evening!\" exclaimed Ashley. \"They've accepted your offer to stay in your home for the two evenings they will be here. They'll fly out after the wedding on Saturday.\n\n \"President and Cindy Rosen, former President and Mrs. Hanson, President and Mrs. Novokov, and Vlad and Anna Novokov will 'rough it' in Valhalla. Senator Chatham is staying with your mom, along with Steve's grandparents, aunt, and cousin Jen. The rest of us are putting up some VIP's for the weekend. Nadiya and Hans are staying with Kate. Lisa and Jason are putting up former President D'Anjou and his wife. Jordan and Charlie are hosting President Marchant and his wife and daughter. Asgard will have presidents, a prince and princess, as well as our queen and her king. This is going to be the biggest and best wedding ever!\"\n\n \"Don't be calling me a queen in front of the Royals!\" cautioned Gwen. \"That would be embarrassing.\" \n\n Later that evening, Gwen announced that she was going to join her sisters and friends for a girls' night at Valhalla. She gave a Steve a long kiss and headed out the door. Steve was relaxing while watching a baseball game when the doorbell rang. Curious, he moved to the front door and opened it.\n\n \"We're here for your bachelor party. You told everyone that you really didn't feel up to going out, so we've decided to bring the party to you,\" stated Julie Wilson as she walked into the living room followed closely by Paula, Diane, and Cindy Quick, all wearing robes.\n\n \"Uh, thanks for the thought, but I'm still pretty sore,\" responded a very surprised Steve. \"I was just going to relax for a while before going to bed.\"\n\n \"That's exactly what we had planned for you,\" grinned Cindy. \"We want you to be very relaxed.\"\n\n \"And to that end, you're going to sit for a while in your hot tub and enjoy all of the therapeutic advantages possible,\" grinned Diane. \"We're going to go back and climb in and we expect you to join us.\"\n\n The ladies all chuckled at the confusion on Steve's face. \"Ladies, I'm not sure we should be doing this. Your husbands may be not be very pleased when they find out what you're doing here. I sure don't want to upset Gwen right before our wedding.\"\n\n \"It was Jeff's idea. Will and Ted couldn't agree fast enough,\" revealed Julie Wilson. \"We discussed it with Gwen and she agreed to visit with the other girls for a couple of hours. She thought you should be rewarded for your heroics.\"\n\n \"Really? What a wife she'll make!\" laughed Steve. \"Who am I to refuse such a generous and beautiful offer? You ladies go on out to the tub and set the controls where you want them. I'll be right out.\"\n\n A few minutes later Steve joined the women. He found them all sitting in the tub. They had a couple of bottles of wine close at hand and each had a partially filled wine glass in their hand. Steve placed a cooler packed with beer next to the wine.\n\n \"That's a lot of beer,\" observed Paula. \"You never have more than one or two. I hope you don't plan on drinking too much.\"\n\n \"Listen to you,\" laughed Cindy Quick. \"You're sitting there all naked and sexy, but you're talking like a mother-in-law. You must know Steve well enough by now to realize he's quite capable of taking care of himself. We all saw an example of that the other evening. It involved being flung from a helicopter into murderers, a gunfight, and finally a battle to the death with a giant. A couple of beers won't even faze the guy.\"\n\n \"Did you just say 'naked'? As in no clothes?\" asked Steve with a huge grin as he peeled his clothes off to reveal a swim suit, as well as an ace bandage wrapped around his chest. \"I thought you had swim suits on under your robes. I feel overdressed.\" \n\n \"Don't worry about that little problem. We'll help you get those shorts off,\" volunteered Julie Wilson. \"Can we remove the wrap so it doesn't get wet? I've had experience wrapping up broken ribs before, so I can help you get it back on.\"\n\n \"I'll take it off and Gwen can wrap me up when she gets home,\" replied Steve. \"I just have to move very slowly and not extend my arms away from my body too far.\"\n\n \"Oh, Steve! That brute really hurt you!\" exclaimed Paula with concern as Steve carefully removed the bandage and his bruises came into view. \"I doubt if there's another man in the world that could have defeated him, and you paid dearly.\"\n\n \"It doesn't look as bad as the time that crazy terrorist abducted him and drove up into the mountains,\" pointed out Diane. \"Remember how he was covered in long welts and black and blue marks all over his body?\"\n\n Steve began to step into the tub when Cindy Quick stopped him. \"Just a minute! Do you think I've waited this long to get into a situation like this just to see you in a swim suit? Take those trunks off!\"",
        "\"Cindy's right,\" agreed Julie Wilson. \"I've been waiting even longer than she has. Off with the trunks!\"\n\n \"I'll slide them off once I sit down,\" offered Steve as he resumed his climb into the tub. \"I didn't get to see the four of you climb in naked.\"\n\n \"That's what you get for being last,\" quipped Diane as she and Paula each grabbed a leg of Steve's shorts and quickly pulled them down, fully exposing Steve to the eyes of four keenly observant women.\n\n \"So that's what Naomi's been talking about,\" stated Julie with more than a little admiration. \"Paula, your daughter's a very lucky woman.\"\n\n \"I always thought Jordan was stretching the truth,\" admitted Cindy. \"I think the word 'stretching' may be commonly used with this guy, but in a good way.\"\n\n Steve blushed and sat down as quickly as he could with his body still sore. \"This does feel really good. Paula, would you hand me a beer?\"\n\n Paula looked at the cooler, which was just beyond her reach, and then back at Steve, who was grinning smugly. Shrugging her shoulders, she leaned over the side of the tub, her large breasts swinging freely as she bent down to pull a beer from the cooler. Then she stood, stepped over to Steve and carefully sat in his lap as she handed him the beer. \n\n \"It's your bachelor party. You're supposed to have naked women serving you drinks and giving lap dances. The situation doesn't allow for dancing, but we can bring you drinks and sit on your lap, if that's okay with you?\"\n\n \"Are you kidding? This is the best bachelor party ever!\" enthused Steve.\n\n \"I guess so!\" laughed Julie. \"How many grooms have their beautiful, and naked I might add, mother-in-law sit on their lap and offer them a beer? I'd say you've just realized what most men only fantasize about.\"\n\n There was a quick knock on the door, just before it opened and Will, Ted, and Jeff Wilson stepped into the enclosed porch. Paula gasped and tried to slide off Steve's lap, but he had slid an arm around her stomach and held her in place.\n\n \"A good bachelor party has to include some male friends to share in the moment,\" stated Steve with a smile. \"I asked these guys if they'd mind joining me with four naked ladies and help celebrate my pending nuptials. They were kind enough to agree.\"\n\n \"I don't know how you talked Jeff into this,\" responded Julie immediately as she beamed at her husband. \"The thought of seeing Paula, Diane, and Cindy naked is upsetting to him, as you can see by the bulge forming in his shorts. Get your clothes off and hop in, Jeff!\"\n\n While Ted and Will appeared uncertain about how to proceed, Jeff had no qualms pulling his shirt over his head and dropping his shorts and boxers. All the women watched him as he made his way over by Julie and sat down.\n\n \"Will, are you going to let Jeff and Steve have all of the fun?\" teased Diane. \"This is your chance to live the dream. I know you've always admired my sister's figure. Now it's on display with her on Steve's lap and her big breasts above the water. If you want to stay, you need to get naked and in the tub. You just might get to see Julie and Cindy, too.\"\n\n Will grinned as he unbuttoned his shirt, dropped his shorts, and stepped into the water.\n\n \"You go commando, Will?\" asked Paula as she made a point of staring at Will's groin before he sat down.\n\n \"I told you that under that unassuming, accountant demeanor is a sexual tiger,\" replied Diane with pride. \"This guy will try about anything, and he'll do it extremely well. He has a very sick mind, and I love it!\" \n\n \"I can't even get my clothes off,\" admitted Ted as he pointed at his arm. \"I can't get the cast wet, either. Maybe I should leave.\"\n\n \"That's not going to happen!\" stated Paula emphatically. \"You're not leaving me here with these deranged men, and I'm having too much fun to leave.\"\n\n With that, Paula stood and stepped out of the tub. Jeff Wilson groaned as he watched Paula's naked body move toward her husband. She gently unbuttoned his shirt, removed Ted's sling, and tugged the shirt off over his cast. Then she replaced the sling, knelt in front of her husband, unbuckled his belt and lowered his shorts. \n\n \"You go commando!\" laughed Diane. \"It seems that so-called bean counters are way sexier than one might expect.\"\n\n Paula led Ted into the water and had him sit on a higher seat so that his cast would be above the water. Then she sat on his lap and kissed him soundly on the lips.\n\n \"Excuse me, Cindy, but would you mind grabbing a beer for Jeff?\" asked Julie Wilson. \n\n \"You're closer to them than I am,\" pointed out Cindy before realizing Julie's intent. \"Of course! I'd be glad to get a beer for him.\"\n\n With that, she stood and leaned over the tub to reach into the cooler. The men were torn between looking at her beautiful round ass and her large, firm breasts so they looked at everything as much as they could. Cindy smiled as she turned around to see the men wide-eyed and slack-jawed. She handed the beer to Jeff who openly stared at her breasts.\n\n \"Way to be smooth,\" joked Julie as she pushed her husband's jaw closed.\n\n Cindy very carefully sat down on Steve's lap and kissed his cheek. \"I can't tell you how much this all means to me. I'm closer to Jordan now than I had ever been. I get to see her beautiful baby every day and everyone treats me with respect. I have you to thank. That wake-up call that morning at Paula's pool turned my life around. You've forgiven me and now I get to sit on your lap naked. I'd say it all worked out pretty well.\"\n\n \"You're just living up to your potential,\" insisted Steve. \"I've heard about how you volunteer for several charities and fund raisers. I see how much people like and admire you. When you walk into a room, every man turns to watch. You're a very good person and it's obvious to everyone.\"\n\n \"You saved Jordan. She's now very happy, successful, and devoted to her family. Then you saved me. I'm just trying to live up to your expectations,\" responded Cindy. \n\n \"I think you don't give yourself enough credit, but as long as you're doing so well, I'll take any praise you want to give me,\" smiled Steve as he hugged the woman very gently.\n\n \"I'm thinking that we need to make a movie that features you ladies,\" stated Steve. \"You represent a huge part of the population. We need to showcase that women in their forties and fifties are active, vibrant, and sexy. I'll see what we can come up with. Our company needs to utilize the talent we have available.\"\n\n \"You think we're sexy?\" asked Diane as she moved to sit on her husband's lap.\n\n \"Ahhhgh,\" moaned Jeff as he watched Diane's breasts jiggle as they came into view.\n\n \"I guess Jeff answered that question,\" laughed Julie. \"Now he's going to be all horny and demanding tonight in bed, not that I'm complaining.\"\n\n \"Oh, my! I just noticed that Ted doesn't have a drink. Julie, could you hand a beer to my husband?\" asked Paula with a smirk.\n\n \"I thought you'd never ask!\" beamed Julie as she rose and moved between Ted and Will to reach into the cooler. As she moved past Will, she lurched a little so that her breasts slid across Will's face. \n\n \"I'm so sorry!\" chuckled Julie. \"I hope I didn't hurt you, Will.\"\n\n \"He seems to be okay,\" laughed Diane. \"If there's any bruising, he'll just have to live with it, and the memories of the mammaries.\"\n\n The men watched the very voluptuous Julie Wilson lean over and pull a beer from the cooler. As she swung back to the tub, she once again lurched slightly, which forced her ample bosom into Ted's staring eyes and face. She took a few seconds to pretend to steady herself before pulling her amazing chest away from a grinning Ted.\n\n \"My God!\" exclaimed Paula. \"You could have poked Ted's eyes out, and then you almost smothered him. Are you okay, Darling?\" \n\n \"I'm alright,\" managed Ted as his face glowed a beet red. \"I thought jumping onto a ship full of blood thirsty pirates was dangerous, but being around Julie when she's naked is even more risky. How do you manage, Jeff?\"\n\n \"I have nipple scars all over my body,\" replied Jeff with mirth. \"Those babies have been abusing me for years. Now you have an idea of how I suffer. It seems like life in your house must have been pretty dangerous, too.\"\n\n \"Not as bad as it probably should have been,\" answered Ted. \"I was a bit of a prude most of my married life. I'd never have permitted Paula to expose herself like this. It's only the last couple of years that' I've realized that nudity isn't some sort of terrible sin and it doesn't have to lead to orgies.\"\n\n \"Damn! You just spoiled my fantasy,\" complained Julie. \"Cindy, could you take a seat somewhere else so I can have a turn on Steve's lap?\"\n\n \"Here, sit on Will's lap,\" offered Diane as she stood and moved toward Jeff and carefully sat down on his lap. \"I promise to be careful to not give you any more 'nipples scars'. I wouldn't want to disfigure you even more.\"\n\n \"Truthfully, I could stand a couple more around my face,\" joked a delighted Jeff as he carefully placed his hands on Diane's knees and watched his wife slide sideways onto Steve's lap.\n\n \"Now I can die happy,\" stated Julie as she leaned over and kissed Steve's cheek while pressing her breasts against his chest. \"I've wanted to do this for years.\"\n\n \"I don't know what stopped you,\" complained Steve. \"I wanted this when we were stationed in Cuba.\"\n\n \"I thought you were a boy that spent a lot of time looking at my daughter. Now I find out that you were watching me, too? Ladies, did you know about this? He uses our daughters to get close to us.\" \n\n \"I suspected it for some time,\" admitted Paula. \"He's always seemed to have an unusual attraction to us more mature women. Then I found out that all of the young men seem to fancy us. It's all very disconcerting.\"\n\n \"Yeah, I can't tell you how upset I get when I see Billy and the other guys trying to look down my top,\" added Julie. \"I had to stop wearing bras so just to stop those young men from seeing my sexy, frilly bras.\" \n\n \"That's why we've been seeing your girls bouncing around so much lately?\" asked Cindy. \"What a good idea. I'm going to stop wearing any under garments at all. That should keep those guys from trying to look.\"\n\n \"That's a great idea,\" agreed Ted as he sneaked a quick feel of Paula's breast. \"It would sure stop men from seeing your underwear. I would suggest that all of you ladies listen to Cindy and follow her suggestion.\"\n\n \"Really, Ted? You used to complain if I went braless around the house. Now you're telling me I should go out that way? And leave my panties home, too?\" \n\n \"Steve, what do you think?\" asked Julie as she pressed her breasts more firmly against Steve's chest. \"Never mind! I know what you're thinking. It's poking me right now!\"\n\n \"Julie, let's trade seats,\" suggested Paula quickly. \"Jeff is getting all jealous of Steve. Besides, Ted's been staring at your breasts since you raised them out of the water and slapped him in the face with them. I want him to see them up close and personal again. I think he'll reward me for the suggestion later.\"\n\n The two women traded places and Paula sighed contentedly as she carefully leaned her breasts into Steve and smiled. Steve suddenly put on his serious face that Paula knew so well. She cocked her head and watched him formulate his thoughts.\n\n \"Paula, I'd like to ask you a favor. I hope I'm not out of line, but I've been thinking about it for awhile,\" began Steve. \"Gwen will dance with Ted at the wedding for the father/daughter dance. My mom's been gone for over ten years. You've been like a mother to me since the day I met you and Gwen. Would it be okay if I danced with you for the mother/son dance?\"\n\n Tears trickled down Paula's face as she realized what Steve was asking. He wanted her to be his mother, at least temporarily. She knew he didn't make the decision without considerable thought. He couldn't have given her any greater honor!\n\n \"Oh, Steve! Of course, I'd be okay with that. I'll be the proudest mom in the world!\" responded Paula as she wrapped her arms around Steve's neck and gave him a quick kiss on the lips.\n\n \"If I hadn't just seen it, I never would have believed it,\" marveled Diane. \"This guy that's marrying my niece has her mother, my sister, naked on his lap as he asked her to represent his mother at the wedding. Her sister and her husband watched it happen and feel all choked up. While Paula isn't acting too motherly at the moment, she's accepted the rare honor.\"\n\n \"Not acting too motherly?\" questioned Julie. \"She's doing everything but breast feeding the boy. Look at her boobs while she has her arms around Steve. They're plastered to his tender, aching chest. Are you okay, Steve? Should we get a pry bar and free you from your mother-in-law's grip?\"\n\n \"I'm fine!\" answered Steve as he gently hugged Paula. \"I was worried that you might think I'm childish for wanting you to dance with me in place of Mom. You've been so good to me since the first time we met. I want you to know how much I respect you and Ted and appreciate that you're welcoming me into the family.\"\n\n \"Now that's the way to welcome a young man into the family!\" laughed Julie.\n\n \"Dad, Mom, and I used to go to nude beaches when I was a kid, when we were on vacation. If Mom was still alive, I'd love to hug her just like this. I only wish that I could,\" lamented Steve.\n\n \"I know I could never take your mother's place, but feel free to hug me any time you want. Ted and I have discussed you until we're blue in the face. You're the son we never had, and we're proud as hell to have you in the family. We can't wait to hold the grandchildren that you and Gwen give us!\" soothed Paula as she again hugged Steve while tears trickled down her cheeks.\n\n \"I think it's about time I took my place on Steve's lap,\" insisted Diane as she stood and waited for Paula to move off Steve. \"It drives Will crazy when I cuddle up to Steve. Plus he'd love to have his sister-in-law naked on his lap. This bachelor party was a great idea!\"\n\n \"I think it just might catch on,\" agreed Julie. \"That sick young man, Billie, has been practically begging for a peek at my girls. Maybe we could entertain him before his wedding.\"\n\n \"We could start a business doing bachelor parties,\" added Cindy. \"That's another way to give back to the community!\"\n\n \"Except for a chosen few, count me out,\" laughed Paula. \"Ted and I have come a long ways, but neither of us would be comfortable with me jumping naked into a hot tub with random, horny, young men.\"\n\n \"I think Will and I feel the same way,\" stated Diane as she pressed her ample bosom gently against Steve's ripped chest. \"However, this horny young man is not random, and I know I'm driving both him and Will crazy right now. This is about as wild as I care to get.\"\n\n \"Then let's get home!\" insisted Will. \"I need to feed the fish.\"\n\n \"That's our code for 'let's get home and get it on'. Sorry Steve, but my husband needs me and I'm feeling the need myself. It was a great party and we'll see everyone tomorrow,\" promised Diane as she stood and extended her hand to Will as Paula moved back to Ted's lap while Julie nodded meaningfully to Jeff.\n\n Soon just Cindy, Paula, and Ted remained in the tub with Steve. \"I'll be going home now, too. It's pretty dark and I'll have to watch my step, so I'd better get going,\" said Cindy as she stepped from the tub and donned her robe.\n\n \"I'll walk you home,\" insisted Steve as he pulled on his trunks and sandals. \"It's the least I can do for a lady that brightened my night so wonderfully.\"\n\n Steve walked Cindy to her door. They took their time and chatted as they strolled along the path between the homes. When they reached Cindy's door, she gave Steve a kiss on the cheek and thanked him for the great evening.\n\n As Steve approached his home, he heard a shriek and then numerous giggles and soft talking between numerous women. As he stepped inside, he saw Lisa, Kate, Jordan, Naomi, Stephanie, and Gwen all red-faced and giggling like schoolgirls. \n\n When they finally noticed Steve and his perplexed look, they broke into gales of laughter. Kate was the first to calm down enough to form a coherent sentence.\n\n \"We came in the door and heard what sounded like a cross between a scream and a moan coming from the porch. We all knew that Mom, Diane, Cindy, and Julie were going to stop by and 'cheer you up', so to speak, mostly by jumping into the hot tub with you and letting you admire the eight natural wonders of the world. When we heard the sounds of passion, each of us thought you were in there with one of our mothers, doing something that we all know you wouldn't do, but it sure sounded like you were! We barged through the door to find Mom with her eyes rolled back and screaming quietly in ecstasy as she bounced on Dad's lap!\n\n \"We all stopped and watched in stunned silence as Mom rode the wave for all it was worth. Then Dad started moaning and we decided to leave, but Mom had finished her petite mort by then and saw us leaving. She shrieked as Gwen was closing the door. We were all standing here in shock when Naomi pointed out the window and we saw Mom and Dad trying to hurry down the path to their place. They were carrying Dad's clothes and her robe. His arm was in that sling and he couldn't move too fast and Mom kept trying to pull him to go faster. \n\n \"We've been laughing for several minutes while we waited for you to come home and explain what's going on. We saw things that will scar us for years to come.\"\n\n \"The ladies came over to throw me a 'bachelor party', as they called it,\" began Steve as a big smile spread across his face. \"I knew they intended to tease me mercilessly, which they are very well equipped to do, so I texted Jeff, Will, and Ted and invited them to join us. The ladies were surprised at first, but seemed to enjoy it quite a bit. The men seemed to feel it was okay.\"\n\n \"Dad was naked with Jordan's, Naomi's, and Stephanie's mothers?\" asked a surprised Lisa.\n\n \"My father must have loved every minute he was here!\" exclaimed Naomi. \"He's a bigger perv than Billie, but he tries to not let people know what a lecher he really is.\"\n\n \"I bet my father had a great time,\" predicted Stephanie. \"He and Mom seem to have a little game where she flirts a little and teases Dad and pretty soon they're home in bed, working on another sibling for me.\"\n\n \"Where were you when Mom and Dad decided to do the dirty in our tub?\" asked Gwen to Steve.\n\n \"It was late and kind of dark, so I walked Cindy home. Ted and Paula were in the tub when we left, but if I'd known what they had in mind, I might have hung around a little longer, or hurried back sooner,\" admitted Steve with a chuckle.\n\n \"What about Mom? Did she have a good time? Did she behave?\" worried Jordan.\n\n \"Your mom was great! She really is a beautiful woman, and her figure is amazing. Now that she's a bit more demure, shall we say, she's a real pleasure, especially naked. She gave me a little kiss on the cheek at her door. Then I came home to find this circus. I'm thinking we should make a 'buddy movie' with those ladies. I think there would be a huge audience for a movie featuring beautiful women their age and looking like they do.\"\n\n \"Mom would love that. She's been working hard to be respectable. She almost never drinks. She's totally off drugs and hasn't smoked in several years,\" revealed Jordan. \"If she could be in some movies, she'd be really happy, especially if she gets a love scene or two with a certain stud that's about to get married.\"\n\n \"How are we going to face Mom and Dad now?\" asked Gwen. \"That was pretty embarrassing, both for them, and for us.\"\n\n \"Are you kidding?\" laughed Lisa. \"We'll tease them endlessly and they'll love it, especially Dad. We'll tell him what a stud he is and how he had Mom's eyes rolled back. From what I've learned about men, they're very pleased when their sexual prowess is mentioned favorably.\" ",
        "Early the next morning saw everyone assembled in the LiR Center so that Charlie could go over their parts in the wedding production. \"We have limited time, so I'm asking that everyone work hard to get their parts right as soon as possible. Gwen and Steve will be carrying most of the load, but we need to help them every place that we can. As usual, we're trying to do something in a few days that should be rehearsed for months.\"\n\n As Charlie began handing out the scripts to everyone, Steve suddenly found a slim female flying at him. He managed to catch her as she wrapped her arms around his neck and kissed him numerous times.\n\n \"You look familiar. Do I know you?\" teased Steve as he hugged the young woman back.\n\n \"Better than anyone else!\" laughed Roxie as she slowly released her grip on Steve's neck. \"We spent a week naked together in a tropical resort, if you recall. My boobs are bigger now. I'll show you later!\"\n\n \"That won't be happening,\" assured Steve, returning Roxie's smile. \"Nothing would be unhealthier for me than being with a beautiful young, topless woman, especially just before my wedding.\"\n\n As Steve spoke, he gathered Roxie's sister, Sam, into his arms. \"Wow! Look how beautiful you are now! You're growing into a beautiful young woman.\" \n\n Sam smiled and hugged Steve back as he mother and father stood nearby. \"She's been doing very well since her adventure in the jungle. We were afraid that it would set her back, but she's become more confident and outgoing. \n\n \"You already know that Roxie has no shyness problems,\" laughed Mrs. Thompson. \"She's really matured in the last year, and I don't mean her bust size. She's doing well in school and making some very nice friends. Odd as it sounds, their time fighting for survival in the jungle with you seems to have been very beneficial for them both.\"\n\n \"We're going to have a part in your big musical for the wedding!\" exclaimed Roxie. \"I just hope we get to show everyone how we were half naked all of the time and how great it was.\"\n\n \"I hate to dash your hopes, but that won't be happening,\" interrupted Jordan as she and Gwen joined the group. \"Gwen and I won't even be naked in this show. We're not going to perform our 'Sharp Dressed Man' routine from last year's Oscars. It's going to be a family friendly production. That means that you'll be keeping your shirt on, at least for the show.\"\n\n \"Steve is getting older, and you've matured so beautifully that I don't think he could survive seeing you topless again,\" added Gwen. \"You and your sister have grown into beautiful women.\"\n\n \"Does that mean I can't show Steve how much bigger my boobs are?\" asked Roxie with a straight face.\n\n \"That's exactly what it means,\" laughed Gwen. \"What happened in the jungle, stays in the jungle.\" \n\n Charlie had everyone read their parts as he walked them through his script for the big production. \"I want everyone to learn their parts this morning and be back here at two PM for a rehearsal. This is Wednesday and we're performing live on Saturday to what may be one of the largest TV audiences ever. Please work hard so we can put on a quality program for Gwen and Steve.\"\n\n Steve stopped Sybil as she was preparing to leave. \"I heard that security for the big cheeses want more room for their people in Valhalla, so you're being asked to vacate today. I want you to put your stuff in one of our extra bedrooms. You'll be staying with Gwen and me; along with the Duke and Duchess, if that's okay with you.\"\n\n \"I couldn't do that! You're getting married Saturday and you'll have all sorts of important company. I'll be in the way.\"\n\n Steve smiled as he gently pulled Sybil into his arms. \"We need to practice our dance. You saved my life and probably Gwen's. You took a bullet protecting her and almost died. Please allow me the opportunity to show my gratitude. You're very important to both Gwen and me. Never doubt that and never think that famous people and politicians mean more to us than you do. I've already told our people to help you move into our house later today, so it's a done deal.\"\n\n \"No wonder Gwen fell so hard for you,\" replied Sybil as she shook her head in wonder. \"You treat people so well and always make certain that others are comfortable and happy. I was scared to death when you fought that big bastard, but I knew you'd beat him. No man can get away with mistreating your friends, and God help anyone that harms Gwen in any way. You really are The Warrior.\"\n\n 'Don't let all of that talk get to you,\" grinned Steve. \"I'm just me. I'm your friend, and I'm in your debt. We'll sneak in some practice for our big dance. I want you to think of the music you want and we'll practice to it. \n\n Once everyone left, hopefully to work on their lines, Charlie, Jordan, Gwen, and Steve began rehearsing the songs that they would be singing. They spent several hours getting everything the way Charlie wanted. They had a late lunch and then did another walk through with everyone in the production. \n\n Charlie was very pleased at how well the cast members had remembered their parts so well. \"It's easy to remember because we lived it,\" pointed out Kate. \"We aren't acting so much as we're repeating what we said and did earlier in our lives. This is going to be the best wedding ever!\"\n\n The rehearsal went on into the evening. Charlie knew the best way to learn was by repetition. He was well pleased with the progress made the first day, but knew he still had a lot of work in front of him to have the performance meet his expectations.\n\n Steve managed to find time to tease Paula and Ted. They were chatting with the Wilsons when Steve approached them and patted Ted on the back.\n\n \"Congratulations! You've added to your impressive list of accomplishments. Your daughters and their friends have greatly increased their respect and admiration for their dad after seeing you in action the other night.\"\n\n \"That was so embarrassing!\" blurted a red faced Paula. \"We got a little carried away once everyone left. The girls walked in at the worst possible time.\"\n\n \"According to the reports I've received, it was the best possible time,\" countered Steve with a smile.\n\n \"Were you two doing what I think you were doing after we left?\" asked a laughing Julie Wilson. \"At least Jeff was able to wait until we got home. We didn't make it to the bedroom, but we at least made it inside our door.\"\n\n \"Ted and Paula know that they're always welcome in our home and any and all recreational activities are encouraged, at least until our kids get old enough to understand what Gramps and Grandma are doing,\" laughed Steve. \"Then they'll be asked to do it behind closed doors.\"\n\n \"You're just getting even for the time we walked in on you in Russia,\" responded a red faced Paula. \n\n \"Rumor has it that we now know where Gwen got her 'eyes rolling back into her head' thing. It seems to run in the family,\" teased Steve. \n\n \"Ted, my hat's off to you!\" blurted a laughing Jeff Wilson. \"You're the man!\" \n\n Gwen and Steve were back at the LiR Center early the next morning for several more hours of rehearsal. They had to leave before noon to prepare to greet the Royal Couple. They were scheduled to arrive by US Navy helicopter at one PM.\n\n Steve and Gwen showered and changed well before the anticipated arrival. The helicopter was scheduled to land on the school athletic field rather than Asgard. Everyone had agreed that the people of Sparta would want the opportunity to see them as they first arrived in Sparta. Security was everywhere as numerous police, as well as obvious agents in dark suits, kept everyone and everything under surveillance.\n\n Once the blades on the copter stopped moving, a door swung open and William stepped out. He turned and lifted a toddler down before helping his wife, who was carrying an infant in her arms. Gwen, Jordan, Charlie, and Steve stepped up to them with huge smiles. The Prince extended his hand and Steve shook it warmly while Gwen gave the Princess a gentle hug to not disturb the sleeping baby.\n\n Those watching were filled with pride as Steve then gently hugged the Duchess while Gwen gave William a more robust embrace. Charlie and Jordan then did much the same as they greeted the British aristocrats. It was apparent to the many watching the Royal Couple was on very friendly terms with their local heroes. \n\n \"We're seeing true royalty here today,\" proclaimed an older woman to her granddaughter as she tearfully watched the proceedings. \"Sparta really is home to kings and queens!\"\n\n Later that afternoon, after getting Kate and William and their kids settled in, Gwen, Jordan, and Duchess Kate visited the local hospital. The Duchess was especially interested in the new children's wing that had been recently added. As the group walked from room to room, everyone they met would curtsy or bow. Even the small children that were not in beds began doing it.\n\n At the third room, Gwen stepped back outside to see if she could speak to a doctor about the equipment in the room. Unknown to her, a crowd had gathered outside the room and as Gwen exited, the parents and visitors suddenly curtsied or bowed, depending on their gender. Gwen quickly glanced back into the room and saw a huge smile on Kate's face as she watched the reaction Gwen had caused.\n\n \"There was no offense intended,\" insisted Gwen as she returned to Kate's side. \"It's just something some people do. It wasn't intended to disrespect your position in any way. Everyone knows that you're the wife of the future King of England.\"\n\n \"That was quite possibly the single greatest display of respect that I've ever witnessed,\" replied the Duchess. \"You have become their queen. Not by birth, or marriage, but by years of wonderful deeds. The people in this town, in this country, and even around the world love you for your courage and your kindness. I'm honored to be your friend, and I'm certainly not offended. \n\n \"It took some time for me to realize that people wanted a royal couple with whom they could relate, as well as be proud,\" revealed the Duchess. \"I was extremely self-conscious when I was suddenly treated differently. I'm just a regular girl that happened to marry a prince. But I slowly realized that it was important to everyone else that I always be something special to them. I've worked hard to always try to live up to the expectations of the people. It's the very least I can do for them, and for England.\n\n \"It seems that you've been thrust into a similar situation, only it's by your own making. What you represent to these people is what's good about your town and your country. You give them hope and a great deal of pride. You are one of the few people that have earned the title. To them, as well as many people all over the world, you are a Queen.\"\n\n Steve and his friends entertained William riding their four wheelers as well as some skeet shooting. Steve was unable to do any shooting and very little four-wheeling because of his cracked ribs, but he encouraged William to enjoy the activities and was always close by.\n\n When they weren't entertaining royalty, Steve and Gwen worked very hard on learning their parts in Charlie's production. Luckily, it was based on their lives so they were quite familiar with most of the script. Charlie had made a very real effort to not embellish an already amazing story.\n\n Jared took a few minutes when Steve was between scenes to show him the official web site of the Redskins football team. \"Look at how much space they dedicate to us. We haven't even gone to a single practice and they're already developing their marketing strategy around us. I guess it's mostly you, but I'm getting more space than their veterans. If I know the egos of football players, they'll be pissed and wanting to kick our asses when practice starts. They'll find our asses aren't so easy to kick!\"\n\n \"I'm still trying to recover from the last ass-kicking I was in. I sure don't want to be involved in another for some time,\" replied Steve as he enjoyed his friend's enthusiasm. \"We aren't going to be typical rookies either. We have a lot more age and experience than the kids that are playing right out of college. We'll be older than a lot of the veterans. I don't think they'll hassle us too much.\"\n\n As Steve finished speaking, Stephanie stepped in front of him. \"Hardy has been placed on leave from the network. He says he may have added a few things to his experience, but he really was in Indonesia. The two guys that watched the Tsunami on TV with him have been on all the news programs talking about it. It looks like Hardy is circling the drain as we speak. His career is pretty much toast.\"\n\n \"It couldn't happen to a more deserving guy,\" stated Steve with little emotion.\n\n \"What gave you the idea that he was lying about his tsunami experience?\" asked Stephanie.\n\n \"The day that Gwen fished him out of the Potomac, I was struck by how poorly he swam. If a guy could be swept out to sea and last out there a day or two before making it back to shore, he'd have to be a strong swimmer. Hardy demonstrated that he wasn't, so I had some people check a little deeper into his story. I've known about it for a few months, but decided to let it go unless he tried to cause more trouble. True to his roots, he went after Gwen again. That was all it took.\"\n\n \"On a side note, the media has been pointing out just exactly how determined you are to protect Gwen any way necessary,\" added Stephanie. \"They bring up how quick Simpson was forced to resign when he insulted Gwen, and how Chancellor is now feeding the fish at the bottom of the Indian Ocean for striking Gwen. You have a reputation as being very dangerous to anyone that harms Gwen, or even thinks about it.\"\n\n \"I'm comfortable with that, Steph. She's the best person I've ever known and I won't allow her to be subjected to lies, rumors, or threats if I can possibly help it. A little fear is a good thing as far as I'm concerned.\" \n\n \"There you are! I've just been told that I'm going to be the network's weekend anchor, starting next weekend,\" revealed Amber Stahl as she rushed up to Steve. \"Of course they want me here this weekend, especially since I'm appearing in the production. I'll be asking your guests for quick interviews, if you don't mind.\"\n\n \"As long as you don't become pushy or obnoxious, go for it,\" replied Steve. \"You've always been good to us and we appreciate your efforts to report the truth over the years.\"\n\n \"Well, I really appreciate that you pulled me from the bottom of the Potomac!\" retorted Amber. \"Now that your friend Hardy is suspended, I've been promoted again. I'll still cover the White House, but our weekend anchor is moving to weeknights, so I'll do the weekend broadcasts starting next weekend.\" \n\n The atmosphere in Sparta was charged with excitement. Every motel and hotel within a hundred miles was booked out. People were renting rooms to guests for a few days. The local paper even ran an article telling home owners how to remain safe when taking in strangers.\n\n A group gained permission to hold a Renaissance Faire for three days in a large, vacant industrial lot just a few blocks from the LiR Center. Signs and billboards appeared almost overnight welcoming visitors to the wedding of the Spartan Nation's 'Queen and Warrior King'. Many businesses expected to remain open from Thursday morning right on through to Sunday evening. The downtown district was so packed with tourists that a five block stretch of Main Street was closed to vehicular traffic. Restaurants, dinners, bars, and clubs had lines of patrons waiting day and night. \n\n Jordan's 'The Boys Are Back in Town' made a huge debut. The song utilized the good looks and macho charisma of Steve and his friends. The video showed them checking supplies and their weapons as they prepared to leave for Africa and again when they returned, some bloodied, but all in high spirits and relieved to be home. The line 'if they want to fight, you'd better let them' was extremely appropriate for the rugged young men in tight tee shirts, and some with bloody injuries. \n\n The arrival of the Duke and Duchess had ramped up the excitement considerably. Friday saw the Royal Couple, along with Jordan, Gwen, Charlie, and Steve visiting shops and businesses along the closed streets. Huge crowds cheered and applauded everywhere they went. Local, state, and federal law enforcement officers and agents were everywhere.\n\n\n\nAs had become the custom, ladies curtsied and men bowed whenever Gwen was near. Gwen had taken Duchess' Kate's words to heart and accepted that it seemed to make people happy to honor her in that fashion. She had studied Kate's actions and did her best to accept and respond positively to the adulation shown her. \n\n Many of the more famous attendees began arriving in Sparta Friday afternoon and evening. Sparta had the presidents of Russia, France and the United States spending the night, along with former presidents of France and the US. There were senators and congressman shopping and dining with the locals and tourists. \n\n The rehearsal dinner was held in the great room of Valhalla. As large as the room was, it was filled to capacity. Reporters, with the exception of Amber Stahl, were banned from the affair. Amber had received permission to take some video and interview guests briefly before the meal was served and she made the most of it. She managed to question the three current presidents, two former presidents, and several notable politicians. Her last interview was with Justice James Hamilton, who had been appointed Chief Justice a few months prior. \n\n \"Sir, rumors are rampant that you will be officiating at the wedding ceremony for Gwen and Steve. Is there any truth to that?\" asked Amber.\n\n \"I'm pleased to tell you that it's one rumor that's accurate,\" beamed the jurist. \"I'm extremely proud to have been asked by this couple and will do my best to hold up my end of the ceremony. I've never been involved in a wedding like this before.\"\n\n \"You're telling us that you'll be doing something out of the ordinary at the ceremony tomorrow?\" followed up Amber.\n\n \"Yes and no,\" replied Hamilton. \"I'll not be performing, but I'll have to be prepared for the cues for Gwen and Steve. That's all I'm going to say about that. Everyone will see tomorrow.\"\n\n Steve and Gwen had made a point to inform all of the guests attending the dinner that there would be no reporters asking political, economic, or personal questions of them. Everyone was to treat it for what it was; a rehearsal party where folks gathered to eat, drink, and have a good time. The Rosens and the Novokovs appeared to be quite relaxed, which led to everyone else losing inhibitions and concerns.\n\n Once again, Beatrice Patterson couldn't resist giving voice to how amazing the event was. \"To think one of my main goals in life was to be on the inside of Washington. All I ever had to do was remain on good terms with my grandson, and I barely managed to finally do that. I doubt if there's ever been a wedding with a guest list like this, at least not without the marriage involving royalty or world leaders.\"\n\n \"If you think this couple isn't royalty, you've been missing a great deal,\" replied her husband as he surveyed the room. He found Gwen and Steve chatting with President Novokov and his wife, with Vlad and Ann close by.\n\n Paula and Ted wandered over to greet the Pattersons, who had arrived shortly before the dinner was scheduled. \"I know I sound like a broken record, but look at the names attending this dinner. I've seen a lot of the people in attendance curtsy to your granddaughter. It's amazing. Even Senator Chatham and her daughter gave her one, although the Chatham was grinning as she did. \n\n \"The signs along the highways were very telling. The Spartan Nation absolutely adores its Queen and Warrior King. They make no bones about it. I wouldn't be very surprised if Gwen suddenly pronounces that only Spartan women give birth to real men! Even with the Royal Couple, presidents, and a Supreme Court Justice, Steve and Gwen completely dominate the room.",
        "\"Their latest adventure off the coast of Africa seems to have cemented their legacy. I've watched that video a few dozen times and I still can't believe everything that took place. I have to commend you, Ted, on having the courage and conviction to go on that journey and to board the ship with those young men. Steve tells me that you saved his life.\"\n\n \"Ted has been somewhat reluctant to talk much about what he did and what he witnessed,\" responded Paula. \"He's becoming more like these other warriors we have in the room. He doesn't brag, and he's reluctant to be too graphic. He saw Steve battle that monster from ten feet and he'll only tell me that Steve was incredible. It was brutal and barbaric, but it needed doing.\n\n \"Your grandson once again proved his love and devotion for our daughter. I couldn't be prouder of them, of all of their friends, and of Ted. He's shown me a side of him I never guessed existed. He's absolutely fearless,\" bragged Paula as Ted blushed.\n\n \"Could I have everyone's attention?\" came Kate's voice over the sound system as guests began to quiet down. \"As Maid of Honor, and sister of the bride, I wanted to thank everyone for making the journey to Sparta and to welcome you all to Valhalla to help us celebrate the pending nuptials of our Queen and our Warrior King.\"\n\n\n\nApplause filled the room and Kate smiled as she waited for it to abate. \"Yes, you heard me right! It's no secret that Gwen is the Queen of the Spartan Nation and Steve is our Warrior King. They've earned the titles the hard way; and I'm here to tell you that they're accurate. All you have to do is visit any store, business, shop, or restaurant in Sparta to hear the pride that everyone feels for my sister and her soon-to-be husband.\n\n \"You only need to look around this room to realize the high esteem they command. We are graced with the presence of the Duke and Duchess of Cambridge, the presidents of the United States, Russia, and France, along with former presidents, justices, senators, and some high ranking military. We thank all of you for coming and we wish you all the very best. Have a great visit; enjoy the meal tonight, and tomorrow, in my opinion, the greatest wedding in history!\" \n\n Gwen and Steve hugged Kate when she returned to the great room from the balcony. \"Sis! You laid it on a bit thick didn't you? We have some very important people here and you're telling them that Steve and I are a queen and king! What must they think?\"\n\n \"Gwen, look around! Why are they here? It's because you and Steve rule! I simply voiced it clearly for everyone to understand. Not one person appeared to disagree,\" pointed out Kate. \"Get used to it. You guys are our King and Queen, especially here in Valhalla! This is your 'house', and you rule!\" \n\n Saturday morning arrived with typical July Fourth weather. It was sunny and predicted to reach eighty degrees in the afternoon. Everyone in the production was at the LiR Center by eight AM, ready for a dress rehearsal. The production was scheduled for five PM with the wedding to begin fifteen minutes after the show ended.\n\n Signs and banners were everywhere. Many spanned the street and were attached to buildings across from each other. Every business and available wall space along Main Street had signs, pictures, flowers, and mementos plastered to them. Lady in Red productions had hundreds of vendors supplying food, snacks and drinks to anyone wanting them. Lady in Red had promised to keep it all coming until midnight Sunday, thus making the reception a two day affair. \n\n Huge screens had been placed all along Main Street as well as other venues in Sparta, including parking lots and even some vacant lots and fields. A director was set up in the rear of a tractor trailer. He would be selecting which of the dozen cameras he would be best to broadcast at any given moment. Those that could not get into the LiR Center would still have the opportunity to watch the production and the wedding on the big screens and from numerous angles.\n\n By four PM, LiR was packed to capacity with guests. For security reasons, those deemed important by various agencies were sitting inside in air conditioned comfort, while everyone else was outside the building, enjoying the free food and drinks, as well as the ability to view everything on the Jumbotrons.\n\n At five, the curtain rose to a dark stage. Everyone immediately became quiet as they waited for things to begin. A small spotlight suddenly went on, illuminating Steve. An unseen orchestra started playing and soon Steve was singing. He had managed a lesser hit with the 'Theme from Love Story' and Charlie selected it for the wording at the beginning of the program and the emotion it evoked.  \n\n \"Where do I begin?\n\nTo tell the story of how great a love can be, \n\nthe sweet love story that is older than the sea,\n\nthe simple truth about the love she brings to me.\n\nWhere do I start?\"\n\n\n\nSteve sang it beautifully and the audience was hooked immediately. Tears were flowing down the cheeks of some of the romantics in the audience before Steve finished.\n\n The spotlight went dark and suddenly another went on, this time shinning on Gwen. Once again the orchestra played and Gwen sang 'First Time Ever I Saw Your Face' and those watching were once again quite emotional as Gwen sang the song beautifully. \n\n The stage went dark for several seconds before the lights came on. The scene showed Gwen sitting at a table in a busy food court. People were seen walking past as Gwen read a book and occasionally looked up at the people passing by. Then Steve suddenly pulled a chair back and sat down across from her.\n\n \"Hi! I'm Steve Hammer. I see you're reading 'Lord of the Flies' and I'm wondering if you're in Ms. Summers' English class?\"\n\n The show had begun! The audience was enthralled as they watched the first encounter between Gwen and Steve. There was considerable laughter when Gwen told Steve that she couldn't go out with him the Saturday before school began because she had to study.\n\n Charlie realized early on in the planning of the show that he needed to keep the program moving and merely introduce small snippets of the eight years the production was meant to cover. He had spent considerable time talking with Jordan and going over videos from the more memorable moments in the very active and amazing love story of his friends.\n\n He used others to describe scenes, like the near drowning and the championship football game. He had Kate and Charlotte worriedly discussing the events while Steve was beneath the surface of Emerson River and Gwen was treading water, waiting for him to surface. He also relied a lot on Amber to recreate much of her broadcast, only with the camera on her as she described the events. Because of the skill of the actors, it came across as very dramatic to the audience. \n\n Johnnie Dee was the narrator for the program. His deep voice and perfect delivery helped everything flow smoothly. He appeared briefly in a couple of scenes, but he mostly did offstage narrating.\n\n For the football game Sparta won to gain Steve's date with Gwen, Charlie had Lisa, Kate and Paula discussing it before Steve stopped Gwen as she was leaving the bleachers. Ted was given his big moment as he delivered his 'talk' to Steve in front of family and friends. Of course, the first dance and the ensuing first kiss was part of the program and people loved it.\n\n Scenes moved rapidly, made possible by Charlie utilizing so many of Gwen and Steve's friends and family to voice the action that was offstage. Gwen performed her report to the nation following the terrorist attack on her high school. She wore a red bra and was made up to appear bloodied.\n\n \"Sparta came under attack today. Five terrorists, steeped in hatred and driven by ignorance attempted to destroy our school, and kill our students and staff. But what these cowards did not count on was the courage and determination of us Spartans.\"\n\n As Gwen revisited that tragic speech, goose bumps formed on many watching the show. That clip had been shown thousands of times in the days and years after the attack, but it had never lost its dramatic effect on those hearing it.\n\n Gwen was shown going to the hospital with Steve six times in the course of the two hour production. To see how often he had been treated served to drive home the courage and daring that was a big part of his character.\n\n Roxie and Sam did very well with their roles. Nadiya and Naomi were fan favorites for their parts. The program helped the public to understand the dynamics of the group and just how important each friend and relative was to the couple. As Gwen had once pointed out in an interview, they had friends that would take bullets for them, and some had done exactly that!\n\n Another highlight of the show was the scene where Gwen announced, with no apparent reason to believe it, that Steve was returning from Colombia on the helicopter that was about to land at the hospital. \n\n Charlie was well aware that the viewers would want to hear Steve and Gwen cover many of their hit songs, so he worked as many of them into the show as he could. He shortened some of them to keep the program at two hours. \n\n By hitting only the most dramatic highlights and featuring Gwen and Steve singing, with more than a little help from Jordan, the program seemed to be over far too soon, although it ran a few minutes over the promised two hours. \n\n Gwen and Steve performed their biggest hits, several of which included Jordan. They managed a brief glimpse of what their concerts were like by playing 'We Will Rock You/ We Are the Champions', 'Born to be Wild' and one of the group's biggest hits in the remake of 'Hate Myself for Loving You'. Steve, Gwen, Charlie, Jordan, and the band sang and played as well as they ever had and the audience obviously loved it. Behind them on the large screen, a montage of their performances in the capital cities on Washington, London, Paris, Moscow, and Kiev was shown. The replay of the dance Steve and Gwen performed under the full moon in Paris with the Eiffel Tower in the background drew the most response from the audience.\n\n The scenes were usually highlighted with footage of the events flashing across the huge screen behind the performers. The effect was a very dramatic and it created personal trip through the eight years of Gwen and Steve's relationship.\n\n The streets of Sparta were filled with dancing people as the driving beat of the music blared over the huge screens. Not being inside the LiR seemed to be a good thing for the more dedicated partiers. The entire town was rocking as everyone danced, sang along, or simply applauded each performance.\n\n Gwen's rendition of her huge hit 'Woman in Love' was extremely well received and near the very end of the program she belted out 'I Need a Hero' from a set made to look like the hospital ship. As Gwen began singing, the huge screen in the background featured two helicopters approaching at maximum speed\n\n \"Where have all the good men gone, \n\nand where are all the Gods?\n\nWhere's the streetwise Hercules\"\n\nI need a Hero!\"  \n\n Everyone realized the song could well have been written about Steve. He was the Hercules that Gwen was singing about. When she sang that he had to be 'larger than life', it fit Steve perfectly.\n\n The scene of Steve climbing down the ladder of the rapidly moving chopper and then hanging with one hand as he brought his rifle around with the other still caused watchers to gasp in amazement. Charlie had mixed in some previously unseen footage taken by Cheryl. He had edited the video so that Chancellor was never shown, but Steve's bloodied and amazingly toned upper body filled the screen.\n\n There could be no doubt that he was indeed the warrior as he fought and defeated his huge opponent. Gasps were frequently heard as people saw the video for the first time of Steve up close during the fight to the death. His determination and raw emotion were obvious to viewers. The ending of Gwen's song showed the two lovers reunite and collapse to their knees on the deck as they held each other. The stage went dark and boisterous applause and cheers began. Suddenly another spot light snapped on to reveal Steve standing in a tux and waiting for the din to abate. The audience quickly went silent, realizing there was more to come.\n\n The orchestra once again led Steve into a song. As he sang, his exploits from the previous eight years played across the screen behind him. On that stage, just minutes before he was scheduled to take his marriage vows, Steve proceeded to make 'My Way' his song. He never suspected at the time that it would become his theme song the rest of his life.\n\n \"And now the end is near,\n\nAnd so I face the final curtain\n\nMy friend, I'll say it clear\n\nI'll state my case of which I'm certain.\n\n Steve walked back and forth on the stage as the spotlight followed him. That he was extremely comfortable with the lyrics and the style was very evident. His face was still swollen and his black eye readily apparent as he grinned and seemed to laugh at himself as he delivered the song better than he ever had before. When he reached the lyrics about biting off more than he could chew, the big screen showed Gwen escorting him into the hospital several times, the terrorist holding a sword to his throat, and a brief shot of him squaring off with Chancellor. He finished his performance very strongly.\n\n \"The record shows I took the blows,\n\nAnd did it my way.\n\nYes, it was my way!\"\n\n Once again, the stage went dark. The audience held its applause this time and waited almost a minute. When nothing further happened, extremely enthusiastic whistles, cheers, and applause rang throughout LiR and on the streets of Sparta. \n\n Charlie had finished the show with Steve since it would take Gwen much longer to prepare for the ceremony. She had to put on her gown, get her hair put up, and replace her makeup. She began preparing as soon as she finished her last song.\n\n Even so, Steve quickly changed into his Navy Dress uniform and was ready long before her. He joined Paula at a rear exit of the LiR building. He hugged her briefly as she flashed a huge smile and gave him a thumbs-up sign. Then Charlie nodded to Steve that the fifteen minute intermission between the show and the wedding ceremony was over. Steve began escorting Paula down the street behind the building.\n\n Because of the huge crowd in Sparta for the wedding, the planned route the wedding party would walk was increased to seven actual blocks! Even with that great distance to cover, Steve and Paula stepped into a huge crowd as they exited the building. They were the first of the wedding party to make the walk. The next couple, Nadiya and Hans would begin walking two minutes after Steve and Paula left.\n\n Steve and Paula smiled and nodded to the thousands of cheering well-wishers as they moved the three blocks away from LiR, made a left turn and walked the block to Main Street, before another left and the three blocks back to the front entrance of the LiR Center, where the wedding ceremony was to take place. \n\n Signs, placards, flowers, and flags were everywhere as Steve escorted Paula down the streets of their home town. Barricades had been set up in the street, maintaining a ten foot wide path for the party. Well wishers and revelers were packed from the barricades back to the store fronts, and many were leaning from second and third story windows and balconies as they yelled their approval and threw confetti at each member of the wedding party as they passed.\n\n The wedding party followed. Nadiya and Hans were next, followed by Naomi and Jared, Vlad and Anna, Ashley and Richard, Becky and Pete, Charlotte and Billy, Stephanie and James, Jen and her current beau, Jordan and Charlie, Lisa and Jason, and then Kate and Chip. All of the women were incredibly beautiful. There were whistles and compliments all along the route.\n\n Finally, it was time for Ted and Gwen to begin their approach to the front of the LiR Center. Just before Gwen left the building, her face appeared on the huge screens that were located all over Sparta. Duchess Kate was shown placing a Tiara on Gwen's head.\n\n As the camera backed off from the close-up, Gwen's wedding gown came into view for the first time. Whistles and cheers sounded immediately. Viewers at home were spellbound.\n\n Gwen was wearing a beautiful red wedding gown that fit her curves perfectly. Some of her ample cleavage was tastefully displayed. A long train trailed behind her as she made her way onto the street holding her father's good arm.\n\n The entire town was made aware of Gwen making her appearance as the yelling, cheering, whistling, and noise makers created a roar that carried well beyond the city limits. Gwen smiled and waved as she walked down the flower covered street with her extremely proud father. As they passed, spectators went into prolonged curtsies and dramatic bows. \n\n All along their path, people were calling Gwen's name and shouting how beautiful she was. Confetti poured down on them whenever they were near taller buildings. Many women in the crowd openly wept as they watched the storybook procession pass by. \n\n \"Long live the Queen!\" was suddenly yelled by a man near the hardware store. His voice boomed and reverberated up and down Main Street. Soon others took up the chant. It was tremendous theater and the viewers at home were spellbound as the screen showed views of Gwen from many angles, and all to her advantage. Her make-up was flawless and perfectly covered what was left of the marks Chancellor had placed on her.\n\n Gwen felt her heart rate increase at the outpouring of love and respect shown to her by her friends and neighbors, as well as total strangers. She worked hard to keep tears from running down her cheeks as she smiled and waved to the amazing number of well-wishers.\n\n Finally she entered LiR. The traditional wedding processional played as Ted escorted Gwen up the steps to the stage where Steve, the wedding party, and Chief Justice Hamilton awaited. Gwen looked into Steve's eyes and saw the same mixture of love and pride that she knew he was seeing in her eyes. Her father placed her hand in Steve's and moved to join a sobbing Paula in the first row.\n\n The ceremony itself was kept brief. When Justice Hamilton told everyone viewing that Gwen and Steve would now give their vows, the orchestra suddenly began playing. \n\n Gwen began singing, and after one stanza, was joined by Steve. Charlie and Jordan had written 'Wedding Day' just for the occasion. As the couple sang, Charlie and Jordan, who also had microphones, backed them in a simple, but very romantic love song. The couple sang their vows to each other as they pledged their fidelity and love. When the song ended, there wasn't a dry eye in Sparta. \n\n Justice Hamilton spoke briefly on the meaning of marriage. \"Normally, I would give the couple a brief talk on the importance of sacrifice, responsibility, integrity, fidelity, and honesty. I won't be doing that today. This couple has spent the past eight plus years demonstrating to the country and to the world the proper way to conduct a relationship. I personally saw them both dive into the very cold waters of the Potomac River on a cold January day to save the lives of people facing death. You're all familiar with their considerable assistance to hospitals, charities, veterans, children, and those less fortunate. \n\n \"Henceforth, when I conduct a wedding ceremony, I will be citing Gwen and Steve as prime examples of just how couples should conduct their lives. There'll be no pontification by me this day. I simply ask that this couple continues to shoulder the responsibility of being role models for others. I wish them the very best and I'm extremely proud to be asked to officiate at this amazing ceremony.\"",
        "A few minutes later, at the end of the simple but elegant ceremony, Justice Hamilton looked at the couple and smiled broadly as he proclaimed, \"I now pronounce you husband and wife!\"\n\n Steve held Gwen's hands in his own as he stared into her eyes. Her smile lit her face as she gazed back at him. \"You may kiss the bride,\" urged the Chief Justice as he beamed at the couple.\n\n Not needing to be told twice, Steve pulled Gwen tightly to his chest as she raised her face to him. As their lips met, the fireworks began in the many hilly areas surrounding Sparta. Lady in Red had contracted with a dozen different firms to set up firework displays. They were to be timed so that the show would last for several hours.\n\n The formal reception was held in the large banquet room in the LiR Center. This was necessary since many of the guests required very strict security. To accommodate these VIP's, the first hour of the reception was held inside with the activities shown on the huge screens placed around Sparta.\n\n Johnny Dee served as the announcer for the event. After a brief photograph session, the reception began. \"Ladies and Gentlemen, it was my great pleasure to first introduce this couple at a benefit dance almost nine years ago. I later discovered that it was their first date, and the first actual date either of them had ever been on.\n\n \"Once again, I have the great honor of introducing the one couple in the world that needs no introduction. He's a graduate of the naval Academy, quarterbacked Navy to the national title in his senior year, a US Navy SEAL, philanthropist, successful businessman, winner of Oscars, Emmies, Grammies, the Presidential Medal of Freedom, as well as the Ribbon for Arts and Letters from France. He's a statesman. He's risked his life in Colombia and Iraq to save the lives of others. He still bears the marks of his battle with a cutthroat pirate off the coast of Africa.\n\n \"She's a medical doctor, a congresswoman, winner of Emmies, Oscars, Grammies, and numerous other awards. She's a successful businesswoman and a renowned philanthropist. She's also received the Ribbon of Arts and Letters from France. She is THE LADY IN RED! \n\n \"Ladies and Gentlemen, for the first time ever as a married couple, I present to you Gwen and Steve Hammer, The Queen of the Spartan Nation and her Warrior King!\"\n\n The couple was blushing brightly from all the praise, and especially from being referred to as King and Queen. They stepped onto the dance floor as applause moved through the building and across the town like thunder. Johnny Dee was forced to wait over a minute for the applause to abate before he could continue. \n\n \"For the first dance, this couple has selected an appropriate, if somewhat predictable song. Steve will be singing as he dances with his beautiful bride. Ladies and Gentlemen, the Lady in Red!\" \n\n The silence was intense as Steve and Gwen moved to the center of the dance floor. The orchestra began playing as Steve took Gwen into his arms and the duo began their signature dance. Gwen was radiant as Steve sang while they danced. Their eyes never left each other the entire time. Millions of people across the world watched as the most famous couple in the world performed their first dance as a married couple. Although millions watched, Steve and Gwen were totally oblivious to anyone but each other. At the end of the song, Steve whispered loud enough for the microphone to pick up, \"I love you!\"\n\n There were tears, whistles, applause, and yells of approval when the song ended. \"Now, the bride will dance with her proud father!\" announced Johnny Dee as Gwen moved next to Ted as he placed his good arm on her shoulder and she clutched the hand that extended from the cast on his left arm.\n\n \"Dad, you've been the best father a girl could ever have,\" began Gwen as a few tears trickled down her cheek. \"You've always been fair to us girls and you've always been there for us. I admit I never realized how brave you were until the past few years. \"\n\n \"I'm afraid that I'm not that brave, but I have to act like I am or your husband will show me up. He's the real deal. You've managed to marry the best man I've ever had the pleasure to know,\" replied Ted with emotion.\n\n \"Thanks, Dad. It means a lot to me to know that you approve of Steve, but don't dismiss your heroic actions. You're a great father and an extremely brave man. I know how bad it was in Kiev with that mobster, and I saw everything that happened on that ship that morning. You're my hero,\" insisted Gwen as she kissed her father on the cheek as the dance ended.\n\n \"As you probably are aware, Steve's mother and father are deceased. He's asked the woman that's been like a second mother to him to share a mother/son dance this evening. Paula Anderson has proudly agreed to his request. I present Paula Anderson, mother of the bride, dancing with her son-in-law, Steve Hammer,\" announced Johnny Dee.\n\n \"Paula, I can only hope that Gwen is as beautiful as you when she's your age,\" whispered Steve as he guided his mother-in-law across the dance floor. \"You've been a friend, a mother, a role model, and a fantasy of mine for years. I love you for all of those reasons and probably a million more.\"\n\n \"You know that I've loved you almost as long as Gwen has,\" replied Paula. \"You've always been a gentleman with me, and I appreciate it. If you were a different type of man, you could have ripped my family apart, but you've made it stronger. I'm extremely proud of you and Gwen. I'll be expecting grandkids now, so work on that.\"\n\n \"As you know, Gwen stopped her birth control when she left to go on the hospital ship a couple of months ago, so we could give you another grandchild anytime after nine months,\" grinned Steve. \"I promise that starting a baby will be a priority.\"\n\n \"I know you'll do your part!\" laughed Paula. \"Just have some mercy on my poor daughter now and then.\"\n\n Surprising the guests, Johnny Dee made yet another announcement as Steve and Paula ended their dance. \"Steve made a promise to a young woman that actually saved his life a while back. She was later seriously injured while performing her duties as security for Gwen. He told her that she'd not only walk again, but that she would dance with him at his wedding. To keep his promise, as well as the opportunity to dance with a beautiful woman, Steve will now dance with Sybil Burke!\"\n\n Sybil had been sitting in at a small table near the back of the room with her mother. She blushed when her name was announced and people began cheering and clapping as Steve made his way back to her. He helped her from her chair and carefully led her to the dance floor. Sybil had made huge strides in her recovery, but she still walked stiffly.\n\n The music began and Steve took her into his arms and gently danced with her across the open floor. He had selected a slow number and pretty much supported Sybil. She merely had to follow his lead. As they danced her smile kept increasing.\n\n \"You're the most amazing man. Thanks for keeping your promise and for helping me get back on my feet. I don't know if I would have made it this far without you. Gwen is a very lucky woman. What you did for her on that ship was incredible.\"\n\n \"What you did for us was incredible,\" corrected Steve. \"You've been instrumental in saving several members of our family, including Gwen and me. You'll always have friends and support from Lady in Red Productions, and especially from me.\" \n\n For the next ninety minutes, Steve and Gwen danced with their wedding party and the more famous guests in attendance. Those guests were all scheduled to depart that evening, so the bride and groom spent as much time as they could with the presidents of various nations and their families.\n\n Steve and Gwen were chatting with friends when a beautiful woman tapped Gwen on the shoulder. \"The last time I saw you, Gwen, some giant had his hands in your hair and Steve was hanging from a ladder just above the waves. It was a very memorable moment.\"\n\n \"Sam? It's great to see you!\" replied Gwen. \"Did you watch it on TV, too?\"\n\n \"No, I was much closer,\" teased Sam. \"Did you happen to notice a Navy jet roar over the ship just before Steve hit the deck?\"\n\n\n\n\"That was you?\" exclaimed Gwen. \"It felt like you were trying to land on the deck, it was so loud and everything vibrated so hard. I think you distracted the pirates for a few seconds.\n\n \"Was that what you were trying to do?\" demanded Gwen as she suddenly realized the implications of the jet flying so close to the ship.\n\n \"I know it wasn't much, but it was all I could do. I hope it helped, at least a little. I just wish I'd been ordered to out sooner. I would have sunk every one of them before they reached your ship.\"\n\n \"You were a great help,\" assured Gwen. \"How did you manage to get to Sparta so soon? That only happened a few days ago.\"\n\n \"I had some time coming, and I have some friends in high places,\" answered Sam with a grin. \"I wouldn't have missed this for the world.\"\n\n \"Steve, are you feeling well enough to showcase your swing dance skills with Sam?\" asked Gwen as Steve hugged his long time friend.\n\n \"I'll have to be a little careful, but my ribs are bound up really well and I should be able to manage it. That is unless Sam has gained weight since the Academy,\" joked Steve.\n\n \"I think you're strong enough to handle my hundred and fifteen pounds,\" retorted Sam with a chuckle. \"You tossed that monster overboard with your ribs cracked, so you should have no trouble handling a little girl.\"\n\n Gwen hurried over to the orchestra and made her request. The musicians were delighted and a couple of them picked up horns from a neat stack and prepared to play. Gwen then asked Johnny Dee to announce the dance.\n\n \"Ladies and Gentlemen, we have yet another treat for you! While he was in the Naval Academy, Steve teamed up with another midshipman to win a swing dance contest. His partner is here tonight and has agreed to perform that routine with Steve. She was the pilot of the Navy jet that roared over the hospital ship in the Indian Ocean less than a week ago. Please direct your attention to the dance floor as Lieutenant Sam Petrosky and Steve Hammer perform 'In the Mood' for your enjoyment!\" \n\n Steve was forced to limit a few of his moves to protect his ribs, but the dance was still a real crowd pleaser. The applause was long and enthusiastic when the perspiring couple finished the routine.\n\n The sun had set and an almost full moon was shining over Sparta when Steve and Gwen exited the LiR Center and walked into the cheering crowd on Main Street. A band had now replaced the orchestra and they were set up on a stage in the street.\n\n Gwen and Steve joined the celebration. They danced and chatted with as many guests as they could. At midnight, the couple took a short break before returning to the street party dressed in more casual attire. They had agreed that since so many people had made the effort to attend their wedding, they would remain at the festivities and interact with as many people as they could. Mallory Burke's people were a heavy presence as they watched over the scene to keep the couple as safe as possible in Mardi Gras like atmosphere. A new band took over at midnight. Every so often, Steve and Gwen would delight the huge crowd by joining the band for a song or two.\n\n Gwen delighted the large crowd by dancing with every man that asked. It didn't seem to matter to her if her partner were young or old, wealthy, or of modest means. She surprised a few by asking them to dance with her. Steve never lacked for partners as women lined up to have a dance with the Warrior. Almost all of them kissed his cheek and wished him happiness when their dance ended.\n\n Steve was dancing in the street with Gwen's next door neighbor when he noticed Jack Timberline step up to Gwen and take her in his arms to dance! He was surprised that Timberline would have the nerve to attend the wedding.\n\n \"Gwen, you haven't returned my calls, or my emails. That surprises me after I did so much to help launch your career. I'll never forget that night we went dancing and you kissed me. We had something special.\"\n\n \"All I had was too much wine,\" retorted Gwen. \"That was one of the most embarrassing and humiliating nights of my life. You tried to take advantage of me, although it was my own fault for allowing myself to be placed in that position.\n\n \"I never returned your calls because I didn't want to speak with you. It seems like you could have figured that out. Why are you here? Steve isn't going to like it if you cause me any trouble.\"\n\n \"I'm not worried about your caveman husband,\" chuckled Timberline. \"My career has had a bit of a downturn and I thought recording a few songs with you could help both of us. Maybe we could do a few gigs together. The crowd really loved it when we performed 'Glory of Love' at that concert we did together. We make a great duo.\"\n\n \"Your career is circling the drain because of your penchant for drugs and alcohol,\" responded Gwen. \"I can look at you and see that you're high right now. I suggest you try rehab if you want your career back.\"\n\n \"I didn't come here for goddamn advice!\" snapped Timberline. \"I want you to ....\"\n\n \"Hey, Jack!\" greeted Steve as he pulled Jack away from Gwen and shook his hand vigorously as his other hand appeared to grip the back of Timberline's neck in friendship. In reality, Steve was applying more than a little pressure to Timberline.\n\n \"It's so good to see you! Thanks for coming to our wedding. Gwen and I appreciate it. I know you're busy, but I'd like to talk a little business with you in private. Would you join me inside this store for a couple of minutes? Stephanie, will you come along, please?\"\n\n Gwen's sisters and friends were all close-by. They had seen Timberline approach Gwen for the dance and they knew the history between them. Kate even asked Chip to be prepared to stop Steve from resorting to violence when Steve headed toward Timberline and Gwen. Stephanie was surprised that Steve wanted her in on the private conversation he was about to have, but she simply nodded and followed the men into the building.\n\n Steve had his arm around Timberline and firmly guided the now worried man to a quiet area in the building.\n\n \"I'll make this quick. I don't want you alone with my wife for any reason. I guarantee you won't like the results,\" promised Steve. \"You're probably hoping that just being near her will rejuvenate the music career you destroyed with drugs and alcohol. Your womanizing has probably given you a few STD's as well.\"\n\n Timberline was stunned at Steve's understanding of his personal situation and concerned about the threat the larger man had just stated so matter-of-factly.\n\n \"Stephanie, I want you to buy Jack's contract from his label as soon as possible. I'm going to own your pathetic ass, Timberline. You'll enter rehab and get your shit together. Once you're sober and healthy, we'll let you perform at a few concerts with us. Gwen, Jordan, or all of us may ever record a song or two with you. We'll get you back on track.\n\n \"The kicker is that you quit the drugs. You stop drinking. You stop tom-catting. You'll become active in a charity or two and become a stable person that's an asset to the community. If you don't do these things, my company will simply forget you exist. You'll get no opportunities and you'll become a has-been, all washed up and begging for gigs in those nostalgia tours. We'll pay for the help you need and you'd better take advantage of it, or your career is finished. Are we clear?\"\n\n \"You don't give me much choice. If this is about that night Gwen and I went to that club...\"\n\n \"Don't say another word!\" snarled Steve. \"If it was about that, you'd be on your way to the hospital right now. This is about a wasted talent. This is about a second chance. This is about me holding your fate in my hands. I'm offering you a path forward. If you're smart enough to accept it, you'll do fine, as long as you never bother Gwen or speak about her in anything but positive terms.\n\n \"Stephanie will give you her contact information and you'll give yours to her. She'll set it all up. Now let's get back to my reception. I want to dance with my wife,\" concluded Steve.\n\n Gwen was concerned for Steve when he led Timberline into the building. \"Do you think he'll hurt Jack? He isn't worth getting in trouble over. Am I ever going to live that stupid mistake down?\"\n\n \"Steve's probably reading from the scriptures to Jack,\" chuckled Jason. \"I wouldn't want to be Timberline's shoes right now, but Steve's too smart to get physical with him. He'll get him some other way. What the hell was the guy thinking when he decided to dance with you?\"\n\n \"He's desperate. His career has gone down the toilet and he's hoping I'd help him get back on top,\" replied Gwen.\n\n \"Yeah, and he'd like to get on top of you!\" retorted Charlotte. \"He's a pig. I almost hope Steve cleans his clock. I remember what a mess you were after that night. He's got no right to show up at your wedding reception, and especially not to dance with you.\"\n\n At that moment Steve stepped back into the street and took Gwen into his arms and began dancing to the music. \"Are we good? Is everything okay? I just wish he'd go away. You know I don't like him, don't you?\"\n\n \"Gwen, you're my wife now. I married you because I love you. I certainly trust you. We're very good. I can't wait to show you just how good we are. You mom pretty much made me promise to start working on her grandkids. Since she asked so nicely, I agreed.\"\n\n As they danced, Gwen saw Stephanie laughing as she explained to the rest of the group what had transpired with Timberline. Gwen could tell by Stephanie's laughter that things were just fine.\n\n It was a night Sparta would never forget as people danced and partied for several blocks of Main Street. Sunrise found an exhausted Steve and Gwen sitting down for a breakfast at Marsh's. Charlotte, Naomi, Nadiya, Jordan, Kate, Lisa, and their respective male counterparts joined them. It was a happy, but tired group.\n\n \"Can you believe there are still hundreds of people still dancing and partying out there?\" asked Kate. \"We're on our fourth band. The first one that performed is supposed to be back to set up at 8 AM. That was some wedding!\"\n\n \"It was okay,\" grinned Billy. \"It just seems to me that Steve would be in more of a hurry to consummate his marriage. He's been married for about twelve hours and hasn't laid a hand on the bride yet.\"\n\n \"You've no idea where his hands have been,\" insisted Gwen with a laugh. \"But, we are going to go home and get a few hours sleep before we rejoin everyone still celebrating.\"\n\n \"Yeah, you'll be going to bed, but I bet there won't be too much sleep involved,\" stated Jordan. \"I just hope you manage to get your eyes focused again before you come back.\"\n\n \"Let's meet at one PM at that Renaissance Faire over on Third Street,\" offered Lisa. \"A couple of my friends told me that there's this blind woman that gazes into a crystal ball and predicts your future. She's supposed to be amazing.\"\n\n \"A blind woman gazing into anything would certainly be amazing,\" retorted Charlotte dryly. \"I learned that in medical school.\"\n\n The friends were all gathered near the entrance to the Renaissance Faire at one. \n\n \"Don't give out any names,\" insisted Charlotte. \"If this soothsayer is so good, she should be able to identify Gwen with her sixth or seventh sense.\"\n\n Everyone agreed to not use any names as they packed into a medium sized tent. The front flap held a sign proclaiming 'Fortunes Told' in some sort of old English script. An old woman with what appeared to be empty eye sockets sat at a table with a large round, glass ball in front of her.\n\n \"Come in! You are here to have your fortunes told, are you not? Please sit and give me your hand. Look into the crystal ball and we will begin.\"",
        "Lisa gently pushed Gwen over to the empty seat next to the old woman. Gwen sat as the old, blind woman held her hand out for Gwen's. Gwen smiled at her friends as she placed her hand in the ancient woman's grasp and then gazed into the large glass orb.\n\n The woman held Gwen's palm up with her right hand as she ran the fingers of her withered left hand over it. Suddenly the old crone gasped.\n\n \"You are the one known as the Queen! I am humbled that you have come to me. Your future has not yet been completely written, but I can tell you this. You will enjoy great success, but the day will come when you will have to make a very difficult decision. All advisors will suggest one course of action, but your Warrior will advise a seemingly dangerous alternative. Many lives will hang in the balance. Your faith in your Warrior will be tested. Evidence and logic will indicate that his thoughts are in error. I cannot see what your decision will be.\" \n\n Gwen's gaze left the globe in front of her. She was now staring in surprise at the old lady. How did she 'recognize' Gwen when she obviously had no eyes?\n\n \"You are with child, a child conceived this very day. It is a boy child, the son of your Warrior King.\"\n\n Gasps filled the tent as the information sank into the collective consciousness of the group. Was it possible? Could Gwen be pregnant already!\n\n \"The future of this child is not completely clear, but he will grow to become an even greater warrior than his father. That much has been written. His adventures will become legend. His power and influence will surpass that of his parents. His Queen has not yet been conceived. That is all I can see.\" \n\n The End\n\n \n\n______________________________________\n\n\n\nBook two is complete. I thank everyone that read my series and especially those that commented, voted, and/or sent me email. We writers need readers. I have an outline for Book 3, but it will be sometime before it is posted. I need to get more chapters finished before I begin posting. Long periods between posts are annoying to the readers. I know that. I am doing my best.\n\nI saw that Jen Aniston was voted the most beautiful woman in the world by People Magazine. She is 47. Salma Hayek is 49. They are the ages of the mothers in my story at the end of book two. I have the utmost respect and appreciation for ladies of that age, and believe they are often among the most attractive on the planet.\n\nI tried to create a world where honesty, integrity, loyalty, courage, and empathy not only existed, but were appreciated and rewarded. It is my hope that you readers feel that I accomplished that goal, at least to some degree. Thanks so much for reading, and for daring to dream!"
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "pirates",
        "wedding",
        "fortune teller",
        "hospital ship",
        "helicopters",
        "queen",
        "warrior"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-02-ch-24"
}