{
    "title": "Love in the Age of Chemicals Ch. 04",
    "pages": [
        "Though I may fail to mention it with each chapter, this series was carefully and diligently edited by GaiusPetronius, whose fingerprints on this story certainly improved the final product. \n\nAlso, as a warning to readers who are sensitive to certain topics, the second half of this chapter includes characters recalling the trauma of non-consensual sex. Though the acts themselves are not recorded in detail, readers with strong sensitivities on this topic may want to skim or skip parts of this chapter. \n\nChapter 4 \n\nAs was the trend with my life that past year, nothing went as smoothly as planned. \n\nMy parents had helped me to move into the house after I purchased it five years earlier, and my mother had visited a year later when a car accident had incapacitated me for a week. But this was their first visit since then. They had told me they would be renting a car and that I needn't bother meeting them at the airport. So it was just as I was putting away my freshly washed dinner dishes that I heard the expected ring of the doorbell. \n\nUpon entering, my parents greeted me in their loud and exuberant way. My mother wandered around the house aimlessly, commenting on its cleanliness, order, and comfort. \"You've really settled in here, Deacon. It feels so cozy!\" \n\n\"Just point me to the bathroom, Son,\" Dad said softly next to my ear. \n\n\"I told you not to keep getting refills of soda on the flight,\" my mother tutted. \"Just because they're free doesn't mean you have to drink them.\" \n\n\"They weren't free,\" my father objected, heading down the hall towards the room I had indicated. \"We had already paid an arm and a leg for the flight; I wanted to get my money's worth!\" \n\nAnd so went the beginning of their visit. My only reprieve was the next morning, when they went to a nearby church for a few hours. But the rest of the time I was mothered, smothered, interrogated, and talked at for nearly the whole day. On Monday morning - Christmas Eve - I pleaded the need to work a few hours and sought refuge in my office after lunch. While there, I mostly rested and calmed down. My mother had taken over cooking meals and insisted I be home for dinner, regardless of what urgent matters were calling me to work on Christmas Eve. \n\nWhen I returned at my usual time, dinner was on the table, and for a brief moment, I pictured Miranda setting out plates, wearing my gray shirt over her supple form. Instead, my parents were happily chatting as they prepared the table and heated up food. Before they noticed my presence, I saw my father walk behind my mother and wrap his arms around her waist. She smiled and leaned back into him with a soft hum. I cleared my throat and they turned around. \n\n\"Wash up and have a seat, honey,\" my mother instructed me. \n\nWhen I returned to the table, everything was ready. I waited awkwardly for my father to finish praying, then began serving myself. After a few questions about my day - the kind Miranda was helping me grow accustomed to - my mother cleared her throat, looked at my father, and nodded in my direction. My father gave a confused look, which made my mother sigh in frustration. \n\nShe put down her fork, lifted her napkin to wipe her mouth, and then said, \"So, Deacon, when do we get to meet Miranda?\" \n\n\"Oh!\" my father whispered in understanding. \n\nMy mother stared at me, smiling calmly. \n\n\"Miranda?\" I choked out, mostly to stall. I wasn't prepared to explain anything. My default would be to tell them exactly what had happened (sparing certain intimate details, of course), but I knew the real account would not be well-received. \n\n\"Deacon, the house is clean and comfortable, you have a new wardrobe and a new hairstyle... For goodness' sake, Deacon, you're wearing a wedding ring.\" I winced and looked at my hand. Neither Miranda nor I had thought about the rings. For several months I had hardly noticed its presence. \n\n\"But... but... how did you...\" \n\nMy father, still chewing, said, \"You got some mail today for someone named 'Miranda Kirsch.' So we put two and two and two together...\" \n\n\"So?\" my mother interrupted. \"Do we get to meet her?\" \n\n\"She's visiting some friends right now,\" I answered truthfully. \n\n\"Well,\" my mother replied with finality, \"we'll stay as long as we need to in order to meet her. I'll not miss this chance to meet my one and only daughter-in-law!\" \n\n\"I'll give her a call,\" I said, excusing myself from the table. \n\n******* \n\n\"It was the ring, wasn't it?\" Miranda asked, shortly after I called to plead with her to rescue me. \"I thought of that this afternoon when someone commented on mine. I meant to warn you... but... sorry!\" \n\n\"It was the ring, yes, among other things. Like mail in your married name.\" \n\n\"Oh, shoot!\" she said. \"Only the school has that name for me. It must be my grade report. I'm so sorry, Deke.\" \n\n\"Just... come back as soon as you can. I really don't know how to handle this.\" \n\n\"OK,\" she sighed. \"I'd rather not be staying here anyway. It's... difficult.\" \n\n\"What should I tell my mother?\" I asked. \n\n\"Just tell her I'll be back tonight and that we'll explain everything together,\" she assured me. \"And, Deke did you get them anything for Christmas?\" \n\n\"They always say that as long as they see me, that's all the gift they need,\" I explained. \n\n\"So that's a 'no.' Alright. Deke, when they say that... they kinda don't mean it.\" \n\n\"Really, then why would they...\" \n\n\"Don't worry about it, Babe. I've got you covered. See you in an hour.\" \n\n******* \n\n\"...and so, since Deke wasn't ready yet for a big social event, and we knew you would really want our wedding to be something special, we decided to wait until he was more comfortable with the idea.\" Miranda was snuggled close to me on the floor, looking up at my parents on the couch. The excitement of their initial introduction was giving way to hurt feelings and confusion over why we had kept our marriage a secret. Miranda was doing her best to justify our actions. \n\n\"But on the other hand, we really weren't able to wait... y'know? The whole First Corinthians 7:9 thing...\" \n\nMy father laughed heartily at that explanation and my mother blushed. \n\n\"And I was between apartments, so moving in and being really married - which is what we were planning anyway - just made better sense from a logistic standpoint. We could save money and start our lives together. Once Deke is ready to face a whole crowd of people, we can have the ceremony. I know we should have told you sooner, but... Well, I'm just sorry for that.\" \n\n\"Oh my,\" my mother said, fanning herself with a magazine until her gray hair flittered around. \"Eight months, Deacon! We would have been happy to come visit any time. Miranda, I just... I wish we had known. But did you have a pastor marry you? In a church?\" \n\n\"Not yet... we thought we'd wait on that until we could plan a ceremony,\" Miranda said, turning to reach behind herself. \n\n\"Well,\" my mother began, \"I hardly think a marriage is really legitimate until-\" \n\n\"But that reminds me,\" Miranda interrupted. \"One of the women from my church helped me to pick this out for you.\" She pulled a flat gift-wrapped package from behind our small Christmas tree and offered it to my mother, who paused her objection to take the gift. \"I hope you don't already have it.\" \n\n\"Oh my,\" my mother said softly. \"Thank you, dear.\" \n\n\"Go ahead and open it,\" Miranda said excitedly, pulling me closer to her body. \n\nMy mother opened it to reveal a large, colorful painting of an oddly lit waterfall scene. \n\n\"Oh, my!\" my mother said again. \n\n\"A Thomas Kinkade...\" my father said, adjusting his glasses to look at it more closely. \n\n\"Oh, my...\" my mother repeated again. \n\n\"And actually,\" Miranda added, pointing to something in the corner of the painting, \"this isn't a print. It's a signed original. We have a friend who has a connection.\" \n\n\"Oh my!\" seemed to be the limit of my mother's vocabulary at that point. After holding up the work and viewing it from multiple angles, my mother finally set it down and opened her arms to Miranda, who left my side and gave my mother a prolonged hug. They whispered words I couldn't make out, but my mother had either forgotten, or else was content to let drop for now, the matter of a church wedding. And I realized that Miranda had once again planned everything perfectly. \n\n******* \n\nLate that evening, as my parents prepared to retire to my room for the night, Miranda asked me to stay on the couch and watch a Christmas movie with her. \n\n\"It's what couples do,\" she assured me privately. \"They snuggle on cold winter evenings and just enjoy having someone next to them.\" My parents seemed to enjoy watching us settle in next to each other, even acting embarrassed whenever they passed by, as if they were interrupting some intimate moment. \n\nOnce we were alone, and as the movie started, I asked Miranda how she had so quickly and accurately procured a gift for my parents. She seemed to have found the perfect gift, even after not having met or spoken with my parents. \n\nMiranda watched the screen and said, \"Well, I knew from hearing your mom's voice,\" and with that she poked me in the ribs, \"that she was older. You're probably the youngest child, aren't you?\" \n\nI nodded, not realizing she couldn't see me. \n\n\"Anyway, I also picked up from you that there's a strong religious vibe. I was at Dottie's when you called, and when I tossed those ideas out there, she went and got the painting from one of their rooms. Apparently they have more than one Kinkade original. Thomas's dad collected them.\" \n\n\"And they just gave it to you?\" I asked in wonderment. \n\n\"Yeah. It's worth hundreds of dollars, easily. He's a big deal in some Christian circles.\" \n\n\"They gave it to you?\" I was still amazed. \n\n\"Yes, Puppy, it's what friends do,\" she murmured close to my ear. \n\nWe watched the movie - an overly sentimental historical drama with a predictably happy ending - then retired together to her room to share the sofa sleeper. I had been uncomfortable enough by myself in that situation the previous two nights, and I tried not to think about adding another body to the equation. The bed was small - much smaller than the one we had shared before when our two beds were combined. It was impossible to have one's own space. As I fidgeted and tossed about in the darkness, trying to find the right angle for sleep, Miranda finally spoke up. \n\n\"Oh, for heaven's sake, Deke! Roll towards me.\" \n\nWhen I didn't move, she moved herself up against me, both of us on our backs. \n\n\"Now give me your hand,\" she instructed, not waiting for compliance but grabbing my hand that was farthest from her, \"and roll onto your side,\" she said, pulling my arm to guide me. As I rolled, so did she, until we were both on our sides, next to each other. Miranda pulled my hand over her body and allowed it to rest in the middle of her torso, between belly and breasts. She sighed contentedly and laid her arm over mine, interlocking our fingers slightly. I curled my legs up, finding that they lined up nicely with her similarly curled legs. The only annoyance was an occasional stray hair in my face, but by readjusting my head, I could avoid even that. \n\n\"It's called spooning, Babe,\" she informed me, \"and it's the best part of sharing a bed.\" \n\n\"I can see that,\" I said, feeling my body relax as the rhythm of her heartbeat danced against my palm. \n\n\"It's even better without clothes,\" she said quietly. \n\n\"Please don't ask me to do that with my parents down the hall,\" I said. \n\n\"I won't,\" she promised. \"But if you ask... I probably won't say no.\" \n\nI instinctively squeezed her, eliciting a sigh. The cadence of her breathing lulled me to sleep, as it would each night we spent there during my parents' visit. \n\n******* \n\nMiranda's presence made the week much more tolerable. Time spent with my parents was usually very hard for me, and it often resulted in at least one shouting match as they called into question my life and career choices. But Miranda's capacity for frivolous conversation, her ability to understand and engage my parents' strong religious views, her ease at interpreting their behavior for me, and of course her soothing physical presence - it all served to help me feel calmer and, in general, happier. I think my mother, especially, enjoyed having Miranda to talk to, and at times she insisted on having time alone with her daughter-in-law. \"Girl talk\" she called it. \n\nIt was part of one such conversation that I unintentionally overheard one afternoon. My father had insisted I join him in watching a particularly significant college football bowl game. Miranda was eager to join me on the couch (and had promised she would help me understand what was happening in the game), but my mother dragged her into the kitchen for one of their talks. It wasn't long before my father was sound asleep and I was watching the game alone. I turned down the volume and was picking up a book when I heard the two women speaking. \n\n\"I found it to be really helpful,\" Miranda was saying. \"I understand him much better now.\" \n\nTo which my mother indignantly replied, \"I don't think a mother needs help understanding her own son.\" \n\nIt was Miranda's way to push whatever point was on her mind, and from my own experience I knew my mother didn't stand a chance. \"I know I don't have the same experience you do in dealing with his... condition... but...\" \n\n\"Condition? What do you mean, 'condition'?\" my mother inquired. \n\n\"His... The way he's kinda special,... y'know?\" Miranda sounded uncomfortable. She was not the first to suggest to my parents that I was 'special,' though she seemed to be the first to have a specific idea of what she meant by that. \n\n\"You mean his high intelligence?\" \n\n\"Well, related to that. But, you know there's something else, right? Something unique about the way he sees the world? Something the rest of us don't naturally understand.\" \n\n\"Honey, every mother knows in her heart that her child is extra special. You can't see them like everyone else does. It's called 'Mom goggles',\" she giggled. \n\n\"I know,\" Miranda sighed. \n\n\"No... No, you don't really know yet,\" my mother corrected her. \"Not until you've brought your own little one into the world. Then you'll know what I mean.\" \n\nThey were quiet for a moment, and I heard sniffling. Then Miranda said very softly, \"Perhaps you're right.\" \n\n\"Of course I am. But don't fret, dear. You'll understand someday. When the time is right.\" \n\nThen Miranda cleared her throat and said, \"Anyway, I just think you should read this. It's really helpful and might give you just a little insight into Deke's world.\" \n\n\"And what world is that?\" \n\n\"Just... promise me you'll read it. Soon.\" \n\n\"Well, Miranda, if it's that important to you, I promise I will.\" \n\n\"Thank you, Deborah.\" \n\n\"Don't thank me, honey. Just keep taking such good care of my boy. He's changed since I last saw him. And that doesn't happen easily with him.\" \n\n\"I know,\" Miranda laughed, and I wondered in what ways others had observed changes in me and if those changes were in fact positive. \n\n******* \n\nBy the time they left, my parents had warmly welcomed Miranda into their life. I assumed - or just hoped, rather - that Miranda had a plan to explain to them the dissolution of our marriage that was scheduled for a year and a half from then. \n\nWe returned the beds to their usual places, at my insistence, and in a few other ways ensured that the house returned to the state it had been in before the visit. With one more week remaining of winter break, I was eager to finish planning my semester and return to my research. I expected to receive news about funding shortly after the new year began. \n\nAfter my parents were gone, Miranda left for the weekend, explaining that she really had been planning to see certain friends that week and they had graciously rescheduled when she needed to come to my aid. And so my weekend passed quietly, reminiscent of days past. It was, truthfully, just what I needed. Like a reset button had been pressed, canceling out the confusion and chaos of weeks past and returning me to the routine I relied on. \n\nI spent Monday at my office, even though it was technically a school holiday. I felt the need to make up for lost time from the past week. I received two unexpected phone calls that afternoon, the first was a voicemail message from Dr. Cavell, requesting my presence at an important meeting later that week. She apologized for interrupting my holiday but insisted that it was an urgent matter. I returned her call, confirming my attendance. \n\nThe second call was shortly after that and was from my mother. She asked me to send her Miranda's number, saying she desperately needed to talk to her. She said that she needed to thank Miranda for a book that she had suggested. Then, before hanging up, she gave a vague, general apology for not being the kind of mother I needed growing up. She promised to do a better job in the future. I was unsure whether or how to reply, but my mother said, \"Now I know you're probably uncomfortable with all this, so don't worry about saying anything. Just listen.\" Sounding on the verge of tears as she finished, she said, \"Deacon, that girl is a saint. An angel. A God-send. She's a special providence in your life. You probably don't even see half the ways she takes care of you. You be good to her as best as you know how, and do everything in your power to hang onto her, OK?\" \n\n\"I understand,\" I assured her. \n\n\"That's my boy,\" she whispered, then reminded me to text Miranda's number as soon as I hung up, which I did. \n\n******* \n\nI returned home in the early evening and was comforted by the sight of Miranda's car in the driveway. When I entered the house, however, she was not in the kitchen, as I expected, but was lying down on the couch. She wore loose sweatpants and an old t-shirt. She was staring at a movie on the TV, but she seemed to not be following the action. Instead, her face showed the signs of a recent emotional outburst. She had been crying. Her phone was in her hand and was pressed against her breast. \n\nFeeling hungry, and not wishing to make matters worse for her, I went straight to the kitchen to prepare my dinner. When I was gathering ingredients, I thought of Miranda. Would she be hungry, too? I supposed that if she did not wish to eat, then I could save the extra. With that in mind, I doubled my portions and began cooking. Setting the food on the table, I went to the living room and asked if she wished to join me. \n\nSnapping out of her daze, Miranda looked at me. \"You made dinner for me?\" she asked, her voice tired and sad. \n\n\"It doesn't have to be for you. I could save whatever is extra. But... there's enough for you,\" I tried to explain. \n\n\"Can we eat in here?\" she asked, looking down at the coffee table. \n\nWhen I stared at the couch and twisted my face in thought, she said, \"Never mind, Hun. I'll come to the kitchen.\" \n\nShe followed me there, and we began our meal in silence. When Miranda failed to initiate any conversation, I stated, \"Miranda... Dear... you seem sad.\" \n\nShe huffed once in a half-hearted attempt at laughter. Then she smiled wryly at me and asked, \"I seem sad?\" \n\n\"Maybe it was just a sad movie,\" I suggested. \n\n\"It wasn't a sad movie,\" Miranda answered slowly. \n\n\"Were you talking to your mother on the phone?\" I asked, remembering the phone clutched to her chest and the unexplained yet tense relationship that existed between them. \n\n\"No... not that,\" she mumbled. \n\n\"Is it... Would you like to... talk about it?\" I ventured, hoping it was an appropriate thing to ask. ",
        "Miranda looked at me, her smile contrasting oddly with such sad eyes. Then she burst into tears right in front of me. \"Yes and no!\" she blubbered. \"I don't know.\" \n\nI was nearly finished with my meal, while Miranda had barely touched hers. She pushed the plate away and said, \"I'm sorry, Deke, I just don't have an appetite today.\" \n\n\"That's OK,\" I said, rising from my seat and reaching for her plate. \"I'll clean up.\" \n\n\"Thanks,\" she sighed, sliding from her seat and returning to the couch. \n\nWhen I had finished cleaning up, Miranda's voice called weakly from the living room. \n\n\"Deke? Can you come sit with me?\" \n\nI paused. I had no resources with which to help her. All I wanted to do was help her to stop feeling sad, but I had no script for that. I felt like the wrong person for the job and I wondered if she would be better served by calling Dottie or Jeanine to come sit with her. But she had no one else present at the moment, and, as she would remind me, \"It's what friends do.\" Inasmuch as I considered her a friend (at the very least), I went to join her, hoping it was enough to just sit there. \n\n******* \n\nI sat down next to her as she turned off the TV. Miranda curled up her legs and leaned against me. Taking my arm from between us, she maneuvered it around her shoulders, which felt more comfortable for me at least. Then she pulled a blanket from its spot on the back of the couch and draped it across us. Once we were settled, she pulled out her phone and looked at the blank screen for a moment. \n\n\"Is there something I should do?\" I asked. \n\nMiranda sniffled and answered, \"Just listen, for now.\" Then she began swiping through her phone, scrolling through pictures. She said, \"There's someone I'd like you to meet.\" Finding one picture in particular, she stopped on it, smiled at the screen, then turned it towards me. \n\nIt was a photo of Miranda, taken that day, judging by the outfit. She was smiling and sitting in an old brown recliner. In her lap was a chubby-faced young boy with light brown skin. The boy seemed to be laughing. \n\n\"This is Dominick,\" she informed me. \"We call him Dom.\" \n\n\"Who's 'we'?\" I asked. \n\nMiranda smiled a little and said, \"I'll get to that.\" She swiped through more photos of Dom playing, some with her, some with a few other children, some by himself. I judged most of them to be from this weekend. Miranda's smile was sad and proud as we watched the images passing by. Then she pulled her phone back and searched for something else. As she turned the device towards me again, she said, \"I got pregnant with him around this time during my freshman year.\" As she said that, she showed me a picture of a slightly younger Miranda, her belly full with child. The photo was taken from the side and she was smiling. I wanted to reach out and touch her. She was radiantly beautiful. \n\n\"He was born the next fall,\" she said, swiping again, \"and was adopted by some friends I made at Dottie's shelter.\" She showed me a picture of a man and woman flanking Miranda in a hospital bed as she was holding a newborn baby. \"It's what they call an 'open adoption,' which means I still get to see Dom and he'll grow up knowing me.\" Tears fell slowly down her cheeks again, but I couldn't tell if they were of happiness or sadness. Miranda was scrolling through pictures of Dom growing up. \n\n\"Anyway, I took the next year off school to give birth, recover, and work. Then last year I started studying part-time again, and that's when I had your class.\" \n\nShe searched for another group of photos. \"About twice a year I spend a few days with Gina and Andrew - Dom's parents - and their family.\" She showed me a picture of the couple with four children joining them on a couch. Dom was there, as was a young boy she identified as Ian, a young girl named Estelle, and a baby named Melody. The woman seemed very pregnant. The next image was of the same group, but with Miranda in it. \"I'm so glad for those times and that I can be part of his life, but it's always hard, especially after I leave and come back to an empty apartment. I always question whether I made the right choices along the way. There's so much I regret, and I sometimes relive the hard parts of that journey.\" She turned off the phone and set it on the coffee table. \n\nThen reaching for the bottom of her t-shirt, she pulled it up past her navel. A large transverse scar ran across her lower abdomen. \"Dom was a Caesarean birth. And that's why I never let you... or anyone... see this part of my body. Because it's about more than just being embarrassed by stretch marks and scars and a little extra weight. It's about this part of my life that not everyone gets to know.\" \n\n\"And why are you showing me now?\" I asked, still looking in fascination at her scar until she lowered the shirt again to cover it. \n\n\"Because I trust you. Because I think that, in your own funny way, you care about me. Because you made me dinner without being asked to. Because I just need someone to be close to me tonight. I don't know.\" \n\n\"What about the father?\" I asked, trying to judge which of my many questions might be appropriate to pursue and which might cross unspoken boundaries. \n\n\"You really want to know?\" she asked, her voice cracking. \"Or are you being polite?\" \n\n\"I don't think I'm ever really polite,\" I replied. \n\nShe half-smiled and put a hand on my cheek for a moment. Gazing into my eyes, she looked thoughtful. Then lowering her hand and her gaze, she said, \"That's not a story I've told many people. Hardly anyone, actually. Just Dottie. And Dom's parents.\" Then she looked up again and asked, \"Are you sure you want that burden?\" \n\nUnsure what she could mean by that, I cleared my throat and replied, \"Since when is knowledge a burden?\" \n\n\"Oh, Puppy,\" she whispered sadly, looking away and biting her lip. She shook her head slowly and seemed to be holding an internal discussion. Then she began. \"Like I said, it was freshman year. I wasn't really into the party scene, but every kid on campus lets loose now and then. I was at just a normal party at some frat house. I was getting drunk, and I knew it. That was the plan. My friends were off doing their own things - some of them looking to get laid, others just trying to get wasted. It was late. I kept drinking and dancing and just having a crazy time. It was a Friday night, and nobody cared about the next day. We knew we had the weekend to recover.\" \n\nShe paused and I tried to picture my Miranda, the responsible, intelligent woman who had taken up residence in my life, behaving so wantonly. \n\n\"And that's mostly it,\" she said. \"I woke up on a couch at the house where the party had been. I was hungover and it was late Saturday morning. I ached all over. It wasn't until later that day - once I really woke up and showered and got over my hangover - that I started to feel a different kind of pain and suspected that something had happened down there. I began to recall fuzzy memories of being on my back and of the reek of alcohol and body odor and the weight of something heavy on top of me. I didn't think too much of it until I missed my period two months in a row...\" She choked up a bit and squeezed me tightly. \"I had been a virgin, Deke. I was passed out and got raped my first time.\" \n\nThough I knew the appropriate response would be sadness or sympathy, I felt instead anger. My muscles tensed. I wanted to hurt someone. I wanted to hold Miranda and force it all to go away. Such things should never happen. Especially not to Miranda. \n\nHer breathing, which had been quickening, intentionally slowed. \"And so I have no idea - no way of ever knowing - who the father is. I was on pins and needles for months, going through the shame of getting tested for STDs. Thank God all I got was pregnant.\" She sniffed and wiped her nose on her sleeve. \"I had started seeing a guy not long after the party, and we had been having sex for a few weeks when I discovered I was pregnant. I was really starting to like this guy a lot, but once I told him I was pregnant and it wasn't his, that was over. It was like he thought I was a whore or something.\" She sighed, thinly masking the bitterness in her voice. \n\n\"The worst part of it was I couldn't go home. I had always judged my mom for letting some random guy knock her up. And I swore I would never, ever end up like her. That I was so much better than her. I used to brag to her that I was making better choices - not sleeping around, studying hard, going to college. And then suddenly all that pride looked like hypocrisy. I still haven't even told her about Dom.\" \n\nFrom her seated position next to me, she leaned over, rested her head on my thigh, and said, \"Rub my back?\" I began moving my hand slowly up and down the outline of her spine. \"Under the shirt,\" she clarified. I slid my hand directly onto her skin and continued rubbing. Miranda hummed and said, \"That's good, Deke. Keep that up.\" \n\nAfter a minute of being gently massaged, Miranda sighed and said, \"So that's partly why I came to you when I did. I was low on funds, in danger of not being able to pass my classes because I was busy working, and I didn't know what else to do. Going back to Nevada wasn't an option. One, because I couldn't face my mom. But two, more importantly, I just can't leave Dom. I don't know if I'll ever be able to. So I was desperate. Desperate to find a way to stay in school, to stay in town, and to save time and money. Gina - Dom's mom - says we sometimes do extreme things when we're desperate like that, and sometimes that's what it takes to get us where we really need to be.\" \n\nI thought about that observation - excessively sentimental though it was - and I wondered where Miranda's \"extreme\" measures were leading her. Though I knew our current situation was temporary and that she would likely be gone in 18 months, I could not seem to picture my life post-Miranda. I was used to her. But more than that, I chose not to picture my life without her. \n\n\"So there you have it,\" she said, cutting into my thoughts. \"My biggest and best mistake. A little guy who's got my heart, even though I'll never be his real mom. I often wish I could, even though he's living a far better life right now than he would be with me. And now... when the new semester is just about to start up... is when it all happened. And I just spent a weekend with them. So I'm a little emotional and you'll just have to deal with it.\" By the time she finished, her voice was cracking again and the tears were running down her face and onto my lap. I didn't move. \n\n******* \n\n\"You know, Deke,\" Miranda said as she popped up her head, startling me out of the long reflection her story had prompted, \"I sometimes can't decide if you're a really good listener or if you're just too scared to talk.\" \n\n\"I don't talk unless I have something to say,\" I explained. \"And I don't usually have something to say until I've thought carefully about it.\" \n\nShe sighed, resting her head on my lap again. \"I know. And I choose to think you're just really good at letting me talk because you care about me. In fact, don't tell me if that's not the case.\" \n\n\"I do care about you,\" I assured her. \n\n\"Attaboy, Deke. Good answer.\" \n\nI thought her mood was stabilizing, but just a few minutes later, her body was shaking again, and I could hear her sudden intakes of breath that indicated sobbing and more tears. Since she hadn't asked me to stop, I continued rubbing the bare skin of her back, resisting the temptation to move to her sides, where I would be able to rub part of her breasts, which jiggled as she sobbed. I felt drawn to her body more now than ever before, but the timing seemed inappropriate. \n\nHer outburst seemed at least a little cathartic, and after a few minutes, she calmed down, resting her head on her arms, which were folded on my lap. I considered our situation for a moment, trying to determine what would communicate that care other than waiting and listening quietly. Asking more questions about her past seemed too risky. Finally, I concluded I could do much worse than to just ask for her input. \n\n\"Miranda?\" \n\n\"Yeah?\" she whispered. \n\n\"What can I do for you... right now? What can I do to help you? To make you feel better? I really want you to feel better.\" \n\nMiranda twisted around and sat up a little, ending the back rub. She pointed towards an end table and said, \"Hand me a tissue.\" When she had wiped her eyes and nose several times over, she tossed the tissues onto the table. \"Could I sleep in your bed tonight?\" she asked. \"I just don't want to feel so alone right now,\" she went on to explain. \"I want to feel you next to me all night - to have someone next to me when I wake up in the darkness. And if you don't want to have sex, I'm fine with that. Just... be near me, OK? Just for one night.\" \n\nMy room only had the double bed, though I was beginning to consider whether it might be more efficient to simply purchase a larger bed. It seemed our trend of moving Miranda's bed into my room was going to happen more often than originally planned. But I didn't think we would be moving her bed that night. And as I considered it, I remembered that the campus would be closed the next day for New Year's, so it wouldn't matter a great deal if I had a poor night's sleep keeping Miranda company. But then again, when forced into such proximity during my parents' visit, I had slept rather well. \n\n\"I can do that,\" I assured her. \n\n\"What time is it?\" she asked me. \n\n\"A few minutes past eight 'clock,\" I answered. \"Are you sleepy now?\" \n\n\"It's been a long day for me, Deke, and I feel drained. I'll just head to bed now. Are you sure it's OK for me to sleep in your room?\" \n\n\"I'm sure it's OK,\" I said, lightly touching her hair. \n\n\"Thank you,\" she sighed as she slowly swiveled her legs off the couch. \"Don't wait too long to join me,\" she said as she walked down the hall. \n\n******* \n\nI followed her an hour later. In that hour, I had tried to process what I had learned that evening and how my mind was reacting to it. While I wasn't feeling particularly overcome with lust, I wondered if Miranda needed to feel beautiful that evening. I resolved to take any opportunity to initiate sex with her, though I assumed she would be asleep and such an opportunity would not arise that night. I also recalled her words about her preference for spooning without clothes. Not knowing what she had worn to bed (she was frustratingly inconsistent on that point, I had observed), I chose to break from my habits - for one night, for Miranda's sake - and sleep only in my briefs. \n\nWhen I slipped under the covers, Miranda was on her side, wearing her t-shirt from earlier and nothing else but panties. I moved as closely as I could behind her, being careful not to disturb her sleep. Then I conformed my body position to hers. I earnestly wished to lift her shirt so that I could feel her skin all the way up my chest and arms. But I settled for feeling her softness in my lazy embrace. I even attempted an innovation, sliding my hand under her pillow and adjusting until she was resting her head on my arm. With that accomplished, I could really wrap my arms all the way around her, holding her as she slept. \n\nI tried for some time - a half-hour, at least - but was unable to fall asleep. I was aware that there was much on my mind. And being in newer, less comfortable circumstances did not help matters. It was the familiar, the expected that helped me relax. But, I reminded myself, this was for her, not for me. \n\nI thought of her scar and of the freedom I now had to explore this previously off-limits part of her body. My hand moved under her shirt and sought the location of her surgery. It was lower than I expected, and my fingers explored just inside the waistband of her panties. Feeling along the rough boundaries of the scar, I ventured farther down, slipping my whole hand inside her panties. I paused, awaiting some response. None came. I moved down, moving past the thin patch of hair. Still no response. I slipped a finger down into her folds and froze. Miranda stirred and I pulled my hand back up. When she became aware of her surroundings, I was rubbing her belly. \n\nShe slowly took hold of my hand and pushed it down towards her panties. \"Do that again,\" she whispered. \"Please?\" \n\nI gave a few slow rubs before saying, \"I'd like to do more than that, if that's OK.\" \n\n\"How much more?\" she asked, her voice hushed. \n\n\"How much can be done while we're spooning?\" I asked sincerely. It seemed like the mechanics of sex would be possible, but I wasn't sure. \n\n\"Why don't you find out?\" she whispered, turning back to give me a quick kiss before she slipped off her panties. \n\n\"I'd like you to be fully naked,\" I told her, tugging up on her shirt. It took a little doing, but eventually her shirt was off and I had my first unfettered access to her body. Naturally, the area that had been longest hidden was the most appealing. And so my hand rubbed all along her smooth, soft abdomen. But after only a minute, Miranda muttered, \"No, no, no, no,\" and guided my hand back between her legs. I resumed slow motions along her slit, eventually hearing and feeling her arousal. \n\nMy own arousal was still contained in my briefs, though it was pressing hard against her bottom as we pushed our bodies ever closer. Miranda reached back and started pushing at my waistband, though the angle put the task out of reach. I ceased giving attention to her folds long enough to join my total exposure to hers. When I put my hand back to its assigned task, Miranda moaned and nuzzled the arm she was using for a pillow. \n\n\"Fingers,\" she said. \"Try putting some fingers in a little bit.\" \n\nI did as she requested, but clumsily at first. Miranda would open her legs a little to give more access when something felt good. And sometimes, she would clench up when something felt uncomfortable. I began to see that this by itself would not be a path to completion for her, but it was yet an important part of the preparation. And my own urgency to be joined with her convinced me that her time of preparation was complete. \n\nTrying to enter by simply adjusting my hips quickly proved futile. But Miranda, understanding my intentions, reached down and lined me up properly. Returning her hands to be resting on mine, she said quietly, \"Go ahead, Puppy.\" I curled the arm that was beneath her and was able to grip her opposite shoulder, creating a strong grip on her body that would give me leverage for entry. My other hand held the point of her hip bone. It took three or four firm thrusts, but at last I was buried in her. \n\nI could feel the smooth warmth of her breasts under my forearm. My other hand began rubbing her belly again. Finding her scar one more time, I marveled to think that a baby had been inside her body. That she had been the bearer - the creator - of a human life. I pushed in and held still. I marveled at what an amazing thing her body was. How perfectly evolved to evoke desire, to give pleasure, to convert lust into life, and to turn two colliding cells into a child. \n\n\"Tell me what you're thinking, Babe,\" she whispered. \n\nWhat words would suffice? \"I'm just... thinking of how amazing your body is.\" \n\n\"You think I'm hot?\" she asked, wiggling her bottom and sliding along my length a few times. \n\n\"Well, yes... but that's not what I was thinking just now. I was thinking about how you made a life. I guess it's one thing to consider it in the abstract, or in general. But you,\" and I rubbed my palm in circles on her belly, \"you made a life in here.\" Then running a finger along her scar, which was becoming a fixation of mine, I continued, \"and that life came out right here.\" She put her hand on top of mine, and I worried I was reminding her of the very things she wished to avoid that evening. ",
        "\"And this,\" I said, thrusting into her. \"This feels so unreal. So perfect... Your body does that: it grips me, it lubricates itself for my entry, it even manages to give you the opportunity of finding pleasure in the act.\" \n\nAs I continued thrusting slowly, pensively, Miranda moved my hand downwards again and showed me where and how to rub her. \"Yes,\" she said, \"but not without some assistance.\" As her hand lightly guided mine, she whispered, \"Kind of like that, but push down a little more on th- oh! OH! - on this area. But not too much. You'll know what's working if you just keep listening.\" \n\nThen, leaving my hand to its task, she pulled my other hand down to cup her breasts. I couldn't believe I had almost forgotten her breasts, so consumed was I with thoughts of what newly-revealed wonders were residing below them. \n\n\"Same thing,\" she whispered. \"Gentle motions, but a little extra attention on the nipples sometimes. Too much makes them hurt. You can't really use your mouth on them in this position, but you can find other things to - ooohh...\" Her last comment was cut off when my nose pushed past her hair and gave my lips access to the back of her neck. I saw goose bumps form on her arm and knew that was probably a good sign. \n\nIt was hard to keep everything in mind all at once, and so Miranda helped by thrusting back steadily whenever my concentration elsewhere made my hips stall. I listened intently for indication that my hands were succeeding. Soon, the whole endeavor slowed down until we were barely moving. Very small hip motions maintained my firmness insider her, but for a while, we were both content to just hold and be held. And as we did so, the sensation of her skin all along my body - from neck to feet - came to the forefront of my senses. We held that position for several long minutes. One body held together tenuously, threatening to fall back into two parts if they did not perpetually press together. \n\n\"You were right, Dear,\" I told her. \n\n\"I usually am,\" she whispered, and I could picture her smile. She reached her arm back to pull my face close enough for a kiss. I wished our lips could continue that way without spraining our neck muscles, but that was one sacrifice required of us in this position. \"What in particular was I right about?\" \n\n\"Spooning without clothes,\" I answered. \"It's much better.\" \n\nA small laugh became a loud, happy outburst. As it did, Miranda pushed back against me with determined force. \"Use your hand, Puppy, I'm close,\" she suddenly whimpered. I did as requested, giving inconsistent pressure to certain sensitive spots, responding to the cries and gasps those touches elicited. Suddenly, she clenched my hand that was holding her breast and pushed down on it with more force than I thought could be pleasurable. And yet her breathing grew ragged and her cries announced how close she was. \n\n\"Push, Deke! Push harder!\" she whined, tightening her walls around me and bucking back so hard I feared to mess up the rhythm. And yet I responded as my instincts dictated, tightening my grip on her body and using that grip to force her repeatedly against me. In the frenzy of lust, I was quickly overtaken by my own release. Abandoning my duties to Miranda, I grabbed whatever my hands could find to use as leverage to reach my goal. She flailed in my arms, unable to adjust or move or continue her own pursuit while mine was nearing its end. \n\nHolding one arm around her belly, I thought briefly of this furious state in which a life begins. I thought how Miranda was at the same time a sacred entity and a mindless object. In the same moment, I revered her and also constrained her body to my will. When else but in the act of sex did such a high and such a low view of another human coexist? \n\nThen I felt that unbearable, straining tension followed by violent release. The sweat forming between her back and my chest: lubricating our bodies, mixing our fluids. Her cries, distant and unheeded as blood rushed in my eardrums. Her tunnel milking my seed into her womb. Her spasms in my arms as her body lurched forward. I was calming down; she was still frantic in the midst of orgasm. We had reached our peaks nearly together, each one's pleasure fueling the other's. \n\nShe was saying my name, whispering it over and over as she tried to breathe normally. Groping about for my hands or arms or something to hold on to. Something to assure her that I was there - all of me. I touched her shoulder with my lips and delighted in the saltiness of her skin. \n\n\"Right here, Darling,\" I whispered, equally breathless. \"I'm right here with you.\" \n\nShe exhaled loudly and relaxed. \n\n\"Thank you,\" she said, her voice just above a whisper. \"Thank you for taking care of me tonight... and for showing me how beautiful you think I am.\" \n\nIn response, I pulled her closer, my length still hard inside her, and I kissed just below her ear, feeling her pulse as I did so. \n\n******* \n\nWe lay that way for some time. I softened but did not entirely slip out of her. When I came close to doing so, a slight push of my hips kept me sufficiently encased in her folds. I listened as her breathing returned to normal, then became slow and steady. She lay so still and quiet, I wondered if she had fallen asleep, my hand rubbing her belly. Wanting to act on an impulse that seemed proper, I called her name softly. \n\n\"Hmm?\" she answered dreamily. \n\n\"I wonder if... since you shared a personal story with me this evening... if you'd want to hear a personal story of my own.\" I felt her muscles tighten. \"One that... maybe helps me understand just one aspect of the pain you've experienced. But if you're sleepy, we can talk another time.\" \n\nShe was silent for a moment, long enough for me to wonder if I had suggested something inappropriate. Then her softest voice spoke into the room and said, \"Deke... I don't think I want anything more in the world right now than to hear that story.\" \n\nI clenched my jaw and took a deep breath. It was not one I had ever told anyone, and I wasn't sure how or where to begin. \n\n******* \n\nI finished high school at age 14 and went on to college. I have always been as academically gifted as I am socially challenged. I never pursued friendships - neither in high school nor in college. My studies were always paramount, and my high scores reflected that commitment. After earning my undergraduate degree in three years, I went on to graduate studies. I turned 18 that first year, and there was a group of undergraduate students who seemed to take a social interest in me, even though they were several years my senior. They invited me to certain events and parties - invitations I declined in favor of my research. \n\nBut they were persistent. And one day, they gave me no chance to refuse, practically forcing me into a car with them. There was much joking and explicitly sexual conversation that made me quite uncomfortable. We went into a house off-campus for a \"party,\" though I was ushered immediately down to the basement. Against my will I was forced onto a chair and bound to it. There was little light and a lot of laughter. \n\nMy pants were pulled down and the belt secured around the chair legs, restricting my movement. After a few minutes of screaming and pleading and insisting on my release, I heard the door open again, and another figure was brought into the basement. She was thrown to the ground in front of me with the command to \"suck it.\" She screamed and pleaded as well, but our cries were met with laughter. \n\nThe goal, I later determined, was our mutual humiliation. The poor girl was accused of unfaithfulness to her ex-boyfriend (who stood there orchestrating our ordeal). I was targeted for failing the previous year to assist some of these young men in their efforts to pass a certain math course without completing the work - an offense I only dimly recalled. \n\nSo with threats of physical punishment and other consequences (\"It's him or all of us\" I think they said to her), they forced her to... to perform oral sex on me. I found no pleasure in it, even though my body betrayed me and responded according to instinct. I don't recall the sensations of her mouth on me. I only remember her tears and panicked expression. How she gagged and slobbered and wept. I don't know how long she was made to endure her punishment. It felt like ages. And when we thought they had finished their sadistic game, they ordered her to \"pull down her pants and sit on it.\" \n\nShe nearly collapsed with grief and pleaded with them to let her go. She apologized frantically for things I'm sure she hadn't even done. With threats of worse things to come if she didn't obey, they compelled her to remove her pants, but by then I had lost any semblance of arousal. They mocked me and called me \"homo\" and other such things. In truth, I was relieved - for her sake as well as for mine. They made her sit on my lap and move around in some misguided effort to excite me, but it would never have worked. The two of us sat there in tears until the main instigator finally got bored with it all and sent us away in disgust. \n\nThe young lady and I had to walk the five kilometers back to campus together, never saying a word to each other the whole time. She wept most of the way. Neither of us reported the incident, though I saw her once on campus subsequently that semester (but she did not see me), and I overheard her talking to someone about her upcoming transfer to another school. A few of the young men were later that year dismissed because of charges related to hazing as well as some alcohol violations. I was glad to know they would be gone, even if I felt like their punishment was insufficient for the scope and nature of their unreported crimes. \n\nI tried to forget that night, and it was that desire to forget that fueled much of my graduate research afterwards. Though my final topic landed elsewhere, I began by seeking ways to chemically alter or erase specific memories in laboratory mice. My hope was to someday be able to expunge that night from my own memory. So in a way, that incident was responsible for ten years of productive research and at least one major discovery in the field of neurochemistry. Perhaps that's too nice a spin to put on it, but I don't think I would have pursued this direction otherwise. \n\n******* \n\nIn telling my story, I became so engrossed in seeing and recalling the events that I nearly lost track of where I was in the present. When I finished, I listened to see if Miranda was still awake in my arms. My soft penis had finally slipped out of her grip and rested gently between us. My one hand still rested on her belly, the other gently holding her breast as my arm supported her from beneath. It was getting uncomfortable, but I had no desire to move. \n\nMiranda sniffed in the dark and rubbed her face on the pillow. Rolling over until she was facing me, I could see she was freshly crying. \n\n\"Oh my God, Deke,\" she said hoarsely. \"You've been holding that in for twelve years?\" \n\n\"I haven't necessarily been 'holding it in,'\" I objected. \"I just haven't spoken of it. There was never an occasion to.\" \n\n\"Baby, that's honest-to-goodness trauma,\" she said, touching my cheek. \"I know you process everything differently from most people, but have you considered seeing a counselor or something? Maybe someone who specializes in... you know... people like you?\" \n\nI sighed, not wanting to rehash this argument again. \"Counselors deal with the veneer, the labels we give to what we don't explain scientifically. I'd rather see a neurochemist.\" \n\nShe closed her eyes and didn't respond immediately. Then, changing the topic a bit, she asked, \"And you said that this helps you understand my story a bit?\" \n\n\"If I can say so without minimizing or making light of your story, yes,\" I replied. \"The forced sexual activity, specifically in a first sexual encounter. The... uh... shame felt afterwards. The hurt felt after being so poorly treated.\" I paused. \"Maybe it's not much, but I think...\" \n\n\"You're right,\" she interjected. \"I think you do know a little about what I've been through. Thank you.\" \n\n\"Say that again,\" I told her. \n\n\"Say what?\" \n\n\"Tell me I'm right,\" I said. \"You don't admit that enough.\" \n\nMy eyes having adjusted to the darkness, I could make out the details of Miranda's face next to mine. Her eyes narrowed, then widened in amazement. \"Why, Deacon Kirsch, I do believe you're teasing me.\" \n\nI responded with a smile. Miranda responded by taking my face in her hands and giving me a passionate kiss. When she had finished, she rolled out of bed and trotted to the bathroom. She returned a moment later and hopped back under the covers. When I curled up behind her, she wiggled around, feeling our skin touching at so many different points. \n\n\"Still naked?\" she asked me, her voice surprised. \n\n\"Just this once,\" I warned her. \n\n\"I'll take what I can get,\" she replied. Then as we settled in, my arm around her, our flesh passing warmth back and forth, she whispered, \"Happy New Year, Puppy.\" \n\n\"I hope so,\" I whispered back. \n\n*******"
    ],
    "authorname": "nageren",
    "tags": [
        "asperger's",
        "spooning",
        "forced oral sex",
        "unplanned pregnancy",
        "drama",
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/love-in-the-age-of-chemicals-ch-04"
}