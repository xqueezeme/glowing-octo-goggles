{
    "title": "Greg's Surprise Ch. 02",
    "pages": [
        "(This is a continuation of a short story which was submitted to Literotica some time ago. Following a large reader feedback requesting further adventures of Greg and his Mistress Sasha, their story continues. If reading my work for the first time, this author respectfully suggests you read Part 1 first.)\n\n*\n\nWarm summer sunshine filtered through the bedroom curtains. Greg's alarm clock sprang into life with a raucous, incessant clanging which assaulted Greg's ears as he sat bolt upright in bed. Greg's hand descended onto the clock, cutting off the dreadful racket with a practised movement.\n\nThrowing back the covers, Greg swung his feet to the floor and got out of bed. Padding through to the bathroom, Greg stepped into the shower, his naked body adorned by one item only \u2013 the one item he had had a love/hate relationship with for the past six months \u2013 his chastity device. Turning the water on, Greg began his ablutions, reflecting on the momentous change in his lifestyle since Sasha had taken control.\n\nSasha. The woman he adored and worshipped. Thoughts of her filled his mind as he showered and, as he knew it would, the familiar prickling sensation began as his cock rose in answer to those thoughts. It tried to rise anyway. As it filled and grew, the painful points of his chastity pierced his mind as well as his throbbing cock. He concentrated hard, willing himself to think of other things in a desperate need to lose this almost constant erection which happened every time Sasha filled his mind or any one of his senses. Gradually those vicious spikes lost their prey and Greg sighed in relief. Turning back to the business in hand, he completed his shower.\n\nSome time later, showered, shaved and dressed, Greg was in the kitchen preparing Sasha's breakfast tray. She had breakfast in bed every morning and Greg always tried to make sure his goddess had everything she needed. Lined with a damask napkin, the breakfast tray waited on the table as Greg poured fresh black coffee into a cup; put hot croissants in a basket, a small pot of strawberry conserve and tiny pats of butter on a plate. Placing all these items on the tray, together with cutlery and a fresh-cut rose in a small vase, he ascended the stairs to Sasha's bedroom.\n\nPausing by her bed, Greg took a moment to study the woman he loved as she slept. Red hair fanning out over the pillows; lightly freckled fair skin with a faint rose tint, full lips parted slightly, Greg drank in her beauty. He mentally thanked his lucky stars that Miss Elizabeth had brought Sasha into his life. She was smiling as she dreamt, probably some tormenting plan for me Greg thought as he softly placed the tray beside her bed. He walked to the window and drew back the curtains. A sigh behind him told Greg Sasha was awake.\n\n\"Morning my pet\" Sasha murmured as she sat up \"Did you sleep well?\" \"Yes mistress, your boy always does\" Greg smiled as he knelt beside her bed, ready to perform any task for her. \n\n\"Good. I have plans for today\" Her green eyes twinkled with mischief as she regarded him over her coffee cup. Greg's cock twitched painfully in his chastity. He knew that it would take all his willpower today, not to be in constant painful erection. Sasha was in a playful mood \u2013 that meant hours of delicious torment for her boy.\n\nA leg appeared from underneath the covers; the coral pink nail polish adorning the toes shone as the light caught it. Sasha continued eating her croissant, seemingly unaware of her leg's movements. Greg stared down in fascination as Sasha's toes began caressing the inner thigh of his left leg. Higher and higher the toes continued their exploration; Greg's cock now painfully receiving sharp pin-pricks up and down the entire shaft. Gasping and groaning, Greg's eyes fluttered shut as he gave himself up to the warring sensations Sasha's toes were causing him.\n\nThe toes continued their torture, caressing the underside of his balls and travelling further underneath then pressing upwards mid-point between balls and anus. Massaging Greg's prostate, the erotic pain/pleasure rose to new heights causing Greg to spiral into subspace. His breathing now rapid, sweat pouring down his body, his mind floating as his sweet mistress took him higher. Vaguely he heard her crooning at him. \"Good boy, yes Greg, that's it. Go with it.\" \n\nFrom deep within, a low guttural growl emanated from his chest. Despite the pain the chastity was inflicting on him, he knew he was close to cumming. Leaving him poised on the edge, Sasha's toes ceased their torment. He hung there, hardly daring to breathe, let alone move. He slowly opened his eyes, feeling an acute sense of loss. Sasha watched him, her green eyes calculating. \"My bath if you please Greg.\" \n\nKnowing any further caress was now out of the question; Greg answered with a sigh, \"Yes mistress\" and got up from his kneeling position, painfully reminded of his enforced chastity. He moved slowly, every step causing acute pain in his cock and balls. Whimpering, he walked through to the bathroom and began running her bath.\n\nThe shrill ringing of the telephone made Greg jump. He heard his mistress answer it with a cool \"Hello?\" A shriek, followed by animated chattering told Greg that Sasha was talking to a dear friend and would be a while, so he completed the preparations for her bath and returned to her bedside to clear away her breakfast tray.\n\n\"Darling I would love to see you.\" Sasha ignored him as he removed the tray. \"What time will you arrive...Yes that's fine, I'll expect you then.......ok......Bye\" Replacing the receiver, Sasha jumped out of bed. Calling for Greg, she walked through to her bathroom. Towels warming on the rail, the scent of rose and grapefruit, fragrant and uplifting, assailed her nostrils. Greg appeared and stood in the doorway, eyes firmly looking at the floor, desperate to look at her and adore her, but knew she would punish him if he did. \n\n\"Ah there you are my little slut. Quickly now, I have a visitor for lunch and you have work to do.\" Greg rushed forward with alacrity and helped her step into her bath. Taking up a sponge as she sank in the water, he began to bathe her.\n\nSasha watched him as he bent to his task. Concentration apparent in his face, he meticulously washed every part of her. Moving her body as he bathed different parts, she knew his inner turmoil as her naked closeness tormented him. She drew a nail down his back as he turned to bathe her calves, ankles and dainty feet. Uttering a low groan, Greg lost his control and began licking and sucking her feet and toes. \n\n\"Oh Greg, you naughty boy!\" Triumph in every word as once again, Sasha had succeeded in breaking his resistance. Greg groaned again and continued; unable to stop, knowing full well he would pay for his misdemeanour later. \n\n\"Oh Mistress, you must know how I love to worship your feet. You know I long for the feel of them on my face, my body, anywhere\" Greg was almost in tears, the heartfelt adoration pouring from him, like a river of words. \"Please Mistress; I will do anything, please......\" This last entreaty uttered as he pressed his face to the soles of her feet. \n\n\"Very well Greg\" Her feet pressed lightly against his face as he whimpered in both pleasure and pain; his cock on fire from seemingly hundreds of needles piercing his skin, yet his face and lips caressing her feet in total joy. \n\nA slight movement and the feeling of cool hands permeated his brain as Sasha unlocked the torturous device with the key normally held on a chain around her neck. Blood surged into Greg's rapidly growing cock, free at last to respond properly to his beloved Mistress. \"Ohhh thank you Mistress\" Almost incoherent with his joy at being free, Greg renewed his worship of Sasha's feet. Kissing each toe reverently, his tongue licking between them, he knew had begun to arouse Sasha; her soft gasps answering the movements of her questing tongue. Cradling her heel in his hand, Greg lapped at the sole of her foot. Sasha's soft murmurings encouraged him further. Taking the second foot, he began worshipping it giving it equal attention. Greg whimpered, his cock rigid; the large vein throbbing with the force of his erection. \n\n\"Get me out of this bath Greg!\" Sasha's voice cut into his consciousness. \"I will look like a prune in a minute! Selfish boy! That's two punishments now \u2013 one for losing control and one for allowing your mistress to get cold in her bath! Fetch me a towel NOW!\" Greg's face was beet red. He had done it again. He had lost control and failed his mistress by allowing his desires to come first. Releasing her feet, Greg moved to fetch a warm towel for Sasha. Wrapping her wonderful body in the towel, Greg helped her out of the bath and onto the mat. \n\nImmediately sinking to his knees, he showered her feet with kisses, interspersing them with tearful apologies. \"Mistress your boy is so selfish. He thought only of his own desire to worship. He begs your forgiveness, he can't help himself, and he loves you.\" Frantically trying to convey his contrition, he failed to see the look of tenderness pass over Sasha's face as he finally admitted his feelings. Always reserved, Greg had never mentioned the depth of feeling he had for her. \n\nSasha bent down and stroked the back of his head. \"Sshh Greg. It's ok. Calm yourself.\" Greg looked up in surprise. He had quite expected a severe reprimand, yet here Sasha was, speaking softly and tenderly to him. \"You know you did do something wrong Greg. I don't have to tell you that; you will be punished. You already know I cannot allow such disregard for me to go unpunished. However, I also know I have been teasing you and tormenting you for some time. You are learning to accept it and deal with it, so now you deserve a reward too.\" \n\nTurning on her heel, Sasha dropped the towel and walked naked into her boudoir. Mesmerised by her undulating bottom, Greg followed at her heels. Sasha stopped and turned, sitting down on the edge of her bed. \"Here boy\" Sasha patted her knees. He realised with a start, she was going to spank him! \n\nGreg lay over her knees, acutely aware of his hard cock imprisoned in between them. Sasha calmly captured it with her knees and held him fast. He was in heaven - bodily contact, skin to skin with his mistress and eyes only inches away from her pretty ankles and feet.\n\nHe snapped out of his reverie as Sasha's hand descended across his buttocks. White hot fire ripped into his ass as she spanked him hard. Again and again her hand fell, blood surging up to the surface in response to the weight behind each slap. Pleasure quickly turned to pain and then bizarrely back to pleasure again as endorphins kicked in and Greg's throbbing erection drove all else from his mind. His ass was on fire yet his thoughts were centred on the grip of mistress' knees around his tormented cock. He whimpered \"sorry mistress\" over and over, tears running down his face and dripping in a little puddle in front of him on the floor. Eventually the spanking stopped. Sobbing and still apologising, Greg remained over Sasha's knees despite the cessation of the spanks.\n\n\"Get up slut\" Sasha ordered. He shakily tried to stand, not sure if his legs would support him. Smirking, Sasha stood and walked around him. Noting his bright red ass, his tear-stained face, his total and abject humiliation evident in the way he slumped, Sasha pushed him back onto her bed. Swinging his ankles up, she secured his ankles and wrists to the four corners of her bed. \n\nFlat on his back now, Greg felt his burning ass sting even more as it made contact with the bed linen. Standing looking down at Greg, Sasha began to stroke her own body, playing with her nipples, stroking her soft skin; her green eyes locking onto Greg's anguished ones. Unable to look away, Greg suffered even more torment as his cock twitched and throbbed in response to her teasing. \n\nSasha turned, walked to her chest of drawers and began taking out various items of clothing. She showed Greg her green cincher with the dangling suspenders, her white cotton gloves and a pair of the sheerest nylons Greg had ever seen. He groaned loudly as Sasha walked back in front of him and slowly draped the nylon up his body from his toes to his face. The nylon tickled his skin, making Greg's body hyper-sensitive, his cock at bursting point.\n\nStanding close to him, Sasha wrapped the cincher around her body. Her breasts peeked deliciously over the top, her nipples hard and inviting. She drew on her white gloves and bent down and reached for the nylons once more. Raising her foot and placing it on the bed, Greg's eyes were unable to look anywhere but the moist glistening core of his mistress. Warm woman-scent filled his nostrils as she began rolling the first nylon up her leg. Greg laid there transfixed. He knew if she so much as breathed on him he would cum. She had tormented and teased him so well, even hearing the faint whisper of nylon on skin drove him mad with desire. \n\nHaving attached the suspenders, Sasha changed to the other leg. \"What do you think of the shade Greg?\" Sasha dangled the nylon in front of him \n\n\"Oh God you know I love it mistress! I \u2013 I can't take much more mistress, please let me cum!\" Greg implored, whimpering again \"Mistress is so good at driving her boy wild. She knows just how to enslave him!\" Frantically, Greg tried to calm himself, but the torment was racing to its peak. Sasha watched him, judging her timing acutely. She swapped over the foot on the bed with the one on the floor and began putting on the second nylon; behaving as if she had not heard Greg's plaintive cries. With the suspenders fixed to her stockings, she climbed onto the bed. Kneeling astride Greg's face, nylons rasping against his ears, she slowly descended. Her hot wet pussy becoming the centre of Greg's universe as he frantically began licking.\n\nNow it was Sasha's turn to moan. Greg's tongue flicked over her clit as she began to ride his face. Her juices were flowing, pouring into his mouth. Greg was in heaven. He adored her taste; her soft velvety folds caressing his tongue with every movement. Sharp nails raked his torso as she raced towards her climax. His back arching in response, Greg renewed his efforts drawing her clit into his mouth and flicking his tongue over it with deadly accuracy. \n\nSuddenly Sasha shrieked, clamping his head between her nyloned knees, spurting juice straight down his throat as she came. With Sasha juddering and moaning atop him, Greg squirmed gasping for air, trying to breathe but at the same time loving the nectar that was coating his mouth and throat.\n\nPanting, Sasha raised herself off Greg's face. He gratefully drew in huge lungfuls of air, smiling up at her. She climbed off him and moved to between his feet. Leaning back against the footboard of the bed, Sasha used her feet and toes to caress Greg's cock and balls. Gasping, he knew he would not hold out much longer. He begged Sasha, pleaded with her. \"Mistress you know your boy loves you, I have tried to please you, please let me cum mistress... please!\" \n\nSasha smiled, her toes caressing up and down. \"Very well slut you may cum\" All the pent up emotions of the morning were released as Greg's balls tightened and thick ropes of cum erupted from his cock. Gasping and moaning, Greg writhed on the bed, Sasha's toes still forcing his now over-sensitive cock to keep pumping, draining him dry. Removing her gloves, Sasha's soft hands scooped up his mess and she held them to his mouth. \"Clean up slut\" she whispered, smiling into his eyes. Greg licked and sucked her fingers clean. \n\nUntying his bindings and replacing the dreaded chastity on his now flaccid cock, Sasha glanced at the clock on the bedside table. \"Oh my! Look at the time! My friend is due here soon! Quick Greg, we are so late!\" Greg smiled, rising from the bed and followed that pert ass into the bathroom once more... "
    ],
    "authorname": "SensualCurves",
    "tags": [
        "foot",
        "feet",
        "foot fetish",
        "legs",
        "nylons",
        "mistress",
        "femdom"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/gregs-surprise-ch-02"
}