{
    "title": "Breaking Clich\u00e9s Ch. 04",
    "pages": [
        "Note: This story, like most of the Breaking Clich\u00e9s stories, is slightly edgier than my other stories. This one veers more towards the exhibitionism & voyeurism side rather than the light domination & bondage of the previous stories. \n\n*****\n\n\"Wanna choose what I wear so that I can place you in a state of deep need just before I leave for class?\" said Scarlett, waking me up. It was probably very late, as I knew that her only morning class began at 10 o'clock this semester. As I looked at her, naked and backlit from the only window in the room, she seemed to glow. It took me a few moments before I was coherent enough to nod. Sitting up in the bed, I asked her to show me a few bras I might like. After a few bras, all of which were remarkable, I was awakened enough to pay attention. I settled on a very fine white bra that looked like a collection of large snowflakes. It wasn't very good at supporting the weight of Scarlett's massive breasts, but she had given me the power to choose.\n\nOnce she had it on, she reached down to her drawer to get the matching panties. \"Who said you were going to wear panties?\" I asked groggily. \n\nScarlett grinned. \"Want me to make Fernand turn bright red again?\"\n\nI grinned, remembering the time she had worn a short skirt with no panties, and had chosen to sit in the front row... \"No, I have something else in mind. Find the pair of strange jeans that you have. The blue ones with white lingerie.\"\n\n\"These?\" she asked a minute later. \n\n\"Yep. Put these on.\"\n\nI didn't know who she had found to make these jeans. Scarlett was very good at modifying her clothes, but this was amazing. The pants had begun their life as a regular pair of blue jeans, but had since then been extensively modified. More than half of the original material ha been cut out, and intricate white lace put there instead. With the additional white lace roses sown on the remain jeans, the effect was stunning. As she stood, turning this way and that, letting me admire her, I said \"There you go. All ready for school.\"\n\n\"Haha! Very funny!\"\n\n\"Ok then. Wear the red shirt I love so much.\"\n\nWhen she slipped it on, the result was magnificent. The shirt itself was rather simply cut, but the material was heavy and supple, hugging Scarlett's curves very closely. \"Gods you're gorgeous. Remind me again why I'm not going to force you into my bed and fuck you again?\"\n\n\"Now why would I do that?\" she teased, walking towards the bed. Suddenly, she looked at her watch and said \"Oh my! Look at the time! I have to run!\"\n\nI let myself fall on the bed before shouting \"Little tease! Little bitchy tease!\"\n\nI heard her laughing as she walked to the door, shouting a \"I love you.\" before going out. I grinned despite my frustration and my erection. I thought about the first time we had shared that precious \"I love you\", a few weeks after our first meeting. I remember being so nervous with my other girlfriends before saying it for the first time. Yet with Scarlett, it had felt so natural, so normal... We were eating with at a nice restaurant and as we waited for our deserts, we stared at each other for a long moment, and I simply said it. She grinned, kissed me long and said that she loved me as well. Simple as that, no surprise, no stress. I was smiling as I went down the stairs to eat a late breakfast.\n\nMuch later that day, I learned something knew about myself. Despite the fact that I had always liked henna art, especially on beautiful women, I never would have thought that I would be willing to watch the process for hours. Yet I was now completely fascinated by the demonstration in front of me. Scarlett was lying on her back on a massage table, completely naked, but the woman working on her body wasn't a massage therapist. \n\nInstead the woman was an acquaintance of Scarlett's that, while not being exactly a close friend, had nonetheless agreed to a very big and rather intimate project. For the past three hours, that woman had been applying very complex, very dense and stunningly beautiful henna designs and patterns on Scarlett's body. All of Scarlett's body. \n\nShe had set her table and various implements in our living room, and the bright light from the sun was streaming right on Scarlett's body. Like a mentally retarded patient I found myself staring at the bar of shadow the window was throwing on her thigh, watching as it slowly crept downward to her knee, sending the henna paste in and out of the light. I knew just enough about psychology to know that I was in a sort of wakened trance, both aware and not aware of the world around me. Later, thinking back on this morning, I would be properly fascinated by the entire experience. I had drunk and feasted on Scarlett's beauty before, but never in such a contemplative fashion. \n\nI had no idea what it was going to cost, and even though Scarlett had refused my offer to help pay for it, I would gladly have paid hundreds of dollars just to watch the whole process. The woman was a real artist, and she had taken a good twenty minutes just staring at Scarlett's body before applying the very first line. At first I thought that she was just a lesbian obsessed by my girlfriend's body. But as the lines bloomed and I saw just how well the designs fit with Scarlett's curves, I understood that she had been planning the entire thing in her head. \n\nShe had begun around Scarlett's leg tattoo, a fully black design consisting of an anklet, from which a chain rose, looping around her calf until it bloomed into black roses on her thigh. From this base, the henna art had itself bloomed down to her toes and then up her leg, around her waist and back down the other leg. Next, the woman had applied her dark lines directly over Scarlett's flawlessly shaven mound, and even down to her lips. The artist then began her upwards journey again, tracing mesmerizing patterns on my girlfriend's smooth belly, from her pubis to her navel and all around her waist, then up to her breasts. \n\nThe woman paused again as she looked at the task ahead. That was quite usual for most people. I'm not ashamed to say that her breasts were the first thing I noticed about Scarlett when I met her. In fact, it was my unconscious mind that did. Since then, I had seen the remarkable combination of that summer red dress and black Simone Perele Amour full cup bra a few times. Every time I did it took my breath away and reminded me of our first meeting. Me and Scarlett's I mean, not just me and her breasts. \n\nThen again, meeting such explosive breasts for the first time was rather memorable. Very large, out of proportion to the rest of her body, they had captured my eyes and had drawn me to the woman behind them. Would I now be blessed with her in my life if she had decided to wear a more conservative attire that day? Grinning, I dismissed the idea; Scarlett never dressed conservatively. And for good reason...\n\nDepending on what bra she was wearing, her breasts sometimes looked like fakes, looked like she had implants. But she didn't. In any case, when you took the time to really look at them, they certainly were big enough to be implants, but they didn't have the usual fake shape. By and large, most slender women with big implants ended up with breasts that seem to be bolted on. But despite her small frame, Scarlett's large breasts looked organic. Wide, large and thrusting forward, certainly, but they blended and moulded quite naturally on her torso. \n\nBy now, most of the work had been done with Scarlett lying on her back on the table. For some of the work on her breasts, the woman asked her to stand up to see how her breasts would fall and move. Her breasts didn't fall all that much, but they did move around as if possessed. The woman didn't make a single unprofessional comment about Scarlett's breasts, but I had seen a few unguarded expressions. I din't think she really was a lesbian, but at the same time, Scarlett's breasts would surprise and affect most people. \n\nA few minutes later and Scarlett was back on the table as the woman worked on the top of her chest, her arms and shoulders, her neck and even parts of her face. The result was already stunningly beautiful, and I'm sure that when the process was going to be all done, it would be uniquely magnificent. After taking a deep breath and releasing it, the woman said that she would be taking a break before doing Scarlett's back. \n\nAs she took her pause in the backyard, sipping a creamy whisky, Scarlett stood up cautiously and looked up at me expectantly. She grinned as she saw my face, and slowly turned around. It took all my willpower not to bend her over and fuck her right on the table, and when she realized that I was just about ready to do that, her eyes widened and she caressed the front of my pants, feeling my erection. \n\nWhispering, as the door between us and the artist was only a screen door, Scarlett said, \"You have no idea how wet I am... I hope she didn't see it.\" Looking around and making sure that the woman was still outside, Scarlett leaned in and said, \"Let's make a deal. I'll turn around, you'll push your cock all the way inside me once and pull out. If you can do that without pushing back in, I'll let you do anything you want with me once the henna paste has been removed...\"\n\nI groaned and turned her around. Scarlett bent forward over the table, pushing her ass towards me. Unzipping my jeans, I pulled my cock out and spat on its tip. Grabbing one of Scarlett's ass with one hand, careful not to touch the paste on her hip, I guided my cock against her pussy and pushed in. When I saw her buttocks spreading against my upper thighs, I groaned again, trying to control myself. The woman could walk back in at any second. As I pulled out, I was sure I would fail and fuck her again, but I didn't. As I put my cock back inside my pants, I began, \"Oh yes little girl, tonight you're\u2014\"\n\nBut I stopped as the woman returned, seemingly unaware of our little stunt. Since Scarlett couldn't lay back on the table because of all the paste she had on her body, she would have to finish this standing up. After tying her long dark hair in a tight bun, Scarlett patiently waited until the woman was finally all done. All in all, it took about five hours of work and quite a few bottles of paste. We paid and thanked her, and when I returned to the living room, Scarlett had her arms up in the air and was turning around, letting me see her in all her henna glory. \n\nAnd it was glorious. Nearly everything was made using the traditional black henna paste, but before finishing, the artist added many flourishes in a pure white paste. As she was working, she told us that it made some purists angry, but she believed that the contrast added to the overall effect. I agreed. It was stunning. To top it all, she glued about thirty small gems on Scarlett's body. Not real gems, of course, but still made of glass and not plastic. Most of them were red, but a few were dark green and blue. As Scarlett turned around, I was speechless. She looked like a goddess. \n\nWe had the rest of the day to relax at home, letting the paste on as long as possible. What we hadn't thought about was that she would have to remain completely naked all day long. Despite what would happen much later that night, I would always remember that day as sheer torture and sheer pleasure at the same time. Now that Scarlett had paste all over her body, and I really mean all over, we couldn't touch each other, let alone fuck! \n\nOn the one hand it was fun to watch her trying to remain standing and not sit, yet seeing her moving around all the time made her body that much more desirable. Standing still, Scarlett's body was stunning. Moving, she became a wonder of nature that I couldn't tear my eyes from. \n\nAbout midway through the afternoon, as I watched her tattooed body as she moved in and out of the sunlight, a memory suddenly flashed in my head. One of the patterns on her back, a very intricate rose made up mostly of small birds, reminded me of a very similar tattoo. It took me a while to figure out where and when I had seen it, but then it popped; the Bird. That crazy, barely believable restaurant. I was pretty sure that one of the girls there had a similar tattoo... But all of a sudden the girl was forgotten, and I knew how I was going to get my real revenge on Scarlett for that dreadful, years-of-life-robbing night in the haunted house. \n\nA while ago, Scarlett tricked me into going into this supposed haunted house after watching a horror movie at the cinema. Obviously, the house wasn't really haunted, but it had been rigged to look that way. After seeing what looked like a desiccated corpse in the long abandoned bedroom, I opened the door only to see it rise up from the bed. There had been a rope and simply pulley system attached to the door. But in the seconds before my rational mind made sense of this, my entire being had been blown to bits by an overdoes of terror. \n\nIt had been, of course, Scarlett's plan all along. Not to scare me per se, but to make sure I would enter a stage of near rage and fuck her into submission. I had, and she had enjoyed it thoroughly. A couple of weeks later, by way of an apology for the years of life I would never get back, she had invited one of her friends to our bed for my very first threesome. It had been amazing, and in fact it made up for the scare quite nicely. In fact, Scarlett's presence in my life was worth more than one of those scares. I hadn't told her that, of course. Instead, I told her that I had another plan in mind. It had been a lie at the time, but now I knew what I wanted; I was going to bring her to the Bird.\n\nWhile Scarlett was outside the house in the rather private backyard, I made the call to the restaurant as soon as they opened for reservations and got one! I was lucky, given that it was Friday. I was also exceptionally lucky that they had kept my name on file. About four years ago one of my girlfriends, this one much older than me, had brought me there as a sort of experiment. She was a psychology professor and had wanted me to see that place at least once. It had been a singular experience, and it had made me realize that such places did exist in the real world. As a sociology major, Scarlett was going to be floored. \n\nWhen she came back inside, she was curious about the grin on my face. I said, cryptically, \"Do you mind if a lot of strangers we'll probably never meet again think I'm your sugar daddy?\"\n\n\"What?\" she replied, a lopsided smile on her lips, \"You mean you're not?\" \n\n\"Haha! You could make more money as a barmaid than I do at college!\" I laughed, an old joke. \"I'm serious; would you mind?\"\n\n\"Complete strangers? Hmmm.\" she paused, thinking about it, looking glorious and sexy, naked and tattooed in front of me. \"I think you'd be hard pressed to think of something I wouldn't do for you in front of strangers... Or do to you.\"\n\nAs she said that she moved closer to me and it was obvious that she wanted to have sex right now, despite the fact that we couldn't. Calling all my willpower, I stopped her. When my only explanation was that I had made dinner reservations at a restaurant, she was surprised, and suspicious. In the end, Scarlett liked surprises and eating out, so she stopped asking questions. \n\nLater, with most of the paste already fallen off, I enjoyed the distinct pleasure of removing what was left with a damp cloth. The effect was magnificent. We then went up to her room (or was it now our room?) and I proceeded to select her clothes for the night.\n\nI took my sweet time, making her stand up, turn around and making her put on a few things only to ask her to remove them. I also made her play with her hair, watching how different styles fit with some of her outfits. Soon I had a very hard erection and Scarlett teased me again, tempting me to join her on the bed. When she fell on her back, opening her legs, I closed my eyes and turned around. This had to stop! In the end I chose a Prima Donna Couture balconet bra, all in black lace, knowing that it was slightly see through. Over that she would wear a very fine, form-fitting black camisole, and above that, yet a another one. This one was very different though: it was very loose, utterly translucent with a gold tint and it went all the way down to the middle of her thighs. \n\nBelow, I chose a nice black satin thong under one of my favorite skirts; a very long and very opened black skirt which threatened to reveal everything when she moved. On either side, the skirt was cut almost all the way up, but thick laces of fin cloth were criss-crossed most of the way down, keeping it more modest. A bit. I asked her to make sure that the lacing wasn't too tight. The skirt would part with each of her steps, revealing most of her nude thighs in the process. \n\nI grinned thinking about what a gust of wind would do... Even standing still, with the laces loosened up, we could see a lot of her thigh. Scarlett's real leg tattoo would be in display, but with the henna all over both her legs, the effect of the parting skirt was just amazing. \n\nBefore leaving, I rummaged in her extensive jewelry collection and found what at first looked like a very long necklace made of silver. Scarlett told me that it was actually a piece of arm jewelry. It was tied just above her bicep, highlighting her slightly toned body, and snaked around her arms many times before being tied around itself a few inches above her wrist. It was the perfect last touch. \n\nHopping in my car, we took a quick detour to my own home so that I could get the finest clothes I had. It wasn't super fancy, nothing I had was, but it would do for tonight. Back in the car again, we drove out and took the interstate. Scarlett looked at me, more intrigued than ever. \"We have about an hour drive in front of us...\" I could see that she was trying to figure out where I was taking her. She spent the next twenty minutes trying to tease the truth about our evening, and failed. She liked surprises, but she was also very curious and loved solving puzzles. She just had no chance of solving that one.\n\nLater we pulled up to the restaurant, which wasn't announced at all. All we could see was a large industrial building. When I pulled up to the entrance, I nodded to the drab-looking doorman, he nodded back and indicated that I could enter the underground parking lot. I was a bit surprised and pleased; when I was here last time, the valet had directed us to the regular parking, outside behind the building. Apparently, a black '68 Charger opened a few doors!\n\nThe garage was really dark, with nothing out of the ordinary. Scarlett couldn't discover much by looking at the parking lot, but she did discover the one significant thing. \"Hmm, sugar daddy indeed... While your car is by far the nicest one here, it's not the most expensive. Not by a long shot! Where are we?\"\n\n\"You'll know soon enough.\" I replied tersely. \n\nAfter parking the car we walked to the door and we both noticed that if it weren't for the luxury cars, the garage would look very rundown and dirty. All part of the look, I guessed. \n\nBeyond the large metal door we found another world altogether. A deep red carpet, thick and lush, was only the first of an explosion of details that assaulted our senses after the bleak garage. The walls were covered with old and intricate wallpaper, and they were lined with actual oil lamps to light the long corridor. At the other end stood a young man and young woman. As we approached, the woman, about Scarlett's age, stepped forward with a dazzling smile. But her smile was not the only thing that was dazzling. Her incredibly tight, form fitting dress left nothing to the imagination. \n\nShe welcomed us gracefully, asking us if we had been here before and taking my identification. When she learned that it was Scarlett's first time, she grinned and bided her to enjoy herself. Scarlett's eyes, already wide, indicated that she was truly surprised when the woman added, \"And you, sir, enjoy your escort.\" ",
        "\"Oh I will, don't worry!\" I replied with a knowing smile, taking my identification back from her immaculately manicured hand. \n\n\"One last thing,\" the perfect girl said. \"Please leave your phones or any other cameras you may have with us.\"\n\nWe complied, but I could see that the request really surprised Scarlett. Then, from a box on the table I took a couple of minimalist but elegant masks. When I offered one to Scarlett she was surprised again, but took it nonetheless. We both put them on before crossing the entrance. I knew she wanted to ask me a million question, but somehow managed to refrain. \n\nOnce inside the restaurant proper, we were assaulted by a barrage of experiences. First of all it smelled delicious. The cooks here were very famous, even if some would rather keep their presence here private. Then was the sight. From our first point of view we couldn't see the entire room, but what little we could really took Scarlett by surprise. As she took in the extraordinarily luxurious setting, she turned to me, grabbed my arm and whispered, \"Where the fuck are we?\"\n\n\"We're at The Bird, my dear.\" I said, knowing that it wouldn't mean anything to her. \n\nI was wrong. \"What, it's here?\" she replied quickly, pulling me with her deeper into the restaurant. Clearly she knew what The Bird was. \n\nStopping her and pulling her back to me before she could turn the last corner out of the large entry hall, I said, \"What? You know this place?\"\n\n\"Well, I know of it. It's a legend in the department. Some of our professors claim to have been here before, but they're very tight lipped about it, even when drunk at parties. Most of the students think that they're lying, and some of us even think... well, thought, that this place didn't even exist... How the fuck did you manage to get us here?\"\n\nI was floored by her explanation, and mumbled the answer to her question. \"Well, old girlfriend was a...\" then I stopped myself. I was not about to tell her that she was a professor in the department next to Scarlett's! \"Anyway, she managed to get us a table and invited me mostly to observe.\"\n\nShe barely listened to my answer. Instead, she was pulling me into the restaurant proper, and tried to take it all in. It was absolutely magnificent, from the floor to the ceilings, from wall to wall, from the tables to the cutlery, from the music to the aromas... Everything was just about perfect. After all it ought to be: I knew the evening was going to cost at least 500$, and that's only if we didn't overindulge on the wine. \n\nBut despite the amazing decor and ambiance, what truly separated The Bird from other restaurants was the people. Roughly half of the waiters were women and the other half men, but to say that this restaurant was aware of gender equality and such issues was missing the point. The waiters, of either sex, were barely dressed at all. And while they were flawless as waiters, they had clearly been chosen for other criteria as well. The last time I was here, my date told me that these waiters made something close to a thousand dollars a night, mostly in tips. It didn't make all the ethical dilemmas disappear, but it did explain why The Bird never lacked staff. \n\nAnd this place truly was a hotspot for ethical dilemmas. I remembered that while overt sexual contacts were not allowed with the staff, subtle touches and caresses were more than tolerated. The most experienced waiters became masters at the art of eliciting such touches and then larger tips in the process. How many of the \"couples\" here were actually couples was a very good question. I was curious to ask Scarlett about it, but right now she was still trying to see and learn about everything. We were led to our table, pretty much in the center of the restaurant. \n\nAs I wasn't an important client, we had not been assigned one of the more intimate tables near the walls. Looking around, I could see that many such tables had walls to isolate them, and even translucent curtains that could close. I was pretty sure they also had access to, well, more open-minded waiters and waitresses. \n\nSitting down in front of Scarlett, who I thought was easily the most beautiful women here, I wondered what my presence here said about me. In three days I would teach a class about ethics and how we could build a more enlightened society! When I laughed, Scarlett looked at me. She was grinning from ear to ear, thrilled to be here. \"That is amazing!\" she said, a bit breathless. I only smiled. When our waitress came by to explain the menu and shows for the evening, I was at a loss for a moment. \n\nThe girl was extraordinary. Very delicate, about 5'3\", with mouth watering breasts and a neckline cut so low that both sides didn't even connect. Instead, it showed her skin from her neck all the way down to her waist. I was also pretty sure that it that girl didn't shave her pussy, that we would see the top of her bush... I got all that from a very brief glance. I was at a loss because, despite what most people here must be thinking, Scarlett wasn't an escort or a prostitute, she really was my girlfriend. I simply couldn't stare at the waitress like most patrons would. \n\nIn fact, the poor girl seemed genuinely surprised that I didn't, actually, stare at her. It looked like she was used to a slight pause before being able to start her speech, and she stumbled on a few words in her haste to fill the uneasy silence. From beneath her mask, Scarlett winked at me and smiled. \n\nOnce the waitress was gone, I said, \"Glad you like my choice of restaurant, my dear. But know this; we're here as punishment for the haunted house!\"\n\nScarlett was briefly surprised, but she took it in stride, asking, \"Oh, so that's what you had in mind for your revenge... But I'm not sure I understand. I really like being here... All my friends are going to be jealous!\"\n\n\"I know.\" I replied. \"But I'm planning on making a few of the people here jealous as well.\"\n\n\"Oh...\" was her only reply. She then looked around the room again and noticed that some of the patrons were already in some stage of undress, and the evening was yet young. \"I see.\" was all she added, with a small smile on her lips. \n\n\"Glad that you do. By the end of the evening, I intend on making all the women he jealous, and all the men envious!\" I said, smiling. \n\nScarlett's hesitant expression surprised me, but not so much as her words did. \"You really think so? Some of the women here are absolutely stunning, and could make jaws drop anywhere they please...\"\n\n\"I know, even if I don't have the leisure to gawk at them myself!\" I said, raising my glass to her. \"But trust me, they will be jealous...\"\n\nScarlett smiled, but for the first time since I met her, she didn't seem as confident about her body and beauty as usual. I have been lucky enough to be with a few very beautiful women in my life, and it became clear that they didn't know just how beautiful they were, nor how powerful that beauty was. I had thought that Scarlett was fully aware of it, but this little hesitation made me doubt. In any case, I was going to prove that I was right. \n\nContrary to other restaurants, there was only one specific hour for reservations. And you couldn't be in a hurry, as all the tables would be served pretty much at the same time. They did that to punctuate the evening with a few shows. The first three were really nothing more than elaborate and fancy stripteases. They called them delightful pauses, but even though they were exquisitely designed and executed by stunning women and men, it was still a strip show. The last one was something more special. The only time I was here, the two models actually had sex on stage. It looked more like something from the X-Art studio than some vulgar peep-show, but it was still quite raw. I had to admit that I was looking forward to tonight's exhibition like a adolescent boy. \n\nAfter our entree, I asked Scarlett to remove her black tank top. Ready for it, she smiled and shook her head slightly. Playfully acting like an offended virgin, she said, \"Pervert...\" before sighing and looking around. \"You want me to do it here?\" \n\n\"But of course... Women all know how to remove bras under their clothing... How hard can a tank top be?\" I replied, grinning. \n\nDespite the fact that I had spent the entire day looking at her naked, I did feel a thrill seeing her undressing in front of these people. When she was done, the top thrown under the table, I was grinning like a fool. The henna had been obvious before, but now, visible under the fine gold cloth of the remaining camisole, it was screamingly obvious. The black lace of her bra against the black and white background of her tattooed skin was remarkable. And, of course, people began to really take notice of her. \n\n\"So Scarlett, I think I'm going to start getting my revenge for that haunted house incident...\" I paused a bit, and Scarlett looked at me directly, an unreadable expression on her face. \"I'd really like a glass of whatever alcohol they serve at the bar. Would you mind getting me some?\"\n\nShe smiled and shook her head again, but got up and walked to the bar. I grinned, watching her beautiful body from the back and front as she came back. As I expected, I wasn't the only one watching her progress; most men's heads turned to follow her. \n\nScarlett was grinning as she came back, giving me a glass of whisky. We spent the next few minutes drinking it silently, taking in even more of the wonders of this place. I could see, in her face, the war going on between her intellect and her sexuality. She wanted to see, learn and understand as much as possible about this place, but then again the increasingly obvious sexual atmosphere was also affecting her. \n\n\"Take your bra off...\" A simple, whispered command as our whisky was running low. Scarlett looked at me again, and I could see that the sexual side was beginning to win. This time she stood up and took her bra off from underneath the flimsy camisole. When she was done, she made a little show of trying to find a place to put it, twisting around to and fro. Most of the men took immediate notice of this wild creature, her amazing breasts and the insane henna patterns all over her body. They could now see the rings of rubies around her nipples, attracting even more stares. \n\nScarlett grinned as she sat down, looking around at the men. Then, after a while, she looked at me and said, \"Why are they all openly gawking at me? Is that a Bird thing?\" \n\n\"Yep...\" I said, confirming her theory. \"There's an extremely simple rule here. People can stare at what others decide to show. Even before you were taking sociology classes, you must have been aware that women can show just as much leg, ass, belly or cleavage they care to in our world, but men can't openly look at what's exposed.\" She nodded. \"Here this crazy unwritten rule has been overturned.\"\n\n\"Oh, I see. And what if the woman didn't herself choose to show what she's showing?\"\n\n\"Hmm, good point. You're saying that you've been coerced into this near topless state?\" I said, drinking the last sip of my whisky. When she nodded, thinking she had scored a point, I quickly came back. In a lower voice, leaning forward, I said, \"You think that's me dominating you?\"\n\nI clearly saw her reaction, her eyes opening wide and her lower jaw dropping slightly. After taking a deep breath, she got up and walked to the bar again, bringing me back another whisky just in time for the entree and the first show. Watching her walking towards me, knowing that she was sexually excited, got me excited as well. The dance of her large tattooed breasts under that barely-there camisole, in full view of everybody here, was wonderful. \n\nAs the lights dimmed everywhere, music began. In the middle of the very large room, the lights increased on the stage and a magnificent woman got out on stage and began dancing and stripping. It was a very nice show, but I was already hard, my mind already locked into the woman in front of me. We all applauded when the woman was done, but when Scarlett placed her naked foot between my legs and against my hard cock, I forgot all about the stripper. Scarlett asked, \"Oooh... Is that for her?\"\n\nInstead of replying, I looked at her straight in her eyes and took a deep breath, grabbing the edge of the table strongly. She could now see what I was feeling, and as I squeezed her leg between mine, she had her answer. \n\nAfter the soup and another striptease, I looked at Scarlett and asked her to remove her skirt and other shoe. And, to my great surprise, she hesitated. \"Scarlett, you're absolutely gorgeous and most of the men here would rather watch you strip than watch the women on stage...\"\n\n\"Pfff... You're a flatterer, Professor... You're only saying that because I'm your girlfriend, because we fuck and because I wake you up with my breasts every other morning...\"\n\nWe laughed together, but it was clear that she really was nervous. \"Scarlett... While I do enjoy all these things, I assure you that my belief is noble and pure!\" She laughed again, used to hearing me say this when poking fun at rationalist arguments. \"But I'm serious. Wanna bet?\"\n\n\"Bet? You're going to do a survey?\" Scarlett asked, curious despite the quip. \n\n\"Nope. What about this. Remove your skirt and shoe, and go get us a some wine. When you come back, look around the room, and I'll bet you that every man here will be looking at you.\"\n\n\"All of them?\" she asked, sure that she would win. \"And what will you do if you lose?\"\n\n\"Anything you want.\" I said, confidently. \n\n\"Hmmm...\" she thought about it. \"And in the unlikely even that you do win?\"\n\n\"We'll go to La vie en rose, buy you a new bra and fuck in the booth.\" La vie en rose was her favorite lingerie shop, with mostly high end items. \n\n\"You know we can't do that!\" Scarlett laughed. She was right as the booths there were in the middle of the shop, and had curtains instead of doors.\n\nInstead of replying, I leaned back against my chair and looked at her. With my head I indicated the bar and smiled. Shaking her head, she got up, saying, \"Anything I want?\" I nodded. Scarlett smiled and walked to the bar nearly naked. All she had on was the translucent camisole and her black satin thong. My heart skipped a beat as I watched her walking in the crowded restaurant. From the back, she was very nearly naked. \n\nI was planning on clearing my throat loudly, or dropping a knife on the table to get the attention of the people here, but soon I realized that it was not necessary. Even before she got to the bar, people were noticing and telling each other. When Scarlett turned around and began walking back, she paused for a moment and looked around. She quickly realized that I had been right. She sighed, looked at me and smiled. \n\nIt took her maybe ten seconds to walk back to our table, but those ten seconds were amazing. Deciding that I had been right and seeing all the men looking at her, she did a little shrug and embraced the odd circumstances. Standing very straight, pushing her chest forward with her head held high, she walked very proudly. She did her little trick of moving her breasts side to side using very slight body movements, and the effect was stunning. \n\nMy only explanation for that impressive move where her breasts moved and jiggled a lot despite very small body movements was their sheer weight. They must weigh several pounds each, still firm and high because of her youth. It didn't take them much to come alive, and Scarlett obviously knew exactly what she needed to do. I was transfixed, and so were everybody else. \n\nShe was flushed as she sat down, looking at me with a large grin. She had lost, clearly, but she had also won something in the process. She stared at me for a long while, as I sat mesmerized by her tattooed body, almost naked breasts, the henna on her neck and face and the small black mask. \"So,\" she asked lightly, tasting the excellent wine, \"when are we going to La vie en rose?\" I grinned then laughed with her. \n\nThe main course finally arrived; I'm not one for long, drawn out dinners. I was famished. I was tempted to ask Scarlett to remove her thong, as some of the others guests already had, but I refrained. During the meal, Scarlett explored many ideas and hypothesis about this place and the presence of stripteases, but what fascinated her more were the nearly naked waiters and guests. Some of whom, actually, really were naked by now. \n\nHer hardest question, was \"Shouldn't I be profoundly shocked and enraged about this obviously sexist place?\" Then again, she had already seen many male waiters and guests in various states of undress, and they seemed to be the recipients of just as many abnormal touches, gentle slaps and pinches as the female waitresses and guests. \n\nScarlett added, \"Still... Even if it isn't necessarily sexist, surely it was morally abhorrent! It's one thing to err on the side of exhibitionism if one wants to... But to be paid for it, and touched? Isn't that something else?\" I had no ready-made answer for her. From our point of view, none of the waiters seemed to be here against their will, and most of them positively seemed to enjoy it. On the other hand, if we sat them down, individually, with psychologists and asked them hard questions, it's a given that some of them will think their job was immoral. \n\nIn the midst of this intense discussion where neither of us tried to defend a specific position, we were interrupted by our waitress and an unexpected offer. Scarlett and I shared a quick look before nodding at the same time, more curious than ever. It seemed that we have been selected for a special, more private show. Last time I'd been here, I hadn't even known about more private shows. My guess is that Scarlett's little parade had attracted the attention of the managers. We had no idea what the private show was, but the waitress specifically asked us if we were both open minded about sexuality in semi-public settings. We were. Fifteen minutes later, our waitress would come and fetch us. \n\nAfter she left, Scarlett asked me about my darkest fantasies... \"John my love, we have fifteen minutes to talk about something very important... What is you deepest, darkest sexual fantasy?\"\n\n\"Seriously?\"\n\n\"Sure, why not? And what better place than here to ask about this?\"\n\n\"Ok... I assume you're going to tell me yours afterwards?\"\n\n\"Of course!\" she was smiling like a minx. A naughty minx. \n\n\"Darkest in the sense of violent, or most secret?\" I asked. \n\n\"Either.\"\n\n\"Let me think...\" In fact, I didn't need to think about it all that long. Just wasn't sure if I really wanted to share that. \"Here goes.\" I said after a deep breath. \"I'm not sure it's one l I actually want to live, but... Remember when we watched that porn flick from Blacked? Where that tiny blonde girl was possessed by that huge black guy?\"\n\n\"Of course! It was excellent!\" which did nothing to dampen her devilish smile. \n\n\"Well, obviously I'd like to dream about being able to do the same and be that big.\"\n\n\"You're not small John!\" Scarlett to my rescue. This time I was the one smiling when her mischievous smile turned into an expression of concern. \n\n\"I know, but I'm far from being that big. In any case, that's not my fantasy. The deepest fantasy, which I've never told anyone, is that sometimes, and I mean sometimes... Also, I want to repeat that I'm not sure that I'd want to do it in real life.\"\n\n\"I know, I know! Stop teasing me!\" she said, laughing. \n\n\"Well, sometimes I think about being manhandled myself by such a huge man and cock.\"\n\nScarlett's eyes opened wider: she had been expecting something else. \"Oh my dear... That, I would never have guessed.\" Scarlett was looking at me, and it was clear that her assessment of me had subtly changed. She added, once more in control and with her little smile \"Well, I do have strap-on dildos, you know...\"",
        "\"But until you strap them on a big man, I'm not sure that...\"\n\nWith that we were both laughing. But I was aware that time was going by and I wanted to hear her own deepest fantasy. \"So, how about you?\"\n\n\"My deepest fantasy? Which one?\" she winked at me. \"You have to choose: either I tell you my deepest in the sense of most secret, or my darkest in the sense of most sinister...\"\n\n\"Just one?\" I asked, very curious about both. \n\n\"Yep, just one... You'll have to earn the other secret.\" she added mysteriously. \n\n\"Ok, tell me your darkest one.\"\n\n\"Hmmm, I was sure you'd pick the other one. Two unexpected things from you in two minutes! Nice! Old men can still surprise!\" \n\n\"So funny...\" I drawled. \"Now talk!\"\n\n\"Do you remember the haunted house?\"\n\n\"How could I forget! I lost a few years of life there, but realized one of my fantasies a few minutes afterwards.\"\n\n\"You know I enjoy being taken?\" \n\n\"Obviously.\"\n\n\"Well, sometimes I fantasize about being raped... Not just by my lover, however pissed he was at me for scaring him half to death. And not only by one guy. I'm thinking two or three. Sometimes I think that in this absolutely worst situation in the world, completely powerless to prevent them from ravaging me in my every holes, I'd have a series of mind-blowing orgasm... Am I crazy?\" she asked me, with what looked like genuine concern in her eyes.\n\nUncertain about where Scarlett would lead the conversation, I said \"Only if you wander around dark alleys trying to get yourself truly raped!\"\n\n\"No, of course not... I understand that from your point of view, being taken by a huge black guy with a huge cock is something scary. But for me, being taken by a big strong man is just another fantasy. My guess is that nobody thinks that my own darkest fantasy is just another fantasy.\"\n\n\"It is intense, yes... But I am not all that surprised Scarlett. As a fantasy it does fit with you. Not that you like being assaulted, but that in sex the domination-submission schema is very important for you. What if Karianne put one of your strap-ons on and we both jump you in a dark corner of the campus?\"\n\nScarlett's eyes changed and brightened. \"Oooh, I'd really like that! But it's not the same. As much as you both would try to play the role, I know you, I know your bodies, I know what you like and don't like... I know it you be a fun episode, but rape is something else...\"\n\n\"And you'd like to live this?\"\n\n\"No. Not a real rape, of course not...\" she paused, and I was as sure as I could be that she was not dissembling and trying to hide a self-destructive streak. \"But I don't know how I could ever come as close as possible to that fantasy without, like you said, wandering the dark alleys dressed sluttily.\" \n\nI was about to say something else when our waitress came and told us that the show was about to begin. So, between the main meal and our deserts, we followed our waitress to a secluded room, the door for which I hadn't even noticed before. Inside, we were welcomed by a pair of new waiters, a woman and a man, and both were fully naked. And stunning. \n\nMy eyes focused on the woman first, a very tall black girl with a body that could only be described as flawless. Everything was perfectly proportioned, from her large breasts to her waist to hips ratio, to her fat to curves ratio... She was a delight in and of herself, and she was only the waitress! And the guy looked just about as perfect, with a tight, corded with muscles body and a very long cock. Either this guy was a shower or else he would be monstrously large when erect. \n\nNeither Scarlett or I had expected this welcome, and we looked at each other, grinning, as they let us pass by. The room was a lot smaller than I anticipated, with six small tables suitable for couples. By the time the lights dimmed almost completely and the show began, there was a dozen people here. \n\nWhen the small curtains parted and the woman walked in to the sound of a very old jazz tune, I knew something special was going to happen. I had no idea what it would be, but this clearly wasn't just another strip show. She was wearing a very long skirt, as opaque as the veil that covered her breasts was transparent. The woman was beautiful enough, but nowhere near the remarkable black woman at the door, or even the women who had done the stripteases earlier. Her breasts weren't exactly small, but they neither were they large or even particularly beautiful. Scarlett noticed all of that as well and looked at me, clearly perplexed. In fact, most of the female guests at the Bird were more beautiful than this special dancer. \n\nClearly we were missing something. Soon the veil covering her breasts was gone, as was the pins and leather cord that was holding her hair pinned up. Her dancing now followed the crescendo in the music, as the old jazz piece very nicely transformed into more of a world beat tune. The dancer was making her skirt and hair swish and whip left and right with increasing energy. As the rhythm increased even more, the base drum was beginning to take center stage, as the rest of the instruments faded out. In sync, the lights were turned lower and lower until we could barely see her silhouette. \n\nWhen it was just about complete darkness, a very bright spotlight turned on from behind her. The effect was remarkable. The skirt, which had been opaque with normal lighting, was now wonderfully transparent. The lighting contrast was such that the dancer was now nothing more than a silhouette with a shadow of a skirt. The tune is still dominated by base drum sounds, but it's getting more complex now. But after a minute or so, Scarlett and I both forget about the music as we understand the dancer's secret. \n\nWith her feet spread wide apart, she was making her head, hair and arms twist in a very unusual pattern, mimicking a flame. When she began squatting, something impossible appeared between her legs. Our dancer was a hermaphrodite. Knowing the Bird's reputation, she was most likely a real one. I felt Scarlett squeezing my hand hard as she noticed it as well. The dancer and the music suddenly stopped, and we were all left in silence, staring at the silhouette of a remarkable hermaphrodite, her rather large penis and balls obvious in the contrasted light. \n\nVery faintly, we were now hearing another tune beginning, this time with a distinctive celtic flavour. The dancer stood up from her revealing crouch and removed her skirt, throwing it off the stage. I was expecting the lights to be turned back on, revealing her fully, but that didn't happen. Instead, another woman joined her in the backlit stage. And even though we could see barely nothing beyond her silhouette, this woman was very clearly not a hermaphrodite. \n\nInstead, she was both lithe and curvy at the same time. She was tall, very tall for a woman, with a tight belly and thighs, but with powerfully blooming breasts and a prominent round ass. Soon, as she moved and turned, it became clear that despite being naked, she was also disguised as a celtic warrior: many fine and long tresses, some feathers and other jewelry hanging from her locks, and some body painting all over her curves. \n\nWithout us realizing it, the first dancer had remained very still on the opposite end of the stage as we were trying to see as much of the celtic warrior as much as we could. Now she was walking back towards her, and was now wearing some sort of whole body jewelry, gold and silver chains and gems all over her body. I was expecting the lights to turn back on soon, but I was wrong. But despite the darkness, one thing was now obvious; the hermaphrodite had an erection. I heard Scarlett whisper, \"Oh Gods...\" before slipping one of her hands between her legs, under her panties. \n\nI watched, completely mesmerized, as the two dancers began to merge in a new dance, a complicated pattern of twists and turns. The warrior was clearly in charge, leading the dance, but the hermaphrodite was clearly seizing every opportunity to touch her partner with her cock. At one point the hermaphrodite was hugging the celtic warrior from behind, her cock probably nestled between the other woman's ass cheeks, and she pushed her forward. Bent at the waist, the legs of the warrior were put in stark relief, as were her breasts, hanging below her. We couldn't see the hermaphrodite's cock, but my own was now rock hard. I wish I could pull it out and masturbate like Scarlett was doing. \n\nSoon the celtic woman pulled away, only to turn around and very nearly jump on the hermaphrodite. Grabbing her fiercely in her arms, face to face this time, she then raised one of her legs high. Very high. Soon her calf was on the hermaphrodite's shoulder. That meant that her pussy was wide open, and that the hermaphrodite's cock could... And that's just what happened. With her free hand, the hermaphrodite guided her cock against the celtic woman's pussy, repositioned her legs slightly and pushed upwards. \n\nThe light flashed for a fraction of a second, and we all saw the penetration, as well as the explosion of body-painted colours on the warrior's body. In darkness again, total darkness with our unadjusted eyes, we could hear them fucking. Even above the music. My guess was that one of them carried a little microphone somewhere. Judging from the sounds, the celtic warrior was completely drenched. Gradually we were able to see them again. Soon the extremely long leg of the warrior slipped back down and she pulled away. Dropping on all fours, her remarkable ass pushed way up in the air, the celtic woman was offering an invitation the other one couldn't resist. Heck, I barely managed not to get up and fuck her myself. \n\nThe sight, even in stark backlighting, was unforgettable. The warrior had her arms well out of the way of her large breasts, allowing us to see them move under her, and she was perpendicular to the light, giving us the best view of the rest of her body. But the sight of the hermaphrodite fucking that amazing body was the key to this spectacle. She was kneeling, legs spread, hands on the body-painted hips, and she was fucking for all she was worth. Not only was the warrior's body being slammed with each penetration, but the hermaphrodite's breasts and long mane of red hair were being rocked at the same rhythm. The music itself, with perfect tempo, was getting more and more intense. \n\nI was expecting this new crescendo to lead to the climax of these two wonderful women, but I was wrong. Their moans and cries were, it turned out, a lure. Suddenly, out of the corner of my eyes, I saw a new shape appearing on stage. And this time it was, without a doubt, a man. A male, actually. A huge male, very tall and large, with muscles covering his body from his calves to his powerful shoulders. He was also disguised as a celtic warrior, with body-painting and things sticking out of his hair. But to be honest, his very large and very hard erection grabbed my attention. It also grabbed Scarlett's, as she almost repeated herself, \"Oh dear Lords in heaven...\"\n\nThe man walked silently behind the two women, and stood there, watching them for a few seconds. When the crescendo suddenly stopped, reaching its apex, the man rushed the two women, pushing them to the floor. The first woman warrior was now laying fully against the floor, her legs straight, as the hermaphrodite was laying right above her, her legs extended as well. But they were still fucking. For a second or two, as the music changed to something still celtic but much more martial, we could see the outlines of the two women, fucking on the floor. \n\nYet now, the man standing right above them with his very long and erect cock, was an ominous promise. A promise, it turned out, soon to be realized. This time, as soon as he began lowering himself down, the lights flashed in rhythm whit the music. With a mind-bending stroboscope we all saw him kneel on the floor above the hermaphrodite, lean forward with one hand on her ass, push his cock down and aim it at her pussy. She slowed her fucking of the celtic warrior under her, but never stopped. \n\nWhen the man moved forward, impaling the dancer, we heard her cry out. A sharp intake of breath, a moan, a cry and a scream as he just didn't stop. Once he was all the way inside her, he began fucking, fucking them both. It was remarkable just how different the atmosphere was. Right now, it was not three people fucking, or even not a man fucking a hermaphrodite and that hermaphrodite fucking a woman. It was a male fucking them both. It looked like he was fucking the hermaphrodite and using her to fuck the woman beneath. Raw power. The hermaphrodite's screams eventually turned back into moans, and the flashes of light stopped. \n\nAfter a while, the celtic woman managed to slip out from under the two others. But the man surprised her with his speed, grabbing her wrist. He then pulled off from the hermaphrodite and stood up. The celtic woman had looked tall earlier, but now she seemed frail next to this monster of a man. Pulling her against him, her turned her around and held her from behind, much like the hermaphrodite had earlier. He pushed her forward, bent at the waist, also like earlier. \n\nThis time the celtic woman didn't manage to escape. The man guided his cock between her legs and pushed up. Her scream was very loud, and the penetration took a lot more time than the first one. It seemed likely that he was fucking her ass. A few flashes of light made that speculation more compelling. \n\nSuddenly the hermaphrodite appeared, walking towards the couple. Bending down, she reached the celtic woman's face and grabbed her chin. Pulling it up until the woman was almost straight, she began kissing her, stifling the screams and moans. After fondling her amazing breasts for a while, the hermaphrodite reached down and grabbed both the woman's thighs. With the help of the man, she pulled them up until they were both wrapped around her waist. \n\nThe woman was now trapped between the two others, held up by the hermaphrodite's hands on her thighs and the man's long cock inside her ass. The hermaphrodite didn't wait any time and pushed her own cock up inside the woman's pussy. Perfectly time with the woman's new moan, as she broke the kiss and threw her head backwards, the music stopped and the lights turned on. And remained on. \n\nIt's remarkable how quickly the full lights brought us back from this magical moment into the very real and very explicit world. Seeing this celtic goddess with barely believable breasts being fuck by this barbarian of a man and this stunning hermaphrodite, a few feet in front of us, in a silence broken only by the sounds of their fucking... that was completely overwhelming. Next to me, Scarlett was still masturbating, despite the lights, but was clearly trying to keep a low profile. \n\nOn stage, they kept fucking for a few minutes until the man was clearly beginning to climax. He held on to the woman and the peculiar position, but his rhythm was breaking until, finally, he was the one who was screaming. The was pistoning his long cock in and out of the woman's ass slowly, his entire body shaking with pleasure. Eventually, despite all his muscles, he was shaking too badly and the trio broke apart. When he pulled out, his flagging cock dangled between his powerful legs, spent and dripping sperm. \n\nThe celtic woman was not on her knees, right in front of the hermaphrodite. Still covered in gold and silver chains, the hermaphrodite was pumping her own cock. Her entire body was tensing up and her climax was imminent. Had I been watching this on a screen, zooming in on the actual cock ejaculating on a woman's breasts, it would have looked quite ordinary. But it wasn't on a screen, and it wasn't a man's cock. She squirted a couple of jets of white cum on the stunning pair of celtic breasts, and then the warrior leaned in to suck the hermaphrodite cock in her mouth. \n\nAs the lights start to dim again, most of the audience started applauding. Looking at Scarlett in the dimming light, I saw that she was climaxing, right there on her chair, surrounded by many strangers. Her own very large and gravity-defying breasts were heaving under her pleasure, barely veiled by her golden camisole. As her orgasm faded out, she opened her eyes and looks at me, grinning widely. Still somewhat stunned by the whole thing, Scarlett and I both looked at each other and joined in.\n\nStill grinning, with her eyes just slightly more opened than usual, Scarlett shook her head, barely believing what had just happened. The three performers on stage got up, smile at us and take a bow together. Most women in the room got up for a standing ovation, but while all the men are enthusiastically clapping and whistling, they choose to remain seated. I understand why. \n\nAt that moment, I felt Scarlett's hand right on my hard cock. Leaning in she whispered, through the loud noise of the applause, \"I want you inside my pussy... Very soon. Take me to the back seat of your car right now!\" There was nothing in the world I wanted more than to take her right there on the table. But there were limits, despite everything. \n\nWe walked back to our table and hailed our delicious waitress. With a lot of experience with post-private show urgency, she handled our bill very quickly and got a very generous tip. As we left, she winked at me, knowing what was about to happen. We grabbed Scarlett's discarded clothing and our cellphones on the way out and half walk, half ran to the car. Looking around in the garage, we quickly realized that quite a few people were leaving, probably for the same reason. I fumbled with the keys for a bit, looking around to see if we could, indeed, fuck right here in the garage. But, once again, Scarlett was way ahead of me. \n\nWhen I managed to unlock and open the door, I saw her tong fly by, landing on my seat. Beside me, Scarlett was leaning against the rear fender, half bent over the trunk. \"Take me right now. Put that cock inside me.\" Looking around quickly, she added, \"I don't care who sees us. Just fuck me.\" She was wearing nothing but her sheer golden camisole, her henna paint and a look on her face that was as easy to understand as her last request. \n\nMoving behind her, I unzipped my pants and finally freed my cock. It was so hard I could barely flex it! Bending downwards until I felt her warm and moist pussy lips, I grabbed her hips and pushed up. We both moaned out loud, and we both didn't care. Judging by her body's heat, by her moans, by her motions upon the car and the strength with which she pushed back against my every strokes, I already knew that she was very close to a second orgasm. I tried my best to find her rhythm and keep it, using long and regular deep strokes. \n\nSoon she fully collapsed on the trunk and asked me to fuck her harder. I happily obliged, grinning then laughing as she started to cry out and shout her pleasure. Looking around again, I could see two couples who had stopped walking and were enjoying the extra show. One of them had been with us in the private room. They were, at most, twenty yards away from us. \n\nAs Scarlett rose up, her glorious breasts rising with her, she looked straight at them. Then, showing me that I hadn't yet found her limits, she lifted her arms and pointed at the couple. They grinned, a little embarrassed. When Scarlett turned her hand upwards and crooked her finger in a come over here invitation, their eyes opened wide in surprise. Like mine. The couple looked at each other, shrugged and walked over, a strange expression on their faces. \n\nThe woman was bolder and walked until she was right next to Scarlett and me. The man, a bit more reserved, stood behind her. They were in their fifties, but both looked good, especially the woman with her skin flushed with the thrill of the situation. Recently I had had my very first threesome, which in most ways is more extraordinary than this was. But seeing them both watching us fucking, so very close to us... that was amazing. \"Can I... can I touch them?\" asked the woman, her eyes so focused on Scarlett's breasts that she didn't have to specify. ",
        "Scarlett merely nodded and moaned as she felt this woman, a complete stranger, touching her breast through the merest of fabrics. As hot as Scarlett was, she told me later that she had felt the heat from the woman's hand. As I watched, mesmerized, the woman grabbed my girlfriend's breast more forcefully, squeezing its weight in her fingers, before hefting it upwards. \n\nBehind his wife, the man leaned in as well and asked the same question. Scarlett turned her head to look at him, biting her lower lip between her teeth before saying \"What are you waiting for?\" Reaching around his wife, the man grabbed Scarlett's other breast. When he did, Scarlett threw her head back, pushing her breasts against the hands of those two strangers. \n\nWhen one of Scarlett's moans stopped short in her throat and her body stiffened, my eyes opened in surprise; she was on the verge of another climax. And this time, so was I. Closing my eyes for a few seconds, gathering what little concentration I still had, I tried to wait for her. Her moans were now louder, much stronger, and the couple must has realized that she was going to cum. When I opened my eyes, I saw the woman leaning forward, kissing Scarlett on the cheek and whispering, \"You are gorgeous, child. Thank you so much for this. Thank you for this blessing.\" Before kissing her again. \n\nWhen Scarlett's hand reach behind and grabbed my hip, I got her message loud and clear. As I began pounding her, feeling my own climax rising fast, Scarlett reached up, grabbed the woman by the back of the neck and pulled her for a kiss. A real kiss; a tongue lashing and lip biting kind of kiss. And she also moaned her climax right into her mouth. \n\nI felt my whole body going weak for a second before a great shiver shook me. The power of my climax surprised me, as I shook and shook, spending a ridiculous amount of sperm inside her. Scarlett finally broke the kiss, unable to hold it as she was ravaged by her third climax. As she rested on the trunk, Scarlett laughed, squeezing the woman's hand one last time. They both thanked us again before leaving. Slowly, gently, I pulled out of her pussy, hearing a large glob of cum falling to the ground. Scarlett laughed softly on the car. \n\nMy clothes were a ruined mess of sweat, rumpled all over. I removed my coat and only kept my pants and shirt. When Scarlett got up as well, she looked at me, with nothing on but her golden camisole. We both smiled at each other, in silence. My mind was utterly fried, unable to make sense of the show and this exhibitionist sex. Reaching inside the car, I threw her tong to her. As she struggled to keep her balance while putting it on, I asked, \"Are you game to remain dressed like this until we get home?\"\n\n\"Oh my love... After three climaxes in a row, you could ask me to strap myself on the hood of your Charger naked and I would.\" she said, grinning. \n\nI realized that she was drunk more on the pleasure than on the alcohol. \"Nah, I think that if I did strap you there, someone's going to grab you and run away before we get home. And I do want to sleep next to you tonight...\"\n\nShe grinned, then looked at me for a second with a strange expression on her face. \"You think we're going to sleep? I'm planning on getting at least six orgasms tonight.\"\n\nI laughed as she said it, but couldn't quite decide if she was serious or not. \"Really?\" I asked, but got no reply. \n\nThree hours later, in our shower, as I watched my cock pump in and out of her ass, and as her fingers pushed a sixth orgasm out of her body, I got my answer. She had given herself a fourth one in the car, masturbating as I drove, and I'd given her a fifth in the shower ten minutes ago, my mouth on her pussy. Oh, how life can sometimes be so very, very sweet."
    ],
    "authorname": "MrIllusion",
    "tags": [
        "scarlett",
        "big breasts",
        "henna",
        "tattoo",
        "exhibitionism",
        "voyeurism",
        "public sex",
        "restaurant",
        "hermaphrodite",
        "teasing"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/breaking-cliches-ch-04"
}