{
    "title": "Bisexual Orgy Newbies",
    "pages": [
        "Jenna and I had decided to do it. \n\nWe were both 28. We were horny all the time. We'd been married for three years and we were desperate to try something crazy to shake up our sex life. \n\nBoth of us had entertained the idea of going to an orgy, though it usually seemed like we were daring each other to it, or like it was some big running joke. Always said with a wink of sorts. Always left with a purposeful ellipses. \n\nBut it was a joke that never died. We'd talk about it occasionally, while we were in bed after sex...or driving...or flipping through porn we liked together. \n\nAnd then finally, at some point, something slowly changed. It didn't seem like we were joking anymore, and it began to be something that turned us on when it came up. We started using it as a visual to make each other cum during sex. I'd tell her about all the people I wanted to see her fuck. She'd whisper to me that she wanted to suck on my cock with another girl, or ride someone's cock while I watched. We learned new triggers and evolved our sexual appetite. \n\nSo we began to research our options, first drunkenly one night...then somewhat more seriously. \n\nWe were living in Santa Monica at the time, and we figured that would provide us with lots of possible opportunities, and boy did it ever. \n\nThere turned out to be tons of sex groups and clubs both public and private, and even clubs for certain, younger age ranges of people that required photo applications and had age specific events. \n\nWe found a select, sexy club that hosted holiday-based orgy events at a mansion in the Hollywood Hills. These were true, costume-themed sex parties, and we were blown away by the pictures we saw on their website. The faces had been blurred but the people at the party were young and attractive and looked like they were having a hell of a good time. \n\nIt was called 'The Bicycle Society.' The branding was pretty stellar. Just a simple white bicycle on black background with the wording in typographical font. It looked well run. Safer. Not creepy. Not hosted in some dungy sex club that was only ever a sex club and washed sparingly. The parties were all hosted at member's houses or rented mega-houses.\n\nIt was a happening vibe. \n\nWe found a New Years Eve sex party they had planned that was meant for a younger crowd. It was called 'Bi Bi To The Year.' The party theme would be entirely bisexual and the costumes required a fantasy/sci-fi motif. You had to submit a photo and fill out a brief form about your sexual tastes and desires. The cost for a couple was 300 dollars. That wasn't cheap, but for this type of an exclusive set-up featuring all-attractive attendees, we decided to go for it. \n\nJenna was bi and I was straight but we were both insatiably horny people. She hadn't really played with any ladies since college but we talked about it all the time and watched porn that featured lots of lesbian fun. We figured if it was a bi sex party she'd at least get lots of girls who would be interested in playing with other girls. \n\nWe loved sex toys. We both loved having our asses played with...though I'd only recently discovered that I enjoyed when Jenna would use her dildo on my ass. Something she'd been asking for more frequently ever since my first, explosively unexpected orgasm on a long night of sexual exploration one weekend. \n\nShe was also into dressing up for me and loved when we had a whole night of dressing up and going out and basically feeling ourselves and our energy. \n\nWe stepped out of the Air BnB we'd rented just down the hill from the mansion party, and snagged our Uber up to the property. \n\nWe were dressed as Sexy Forest Nymphs, with Jenna sporting a skirt that looked like a piece of leaves sewn together that came up so high up you could see her sheer, green thong, anytime she walked. She also wore light green fishnet tights, and a leaf-and-vine bra that barely held in her perky breasts (which were noticeably pierced through the tight fabric). Her short brown hair had a streak of pink in it that made her look like she was an acting in a bad porno version of Peter Pan. She looked so stupidly hot that I didn't know what to do with myself. Her skirt rode low and I could see the tiny, bumblebee tattoos she had running along her hip, and it made me want her immediately. Her entire body was covered in glitter and green makeup and sparkle accents. she powdered me with the stuff as well and even lined my eyes with a dark green shadow before painting my lips a metallic silver. \n\nOver my chest there were only a brown-leather-leafed sling which allowed me to hide a pocket for my things. She had somehow convinced me to wear a green thong with my own green fishnet tights and leaf kilt. I told her this was going to be confusing for some guys there. And she told me that she liked that. Which made me horny and nervous all at once. For my shoes I was able to relax in some simple brown slippers, so maybe that made up for the slightly effeminate nymph outfit she'd negotiated me into with the proper cock teasing. \n\nOur driver eyed us with a bemused expression in the rear view mirror. We were hidden under two big coats, thought it wasn't all that cold, as LA tended to have those 70 degree weather nights, even in the winter. And this was exactly that. \n\n\"Are you nervous?\" I asked her quietly as she squeezed my hand in hers between her the soft fabric of her thighs. \n\n\"Yes! But I think it's just excited nervous,\" she said, and I could sense all the energy emanating off of her. \n\n\"Yeah, same,\" I agreed. I was nervous. But I was also very horny for where this night was taking us. Our horizons weren't just being broadened, they were be torn down and rebuilt from the ground up. \n\nRight before we arrived at the mansion, Jenna turned towards me and told me to open my mouth. \n\nI did, and she pushed a pill onto my tongue and told me to swallow. I did that too. \n\nWe kissed and she moaned a happy noise and then swallowed her own. I wasn't going to ask what they were. I had an idea. \n\nWe had more erotic anticipation than we'd ever had. We were so excited for the possibilities. \n\nWhen we exited the car we thanked the Uber driver and he rode off chuckling. LA was never boring. We strode up the long steps to the black, double-doors, where there was a small line of people in similarly fun and slutty costumes being checked in by a very attractive pair of bouncers dressed in tailored suits. \n\nTo attend the party you either had to be a couple, a single lady, or a group of ladies. The website said that two hundred tickets were sold and the girls would slightly outnumber the guys, which we were excited about. There would be no entry for single guys. Such was the currency of being a sexy lady in a world of desperate dudes. You either had to be one or know one. It was a solid way of weeding out the dregs. Nightclubs had been using this method forever. \n\nJenna was excited to see me fucking other hot girls in front of her and she was especially turned on to put on a little show for me. Our sex leading up to this night had been chock full of imaginative scenarios. There was zero selfishness. \n\nTwo couples ahead of us, a gorgeous Han Solo and Leia were being let into the party after being checked off the list. \n\nJenna tugged on me as we spied them. Leia's round ass was popping from the tiny Star Wars prisoner skirt and Han wasn't wearing a shirt under his vest. He looked like he shot first. She even had the chain around her neck, ready to be controlled. \n\n\"Well I'd definitely fuck both of them,\" she whispered excitedly to me. \n\n\"Fuck yes...her ass,\" I echoed appreciatively. \n\nI smiled at her and we conspired until our turn was up. \n\nThe bouncers checked our ID's and then let us inside, where there were two sexy robot girls taking coats and names in a front room. Clearly the theme allowed people a large swath of ideas for costumes. \n\nThey checked us in and took our coats (Jenna had this cleverly designed pouch that she had sewn into the side of her skirt for our cash and ID's and credit card) and now we were very exposed to this bustling party. \n\nBefore fully entering, a man dressed as a tight-panted Tolkien elf explained the rules to us. He was probably in his mid-40's and he was in good shape. \n\n\"Welcome Jenna and Will...to the best party of your life,\" we laughed nervously when he said it. He was clearly a host of sorts. \"The rules for The Bicycle Club are as follows: Consent and protection are a must. Make sure you have both if you intend to play. No sex downstairs...think of it quite literally, as the Champagne Room...that is for the dance floor, bar, and mingling. The play rooms are in the second and third floor bedrooms, and on the roof. Also, the backyard and pool area cabanas are open for fun after midnight. You'll see a number of models helping out with bartending, DJ-ing, coats, etc. They are strictly off limits but please, feel free to ogle all you like. There will also be performers and a Champagne toast at midnight if you're interested. Other than that, just be cool human beings and there won't be any problems. Sound good?\" He finished, even as I saw him eyeing Jenna's glittery midriff. \n\n\"Sounds amazing,\" she said back, pressing her tits towards him on purpose, and he shook our hands and beckoned us onward. She was already horny as she winked at me. \n\n\"My name is Mr. Gault. If either of you need anything, I'll be wandering around and offering help as the night goes along. But please, relax, have a drink, I know this is your first time and that can be nerve-racking, but everyone here just wants to have fun and there are no judgments to be made. Savy?\" \n\nWe nodded and thanked him with dumb grins as the raised the thermostat of the mansion quickly tickled our exposed skin with comforting warmth. \n\nThe house was one of those modern three story affairs in the winding, ritzy hills overlooking Hollywood. There were glass wrap-around balconies and a full rooftop deck and plenty of backyard space around the pool and spa and fire-pits. It was the kind of mansion that wasn't gaudy by any means. It was simply one of those mid-century moderns that was well-appointed and with enough rooms and nooks to escape into for meaningful conversation and more. Probably just a humble 3 million out the door, I joked to myself. \n\nThe inside setup had a full cash-and-carry bar with hot bartenders wearing barely anything in various thematic fantasia. \n\nWhen we got into the main area of the bottom floor, we were blown away at the decorations. \n\nThe first thing that happened was that a girl dressed like a winter fox approached us with two glowing shots and offered them up. We asked her what was in them and she told us vodka and adventure, which made us laugh. \n\nWe downed the shots with an easy grunt, and headed over to the bar to snag our first cocktails of the night. It was ten o'clock and it seemed about two-thirds of the guests had already arrived. \n\nIt felt like we had walked into an actual club in Vegas. Even if sex hadn't been the point of this party we would've totally partied here. \n\nThe walls and arched ceilings were splattered in a maze of LED light-covered forest foliage and glowing flowers. It looked like we had walked into the jungles of Pandora from Avatar, with a tinge of club chic thrown in, though a tad more deciduous in its provenance. \n\nThe bar was set up right next to an L-shaped patio door that was entirely collapsed to allow for foot traffic flow. \n\nA female DJ in a devilish Daft Punk redux helmet and bejeweled corset and lingerie set, spun lo-fi jams interspersed with R&B and house music. \n\nIt would switch from Jhene Aiko to Khalid to Diplo to Tycho to Masego to Jay-Z to Ariana Grande to Billie Eilish. There was Major Lazer and Halsey and H.E.R. You couldn't help but feel immediately transported by the immaculate vibes of the place. It was sex ambience, curated by people that intimately knew their subject matter. \n\nA bartender dressed like a naughty fairy approached when we'd finally reached the illuminated bar top and asked us for our poison. \n\n\"Dirty Martini for me, Scotch and Soda for him,\" Jenna ordered our long-time starter drinks. \n\nThe bartender didn't ask for a liquor. She grabbed Chopin and Johnny Walker and that was that. I drank in her exposed ass as she reached up for the top shelf items. A couple of minutes later we were dropping some bills to this winking sex-fairy, who's breasts were spilling out of her shimmering body suit, and turning to cheers each other as we took in the sights and sounds of the party. \n\nWe walked over to a nearby fireplace mantle to take up a people-gawking position, and it felt like we were in Wonka's candy factory. Everywhere we looked there were gorgeous couples in their 20's and 30's. I'd never seen Jenna so slack-jawed from visual wonders before. \n\nA sturdy Harry Potter walked by with two barely-clothed Slytherins and it felt like they were about to wingardium levioso my cock directly out of my thin kilt and thong. \n\n\"This is AMAZING,\" Jenna said to me, with a burst of excitement. \n\n\"Yes. Fucking A babe, I love you so much,\" I said, beaming. \n\n\"I love you too!\" She kissed my cheek. \"I'm gonna be such a slut tonight.\" \n\n\"So...same as always then?\" I teased. \n\n\"Yes. Basically yes,\" she agreed. We laughed and kissed each other again. \n\nWe downed the last of our first drinks while commenting on various people we wouldn't mind getting naked with. There was a girl dressed as a skimpy Scarlett Witch that literally made our heads turn like we were in an old sitcom as she sauntered by with her Vision of a man. There were lots of generic green and metallic body suits with glow in the dark body paint and glitter and lipstick matching the theme. Fairies and elves and forest amalgamations filled up the room with breasts and butts and cocks firmly on display. Jenna volunteered to go grab us our second round when we polished off our drinks. \n\nI watched as she sidled her way through the busier crowd, attracting the eyes of just about every single man or woman she passed. She was the total package and her perfectly pert ass was impossible not to stare at when it bubbled past you. You could tell she was a runner. You could tell she was a track star. You could tell she was a good shag just by the way she carried herself. Everyone wanted a bite of my nymph and that made me proud and turned me on all at once. I couldn't wait to see her let her inhibitions loose and go wild. She was my sex goddess. \n\nI chuckled as I watched a girl dressed as a slutty Daenerys Targaryen approach Jenna at the corner of the bar, as she waited for one of the hot bartenders to be free. She touched her on the small of her back and Jenna turned, surprised. She probably thought it was me at first. That was an intimate place to reach out for an introduction, but then, we were clearly here for that. \n\nI smiled as I watched the two girls connect from across the room. The slutty Daenerys had obviously said something complementary to my wife. She held up her hands and checked out her costume. Jenna was definitely checking out this girl too. She looked a similar age, maybe a year or two younger than Jenna. Her outfit was like if you had taken a Daenerys cape and robe and cut it up to turn it into a winter bikini. Then the long, flowing ice-blonde hair and a triple dragon tattoo to boot. She had lingerie blue tights and panties with a dragon design spanning them, and her fair skin and lithe curves definitely leant themselves to the character's look. I'm sure Jenna was smitten. We loved that show. And this blonde beauty was giving off the perfect type of slutty game of thrones vibes. \n\nI watched as her new friend reached in and paid for our drinks before Jenna could stop her, and then was surprised when I saw the bartender pouring four shots for the girls. I raised an eyebrow as Jenna looked over and smiled excitedly at me, while Daenerys was bent over the bar paying/flirting with the bartender-very obviously showing off her insanely perfect ass, which was shaped like a rounded heart. Jenna bit her lip as she looked down at the girls buns, bouncing back and forth on either of her blue heels, as her ass muscles flexed. I gulped. \n\nAnd then the girls were expertly carrying the drinks over to me after Jenna had pointed me out, causing many heads to turn and check out their luscious rumps along the way. As they got close I watched Kendra give my entire frame a once over. \n\n\"Hey babe, this is Kendra, Kendra this is my husband!\" Jenna said to me, as the girls walked over, setting the drinks and shots down. \n\n\"I think you mean...Daenerys Stormborn of the House Targaryen, first of her name...\" I started to joke, showing my immediate allegiance. \n\nShe held out her hand in charmed joy. \"Queen of the Andals,\" she added, raising an eyebrow to me. \n\n\"And first men,\" I was goofily grinning at her as I gladly kissed her hand, playing the character to perfection. \n\n\"Wow...I don't know if I can handle all the horny nerd energy in this room right now,\" Jenna cut in jokingly (as if she hadn't watched every single episode with me). \n\nWe all started laughing. \n\n\"Did somebody say horny nerd energy?\" A dark featured fellow said as he strode up, in his particularly tight-fitting John Snow garb. The coat was still long and furry, but he was only wearing a pair of slim bike shorts and black dress boots, as his bulge was well displayed below us. \n\n\"Oh, hey, honey, look...I found some hotties while you were in the bathroom!\" Jenna said, leaning between the two of us to bring her man over. \n\n\"Hi hotties! I'm John,\" he said, already drinking in Jenna's curves and even looking me over I noticed. \n\n\"Wait...John like John Snow? Or John in real life too?\" Jenna asked, basking in the sexy of our new friends. \n\n\"John in Real Life. Which is also the name of my new podcast that no one listens to,\" he was quick on his feet as we all clicked drinks and laughed more at that. \n\n\"Oh, what's it about?\" I parried. \n\n\"Sex Clubs and Terrible Game of Thrones endings,\" he kept it going. \n\n\"I can see why it struggled to find an audience,\" Jenna laughed, as she noticed Kendra reaching out to lightly hold her hand. The girls shared a flirtatious glance. \n\nThey were a good looking couple, that was for sure. I could see Jenna glancing at his bulge. \n\nHe actually did look a lot like John Snow, though with shorter hair. He was about an inch taller than me and similarly built. He looked like he might be half Spanish or Portuguese. He was muscled. Especially his legs and calves. I had to stop myself from staring. \n\n\"So you guys are really friggin' hot,\" I finally broke the moment of mesmerized tension with a little ice demolition. \n\n\"Yes. I think we both definitely agree with that. We've never seen you guys here before, is this your first time?\" Kendra said boisterously. She was bouncy and way too much fun. \n\n\"Yup! Can you smell the scent of sex party virgin on us?\" Jenna did a little shimmy, as she wrapped her fingers up in Kendra's playful hand and the the two girls came closer together. We all continued talking and the room grew louder and more crowded. \n\n\"Yes! But we love virgins,\" John said now. Jenna and I both smiled at each other. We were clearly into them. \n\n\"Oh shit...we almost forgot!\" Kendra moved over to the mantle where the girls had placed the shots when they first walked up. They grabbed them and passed them around. \n\nI held the mysterious liquid up, deciding it was better not to ask.\n\n\"To really good pussy, and really good dick,\" John said, and we all loved that, and clinked our glasses together before downing the liquor in one go. \n\nKendra had the easiest time with the high proof spirit. She spilled a single drop on her breasts and we watched as she thumbed it up and licked it off her finger, staring at Jenna as she did so. ",
        "Jenna watched, like a lost puppy dog, and before we knew it, Kendra had closed the distance between them and the two girls kissed, as Kendra held Jenna's neck and opened her mouth to gently tease her tongue with a little sapphic want. Jenna could feel how wet her pussy was from Kendra's soft body and feminine smells. It was intoxicatingly hot. Girls were just more exciting in these ways. \n\nJohn and I just stood there with our mouths open...like a flashback to watching porn for the first time. We both got hard from seeing our ravishing ladies making out. I honestly couldn't believe that any of this was happening. It felt like an out of body experience and I smiled and soaked in every moment as the volume of the music continued to rise and the room became more dynamic as more people arrived. \n\n\"Fuck, me!\" Jenna exclaimed wistfully as they girls broke apart from their impromptu first contact. \n\n\"Oh, babe...I plan to,\" Kendra assured her, as she danced over in front of her man and popped her booty back playfully. We all smiled at that, but the chemistry between us was bubbling over by the second now. \n\n\"God damned we are some lucky men, Will,\" John said, and the girls blushed and smiled proudly. They knew how hot they looked. And we weren't the only ones in that room that saw them kissing. They'd already become sexual targets for a number of guests, and I could see them all regarding our group...wondering who was into what. \n\n\"Yes we fucking are,\" I agreed, and we toasted to our stupidly good fortune. \n\n\"Sooo, how do you guys identify?\" Jenna asked them both, wanting to lean in so much more to our progressing connection. \n\n\"We're both totally bisexual,\" Kendra immediately beamed with pride. \n\n\"Yeah...we both have crazy high sex drives so it helps to enjoy lots of different flavors in our sexual appetite,\" John added. \"Sometimes we want cookies-and-cream ice cream...and sometimes we want rocky road, ya know?\" \n\n\"Totally,\" I said, feeling my own body moving more with the pulse of the music. \n\n\"Yeah, yeah...like sometimes I want Mint Chip...and sometimes I want to sixty-nine with a sexy girl and eat her pussy,\" Kendra made it filthier. \n\n\"Fuckkk...uhhh, waiter...check please?\" Jenna played charades as she fanned air over her face. It was a joke but she was getting very horny from how forward Kendra was flirting. I knew she was very into her. I could tell when Jenna was getting squirmy for sex. \n\n\"And you guys?\" John asked. \n\n\"I'm totally bi, obviously,\" Jenna started. \n\n\"I was so hoping you would say that,\" Kendra mewed, as if the news sent a lovely little zap up her spine. \n\n\"Yes, which I guess makes me the only straight one here,\" I had to kill the momentum a little bit. \n\n\"He THINKS he's totally straight,\" Jenna retorted quickly, and John and Kendra followed along with our playful banter. \n\n\"Excuse me?\" I pretended to be offended by her implication. \n\n\"You mean to tell me the guy in the green fishnets and fantasy forest kilt is totally just for show??\" Kendra questioned me, while also checking me out again. \n\n\"Why don't you tell our new friends about how hard you've been cumming from me playing with my dildo in your ass the last few weeks?\" Jenna betrayed me and I got beet red but it was too dark for anyone to notice anything but my embarrassed smile. \n\n\"Mmmm, I LOVE when guys discover their asses...it honestly turns them into much more provocative lovers,\" Kendra said. \n\n\"Yeah...well, it's a very new thing for me...I'm still figuring it out,\" I was clearly a little nervous about this topic, but I was also feeling waves of happiness from whatever Jenna had given me. We were becoming very well acquainted with our hot new friends. \n\n\"I love that. It's amazing when a guy starts to explore,\" John chimed in. \"I would give anything to go back to those days and have all of my firsts all over again.\" He grabbed my arm and squeezed it and that made me feel a little squirrelly. \n\n\"Do you guys wanna go and explore the house? We got to poke around upstairs earlier and there are some really sexy rooms that you've got to see to believe,\" Kendra suggested. It was about 10:30, and we left our shot glasses at the bar and followed them through the crowded first floor. \n\nBesides all the added new fantasy characters flaunting their scantily clad bodies all over the place, there were also sexual performers being watched in various parts of the house. There was a black-haired girl being tied up in a Shibari rope bondage show, in a connecting room, by a feminine dominatrix clad in silver and black lingerie; and there were two guys and a girl doing a naked oil massage in the room beyond that. It was all foreplay and visual delight. I was perpetually hard every which way I looked. \n\nFirst we went out into the backyard and you could see the giant pool and spa, where some party-goers had actually decided to get naked and hop in. \n\n\"I didn't know you could swim!\" Jenna said, sounding excited. Huge, floating orbs of light filled the pool, as the fantastical elements continued. \n\n\"Yeah...later tonight there will be people fucking in and around that pool...you watch,\" John told us. \n\n\"Oh, so people DO fuck on the first floor,\" I said. \n\n\"Oh...yeah...did Mr. Gault tell you his rules? They're more guidelines...when everyone is drunk or high, and the fucking begins, honestly...the rules are somewhat forgotten. It's a bacchanalia for sure,\" John explained. \n\n\"How many of these parties have you guys gone to?\" Jenna asked them, as we continued to draw the gaze of many of the swingers congregated on the various outdoor seating areas, and bar-tables. There were also two fireplaces alight nearby with circular, cushioned benches surrounding them.\n\n\"This is our...\" Jenna stopped to think for a moment, \"Let's see...we did the summer party, the beach party, Halloween, Christmas, New Years last year...that one they did on the cruise ship...this is our 8th time,\" she finished. \n\n\"Wow...so clearly you guys have a good time,\" I said, impressed at our new friends. \n\n\"Oh man...just you wait,\" John said, and there was something so alluring to the way he said it. \n\nWe walked back inside and Jenna led the way up the spiral staircase to the second floor. As we walked we noticed there were limited lights on, but many candles or track lighting or fantasy light decorations to give you all the light you needed. The mood had to be just right, and it was. \n\nIt felt like being in an actual club. There were even connecting speakers which pumped in the music from the DJ's set, albeit it at a slightly lower level. \n\nThere were also condoms everywhere. On every ledge, side table, bathroom counter. Everywhere. Condoms and small packets of various sorts of lube. \n\nAs we climbed the stairs, John and I were treated to another gorgeous view of the girls asses, as they linked arms and climbed in front of us. Daenerys and the Forest Nymph, high off their lady lust, their bubbled buns swaying up the stairs. \n\nWhen we got to the second floor, we saw people in the margins, lounging on chairs or against walls. There were a few couples making out. We came to the first bedroom and there was a bed with a soft, white sheet. There were two sets of hand restraints affixed to the wall above the bed. No one was in this smaller room yet. Then there were larger rooms, full of king sized beds and side love seats and couches galore. We passed a large bathroom and more people doing a little recon just like us. \n\nThe master bedroom for this floor featured two king sized beds pushed together in the center of the room with carpeted steps rising up to it from all around. \n\nTheir were mirrors on the ceiling above the bed and an amazing wrap around balcony that looked out on the city and hillsides. \n\n\"Good lord, I could have some very voyeuristic fun in here,\" Kendra said. \n\n\"Oh yeah...I wouldn't mind being the main attraction in this room,\" Jenna added.\n\n\"Babe, I think you already are!\" Kendra grabbed my wife around the hip as they shared another sweet kiss. \"Mmmm Will, your wife tastes amazing,\" Kendra crooned after they broke apart and Jenna looked like she was thirsty for this girl. \n\n\"She really does,\" I agreed, still feeling like I had won some kind of lottery. My body was starting to feel insanely good. \n\n\"But just wait...the third floor is crazy,\" John promised. \n\nWe strolled out of the master bedroom where we saw two sapling girls going down on a Groot together on a corner lounge chair. His cock was tree trunk worthy. It clearly required two mouths to suction its seeds. \n\n\"So what's on the third floor?\" Jenna asked as we rounded a corner and came back to the spiral staircase that filled the middle of the house. \n\n\"You'll see,\" Kendra said, grabbing Jenna's hand again. They plodded ahead of us like excited school girls, and John and I just shook our heads, as we imagined what we might be seeing them do to each other tonight. \n\nWe passed a few descending couples as we got up to the third floor, and it was immediately clear what they meant. \n\nWe'd been expecting more bedrooms, but apparently the third floor had been designed as one giant play room. There were no supporting walls other than the occasional beam. It was entirely open concept. And we realized as we stepped further into the space that the room was slightly bouncy. \n\n\"The floors were designed like a gymnastics floor, check it out!\" Kendra said, as we began to bounce a little. There was give and spring covered in this memory foam quality carpet. It was an insanely comfy carpet. \n\nBut that was hardly where the sordid delights ended. The room was covered in interesting couches and chairs and unusually designed places to sit or lounge or fuck. There were TV's sunk into outcroppings where wrap-around couches came all the way down to the floor. There were king sized beds placed next to other king sized beds and then surrounded by pillows. This was a sex room designed for that express purpose. It was a hot, fun, playful sex room with colors and porno-set quality play areas where multiple people could get naked and creative. The colors were painted pink and purple and black. There were two sex swings and various sex wedges and restraining straps and erotic contraptions along the walls. There was even a sex toy area where the toys were presented like gadgets in a spy's hidden closet compartment. They were literally backlit with electric purple beams. \n\nAnd then there was the ceiling. It was covered in mirrors and disco balls and vines that matches the downstairs decor. We had just entered into a room that was the love child of Christian Grey's Red Room, Studio 54, and the Rainforest Cafe. The lights were turned low and the colors looked insanely cool in the spinning kaleidoscope of the disco balls and club effects. Then on the far side of the room, there was another giant accordion patio door spanning half the room, that was completely opened to allow for this amazing cross-breeze of the night air traveling in from the pacific. There were also five or so sex contraptions that ranged from a standing cowboy saddle bench, to wooden stocks, to a bed covered in protective plastic with a small river slat around the outside that appeared to be for drainage. I wondered what that might be for. \n\n\"Damn...this is like...the most amazing thing I've ever seen,\" I said, as my eyes wandered around the room and looked at some small groups that already seemed to be making their own sexual plans. \n\n\"Oh, and you guys need to see the roof!\" Kendra pulled on my hand now and Jenna hung back with John, who placed his hand on the small of her back and pressed her onward. I liked the way she looked at him. \n\nWe walked up the final straight staircase which ended at a hallway leading to an open door. Outside, a solid, basketball court-sized of patio of padded furniture and a fireplace spread out before us. It was so gorgeously designed, with views of the twinkling downtown. It was truly nice outside for winter, there was barely a chill in the air. A couple of different people were smoking some weed up here. No one cared. Everyone knew there was going to be drugs at this party. Everyone looked the other way. \n\nIf we did end up having lots of sex tonight, this would probably be a great place to escape for some air. \n\nWhen we were done taking it all in, we turned to our new friends. \n\n\"You guys wanna go dance?\" I suggested, as the DJ music pumped from some nearby speakers, continuing to rock jams that made us want to move our bodies. \n\n\"Yes!\" Kendra squealed in excitement. \n\nWe descended back down the way we'd come and there was more kissing and touching and laughing coming from the various groups and bedrooms we passed. \n\nOnce we were on the main dance floor the girls led us out and we began to vibe with each other. John and I traded Kendra and Jenna back and forth and both girls used their curves to tease us as they ground their butts back. Kendra's leather skirted ass was so bubbly and all I wanted to do was ram my cock into her right there as her white lingerie peaked out. She looked back over my shoulder and winked at me and her ass began to rub against my hard-on. She knew I wanted her. \n\nAs we were dancing, the girls would occasionally break off to dance with each other, as their bodies came together and swayed to their delicious energy. \n\nA buff black, vision of a man moved into our dancing peripherals as his Natasha Romanoff look-alike lithely rubbed against him in a Black Widow bodysuit which we realized was actually just the thinnest lycra. Her nipples poked through the tight material and her straight, red hair and full lips did justice to Scarlett's ravishing fuck-me-now body. He looked like he could fuck standing up without sweating...though maybe I had just been too trained by those movies. \n\n\"Oh fucking wow!\" Jenna said, as the booty-popping Avenger twirled into her airspace. \n\n\"Well hey there!\" The girl said. \n\n\"I'm Angela,\" she said. \"You guys are cute!\" She said. \n\n\"Who is this specimen? Kendra cut in. \n\n\"This is Kamal,\" she said it like she was presenting a statue. \n\nHe was the tallest of us by a couple inches, and built like a SnyderCut hero. Holy shit this dude looked like a professional athlete. \n\n\"Hey everybody, nice to make your acquaintance.\" \n\nWe all introduced ourselves after a stupified moment, and I noticed how everyone was drinking him in, even John. \n\nWe continued dancing and as we did, I caught Jenna sharing one of her pills with Kendra and Angela during a particularly hyped song. The girls licked up the drugs and continued their sensual flirtations. \n\nWe all danced and traded partners. At one point John even wrapped his arms around me as we danced. I let it happen. It was innocent and fun. Jenna slapped my ass while we grooved and we all got closer and closer until there was a very natural closeness to our undercurrent. \n\nIt was 11:30 and John and Angela had just made out while dancing, even as Kendra popped back against Kamal and rubbed her crotch on my wife's leg. I was behind Angela, as they pulled me in and we groped her as we danced. There was probably about 50 people on the dance floor, which filled up the main room as people got more drinks from the bar and the last stragglers arrived to the party. There had never been such good people watching. \n\nEveryone was way too horny. They were dancing and touching and teasing. Everyone was watching the fire build. \n\n\"You guys wanna go upstairs?\" Kendra finally suggested. \n\nWe all looked at each other for collective permission and then shouted yes over the music. \n\nThe boys were put in charge of getting more drinks, and soon, six strong vodka sodas in disposable cups were heading up the stairs. \n\nWhen we got to the second flood, we found most of the beds already starting to be used by some couples, and throuples, and groups. And then we were at the giant master bedroom and there were only two girls and a guy engaging in a little oral train on a nearby love bench. It was a hot image to encounter. \n\n\"Well? I think we need to claim this space.\" Kendra said, falling into the bed and stretching her tattooed legs out onto the carpeted steps that ran up to it. She danced her body in front of us and one by one, we all sort of fell onto the bed around each other. \n\n\"Hey...come here,\" Kendra said to me, and we made out on the edge of the bed as the others watched. \n\nI looked over and was shocked to see me wife grinding on Angela's lap, as the smoking hot red-head made out with Jenna for the first time and the girls moaned into each other. Then I noticed that Kamal had stepped up behind John and begun to rub his shoulders and neck, as he ground himself against him. I didn't know what I found more mesmerizing, my wife locked in an erotic encounter with another gorgeous woman...or the serious, guy-on-guy body rubbing that John and Kamal were engaged in. \n\nKendra pulled me down into the bed and she wrapped her legs around me as we kissed more-slowly, sensually. God, I wanted to fuck this girl. I pushed my very erect cock into her skirt, as it rode up over her hips and revealed a very thin, white lingerie thong. It was a thong fit for a slutty Daenerys.\n\n\"God, I want you to fuck me, Will,\" she said to me, as I felt her fishing my cock out of the kilt below us and pulling my green thong to the side so she could hold my girth. \n\n\"Mmmm,\" I moaned to her, \"I wanna fill this slutty pussy,\" I told her, as my cock pushed into her barely covered pussy. I was teasing her juicy underwear patch with the head of my cock. My pre-cum pushed into the fabric. \n\nAnd then she was pulling the fabric to the side and we were really teasing now. I could slide into her so easily if I wanted. My cock rubbed her hood and lips and we both ached for it. That glory of bareback. \n\n\"Fuckkk, you're big,\" she giggled happily. \"I want you inside me,\" she moaned to me again. \"Get a condom,\" she said very confidently. \n\nI wasn't going to deny her. I slid a condom onto my cock from a hidden pocket and as quickly as I could find her entrance, I pushed my body into her and my cock was engulfed in her soaked entrance. She moaned loudly. I looked over to see my wife now riding Angela's face. Her body was gyrating to the music as her forest nymph skirt had been pulled up and her green lingerie similarly scooted to the side for sexy oral action. \n\nI pushed Kendra's body over closer to Jenna and my wife fell forward to make out with her new friend. The girls moaned into each other's mouths as I fucked Kendra for the first time that night. \n\nAs I was doing this, I noticed a shockingly soft feeling on my ass. John had grabbed onto my buns and pulled my thong to the side to shove his tongue into my ass. \n\n\"Holyyyyyy fuuuuuuu...\" I moaned, as I tried to resist this feeling, but I was unable to tell him to stop. His tongue scooped into me and it tickled so many nerve endings and I shuddered in pleasure. \n\nHe ate my ass like he was hungry for it. I was making these very achy moans now, from the stimulation of this hot pussy I was fucking, and this crazy feeling in my butt as John played with my sensitive hole. \n\nJenna and Kendra stopped to look at why I was moaning louder, even as Kendra made these little squeaks each time I thrust into her. They saw John eating my ass and both girls looked almost jealously turned on. \n\nI was arching my closed eyebrows in pleasure. \n\n\"So...Will...did you say you were totally straight?\" Kendra said to me, in this rye tone. I couldn't do anything but smile bashfully. I purposefully fucked her a little harder on that thrust and she made the most deliciously sexy noise as she took my cock deep. \n\nI had a guys tongue in my ass and it felt good. \n\n\"There is no way that my husband is straight. And I'm gonna show him that tonight,\" Jenna said, leaning in and making out with me as my ass and cock were worked on by perfect pussy and tongue. I could taste Kendra's mouth on Jenna's lips and I loved it. ",
        "I shook with nervous, anticipatory pleasure as John finished licking my hole. He crawled in behind me and wrapped his arms around my chest. I was on my knees fucking his wife now, and he held my hips as I fucked her, feeling the power of another man inside his wife. He loved it and I loved it and we all fucking loved it. \n\nKamal had crawled over and offered up his eight inch cock for Jenna and Kendra to suck. They didn't miss a beat. \n\nIf I had thought I'd seen my wife horny and slutty before. I hadn't. \n\nShe worked this stranger's cock with another girl's mouth for the sexiest 20 minutes of blowjobs I'd ever seen before. I couldn't believe that he didn't cum from their sexy lips and tongues. While they worked I became almost transfixed on his girth and glistening, purple helmet. It was meaty and attractive. I noticed that other people nearby had begun to watch our bed from the surrounding walls and seats. There was lots of sex going on nearby just from the voyeurism of our scene. \n\nJohn rubbed his cock against my ass crack and I got a little scared. But I was so turned on by every touch. \n\nI was moaning and I reached my hand back to rub his muscular upper leg as he rubbed against me. What was I doing? Why was I so turned on like this? Kendra's pussy was milking me. \n\nHe slid his cock between my ass cheeks and spread me a little. Jenna was eyeing me as she and Kendra sucked on Kamal's cock from where he had kneeled just above Kendra's mouth. The hot blonde I was fucking had moved to Kamal's big balls, and was pushing them into her mouth to suck on his scrotum while my wife did her best job to deep throat as much of this monster as she could. She knew how to suck but this would be a challenge based solely on girth. \n\n\"Come here,\" she said to me. And I dropped further down to their level, laying on top of Kendra's perfect breasts again. Kamal's meaty cock was hanging there throbbing from where they'd been sucking on him on top and on bottom. I watched Jenna kissing up the side of this dick and looking at me. She kept her eye contact on me as she sucked. She wanted me to watch from close up as she blew a stranger. She wanted me to see her slutty desire. Her small hand jacked Kamal and her lips spit more saliva onto him, and his black snake made her moan just from her subservience to it. \n\nAll of a sudden I felt a cool liquid being spread around my asshole and I moaned again. John was lubing me. \n\n\"Oh yeah...I've heard that noise before. My husband has such a horny ass...don't you baby?\" Jenna said to me, in front of these sexy strangers, as she played with my lips with her fingers. I was so embarrassed and horny all at once. \n\nAll I could do is moan and fuck Kendra slowly as the action unfolded. We were all making very attractive noises of pleasure. Soon John had put on a condom and he was pushing the head of his cock into my ring, lining himself up. \n\nAngela had extracted herself from where Jenna had been riding her face and was now leaning behind Jenna and fingering her soaking snatch. I watched as her expert fingers quickly found Jenna's g spot and before she knew it she was moaning loudly and leaning her lips lazily against Kamal's pole, even as I watched her pushing her hips back towards the voluptuous redheads expert ministrations. \n\nShe dragged her face up to me, still holding Kamal's cock, and we kissed. I could taste the manly musk on her lips. She leaned behind me where John was still teasing my entrance with the tip of his helmet. She grabbed the sheathed cock and aimed it more directly at my hole. \n\nShe directed him as he entered me and I gasped. \n\nJenna dragged me forward so I was lying on top of Kendra fully. As he pushed further into me his cock popped past my virgin sphincter muscle and I moaned louder than I had all night. \n\nMy first cock. \n\nI had cock in my ass. \n\nAnd that's when Kendra pulled me down to her mouth. Jenna held Kamal's cock around its base and I didn't hesitate. I opened my mouth and gladly accepted as she pushed his penis past my lips. My mouth watered as I tasted another cock for the very first time in my life. I was at a bisexual orgy and I was experiencing my first bisexual encounter. \n\nI could taste his salty manhood on my tongue. His sponged head filled my mouth, and the way it pulsed excited me. It was so hard and yet soft at the same time. \n\nI moaned in yearning. John was sliding further into me. Two inches at first, with these tiny rocking motions, as he massaged my ass cheeks and held me firmly in place. He opened me. \n\nI had a cock in both of my holes. I was losing my gay virginity all at once. \n\nI couldn't believe how hard my cock was inside of Kendra's tight pussy, and she squeezed me with her vaginal muscles, as she watched me grimacing and trying my best to relax my ass. \n\nJohn took his time on me, spreading my hole and opening me slowly with his cock. He was 6.5 inches and fairly fat too. Not Kamal fat, but still bigger than the dildo that Jenna had been using on me. But it also felt a little less painful due to the soft skin of his cock. I liked it better. I was also on drugs, which helped immensely. It made it...so good. \n\n\"Mmmm, that is so fucking sexy, baby!\" Jenna said, as I bobbed on Kamal's cock and she gently jacked his base into my mouth. I could taste his precum and I swallowed it. I swallowed another man's cum. \n\nFuck me, I was turned on by that thought. \n\nAngela had gotten up to watch now. So had Jenna. They knelt on either side of me and I felt Jenna as she spread my buns and leaned down on my lower back to rest her face there and get a good look at the first ever cock to fuck me. She was blown away at how much it turned her on to see her strong husband with a cock sliding into his stretched ass. Her own pussy ached from the guy-on-guy show. \n\nAll of a sudden I saw Angela's dark, red hair and plump red lips duck in beside me. She added her mouth to Kamal's shaft and even pulled him from my mouth, showing me how deep she could get this thick beast down her throat. Wow...this girl was a level 10 cocksucker. I was turned on just watching her engulf him, gag reflexes be damned. Then she'd jack her man off and push the cock back towards my mouth, almost insistently. She grabbed him and slapped my face a little with his behemoth and I sort of loved the way she seemed to suddenly be directing my blowjob. \n\nHer Natasha Romanoff Black Widow body suit was pulled down over her bare breasts, which were big and perfect on her. She was the large C to Jenna and Kendra's luscious B's. She had the best boobs in the whole group. I could've spent hours diving into their creamy curves and erect nipples. And they sat up so perky with her costume half pulled off of her body, like some sort of mechanic's porn jumper. I could see she was also wearing a rose gold body lingerie chain that hung down over her toned belly and dipped below her waistline, where I saw the smallest hint of red-frilled panties and her adorable freckles charting a path I wanted to follow. \n\nShe pulled me up off his cock and we made out, even as she pushed his cockhead against our mouths while we kissed. And then I realized that Kamal was now sitting on Kendra's face, below us. She had pulled him down and was eating his asshole while I shared his dick with his lady. His hands moved to our heads and he kept us on his cock now. \n\nJohn was pushing further into me and I moaned around the cock in my mouth. \n\n\"Mmmm, yessss baby, take that dick for me,\" Jenna moaned. And John began to fuck me now. Good, deep thrusts. Jenna was obsessed with my spread ass taking cock.\n\nMy moans had become more obvious. I liked being fucked. I liked being filled by a cock. And I liked it in my mouth too. I liked how submissive I felt. \n\nI wasn't even thrusting anymore. Every time he fucked me my cock was pushed up into Kendra, and she would moan into the depths of Kamal's ass while I shared his huge penis with a fucking Avenger whose breasts bobbed in the air as we gave her man a slutty double blowjob. \n\nJenna helped keep my ass spread and had even been adding her own constant saliva to my crack, as she helplessly moaned and watched her husband get deflowered. \n\nKamal licked his big fingers and added them to my wife's pussy, where she was bent over at our side watching. \n\nShe moaned as he curled up into her g spot and he began to work on making her cum. \n\nIf anyone was watching the double king beds...they were being treated to a Roman bathhouse worthy work of high orgy art. \n\n\"I'm gonnnnna cummmmm!\" Kendra moaned as Kamal finally got up off of her face and gave her a chance to breathe through her mouth. \n\nHe stood up and forced me to sit back up, even as both he and John continued to keep their cocks in my holes. \n\nI wasn't going to last much longer. John's banana was perfectly pressing into my prostate gland as he loosened me and Kendra's pussy felt the way good drugs feel. \n\nI was so horny that it made me suck on Kamal's dick harder. Angela played with his balls and jacked off her man's base as she watched me submit to his power. She loved watching Kamal fuck a virgin boy. All the girls were wildly turned on by seeing their men fuck each other. It was a mood. \n\nKendra pulled Angela's body suit down over her ass and shoved her fingers into the crotchless red Frederick's panties the bombshell was wearing, even as she tried to help her man cum in my mouth. \n\n\"Ughhh, I'm close.\" Kamal groaned like a warrior about to be let out of a cage. \n\nI was going to swallow his cum, I realized. \n\n\"I'm gonna cum soon too!\" John said, as he fucked me and slapped against my ass as I happily moaned around the cock I was gobbling. \n\n\"Mmmmm fuggggghhhhh,\" I moaned, and I knew that Jenna would recognize my orgasm sound. \n\n\"Oh YESSSSSS BOYSSSS, YOU'RE GONNA MAKE MY SLUTTY HUSBAND CUMMMM. I KNOW THAT SOUND. FUCK THIS LITTLE SLUT UNTIL HE EXPLODES IN KENDRA...FUCK HIM LIKE YOU KNOW HE WANTS IT!\" She slapped my ass and Kamal curved his finger an extra inch and all of a sudden a rush of squirting came over Jenna, even as she clapped my ass cheeks on John's sticky condom and gushed onto the bed. \n\n\"I'M CUMMMMMINNNNGGGG!\" I groaned, as I heard my wife's juices being mined from her fruit. \n\nMy jizz rushed up through my cock as it was milked out of my ass and into the condom. My whole body was shaking. \n\nJenna could only whimper through her wet drenching of the corner of the bed. \n\nKendra had recovered just enough to completely milk my cock to completion as her husband's dick gave me an orgasm unlike any I'd ever had. She watched me intently as I experienced every moment with her. \n\nAnd then Kamal grabbed onto my hair as Angela jacked his exposed shaft hard and caressed his balls like she knew knew to do to make him cum. It wasn't my lips that did it. But that was okay. It was more about making sure they fed me my first load. \n\nJenna reached up even as she was still breathing hard, and she placed her hand lovingly on my neck. As if to hold me, and keep me at my task, but also let me know that she was there for me the whole way. She knew all the things exploding inside my brain. She knew the pleasure and the struggle and the cataclysmic meaning for our relationship this might bring. \n\n\"Mmmm, I'm gonna cum in this slutty mouth,\" Kamal grunted, and his cock expanded on my tongue, as the hose pressure grew too much, and all of a sudden my sucking was rewarded with a thick, gloopy, strand of hot man jizz. He hadn't jacked off for a whole week leading up to this party, and I was getting his first load in a while. I would learn this later on as we all smoked and relived our night. But for now, my first cum swallowing was intense, and salty, and gaggy, and pungent with the smell of gay sex. It took me a while because he came a lot. \n\nJust as his cock was finally finished filling my mouth up...I felt a spasm in my ass. John grunted and his condom ballooned to capture his sperm before it could fill me. He fucked me hard until he was done cumming and my moans for him were achy and real.  \n\nI didn't realize it, but the whole time I'd been sucking and swallowing Kamal's load, I was grinding my ass back against John's crotch, which he kept completely flush against me after he came, allowing me to revel in the feel of my first bottoming and his throbbing member against my sensitive gland. \n\nKendra had fingered Angela to her first orgasm which cascaded around us as a harmonizing moan as the men were cumming, and we all collapsed down into a geometrically sweaty mess.\n\n\"Fuck!\" Jenna said, leaning up to look at all of us, with this stupid grin on her face. \n\nWe slowly untangled from each other and cocks were pulled from various holes with lewd squelching noises. I winced slightly as John took his cock from my deflowered rump with a splashy plop. Kendra seemed equally sad when I pulled myself from her pussy, as she kept her legs spread and enjoyed the afterglow of her intense orgasm. \n\nAfter I'd swallowed as much of Kamal's cum as I could, the rest had mostly dribbled out onto my chin or onto Kendra's belly and breasts, which she'd taken out while I'd been fucked into her. They were pierced just like my wife's. Fuck, these girls were way too hot for words. How had I just fucked this girl? Or...been fucked into her? With my wife watching? \n\nAll of a sudden Jenna was kissing me passionately and we made out, sharing another man's leftover cum. She was ravenous for me and I love how she tasted another man on me. \n\n\"That was so fucking hot,\" she said to me, and we turned and kissed on our knees. She really was obsessed with the cum on my face. All the couples checked in with their home base for a moment, and before I knew what was happening, Jenna was being pulled away from me to the very center of the bed where Kendra wanted her turn. They'd been teasing all night and it was time for them to fuck. But they weren't going to leave Angela out. They pulled the third girl in and peeled the last of their clothing off as they formed a triangle and began to kiss and touch in the center of the bed. This was a sensual triumvirate of breasts and tight tummies and legs being caressed in a way that only a sexually aware woman could understand. This was the type of subtlety that a lady could give another lady. It was spectacular to behold. \n\nAs I looked around the room there were probably about 30 people in their now. Half seemed to simply be watching the show we were putting on. Then there were two other nearby foursomes, which were also quite fun to watch. The vibe was immaculate. \n\nJenna and Kendra traded Angela's mouth back and forth between them and then spent a long time kissing each other. The way a girl kissed another girl was just honestly the most beautiful sexual thing in the world, I thought. It was delicate and intimate and cat-like. It was liquid erotica. I felt like I was 12 again, staring at my Lava lamp on a lazy summer afternoon, with nothing responsible to do in the world. \n\nAngela had a long, black-and-gray wildflower tattoo running down her left leg, which was revealed after Kendra had pulled the lycra suit the rest of the way off of her. The guys all took a break, watching their women in full -on lady lust mode, as we gently stroked our already hardening cocks back to thrumming capacity. \n\nThen I watched Jenna make the first move, as she kissed down Kendra's body over her stomach and belly button, to find her wet pussy waiting. She pushed Kendra over onto her knees and made her bend her chest down so that just her ass was propped up. Then Jenna began to eat out the queen of dragons in front of a room full of sexy voyeurs. She licked and sucked and teased. She thrust her tongue into Kendra's asshole. \n\nIf you were just walking into this room, you'd see the the ice blonde Daenerys, stark naked, being shown that a slut always pays her debts. \n\nAngela scooted in behind Jenna and made her spread her legs in a similar way, and the girls started an oral sex train that could've sold as the world's most expensive NFT if cryptocurrency ever dipped into the sex party world. \n\nAngela lapped at my wife's shaved pussy like it was kitty milk. And holy fuck did Jenna ever lick Kendra's tight slit with the longing of so many boxes being checked off at once. \n\nI watched with drooling ecstasy as my wife tongue-fucked another woman like she was being paid to do high-end art porn. None of that free shit. You had to give your credit card info to get content this good. No one was angling randomly towards a camera. No one was faking it. These three girls wanted to fuck each other and eat each other and show each other that type of lesbian lust that lives just under the skin. The kind of dedicated pussy desire that builds over time for fellow, confident women, who know how to have a good fucking time, and live their life like a badass that doesn't care what people think. \n\nI was never so in love with my wife, than I was at that very moment. And I think John felt the same for his wife, and Kamal probably had plans not to keep that girlfriend title as girlfriend for too long. You typically locked down a woman that would have a lesbian threesome at a mansion in LA just because she liked to fuck other girls. \n\nThat was an Oliver Kahn level of KEEPER. \n\nAs the sluts played and moaned, I was shocked as I watched two more girls approach, who I recognized as the Slytherin sluts we had passed earlier. One girl was Asian with two ponytails, and the other had messy, girl-next-door brunette vibes. They were only wearing the school girl lingerie at this point, and they climbed up on the bed next to the threesome. We watched excitedly as the girls saw them and welcomed them over. The oral sex train stopped for a moment as they saw them. After a quick introduction Jenna leaned in to kiss the Asian girl. My wife. Naked. Kissing a dark wizard. They all lay down together now. Kissing and touching and rubbing their bodies, as they helped the girls out of their panties and bras, though they left their knee high green striped socks on. The amount of soft, naked skin was too enticing to wait any longer. \n\nThe boys decided they wanted back in. \n\nI watched Kamal climb up to the pile and Jenna and one of the Slytherin girls came over to suck on his cock together. I climbed up behind Angela's creamy, freckled ass, which looked so tantalizing with her body jewelry dangling down her skin. I put another condom on and slid my cock up against her wet pussy as she looked back and bit her lip as she looked at me. \n\nKamal looked at us and nodded. \"Fuck my baby's pussy, Will,\" he encouraged, in this deep baritone that careened into me. \n\nI slid my condom-sheathed cock into her tight entrance and she easily took me. She moaned with lust and rocked her hips back into me as we began a slow rhythm. Ugh, her pussy was good. Fuck.This was my second different pussy of the night that wasn't my wife's. What a fucking mind-gasm that was. \n\nJohn crawled up behind Jenna and spread my wife's legs apart, as she lay on her stomach, sucking on Kamal's candy bar with her witchy partner. \n\nThe big-dicked boy-who-lived had made it back to the group also, following his sexy Hogwart's babes. He crawled onto the bed and began to eat the Asian girl's pussy, as she bent over for him and draped herself over my wife's back, where she and I shared a kiss. It was incredible how much interplay there was. \n\nI sucked on her breath-mint tongue and enjoyed the sloshing pillow of Black Widow's pussy as I rammed her firmly, while my wife was being pounded by John Snow. He'd pounded me first, I thought, almost laughing at how amazingly good it had felt. \n\nJenna and the other girl created a hole with their lips for Kamal's cock to slide through, and they jacked him and massaged his balls and ass, while he used their mouths for his pleasure. ",
        "And then I was even more surprised when I felt someone playing with my ass. \n\nI looked back and saw Han Solo crawling in behind me and pulling a hard cock from his dark blue pants. Sex-slave Leia was peeling off her bronze bra and climbing up to kneel next to me. \n\n\"Hey...my boyfriend thinks your ass is really hot, we watched you getting fucked earlier...can he fuck you?\" She asked me, as she reached down to squeeze my cock as I was sliding out of Angela's very wet pussy. She brought my hand up and made me squeeze her plump breasts. \n\n\"Umfff,\" I moaned nervously, as the thought of taking another cock both excited and scared me all at once. There were more people in the room now. More people to watch me having gay sex. More people who would know this new secret about me. \n\n\"Tell him to go slow...that was my first time,\" I confessed. She leaned in and held my chin to hers and we kissed. Then she leaned her lips over to my ear. \n\n\"If that was your first time...you are a sexy fucking slut,\" she said to me, and I practically beamed with pride as she kissed me again and I tasted her cherry chapstick. \n\nAnd then I felt the chill of the lube drizzling into my ass again, as a new, rubbered beast pressed into my ring. \n\nHe just teased me at first, but I was already moaning with my head up, knowing how badly I wanted it. Angela bounced her ass back like she was a club girl below me. And then Han Solo slid his lightsaber into my air-locked door...and I whined a slutty moan as he pried me open. \n\nHe fucked me firmly. Fully. \n\nHe fucked me while Jenna was fucked and while the Slytherin girl was annihilated and while Angela gave me her round booty and while Jenna and Pansy (probably) sucked the statuesque cock that had previously seeded my throat. \n\nI reached back to hold his side cautiously while he fucked me. I needed the connection. I needed something to hold onto. This was a subway train. \n\nMy ass was getting accustomed to being fucked. I liked it a lot. The drugs had certainly helped get me here. I was spinning and the colors around me felt like orbs of magma-hot serotonin washing over me with each new second. I could tell that Jenna and Kendra and Angela were all feeling similar types of euphoria as we fucked and groaned and bobbed to the loud, pulsing music. \n\nAngela orgasmed hard below me and she pulled off after shuddering over and over again, needing the break from being so full. \n\nThen Han was flipping me over so I could be on my back. He grabbed my legs and put them over his shoulders and now he began to drive into me. The \n\nSlytherin girl who'd been helping Jenna suck Kamal, saw the opportunity and she sat on my face, giving me her landing strip pussy lips to drag my Cessna-tongue down. Her clit was pierced. Damn, that was hot. I flicked the emerald gemstone over her hood as this fuck boy smuggler turned me even more bisexual in less than 12 par-sex. Or something. I was so stupidly happy with the way his cock was plunging into my prostate that I wanted to die right there...or freeze this moment and never stop. All the while, Leia was now stroking my cock with her hand, as she watched her man take me. \n\nI ate naughty witch pussy and let this rebel pound my butt into the bed, as I begged for more into the snatch riding my mouth. He was literally torpedoing my death star's only weak spot. I guess that made my G spot as easy to nail as a womp rat. Leia's hand felt so good stroking me in time to my fucking. \n\nJenna came again beside me, clutching onto my arm as she tried to keep sucking on Kamal's fat stick. It wasn't easy. John knew how to fuck and she was a blubbering mess of sweaty afterglow, even as he continued to lightly rock his cock into her. \n\nThere were now five boys and six girls on the bed, and we were all naked. And the sex was like stereo-surround sound. The moans were Dolby Digital. Nothing mattered but our pleasure. Every hole was available. Everyone wanted more of everyone. \n\nHan finally told me he was going to cum. Leia had been jacking off my own cock while he fucked me and he exploded inside his condom from the friction of my tight ass. I really liked that guys could cum from fucking me. My cock was vibrating all through his orgasm and I groaned naughty things for him as the Slytherin girl sat up off my face to watch him breed me. \n\nAfter he was done, he let me drop my legs to the bed around him, but he stayed filling me. Leia straddled my lap now, lifting her skirt to the side. She pulled a condom onto me. Then she slowly impaled me into her tight pussy. Her hair was tied back in that one, long brown pony tail with gold bangles. She rode me reverse cowgirl and I watched her ass work, as she squeezed me and rocked on me like a professional space rodeo princess. This was my second royal sex in the last hour. \n\nWe fucked for a while and Jenna came up to make out with the galactic hottie that was using her husband's dick for warp-speed pleasure. She might have been from Alderaan but she was gripping my cock with her pussy in all the right ways. We were so connected again. Jenna told her to cum on me, and the girl took direction well. She shook and rode me hard, as I fucked up into her, as the princess proved that maybe Obi Wan wasn't her only hope after all. \n\nShe was a star whore. She came hard on my cock. \n\nI hadn't cum again yet only because of the drugs and the excitement and the want to extend this longer. I was edging. I wondered how long I could go. Jenna could go all night, I already knew. I needed to do the same for her. \n\nLeia crawled off of me as my very hard cock flopped out and I pulled my condom off. I noticed that Kendra was crawling out from under Kamal, where she had just cum from his own bullish fucking. She looked well used. \n\nWe all came up for air again, as various people kissed and touched and fondled new body parts on new partners. \n\n\"You guys wanna get some air?\" John asked just our original group, and we agreed with a dreamy sigh. \n\nWe separated off from our larger group and told them all we'd be back in a bit. And Jenna, Kendra, John, and I threw on our underwear, and made our way downstairs. \n\n\"I think we should check our clothes,\" Jenna said. And that was a shrewd choice. We grabbed a small clutch where we kept cash and lube and chapstick and breath\n\nmints and then turned in our clothing to the hot robot coatcheck girls that eyed us with bemused curiosity. They had clearly seen it all. \n\nKendra had put her lacy, white thong back on and her low-cut matching bra. She still had her white heels too. Jenna was in her green fishnets and thong and skimpy vine top with her kelly green heels. I was wearing my thong and fishnets and slip on beach shoes, which earlier in the night would've made me nervous to walk around in. Now it kind of made me hornier. John had his black, booty shorts back on and his thick boots. \n\nWhen we had all finished, we regrouped and asked what everyone wanted to do next. The girls were already dancing together, still feeling the vibe of the party and the drugs and the smells. You could hear thumping music and moans all throughout the house. People were fucking everywhere. It felt exciting. \n\nWe opted to do a bathroom and water break and after we'd all refreshed, we decided to head back upstairs, but to the 3rd floor this time. To the giant sex room. \n\nI was completely giddy from my roll and Jenna and Kendra also seemed to be particularly playful and touchy and lovey along the way. \n\nJohn offered us a big puff from his weed pen as we ascended and we all enjoyed a couple of large hits. \n\nKendra coughed a little and Jenna jabbed her in her ribs playfully. \n\nWhen we got to the top of the stairs we all gave each other an excited look, and then entered. \n\nThe darker, sexier vibes of the space were immediately apparent. There were probably fifty people in the room, most of whom were already naked and in some state of sex. \n\nThere were girls fucking girls and guys fucking guys in every combination imaginable. \n\nThere was a girl and guy side by side in the sex swings being fucked on rotation. There were ladies sharing double dildos and a couple of people strapped to wall restraints being slowly licked or teased. \n\n\"Fuck, I'm so horny!\" Jenna told me, and agreed. God...the music was INCREDIBLE. \n\nThe girls led us over to a big sunken square couch that was next to a fireplace turned on low. \n\nThe boys sat down side by side and our girls climbed up onto us and began to make out. Then we were all making out with each other. Jenna and Kendra licked and kissed. John and I bit each other's lips and were rougher with each other. \n\nI saw Jenna catch someone's eye behind us and she curled her finger to come hither. \n\nWhen John and I looked there was a naked, sparkling fairy of a man with his fully erect cock out that had crawled over on his knees between our heads. \n\n\"Hi! You have a really sexy cock!\" Jenna said, completely comfortable in her sexual gravitas now, \"Can our boys suck on it?\" Kendra smiled a very sexy smile at my wife's idea and slapped her ass where she was sitting on my cock. \n\n\"Of course!\" He said, and John and I had already turned to latch our mouths onto this banana dick that was now arching between us. Jenna and Kendra pushed our heads onto him and encouraged us. \n\n\"What a couple of sexy cocksuckers you boys are,\" Kendra said, and I moaned. \n\n\"Yeah...they really love cock. I think we need to get them more cock, don't you?\" Jenna said. \n\n\"Oh yes. My horny little boy is gonna get lots more cock tonight,\" Kendra promised. And all of their dialogue simply made John and I friskier as we sucked. Our tongues constantly touching as we stared at each other over this big dick. What a sexy scenario this was. \n\n\"Ooh! One of the swings is open!\" She beamed. \n\nShe pulled me up and I was suddenly separated from the beautiful cock. John and Kendra turned to suck on him now, even as I was sadly pulled away from that dick as Jenna excitedly ran me to the swing. \n\n\"You want to go in the sex swing!?\" I asked her, breathlessly blown away by her. \n\n\"No baby...I want YOU to go in the sex swing,\" she said. I gulped and started to protest but she kissed me and backed me into the harness. \n\n\"Come on. Jump up,\" she said. \n\nIt was one of those fetish, spinning swings. I jumped up and put my feet into these soft, padded stirrups. There was a soft sling area for my butt to rest, but when my feet were locked into the stirrups, my legs were spread wide open and my hole was fully exposed. There was also a large pad for my back, but my upper body could mostly hang off if I wanted it too. It was actually very comfy. I was rolling, which certainly helped. \n\nBut I was suddenly very nervous of what this meant I was about to do. \n\nJenna walked over to the nearby sex toy wall and chose a dildo similar to the one she had been using on me at home. She grabbed lube and squirted it all over and then walked back over to me. Several people had gathered to watch my wife, even as I looked around in sudden trepidation about what was about to happen to me. \n\nI was in a fuck swing. With my legs completely spread. \n\nJenna pushed the dildo up to my ass and pushed it into me as I moaned loudly for my audience. Ugh, it felt so naughty and so good all at once. \n\nShe began to fuck me as people watched. \n\nThere were at least five nearby guys who were surrounding the swing. They were hard and jacking off. Jenna was watching all of them as she fucked me. \n\n\"Who wants to fuck my slut first?\" She finally said to them, as she lifted a devilish eyebrow. \n\nA hot, bear of a man lifted his hand first. He was football player stocky and his cock was fat. He had a full beard and broad chest. He reminded me of my high school baseball coach. \n\n\"Mmmm, yes. Come here,\" Jenna said. \n\nI watched her open a condom, fall to her knees. Suck his cock into her mouth for a couple of long seconds, and then push the condom onto his cock with her lips. \n\nThen she pulled the dildo from my ass and leaned into to whisper something to him. He smiled and then grabbed my hips and pushed his cock into me. \n\n\"UNNNNFFFFFFFFFUCKKKK!\" I moaned louder than any other nearby sex. People were noticing this power exchange now. They'd seen Jenna confidently locking her husband into the swing. They'd seen how she offered up my ass to the surrounding men. This pixie fantasy girl, who seemed to be completely in control of her husband's suddenly slutty butt. \n\nHe began to fuck me. And I moaned like a slut being fucked without hesitation. Jenna stood beside me and played with my cock and soon she was bringing another guy over and I watched her push my head back so my mouth could be used as I hung backwards. A musky penis was shoved against my lips and once again I had cock in my mouth. I sucked with my head thrown back, giving my throat up to him and deep throating as much as I could. \n\nI moaned in pleasure at being made to suck again. \n\nThe fat cock fucked me and this new cock used my lips and Jenna orchestrated it and told them I was a cock slut and I knew she was right. \n\n\"Fuck this slutty little boy, guys,\" she demanded. And I glogged and slopped and shrieked with all-over pleasure as my wife fed my newfound cock lust. \n\nThe cock in my mouth was cumming now and I almost choked as I tried to keep sucking, and then the guy in my ass was spasming and filling the condom and me. I was being cum in from both sides and I was so fucking horny for it. \n\nWhen they were both done she invited a longer cock over to fuck me. Another condom was slipped on and soon I was being filled again. She gave my mouth a break which was good because I moaned a LOT on this new cock fucking me. \n\nI really liked the way he used me. I was moaning lasciviously as Jenna watched the show. She grabbed me and kissed me while he fucked my butt hard. \n\n\"You are such a sexy slut, he's taking your ass so good.\" she said to me. It was so hot to make out with my wife while I was being fucked in a sex swing. It made me feel both slutty and comforted all at once. That was so powerful. That she was here for this gigantic discovery. \"I love how you take cock, baby...it turns me on so much. You're such a sexy boy,\" she said to me, and I moaned even louder from her saying this. \n\n\"Yuhhhssss, babbbby! MMmmffff!!\" I groaned back to her, and she laughed at how fucking desperate I sounded. I was overtaken with wanton lust. I couldn't talk without moaning from the filling my tank was getting. My ass felt so good. \n\n\"FUCK that TIGHT ass. FUCK my husband's ass. Spread him wide and loosen him up for me. Loosen up his ass like the cumslut that he is!\" She barked at my new top, and I died at how dirty she was being. I loved it. She was completely turned on and in control of my cocking. \n\nI felt him begin to fuck me faster. \n\nHe was going to cum. He was grabbing my hips firmer and bouncing my down in the swing. \n\nShe jacked me off. I felt so good. I wanted to cum so badly. I was close. \n\n\"I'M GONNACUMMMM!\" He moaned, and just as I noticed a similar rush, I felt Jenna's hand leave my cock and squeeze the base of my scrotum...completely denying me my orgasm as she cut off the ignition. \n\n\"FUGGGGHHHHHHHHH UMMMMFFFF!!\" I was staggeringly destroyed. I was in pleasure and pain and dismay and lust and everything else. \n\n\"No. Not yet. You're not done yet,\" she told me, as she held my balls and he slipped his softening cock out of my well-used hole. \n\nI was gaping wide open in the swing, and she was lightly rubbing her fingers up my cock, which was harder than it had ever been. I was throbbing hard and felt like I needed to cum more than I ever had in my whole life. \n\nIt was just then that I saw a very sexy blonde girl approach Jenna and they started kissing. \n\nIt was Kendra. Her and John had come back to join us at the swing. The swing directly next to us had just opened up and Kendra led Jenna over to it and told her to get up into it. My wife took direction well. Kendra kissed down my wife's body and ate her pussy again. Jenna was immediately in heaven. These girls were so into each other. \n\nNow we were both hanging in the swings. \n\nThey were only a foot away from each other and I held my hand out and Jenna and I held each other's hands and looked to each other, even as our legs were spread wide and the room began to close around us. \n\nShe reached over to me with a pill in her hand. \n\nI opened my mouth and she popped it in. She smiled at me as she took another herself. Fuck. We were re-upping. \n\nIt was only a second later that I realized John had moved in between my legs. The guy that had that taken my virginity so deliciously earlier that night was sliding into me again wearing a fresh condom. \n\nI loved it, but I strangely wished I could feel his naked cock without the condom. I don't know why but that's where my cravings had drifted. I wanted to be barebacked. Fuck, this was such a crazy unexpected way to feel. I was being fucked again and I looked up at John with my legs spread submissively in the swing and I loved getting to be slutty for him. \n\nHe looked at me like a sexy fucking top was supposed to, and he took me hard. And I moaned like a good little bottom, and he loved that. \n\n\"You have such a sexy fucking ass, Will,\" he said to me, as he grabbed my hips and drove into me, as the room continued to enjoy the way I was taking cock. \n\n\"Unnnffff...I love your cock. Fuck me however you want. I'm a slut for you,\" I couldn't believe these words were coming out of my mouth. But they had. And he did. \n\nHe fucked me like I deserved to be fucked. Like he knew how badly I needed it. \n\nI was moaning and being well taken in the sex swing and Jenna was now also being impaled by none other than the Groot guy from earlier. Kendra had gotten down on the floor beneath the swing and she was eating Jenna's ass out from on top of a comfortable pillow. His gigantic tree trunk cock was filling my wife's pussy and she was completely lust-crazed as she moaned some of the naughtiest things I'd ever heard coming out of her mouth. Soon you couldn't hear her though. Another guy filled her mouth with his cock. Two other guys even approached to make her jack them off. \n\nI was jealous. But it didn't last long. Han was back. Behind me. He bent my head backward and filled my mouth again. I sucked him in. I could taste ass on his cock and I wondered if I was tasting Leia's ass. I must've been. I could also taste condom on his dick. He fucked my throat now. I let him. I breathed calmly through my nose. \n\nI was a slut. I needed this. \n\nJohn fucked my ass and Han fucked my mouth and soon I felt a pussy on one side and a big cock on the other and I realized when I opened my eyes to come up for air that Angela and Kamal had returned to find us. \n\nKamal looked at me just as John was sliding out of my ass, and he didn't give me a choice. He simply walked over to my now open hole as he put a new condom on. \n\nAngela walked up behind me, her big breasts pressing into my face beside me as I breathed in heavily, both excited and nervous. \n\nKamal's cock was eight, thick inches-far bigger and thicker than any cock I'd taken that night. Han had pulled out of me to go and wait in line for Jenna's pussy, which now had a large group of guys waiting to use her very willing holes. \n\nI watched Kamal squirt an ungodly amount of lube onto my well-fucked ass, and then use his large fingers to rub it around my crack. Beside me, Jenna was being fucked by cock after cock, completely unable to even see the fact that I was about to take Kamal's monster. But her hand still gripped mine, and as he slid inside of me, I squeezed her as tightly as I possibly could. She squeezed me back. \n\nAngela had taken out a small brown bottle during all of this, and she leaned over to me and kissed me on my moaning mouth, and then told me to breathe in with my right nostril. ",
        "What? I wondered. But then she was holding a glass bottle up to my nostril and pushing my other nostril closed with her fingers. \n\nI didn't think twice. She was a fucking pornographic Natasha Romanoff. I did what she said. \n\nI sniffed in from the mystery bottle, having no idea what I was doing. It was probably a six second sniff. \n\n\"Hold your breath...don't exhale for six seconds,\" she told me. \n\nAfter waiting like she said, I finally exhaled. And I slowly allowed my head to fall back as my body was overtaken by the controlling effects of the amyl nitrate. My blood vessels dilated and nothing in my ass hurt. It was the most insanely seductive feeling. \n\nHe thrust his cock fully into my ass and I felt my own boner burst with a small mini orgasm, as my cock leaked cum out onto my belly. \n\n\"FUUUUUGGGGGHHHHHHHHHHHHH!\" I moaned. I needed him inside me now. I needed cock in my mouth too. The poppers affect was gigantic. \n\nI'd never been so desperate to be fucked. It was an urge that made my ass feel completely wild. Fuck...I seriously NEEDED to be fucked. I needed big cock in my slutty ass. \n\nHe knew it. He filled me up. John saw the look in my eye. He walked over to the side of my head and turned me to his dick and I sucked on him hard as well. They fucked me so good. I wanted it so bad. I wanted big, tasty cock pounding me. I wanted to be the gayest, sluttiest, dirtiest boy they'd ever fucked. I couldn't believe how fucking nasty I felt. How naughty. How GAY. That was so damned hot to me. \n\nMy wife had already drained three cocks on the swing next to me and I soon had John telling me he was going to cum in my mouth soon. \n\nAngela made me bring my mouth off of John's cock and do another hit off of the poppers between her breasts. She just held my head there, sniffing from the bottle in her cleavage. I wanted it. These things made me so horny. \n\nAfter this next hit I was lost. I was so horny for cock I would've done whatever was expected of me. \n\nI deep-throated John and bobbed on him in the most desperate way I could. I wanted his cum in my throat. Kamal meanwhile had been given full access to my now completely horny fuck-hole. The poppers had eliminated any sense of pain and now I was literally squeaking with joy each time he bottomed out in me, as the sounds of our loud sex drew in a crowd around us of people that were just waiting to see me take their cumshots. My noises were symphonically slutty. \n\n\"Wait...whenever you guys need to cum...I want you to finish on my husband's face,\" I heard Jenna moan to the guys that were playing with her. \n\nShe was taking four cocks at the time. One in her asshole. One in her mouth. And two in her hands. And she had just told all of her current suitors that their orgasms had to finish on my face. \n\nOne by one I felt four new dudes standing around my swing and I could hear them jacking their cocks off. \n\n\"Go ahead boys. Get close to his mouth. I want your cum on his face,\" It was Jenna. She was standing up now beside my swing.\n\nKamal was fucking me. John was exploding in the back of my throat. \n\nAnd then the guys started to cum on me. \n\nOne by one. They didn't announce it. They just started cumming. Jenna grabbed my mouth off of John's cock and pulled me up so they could cover my face better. I was moaning and Kamal was bringing me very close to my own edge. \n\nI didn't even realize but the dirty kink of my wife pimping me out to this many cocks while a monster pipe boxed my prostate into slutty submission, was enough to bring me to the brink of my first anal orgasm. \n\nI didn't even know that was poss...\n\n\"FUCKKKKKKKKKK!! UNNMMMFFFFFGHHHHH!!\" I exploded with orgasmic wonder. \n\nThe constant, hard stimulation of Kamal's cock with the addition of the mind-altering poppers, had led me into the most crazy orgasm of my life. I hadn't even touched my dick. It was nothing but the complete domination of Kamal's fat cock pounding me beyond my own control. I was his to pound and break. His fuck toy. \n\nMy dick started spasming in the swing as I came while he fucked me. All this while hot cum was raining down onto my face from the first two cocks. Jenna directed their cum over my face even as I savored the salty sweetness of John's load in my mouth and throat. Cum ran into my eyes and it stung. Cum ran into my nose and hair and mouth. I opened my lips and gave them better access to my tongue which I stuck out for them. I wanted their cum. I wanted Jenna to see me desperate for cum. The third guy came and then the fourth guy and suddenly Jenna's lips were on my face and we were sharing all of this fresh cum in our mouths...sucking and licking and battling with our tongues for who could be sluttier. She was moaning so hard while sucking all of this cum off of me. My wife was a raging cum slut and it was enthralling. \n\nAngela joined us and then so did Kendra. They both helped to lick up my cum-covered face and we all made out with the salty load. \n\nAnd then Kamal finally told us that he was going to cum. He grabbed my hips in the sex swing and power-rammed my butt and Angela forced me to do one more hit off the poppers and I swear my ass muscles milked that beast to its foremost completion with all the desire of a whore's first time. \n\n\"PLEASEEEE FUCKKKK MMEEEEEE SOOOOOO HARDDDDDD!! KAMAL TAKE MY ASS FUCK MY ASS FUCK MY ASS CUM INSIDE ME FUGGGHHH MEEEEEEE!!\" I moaned all of this to him and Jenna licked my neck and moaned against my chest as she was there for my continuing conversion to cock. She loved the things I was saying and could hardly believe how slutty I'd become. \n\nHis giant cock pulsed and throbbed and vibrated between my stretched buns. He emptied his gigantic load of sperm into my well-fucked hole and I shuddered and shook and shivered as my body got goosebumps. \n\nWhoa. \n\nThat was. \n\nWhoa. \n\nHe had made me cum using nothing but his cock in my ass. \n\nWhoa. \n\nI was breathing hard.\n\nWhen he was done he pulled out of me and I couldn't believe it but I felt strangely empty. \n\nIt didn't last long. \n\nAnother condom covered cock was soon presented and I was already moaning as I was fucked again. I couldn't get enough. \n\nJenna kissed me and leaned into my ear.\n\n\"You aren't allowed to leave this swing until every guy that wants to fuck you is done,\" she instructed me, and I shuddered at the thought. \n\nThen I watched her walk away towards Kamal, as Kendra and Angela followed, and the three girls propped the gigantic-cocked lover up onto a sex seat that was connected to a nearby wall. \n\nJenna and Kendra got down on their knees and I could tell the music was making them feel particularly slutty through their roll, because that's what it had done to me. Angela made out with her boyfriend as our nasty wives sucked on his cock below and really got into it. I could tell they were feeling that same submissive power to his size and girth. \n\nI was fucked by seven more cocks before there were no more takers. \n\nIt was a religious half hour. \n\nMy ass was sore. \n\nSore and sensitive and strangely aroused. \n\nI hung there and allowed my mouth and ass to be taken and bred. Taken and bred. \n\nAll while watching my wife and her new friend take turns on Kamal's dick. \n\nHe was holding Jenna up against the wall now and fucking her and I watched her orgasming on his cock. Then Kendra was taking a turn, and finally Angela. The dude was a fucking athlete and these women looked like were being well taken care of. I loved how hot the scene was. Jenna would look over to me whenever she could and revel in my sudden need to be fucked. She would have so many questions for me that next morning in bed. I already knew it. \n\nWe finally finished with our various setups and it was almost 3 in the morning. Some people were still going or regrouping or heading home. \n\nOur group had ended up on the roof. Naked. Lounging. Having a nightcap. \n\nWe were on this big circle of couches. It was the eight of us. And we kissed and cuddled and laughed as we talked about the amazing night of sex we'd just had. \n\nWhen it came time to say goodbye to everyone, we found it was just Kendra and John and Jenna and I, still remaining. It was almost four in the mourning. The distant thrum of early-morning drivers was beginning to fill the dissipating night air. \n\nThere was a chill as well, as sweat froze to tired skin and the come down of the drug intertwined. \n\n\"You guys wanna come back to our hotel and fall asleep with us?\" Kendra shot her shot. \n\nJenna and I were exhausted. But she looked at me with that naughty grin she has. \n\n\"Uhh, yeah...that sounds like fun,\" I said. Jenna wanted to follow this night wherever it took us. \n\nWe got our clothing from coat check and made another bathroom and water trip. \n\nJohn called a Lyft. Ten minutes later we were spread out in a big SUV with an innocent soccer mom-looking driver that probably would've spontaneously combusted in church if she had known what we had done all night. Her radio was tuned to alternative Christian rock. \n\nWe were high, and drunk, and satisfied. We we young, and daring, and devilish. We didn't talk much but we shared glances. The girls sat in the back row and on darker turns Kendra and Jenna would lean in to share these intimate kisses and compliments. I could hear them making out. \n\n\"I wanna fall asleep touching you,\" Kendra told my wife, as I would later learn. \n\nJohn and I sat in the middle row, our bodies. exhausted. Our knees were lightly knocking as the car rocked. I smiled at him. \n\nWe truly did just head back to their hotel and relax. There was no more sex. \n\nBut the four of us did take advantage of their amazingly large shower and have some fun kissing and touching and helping each other softly wash sensitive parts. Kendra and Jenna washed my ass and balls with a washcloth, and they did the same for John. \n\nHe and I kissed while the girls cleaned us on their knees. And they kissed our cocks for a little bit. Not sexually. Just in that way that high-level lovers do.\n\nWe finished and dried off. We peed and drank more water and took some ibuprofen. \n\nWe were all slightly horny when we crawled into their one king bed together naked. But we were more tired. \n\nKendra and Jenna fell asleep in the middle, with their legs draped over each other and their hands touching. \n\nJohn and I spooned our girls and drifted off. \n\nDreaming of the night we had had. \n\nDreaming of every hard cock and wet pussy and mental delight. \n\nWe kicked the covers half off and snoozed away, like an enlightenment painting. \n\nFour horny, bisexual adults, fully satisfied with the fulfillment of our sexual ambitions. \n\nThere would be no going back now. \n\nWe were about to begin a kink journey that we never could've dreamed of. \n\nHappy fucking New Year indeed."
    ],
    "authorname": "SluttyBisexualGuy",
    "tags": [
        "bisexual",
        "bisexual male",
        "bisexual female",
        "bi orgy",
        "first time bi",
        "first time gay",
        "sex party",
        "bi encouragement",
        "gay seduction",
        "mmff"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/bisexual-orgy-newbies"
}